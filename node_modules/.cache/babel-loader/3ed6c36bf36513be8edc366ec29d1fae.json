{"ast":null,"code":"import { Widget, BodyWidget, TableRowWidget, TableWidget, LineWidget, ElementBox, TextElementBox, ListTextElementBox, ImageElementBox, ParagraphWidget, TableCellWidget, FieldElementBox, BlockContainer, BookmarkElementBox, CommentCharacterElementBox } from '../index';\nimport { HelperMethods } from '../index';\nimport { Point } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/* eslint-disable */\n/**\n * @private\n */\nvar TextPosition = /** @class */function () {\n  function TextPosition(owner) {\n    /**\n     * @private\n     */\n    this.location = new Point(0, 0);\n    /**\n     * @private\n     */\n    this.isUpdateLocation = true;\n    this.owner = owner;\n    this.documentHelper = this.owner.documentHelper;\n  }\n  Object.defineProperty(TextPosition.prototype, \"paragraph\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.currentWidget.paragraph;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"isAtParagraphStart\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.offset === this.owner.selectionModule.getStartOffset(this.paragraph);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"isAtParagraphEnd\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.owner.selectionModule.isParagraphLastLine(this.currentWidget) && this.offset === this.owner.selectionModule.getLineLength(this.currentWidget);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"isCurrentParaBidi\", {\n    /**\n     * @private\n     */\n    get: function () {\n      if (!isNullOrUndefined(this.currentWidget.paragraph)) {\n        return this.currentWidget.paragraph.paragraphFormat.bidi;\n      }\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"selection\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.owner.selectionModule;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"hierarchicalPosition\", {\n    /**\n     * Gets the hierarchical position of logical text position in the document\n     *\n     * @returns {string}\n     */\n    get: function () {\n      return this.getHierarchicalIndexInternal();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextPosition.prototype, \"viewer\", {\n    get: function () {\n      return this.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Return clone of current text position\n   *\n   * @private\n   */\n  TextPosition.prototype.clone = function () {\n    var textPosition = new TextPosition(this.owner);\n    textPosition.currentWidget = this.currentWidget;\n    textPosition.offset = this.offset;\n    textPosition.location = this.location;\n    return textPosition;\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.containsRtlText = function (widget) {\n    for (var i = 0; i < widget.children.length; i++) {\n      if (widget.children[i].isRightToLeft) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Set text position for paragraph and inline\n   *\n   * @private\n   */\n  TextPosition.prototype.setPositionForSelection = function (line, element, index, physicalLocation) {\n    //Set the start end position\n    var isParagraphEnd = false;\n    if (isNullOrUndefined(element)) {\n      this.currentWidget = line;\n    } else {\n      this.currentWidget = element.line;\n      if (element.nextNode instanceof FieldElementBox && index > element.length) {\n        isParagraphEnd = this.selection.isLastRenderedInline(element, element.length);\n      }\n    }\n    this.location = physicalLocation;\n    if (isParagraphEnd) {\n      this.offset = this.selection.getParagraphLength(this.currentWidget.paragraph) + 1;\n    } else {\n      this.offset = this.currentWidget.getOffset(element, index);\n    }\n  };\n  /**\n   * Set text position\n   *\n   * @private\n   */\n  TextPosition.prototype.setPositionFromLine = function (line, offset, location) {\n    this.currentWidget = line;\n    this.offset = offset;\n    if (location instanceof Point) {\n      this.location.copy(location);\n    }\n  };\n  /**\n   * Set text position\n   *\n   * @private\n   */\n  TextPosition.prototype.setPosition = function (line, positionAtStart) {\n    this.currentWidget = line;\n    this.offset = positionAtStart ? this.selection.getStartOffset(line.paragraph) : line.paragraph.lastChild.getEndOffset() + 1;\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Set position for text position\n   *\n   * @private\n   */\n  TextPosition.prototype.setPositionInternal = function (textPosition) {\n    this.currentWidget = textPosition.currentWidget;\n    this.offset = textPosition.offset;\n    this.location = textPosition.location;\n  };\n  /**\n   * Set position for current index\n   *\n   * @private\n   */\n  TextPosition.prototype.setPositionForCurrentIndex = function (hierarchicalIndex) {\n    var index = {\n      index: hierarchicalIndex\n    };\n    var paragraph = this.getParagraphWidget(index); //ref hierarchicalIndex\n    this.offset = parseFloat(index.index);\n    this.setPositionParagraph(paragraph, this.offset);\n  };\n  /**\n   * Get Page\n   *\n   */\n  TextPosition.prototype.getPage = function (position) {\n    var page;\n    var index = position.index.indexOf(';');\n    var newValue = '0';\n    if (index >= 0) {\n      newValue = position.index.substring(0, index);\n      position.index = position.index.substring(index).replace(';', '');\n    }\n    index = parseInt(newValue, 10);\n    page = this.documentHelper.pages[index];\n    return page;\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.getParagraphWidget = function (position) {\n    if (isNullOrUndefined(position.index)) {\n      return undefined;\n    }\n    var page = this.getPage(position);\n    var child = this.getLineWidget(undefined, position, page);\n    return child;\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.getLineWidget = function (widget, position, page) {\n    if (isNullOrUndefined(position.index)) {\n      return undefined;\n    }\n    var index = position.index.indexOf(';');\n    var value = '0';\n    if (index >= 0) {\n      value = position.index.substring(0, index);\n      position.index = position.index.substring(index).replace(';', '');\n    }\n    if (value === 'H' || value === 'F') {\n      if (value === 'H') {\n        widget = page.headerWidget;\n      } else {\n        widget = page.footerWidget;\n      }\n    } else if (value === 'FN' || value === 'EN') {\n      var index1 = position.index.indexOf(';');\n      var value1 = position.index.substring(0, index1);\n      position.index = position.index.substring(index1).replace(';', '');\n      if (value === 'FN') {\n        widget = page.footnoteWidget.bodyWidgets[value1];\n      } else {\n        widget = page.endnoteWidget.bodyWidgets[value1];\n      }\n    } else if (!isNullOrUndefined(page)) {\n      if (parseInt(value, 10) < page.bodyWidgets.length) {\n        widget = page.bodyWidgets[parseInt(value, 10)];\n      } else {\n        widget = page.bodyWidgets[0];\n      }\n    }\n    index = parseInt(value, 10);\n    if (widget instanceof BlockContainer) {\n      index = position.index.indexOf(';');\n      value = '0';\n      value = position.index.substring(0, index);\n      position.index = position.index.substring(index).replace(';', '');\n      index = parseInt(value, 10);\n    }\n    if (widget instanceof TableRowWidget && index >= widget.childWidgets.length) {\n      position.index = '0;0';\n      index = widget.childWidgets.length - 1;\n    }\n    if (index >= 0 && index < widget.childWidgets.length) {\n      var child = widget.childWidgets[index];\n      if (child instanceof LineWidget) {\n        if (position.index.indexOf(';') > 0) {\n          position.index = '0';\n        }\n        return child;\n      }\n      if (child instanceof Widget) {\n        if (position.index.indexOf(';') > 0) {\n          return this.getLineWidget(child, position);\n        } else {\n          //If table is shifted to previous text position then return the first paragraph within table.\n          if (child instanceof TableWidget) {\n            return this.getLineWidget(this.documentHelper.getFirstParagraphInFirstCell(child), position);\n          } else if (child instanceof TableRowWidget && position.index.indexOf(';') === -1) {\n            return this.documentHelper.getFirstParagraphInFirstCell(child.ownerTable).childWidgets[0];\n          }\n          return undefined;\n        }\n      }\n    } else if (widget.nextRenderedWidget instanceof Widget) {\n      position.index = '0';\n      if (widget.nextRenderedWidget instanceof TableWidget) {\n        return this.documentHelper.getFirstParagraphInFirstCell(widget.nextRenderedWidget).firstChild;\n      }\n      return this.getLineWidget(widget.nextRenderedWidget, position);\n    }\n    return undefined;\n  };\n  /**\n   * Update physical location of paragraph\n   *\n   * @private\n   */\n  TextPosition.prototype.updatePhysicalPosition = function (moveNextLine) {\n    if (this.currentWidget && this.owner.isLayoutEnabled && this.isUpdateLocation) {\n      this.location = this.selection.getPhysicalPositionInternal(this.currentWidget, this.offset, moveNextLine);\n    }\n  };\n  /**\n   * Return true if text position are in same paragraph and offset\n   *\n   * @private\n   */\n  TextPosition.prototype.isAtSamePosition = function (textPosition) {\n    return this.currentWidget === textPosition.currentWidget && this.offset === textPosition.offset;\n  };\n  /**\n   * Return true if text position is in same paragraph index\n   * @private\n   */\n  TextPosition.prototype.isInSameParagraphIndex = function (textPosition) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    return this.paragraph.index === textPosition.paragraph.index;\n  };\n  /**\n   * Return true if text position is in same paragraph\n   *\n   * @private\n   */\n  TextPosition.prototype.isInSameParagraph = function (textPosition) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    return this.paragraph === textPosition.paragraph;\n  };\n  /**\n   * Return true if start and end is in same list\n   *\n   * @private\n   */\n  TextPosition.prototype.isInSameListParagraph = function (textPosition) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    return this.paragraph.paragraphFormat.listFormat.listId === textPosition.paragraph.paragraphFormat.listFormat.listId;\n  };\n  /**\n   * Return true is current text position exist before given text position\n   *\n   * @private\n   */\n  TextPosition.prototype.isExistBefore = function (textPosition) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    if (this.currentWidget === textPosition.currentWidget) {\n      return this.offset < textPosition.offset;\n    }\n    var currentParagraph = this.currentWidget.paragraph;\n    var paragraph = textPosition.currentWidget.paragraph;\n    if (currentParagraph === paragraph) {\n      return currentParagraph.childWidgets.indexOf(this.currentWidget) < paragraph.childWidgets.indexOf(textPosition.currentWidget);\n    }\n    if (currentParagraph.containerWidget === paragraph.containerWidget) {\n      if (currentParagraph.isInsideTable) {\n        return currentParagraph.associatedCell.childWidgets.indexOf(currentParagraph) < paragraph.associatedCell.childWidgets.indexOf(paragraph);\n        //handle after header footer implementation\n        // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n        //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) <\n        //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n      } else {\n        return currentParagraph.containerWidget.childWidgets.indexOf(currentParagraph) < paragraph.containerWidget.childWidgets.indexOf(paragraph);\n      }\n    }\n    return this.owner.selectionModule.isExistBefore(currentParagraph, paragraph);\n  };\n  /**\n   * Return true is current text position exist after given text position\n   *\n   * @private\n   */\n  TextPosition.prototype.isExistAfter = function (textPosition) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    if (this.currentWidget === textPosition.currentWidget) {\n      return this.offset > textPosition.offset;\n    }\n    if (this.currentWidget.paragraph === textPosition.currentWidget.paragraph) {\n      return this.currentWidget.paragraph.childWidgets.indexOf(this.currentWidget) > textPosition.currentWidget.paragraph.childWidgets.indexOf(textPosition.currentWidget);\n    }\n    var startParagraph = this.currentWidget.paragraph;\n    var endParagraph = textPosition.currentWidget.paragraph;\n    if (!isNullOrUndefined(startParagraph) && !isNullOrUndefined(endParagraph)) {\n      if (startParagraph.containerWidget instanceof BodyWidget && endParagraph.containerWidget instanceof BodyWidget && startParagraph.containerWidget === endParagraph.containerWidget) {\n        if (startParagraph.isInsideTable && endParagraph.isInsideTable) {\n          return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) > endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n          // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n          //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) >\n          //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n        } else {\n          return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) > endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n        }\n      }\n      return this.owner.selectionModule.isExistAfter(startParagraph, endParagraph);\n    }\n    return false;\n  };\n  /**\n   * Return hierarchical index of current text position\n   *\n   * @private\n   */\n  TextPosition.prototype.getHierarchicalIndexInternal = function () {\n    return this.getHierarchicalIndex(this.currentWidget, this.offset.toString());\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.getHierarchicalIndex = function (line, hierarchicalIndex) {\n    var node = line;\n    if (node) {\n      return node.getHierarchicalIndex(hierarchicalIndex);\n    }\n    return hierarchicalIndex;\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.setPositionParagraph = function (line, offsetInLine) {\n    this.currentWidget = line;\n    this.offset = offsetInLine;\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.setPositionForLineWidget = function (lineWidget, offset) {\n    var lineLength = this.selection.getLineLength(lineWidget);\n    var lineIndex = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n    if (lineWidget.isLastLine()) {\n      if (!isNullOrUndefined(lineWidget.paragraph.bodyWidget.footNoteReference)) {\n        lineLength = lineLength + lineWidget.paragraph.bodyWidget.footNoteReference.text.length;\n      } else {\n        lineLength = lineLength + 1;\n      }\n    }\n    if (offset > lineLength) {\n      var nextLineWidget = void 0;\n      if (lineIndex >= lineWidget.paragraph.childWidgets.length - 1) {\n        var nextBlock = this.selection.getNextRenderedBlock(lineWidget.paragraph);\n        if (nextBlock && nextBlock.index === lineWidget.paragraph.index) {\n          nextLineWidget = nextBlock.firstChild;\n        }\n      } else {\n        nextLineWidget = lineWidget.paragraph.childWidgets[lineIndex + 1];\n      }\n      this.setPositionForLineWidget(nextLineWidget, offset - lineLength);\n      return;\n    } else if (offset < 0) {\n      var prevLine = lineWidget.paragraph.childWidgets[lineIndex - 1];\n      var currentOffSet = this.selection.getLineLength(prevLine) + offset;\n      this.setPositionForLineWidget(prevLine, currentOffSet);\n      return;\n    } else {\n      this.currentWidget = lineWidget;\n      this.offset = offset;\n    }\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * move to next text position\n   *\n   * @private\n   */\n  TextPosition.prototype.moveNextPosition = function (isNavigate) {\n    if (isNullOrUndefined(isNavigate)) {\n      isNavigate = true;\n    }\n    var inline = this.selection.getNextStartInline(this.currentWidget, this.offset);\n    if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n      if (isNavigate) {\n        this.moveNextPositionInternal(inline);\n        this.moveNextPosition();\n        return;\n      } else {\n        var line = inline.fieldEnd.line;\n        var fieldEnd = inline.fieldEnd;\n        var fieldEndOffset = line.getOffset(fieldEnd, 1);\n        var fieldEndIndex = this.getHierarchicalIndex(line, fieldEndOffset.toString());\n        if (TextPosition.isForwardSelection(this.selection.end.getHierarchicalIndexInternal(), fieldEndIndex)) {\n          //If field end is after selection end, extend selection end to field end.\n          this.selection.end.moveToInline(inline.fieldEnd, 1);\n          return;\n        }\n        this.moveToInline(inline.fieldEnd, 1);\n      }\n    }\n    var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n    var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n    var index = 0;\n    if (nextOffset > this.offset) {\n      this.offset = nextOffset;\n      var info = this.currentWidget.getInline(this.offset, index);\n      inline = info.element;\n      index = info.index;\n      if (!isNullOrUndefined(inline) && index === inline.length && (inline.nextNode instanceof FieldElementBox || inline.nextNode instanceof BookmarkElementBox)) {\n        var nextValidInline = this.selection.getNextValidElement(inline.nextNode);\n        //Moves to field end mark or Bookmark end.\n        if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 1 || nextValidInline instanceof BookmarkElementBox && nextValidInline.bookmarkType === 1) {\n          inline = nextValidInline;\n          this.currentWidget = inline.line;\n          this.offset = this.currentWidget.getOffset(inline, this.documentHelper.isFormFillProtectedMode ? 0 : 1);\n        }\n      }\n    } else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n      var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n      if (nextLineWidget) {\n        this.currentWidget = nextLineWidget;\n        this.offset = this.selection.getStartLineOffset(this.currentWidget);\n      }\n      var inlineObj = this.currentWidget.getInline(this.offset, index);\n      inline = inlineObj.element;\n      index = inlineObj.index;\n      if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n        this.offset++;\n      }\n    } else {\n      this.updateOffsetToNextParagraph(index, false);\n    }\n    //Gets physical position in current page.\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Move text position to previous paragraph inside table\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToPreviousParagraphInTable = function (selection) {\n    var previousParagraph;\n    var currentPara = this.currentWidget.paragraph;\n    if (currentPara.isInsideTable) {\n      previousParagraph = selection.getPreviousSelectionCell(currentPara.associatedCell);\n    } else {\n      previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n    }\n    if (isNullOrUndefined(previousParagraph)) {\n      return;\n    }\n    this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n    this.offset = this.currentWidget.getEndOffset() + 1;\n  };\n  TextPosition.prototype.updateOffsetToNextParagraph = function (indexInInline, isHighlight) {\n    //Moves to owner and get next paragraph.\n    var inline;\n    var positionAtStart = false;\n    var nextParagraph = undefined;\n    var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n    if (!isHighlight) {\n      nextParagraph = this.selection.getNextParagraphBlock(this.paragraph);\n    } else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n      var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n      if (nextLineWidget) {\n        this.currentWidget = nextLineWidget;\n        this.offset = 1;\n      }\n    } else {\n      nextParagraph = this.selection.getNextSelectionBlock(this.paragraph);\n      if (!isNullOrUndefined(nextParagraph)) {\n        if (nextParagraph.containerWidget instanceof TableCellWidget) {\n          if (this.selection.start.paragraph.isInsideTable) {\n            var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, nextParagraph.associatedCell);\n            positionAtStart = !containerCell.ownerTable.contains(nextParagraph.associatedCell);\n          } else {\n            positionAtStart = true;\n          }\n        }\n      }\n    }\n    if (!isNullOrUndefined(nextParagraph) && nextParagraph.childWidgets.length > 0) {\n      if (!positionAtStart) {\n        this.currentWidget = nextParagraph.firstChild;\n        this.offset = isHighlight ? 1 : this.selection.getStartLineOffset(this.currentWidget);\n      } else {\n        this.currentWidget = nextParagraph.childWidgets[nextParagraph.childWidgets.length - 1];\n        this.offset = this.selection.getLineLength(this.currentWidget) + 1;\n      }\n    }\n    var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n    inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n      this.offset++;\n    }\n  };\n  TextPosition.prototype.updateOffsetToPrevPosition = function (index, isHighlight) {\n    var inlineInfo;\n    var inline;\n    var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n    var prevOffset = this.selection.getPreviousValidOffset(this.currentWidget.paragraph, this.offset);\n    if (this.offset > prevOffset) {\n      this.offset = prevOffset;\n    } else if (lineIndex > 0) {\n      var prevLineWidget = this.paragraph.childWidgets[lineIndex - 1];\n      if (prevLineWidget) {\n        this.currentWidget = prevLineWidget;\n        var endOffset = this.currentWidget.getEndOffset();\n        this.offset = endOffset > 0 ? endOffset - 1 : endOffset;\n      }\n    } else {\n      //Moves to owner and get previous paragraph.\n      var previousParagraph = undefined;\n      var positionAtStart = false;\n      if (!isHighlight) {\n        previousParagraph = this.selection.getPreviousParagraphBlock(this.paragraph);\n      } else {\n        previousParagraph = this.selection.getPreviousSelectionBlock(this.paragraph);\n        if (!isNullOrUndefined(previousParagraph)) {\n          if (previousParagraph.containerWidget instanceof TableCellWidget) {\n            if (this.selection.start.paragraph.isInsideTable) {\n              var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, previousParagraph.associatedCell);\n              positionAtStart = !containerCell.ownerTable.contains(previousParagraph.associatedCell);\n            } else {\n              positionAtStart = true;\n            }\n          }\n        }\n      }\n      if (!isNullOrUndefined(previousParagraph)) {\n        if (!positionAtStart) {\n          this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n          // line end with page break and updating offset before page break.\n          this.offset = this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak ? this.currentWidget.getEndOffset() - 1 : this.currentWidget.getEndOffset();\n        } else {\n          this.currentWidget = previousParagraph.firstChild;\n          this.offset = this.selection.getStartLineOffset(this.currentWidget);\n        }\n      }\n    }\n    index = 0;\n    inlineInfo = this.currentWidget.getInline(this.offset, index);\n    inline = inlineInfo.element;\n    index = inlineInfo.index;\n    if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n      this.offset++;\n    }\n    if (inline instanceof FieldElementBox) {\n      //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n      var previousInline = this.selection.getPreviousValidElement(inline);\n      if (!isNullOrUndefined(previousInline)) {\n        inline = previousInline;\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, inline.length);\n        if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n          this.offset--;\n        }\n      }\n    }\n    //Gets physical position in current page.\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Moves the text position to start of the next paragraph.\n   */\n  TextPosition.prototype.moveToNextParagraphStartInternal = function () {\n    var paragraph = this.currentWidget.paragraph;\n    if (!isNullOrUndefined(this.selection.getNextParagraphBlock(paragraph))) {\n      this.currentWidget = this.selection.getNextParagraphBlock(paragraph).firstChild;\n      this.offset = this.selection.getStartOffset(paragraph);\n      this.updatePhysicalPosition(true);\n    }\n  };\n  /**\n   * Move to previous position\n   *\n   * @private\n   */\n  TextPosition.prototype.movePreviousPosition = function () {\n    var index = 0;\n    var inlineInfo = this.currentWidget.getInline(this.offset, index);\n    var inline = inlineInfo.element;\n    index = inlineInfo.index;\n    var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n    if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin) || inline instanceof BookmarkElementBox && inline.bookmarkType === 1) {\n      this.movePreviousPositionInternal(inline);\n    }\n    this.updateOffsetToPrevPosition(index, false);\n  };\n  /**\n   * Move to next position\n   *\n   * @private\n   */\n  TextPosition.prototype.moveNextPositionInternal = function (fieldBegin) {\n    var inline;\n    if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n      inline = fieldBegin.fieldEnd;\n    } else {\n      inline = fieldBegin.fieldSeparator;\n      this.currentWidget = inline.line;\n      if (this.currentWidget === fieldBegin.fieldEnd.line && !this.selection.hasValidInline(this.paragraph, inline, fieldBegin.fieldEnd)) {\n        inline = fieldBegin.fieldEnd;\n      }\n    }\n    this.currentWidget = inline.line;\n    this.offset = this.currentWidget.getOffset(inline, 1);\n  };\n  /**\n   * Move text position backward\n   *\n   * @private\n   */\n  TextPosition.prototype.moveBackward = function () {\n    var indexInInline = 0;\n    var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    if (!this.owner.selectionModule.isEmpty && !isNullOrUndefined(inline)) {\n      var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n      if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n        var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var fieldEndOffset = nextInline.fieldEnd.line.getOffset(nextInline.fieldEnd, 1);\n        var fieldEndIndex = this.getHierarchicalIndex(nextInline.fieldEnd.line, fieldEndOffset.toString());\n        if (!TextPosition.isForwardSelection(fieldEndIndex, hierarchicalIndex)) {\n          //If field end is after selection start, move selection start to field end.\n          this.owner.selectionModule.start.setPositionParagraph(nextInline.fieldEnd.line, fieldEndOffset);\n          return;\n        }\n      }\n    }\n    if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n      var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n      var fieldEndOffset = inline.line.getOffset(inline, 1);\n      var fieldEndIndex = this.getHierarchicalIndex(inline.line, fieldEndOffset.toString());\n      if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldEndIndex)) {\n        //If field end is after selection start, extend selection end to field begin.\n        var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n        this.currentWidget = inline.fieldBegin.line;\n        this.offset = fieldBeginOffset;\n        //Updates physical position in current page.\n        this.updatePhysicalPosition(true);\n        return;\n      }\n      this.movePreviousPositionInternal(inline);\n    }\n    this.updateOffsetToPrevPosition(indexInInline, true);\n  };\n  /**\n   * Move text position forward\n   *\n   * @private\n   */\n  TextPosition.prototype.moveForward = function () {\n    var indexInInline = 0;\n    var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    if (!isNullOrUndefined(inline)) {\n      if (!this.owner.selectionModule.isEmpty && indexInInline === inline.length && inline instanceof FieldElementBox && inline.fieldType === 1) {\n        var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n        var fieldBeginIndex = this.getHierarchicalIndex(inline.fieldBegin.line, fieldBeginOffset.toString());\n        if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldBeginIndex)) {\n          //If field begin is before selection start, move selection start to field begin.\n          this.owner.selectionModule.start.setPositionParagraph(inline.fieldBegin.line, fieldBeginOffset);\n          return;\n        }\n      }\n      inline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n    }\n    if (inline instanceof FieldElementBox && !isNullOrUndefined(inline.fieldEnd)) {\n      var selectionStartParagraph = this.owner.selectionModule.start.paragraph;\n      var selectionStartIndex = 0;\n      var selectionStartInlineObj = selectionStartParagraph.getInline(this.owner.selectionModule.start.offset, selectionStartIndex);\n      var selectionStartInline = selectionStartInlineObj.element;\n      selectionStartIndex = selectionStartInlineObj.index;\n      var nextRenderInline = this.selection.getNextRenderedElementBox(selectionStartInline, selectionStartIndex);\n      if (nextRenderInline === inline) {\n        this.moveNextPositionInternal(inline);\n      } else {\n        //If selection start is before field begin, extend selection end to field end.\n        inline = inline.fieldEnd;\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, 1);\n        //Updates physical position in current page.\n        this.updatePhysicalPosition(true);\n        return;\n      }\n    } else if (inline instanceof FieldElementBox && (inline.fieldType === 0 || inline.fieldType === 1)) {\n      this.currentWidget = inline.line;\n      this.offset = this.currentWidget.getOffset(inline, 1);\n    }\n    indexInInline = 0;\n    var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n    var length = this.selection.getLineLength(this.currentWidget);\n    var isParagraphEnd = this.selection.isParagraphLastLine(this.currentWidget);\n    if (this.offset < nextOffset) {\n      this.offset = nextOffset;\n      var inlineObj_1 = this.currentWidget.getInline(this.offset, indexInInline);\n      inline = inlineObj_1.element;\n      indexInInline = inlineObj_1.index;\n      if (!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox) {\n        var nextValidInline = this.selection.getNextValidElement(inline.nextNode);\n        //Moves to field end mark.\n        if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 1) {\n          inline = nextValidInline;\n          this.offset = this.currentWidget.getOffset(inline, 1);\n        }\n      }\n    } else if (this.offset === nextOffset && inline instanceof FieldElementBox && inline.fieldType === 1 && inline.previousNode instanceof ImageElementBox) {\n      this.offset = nextOffset;\n    } else if (this.offset === nextOffset && this.offset < length + 1 && isParagraphEnd) {\n      this.offset = length + 1;\n    } else {\n      this.updateOffsetToNextParagraph(indexInInline, true);\n    }\n    //Gets physical position in current page.\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Move to given inline\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToInline = function (inline, index) {\n    this.currentWidget = inline.line;\n    this.offset = this.currentWidget.getOffset(inline, index);\n    //Updates physical position in current page.\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Return true is start element exist before end element\n   *\n   * @private\n   */\n  TextPosition.isForwardSelection = function (start, end) {\n    if (start === end) {\n      return true;\n    }\n    start = start.replace(/S;/g, '');\n    end = end.replace(/S;/g, '');\n    start = start.replace(/C;/g, '');\n    end = end.replace(/C;/g, '');\n    start = start.replace(/H;/g, '');\n    end = end.replace(/H;/g, '');\n    start = start.replace(/F;/g, '');\n    end = end.replace(/F;/g, '');\n    start = start.replace(/FN;/g, '');\n    end = end.replace(/FN;/g, '');\n    start = start.replace(/EN;/g, '');\n    end = end.replace(/EN;/g, '');\n    var selectionStart = start.split(';');\n    var selectionEnd = end.split(';');\n    var length = selectionStart.length;\n    if (length > selectionEnd.length) {\n      length = selectionEnd.length - 1;\n    }\n    for (var i = 0; i < length; i++) {\n      var startOffset = parseFloat(selectionStart[i]);\n      var endOffset = parseFloat(selectionEnd[i]);\n      if (startOffset !== endOffset) {\n        return startOffset < endOffset;\n      }\n    }\n    return false;\n  };\n  /**\n   * Move to previous position offset\n   *\n   * @param fieldEnd\n   * @private\n   */\n  TextPosition.prototype.movePreviousPositionInternal = function (fieldEnd) {\n    var inline;\n    if (fieldEnd instanceof FieldElementBox && isNullOrUndefined(fieldEnd.fieldSeparator)) {\n      inline = this.selection.getPreviousValidElement(fieldEnd.fieldBegin);\n    } else {\n      inline = this.selection.getPreviousValidElement(fieldEnd);\n    }\n    this.currentWidget = inline.line;\n    var index = inline instanceof FieldElementBox || inline instanceof BookmarkElementBox && inline.bookmarkType === 1 ? 0 : inline.length;\n    this.offset = this.currentWidget.getOffset(inline, index);\n  };\n  /**\n   * Moves the text position to start of the word.\n   *\n   * @param type\n   * @private\n   */\n  TextPosition.prototype.moveToWordStartInternal = function (type) {\n    var endOffset = this.currentWidget.getEndOffset();\n    var currentPara = this.currentWidget.paragraph;\n    var selection = this.selection;\n    if (type === 2 && (this.offset === endOffset || this.offset === endOffset + 1)) {\n      return;\n    }\n    if (this.offset === endOffset + 1) {\n      this.offset = endOffset;\n    } else if (this.offset === selection.getStartOffset(currentPara) && this.currentWidget === currentPara.childWidgets[0]) {\n      var previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n      if (isNullOrUndefined(previousParagraph)) {\n        return;\n      }\n      this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n      this.offset = this.currentWidget.getEndOffset();\n    } else {\n      if (this.offset === selection.getStartLineOffset(this.currentWidget)) {\n        var lineIndex = currentPara.childWidgets.indexOf(this.currentWidget);\n        if (lineIndex - 1 >= 0) {\n          this.currentWidget = currentPara.childWidgets[lineIndex - 1];\n          this.offset = this.currentWidget.getEndOffset();\n        }\n      }\n      var isStarted = false;\n      var endSelection = false;\n      var indexInInline = 0;\n      var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      this.getPreviousWordOffset(inline, selection, indexInInline, type, inline instanceof FieldElementBox && inline.fieldType === 1, isStarted, endSelection, this);\n    }\n    if (type === 1) {\n      this.calculateOffset();\n    }\n    this.updatePhysicalPosition(true);\n  };\n  TextPosition.prototype.getNextWordOffset = function (inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    if (inline instanceof TextElementBox) {\n      this.getNextWordOffsetSpan(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (inline instanceof ImageElementBox) {\n      this.getNextWordOffsetImage(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n      this.getNextWordOffsetFieldBegin(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 2 || inline instanceof BookmarkElementBox) {\n      this.getNextWordOffsetFieldSeparator(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n      this.getNextWordOffsetFieldEnd(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (inline instanceof CommentCharacterElementBox) {\n      this.getNextWordOffsetComment(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetFieldBegin = function (fieldBegin, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n    var endOffset = startOffset + fieldBegin.length;\n    if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n      this.getNextWordOffsetFieldEnd(fieldBegin.fieldEnd, 0, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (type === 0) {\n      this.getNextWordOffsetFieldSeparator(fieldBegin.fieldSeparator, 0, type, isInField, endSelection, endPosition, excludeSpace);\n    } else if (!isNullOrUndefined(fieldBegin.fieldEnd)) {\n      var inline = fieldBegin.fieldSeparator;\n      if (inline.line.paragraph === fieldBegin.fieldEnd.line.paragraph && !this.selection.hasValidInline(inline.line.paragraph, inline, fieldBegin.fieldEnd)) {\n        inline = fieldBegin.fieldEnd;\n      }\n      this.getNextWordOffset(inline, 0, type, !(endPosition.paragraph === fieldBegin.line.paragraph && endPosition.offset === startOffset), endSelection, endPosition, excludeSpace);\n      if (endSelection && !isNullOrUndefined(fieldBegin.fieldSeparator) && endPosition.paragraph === fieldBegin.line.paragraph && endPosition.offset === fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length)) {\n        endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n        return;\n      }\n      if (!endSelection) {\n        endPosition.setPositionParagraph(fieldBegin.fieldEnd.line, fieldBegin.fieldEnd.line.getOffset(fieldBegin.fieldEnd, fieldBegin.fieldEnd.length));\n      }\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetImage = function (image, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    if (isInField) {\n      endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n      endSelection = false;\n      return;\n    }\n    if (indexInInline === 0) {\n      var startOffset = image.line.getOffset(image, 0);\n      endSelection = true;\n      if (endPosition.offset === startOffset) {\n        if (isNullOrUndefined(image.nextNode)) {\n          endPosition.setPositionParagraph(image.line, startOffset + image.length);\n        } else {\n          this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n      } else {\n        endPosition.setPositionParagraph(image.line, startOffset);\n      }\n    } else if (!isNullOrUndefined(image.nextNode)) {\n      this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetSpan = function (span, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    if (span.text === '\\t' || span.text === '\\v') {\n      if (isInField) {\n        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n        endSelection = false;\n        return;\n      }\n      if (indexInInline === 0) {\n        endSelection = true;\n        var startOffset = span.line.getOffset(span, 0);\n        if (endPosition.offset === startOffset) {\n          endPosition.setPositionParagraph(span.line, startOffset + span.length);\n        } else {\n          endPosition.setPositionParagraph(span.line, startOffset);\n        }\n      } else if (!isNullOrUndefined(span.nextNode)) {\n        this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n      }\n    } else {\n      var wordEndIndex = 0;\n      if (indexInInline === 0 && endSelection && HelperMethods.wordSplitCharacters.indexOf(span.text[0]) === -1) {\n        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n        if (isInField) {\n          return;\n        }\n      } else if (indexInInline < span.length) {\n        var txt = indexInInline > 0 && span.text.length - 1 >= indexInInline ? span.text.slice(indexInInline, span.length) : span.text;\n        wordEndIndex = HelperMethods.indexOfAny(txt, HelperMethods.wordSplitCharacters);\n        if (wordEndIndex === -1 && span.nextNode instanceof CommentCharacterElementBox && isNullOrUndefined(span.nextNode.nextNode)) {\n          wordEndIndex = span.length;\n        }\n        if (wordEndIndex !== -1) {\n          if (isInField) {\n            endSelection = false;\n            return;\n          }\n          var offset = span.line.getOffset(span, wordEndIndex + indexInInline);\n          var spaceCharacter = [' ', '　'];\n          if ((excludeSpace || spaceCharacter.indexOf(txt[wordEndIndex]) === -1) && !endSelection && span.line.paragraph === endPosition.paragraph && offset !== endPosition.offset) {\n            endSelection = true;\n            endPosition.setPositionParagraph(span.line, offset);\n            return;\n          }\n          var isSpaceCharacter = false;\n          if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1) {\n            isSpaceCharacter = true;\n            wordEndIndex++;\n          }\n          while (wordEndIndex < txt.length && !isSpaceCharacter) {\n            if (HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex]) === -1) {\n              break;\n            }\n            wordEndIndex++;\n            if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1 && HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex + 1]) !== -1) {\n              wordEndIndex++;\n              break;\n            }\n          }\n          endSelection = true;\n          var nextNodeText = void 0;\n          if (!isNullOrUndefined(span.nextNode)) {\n            nextNodeText = span.nextNode.text;\n          }\n          if (wordEndIndex < txt.length || !isNullOrUndefined(nextNodeText) && span.line == span.nextNode.line && spaceCharacter.indexOf(txt[txt.length - 1]) !== -1 && spaceCharacter.indexOf(nextNodeText[0]) === -1) {\n            endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n          } else if (!isNullOrUndefined(span.nextNode)) {\n            this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n          } else {\n            endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n          }\n        } else if (!isNullOrUndefined(span.nextNode)) {\n          this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        } else {\n          endPosition.setPositionParagraph(span.line, span.line.getEndOffset());\n        }\n      } else if (!isNullOrUndefined(span.nextNode)) {\n        this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n      }\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetFieldSeparator = function (fieldSeparator, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    if (!isNullOrUndefined(fieldSeparator.nextNode)) {\n      this.getNextWordOffset(fieldSeparator.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetComment = function (comment, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    if (!isNullOrUndefined(comment.nextNode)) {\n      this.getNextWordOffset(comment.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n    }\n  };\n  TextPosition.prototype.getNextWordOffsetFieldEnd = function (fieldEnd, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n    var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n    var endOffset = startOffset + fieldEnd.length;\n    if (endPosition.offset === startOffset) {\n      endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n      if (isNullOrUndefined(fieldEnd.nextNode)) {\n        return;\n      }\n    }\n    if (!isNullOrUndefined(fieldEnd.nextNode)) {\n      this.getNextWordOffset(fieldEnd.nextNode, 0, type, false, endSelection, endPosition, excludeSpace);\n      if (endPosition.offset === endOffset) {\n        endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n      }\n    } else {\n      endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n    }\n    endSelection = true;\n  };\n  TextPosition.prototype.getPreviousWordOffset = function (inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (inline instanceof TextElementBox) {\n      this.getPreviousWordOffsetSpan(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof ImageElementBox) {\n      this.getPreviousWordOffsetImage(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n      this.getPreviousWordOffsetFieldBegin(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n      this.getPreviousWordOffsetFieldSeparator(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n      this.getPreviousWordOffsetFieldEnd(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof BookmarkElementBox) {\n      this.getPreviousWordOffsetBookMark(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof ListTextElementBox && inline.previousNode) {\n      this.getPreviousWordOffsetSpan(inline.previousNode, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    } else if (inline instanceof CommentCharacterElementBox) {\n      this.getPreviousWordOffsetComment(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetBookMark = function (bookmark, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (bookmark.previousNode) {\n      if (bookmark.previousNode instanceof TextElementBox) {\n        var inline = bookmark.previousNode;\n        if (HelperMethods.lastIndexOfAny(inline.text, HelperMethods.wordSplitCharacters) !== inline.text.length - 1) {\n          this.getPreviousWordOffset(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        } else {\n          endPosition.setPositionParagraph(bookmark.line, bookmark.line.getOffset(bookmark, 0));\n        }\n      }\n    } else {\n      endPosition.setPositionParagraph(bookmark.line, selection.getStartLineOffset(bookmark.line));\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetFieldEnd = function (fieldEnd, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n    var endOffset = startOffset + fieldEnd.length;\n    if (isNullOrUndefined(fieldEnd.fieldSeparator)) {\n      this.getPreviousWordOffsetFieldBegin(fieldEnd.fieldBegin, selection, 0, type, isInField, isStarted, endSelection, endPosition);\n    } else if (type === 0 && !isNullOrUndefined(fieldEnd.previousNode)) {\n      var inline = fieldEnd.previousNode;\n      this.getPreviousWordOffset(inline, selection, inline.length, type, inline instanceof FieldElementBox && inline.fieldType === 1, isStarted, endSelection, endPosition);\n    } else if (!isNullOrUndefined(fieldEnd.fieldBegin) && type !== 0) {\n      var inline = fieldEnd.previousNode;\n      if (isNullOrUndefined(inline) || inline.line.paragraph === fieldEnd.fieldBegin.line.paragraph && !selection.hasValidInline(inline.line.paragraph, inline, fieldEnd.fieldBegin)) {\n        inline = fieldEnd.fieldBegin;\n      }\n      this.getPreviousWordOffset(inline, selection, inline.length, type, !(endPosition.paragraph === fieldEnd.line.paragraph && endPosition.offset === endOffset), isStarted, endSelection, endPosition);\n      if (endSelection && endPosition.paragraph === fieldEnd.line.paragraph && endPosition.offset === startOffset) {\n        endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n        return;\n      }\n      if (!endSelection) {\n        endPosition.setPositionParagraph(fieldEnd.fieldBegin.line, fieldEnd.fieldBegin.line.getOffset(fieldEnd.fieldBegin, 0));\n      }\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetFieldSeparator = function (fieldSeparator, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    this.getPreviousWordOffsetFieldBegin(fieldSeparator.fieldBegin, selection, fieldSeparator.fieldBegin.length, type, isInField, isStarted, endSelection, endPosition);\n  };\n  /* get previous word offset from comment\n  * @private\n  */\n  TextPosition.prototype.getPreviousWordOffsetComment = function (comment, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (comment.previousNode) {\n      var inline = comment.previousNode;\n      if (comment.previousNode instanceof TextElementBox && HelperMethods.lastIndexOfAny(inline.text, HelperMethods.wordSplitCharacters) !== inline.text.length - 1) {\n        this.getPreviousWordOffset(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n      } else {\n        this.getPreviousWordOffset(comment.previousNode, selection, comment.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n      }\n    } else {\n      endPosition.setPositionParagraph(comment.line, selection.getStartLineOffset(comment.line));\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetFieldBegin = function (fieldBegin, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n    var endOffset = startOffset + fieldBegin.length;\n    if (endPosition.offset === endOffset) {\n      endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n    }\n    if (!isNullOrUndefined(fieldBegin.previousNode)) {\n      this.getPreviousWordOffset(fieldBegin.previousNode, selection, fieldBegin.previousNode.length, type, false, isStarted, endSelection, endPosition);\n      if (endPosition.offset === startOffset) {\n        if (type !== 0 && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n          endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n        }\n      }\n    } else {\n      if (fieldBegin.fieldSeparator) {\n        endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n      } else {\n        endPosition.setPositionParagraph(fieldBegin.line, selection.getStartLineOffset(fieldBegin.line));\n      }\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetImage = function (image, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (isInField) {\n      endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n      endSelection = false;\n      return;\n    }\n    if (indexInInline === image.length) {\n      var endOffset = image.line.getOffset(image, image.length);\n      if (endOffset === endPosition.offset) {\n        endPosition.setPositionParagraph(image.line, endOffset - image.length);\n      } else {\n        endPosition.setPositionParagraph(image.line, endOffset);\n      }\n    } else if (!isNullOrUndefined(image.previousNode)) {\n      this.getPreviousWordOffset(image.previousNode, selection, image.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n    }\n  };\n  TextPosition.prototype.getPreviousWordOffsetSpan = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (span.text === '\\t' || span.text === '\\v') {\n      if (isInField) {\n        endSelection = false;\n        return;\n      }\n      if (indexInInline === span.length) {\n        endSelection = true;\n        var endOffset = span.line.getOffset(span, span.length);\n        if (endOffset === endPosition.offset) {\n          endPosition.setPositionParagraph(span.line, endOffset - span.length);\n        } else {\n          endPosition.setPositionParagraph(span.line, endOffset);\n        }\n      } else if (!isNullOrUndefined(span.previousNode)) {\n        this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n      }\n    } else {\n      var wordStartIndex = 0;\n      if (!isStarted) {\n        while (indexInInline > 0 && span.text[indexInInline - 1] === ' ') {\n          indexInInline--;\n        }\n        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n      }\n      if (indexInInline > 0) {\n        isStarted = true;\n        if (indexInInline === 0 && endSelection && HelperMethods.wordSplitCharacters.indexOf(span.text[0]) === -1) {\n          endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n          endSelection = true;\n          return;\n        }\n        var txt = span.text.length > indexInInline ? span.text.slice(0, indexInInline) : span.text;\n        wordStartIndex = HelperMethods.lastIndexOfAny(txt, HelperMethods.wordSplitCharacters);\n        if (wordStartIndex === -1 && span.previousElement instanceof CommentCharacterElementBox && isNullOrUndefined(span.previousNode.previousNode)) {\n          wordStartIndex = span.length;\n        }\n        if (wordStartIndex !== -1) {\n          if (isInField) {\n            endSelection = false;\n            return;\n          }\n          while (wordStartIndex > 0 && endSelection && txt[wordStartIndex] !== ' ' && HelperMethods.wordSplitCharacters.indexOf(txt[wordStartIndex - 1]) !== -1) {\n            wordStartIndex--;\n          }\n          if (txt[wordStartIndex] === ' ' || txt[wordStartIndex] === '　' || !endSelection) {\n            wordStartIndex++;\n          }\n          endSelection = true;\n          if (wordStartIndex > 0) {\n            var offset = span.line.getOffset(span, wordStartIndex);\n            if (span.line.paragraph === endPosition.paragraph && offset === endPosition.offset) {\n              this.getPreviousWordOffsetSpan(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n            } else {\n              endPosition.setPositionParagraph(span.line, offset);\n            }\n          } else if (span.previousNode instanceof TextElementBox) {\n            var previousNodeText = span.previousNode.text;\n            if (HelperMethods.wordSplitCharacters.indexOf(span.text[0]) !== -1 && HelperMethods.wordSplitCharacters.indexOf(previousNodeText[previousNodeText.length - 1]) === -1) {\n              var offset = span.line.getOffset(span, wordStartIndex);\n              endPosition.setPositionParagraph(span.line, offset);\n              return;\n            }\n            this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n          } else {\n            endPosition.setPositionParagraph(span.line, span.line.getOffset(span, 0));\n          }\n        } else {\n          this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n      } else {\n        this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n      }\n    }\n  };\n  TextPosition.prototype.setPreviousWordOffset = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n    if (span.previousNode instanceof ElementBox && span.line === span.previousNode.line) {\n      this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n    } else {\n      endPosition.setPositionParagraph(span.line, selection.getStartLineOffset(span.line));\n    }\n  };\n  /**\n   * Validate if text position is in field forward\n   *\n   * @private\n   */\n  TextPosition.prototype.validateForwardFieldSelection = function (currentIndex, selectionEndIndex) {\n    var textPosition = new TextPosition(this.owner);\n    textPosition.setPositionForCurrentIndex(currentIndex);\n    textPosition.isUpdateLocation = false;\n    var isPositionMoved = false;\n    if (this.selection.start.paragraph !== this.selection.end.paragraph || this.selection.start.offset === this.selection.getStartOffset(this.selection.start.paragraph)) {\n      // To select Paragraph mark similar to MS WORD\n      if (this.selection.end.offset === this.selection.end.currentWidget.getEndOffset() && this.selection.isParagraphLastLine(this.selection.end.currentWidget)) {\n        this.selection.end.setPositionParagraph(this.selection.end.currentWidget, this.selection.end.offset + 1);\n      }\n    }\n    while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(currentIndex, selectionEndIndex)) {\n      if (!isPositionMoved) {\n        textPosition.moveNextPosition(false);\n        var nextIndex = textPosition.getHierarchicalIndexInternal();\n        //Handled specifically to break infinite looping, if selection ends at last paragraph mark.\n        if (currentIndex === nextIndex) {\n          break;\n        }\n      }\n      var indexInInline = 0;\n      var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      if (!isNullOrUndefined(inline)) {\n        var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n        if (indexInInline === inline.length && inline instanceof FieldElementBox && inline.fieldType === 1) {\n          if (inline.line.getOffset(inline, 0) === this.offset) {\n            return;\n          }\n          var lineWidget = inline.fieldBegin.line;\n          var fieldBeginOffset = lineWidget.getOffset(inline.fieldBegin, 0);\n          var fieldBeginIndex = this.getHierarchicalIndex(lineWidget, fieldBeginOffset.toString());\n          if (!TextPosition.isForwardSelection(selectionStartIndex, fieldBeginIndex)) {\n            this.selection.start.setPositionParagraph(lineWidget, fieldBeginOffset);\n          }\n        }\n        var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n        if (!isNullOrUndefined(nextInline) && nextInline instanceof ElementBox) {\n          inline = nextInline;\n        }\n      }\n      isPositionMoved = inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd);\n      if (isPositionMoved) {\n        if (inline.line.getOffset(inline, 0) === this.offset) {\n          return;\n        }\n        var fieldEnd = inline.fieldEnd;\n        var paragraph = fieldEnd.line.paragraph;\n        var fieldEndOffset = fieldEnd.line.getOffset(fieldEnd, 1);\n        var fieldEndIndex = this.getHierarchicalIndex(fieldEnd.line, fieldEndOffset.toString());\n        if (!TextPosition.isForwardSelection(fieldEndIndex, selectionEndIndex)) {\n          //If selection end is after field begin, extend selection end to field end.\n          this.moveToInline(inline.fieldEnd, 1);\n          return;\n        }\n        textPosition.moveToInline(inline.fieldEnd, 1);\n      }\n      currentIndex = textPosition.getHierarchicalIndexInternal();\n    }\n  };\n  /**\n   * Validate if text position is in field backward\n   *\n   * @private\n   */\n  TextPosition.prototype.validateBackwardFieldSelection = function (currentIndex, selectionEndIndex) {\n    var textPosition = new TextPosition(this.owner);\n    textPosition.setPositionForCurrentIndex(currentIndex);\n    textPosition.isUpdateLocation = false;\n    var isSelectParaMark = false;\n    if (this.selection.start.paragraph !== this.selection.end.paragraph && this.selection.end.offset !== this.selection.getStartOffset(this.selection.start.paragraph) || this.documentHelper.isSelectionChangedOnMouseMoved && this.selection.isParagraphFirstLine(this.selection.end.currentWidget) && this.selection.end.offset === this.selection.getStartOffset(this.selection.start.paragraph) || (isNullOrUndefined(this.selection.start.paragraph.previousRenderedWidget) && this.selection.start.paragraph === this.selection.end.paragraph && this.selection.end.offset === this.selection.getStartOffset(this.selection.end.paragraph) || this.selection.start.paragraph !== this.selection.end.paragraph) && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset() && this.selection.start.currentWidget.isLastLine()) {\n      isSelectParaMark = true;\n    }\n    // To select Paragraph mark similar to MS WORD\n    if (isSelectParaMark && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset() && this.selection.isParagraphLastLine(this.selection.start.currentWidget)) {\n      this.selection.start.setPositionParagraph(this.selection.start.currentWidget, this.selection.start.offset + 1);\n    }\n    var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n    while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(selectionEndIndex, currentIndex)) {\n      var indexInInline = 0;\n      var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      if (!isNullOrUndefined(inline)) {\n        var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n        if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n          var paragraph = nextInline.fieldEnd.line;\n          var fieldEndOffset = paragraph.getOffset(nextInline.fieldEnd, 1);\n          var fieldEndIndex = this.getHierarchicalIndex(paragraph, fieldEndOffset.toString());\n          if (!TextPosition.isForwardSelection(fieldEndIndex, selectionStartIndex)) {\n            this.selection.start.setPositionParagraph(paragraph, fieldEndOffset);\n            selectionStartIndex = fieldEndIndex;\n          }\n        }\n      }\n      if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n        var line = inline.fieldBegin.line;\n        var fieldBegin = inline.fieldBegin;\n        var fieldBeginOffset = line.getOffset(fieldBegin, 0);\n        var fieldBeginIndex = this.getHierarchicalIndex(line, fieldBeginOffset.toString());\n        if (!TextPosition.isForwardSelection(selectionEndIndex, fieldBeginIndex)) {\n          //If field begin is before selection end, extend selection end to field begin.\n          this.moveToInline(inline.fieldBegin, 0);\n          return;\n        }\n        textPosition.moveToInline(inline.fieldBegin, 0);\n      } else {\n        textPosition.movePreviousPosition();\n      }\n      currentIndex = textPosition.getHierarchicalIndexInternal();\n    }\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.paragraphStartInternal = function (selection, moveToPreviousParagraph) {\n    var offset = selection.getStartLineOffset(this.currentWidget);\n    if (this.offset === offset && moveToPreviousParagraph) {\n      var startParagraph = this.moveToNextParagraphInTableCheck();\n      if (startParagraph) {\n        this.moveToPreviousParagraphInTable(selection);\n      } else if (!isNullOrUndefined(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n        var paragraphValue = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n        this.currentWidget = paragraphValue.childWidgets[0];\n        this.offset = selection.getStartLineOffset(this.currentWidget);\n      }\n    } else {\n      this.currentWidget = this.currentWidget.paragraph.getSplitWidgets()[0].childWidgets[0];\n      this.offset = offset;\n    }\n    this.calculateOffset();\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.calculateOffset = function () {\n    var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n    var selectionEndIndex = this.getHierarchicalIndexInternal();\n    if (selectionStartIndex !== selectionEndIndex) {\n      this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n    }\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Moves the text position to start of the paragraph.\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToParagraphStartInternal = function (selection, moveToPreviousParagraph) {\n    var splittedParagraph = this.currentWidget.paragraph;\n    while (splittedParagraph.previousSplitWidget) {\n      splittedParagraph = splittedParagraph.previousSplitWidget;\n    }\n    var startOffset = selection.getStartOffset(splittedParagraph);\n    if (this.offset === startOffset && moveToPreviousParagraph) {\n      var paragraphstart = this.moveToNextParagraphInTableCheck();\n      if (paragraphstart) {\n        this.moveToPreviousParagraphInTable(selection);\n      } else if (!isNullOrUndefined(selection.getPreviousParagraphBlock(this.paragraph))) {\n        this.currentWidget = selection.getPreviousParagraphBlock(this.paragraph).firstChild;\n        this.offset = selection.getStartOffset(this.paragraph);\n      }\n    } else {\n      this.currentWidget = splittedParagraph.firstChild;\n      this.offset = selection.getStartLineOffset(this.currentWidget);\n    }\n    var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n    var selectionEndIndex = this.getHierarchicalIndexInternal();\n    if (selectionStartIndex !== selectionEndIndex) {\n      this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n    }\n    this.updatePhysicalPosition(false);\n  };\n  /**\n   * Moves the text position to end of the paragraph.\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToParagraphEndInternal = function (selection, moveToNextParagraph) {\n    var splittedParagraph = this.currentWidget.paragraph;\n    while (splittedParagraph.nextSplitWidget) {\n      splittedParagraph = splittedParagraph.nextSplitWidget;\n    }\n    this.currentWidget = splittedParagraph.childWidgets[splittedParagraph.childWidgets.length - 1];\n    var endOffset = this.currentWidget.getEndOffset() + 1;\n    if (this.offset === endOffset && moveToNextParagraph) {\n      var paragraphEnd = this.moveToNextParagraphInTableCheck();\n      if (paragraphEnd) {\n        this.moveToNextParagraphInTable();\n      } else if (!isNullOrUndefined(selection.getNextParagraphBlock(this.currentWidget.paragraph))) {\n        var endParagraph = selection.getNextParagraphBlock(this.currentWidget.paragraph);\n        this.currentWidget = endParagraph.childWidgets[endParagraph.childWidgets.length - 1];\n        this.offset = this.currentWidget.getEndOffset() + 1;\n      }\n    } else {\n      this.offset = endOffset;\n    }\n    this.calculateOffset();\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.moveUp = function (selection, left) {\n    var paragraph = this.currentWidget.paragraph;\n    //Moves text position to start of line.\n    this.moveToLineStartInternal(selection, true);\n    //Moves previous line starting.\n    this.movePreviousPosition();\n    var prevLine = undefined;\n    var currentParagraph = this.currentWidget.paragraph;\n    if (paragraph.isInsideTable && paragraph !== currentParagraph && paragraph.associatedCell !== currentParagraph.associatedCell && !isNullOrUndefined(currentParagraph.associatedCell) && paragraph.associatedCell.ownerRow === currentParagraph.associatedCell.ownerRow) {\n      var ownerRow = currentParagraph.associatedCell.ownerRow;\n      if (ownerRow.previousRenderedWidget instanceof TableRowWidget) {\n        var cell = selection.getFirstCellInRegion(ownerRow.previousRenderedWidget, currentParagraph.associatedCell, left, true);\n        var lastParagraph = selection.getLastParagraph(cell);\n        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n      } else {\n        var prevBlock = ownerRow.ownerTable.previousRenderedWidget;\n        do {\n          if (prevBlock instanceof TableWidget) {\n            prevBlock = selection.getLastBlockInLastCell(prevBlock);\n          }\n        } while (prevBlock instanceof TableWidget);\n        if (prevBlock instanceof ParagraphWidget) {\n          this.setPosition(prevBlock.childWidgets[prevBlock.childWidgets.length - 1], false);\n        }\n      }\n      prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    } else {\n      if (!paragraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n        var cell = selection.getFirstCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n        var lastParagraph = selection.getLastParagraph(cell);\n        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n      } else if (paragraph.isInsideTable && !isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && paragraph.associatedCell.ownerRow.previousRenderedWidget !== paragraph.associatedCell.ownerRow.previousSplitWidget && paragraph.associatedCell.ownerRow.previousRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow) {\n        var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n        var lastParagraph = selection.getLastParagraph(cell);\n        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n      }\n      prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    }\n    //Moves till the Up/Down selection width.\n    var top = selection.getTop(prevLine);\n    // Here, updating the left position when line widget end with page break\n    // to update cursor before page break\n    if ((this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak) && this.offset === this.currentWidget.getEndOffset() - 1) {\n      left = this.location.x;\n    }\n    selection.updateTextPositionWidget(prevLine, new Point(left, top), this, false);\n  };\n  /**\n   * @private\n   */\n  TextPosition.prototype.moveDown = function (selection, left) {\n    //Moves text position to end of line.\n    var prevParagraph = this.currentWidget.paragraph;\n    var currentLine = this.currentWidget;\n    this.moveToLineEndInternal(selection, true);\n    var length = this.selection.getParagraphLength(this.currentWidget.paragraph);\n    if (this.offset > length) {\n      this.offset = length;\n    }\n    //Moves next line starting.\n    this.moveNextPosition();\n    var nextLine = undefined;\n    if (prevParagraph.isInsideTable && prevParagraph !== this.currentWidget.paragraph && prevParagraph.associatedCell !== this.currentWidget.paragraph.associatedCell && !isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow === this.currentWidget.paragraph.associatedCell.ownerRow) {\n      var ownerRow = this.currentWidget.paragraph.associatedCell.ownerRow;\n      if (prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable && prevParagraph.associatedCell.cellFormat.rowSpan > 1 && prevParagraph.associatedCell.cellFormat.rowSpan + prevParagraph.associatedCell.ownerRow.rowIndex === prevParagraph.associatedCell.ownerTable.childWidgets.length) {\n        //If the prevParagraph  owner cell is Verically merged upto the last row, then theposition moved to next column. the position moved to out of the current tabel so owner row is assigned to last row.\n        ownerRow = this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets[this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets.length - 1];\n      }\n      if (ownerRow.nextRenderedWidget instanceof TableRowWidget) {\n        var cell = this.selection.getLastCellInRegion(ownerRow.nextRenderedWidget, this.currentWidget.paragraph.associatedCell, left, false);\n        this.setPosition(this.selection.getFirstParagraph(cell).childWidgets[0], true);\n      } else {\n        var nextBlock = this.selection.getNextRenderedBlock(ownerRow.ownerTable);\n        do {\n          if (nextBlock instanceof TableWidget) {\n            nextBlock = this.selection.getFirstBlockInFirstCell(nextBlock);\n          }\n        } while (nextBlock instanceof TableWidget);\n        if (nextBlock instanceof ParagraphWidget) {\n          this.setPosition(nextBlock.childWidgets[0], true);\n        }\n      }\n      nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    } else {\n      if (!prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n        var cell = this.selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, false);\n        this.setPosition(this.selection.getFirstParagraph(cell).childWidgets[0], true);\n      } else if (prevParagraph.isInsideTable && !isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow.nextRenderedWidget !== prevParagraph.associatedCell.ownerRow.nextSplitWidget && prevParagraph.associatedCell.ownerRow.nextRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow) {\n        var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n        this.setPosition(selection.getFirstParagraph(cell).childWidgets[0], false);\n      }\n      nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    }\n    //Moves till the Up/Down selection width.\n    var top = this.selection.getTop(nextLine);\n    if (nextLine !== currentLine) {\n      this.selection.updateTextPositionWidget(nextLine, new Point(left, top), this, false);\n    }\n  };\n  /**\n   * Moves the text position to start of the line.\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToLineStartInternal = function (selection, moveToPreviousLine) {\n    if (this.location.x > this.viewer.clientActiveArea.right) {\n      this.offset = this.offset - 1;\n    }\n    var currentLine = selection.getLineWidgetInternal(this.currentWidget, this.offset, moveToPreviousLine);\n    var firstElement = selection.getFirstElementInternal(currentLine);\n    this.documentHelper.moveCaretPosition = 1;\n    var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n    if (isNullOrUndefined(firstElement) && this.offset > startOffset) {\n      var index = 0;\n      var inlineObj = this.currentWidget.getInline(this.offset, index);\n      var inline = inlineObj.element;\n      index = inlineObj.index;\n      if (inline instanceof TextElementBox && inline.text !== '\\v') {\n        this.offset = startOffset;\n      }\n    } else if (!isNullOrUndefined(firstElement)) {\n      var indexInInline = 0;\n      this.currentWidget = firstElement.line;\n      this.offset = this.currentWidget.getOffset(firstElement, indexInInline);\n      indexInInline = 0;\n      var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      if (inline instanceof FieldElementBox) {\n        //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n        var prevInline = selection.getPreviousValidElement(inline);\n        if (!isNullOrUndefined(prevInline)) {\n          inline = prevInline;\n          this.currentWidget = inline.line;\n          this.offset = this.currentWidget.getOffset(inline, inline.length);\n          if (inline instanceof FieldElementBox) {\n            this.offset--;\n          }\n        }\n      }\n    }\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Check paragraph is inside table\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToNextParagraphInTableCheck = function () {\n    if ((this.selection.start.paragraph.isInsideTable || this.paragraph.isInsideTable) && (this.selection.start.paragraph.associatedCell !== this.paragraph.associatedCell || this.selection.isCellSelected(this.selection.start.paragraph.associatedCell, this.selection.start, this))) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Moves the text position to end of the word.\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToWordEndInternal = function (type, excludeSpace) {\n    // type === 0 -------->CTRL+ARROW Navigation\n    // type === 1 -------->CTRL+SHIFT+ARROW Selection\n    // type === 2 -------->Double-tap Word Selection\n    var incrementValue = 0;\n    var endOffset = this.currentWidget.getEndOffset();\n    if (this.selection.isParagraphFirstLine(this.currentWidget)) {\n      if (this.currentWidget.children[0] instanceof ListTextElementBox) {\n        incrementValue = 1;\n      }\n      if (this.currentWidget.children[1] instanceof ListTextElementBox) {\n        incrementValue = 2;\n      }\n    }\n    if ((this.offset + incrementValue === endOffset || this.offset === endOffset + 1) && isNullOrUndefined(this.currentWidget.nextLine)) {\n      if (this.offset === endOffset && type !== 0) {\n        this.setPositionParagraph(this.currentWidget, endOffset + 1);\n      } else {\n        var nextParagraph = this.selection.getNextParagraphBlock(this.currentWidget.paragraph);\n        if (isNullOrUndefined(nextParagraph)) {\n          return;\n        }\n        this.currentWidget = nextParagraph.childWidgets[0];\n        this.offset = this.selection.getStartLineOffset(this.currentWidget);\n        if (type === 1) {\n          var nextWord = this.moveToNextParagraphInTableCheck();\n          if (nextWord) {\n            this.moveToNextParagraphInTable();\n          } else {\n            this.moveToWordEndInternal(type, excludeSpace);\n          }\n        }\n      }\n    } else {\n      var indexInInline = 0;\n      var endSelection = false;\n      var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      this.getNextWordOffset(inline, indexInInline, type, false, endSelection, this, excludeSpace);\n    }\n    if (type !== 0) {\n      var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n      var selectionEndIndex = this.getHierarchicalIndexInternal();\n      if (selectionStartIndex !== selectionEndIndex) {\n        this.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n      }\n    }\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * move text position to next paragraph inside table\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToNextParagraphInTable = function () {\n    var paragraph = this.currentWidget.paragraph;\n    var nextParagraph = paragraph.isInsideTable ? this.selection.getNextSelectionCell(paragraph.associatedCell) : this.selection.getNextParagraphBlock(paragraph);\n    if (isNullOrUndefined(nextParagraph)) {\n      return;\n    }\n    this.currentWidget = nextParagraph.childWidgets[nextParagraph.childWidgets.length - 1];\n    this.offset = this.currentWidget.getEndOffset() + 1;\n  };\n  /**\n   * Moves the text position to start of the previous paragraph.\n   *\n   */\n  TextPosition.prototype.moveToPreviousParagraph = function (selection) {\n    var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n    if (this.offset === startOffset && !isNullOrUndefined(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n      var previousParagraph = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n      this.currentWidget = previousParagraph.childWidgets[0];\n      this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n    } else {\n      this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n    }\n    this.updatePhysicalPosition(true);\n  };\n  /**\n   * Move to previous line from current position\n   *\n   * @private\n   */\n  TextPosition.prototype.moveToPreviousLine = function (selection, left) {\n    var currentIndex = this.getHierarchicalIndexInternal();\n    var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    //Moves text position to start of line.\n    this.moveToLineStartInternal(selection, true);\n    if (this.currentWidget.paragraph.isInsideTable) {\n      this.moveUpInTable(selection);\n    } else {\n      this.moveBackward();\n    }\n    var prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    var lineStart = selection.getLeft(prevLine);\n    var lineWidth = selection.getWidth(prevLine, true);\n    //Moves till the Up/Down selection width.\n    if (lineWidth + lineStart >= left && currentLine !== prevLine) {\n      var top_1 = selection.getTop(prevLine);\n      var point = new Point(left, top_1);\n      selection.updateTextPositionWidget(prevLine, point, this, true);\n    }\n    //Checks if the current position is between field result, then move to field begin.\n    var selectionEndIndex = this.getHierarchicalIndexInternal();\n    this.validateBackwardFieldSelection(currentIndex, selectionEndIndex);\n  };\n  /**\n   * @param {Selection} selection Specifies the selection\n   * @param {boolean} moveToNextLine Specifies the move to next line\n   * @private\n   */\n  TextPosition.prototype.moveToLineEndInternal = function (selection, moveToNextLine) {\n    if (this.location.x > this.viewer.clientActiveArea.right) {\n      this.offset = this.offset - 1;\n    }\n    var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    var firstElement = selection.getFirstElementInternal(currentLine);\n    var isParaBidi = this.currentWidget.paragraph.paragraphFormat.bidi;\n    this.documentHelper.moveCaretPosition = 2;\n    if (isNullOrUndefined(firstElement) && this.offset === selection.getStartLineOffset(this.currentWidget)) {\n      this.offset = selection.getParagraphLength(this.paragraph) + 1;\n      this.updatePhysicalPosition(true);\n    } else if (!isNullOrUndefined(firstElement)) {\n      var lastElement = void 0;\n      // As per Microsoft Behavior, when current para is RTL and if line widget contains rtl text or mixed inlines(rtl, normal),\n      // then need to consider the last element and to update offset to last element\n      if (isParaBidi && this.containsRtlText(currentLine)) {\n        var endOffset = currentLine.getEndOffset();\n        lastElement = currentLine.getInline(endOffset, 0).element;\n      } else {\n        lastElement = currentLine.children[currentLine.children.length - 1];\n        if (lastElement instanceof ListTextElementBox && currentLine.children.length > 2) {\n          lastElement = currentLine.children[currentLine.children.length - 3];\n        }\n      }\n      var index = 0;\n      index += lastElement instanceof TextElementBox ? lastElement.length : 1;\n      this.currentWidget = lastElement.line;\n      if (index === lastElement.length && isNullOrUndefined(lastElement.nextNode) && selection.isParagraphLastLine(this.currentWidget)) {\n        var length_1 = selection.getLineLength(this.currentWidget);\n        this.offset = moveToNextLine ? length_1 + 1 : length_1;\n      } else {\n        var inline = lastElement;\n        while (!isNullOrUndefined(inline) && inline.length === index && inline.nextNode instanceof FieldElementBox) {\n          var nextInline = selection.getNextValidElement(inline.nextNode);\n          if (inline !== nextInline) {\n            inline = nextInline;\n            index = 0;\n          }\n          if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n            var fieldBegin = inline;\n            if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n              inline = fieldBegin.fieldEnd;\n            } else {\n              inline = fieldBegin.fieldSeparator;\n              this.currentWidget = inline.line;\n              if (this.currentWidget === fieldBegin.fieldEnd.line && !selection.hasValidInline(this.currentWidget.paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n              }\n            }\n            this.currentWidget = inline.line;\n          }\n          if (inline instanceof FieldElementBox) {\n            index = 1;\n          }\n        }\n        if (index === inline.length && isNullOrUndefined(inline.nextNode)) {\n          index++;\n        }\n        if (!moveToNextLine && inline instanceof ElementBox && inline.text === '\\v') {\n          index--;\n        }\n        this.offset = this.currentWidget.getOffset(inline, index);\n      }\n      this.updatePhysicalPosition(moveToNextLine);\n    }\n  };\n  /**\n   * Move to next line\n   *\n   * @param {number} left Specified the left\n   * @private\n   * @returns {void}\n   */\n  TextPosition.prototype.moveToNextLine = function (left) {\n    var selection = this.selection;\n    var textPosition = new TextPosition(this.owner);\n    textPosition.setPositionInternal(this);\n    var currentIndex = this.getHierarchicalIndexInternal();\n    var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    //Moves text position to end of line.\n    this.moveToLineEndInternal(selection, true);\n    var isMoveToLineEnd = !textPosition.isAtSamePosition(this);\n    textPosition.setPositionInternal(this);\n    if (this.currentWidget.paragraph.isInsideTable) {\n      this.moveDownInTable(selection);\n    } else {\n      this.moveNextPosition();\n      var isAtLineStart = this.offset === 0 ? true : false;\n      if (!isAtLineStart) {\n        this.moveForward();\n      }\n    }\n    var nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n    var lineStart = selection.getLeft(nextLine);\n    var firstElement = selection.getFirstElementInternal(nextLine);\n    var firstItemWidth = isNullOrUndefined(firstElement) ? selection.getWidth(nextLine, true) : selection.getLeftInternal(nextLine, firstElement, 1) - lineStart;\n    //Moves till the Up/Down selection width.\n    if (lineStart < left && firstItemWidth / 2 < left - lineStart) {\n      var top_2 = selection.getTop(nextLine);\n      var point = new Point(left, top_2);\n      selection.updateTextPositionWidget(nextLine, point, this, true);\n      var width = selection.getWidth(nextLine, true);\n      if (width < left - lineStart) {\n        this.moveToLineEndInternal(selection, true);\n      }\n    } else if (isMoveToLineEnd && this.currentWidget.paragraph.isInsideTable && this.currentWidget === this.owner.selectionModule.start.currentWidget) {\n      this.setPositionInternal(textPosition);\n    } else if (!isMoveToLineEnd) {\n      this.moveToLineEndInternal(selection, true);\n    }\n    //Checks if the current position is between field result, then move to field end.\n    var selectionEndIndex = this.getHierarchicalIndexInternal();\n    this.validateForwardFieldSelection(currentIndex, selectionEndIndex);\n  };\n  TextPosition.prototype.moveUpInTable = function (selection) {\n    var isPositionUpdated = false;\n    var end = this.owner.selectionModule.end;\n    var isBackwardSelection = !this.owner.selectionModule.isEmpty;\n    isPositionUpdated = end.paragraph.isInsideTable;\n    if (isPositionUpdated) {\n      var startCell = this.currentWidget.paragraph.associatedCell;\n      var endCell = end.paragraph.associatedCell;\n      var containerCell = selection.getContainerCellOf(endCell, startCell);\n      isPositionUpdated = containerCell.ownerTable.contains(startCell);\n      if (isPositionUpdated) {\n        endCell = selection.getSelectedCell(endCell, containerCell);\n        startCell = selection.getSelectedCell(startCell, containerCell);\n        var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n        var isContainerCellSelected = selection.isCellSelected(containerCell, this, end);\n        if (!isContainerCellSelected) {\n          isContainerCellSelected = this.currentWidget.paragraph === selection.getFirstParagraph(containerCell) && this.isAtParagraphStart;\n        }\n        if ((isInContainerCell && isContainerCellSelected || !isInContainerCell) && !isNullOrUndefined(startCell.ownerRow.previousRenderedWidget)) {\n          //Moves to cell in previous row.\n          var row = startCell.ownerRow.previousRenderedWidget;\n          var cell = selection.getFirstCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, true);\n          var previousParagraph = selection.getLastParagraph(cell);\n          this.setPosition(previousParagraph.childWidgets[0], true);\n          return;\n        } else if (isInContainerCell && isContainerCellSelected && isNullOrUndefined(startCell.ownerRow.previousRenderedWidget) || !isInContainerCell) {\n          if (isBackwardSelection) {\n            //Moves to first cell of row.\n            startCell = startCell.ownerRow.childWidgets[0];\n            var previousParagraph = selection.getFirstParagraph(startCell);\n            this.setPosition(previousParagraph.childWidgets[0], true);\n          } else {\n            //Moves to last cell of row.\n            startCell = startCell.ownerRow.childWidgets[startCell.ownerRow.childWidgets.length - 1];\n            var previousParagraph = selection.getLastParagraph(startCell);\n            this.setPosition(previousParagraph.childWidgets[0], false);\n          }\n        }\n      }\n    }\n    if (!isPositionUpdated) {\n      //Moves to previous row / previous block.\n      var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n      if (isBackwardSelection) {\n        //Moves to first cell of row.\n        cell = cell.ownerRow.childWidgets[0];\n        var previousParagraph = selection.getFirstParagraph(cell);\n        this.setPosition(previousParagraph.childWidgets[0], true);\n      } else {\n        //Moves to end of row.\n        cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n        var previousParagraph = selection.getLastParagraph(cell);\n        this.setPosition(previousParagraph.childWidgets[0], false);\n      }\n    }\n    //Moves to previous row / previous block.\n    this.moveBackward();\n  };\n  TextPosition.prototype.moveDownInTable = function (selection) {\n    var isPositionUpdated = false;\n    var isForwardSelection = this.owner.selectionModule.isEmpty || this.owner.selectionModule.isForward;\n    isPositionUpdated = this.owner.selectionModule.start.paragraph.isInsideTable;\n    if (isPositionUpdated) {\n      var startCell = this.owner.selectionModule.start.paragraph.associatedCell;\n      var endCell = this.currentWidget.paragraph.associatedCell;\n      var containerCell = selection.getContainerCellOf(startCell, endCell);\n      isPositionUpdated = containerCell.ownerTable.contains(endCell);\n      if (isPositionUpdated) {\n        startCell = selection.getSelectedCell(startCell, containerCell);\n        endCell = selection.getSelectedCell(endCell, containerCell);\n        var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n        var isContainerCellSelected = selection.isCellSelected(containerCell, this.owner.selectionModule.start, this);\n        if ((isInContainerCell && isContainerCellSelected || !isInContainerCell) && !isNullOrUndefined(endCell.ownerRow.nextRenderedWidget)) {\n          //Moves to cell in next row.\n          var row = endCell.ownerRow.nextRenderedWidget;\n          var cell = selection.getLastCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, false);\n          var lastParagraph = selection.getLastParagraph(cell);\n          this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n          return;\n        } else if (isInContainerCell && isContainerCellSelected && isNullOrUndefined(endCell.ownerRow.nextRenderedWidget) || !isInContainerCell) {\n          if (isForwardSelection) {\n            //Moves to last cell of row.\n            endCell = endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1];\n            var lastParagraph = selection.getLastParagraph(endCell);\n            this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n          } else {\n            //Moves to first cell of row.\n            endCell = endCell.ownerRow.childWidgets[0];\n            var lastParagraph = selection.getFirstParagraph(endCell);\n            this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n          }\n        }\n      }\n    }\n    if (!isPositionUpdated) {\n      //Moves to next row / next block.\n      var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n      if (isForwardSelection) {\n        //Moves to end of row.\n        cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n        var lastParagraph = selection.getLastParagraph(cell);\n        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n      } else if (cell.ownerRow.nextRenderedWidget) {\n        //Moves to first cell of row.\n        cell = cell.ownerRow.nextRenderedWidget.childWidgets[0];\n        var lastParagraph = selection.getFirstParagraph(cell);\n        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n      }\n    }\n    //Moves to next row / next block.\n    this.moveForward();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  TextPosition.prototype.destroy = function () {\n    this.offset = undefined;\n    this.isUpdateLocation = undefined;\n    if (!isNullOrUndefined(this.location)) {\n      this.location.destroy();\n    }\n    this.location = undefined;\n    this.currentWidget = undefined;\n    this.owner = undefined;\n    this.documentHelper = undefined;\n  };\n  return TextPosition;\n}();\nexport { TextPosition };\n/**\n * @private\n */\nvar SelectionWidgetInfo = /** @class */function () {\n  function SelectionWidgetInfo(left, width) {\n    this.leftIn = 0;\n    this.widthIn = 0;\n    this.color = '';\n    this.leftIn = left;\n    this.widthIn = width;\n  }\n  Object.defineProperty(SelectionWidgetInfo.prototype, \"left\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.leftIn;\n    },\n    /**\n     * @private\n     */\n    set: function (value) {\n      this.leftIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SelectionWidgetInfo.prototype, \"width\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.widthIn;\n    },\n    /**\n     * @private\n     */\n    set: function (value) {\n      this.widthIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @private\n   */\n  SelectionWidgetInfo.prototype.destroy = function () {\n    this.widthIn = undefined;\n    this.leftIn = undefined;\n    this.floatingItems = [];\n    this.floatingItems = undefined;\n  };\n  return SelectionWidgetInfo;\n}();\nexport { SelectionWidgetInfo };\n/**\n * @private\n */\nvar Hyperlink = /** @class */function () {\n  function Hyperlink(fieldBeginAdv, selection) {\n    this.linkInternal = '';\n    this.localRef = '';\n    this.opensNewWindow = false;\n    this.isCrossRefField = false;\n    this.screenTipText = '';\n    var fieldCode = selection.getFieldCode(fieldBeginAdv);\n    var lowercase = fieldCode.toLowerCase();\n    if (lowercase.substring(0, 9) === 'hyperlink') {\n      this.parseFieldValues(fieldCode.substring(9).trim(), true);\n    } else if (lowercase.indexOf('ref ') === 0 && lowercase.match('\\\\h')) {\n      this.parseFieldValues(fieldCode.substring(4).trim(), false);\n      this.isCrossRefField = true;\n    } else if (lowercase.indexOf('pageref') === 0) {\n      this.parseFieldValues(fieldCode.substring(7).trim(), false);\n    }\n  }\n  Object.defineProperty(Hyperlink.prototype, \"screenTip\", {\n    /**\n    * Gets screentip text.\n    *\n    * @returns string\n    * @private\n    */\n    get: function () {\n      return this.screenTipText;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Hyperlink.prototype, \"navigationLink\", {\n    /**\n     * Gets navigation link.\n     *\n     * @returns string\n     * @private\n     */\n    get: function () {\n      return this.linkInternal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Hyperlink.prototype, \"localReference\", {\n    /**\n     * Gets the local reference if any.\n     *\n     * @returns string\n     * @private\n     */\n    get: function () {\n      return this.localRef;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Hyperlink.prototype, \"linkType\", {\n    /**\n     * Gets hyper link type.\n     *\n     * @returns HyperLinkType\n     * @private\n     */\n    get: function () {\n      return this.typeInternal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Hyperlink.prototype, \"isCrossRef\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return this.isCrossRefField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Hyperlink.prototype.parseFieldValues = function (value, isHyperlink) {\n    var codes = value.split('\\\\o ');\n    if (codes.length === 2) {\n      this.screenTipText = this.parseFieldValue(codes[1], codes[1] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n      this.screenTipText = this.screenTipText.substring(0, this.screenTipText.length - 1);\n      value = codes[0];\n      codes = undefined;\n    }\n    codes = value.split(' ');\n    var isLocalRef = false;\n    var hyperlinkRef = true;\n    if (isHyperlink) {\n      for (var i = 0; i < codes.length; i++) {\n        var code = codes[i];\n        if (code.length < 1) {\n          continue;\n        }\n        if (code === '\\\\t' || code === '\\\\l') {\n          isLocalRef = true;\n        } else if (code === '\\\\n') {\n          this.opensNewWindow = true;\n        } else {\n          code = this.parseFieldValue(code, code[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n          if (isLocalRef) {\n            this.localRef = code;\n            isLocalRef = false;\n            hyperlinkRef = false;\n          } else if (hyperlinkRef) {\n            this.linkInternal = this.parseFieldValue(value, value[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n          } else {\n            this.linkInternal = code;\n          }\n        }\n      }\n    } else {\n      this.localRef = codes[0];\n    }\n    this.setLinkType();\n  };\n  Hyperlink.prototype.parseFieldValue = function (value, endChar, isHyperlink) {\n    value = isHyperlink ? value.substring(1) : value.substring(0);\n    var endIndex = endChar ? value.indexOf(endChar) : -1;\n    if (endIndex < 0) {\n      endIndex = value.length;\n    }\n    return value.substring(0, endIndex).trim();\n  };\n  Hyperlink.prototype.setLinkType = function () {\n    // If only local reference.\n    if (isNullOrUndefined(this.linkInternal) || this.linkInternal.length < 1) {\n      this.typeInternal = 'Bookmark';\n      return;\n    }\n    // Validates link.\n    if (this.linkInternal.substring(0, 4) === 'www.') {\n      this.linkInternal = 'http://' + this.navigationLink;\n    } else if (this.linkInternal[0] === '@') {\n      this.linkInternal = 'mailto:' + this.navigationLink;\n    }\n    // Finds proper link type.\n    if (this.linkInternal.substring(0, 7) === 'http://' || this.linkInternal.substring(0, 8) === 'https://') {\n      this.typeInternal = 'WebPage';\n    } else if (this.linkInternal.substring(0, 7) === 'mailto:') {\n      this.typeInternal = 'Email';\n    } else {\n      this.typeInternal = 'File';\n    }\n  };\n  /**\n   * @private\n   */\n  Hyperlink.prototype.destroy = function () {\n    this.linkInternal = undefined;\n    this.localRef = undefined;\n    this.typeInternal = undefined;\n    this.opensNewWindow = undefined;\n    this.screenTipText = undefined;\n  };\n  return Hyperlink;\n}();\nexport { Hyperlink };\n/**\n * @private\n */\nvar ImageSizeInfo = /** @class */function () {\n  /**\n   * Constructor for image format class\n   *\n   * @param imageContainer - Specifies for image width and height values.\n   */\n  function ImageSizeInfo(imageContainer) {\n    /**\n     * @private\n     */\n    this.width = 0;\n    /**\n     * @private\n     */\n    this.height = 0;\n    this.width = imageContainer.width;\n    this.height = imageContainer.height;\n    this.alternatetext = imageContainer.alternateText;\n  }\n  /**\n   * Dispose the internal objects which are maintained.\n   *\n   * @private\n   */\n  ImageSizeInfo.prototype.destroy = function () {\n    this.width = undefined;\n    this.height = undefined;\n    this.alternatetext = undefined;\n  };\n  return ImageSizeInfo;\n}();\nexport { ImageSizeInfo };","map":{"version":3,"names":["Widget","BodyWidget","TableRowWidget","TableWidget","LineWidget","ElementBox","TextElementBox","ListTextElementBox","ImageElementBox","ParagraphWidget","TableCellWidget","FieldElementBox","BlockContainer","BookmarkElementBox","CommentCharacterElementBox","HelperMethods","Point","isNullOrUndefined","TextPosition","owner","location","isUpdateLocation","documentHelper","Object","defineProperty","prototype","get","currentWidget","paragraph","enumerable","configurable","offset","selectionModule","getStartOffset","isParagraphLastLine","getLineLength","paragraphFormat","bidi","getHierarchicalIndexInternal","viewer","clone","textPosition","containsRtlText","widget","i","children","length","isRightToLeft","setPositionForSelection","line","element","index","physicalLocation","isParagraphEnd","nextNode","selection","isLastRenderedInline","getParagraphLength","getOffset","setPositionFromLine","copy","setPosition","positionAtStart","lastChild","getEndOffset","updatePhysicalPosition","setPositionInternal","setPositionForCurrentIndex","hierarchicalIndex","getParagraphWidget","parseFloat","setPositionParagraph","getPage","position","page","indexOf","newValue","substring","replace","parseInt","pages","undefined","child","getLineWidget","value","headerWidget","footerWidget","index1","value1","footnoteWidget","bodyWidgets","endnoteWidget","childWidgets","getFirstParagraphInFirstCell","ownerTable","nextRenderedWidget","firstChild","moveNextLine","isLayoutEnabled","getPhysicalPositionInternal","isAtSamePosition","isInSameParagraphIndex","Error","isInSameParagraph","isInSameListParagraph","listFormat","listId","isExistBefore","currentParagraph","containerWidget","isInsideTable","associatedCell","isExistAfter","startParagraph","endParagraph","getHierarchicalIndex","toString","node","offsetInLine","setPositionForLineWidget","lineWidget","lineLength","lineIndex","isLastLine","bodyWidget","footNoteReference","text","nextLineWidget","nextBlock","getNextRenderedBlock","prevLine","currentOffSet","moveNextPosition","isNavigate","inline","getNextStartInline","fieldType","fieldEnd","moveNextPositionInternal","fieldEndOffset","fieldEndIndex","isForwardSelection","end","moveToInline","nextOffset","getNextValidOffset","info","getInline","nextValidInline","getNextValidElement","bookmarkType","isFormFillProtectedMode","getStartLineOffset","inlineObj","updateOffsetToNextParagraph","moveToPreviousParagraphInTable","previousParagraph","currentPara","getPreviousSelectionCell","getPreviousParagraphBlock","indexInInline","isHighlight","nextParagraph","getNextParagraphBlock","getNextSelectionBlock","start","containerCell","getContainerCellOf","contains","updateOffsetToPrevPosition","inlineInfo","prevOffset","getPreviousValidOffset","prevLineWidget","endOffset","getPreviousSelectionBlock","isEndsWithPageBreak","isEndsWithColumnBreak","previousInline","getPreviousValidElement","moveToNextParagraphStartInternal","movePreviousPosition","fieldBegin","movePreviousPositionInternal","fieldSeparator","hasValidInline","moveBackward","isEmpty","nextInline","getNextRenderedElementBox","fieldBeginOffset","moveForward","fieldBeginIndex","selectionStartParagraph","selectionStartIndex","selectionStartInlineObj","selectionStartInline","nextRenderInline","inlineObj_1","previousNode","selectionStart","split","selectionEnd","startOffset","moveToWordStartInternal","type","isStarted","endSelection","getPreviousWordOffset","calculateOffset","getNextWordOffset","isInField","endPosition","excludeSpace","getNextWordOffsetSpan","getNextWordOffsetImage","getNextWordOffsetFieldBegin","getNextWordOffsetFieldSeparator","getNextWordOffsetFieldEnd","getNextWordOffsetComment","image","span","wordEndIndex","wordSplitCharacters","txt","slice","indexOfAny","spaceCharacter","isSpaceCharacter","nextNodeText","comment","getPreviousWordOffsetSpan","getPreviousWordOffsetImage","getPreviousWordOffsetFieldBegin","getPreviousWordOffsetFieldSeparator","getPreviousWordOffsetFieldEnd","getPreviousWordOffsetBookMark","getPreviousWordOffsetComment","bookmark","lastIndexOfAny","wordStartIndex","previousElement","previousNodeText","setPreviousWordOffset","validateForwardFieldSelection","currentIndex","selectionEndIndex","isPositionMoved","nextIndex","validateBackwardFieldSelection","isSelectParaMark","isSelectionChangedOnMouseMoved","isParagraphFirstLine","previousRenderedWidget","paragraphStartInternal","moveToPreviousParagraph","moveToNextParagraphInTableCheck","paragraphValue","getSplitWidgets","moveToParagraphStartInternal","splittedParagraph","previousSplitWidget","paragraphstart","moveToParagraphEndInternal","moveToNextParagraph","nextSplitWidget","paragraphEnd","moveToNextParagraphInTable","moveUp","left","moveToLineStartInternal","ownerRow","cell","getFirstCellInRegion","lastParagraph","getLastParagraph","prevBlock","getLastBlockInLastCell","getLineWidgetParagraph","upDownSelectionLength","getLastCellInRegion","top","getTop","x","updateTextPositionWidget","moveDown","prevParagraph","currentLine","moveToLineEndInternal","nextLine","cellFormat","rowSpan","rowIndex","getFirstParagraph","getFirstBlockInFirstCell","moveToPreviousLine","clientActiveArea","right","getLineWidgetInternal","firstElement","getFirstElementInternal","moveCaretPosition","prevInline","isCellSelected","moveToWordEndInternal","incrementValue","nextWord","getNextSelectionCell","moveUpInTable","lineStart","getLeft","lineWidth","getWidth","top_1","point","moveToNextLine","isParaBidi","lastElement","length_1","isMoveToLineEnd","moveDownInTable","isAtLineStart","firstItemWidth","getLeftInternal","top_2","width","isPositionUpdated","isBackwardSelection","startCell","endCell","getSelectedCell","isInContainerCell","containsCell","isContainerCellSelected","isAtParagraphStart","row","getContainerCell","isForward","destroy","SelectionWidgetInfo","leftIn","widthIn","color","set","floatingItems","Hyperlink","fieldBeginAdv","linkInternal","localRef","opensNewWindow","isCrossRefField","screenTipText","fieldCode","getFieldCode","lowercase","toLowerCase","parseFieldValues","trim","match","typeInternal","isHyperlink","codes","parseFieldValue","isLocalRef","hyperlinkRef","code","setLinkType","endChar","endIndex","navigationLink","ImageSizeInfo","imageContainer","height","alternatetext","alternateText"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection-helper.js"],"sourcesContent":["import { Widget, BodyWidget, TableRowWidget, TableWidget, LineWidget, ElementBox, TextElementBox, ListTextElementBox, ImageElementBox, ParagraphWidget, TableCellWidget, FieldElementBox, BlockContainer, BookmarkElementBox, CommentCharacterElementBox } from '../index';\nimport { HelperMethods } from '../index';\nimport { Point } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/* eslint-disable */\n/**\n * @private\n */\nvar TextPosition = /** @class */ (function () {\n    function TextPosition(owner) {\n        /**\n         * @private\n         */\n        this.location = new Point(0, 0);\n        /**\n         * @private\n         */\n        this.isUpdateLocation = true;\n        this.owner = owner;\n        this.documentHelper = this.owner.documentHelper;\n    }\n    Object.defineProperty(TextPosition.prototype, \"paragraph\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.currentWidget.paragraph;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isAtParagraphStart\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.offset === this.owner.selectionModule.getStartOffset(this.paragraph);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isAtParagraphEnd\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.owner.selectionModule.isParagraphLastLine(this.currentWidget)\n                && this.offset === this.owner.selectionModule.getLineLength(this.currentWidget);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"isCurrentParaBidi\", {\n        /**\n         * @private\n         */\n        get: function () {\n            if (!isNullOrUndefined(this.currentWidget.paragraph)) {\n                return this.currentWidget.paragraph.paragraphFormat.bidi;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"selection\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.owner.selectionModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"hierarchicalPosition\", {\n        /**\n         * Gets the hierarchical position of logical text position in the document\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return this.getHierarchicalIndexInternal();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextPosition.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return clone of current text position\n     *\n     * @private\n     */\n    TextPosition.prototype.clone = function () {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.currentWidget = this.currentWidget;\n        textPosition.offset = this.offset;\n        textPosition.location = this.location;\n        return textPosition;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.containsRtlText = function (widget) {\n        for (var i = 0; i < widget.children.length; i++) {\n            if (widget.children[i].isRightToLeft) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set text position for paragraph and inline\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionForSelection = function (line, element, index, physicalLocation) {\n        //Set the start end position\n        var isParagraphEnd = false;\n        if (isNullOrUndefined(element)) {\n            this.currentWidget = line;\n        }\n        else {\n            this.currentWidget = element.line;\n            if (element.nextNode instanceof FieldElementBox && index > element.length) {\n                isParagraphEnd = this.selection.isLastRenderedInline(element, element.length);\n            }\n        }\n        this.location = physicalLocation;\n        if (isParagraphEnd) {\n            this.offset = this.selection.getParagraphLength(this.currentWidget.paragraph) + 1;\n        }\n        else {\n            this.offset = this.currentWidget.getOffset(element, index);\n        }\n    };\n    /**\n     * Set text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionFromLine = function (line, offset, location) {\n        this.currentWidget = line;\n        this.offset = offset;\n        if (location instanceof Point) {\n            this.location.copy(location);\n        }\n    };\n    /**\n     * Set text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPosition = function (line, positionAtStart) {\n        this.currentWidget = line;\n        this.offset = positionAtStart ? this.selection.getStartOffset(line.paragraph)\n            : line.paragraph.lastChild.getEndOffset() + 1;\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Set position for text position\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionInternal = function (textPosition) {\n        this.currentWidget = textPosition.currentWidget;\n        this.offset = textPosition.offset;\n        this.location = textPosition.location;\n    };\n    /**\n     * Set position for current index\n     *\n     * @private\n     */\n    TextPosition.prototype.setPositionForCurrentIndex = function (hierarchicalIndex) {\n        var index = { index: hierarchicalIndex };\n        var paragraph = this.getParagraphWidget(index); //ref hierarchicalIndex\n        this.offset = parseFloat(index.index);\n        this.setPositionParagraph(paragraph, this.offset);\n    };\n    /**\n     * Get Page\n     *\n     */\n    TextPosition.prototype.getPage = function (position) {\n        var page;\n        var index = position.index.indexOf(';');\n        var newValue = '0';\n        if (index >= 0) {\n            newValue = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        index = parseInt(newValue, 10);\n        page = this.documentHelper.pages[index];\n        return page;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getParagraphWidget = function (position) {\n        if (isNullOrUndefined(position.index)) {\n            return undefined;\n        }\n        var page = this.getPage(position);\n        var child = this.getLineWidget(undefined, position, page);\n        return child;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getLineWidget = function (widget, position, page) {\n        if (isNullOrUndefined(position.index)) {\n            return undefined;\n        }\n        var index = position.index.indexOf(';');\n        var value = '0';\n        if (index >= 0) {\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        if (value === 'H' || value === 'F') {\n            if (value === 'H') {\n                widget = page.headerWidget;\n            }\n            else {\n                widget = page.footerWidget;\n            }\n        }\n        else if (value === 'FN' || value === 'EN') {\n            var index1 = position.index.indexOf(';');\n            var value1 = position.index.substring(0, index1);\n            position.index = position.index.substring(index1).replace(';', '');\n            if (value === 'FN') {\n                widget = page.footnoteWidget.bodyWidgets[value1];\n            }\n            else {\n                widget = page.endnoteWidget.bodyWidgets[value1];\n            }\n        }\n        else if (!isNullOrUndefined(page)) {\n            if (parseInt(value, 10) < page.bodyWidgets.length) {\n                widget = page.bodyWidgets[parseInt(value, 10)];\n            }\n            else {\n                widget = page.bodyWidgets[0];\n            }\n        }\n        index = parseInt(value, 10);\n        if (widget instanceof BlockContainer) {\n            index = position.index.indexOf(';');\n            value = '0';\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n            index = parseInt(value, 10);\n        }\n        if (widget instanceof TableRowWidget && index >= widget.childWidgets.length) {\n            position.index = '0;0';\n            index = widget.childWidgets.length - 1;\n        }\n        if (index >= 0 && index < widget.childWidgets.length) {\n            var child = widget.childWidgets[index];\n            if (child instanceof LineWidget) {\n                if (position.index.indexOf(';') > 0) {\n                    position.index = '0';\n                }\n                return child;\n            }\n            if (child instanceof Widget) {\n                if (position.index.indexOf(';') > 0) {\n                    return this.getLineWidget(child, position);\n                }\n                else {\n                    //If table is shifted to previous text position then return the first paragraph within table.\n                    if (child instanceof TableWidget) {\n                        return this.getLineWidget(this.documentHelper.getFirstParagraphInFirstCell(child), position);\n                    }\n                    else if (child instanceof TableRowWidget && position.index.indexOf(';') === -1) {\n                        return this.documentHelper.getFirstParagraphInFirstCell(child.ownerTable).childWidgets[0];\n                    }\n                    return undefined;\n                }\n            }\n        }\n        else if (widget.nextRenderedWidget instanceof Widget) {\n            position.index = '0';\n            if (widget.nextRenderedWidget instanceof TableWidget) {\n                return this.documentHelper.getFirstParagraphInFirstCell(widget.nextRenderedWidget).firstChild;\n            }\n            return this.getLineWidget(widget.nextRenderedWidget, position);\n        }\n        return undefined;\n    };\n    /**\n     * Update physical location of paragraph\n     *\n     * @private\n     */\n    TextPosition.prototype.updatePhysicalPosition = function (moveNextLine) {\n        if (this.currentWidget && this.owner.isLayoutEnabled && this.isUpdateLocation) {\n            this.location = this.selection.getPhysicalPositionInternal(this.currentWidget, this.offset, moveNextLine);\n        }\n    };\n    /**\n     * Return true if text position are in same paragraph and offset\n     *\n     * @private\n     */\n    TextPosition.prototype.isAtSamePosition = function (textPosition) {\n        return this.currentWidget === textPosition.currentWidget\n            && this.offset === textPosition.offset;\n    };\n    /**\n     * Return true if text position is in same paragraph index\n     * @private\n     */\n    TextPosition.prototype.isInSameParagraphIndex = function (textPosition) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph.index === textPosition.paragraph.index;\n    };\n    /**\n     * Return true if text position is in same paragraph\n     *\n     * @private\n     */\n    TextPosition.prototype.isInSameParagraph = function (textPosition) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph === textPosition.paragraph;\n    };\n    /**\n     * Return true if start and end is in same list\n     *\n     * @private\n     */\n    TextPosition.prototype.isInSameListParagraph = function (textPosition) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        return this.paragraph.paragraphFormat.listFormat.listId === textPosition.paragraph.paragraphFormat.listFormat.listId;\n    };\n    /**\n     * Return true is current text position exist before given text position\n     *\n     * @private\n     */\n    TextPosition.prototype.isExistBefore = function (textPosition) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        if (this.currentWidget === textPosition.currentWidget) {\n            return this.offset < textPosition.offset;\n        }\n        var currentParagraph = this.currentWidget.paragraph;\n        var paragraph = textPosition.currentWidget.paragraph;\n        if (currentParagraph === paragraph) {\n            return currentParagraph.childWidgets.indexOf(this.currentWidget) < paragraph.childWidgets.indexOf(textPosition.currentWidget);\n        }\n        if (currentParagraph.containerWidget === paragraph.containerWidget) {\n            if (currentParagraph.isInsideTable) {\n                return currentParagraph.associatedCell.childWidgets.indexOf(currentParagraph) <\n                    paragraph.associatedCell.childWidgets.indexOf(paragraph);\n                //handle after header footer implementation\n                // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n                //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) <\n                //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n            }\n            else {\n                return (currentParagraph.containerWidget.childWidgets.indexOf(currentParagraph)) <\n                    (paragraph.containerWidget.childWidgets.indexOf(paragraph));\n            }\n        }\n        return this.owner.selectionModule.isExistBefore(currentParagraph, paragraph);\n    };\n    /**\n     * Return true is current text position exist after given text position\n     *\n     * @private\n     */\n    TextPosition.prototype.isExistAfter = function (textPosition) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        if (this.currentWidget === textPosition.currentWidget) {\n            return this.offset > textPosition.offset;\n        }\n        if (this.currentWidget.paragraph === textPosition.currentWidget.paragraph) {\n            return this.currentWidget.paragraph.childWidgets.indexOf(this.currentWidget) >\n                textPosition.currentWidget.paragraph.childWidgets.indexOf(textPosition.currentWidget);\n        }\n        var startParagraph = this.currentWidget.paragraph;\n        var endParagraph = textPosition.currentWidget.paragraph;\n        if (!isNullOrUndefined(startParagraph) && !isNullOrUndefined(endParagraph)) {\n            if (startParagraph.containerWidget instanceof BodyWidget && endParagraph.containerWidget instanceof BodyWidget &&\n                startParagraph.containerWidget === endParagraph.containerWidget) {\n                if (startParagraph.isInsideTable && endParagraph.isInsideTable) {\n                    return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) >\n                        endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n                    // } else if ((this.currentParagraph).owner instanceof WHeaderFooter) {\n                    //     return ((this.currentParagraph).owner as WHeaderFooter).blocks.indexOf((this.currentParagraph)) >\n                    //         ((textPosition.currentParagraph).owner as WHeaderFooter).blocks.indexOf((textPosition.currentParagraph));\n                }\n                else {\n                    return (startParagraph.containerWidget.childWidgets.indexOf(startParagraph) >\n                        (endParagraph.containerWidget.childWidgets.indexOf(endParagraph)));\n                }\n            }\n            return this.owner.selectionModule.isExistAfter(startParagraph, endParagraph);\n        }\n        return false;\n    };\n    /**\n     * Return hierarchical index of current text position\n     *\n     * @private\n     */\n    TextPosition.prototype.getHierarchicalIndexInternal = function () {\n        return this.getHierarchicalIndex(this.currentWidget, this.offset.toString());\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.getHierarchicalIndex = function (line, hierarchicalIndex) {\n        var node = line;\n        if (node) {\n            return node.getHierarchicalIndex(hierarchicalIndex);\n        }\n        return hierarchicalIndex;\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.setPositionParagraph = function (line, offsetInLine) {\n        this.currentWidget = line;\n        this.offset = offsetInLine;\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.setPositionForLineWidget = function (lineWidget, offset) {\n        var lineLength = this.selection.getLineLength(lineWidget);\n        var lineIndex = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n        if (lineWidget.isLastLine()) {\n            if (!isNullOrUndefined(lineWidget.paragraph.bodyWidget.footNoteReference)) {\n                lineLength = lineLength + lineWidget.paragraph.bodyWidget.footNoteReference.text.length;\n            }\n            else {\n                lineLength = lineLength + 1;\n            }\n        }\n        if (offset > lineLength) {\n            var nextLineWidget = void 0;\n            if (lineIndex >= lineWidget.paragraph.childWidgets.length - 1) {\n                var nextBlock = this.selection.getNextRenderedBlock(lineWidget.paragraph);\n                if (nextBlock && nextBlock.index === lineWidget.paragraph.index) {\n                    nextLineWidget = nextBlock.firstChild;\n                }\n            }\n            else {\n                nextLineWidget = lineWidget.paragraph.childWidgets[lineIndex + 1];\n            }\n            this.setPositionForLineWidget(nextLineWidget, offset - lineLength);\n            return;\n        }\n        else if (offset < 0) {\n            var prevLine = lineWidget.paragraph.childWidgets[lineIndex - 1];\n            var currentOffSet = this.selection.getLineLength(prevLine) + offset;\n            this.setPositionForLineWidget(prevLine, currentOffSet);\n            return;\n        }\n        else {\n            this.currentWidget = lineWidget;\n            this.offset = offset;\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * move to next text position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveNextPosition = function (isNavigate) {\n        if (isNullOrUndefined(isNavigate)) {\n            isNavigate = true;\n        }\n        var inline = this.selection.getNextStartInline(this.currentWidget, this.offset);\n        if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n            if (isNavigate) {\n                this.moveNextPositionInternal(inline);\n                this.moveNextPosition();\n                return;\n            }\n            else {\n                var line = inline.fieldEnd.line;\n                var fieldEnd = inline.fieldEnd;\n                var fieldEndOffset = line.getOffset(fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(line, fieldEndOffset.toString());\n                if (TextPosition.isForwardSelection(this.selection.end.getHierarchicalIndexInternal(), fieldEndIndex)) {\n                    //If field end is after selection end, extend selection end to field end.\n                    this.selection.end.moveToInline(inline.fieldEnd, 1);\n                    return;\n                }\n                this.moveToInline(inline.fieldEnd, 1);\n            }\n        }\n        var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        var index = 0;\n        if (nextOffset > this.offset) {\n            this.offset = nextOffset;\n            var info = this.currentWidget.getInline(this.offset, index);\n            inline = info.element;\n            index = info.index;\n            if (!isNullOrUndefined(inline) && index === inline.length && (inline.nextNode instanceof FieldElementBox\n                || inline.nextNode instanceof BookmarkElementBox)) {\n                var nextValidInline = this.selection.getNextValidElement(inline.nextNode);\n                //Moves to field end mark or Bookmark end.\n                if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 1\n                    || nextValidInline instanceof BookmarkElementBox && nextValidInline.bookmarkType === 1) {\n                    inline = nextValidInline;\n                    this.currentWidget = inline.line;\n                    this.offset = this.currentWidget.getOffset(inline, this.documentHelper.isFormFillProtectedMode ? 0 : 1);\n                }\n            }\n        }\n        else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n            var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n            if (nextLineWidget) {\n                this.currentWidget = nextLineWidget;\n                this.offset = this.selection.getStartLineOffset(this.currentWidget);\n            }\n            var inlineObj = this.currentWidget.getInline(this.offset, index);\n            inline = inlineObj.element;\n            index = inlineObj.index;\n            if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n                this.offset++;\n            }\n        }\n        else {\n            this.updateOffsetToNextParagraph(index, false);\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move text position to previous paragraph inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToPreviousParagraphInTable = function (selection) {\n        var previousParagraph;\n        var currentPara = this.currentWidget.paragraph;\n        if (currentPara.isInsideTable) {\n            previousParagraph = selection.getPreviousSelectionCell(currentPara.associatedCell);\n        }\n        else {\n            previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n        }\n        if (isNullOrUndefined(previousParagraph)) {\n            return;\n        }\n        this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n        this.offset = this.currentWidget.getEndOffset() + 1;\n    };\n    TextPosition.prototype.updateOffsetToNextParagraph = function (indexInInline, isHighlight) {\n        //Moves to owner and get next paragraph.\n        var inline;\n        var positionAtStart = false;\n        var nextParagraph = undefined;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        if (!isHighlight) {\n            nextParagraph = this.selection.getNextParagraphBlock(this.paragraph);\n        }\n        else if (lineIndex + 1 < this.paragraph.childWidgets.length) {\n            var nextLineWidget = this.paragraph.childWidgets[lineIndex + 1];\n            if (nextLineWidget) {\n                this.currentWidget = nextLineWidget;\n                this.offset = 1;\n            }\n        }\n        else {\n            nextParagraph = this.selection.getNextSelectionBlock(this.paragraph);\n            if (!isNullOrUndefined(nextParagraph)) {\n                if (nextParagraph.containerWidget instanceof TableCellWidget) {\n                    if (this.selection.start.paragraph.isInsideTable) {\n                        var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, nextParagraph.associatedCell);\n                        positionAtStart = !containerCell.ownerTable.contains(nextParagraph.associatedCell);\n                    }\n                    else {\n                        positionAtStart = true;\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(nextParagraph) && nextParagraph.childWidgets.length > 0) {\n            if (!positionAtStart) {\n                this.currentWidget = nextParagraph.firstChild;\n                this.offset = isHighlight ? 1 : this.selection.getStartLineOffset(this.currentWidget);\n            }\n            else {\n                this.currentWidget = nextParagraph.childWidgets[nextParagraph.childWidgets.length - 1];\n                this.offset = this.selection.getLineLength(this.currentWidget) + 1;\n            }\n        }\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n            this.offset++;\n        }\n    };\n    TextPosition.prototype.updateOffsetToPrevPosition = function (index, isHighlight) {\n        var inlineInfo;\n        var inline;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        var prevOffset = this.selection.getPreviousValidOffset(this.currentWidget.paragraph, this.offset);\n        if (this.offset > prevOffset) {\n            this.offset = prevOffset;\n        }\n        else if (lineIndex > 0) {\n            var prevLineWidget = this.paragraph.childWidgets[lineIndex - 1];\n            if (prevLineWidget) {\n                this.currentWidget = prevLineWidget;\n                var endOffset = this.currentWidget.getEndOffset();\n                this.offset = endOffset > 0 ? endOffset - 1 : endOffset;\n            }\n        }\n        else {\n            //Moves to owner and get previous paragraph.\n            var previousParagraph = undefined;\n            var positionAtStart = false;\n            if (!isHighlight) {\n                previousParagraph = this.selection.getPreviousParagraphBlock(this.paragraph);\n            }\n            else {\n                previousParagraph = this.selection.getPreviousSelectionBlock(this.paragraph);\n                if (!isNullOrUndefined(previousParagraph)) {\n                    if (previousParagraph.containerWidget instanceof TableCellWidget) {\n                        if (this.selection.start.paragraph.isInsideTable) {\n                            var containerCell = this.selection.getContainerCellOf(this.selection.start.paragraph.associatedCell, previousParagraph.associatedCell);\n                            positionAtStart = !containerCell.ownerTable.contains(previousParagraph.associatedCell);\n                        }\n                        else {\n                            positionAtStart = true;\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(previousParagraph)) {\n                if (!positionAtStart) {\n                    this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n                    // line end with page break and updating offset before page break.\n                    this.offset = (this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak) ? this.currentWidget.getEndOffset() - 1 : this.currentWidget.getEndOffset();\n                }\n                else {\n                    this.currentWidget = previousParagraph.firstChild;\n                    this.offset = this.selection.getStartLineOffset(this.currentWidget);\n                }\n            }\n        }\n        index = 0;\n        inlineInfo = this.currentWidget.getInline(this.offset, index);\n        inline = inlineInfo.element;\n        index = inlineInfo.index;\n        if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n            this.offset++;\n        }\n        if (inline instanceof FieldElementBox) {\n            //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n            var previousInline = this.selection.getPreviousValidElement(inline);\n            if (!isNullOrUndefined(previousInline)) {\n                inline = previousInline;\n                this.currentWidget = inline.line;\n                this.offset = this.currentWidget.getOffset(inline, inline.length);\n                if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n                    this.offset--;\n                }\n            }\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Moves the text position to start of the next paragraph.\n     */\n    TextPosition.prototype.moveToNextParagraphStartInternal = function () {\n        var paragraph = this.currentWidget.paragraph;\n        if (!isNullOrUndefined(this.selection.getNextParagraphBlock(paragraph))) {\n            this.currentWidget = this.selection.getNextParagraphBlock(paragraph).firstChild;\n            this.offset = this.selection.getStartOffset(paragraph);\n            this.updatePhysicalPosition(true);\n        }\n    };\n    /**\n     * Move to previous position\n     *\n     * @private\n     */\n    TextPosition.prototype.movePreviousPosition = function () {\n        var index = 0;\n        var inlineInfo = this.currentWidget.getInline(this.offset, index);\n        var inline = inlineInfo.element;\n        index = inlineInfo.index;\n        var lineIndex = this.paragraph.childWidgets.indexOf(this.currentWidget);\n        if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)\n            || inline instanceof BookmarkElementBox && inline.bookmarkType === 1) {\n            this.movePreviousPositionInternal(inline);\n        }\n        this.updateOffsetToPrevPosition(index, false);\n    };\n    /**\n     * Move to next position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveNextPositionInternal = function (fieldBegin) {\n        var inline;\n        if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            inline = fieldBegin.fieldEnd;\n        }\n        else {\n            inline = fieldBegin.fieldSeparator;\n            this.currentWidget = inline.line;\n            if (this.currentWidget === fieldBegin.fieldEnd.line && !this.selection.hasValidInline(this.paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n        }\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, 1);\n    };\n    /**\n     * Move text position backward\n     *\n     * @private\n     */\n    TextPosition.prototype.moveBackward = function () {\n        var indexInInline = 0;\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!this.owner.selectionModule.isEmpty && !isNullOrUndefined(inline)) {\n            var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n            if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n                var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n                var fieldEndOffset = nextInline.fieldEnd.line.getOffset(nextInline.fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(nextInline.fieldEnd.line, fieldEndOffset.toString());\n                if (!TextPosition.isForwardSelection(fieldEndIndex, hierarchicalIndex)) {\n                    //If field end is after selection start, move selection start to field end.\n                    this.owner.selectionModule.start.setPositionParagraph(nextInline.fieldEnd.line, fieldEndOffset);\n                    return;\n                }\n            }\n        }\n        if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n            var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n            var fieldEndOffset = inline.line.getOffset(inline, 1);\n            var fieldEndIndex = this.getHierarchicalIndex(inline.line, fieldEndOffset.toString());\n            if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldEndIndex)) {\n                //If field end is after selection start, extend selection end to field begin.\n                var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n                this.currentWidget = inline.fieldBegin.line;\n                this.offset = fieldBeginOffset;\n                //Updates physical position in current page.\n                this.updatePhysicalPosition(true);\n                return;\n            }\n            this.movePreviousPositionInternal(inline);\n        }\n        this.updateOffsetToPrevPosition(indexInInline, true);\n    };\n    /**\n     * Move text position forward\n     *\n     * @private\n     */\n    TextPosition.prototype.moveForward = function () {\n        var indexInInline = 0;\n        var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!isNullOrUndefined(inline)) {\n            if (!this.owner.selectionModule.isEmpty && indexInInline === inline.length && inline instanceof FieldElementBox\n                && inline.fieldType === 1) {\n                var hierarchicalIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n                var fieldBeginOffset = inline.fieldBegin.line.getOffset(inline.fieldBegin, 0);\n                var fieldBeginIndex = this.getHierarchicalIndex(inline.fieldBegin.line, fieldBeginOffset.toString());\n                if (!TextPosition.isForwardSelection(hierarchicalIndex, fieldBeginIndex)) {\n                    //If field begin is before selection start, move selection start to field begin.\n                    this.owner.selectionModule.start.setPositionParagraph(inline.fieldBegin.line, fieldBeginOffset);\n                    return;\n                }\n            }\n            inline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n        }\n        if (inline instanceof FieldElementBox && !isNullOrUndefined(inline.fieldEnd)) {\n            var selectionStartParagraph = this.owner.selectionModule.start.paragraph;\n            var selectionStartIndex = 0;\n            var selectionStartInlineObj = selectionStartParagraph.getInline(this.owner.selectionModule.start.offset, selectionStartIndex);\n            var selectionStartInline = selectionStartInlineObj.element;\n            selectionStartIndex = selectionStartInlineObj.index;\n            var nextRenderInline = this.selection.getNextRenderedElementBox(selectionStartInline, selectionStartIndex);\n            if (nextRenderInline === inline) {\n                this.moveNextPositionInternal(inline);\n            }\n            else {\n                //If selection start is before field begin, extend selection end to field end.\n                inline = inline.fieldEnd;\n                this.currentWidget = inline.line;\n                this.offset = this.currentWidget.getOffset(inline, 1);\n                //Updates physical position in current page.\n                this.updatePhysicalPosition(true);\n                return;\n            }\n        }\n        else if ((inline instanceof FieldElementBox)\n            && (inline.fieldType === 0 || inline.fieldType === 1)) {\n            this.currentWidget = inline.line;\n            this.offset = this.currentWidget.getOffset(inline, 1);\n        }\n        indexInInline = 0;\n        var nextOffset = this.selection.getNextValidOffset(this.currentWidget, this.offset);\n        var length = this.selection.getLineLength(this.currentWidget);\n        var isParagraphEnd = this.selection.isParagraphLastLine(this.currentWidget);\n        if (this.offset < nextOffset) {\n            this.offset = nextOffset;\n            var inlineObj_1 = this.currentWidget.getInline(this.offset, indexInInline);\n            inline = inlineObj_1.element;\n            indexInInline = inlineObj_1.index;\n            if (!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox) {\n                var nextValidInline = this.selection.getNextValidElement(inline.nextNode);\n                //Moves to field end mark.\n                if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 1) {\n                    inline = nextValidInline;\n                    this.offset = this.currentWidget.getOffset(inline, 1);\n                }\n            }\n        }\n        else if (this.offset === nextOffset && inline instanceof FieldElementBox && inline.fieldType === 1 &&\n            inline.previousNode instanceof ImageElementBox) {\n            this.offset = nextOffset;\n        }\n        else if (this.offset === nextOffset && this.offset < length + 1 && isParagraphEnd) {\n            this.offset = length + 1;\n        }\n        else {\n            this.updateOffsetToNextParagraph(indexInInline, true);\n        }\n        //Gets physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move to given inline\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToInline = function (inline, index) {\n        this.currentWidget = inline.line;\n        this.offset = this.currentWidget.getOffset(inline, index);\n        //Updates physical position in current page.\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Return true is start element exist before end element\n     *\n     * @private\n     */\n    TextPosition.isForwardSelection = function (start, end) {\n        if (start === end) {\n            return true;\n        }\n        start = start.replace(/S;/g, '');\n        end = end.replace(/S;/g, '');\n        start = start.replace(/C;/g, '');\n        end = end.replace(/C;/g, '');\n        start = start.replace(/H;/g, '');\n        end = end.replace(/H;/g, '');\n        start = start.replace(/F;/g, '');\n        end = end.replace(/F;/g, '');\n        start = start.replace(/FN;/g, '');\n        end = end.replace(/FN;/g, '');\n        start = start.replace(/EN;/g, '');\n        end = end.replace(/EN;/g, '');\n        var selectionStart = start.split(';');\n        var selectionEnd = end.split(';');\n        var length = selectionStart.length;\n        if (length > selectionEnd.length) {\n            length = selectionEnd.length - 1;\n        }\n        for (var i = 0; i < length; i++) {\n            var startOffset = parseFloat(selectionStart[i]);\n            var endOffset = parseFloat(selectionEnd[i]);\n            if (startOffset !== endOffset) {\n                return startOffset < endOffset;\n            }\n        }\n        return false;\n    };\n    /**\n     * Move to previous position offset\n     *\n     * @param fieldEnd\n     * @private\n     */\n    TextPosition.prototype.movePreviousPositionInternal = function (fieldEnd) {\n        var inline;\n        if (fieldEnd instanceof FieldElementBox && isNullOrUndefined(fieldEnd.fieldSeparator)) {\n            inline = this.selection.getPreviousValidElement(fieldEnd.fieldBegin);\n        }\n        else {\n            inline = this.selection.getPreviousValidElement(fieldEnd);\n        }\n        this.currentWidget = inline.line;\n        var index = inline instanceof FieldElementBox || inline instanceof BookmarkElementBox && inline.bookmarkType === 1 ? 0 : inline.length;\n        this.offset = this.currentWidget.getOffset(inline, index);\n    };\n    /**\n     * Moves the text position to start of the word.\n     *\n     * @param type\n     * @private\n     */\n    TextPosition.prototype.moveToWordStartInternal = function (type) {\n        var endOffset = this.currentWidget.getEndOffset();\n        var currentPara = this.currentWidget.paragraph;\n        var selection = this.selection;\n        if (type === 2 && (this.offset === endOffset || this.offset === endOffset + 1)) {\n            return;\n        }\n        if (this.offset === endOffset + 1) {\n            this.offset = endOffset;\n        }\n        else if (this.offset === selection.getStartOffset(currentPara) && this.currentWidget === currentPara.childWidgets[0]) {\n            var previousParagraph = selection.getPreviousParagraphBlock(currentPara);\n            if (isNullOrUndefined(previousParagraph)) {\n                return;\n            }\n            this.currentWidget = previousParagraph.childWidgets[previousParagraph.childWidgets.length - 1];\n            this.offset = this.currentWidget.getEndOffset();\n        }\n        else {\n            if (this.offset === selection.getStartLineOffset(this.currentWidget)) {\n                var lineIndex = currentPara.childWidgets.indexOf(this.currentWidget);\n                if (lineIndex - 1 >= 0) {\n                    this.currentWidget = currentPara.childWidgets[lineIndex - 1];\n                    this.offset = this.currentWidget.getEndOffset();\n                }\n            }\n            var isStarted = false;\n            var endSelection = false;\n            var indexInInline = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            this.getPreviousWordOffset(inline, selection, indexInInline, type, (inline instanceof FieldElementBox && inline.fieldType === 1), isStarted, endSelection, this);\n        }\n        if (type === 1) {\n            this.calculateOffset();\n        }\n        this.updatePhysicalPosition(true);\n    };\n    TextPosition.prototype.getNextWordOffset = function (inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (inline instanceof TextElementBox) {\n            this.getNextWordOffsetSpan(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof ImageElementBox) {\n            this.getNextWordOffsetImage(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n            this.getNextWordOffsetFieldBegin(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 2 || inline instanceof BookmarkElementBox) {\n            this.getNextWordOffsetFieldSeparator(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n            this.getNextWordOffsetFieldEnd(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (inline instanceof CommentCharacterElementBox) {\n            this.getNextWordOffsetComment(inline, indexInInline, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldBegin = function (fieldBegin, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n        var endOffset = startOffset + fieldBegin.length;\n        if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            this.getNextWordOffsetFieldEnd(fieldBegin.fieldEnd, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (type === 0) {\n            this.getNextWordOffsetFieldSeparator(fieldBegin.fieldSeparator, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n        else if (!isNullOrUndefined(fieldBegin.fieldEnd)) {\n            var inline = fieldBegin.fieldSeparator;\n            if (inline.line.paragraph === fieldBegin.fieldEnd.line.paragraph && !this.selection.hasValidInline(inline.line.paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n            this.getNextWordOffset(inline, 0, type, !(endPosition.paragraph === fieldBegin.line.paragraph && endPosition.offset === startOffset), endSelection, endPosition, excludeSpace);\n            if (endSelection && !isNullOrUndefined(fieldBegin.fieldSeparator) && (endPosition.paragraph === fieldBegin.line.paragraph) && (endPosition.offset === fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length))) {\n                endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n                return;\n            }\n            if (!endSelection) {\n                endPosition.setPositionParagraph(fieldBegin.fieldEnd.line, fieldBegin.fieldEnd.line.getOffset(fieldBegin.fieldEnd, fieldBegin.fieldEnd.length));\n            }\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetImage = function (image, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (isInField) {\n            endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n            endSelection = false;\n            return;\n        }\n        if (indexInInline === 0) {\n            var startOffset = image.line.getOffset(image, 0);\n            endSelection = true;\n            if (endPosition.offset === startOffset) {\n                if (isNullOrUndefined(image.nextNode)) {\n                    endPosition.setPositionParagraph(image.line, startOffset + image.length);\n                }\n                else {\n                    this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                }\n            }\n            else {\n                endPosition.setPositionParagraph(image.line, startOffset);\n            }\n        }\n        else if (!isNullOrUndefined(image.nextNode)) {\n            this.getNextWordOffset(image.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetSpan = function (span, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (span.text === '\\t' || span.text === '\\v') {\n            if (isInField) {\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                endSelection = false;\n                return;\n            }\n            if (indexInInline === 0) {\n                endSelection = true;\n                var startOffset = span.line.getOffset(span, 0);\n                if (endPosition.offset === startOffset) {\n                    endPosition.setPositionParagraph(span.line, startOffset + span.length);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, startOffset);\n                }\n            }\n            else if (!isNullOrUndefined(span.nextNode)) {\n                this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n            }\n        }\n        else {\n            var wordEndIndex = 0;\n            if (indexInInline === 0 && endSelection && (HelperMethods.wordSplitCharacters.indexOf(span.text[0]) === -1)) {\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                if (isInField) {\n                    return;\n                }\n            }\n            else if (indexInInline < span.length) {\n                var txt = indexInInline > 0 && span.text.length - 1 >= indexInInline ? span.text.slice(indexInInline, span.length) : span.text;\n                wordEndIndex = HelperMethods.indexOfAny(txt, HelperMethods.wordSplitCharacters);\n                if (wordEndIndex === -1 && span.nextNode instanceof CommentCharacterElementBox &&\n                    isNullOrUndefined(span.nextNode.nextNode)) {\n                    wordEndIndex = span.length;\n                }\n                if (wordEndIndex !== -1) {\n                    if (isInField) {\n                        endSelection = false;\n                        return;\n                    }\n                    var offset = span.line.getOffset(span, wordEndIndex + indexInInline);\n                    var spaceCharacter = [' ', '　'];\n                    if ((excludeSpace || spaceCharacter.indexOf(txt[wordEndIndex]) === -1) && !endSelection && span.line.paragraph === endPosition.paragraph && offset !== endPosition.offset) {\n                        endSelection = true;\n                        endPosition.setPositionParagraph(span.line, offset);\n                        return;\n                    }\n                    var isSpaceCharacter = false;\n                    if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1) {\n                        isSpaceCharacter = true;\n                        wordEndIndex++;\n                    }\n                    while (wordEndIndex < txt.length && !isSpaceCharacter) {\n                        if (HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex]) === -1) {\n                            break;\n                        }\n                        wordEndIndex++;\n                        if (spaceCharacter.indexOf(txt[wordEndIndex]) !== -1 && spaceCharacter.indexOf(txt[wordEndIndex + 1]) === -1 && HelperMethods.wordSplitCharacters.indexOf(txt[wordEndIndex + 1]) !== -1) {\n                            wordEndIndex++;\n                            break;\n                        }\n                    }\n                    endSelection = true;\n                    var nextNodeText = void 0;\n                    if (!isNullOrUndefined(span.nextNode)) {\n                        nextNodeText = span.nextNode.text;\n                    }\n                    if (wordEndIndex < txt.length || (!isNullOrUndefined(nextNodeText) && span.line == span.nextNode.line && spaceCharacter.indexOf(txt[txt.length - 1]) !== -1 && spaceCharacter.indexOf(nextNodeText[0]) === -1)) {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n                    }\n                    else if (!isNullOrUndefined(span.nextNode)) {\n                        this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                    }\n                    else {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, wordEndIndex + indexInInline));\n                    }\n                }\n                else if (!isNullOrUndefined(span.nextNode)) {\n                    this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, span.line.getEndOffset());\n                }\n            }\n            else if (!isNullOrUndefined(span.nextNode)) {\n                this.getNextWordOffset(span.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n            }\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldSeparator = function (fieldSeparator, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (!isNullOrUndefined(fieldSeparator.nextNode)) {\n            this.getNextWordOffset(fieldSeparator.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetComment = function (comment, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        if (!isNullOrUndefined(comment.nextNode)) {\n            this.getNextWordOffset(comment.nextNode, 0, type, isInField, endSelection, endPosition, excludeSpace);\n        }\n    };\n    TextPosition.prototype.getNextWordOffsetFieldEnd = function (fieldEnd, indexInInline, type, isInField, endSelection, endPosition, excludeSpace) {\n        var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n        var endOffset = startOffset + fieldEnd.length;\n        if (endPosition.offset === startOffset) {\n            endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n            if (isNullOrUndefined(fieldEnd.nextNode)) {\n                return;\n            }\n        }\n        if (!isNullOrUndefined(fieldEnd.nextNode)) {\n            this.getNextWordOffset(fieldEnd.nextNode, 0, type, false, endSelection, endPosition, excludeSpace);\n            if (endPosition.offset === endOffset) {\n                endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(fieldEnd.line, startOffset);\n        }\n        endSelection = true;\n    };\n    TextPosition.prototype.getPreviousWordOffset = function (inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (inline instanceof TextElementBox) {\n            this.getPreviousWordOffsetSpan(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof ImageElementBox) {\n            this.getPreviousWordOffsetImage(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n            this.getPreviousWordOffsetFieldBegin(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n            this.getPreviousWordOffsetFieldSeparator(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n            this.getPreviousWordOffsetFieldEnd(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof BookmarkElementBox) {\n            this.getPreviousWordOffsetBookMark(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof ListTextElementBox && inline.previousNode) {\n            this.getPreviousWordOffsetSpan(inline.previousNode, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (inline instanceof CommentCharacterElementBox) {\n            this.getPreviousWordOffsetComment(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetBookMark = function (bookmark, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (bookmark.previousNode) {\n            if (bookmark.previousNode instanceof TextElementBox) {\n                var inline = bookmark.previousNode;\n                if (HelperMethods.lastIndexOfAny(inline.text, HelperMethods.wordSplitCharacters) !== inline.text.length - 1) {\n                    this.getPreviousWordOffset(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                }\n                else {\n                    endPosition.setPositionParagraph(bookmark.line, bookmark.line.getOffset(bookmark, 0));\n                }\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(bookmark.line, selection.getStartLineOffset(bookmark.line));\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldEnd = function (fieldEnd, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        var startOffset = fieldEnd.line.getOffset(fieldEnd, 0);\n        var endOffset = startOffset + fieldEnd.length;\n        if (isNullOrUndefined(fieldEnd.fieldSeparator)) {\n            this.getPreviousWordOffsetFieldBegin(fieldEnd.fieldBegin, selection, 0, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else if (type === 0 && !isNullOrUndefined(fieldEnd.previousNode)) {\n            var inline = fieldEnd.previousNode;\n            this.getPreviousWordOffset(inline, selection, inline.length, type, (inline instanceof FieldElementBox && inline.fieldType === 1), isStarted, endSelection, endPosition);\n        }\n        else if (!isNullOrUndefined(fieldEnd.fieldBegin) && type !== 0) {\n            var inline = fieldEnd.previousNode;\n            if (isNullOrUndefined(inline) || (inline.line.paragraph === fieldEnd.fieldBegin.line.paragraph && !selection.hasValidInline(inline.line.paragraph, inline, fieldEnd.fieldBegin))) {\n                inline = fieldEnd.fieldBegin;\n            }\n            this.getPreviousWordOffset(inline, selection, inline.length, type, !(endPosition.paragraph === fieldEnd.line.paragraph && endPosition.offset === endOffset), isStarted, endSelection, endPosition);\n            if (endSelection && endPosition.paragraph === fieldEnd.line.paragraph\n                && endPosition.offset === startOffset) {\n                endPosition.setPositionParagraph(fieldEnd.line, endOffset);\n                return;\n            }\n            if (!endSelection) {\n                endPosition.setPositionParagraph(fieldEnd.fieldBegin.line, fieldEnd.fieldBegin.line.getOffset(fieldEnd.fieldBegin, 0));\n            }\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldSeparator = function (fieldSeparator, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        this.getPreviousWordOffsetFieldBegin(fieldSeparator.fieldBegin, selection, fieldSeparator.fieldBegin.length, type, isInField, isStarted, endSelection, endPosition);\n    };\n    /* get previous word offset from comment\n    * @private\n    */\n    TextPosition.prototype.getPreviousWordOffsetComment = function (comment, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (comment.previousNode) {\n            var inline = comment.previousNode;\n            if (comment.previousNode instanceof TextElementBox\n                && HelperMethods.lastIndexOfAny(inline.text, HelperMethods.wordSplitCharacters) !== inline.text.length - 1) {\n                this.getPreviousWordOffset(inline, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n            }\n            else {\n                this.getPreviousWordOffset(comment.previousNode, selection, comment.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n        else {\n            endPosition.setPositionParagraph(comment.line, selection.getStartLineOffset(comment.line));\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetFieldBegin = function (fieldBegin, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        var startOffset = fieldBegin.line.getOffset(fieldBegin, 0);\n        var endOffset = startOffset + fieldBegin.length;\n        if (endPosition.offset === endOffset) {\n            endPosition.setPositionParagraph(fieldBegin.line, startOffset);\n        }\n        if (!isNullOrUndefined(fieldBegin.previousNode)) {\n            this.getPreviousWordOffset(fieldBegin.previousNode, selection, fieldBegin.previousNode.length, type, false, isStarted, endSelection, endPosition);\n            if (endPosition.offset === startOffset) {\n                if (type !== 0 && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                    endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n                }\n            }\n        }\n        else {\n            if (fieldBegin.fieldSeparator) {\n                endPosition.setPositionParagraph(fieldBegin.line, fieldBegin.fieldSeparator.line.getOffset(fieldBegin.fieldSeparator, fieldBegin.fieldSeparator.length));\n            }\n            else {\n                endPosition.setPositionParagraph(fieldBegin.line, selection.getStartLineOffset(fieldBegin.line));\n            }\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetImage = function (image, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (isInField) {\n            endPosition.setPositionParagraph(image.line, image.line.getOffset(image, indexInInline));\n            endSelection = false;\n            return;\n        }\n        if (indexInInline === image.length) {\n            var endOffset = image.line.getOffset(image, image.length);\n            if (endOffset === endPosition.offset) {\n                endPosition.setPositionParagraph(image.line, endOffset - image.length);\n            }\n            else {\n                endPosition.setPositionParagraph(image.line, endOffset);\n            }\n        }\n        else if (!isNullOrUndefined(image.previousNode)) {\n            this.getPreviousWordOffset(image.previousNode, selection, image.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n        }\n    };\n    TextPosition.prototype.getPreviousWordOffsetSpan = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (span.text === '\\t' || span.text === '\\v') {\n            if (isInField) {\n                endSelection = false;\n                return;\n            }\n            if (indexInInline === span.length) {\n                endSelection = true;\n                var endOffset = span.line.getOffset(span, span.length);\n                if (endOffset === endPosition.offset) {\n                    endPosition.setPositionParagraph(span.line, endOffset - span.length);\n                }\n                else {\n                    endPosition.setPositionParagraph(span.line, endOffset);\n                }\n            }\n            else if (!isNullOrUndefined(span.previousNode)) {\n                this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n        else {\n            var wordStartIndex = 0;\n            if (!isStarted) {\n                while (indexInInline > 0 && span.text[indexInInline - 1] === ' ') {\n                    indexInInline--;\n                }\n                endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n            }\n            if (indexInInline > 0) {\n                isStarted = true;\n                if (indexInInline === 0 && endSelection && (HelperMethods.wordSplitCharacters.indexOf(span.text[0])) === -1) {\n                    endPosition.setPositionParagraph(span.line, span.line.getOffset(span, indexInInline));\n                    endSelection = true;\n                    return;\n                }\n                var txt = span.text.length > indexInInline ? span.text.slice(0, indexInInline) : span.text;\n                wordStartIndex = HelperMethods.lastIndexOfAny(txt, HelperMethods.wordSplitCharacters);\n                if (wordStartIndex === -1 && span.previousElement instanceof CommentCharacterElementBox && isNullOrUndefined(span.previousNode.previousNode)) {\n                    wordStartIndex = span.length;\n                }\n                if (wordStartIndex !== -1) {\n                    if (isInField) {\n                        endSelection = false;\n                        return;\n                    }\n                    while (wordStartIndex > 0 && endSelection && txt[wordStartIndex] !== ' '\n                        && (HelperMethods.wordSplitCharacters.indexOf(txt[wordStartIndex - 1])) !== -1) {\n                        wordStartIndex--;\n                    }\n                    if (txt[wordStartIndex] === ' ' || txt[wordStartIndex] === '　' || !endSelection) {\n                        wordStartIndex++;\n                    }\n                    endSelection = true;\n                    if (wordStartIndex > 0) {\n                        var offset = span.line.getOffset(span, wordStartIndex);\n                        if (span.line.paragraph === endPosition.paragraph && offset === endPosition.offset) {\n                            this.getPreviousWordOffsetSpan(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                        }\n                        else {\n                            endPosition.setPositionParagraph(span.line, offset);\n                        }\n                    }\n                    else if (span.previousNode instanceof TextElementBox) {\n                        var previousNodeText = span.previousNode.text;\n                        if (HelperMethods.wordSplitCharacters.indexOf(span.text[0]) !== -1 && HelperMethods.wordSplitCharacters.indexOf(previousNodeText[previousNodeText.length - 1]) === -1) {\n                            var offset = span.line.getOffset(span, wordStartIndex);\n                            endPosition.setPositionParagraph(span.line, offset);\n                            return;\n                        }\n                        this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n                    }\n                    else {\n                        endPosition.setPositionParagraph(span.line, span.line.getOffset(span, 0));\n                    }\n                }\n                else {\n                    this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n                }\n            }\n            else {\n                this.setPreviousWordOffset(span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition);\n            }\n        }\n    };\n    TextPosition.prototype.setPreviousWordOffset = function (span, selection, indexInInline, type, isInField, isStarted, endSelection, endPosition) {\n        if (span.previousNode instanceof ElementBox && span.line === span.previousNode.line) {\n            this.getPreviousWordOffset(span.previousNode, selection, span.previousNode.length, type, isInField, isStarted, endSelection, endPosition);\n        }\n        else {\n            endPosition.setPositionParagraph(span.line, selection.getStartLineOffset(span.line));\n        }\n    };\n    /**\n     * Validate if text position is in field forward\n     *\n     * @private\n     */\n    TextPosition.prototype.validateForwardFieldSelection = function (currentIndex, selectionEndIndex) {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(currentIndex);\n        textPosition.isUpdateLocation = false;\n        var isPositionMoved = false;\n        if (this.selection.start.paragraph !== this.selection.end.paragraph\n            || this.selection.start.offset === this.selection.getStartOffset(this.selection.start.paragraph)) {\n            // To select Paragraph mark similar to MS WORD\n            if (this.selection.end.offset === this.selection.end.currentWidget.getEndOffset()\n                && this.selection.isParagraphLastLine(this.selection.end.currentWidget)) {\n                this.selection.end.setPositionParagraph(this.selection.end.currentWidget, this.selection.end.offset + 1);\n            }\n        }\n        while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(currentIndex, selectionEndIndex)) {\n            if (!isPositionMoved) {\n                textPosition.moveNextPosition(false);\n                var nextIndex = textPosition.getHierarchicalIndexInternal();\n                //Handled specifically to break infinite looping, if selection ends at last paragraph mark.\n                if (currentIndex === nextIndex) {\n                    break;\n                }\n            }\n            var indexInInline = 0;\n            var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!isNullOrUndefined(inline)) {\n                var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n                if (indexInInline === inline.length && inline instanceof FieldElementBox && inline.fieldType === 1) {\n                    if (inline.line.getOffset(inline, 0) === this.offset) {\n                        return;\n                    }\n                    var lineWidget = inline.fieldBegin.line;\n                    var fieldBeginOffset = lineWidget.getOffset(inline.fieldBegin, 0);\n                    var fieldBeginIndex = this.getHierarchicalIndex(lineWidget, fieldBeginOffset.toString());\n                    if (!TextPosition.isForwardSelection(selectionStartIndex, fieldBeginIndex)) {\n                        this.selection.start.setPositionParagraph(lineWidget, fieldBeginOffset);\n                    }\n                }\n                var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n                if (!isNullOrUndefined(nextInline) && nextInline instanceof ElementBox) {\n                    inline = nextInline;\n                }\n            }\n            isPositionMoved = (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd));\n            if (isPositionMoved) {\n                if (inline.line.getOffset(inline, 0) === this.offset) {\n                    return;\n                }\n                var fieldEnd = inline.fieldEnd;\n                var paragraph = fieldEnd.line.paragraph;\n                var fieldEndOffset = fieldEnd.line.getOffset(fieldEnd, 1);\n                var fieldEndIndex = this.getHierarchicalIndex(fieldEnd.line, fieldEndOffset.toString());\n                if (!TextPosition.isForwardSelection(fieldEndIndex, selectionEndIndex)) {\n                    //If selection end is after field begin, extend selection end to field end.\n                    this.moveToInline(inline.fieldEnd, 1);\n                    return;\n                }\n                textPosition.moveToInline(inline.fieldEnd, 1);\n            }\n            currentIndex = textPosition.getHierarchicalIndexInternal();\n        }\n    };\n    /**\n     * Validate if text position is in field backward\n     *\n     * @private\n     */\n    TextPosition.prototype.validateBackwardFieldSelection = function (currentIndex, selectionEndIndex) {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(currentIndex);\n        textPosition.isUpdateLocation = false;\n        var isSelectParaMark = false;\n        if ((this.selection.start.paragraph !== this.selection.end.paragraph\n            && this.selection.end.offset !== this.selection.getStartOffset(this.selection.start.paragraph)) ||\n            (this.documentHelper.isSelectionChangedOnMouseMoved && this.selection.isParagraphFirstLine(this.selection.end.currentWidget)\n                && this.selection.end.offset === this.selection.getStartOffset(this.selection.start.paragraph))\n            || (((isNullOrUndefined(this.selection.start.paragraph.previousRenderedWidget)\n                && this.selection.start.paragraph === this.selection.end.paragraph\n                && this.selection.end.offset === this.selection.getStartOffset(this.selection.end.paragraph))\n                || (this.selection.start.paragraph !== this.selection.end.paragraph))\n                && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset() && this.selection.start.currentWidget.isLastLine())) {\n            isSelectParaMark = true;\n        }\n        // To select Paragraph mark similar to MS WORD\n        if (isSelectParaMark && this.selection.start.offset === this.selection.start.currentWidget.getEndOffset()\n            && this.selection.isParagraphLastLine(this.selection.start.currentWidget)) {\n            this.selection.start.setPositionParagraph(this.selection.start.currentWidget, this.selection.start.offset + 1);\n        }\n        var selectionStartIndex = this.selection.start.getHierarchicalIndexInternal();\n        while (currentIndex !== selectionEndIndex && TextPosition.isForwardSelection(selectionEndIndex, currentIndex)) {\n            var indexInInline = 0;\n            var inlineObj = textPosition.currentWidget.getInline(textPosition.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!isNullOrUndefined(inline)) {\n                var nextInline = this.selection.getNextRenderedElementBox(inline, indexInInline);\n                if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n                    var paragraph = nextInline.fieldEnd.line;\n                    var fieldEndOffset = paragraph.getOffset(nextInline.fieldEnd, 1);\n                    var fieldEndIndex = this.getHierarchicalIndex(paragraph, fieldEndOffset.toString());\n                    if (!TextPosition.isForwardSelection(fieldEndIndex, selectionStartIndex)) {\n                        this.selection.start.setPositionParagraph(paragraph, fieldEndOffset);\n                        selectionStartIndex = fieldEndIndex;\n                    }\n                }\n            }\n            if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n                var line = inline.fieldBegin.line;\n                var fieldBegin = inline.fieldBegin;\n                var fieldBeginOffset = line.getOffset(fieldBegin, 0);\n                var fieldBeginIndex = this.getHierarchicalIndex(line, fieldBeginOffset.toString());\n                if (!TextPosition.isForwardSelection(selectionEndIndex, fieldBeginIndex)) {\n                    //If field begin is before selection end, extend selection end to field begin.\n                    this.moveToInline(inline.fieldBegin, 0);\n                    return;\n                }\n                textPosition.moveToInline(inline.fieldBegin, 0);\n            }\n            else {\n                textPosition.movePreviousPosition();\n            }\n            currentIndex = textPosition.getHierarchicalIndexInternal();\n        }\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.paragraphStartInternal = function (selection, moveToPreviousParagraph) {\n        var offset = selection.getStartLineOffset(this.currentWidget);\n        if (this.offset === offset && moveToPreviousParagraph) {\n            var startParagraph = this.moveToNextParagraphInTableCheck();\n            if (startParagraph) {\n                this.moveToPreviousParagraphInTable(selection);\n            }\n            else if (!isNullOrUndefined(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n                var paragraphValue = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n                this.currentWidget = paragraphValue.childWidgets[0];\n                this.offset = selection.getStartLineOffset(this.currentWidget);\n            }\n        }\n        else {\n            this.currentWidget = this.currentWidget.paragraph.getSplitWidgets()[0].childWidgets[0];\n            this.offset = offset;\n        }\n        this.calculateOffset();\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.calculateOffset = function () {\n        var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex) {\n            this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Moves the text position to start of the paragraph.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToParagraphStartInternal = function (selection, moveToPreviousParagraph) {\n        var splittedParagraph = this.currentWidget.paragraph;\n        while (splittedParagraph.previousSplitWidget) {\n            splittedParagraph = splittedParagraph.previousSplitWidget;\n        }\n        var startOffset = selection.getStartOffset(splittedParagraph);\n        if (this.offset === startOffset && moveToPreviousParagraph) {\n            var paragraphstart = this.moveToNextParagraphInTableCheck();\n            if (paragraphstart) {\n                this.moveToPreviousParagraphInTable(selection);\n            }\n            else if (!isNullOrUndefined(selection.getPreviousParagraphBlock(this.paragraph))) {\n                this.currentWidget = selection.getPreviousParagraphBlock(this.paragraph).firstChild;\n                this.offset = selection.getStartOffset(this.paragraph);\n            }\n        }\n        else {\n            this.currentWidget = splittedParagraph.firstChild;\n            this.offset = selection.getStartLineOffset(this.currentWidget);\n        }\n        var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex) {\n            this.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n        }\n        this.updatePhysicalPosition(false);\n    };\n    /**\n     * Moves the text position to end of the paragraph.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToParagraphEndInternal = function (selection, moveToNextParagraph) {\n        var splittedParagraph = this.currentWidget.paragraph;\n        while (splittedParagraph.nextSplitWidget) {\n            splittedParagraph = splittedParagraph.nextSplitWidget;\n        }\n        this.currentWidget = splittedParagraph.childWidgets[splittedParagraph.childWidgets.length - 1];\n        var endOffset = this.currentWidget.getEndOffset() + 1;\n        if (this.offset === endOffset && moveToNextParagraph) {\n            var paragraphEnd = this.moveToNextParagraphInTableCheck();\n            if (paragraphEnd) {\n                this.moveToNextParagraphInTable();\n            }\n            else if (!isNullOrUndefined(selection.getNextParagraphBlock(this.currentWidget.paragraph))) {\n                var endParagraph = selection.getNextParagraphBlock(this.currentWidget.paragraph);\n                this.currentWidget = endParagraph.childWidgets[endParagraph.childWidgets.length - 1];\n                this.offset = this.currentWidget.getEndOffset() + 1;\n            }\n        }\n        else {\n            this.offset = endOffset;\n        }\n        this.calculateOffset();\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.moveUp = function (selection, left) {\n        var paragraph = this.currentWidget.paragraph;\n        //Moves text position to start of line.\n        this.moveToLineStartInternal(selection, true);\n        //Moves previous line starting.\n        this.movePreviousPosition();\n        var prevLine = undefined;\n        var currentParagraph = this.currentWidget.paragraph;\n        if (paragraph.isInsideTable && paragraph !== currentParagraph && paragraph.associatedCell !== currentParagraph.associatedCell\n            && (!isNullOrUndefined(currentParagraph.associatedCell) && (paragraph.associatedCell.ownerRow === currentParagraph.associatedCell.ownerRow))) {\n            var ownerRow = currentParagraph.associatedCell.ownerRow;\n            if (ownerRow.previousRenderedWidget instanceof TableRowWidget) {\n                var cell = selection.getFirstCellInRegion(ownerRow.previousRenderedWidget, currentParagraph.associatedCell, left, true);\n                var lastParagraph = selection.getLastParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n            }\n            else {\n                var prevBlock = ownerRow.ownerTable.previousRenderedWidget;\n                do {\n                    if (prevBlock instanceof TableWidget) {\n                        prevBlock = selection.getLastBlockInLastCell(prevBlock);\n                    }\n                } while (prevBlock instanceof TableWidget);\n                if (prevBlock instanceof ParagraphWidget) {\n                    this.setPosition(prevBlock.childWidgets[prevBlock.childWidgets.length - 1], false);\n                }\n            }\n            prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        else {\n            if (!paragraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n                var cell = selection.getFirstCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                var lastParagraph = selection.getLastParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n            }\n            else if (paragraph.isInsideTable && (!isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && paragraph.associatedCell.ownerRow.previousRenderedWidget !== paragraph.associatedCell.ownerRow.previousSplitWidget &&\n                paragraph.associatedCell.ownerRow.previousRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow)) {\n                var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                var lastParagraph = selection.getLastParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n            }\n            prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        //Moves till the Up/Down selection width.\n        var top = selection.getTop(prevLine);\n        // Here, updating the left position when line widget end with page break\n        // to update cursor before page break\n        if ((this.currentWidget.isEndsWithPageBreak || this.currentWidget.isEndsWithColumnBreak) && this.offset === this.currentWidget.getEndOffset() - 1) {\n            left = this.location.x;\n        }\n        selection.updateTextPositionWidget(prevLine, new Point(left, top), this, false);\n    };\n    /**\n     * @private\n     */\n    TextPosition.prototype.moveDown = function (selection, left) {\n        //Moves text position to end of line.\n        var prevParagraph = this.currentWidget.paragraph;\n        var currentLine = this.currentWidget;\n        this.moveToLineEndInternal(selection, true);\n        var length = this.selection.getParagraphLength(this.currentWidget.paragraph);\n        if (this.offset > length) {\n            this.offset = length;\n        }\n        //Moves next line starting.\n        this.moveNextPosition();\n        var nextLine = undefined;\n        if (prevParagraph.isInsideTable && prevParagraph !== this.currentWidget.paragraph && prevParagraph.associatedCell !== this.currentWidget.paragraph.associatedCell && (!isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow === this.currentWidget.paragraph.associatedCell.ownerRow)) {\n            var ownerRow = this.currentWidget.paragraph.associatedCell.ownerRow;\n            if (prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable && prevParagraph.associatedCell.cellFormat.rowSpan > 1 && prevParagraph.associatedCell.cellFormat.rowSpan + prevParagraph.associatedCell.ownerRow.rowIndex === prevParagraph.associatedCell.ownerTable.childWidgets.length) {\n                //If the prevParagraph  owner cell is Verically merged upto the last row, then theposition moved to next column. the position moved to out of the current tabel so owner row is assigned to last row.\n                ownerRow = this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets[this.currentWidget.paragraph.associatedCell.ownerTable.childWidgets.length - 1];\n            }\n            if (ownerRow.nextRenderedWidget instanceof TableRowWidget) {\n                var cell = this.selection.getLastCellInRegion(ownerRow.nextRenderedWidget, this.currentWidget.paragraph.associatedCell, left, false);\n                this.setPosition(this.selection.getFirstParagraph(cell).childWidgets[0], true);\n            }\n            else {\n                var nextBlock = this.selection.getNextRenderedBlock(ownerRow.ownerTable);\n                do {\n                    if (nextBlock instanceof TableWidget) {\n                        nextBlock = this.selection.getFirstBlockInFirstCell(nextBlock);\n                    }\n                } while (nextBlock instanceof TableWidget);\n                if (nextBlock instanceof ParagraphWidget) {\n                    this.setPosition(nextBlock.childWidgets[0], true);\n                }\n            }\n            nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        else {\n            if (!prevParagraph.isInsideTable && this.currentWidget.paragraph.isInsideTable) {\n                var cell = this.selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, false);\n                this.setPosition(this.selection.getFirstParagraph(cell).childWidgets[0], true);\n            }\n            else if (prevParagraph.isInsideTable && (!isNullOrUndefined(this.currentWidget.paragraph.associatedCell) && prevParagraph.associatedCell.ownerRow.nextRenderedWidget !== prevParagraph.associatedCell.ownerRow.nextSplitWidget\n                && prevParagraph.associatedCell.ownerRow.nextRenderedWidget === this.currentWidget.paragraph.associatedCell.ownerRow)) {\n                var cell = selection.getLastCellInRegion(this.currentWidget.paragraph.associatedCell.ownerRow, this.currentWidget.paragraph.associatedCell, this.owner.selectionModule.upDownSelectionLength, true);\n                this.setPosition(selection.getFirstParagraph(cell).childWidgets[0], false);\n            }\n            nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        }\n        //Moves till the Up/Down selection width.\n        var top = this.selection.getTop(nextLine);\n        if (nextLine !== currentLine) {\n            this.selection.updateTextPositionWidget(nextLine, new Point(left, top), this, false);\n        }\n    };\n    /**\n     * Moves the text position to start of the line.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToLineStartInternal = function (selection, moveToPreviousLine) {\n        if (this.location.x > this.viewer.clientActiveArea.right) {\n            this.offset = this.offset - 1;\n        }\n        var currentLine = selection.getLineWidgetInternal(this.currentWidget, this.offset, moveToPreviousLine);\n        var firstElement = selection.getFirstElementInternal(currentLine);\n        this.documentHelper.moveCaretPosition = 1;\n        var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n        if (isNullOrUndefined(firstElement) && this.offset > startOffset) {\n            var index = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, index);\n            var inline = inlineObj.element;\n            index = inlineObj.index;\n            if (inline instanceof TextElementBox && inline.text !== '\\v') {\n                this.offset = startOffset;\n            }\n        }\n        else if (!isNullOrUndefined(firstElement)) {\n            var indexInInline = 0;\n            this.currentWidget = firstElement.line;\n            this.offset = this.currentWidget.getOffset(firstElement, indexInInline);\n            indexInInline = 0;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (inline instanceof FieldElementBox) {\n                //Checks if field character is part of rendered field, otherwise moves to previous rendered content.\n                var prevInline = selection.getPreviousValidElement(inline);\n                if (!isNullOrUndefined(prevInline)) {\n                    inline = prevInline;\n                    this.currentWidget = inline.line;\n                    this.offset = this.currentWidget.getOffset(inline, inline.length);\n                    if (inline instanceof FieldElementBox) {\n                        this.offset--;\n                    }\n                }\n            }\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Check paragraph is inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToNextParagraphInTableCheck = function () {\n        if ((this.selection.start.paragraph.isInsideTable || this.paragraph.isInsideTable)\n            && (this.selection.start.paragraph.associatedCell !== this.paragraph.associatedCell\n                || this.selection.isCellSelected(this.selection.start.paragraph.associatedCell, this.selection.start, this))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Moves the text position to end of the word.\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToWordEndInternal = function (type, excludeSpace) {\n        // type === 0 -------->CTRL+ARROW Navigation\n        // type === 1 -------->CTRL+SHIFT+ARROW Selection\n        // type === 2 -------->Double-tap Word Selection\n        var incrementValue = 0;\n        var endOffset = this.currentWidget.getEndOffset();\n        if (this.selection.isParagraphFirstLine(this.currentWidget)) {\n            if (this.currentWidget.children[0] instanceof ListTextElementBox) {\n                incrementValue = 1;\n            }\n            if (this.currentWidget.children[1] instanceof ListTextElementBox) {\n                incrementValue = 2;\n            }\n        }\n        if ((this.offset + incrementValue === endOffset || this.offset === endOffset + 1) && isNullOrUndefined(this.currentWidget.nextLine)) {\n            if (this.offset === endOffset && type !== 0) {\n                this.setPositionParagraph(this.currentWidget, endOffset + 1);\n            }\n            else {\n                var nextParagraph = this.selection.getNextParagraphBlock(this.currentWidget.paragraph);\n                if (isNullOrUndefined(nextParagraph)) {\n                    return;\n                }\n                this.currentWidget = nextParagraph.childWidgets[0];\n                this.offset = this.selection.getStartLineOffset(this.currentWidget);\n                if (type === 1) {\n                    var nextWord = this.moveToNextParagraphInTableCheck();\n                    if (nextWord) {\n                        this.moveToNextParagraphInTable();\n                    }\n                    else {\n                        this.moveToWordEndInternal(type, excludeSpace);\n                    }\n                }\n            }\n        }\n        else {\n            var indexInInline = 0;\n            var endSelection = false;\n            var inlineObj = this.currentWidget.getInline(this.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            this.getNextWordOffset(inline, indexInInline, type, false, endSelection, this, excludeSpace);\n        }\n        if (type !== 0) {\n            var selectionStartIndex = this.owner.selectionModule.start.getHierarchicalIndexInternal();\n            var selectionEndIndex = this.getHierarchicalIndexInternal();\n            if (selectionStartIndex !== selectionEndIndex) {\n                this.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * move text position to next paragraph inside table\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToNextParagraphInTable = function () {\n        var paragraph = this.currentWidget.paragraph;\n        var nextParagraph = (paragraph.isInsideTable) ? this.selection.getNextSelectionCell(paragraph.associatedCell) :\n            this.selection.getNextParagraphBlock(paragraph);\n        if (isNullOrUndefined(nextParagraph)) {\n            return;\n        }\n        this.currentWidget = nextParagraph.childWidgets[nextParagraph.childWidgets.length - 1];\n        this.offset = this.currentWidget.getEndOffset() + 1;\n    };\n    /**\n     * Moves the text position to start of the previous paragraph.\n     *\n     */\n    TextPosition.prototype.moveToPreviousParagraph = function (selection) {\n        var startOffset = selection.getStartOffset(this.currentWidget.paragraph);\n        if (this.offset === startOffset && !isNullOrUndefined(selection.getPreviousParagraphBlock(this.currentWidget.paragraph))) {\n            var previousParagraph = selection.getPreviousParagraphBlock(this.currentWidget.paragraph);\n            this.currentWidget = previousParagraph.childWidgets[0];\n            this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n        }\n        else {\n            this.offset = selection.getStartOffset(this.currentWidget.paragraph);\n        }\n        this.updatePhysicalPosition(true);\n    };\n    /**\n     * Move to previous line from current position\n     *\n     * @private\n     */\n    TextPosition.prototype.moveToPreviousLine = function (selection, left) {\n        var currentIndex = this.getHierarchicalIndexInternal();\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        //Moves text position to start of line.\n        this.moveToLineStartInternal(selection, true);\n        if (this.currentWidget.paragraph.isInsideTable) {\n            this.moveUpInTable(selection);\n        }\n        else {\n            this.moveBackward();\n        }\n        var prevLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var lineStart = selection.getLeft(prevLine);\n        var lineWidth = selection.getWidth(prevLine, true);\n        //Moves till the Up/Down selection width.\n        if (lineWidth + lineStart >= left && currentLine !== prevLine) {\n            var top_1 = selection.getTop(prevLine);\n            var point = new Point(left, top_1);\n            selection.updateTextPositionWidget(prevLine, point, this, true);\n        }\n        //Checks if the current position is between field result, then move to field begin.\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        this.validateBackwardFieldSelection(currentIndex, selectionEndIndex);\n    };\n    /**\n     * @param {Selection} selection Specifies the selection\n     * @param {boolean} moveToNextLine Specifies the move to next line\n     * @private\n     */\n    TextPosition.prototype.moveToLineEndInternal = function (selection, moveToNextLine) {\n        if (this.location.x > this.viewer.clientActiveArea.right) {\n            this.offset = this.offset - 1;\n        }\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var firstElement = selection.getFirstElementInternal(currentLine);\n        var isParaBidi = this.currentWidget.paragraph.paragraphFormat.bidi;\n        this.documentHelper.moveCaretPosition = 2;\n        if (isNullOrUndefined(firstElement) && this.offset === selection.getStartLineOffset(this.currentWidget)) {\n            this.offset = selection.getParagraphLength(this.paragraph) + 1;\n            this.updatePhysicalPosition(true);\n        }\n        else if (!isNullOrUndefined(firstElement)) {\n            var lastElement = void 0;\n            // As per Microsoft Behavior, when current para is RTL and if line widget contains rtl text or mixed inlines(rtl, normal),\n            // then need to consider the last element and to update offset to last element\n            if (isParaBidi && this.containsRtlText(currentLine)) {\n                var endOffset = currentLine.getEndOffset();\n                lastElement = currentLine.getInline(endOffset, 0).element;\n            }\n            else {\n                lastElement = currentLine.children[currentLine.children.length - 1];\n                if (lastElement instanceof ListTextElementBox && currentLine.children.length > 2) {\n                    lastElement = currentLine.children[currentLine.children.length - 3];\n                }\n            }\n            var index = 0;\n            index += lastElement instanceof TextElementBox ? lastElement.length : 1;\n            this.currentWidget = lastElement.line;\n            if (index === lastElement.length\n                && isNullOrUndefined(lastElement.nextNode) && selection.isParagraphLastLine(this.currentWidget)) {\n                var length_1 = selection.getLineLength(this.currentWidget);\n                this.offset = moveToNextLine ? length_1 + 1 : length_1;\n            }\n            else {\n                var inline = lastElement;\n                while (!isNullOrUndefined(inline) && inline.length === index && inline.nextNode instanceof FieldElementBox) {\n                    var nextInline = selection.getNextValidElement(inline.nextNode);\n                    if (inline !== nextInline) {\n                        inline = nextInline;\n                        index = 0;\n                    }\n                    if (inline instanceof FieldElementBox && inline.fieldType === 0\n                        && !isNullOrUndefined(inline.fieldEnd)) {\n                        var fieldBegin = inline;\n                        if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                            inline = fieldBegin.fieldEnd;\n                        }\n                        else {\n                            inline = fieldBegin.fieldSeparator;\n                            this.currentWidget = inline.line;\n                            if (this.currentWidget === fieldBegin.fieldEnd.line\n                                && !selection.hasValidInline(this.currentWidget.paragraph, inline, fieldBegin.fieldEnd)) {\n                                inline = fieldBegin.fieldEnd;\n                            }\n                        }\n                        this.currentWidget = inline.line;\n                    }\n                    if (inline instanceof FieldElementBox) {\n                        index = 1;\n                    }\n                }\n                if (index === inline.length && isNullOrUndefined(inline.nextNode)) {\n                    index++;\n                }\n                if (!moveToNextLine && inline instanceof ElementBox && inline.text === '\\v') {\n                    index--;\n                }\n                this.offset = this.currentWidget.getOffset(inline, index);\n            }\n            this.updatePhysicalPosition(moveToNextLine);\n        }\n    };\n    /**\n     * Move to next line\n     *\n     * @param {number} left Specified the left\n     * @private\n     * @returns {void}\n     */\n    TextPosition.prototype.moveToNextLine = function (left) {\n        var selection = this.selection;\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionInternal(this);\n        var currentIndex = this.getHierarchicalIndexInternal();\n        var currentLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        //Moves text position to end of line.\n        this.moveToLineEndInternal(selection, true);\n        var isMoveToLineEnd = !textPosition.isAtSamePosition(this);\n        textPosition.setPositionInternal(this);\n        if (this.currentWidget.paragraph.isInsideTable) {\n            this.moveDownInTable(selection);\n        }\n        else {\n            this.moveNextPosition();\n            var isAtLineStart = this.offset === 0 ? true : false;\n            if (!isAtLineStart) {\n                this.moveForward();\n            }\n        }\n        var nextLine = selection.getLineWidgetParagraph(this.offset, this.currentWidget);\n        var lineStart = selection.getLeft(nextLine);\n        var firstElement = selection.getFirstElementInternal(nextLine);\n        var firstItemWidth = isNullOrUndefined(firstElement) ? selection.getWidth(nextLine, true) : selection.getLeftInternal(nextLine, firstElement, 1) - lineStart;\n        //Moves till the Up/Down selection width.\n        if (lineStart < left && (firstItemWidth / 2 < left - lineStart)) {\n            var top_2 = selection.getTop(nextLine);\n            var point = new Point(left, top_2);\n            selection.updateTextPositionWidget(nextLine, point, this, true);\n            var width = selection.getWidth(nextLine, true);\n            if (width < left - lineStart) {\n                this.moveToLineEndInternal(selection, true);\n            }\n        }\n        else if (isMoveToLineEnd && this.currentWidget.paragraph.isInsideTable\n            && this.currentWidget === this.owner.selectionModule.start.currentWidget) {\n            this.setPositionInternal(textPosition);\n        }\n        else if (!isMoveToLineEnd) {\n            this.moveToLineEndInternal(selection, true);\n        }\n        //Checks if the current position is between field result, then move to field end.\n        var selectionEndIndex = this.getHierarchicalIndexInternal();\n        this.validateForwardFieldSelection(currentIndex, selectionEndIndex);\n    };\n    TextPosition.prototype.moveUpInTable = function (selection) {\n        var isPositionUpdated = false;\n        var end = this.owner.selectionModule.end;\n        var isBackwardSelection = !this.owner.selectionModule.isEmpty;\n        isPositionUpdated = end.paragraph.isInsideTable;\n        if (isPositionUpdated) {\n            var startCell = this.currentWidget.paragraph.associatedCell;\n            var endCell = end.paragraph.associatedCell;\n            var containerCell = selection.getContainerCellOf(endCell, startCell);\n            isPositionUpdated = containerCell.ownerTable.contains(startCell);\n            if (isPositionUpdated) {\n                endCell = selection.getSelectedCell(endCell, containerCell);\n                startCell = selection.getSelectedCell(startCell, containerCell);\n                var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n                var isContainerCellSelected = selection.isCellSelected(containerCell, this, end);\n                if (!isContainerCellSelected) {\n                    isContainerCellSelected = this.currentWidget.paragraph === selection.getFirstParagraph(containerCell) && this.isAtParagraphStart;\n                }\n                if ((isInContainerCell && isContainerCellSelected\n                    || !isInContainerCell) && !isNullOrUndefined(startCell.ownerRow.previousRenderedWidget)) {\n                    //Moves to cell in previous row.\n                    var row = startCell.ownerRow.previousRenderedWidget;\n                    var cell = selection.getFirstCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, true);\n                    var previousParagraph = selection.getLastParagraph(cell);\n                    this.setPosition(previousParagraph.childWidgets[0], true);\n                    return;\n                }\n                else if (isInContainerCell && isContainerCellSelected\n                    && isNullOrUndefined(startCell.ownerRow.previousRenderedWidget) || !isInContainerCell) {\n                    if (isBackwardSelection) {\n                        //Moves to first cell of row.\n                        startCell = startCell.ownerRow.childWidgets[0];\n                        var previousParagraph = selection.getFirstParagraph(startCell);\n                        this.setPosition(previousParagraph.childWidgets[0], true);\n                    }\n                    else {\n                        //Moves to last cell of row.\n                        startCell = startCell.ownerRow.childWidgets[startCell.ownerRow.childWidgets.length - 1];\n                        var previousParagraph = selection.getLastParagraph(startCell);\n                        this.setPosition(previousParagraph.childWidgets[0], false);\n                    }\n                }\n            }\n        }\n        if (!isPositionUpdated) {\n            //Moves to previous row / previous block.\n            var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n            if (isBackwardSelection) {\n                //Moves to first cell of row.\n                cell = cell.ownerRow.childWidgets[0];\n                var previousParagraph = selection.getFirstParagraph(cell);\n                this.setPosition(previousParagraph.childWidgets[0], true);\n            }\n            else {\n                //Moves to end of row.\n                cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n                var previousParagraph = selection.getLastParagraph(cell);\n                this.setPosition(previousParagraph.childWidgets[0], false);\n            }\n        }\n        //Moves to previous row / previous block.\n        this.moveBackward();\n    };\n    TextPosition.prototype.moveDownInTable = function (selection) {\n        var isPositionUpdated = false;\n        var isForwardSelection = this.owner.selectionModule.isEmpty || this.owner.selectionModule.isForward;\n        isPositionUpdated = this.owner.selectionModule.start.paragraph.isInsideTable;\n        if (isPositionUpdated) {\n            var startCell = this.owner.selectionModule.start.paragraph.associatedCell;\n            var endCell = this.currentWidget.paragraph.associatedCell;\n            var containerCell = selection.getContainerCellOf(startCell, endCell);\n            isPositionUpdated = containerCell.ownerTable.contains(endCell);\n            if (isPositionUpdated) {\n                startCell = selection.getSelectedCell(startCell, containerCell);\n                endCell = selection.getSelectedCell(endCell, containerCell);\n                var isInContainerCell = selection.containsCell(containerCell, this.currentWidget.paragraph.associatedCell);\n                var isContainerCellSelected = selection.isCellSelected(containerCell, this.owner.selectionModule.start, this);\n                if ((isInContainerCell && isContainerCellSelected\n                    || !isInContainerCell) && !isNullOrUndefined(endCell.ownerRow.nextRenderedWidget)) {\n                    //Moves to cell in next row.\n                    var row = endCell.ownerRow.nextRenderedWidget;\n                    var cell = selection.getLastCellInRegion(row, containerCell, this.owner.selectionModule.upDownSelectionLength, false);\n                    var lastParagraph = selection.getLastParagraph(cell);\n                    this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n                    return;\n                }\n                else if (isInContainerCell && isContainerCellSelected\n                    && isNullOrUndefined(endCell.ownerRow.nextRenderedWidget) || !isInContainerCell) {\n                    if (isForwardSelection) {\n                        //Moves to last cell of row.\n                        endCell = endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1];\n                        var lastParagraph = selection.getLastParagraph(endCell);\n                        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n                    }\n                    else {\n                        //Moves to first cell of row.\n                        endCell = endCell.ownerRow.childWidgets[0];\n                        var lastParagraph = selection.getFirstParagraph(endCell);\n                        this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n                    }\n                }\n            }\n        }\n        if (!isPositionUpdated) {\n            //Moves to next row / next block.\n            var cell = selection.getContainerCell(this.currentWidget.paragraph.associatedCell);\n            if (isForwardSelection) {\n                //Moves to end of row.\n                cell = cell.ownerRow.childWidgets[cell.ownerRow.childWidgets.length - 1];\n                var lastParagraph = selection.getLastParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], false);\n            }\n            else if (cell.ownerRow.nextRenderedWidget) {\n                //Moves to first cell of row.\n                cell = cell.ownerRow.nextRenderedWidget.childWidgets[0];\n                var lastParagraph = selection.getFirstParagraph(cell);\n                this.setPosition(lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1], true);\n            }\n        }\n        //Moves to next row / next block.\n        this.moveForward();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextPosition.prototype.destroy = function () {\n        this.offset = undefined;\n        this.isUpdateLocation = undefined;\n        if (!isNullOrUndefined(this.location)) {\n            this.location.destroy();\n        }\n        this.location = undefined;\n        this.currentWidget = undefined;\n        this.owner = undefined;\n        this.documentHelper = undefined;\n    };\n    return TextPosition;\n}());\nexport { TextPosition };\n/**\n * @private\n */\nvar SelectionWidgetInfo = /** @class */ (function () {\n    function SelectionWidgetInfo(left, width) {\n        this.leftIn = 0;\n        this.widthIn = 0;\n        this.color = '';\n        this.leftIn = left;\n        this.widthIn = width;\n    }\n    Object.defineProperty(SelectionWidgetInfo.prototype, \"left\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.leftIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.leftIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionWidgetInfo.prototype, \"width\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.widthIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.widthIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     */\n    SelectionWidgetInfo.prototype.destroy = function () {\n        this.widthIn = undefined;\n        this.leftIn = undefined;\n        this.floatingItems = [];\n        this.floatingItems = undefined;\n    };\n    return SelectionWidgetInfo;\n}());\nexport { SelectionWidgetInfo };\n/**\n * @private\n */\nvar Hyperlink = /** @class */ (function () {\n    function Hyperlink(fieldBeginAdv, selection) {\n        this.linkInternal = '';\n        this.localRef = '';\n        this.opensNewWindow = false;\n        this.isCrossRefField = false;\n        this.screenTipText = '';\n        var fieldCode = selection.getFieldCode(fieldBeginAdv);\n        var lowercase = fieldCode.toLowerCase();\n        if (lowercase.substring(0, 9) === 'hyperlink') {\n            this.parseFieldValues(fieldCode.substring(9).trim(), true);\n        }\n        else if ((lowercase.indexOf('ref ') === 0 && lowercase.match('\\\\h'))) {\n            this.parseFieldValues(fieldCode.substring(4).trim(), false);\n            this.isCrossRefField = true;\n        }\n        else if (lowercase.indexOf('pageref') === 0) {\n            this.parseFieldValues(fieldCode.substring(7).trim(), false);\n        }\n    }\n    Object.defineProperty(Hyperlink.prototype, \"screenTip\", {\n        /**\n        * Gets screentip text.\n        *\n        * @returns string\n        * @private\n        */\n        get: function () {\n            return this.screenTipText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"navigationLink\", {\n        /**\n         * Gets navigation link.\n         *\n         * @returns string\n         * @private\n         */\n        get: function () {\n            return this.linkInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"localReference\", {\n        /**\n         * Gets the local reference if any.\n         *\n         * @returns string\n         * @private\n         */\n        get: function () {\n            return this.localRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"linkType\", {\n        /**\n         * Gets hyper link type.\n         *\n         * @returns HyperLinkType\n         * @private\n         */\n        get: function () {\n            return this.typeInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Hyperlink.prototype, \"isCrossRef\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return this.isCrossRefField;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Hyperlink.prototype.parseFieldValues = function (value, isHyperlink) {\n        var codes = value.split('\\\\o ');\n        if (codes.length === 2) {\n            this.screenTipText = this.parseFieldValue(codes[1], codes[1] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n            this.screenTipText = this.screenTipText.substring(0, this.screenTipText.length - 1);\n            value = codes[0];\n            codes = undefined;\n        }\n        codes = value.split(' ');\n        var isLocalRef = false;\n        var hyperlinkRef = true;\n        if (isHyperlink) {\n            for (var i = 0; i < codes.length; i++) {\n                var code = codes[i];\n                if (code.length < 1) {\n                    continue;\n                }\n                if (code === '\\\\t' || code === '\\\\l') {\n                    isLocalRef = true;\n                }\n                else if (code === '\\\\n') {\n                    this.opensNewWindow = true;\n                }\n                else {\n                    code = this.parseFieldValue(code, code[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n                    if (isLocalRef) {\n                        this.localRef = code;\n                        isLocalRef = false;\n                        hyperlinkRef = false;\n                    }\n                    else if (hyperlinkRef) {\n                        this.linkInternal = this.parseFieldValue(value, value[0] === '\\\"' ? '\\\"' : undefined, isHyperlink);\n                    }\n                    else {\n                        this.linkInternal = code;\n                    }\n                }\n            }\n        }\n        else {\n            this.localRef = codes[0];\n        }\n        this.setLinkType();\n    };\n    Hyperlink.prototype.parseFieldValue = function (value, endChar, isHyperlink) {\n        value = isHyperlink ? value.substring(1) : value.substring(0);\n        var endIndex = endChar ? value.indexOf(endChar) : -1;\n        if (endIndex < 0) {\n            endIndex = value.length;\n        }\n        return value.substring(0, endIndex).trim();\n    };\n    Hyperlink.prototype.setLinkType = function () {\n        // If only local reference.\n        if (isNullOrUndefined(this.linkInternal) || this.linkInternal.length < 1) {\n            this.typeInternal = 'Bookmark';\n            return;\n        }\n        // Validates link.\n        if (this.linkInternal.substring(0, 4) === ('www.')) {\n            this.linkInternal = 'http://' + this.navigationLink;\n        }\n        else if (this.linkInternal[0] === '@') {\n            this.linkInternal = 'mailto:' + this.navigationLink;\n        }\n        // Finds proper link type.\n        if (this.linkInternal.substring(0, 7) === 'http://'\n            || this.linkInternal.substring(0, 8) === 'https://') {\n            this.typeInternal = 'WebPage';\n        }\n        else if (this.linkInternal.substring(0, 7) === 'mailto:') {\n            this.typeInternal = 'Email';\n        }\n        else {\n            this.typeInternal = 'File';\n        }\n    };\n    /**\n     * @private\n     */\n    Hyperlink.prototype.destroy = function () {\n        this.linkInternal = undefined;\n        this.localRef = undefined;\n        this.typeInternal = undefined;\n        this.opensNewWindow = undefined;\n        this.screenTipText = undefined;\n    };\n    return Hyperlink;\n}());\nexport { Hyperlink };\n/**\n * @private\n */\nvar ImageSizeInfo = /** @class */ (function () {\n    /**\n     * Constructor for image format class\n     *\n     * @param imageContainer - Specifies for image width and height values.\n     */\n    function ImageSizeInfo(imageContainer) {\n        /**\n         * @private\n         */\n        this.width = 0;\n        /**\n         * @private\n         */\n        this.height = 0;\n        this.width = imageContainer.width;\n        this.height = imageContainer.height;\n        this.alternatetext = imageContainer.alternateText;\n    }\n    /**\n     * Dispose the internal objects which are maintained.\n     *\n     * @private\n     */\n    ImageSizeInfo.prototype.destroy = function () {\n        this.width = undefined;\n        this.height = undefined;\n        this.alternatetext = undefined;\n    };\n    return ImageSizeInfo;\n}());\nexport { ImageSizeInfo };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}