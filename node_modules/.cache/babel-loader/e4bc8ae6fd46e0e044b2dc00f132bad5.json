{"ast":null,"code":"'use strict';\n\nvar fromParse5 = require('hast-util-from-parse5');\n\nvar Parser5 = require('parse5/lib/parser');\n\nvar xtend = require('xtend');\n\nvar errors = require('./errors.json');\n\nvar base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-';\nvar fatalities = {\n  2: true,\n  1: false,\n  0: null\n};\nmodule.exports = parse;\n\nfunction parse(options) {\n  var settings = xtend(options, this.data('settings'));\n  var position = settings.position;\n  position = typeof position === 'boolean' ? position : true;\n  this.Parser = parser;\n\n  function parser(doc, file) {\n    var fn = settings.fragment ? 'parseFragment' : 'parse';\n    var onParseError = settings.emitParseErrors ? onerror : null;\n    var parse5 = new Parser5({\n      sourceCodeLocationInfo: position,\n      onParseError: onParseError,\n      scriptingEnabled: false\n    });\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file: file,\n      verbose: settings.verbose\n    });\n\n    function onerror(err) {\n      var code = err.code;\n      var name = camelcase(code);\n      var setting = settings[name];\n      var config = setting === undefined || setting === null ? true : setting;\n      var level = typeof config === 'number' ? config : config ? 1 : 0;\n      var start = {\n        line: err.startLine,\n        column: err.startCol,\n        offset: err.startOffset\n      };\n      var end = {\n        line: err.endLine,\n        column: err.endCol,\n        offset: err.endOffset\n      };\n      var info;\n      var message;\n\n      if (level) {\n        info = errors[name] ||\n        /* istanbul ignore next */\n        {\n          reason: '',\n          description: ''\n        };\n        message = file.message(format(info.reason), {\n          start: start,\n          end: end\n        });\n        message.source = 'parse-error';\n        message.ruleId = code;\n        message.fatal = fatalities[level];\n        message.note = format(info.description);\n        message.url = info.url === false ? null : base + code;\n      }\n\n      function format(value) {\n        return value.replace(/%c(?:-(\\d+))?/g, char).replace(/%x/g, encodedChar);\n      }\n\n      function char($0, $1) {\n        var offset = $1 ? -parseInt($1, 10) : 0;\n        var char = doc.charAt(err.startOffset + offset);\n        return char === '`' ? '` ` `' : char;\n      }\n\n      function encodedChar() {\n        var char = doc.charCodeAt(err.startOffset).toString(16).toUpperCase();\n        return '0x' + char;\n      }\n    }\n  }\n}\n\nfunction camelcase(value) {\n  return value.replace(/-[a-z]/g, replacer);\n}\n\nfunction replacer($0) {\n  return $0.charAt(1).toUpperCase();\n}","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/rehype-parse/index.js"],"names":["fromParse5","require","Parser5","xtend","errors","base","fatalities","module","exports","parse","options","settings","data","position","Parser","parser","doc","file","fn","fragment","onParseError","emitParseErrors","onerror","parse5","sourceCodeLocationInfo","scriptingEnabled","space","verbose","err","code","name","camelcase","setting","config","undefined","level","start","line","startLine","column","startCol","offset","startOffset","end","endLine","endCol","endOffset","info","message","reason","description","format","source","ruleId","fatal","note","url","value","replace","char","encodedChar","$0","$1","parseInt","charAt","charCodeAt","toString","toUpperCase","replacer"],"mappings":"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","sourcesContent":["'use strict'\n\nvar fromParse5 = require('hast-util-from-parse5')\nvar Parser5 = require('parse5/lib/parser')\nvar xtend = require('xtend')\nvar errors = require('./errors.json')\n\nvar base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nvar fatalities = {2: true, 1: false, 0: null}\n\nmodule.exports = parse\n\nfunction parse(options) {\n  var settings = xtend(options, this.data('settings'))\n  var position = settings.position\n\n  position = typeof position === 'boolean' ? position : true\n\n  this.Parser = parser\n\n  function parser(doc, file) {\n    var fn = settings.fragment ? 'parseFragment' : 'parse'\n    var onParseError = settings.emitParseErrors ? onerror : null\n    var parse5 = new Parser5({\n      sourceCodeLocationInfo: position,\n      onParseError: onParseError,\n      scriptingEnabled: false\n    })\n\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file: file,\n      verbose: settings.verbose\n    })\n\n    function onerror(err) {\n      var code = err.code\n      var name = camelcase(code)\n      var setting = settings[name]\n      var config = setting === undefined || setting === null ? true : setting\n      var level = typeof config === 'number' ? config : config ? 1 : 0\n      var start = {\n        line: err.startLine,\n        column: err.startCol,\n        offset: err.startOffset\n      }\n      var end = {line: err.endLine, column: err.endCol, offset: err.endOffset}\n      var info\n      var message\n\n      if (level) {\n        info = errors[name] || /* istanbul ignore next */ {\n          reason: '',\n          description: ''\n        }\n\n        message = file.message(format(info.reason), {start: start, end: end})\n        message.source = 'parse-error'\n        message.ruleId = code\n        message.fatal = fatalities[level]\n        message.note = format(info.description)\n        message.url = info.url === false ? null : base + code\n      }\n\n      function format(value) {\n        return value.replace(/%c(?:-(\\d+))?/g, char).replace(/%x/g, encodedChar)\n      }\n\n      function char($0, $1) {\n        var offset = $1 ? -parseInt($1, 10) : 0\n        var char = doc.charAt(err.startOffset + offset)\n        return char === '`' ? '` ` `' : char\n      }\n\n      function encodedChar() {\n        var char = doc\n          .charCodeAt(err.startOffset)\n          .toString(16)\n          .toUpperCase()\n\n        return '0x' + char\n      }\n    }\n  }\n}\n\nfunction camelcase(value) {\n  return value.replace(/-[a-z]/g, replacer)\n}\n\nfunction replacer($0) {\n  return $0.charAt(1).toUpperCase()\n}\n"]},"metadata":{},"sourceType":"script"}