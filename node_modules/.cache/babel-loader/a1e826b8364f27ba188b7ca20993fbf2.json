{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/GptView.js\";\nimport React, { useState } from 'react';\nimport SelectBox from '../shared/SelectBox';\nimport TextBox from '../shared/TextBox';\nimport '../Gptstyles.scss';\nimport { postGenerateTextEndpoint } from '../shared/GptUtil';\nimport Form from 'react-bootstrap/Form';\nimport { Button, Alert, Spinner } from 'react-bootstrap';\nimport axios from \"axios\"; // import { BASE_URL_DEV } from \"../utils\";\n\nfunction GptView() {\n  const [text, setText] = useState(\"\");\n  const [model, setModel] = useState('gpt2');\n  const [generatedText, postGenerateText] = postGenerateTextEndpoint();\n\n  const generateText = () => {\n    console.log(\"Data: \", text);\n    postGenerateText({\n      text,\n      model,\n      userId: 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"React GPT-2\"), /*#__PURE__*/React.createElement(SelectBox, {\n    model: model,\n    setModel: setModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextBox, {\n    text: text,\n    setText: setText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: generateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), generatedText.pending && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Please wait\"), generatedText.complete && (generatedText.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Bad Request\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, console.log(generatedText.data[1], \"hellooooo\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, generatedText.data.map((index, key) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 20\n    },\n    className: \"result valid\",\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }\n  }, index))))));\n}\n\nexport default GptView;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/GptView.js"],"names":["React","useState","SelectBox","TextBox","postGenerateTextEndpoint","Form","Button","Alert","Spinner","axios","GptView","text","setText","model","setModel","generatedText","postGenerateText","generateText","console","log","userId","pending","complete","error","data","map","index","key","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,mBAAP;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,OAAvB,QAAqC,iBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCZ,wBAAwB,EAAlE;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,IAAtB;AACAK,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAF;AAAQE,MAAAA,KAAR;AAAeO,MAAAA,MAAM,EAAE;AAAvB,KAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,YAAY,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAyB,IAAA,QAAQ,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAqB,IAAA,OAAO,EAAEC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAQGF,aAAa,CAACM,OAAd,iBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,EAWGN,aAAa,CAACO,QAAd,KACEP,aAAa,CAACQ,KAAd,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,gBAEC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAACS,IAAd,CAAmB,CAAnB,CAAZ,EAAkC,WAAlC,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCT,aAAa,CAACS,IAAd,CAAmBC,GAAnB,CAAuB,CAACC,KAAD,EAAOC,GAAP,kBAAe;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAA0B,IAAA,SAAS,EAAC,cAApC;AAAmD,IAAA,GAAG,EAAED,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DD,KAA9D,CAAtC,CADD,CAFF,CAHH,CAXH,CADF;AAyBD;;AAED,eAAehB,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport SelectBox from '../shared/SelectBox';\nimport TextBox from '../shared/TextBox';\nimport '../Gptstyles.scss';\nimport { postGenerateTextEndpoint } from '../shared/GptUtil';\nimport Form from 'react-bootstrap/Form'\nimport {Button, Alert, Spinner} from 'react-bootstrap'\nimport axios from \"axios\";\n// import { BASE_URL_DEV } from \"../utils\";\nfunction GptView() {\n  const [text, setText] = useState(\"\");\n  const [model, setModel] = useState('gpt2');\n  const [generatedText, postGenerateText] = postGenerateTextEndpoint();\n\n  const generateText = () => {\n    console.log(\"Data: \", text)\n    postGenerateText({ text, model, userId: 1 });\n  }\n\n  return (\n    <div className='main-panel'>\n      <form noValidate autoComplete='off'>\n        <h1>React GPT-2</h1>\n        <SelectBox model={model} setModel={setModel} />\n        <TextBox text={text} setText={setText} />\n        <Button onClick={generateText} />\n      </form>\n\n      {generatedText.pending &&\n        <div className='result pending'>Please wait</div>}\n\n      {generatedText.complete &&\n        (generatedText.error ?\n          <div className='result error'>Bad Request</div> :\n          <div className='content-wrapper'>\n            {console.log(generatedText.data[1],\"hellooooo\")}\n            <ul>\n            {generatedText.data.map((index,key) => <div style={{margin: 20}} className='result valid' key={key}>{index}</div>)}\n                    </ul>\n\n\n          </div>)}\n    </div>\n  );\n}\n\nexport default GptView;\n"]},"metadata":{},"sourceType":"module"}