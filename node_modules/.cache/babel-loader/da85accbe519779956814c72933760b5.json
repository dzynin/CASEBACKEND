{"ast":null,"code":"import { Dictionary } from '../../base/dictionary';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { TextPosition } from '../selection/selection-helper';\nimport { TextElementBox, FieldElementBox, HeaderFooterWidget } from '../viewer/page';\nimport { SearchWidgetInfo } from './text-search';\nimport { TextSearch } from '../search/text-search';\nimport { TextSearchResults } from '../search/text-search-results';\nimport { SearchResults } from './search-results';\nimport { searchResultsChangeEvent } from '../../base/index';\n/**\n * Search module\n */\nvar Search = /** @class */function () {\n  function Search(owner) {\n    /**\n     * @private\n     */\n    this.searchHighlighters = undefined;\n    this.owner = owner;\n    this.searchHighlighters = new Dictionary();\n    this.textSearch = new TextSearch(this.owner);\n    this.textSearchResults = new TextSearchResults(this.owner);\n    this.searchResultsInternal = new SearchResults(this);\n  }\n  Object.defineProperty(Search.prototype, \"viewer\", {\n    get: function () {\n      return this.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Search.prototype, \"searchResults\", {\n    /**\n     * Gets the search results object.\n     *\n     * @aspType SearchResults\n     * @returns {SearchResults} - Returns the search results object.\n     */\n    get: function () {\n      return this.searchResultsInternal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Search.prototype, \"documentHelper\", {\n    get: function () {\n      return this.owner.documentHelper;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Search.prototype.getModuleName = function () {\n    return 'Search';\n  };\n  //#region Find & Find All\n  /**\n   * Finds the immediate occurrence of specified text from cursor position in the document.\n   *\n   * @param {string} text - Specifies text to find.\n   * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n   * @returns {void}\n   */\n  Search.prototype.find = function (text, findOptions) {\n    if (isNullOrUndefined(findOptions)) {\n      findOptions = 'None';\n    }\n    var result = this.textSearch.find(text, findOptions);\n    if (!isNullOrUndefined(result)) {\n      this.navigate(result);\n    }\n  };\n  /**\n   * Finds all occurrence of specified text in the document.\n   *\n   * @param {string} text - Specifies text to find.\n   * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n   * @returns {void}\n   */\n  Search.prototype.findAll = function (text, findOptions) {\n    if (isNullOrUndefined(text || text === '')) {\n      return;\n    }\n    if (isNullOrUndefined(findOptions)) {\n      findOptions = 'None';\n    }\n    var results = this.textSearch.findAll(text, findOptions);\n    if (!isNullOrUndefined(results) && results.length > 0) {\n      this.navigate(results.innerList[results.currentIndex]);\n      this.highlight(results);\n    }\n  };\n  //#endregion\n  //#region Replace and Replace All\n  /**\n   * Replace the searched string with specified string\n   *\n   * @private\n   * @param  {string} replaceText  - Specifies text to replace.\n   * @param  {TextSearchResult} result - Specifies the result.\n   * @param  {TextSearchResults} results - Specifies the results.\n   * @returns {number} - Returns replaced text count.\n   */\n  Search.prototype.replace = function (replaceText, result, results) {\n    if (isNullOrUndefined(this.viewer.owner) || this.viewer.owner.isReadOnlyMode || !this.viewer.owner.editorModule.canEditContentControl || isNullOrUndefined(results)) {\n      return 0;\n    }\n    if (!isNullOrUndefined(this.viewer)) {\n      this.clearSearchHighlight();\n    }\n    this.navigate(result);\n    var endPosition = this.documentHelper.selection.start;\n    if (this.owner.enableTrackChanges && this.documentHelper.selection.start.currentWidget) {\n      var inline = undefined;\n      /* eslint-disable-next-line max-len */\n      var inlineElement = this.documentHelper.selection.end.currentWidget.getInline(this.owner.selectionModule.start.offset, 0);\n      inline = inlineElement.element;\n      if (inline.revisions.length > 0) {\n        this.isRepalceTracking = true;\n      }\n    }\n    var index = results.indexOf(result);\n    if (index < 0) {\n      return 0;\n    }\n    this.owner.editorModule.insertTextInternal(replaceText, true);\n    var endTextPosition = result.end;\n    var startPosition = new TextPosition(this.viewer.owner);\n    if (endTextPosition.currentWidget.children.length === 0) {\n      var linewidget = endTextPosition.currentWidget.paragraph.childWidgets[0];\n      startPosition.setPositionParagraph(linewidget, endPosition.offset - replaceText.length);\n    } else {\n      startPosition.setPositionParagraph(endTextPosition.currentWidget, endPosition.offset - replaceText.length);\n    }\n    this.documentHelper.selection.selectRange(endPosition, startPosition);\n    var eventArgs = {\n      source: this.viewer.owner\n    };\n    this.viewer.owner.trigger(searchResultsChangeEvent, eventArgs);\n    return 1;\n  };\n  /**\n   * Find the textToFind string in current document and replace the specified string.\n   *\n   * @private\n   * @param {string} textToReplace - Specifies the text to replace.\n   * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n   * @returns {void}\n   */\n  Search.prototype.replaceInternal = function (textToReplace, findOptions) {\n    if (textToReplace === '' || isNullOrUndefined(textToReplace)) {\n      return;\n    }\n    if (isNullOrUndefined(findOptions)) {\n      findOptions = 'None';\n    }\n    var textToFind = this.textSearchResults.currentSearchResult.text;\n    var pattern = this.viewer.owner.searchModule.textSearch.stringToRegex(textToFind, findOptions);\n    var index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n    var result = this.viewer.owner.searchModule.textSearch.findNext(pattern, findOptions, index);\n    if (!isNullOrUndefined(result)) {\n      this.navigate(result);\n      this.textSearchResults.addResult();\n      this.textSearchResults.innerList[0] = result;\n      this.replace(textToReplace, result, this.textSearchResults);\n      index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n      result = this.textSearch.findNext(textToFind, findOptions, index);\n      if (result) {\n        this.textSearchResults.addResult();\n        this.textSearchResults.innerList[0] = result;\n        this.navigate(result);\n      }\n    }\n  };\n  /**\n   * Replace all the searched string with specified string\n   *\n   * @private\n   * @param  {string} replaceText - Specifies the replace text.\n   * @param  {TextSearchResults} results - Specfies the results.\n   * @returns {number} - Returns the replace count.\n   */\n  Search.prototype.replaceAll = function (replaceText, results) {\n    this.documentHelper.layout.isReplacingAll = true;\n    if (isNullOrUndefined(this.viewer.owner) || this.viewer.owner.isReadOnlyMode || isNullOrUndefined(results)) {\n      return 0;\n    }\n    if (this.owner.editorHistoryModule) {\n      this.owner.editorHistoryModule.initComplexHistory(this.owner.selectionModule, 'ReplaceAll');\n    }\n    var count = results.length;\n    this.viewer.owner.isLayoutEnabled = false;\n    var text = results.innerList[0].text;\n    for (var i = count - 1; i >= 0; i--) {\n      var result = results.innerList[parseInt(i.toString(), 10)];\n      if (result.start.currentWidget.children.length === 0) {\n        results = this.textSearch.findAll(text);\n        i = results.length;\n      } else {\n        this.navigate(result);\n        if (this.viewer.owner.isReadOnlyMode || !this.viewer.owner.editorModule.canEditContentControl) {\n          continue;\n        }\n        var allowLayout = true;\n        if (i > 0) {\n          var previousResult = results.innerList[i - 1];\n          if (previousResult.start.paragraph.equals(result.start.paragraph)) {\n            allowLayout = false;\n          }\n        }\n        this.owner.editorModule.insertTextInternal(replaceText, true, undefined, allowLayout);\n        result.destroy();\n      }\n      //if (result.isHeader || result.isFooter) {\n      // eslint-disable-next-line max-len\n      //this.documentHelper.layout.updateHeaderFooterToParent(this.documentHelper.selection.start.paragraph.bodyWidget as HeaderFooterWidget);\n      //}\n    }\n    if (this.owner.editorHistoryModule && !isNullOrUndefined(this.owner.editorHistoryModule.currentHistoryInfo)) {\n      this.owner.editorHistoryModule.updateComplexHistory();\n    } else {\n      this.owner.editorModule.updateComplexWithoutHistory(2);\n    }\n    this.searchResults.clear();\n    this.documentHelper.layout.isReplacingAll = false;\n    return count;\n  };\n  /**\n   * Find the textToFind string in current document and replace the specified string.\n   *\n   * @private\n   * @param {string} textToReplace - Specifies the text to replace.\n   * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n   * @returns {void}\n   */\n  Search.prototype.replaceAllInternal = function (textToReplace, findOptions) {\n    if (isNullOrUndefined(textToReplace)) {\n      return;\n    }\n    if (isNullOrUndefined(findOptions)) {\n      findOptions = 'None';\n    }\n    if (this.textSearchResults.length > 0) {\n      this.navigate(this.textSearchResults.innerList[this.textSearchResults.currentIndex]);\n      this.highlight(this.textSearchResults);\n      this.replaceAll(textToReplace, this.textSearchResults);\n    }\n  };\n  //#endregion\n  //#region Highlight Search Result\n  /**\n   * @private\n   * @param {TextSearchResult} textSearchResult - Specifies the text search results.\n   * @returns {void}\n   */\n  Search.prototype.navigate = function (textSearchResult) {\n    if (textSearchResult) {\n      var start = textSearchResult.start;\n      var end = textSearchResult.end;\n      if (!isNullOrUndefined(this.owner) && !isNullOrUndefined(this.owner.selectionModule) && !isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(start.paragraph) && !isNullOrUndefined(end.paragraph)) {\n        this.owner.selectionModule.selectRange(start, end);\n        this.documentHelper.updateFocus();\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {TextSearchResults} textSearchResults - Specifies the text search results.\n   * @returns {void}\n   */\n  Search.prototype.highlight = function (textSearchResults) {\n    this.searchHighlighters = new Dictionary();\n    for (var i = 0; i < textSearchResults.innerList.length; i++) {\n      var result = textSearchResults.innerList[parseInt(i.toString(), 10)];\n      this.highlightResult(result);\n    }\n    this.viewer.renderVisiblePages();\n  };\n  Search.prototype.highlightResult = function (result) {\n    this.highlightSearchResult(result.start.paragraph, result.start, result.end);\n  };\n  /* eslint-disable  */\n  Search.prototype.highlightSearchResult = function (paragraph, start, end) {\n    var selectionStartIndex = 0;\n    var selectionEndIndex = 0;\n    var startElement = null;\n    var endElement = null;\n    var lineWidget = this.documentHelper.selection.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n    selectionStartIndex = lineWidget.index;\n    startElement = lineWidget.element;\n    var startLineWidget = startElement ? startElement.line : paragraph.childWidgets[0];\n    var endLine = this.documentHelper.selection.getEndLineWidget(end, endElement, selectionEndIndex);\n    selectionEndIndex = endLine.index;\n    endElement = endLine.element;\n    var endLineWidget = endElement ? endElement.line : end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n    var top = this.documentHelper.selection.getTop(startLineWidget);\n    var left = this.documentHelper.selection.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n    if (!isNullOrUndefined(startLineWidget) && startLineWidget === endLineWidget) {\n      //find result ends in current line.\n      var right = this.documentHelper.selection.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n      var isRtlText = false;\n      if (endElement instanceof TextElementBox) {\n        isRtlText = endElement.isRightToLeft;\n      }\n      var width = 0;\n      width = Math.abs(right - left);\n      if (!isRtlText && startElement instanceof TextElementBox) {\n        isRtlText = startElement.isRightToLeft;\n      }\n      // Handled the highlighting approach as genric for normal and rtl text.\n      if (isRtlText || paragraph.bidi) {\n        var elementBox = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n        if (elementBox && elementBox.length > 1) {\n          for (var i = 0; i < elementBox.length; i++) {\n            var element = elementBox[i];\n            var elementIsRTL = false;\n            var index = element instanceof TextElementBox ? element.length : 1;\n            if (element === startElement) {\n              left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n              right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n            } else if (element === endElement) {\n              left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n              right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionEndIndex);\n            } else {\n              left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n              right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n            }\n            if (element instanceof TextElementBox) {\n              elementIsRTL = element.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n          }\n        } else {\n          this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top);\n        }\n      } else {\n        // Start element and end element will be in reverese for Bidi paragraph highlighting. \n        // So, the right is considered based on Bidi property. \n        this.createHighlightBorder(startLineWidget, width, left, top);\n      }\n    } else {\n      if (!isNullOrUndefined(startLineWidget)) {\n        if (paragraph !== startLineWidget.paragraph) {\n          paragraph = startLineWidget.paragraph;\n        }\n        var width = this.documentHelper.selection.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n        // Handled the  highlighting approach as genric for normal and rtl text.\n        if (paragraph.bidi || startElement instanceof TextElementBox && startElement.isRightToLeft) {\n          var right = 0;\n          var elementCollection = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n          if (elementCollection) {\n            var elementIsRTL = false;\n            for (var i = 0; i < elementCollection.length; i++) {\n              var element = elementCollection[i];\n              var index = element instanceof TextElementBox ? element.length : 1;\n              right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n              elementIsRTL = false;\n              if (element === startElement) {\n                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n              } else {\n                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n              }\n              if (element instanceof TextElementBox) {\n                elementIsRTL = element.isRightToLeft;\n              }\n              width = Math.abs(right - left);\n              this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n            }\n            // Highlight the Paragrph mark for last line.\n          }\n        } else {\n          this.createHighlightBorder(startLineWidget, width, left, top);\n        }\n        var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n        //Iterates to last item of paragraph or search result end.\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n          if (paragraph === startLineWidget.paragraph) {\n            lineIndex += 1;\n          }\n          this.highlightSearchResultParaWidget(paragraph, lineIndex, endLineWidget, endElement, selectionEndIndex);\n          if (paragraph === endLineWidget.paragraph) {\n            return;\n          } else {\n            lineIndex = 0;\n            paragraph = endLineWidget.paragraph;\n            i--;\n          }\n        }\n      }\n    }\n  };\n  Search.prototype.createHighlightBorder = function (lineWidget, width, left, top) {\n    var findHighLight = this.addSearchHighlightBorder(lineWidget);\n    var page = this.viewer.owner.selectionModule.getPage(lineWidget.paragraph);\n    var pageTop = page.boundingRectangle.y;\n    var pageLeft = page.boundingRectangle.x;\n    findHighLight.left = Math.ceil(left);\n    top = Math.ceil(top);\n    findHighLight.width = Math.floor(width);\n    var height = Math.floor(lineWidget.height);\n    var context = this.documentHelper.containerContext;\n  };\n  Search.prototype.addSearchHighlightBorder = function (lineWidget) {\n    var highlighters = undefined;\n    var collection = this.searchHighlighters;\n    if (collection.containsKey(lineWidget)) {\n      highlighters = collection.get(lineWidget);\n    } else {\n      highlighters = [];\n      collection.add(lineWidget, highlighters);\n    }\n    var searchHighlight = new SearchWidgetInfo(0, 0);\n    highlighters.push(searchHighlight);\n    return searchHighlight;\n  };\n  Search.prototype.highlightSearchResultParaWidget = function (widget, startIndex, endLine, endElement, endIndex) {\n    var top = 0;\n    var width = 0;\n    var isRtlText = false;\n    for (var j = startIndex; j < widget.childWidgets.length; j++) {\n      var lineWidget = widget.childWidgets[j];\n      if (j === startIndex) {\n        top = this.documentHelper.selection.getTop(lineWidget);\n      }\n      var left = this.documentHelper.selection.getLeft(lineWidget);\n      if (endElement instanceof TextElementBox) {\n        isRtlText = endElement.isRightToLeft;\n      }\n      if (lineWidget === endLine) {\n        //Selection ends in current line.\n        var right = 0;\n        // Handled the highlighting using the element box highlighting approach as genric for normal and rtl text.\n        if (isRtlText || widget.bidi) {\n          var elementBox = this.documentHelper.selection.getElementsBackward(lineWidget, endElement, endElement, widget.bidi);\n          for (var i = 0; i < elementBox.length; i++) {\n            var element = elementBox[i];\n            var elementIsRTL = false;\n            left = this.documentHelper.selection.getLeftInternal(lineWidget, element, 0);\n            if (element === endElement) {\n              right = this.documentHelper.selection.getLeftInternal(lineWidget, element, endIndex);\n            } else {\n              var index = element instanceof TextElementBox ? element.length : 1;\n              right = this.documentHelper.selection.getLeftInternal(lineWidget, element, index);\n            }\n            if (element instanceof TextElementBox) {\n              elementIsRTL = element.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            this.createHighlightBorder(lineWidget, width, elementIsRTL ? right : left, top);\n          }\n          return;\n        } else {\n          right = this.documentHelper.selection.getLeftInternal(endLine, endElement, endIndex);\n          width = Math.abs(right - left);\n          this.createHighlightBorder(lineWidget, width, isRtlText ? right : left, top);\n          return;\n        }\n      } else {\n        width = this.documentHelper.selection.getWidth(lineWidget, true) - (left - widget.x);\n        this.createHighlightBorder(lineWidget, width, left, top);\n        top += lineWidget.height;\n      }\n    }\n  };\n  //#endregion\n  //#region Get find result view\n  /**\n   * @private\n   * @param {string} result - Specified the result.\n   * @returns {void}\n   */\n  Search.prototype.addSearchResultItems = function (result) {\n    if (isNullOrUndefined(result) || result === '') {\n      return;\n    }\n    if (isNullOrUndefined(this.owner.findResultsList)) {\n      this.owner.findResultsList = [];\n    }\n    this.owner.findResultsList.push(result);\n  };\n  /**\n   * @private\n   * @param {TextSearchResults} textSearchResults - Specified text search result.\n   * @returns {void}\n   */\n  Search.prototype.addFindResultView = function (textSearchResults) {\n    for (var i = 0; i < textSearchResults.innerList.length; i++) {\n      var result = textSearchResults.innerList[i];\n      this.addFindResultViewForSearch(result);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable  */\n  Search.prototype.addFindResultViewForSearch = function (result) {\n    if (result.start != null && result.end != null && result.start.paragraph != null && result.end.paragraph != null) {\n      var prefixText = void 0;\n      var suffixtext = void 0;\n      var currentText = void 0;\n      var startIndex = 0;\n      var inlineObj = result.start.currentWidget.getInline(result.start.offset, startIndex);\n      var inline = inlineObj.element;\n      startIndex = inlineObj.index;\n      var prefix = '';\n      var lastIndex = 0;\n      if (inline instanceof FieldElementBox) {\n        var elementInfo = this.owner.selectionModule.getRenderedInline(inline, startIndex);\n        if (elementInfo.element.nextNode instanceof TextElementBox) {\n          inline = elementInfo.element.nextNode;\n          startIndex = elementInfo.index;\n        } else {\n          inline = elementInfo.element;\n          startIndex = elementInfo.index;\n        }\n      }\n      var boxObj = this.owner.selectionModule.getElementBoxInternal(inline, startIndex);\n      var box = boxObj.element;\n      startIndex = boxObj.index;\n      if (box != null) {\n        if (box instanceof TextElementBox && startIndex > 0) {\n          prefix = box.text.substring(0, startIndex);\n        }\n        var boxIndex = box.line.children.indexOf(box);\n        lastIndex = prefix.lastIndexOf(' ');\n        while (lastIndex < 0 && boxIndex > 0 && box.line.children[boxIndex - 1] instanceof TextElementBox) {\n          prefix = box.line.children[boxIndex - 1].text + prefix;\n          boxIndex--;\n          lastIndex = prefix.lastIndexOf(' ');\n        }\n      }\n      var shiftIndex = prefix.lastIndexOf('\\v');\n      if (shiftIndex > 0) {\n        prefix = prefix.substring(0, shiftIndex);\n      } else {\n        lastIndex = prefix.lastIndexOf(' ');\n        prefixText = lastIndex < 0 ? prefix : prefix.substring(lastIndex + 1);\n      }\n      currentText = result.text;\n      var endIndex = 0;\n      var endInlineObj = result.end.currentWidget.getInline(result.end.offset, endIndex);\n      var endInline = endInlineObj.element;\n      endIndex = endInlineObj.index;\n      suffixtext = '';\n      //Checks prefix element box is empty\n      if (boxObj != null) {\n        // Gets the element box using endIndex of the text and set as suffix\n        boxObj = this.owner.selectionModule.getElementBoxInternal(endInline, endIndex);\n        box = boxObj.element;\n        endIndex = boxObj.index;\n      }\n      //Checks suffix element box is empty.\n      if (box != null) {\n        if (box instanceof TextElementBox && endIndex < box.length) {\n          suffixtext = box.text.substring(endIndex);\n        }\n        var boxIndex = box.line.children.indexOf(box);\n        while (boxIndex + 1 < box.line.children.length && box.line.children[boxIndex + 1] instanceof TextElementBox || box.line.children[boxIndex + 1] instanceof FieldElementBox) {\n          if (box.line.children[boxIndex + 1] instanceof FieldElementBox) {\n            boxIndex = boxIndex + 2;\n          } else {\n            suffixtext = suffixtext + box.line.children[boxIndex + 1].text;\n            boxIndex = boxIndex + 1;\n          }\n        }\n      }\n      lastIndex = suffixtext.lastIndexOf(' ');\n      suffixtext = suffixtext === '\\v' ? suffixtext = '' : suffixtext;\n      var headerFooterString = '';\n      var listElement = '';\n      var containerWidget = result.start.paragraph.containerWidget;\n      var type = containerWidget instanceof HeaderFooterWidget ? containerWidget.headerFooterType : '';\n      if (type.indexOf('Header') != -1) {\n        headerFooterString = '<span class=\"e-de-header-footer-list\">' + 'Header' + ': ' + '</span>';\n      } else if (type.indexOf('Footer') != -1) {\n        listElement = '<li tabindex=0 class=\"e-de-search-result-item e-de-op-search-txt\">' + headerFooterString + prefix + '<span class=\"e-de-op-search-word\" style=\"pointer-events:none\">' + result.text + '</span>' + suffixtext + '</li>';\n        headerFooterString = '<span class=\"e-de-header-footer-list\">' + 'Footer' + ': ' + '</span>';\n      }\n      listElement = '<li tabindex=0 class=\"e-de-search-result-item e-de-op-search-txt\">' + headerFooterString + prefix + '<span class=\"e-de-op-search-word\" style=\"pointer-events:none\">' + result.text + '</span>' + suffixtext + '</li>';\n      this.addSearchResultItems(listElement);\n    }\n  };\n  //#endregion\n  /**\n   * Clears search highlight.\n   *\n   * @private\n   * @returns {void}\n   */\n  Search.prototype.clearSearchHighlight = function () {\n    if (!isNullOrUndefined(this.searchHighlighters)) {\n      this.searchHighlighters.clear();\n      this.searchHighlighters = undefined;\n    }\n    var eventArgs = {\n      source: this.viewer.owner\n    };\n    this.viewer.owner.trigger(searchResultsChangeEvent, eventArgs);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Search.prototype.destroy = function () {\n    if (this.textSearchResults) {\n      this.textSearchResults.destroy();\n    }\n    this.textSearchResults = undefined;\n    this.owner = undefined;\n  };\n  return Search;\n}();\nexport { Search };","map":{"version":3,"names":["Dictionary","isNullOrUndefined","TextPosition","TextElementBox","FieldElementBox","HeaderFooterWidget","SearchWidgetInfo","TextSearch","TextSearchResults","SearchResults","searchResultsChangeEvent","Search","owner","searchHighlighters","undefined","textSearch","textSearchResults","searchResultsInternal","Object","defineProperty","prototype","get","viewer","enumerable","configurable","documentHelper","getModuleName","find","text","findOptions","result","navigate","findAll","results","length","innerList","currentIndex","highlight","replace","replaceText","isReadOnlyMode","editorModule","canEditContentControl","clearSearchHighlight","endPosition","selection","start","enableTrackChanges","currentWidget","inline","inlineElement","end","getInline","selectionModule","offset","element","revisions","isRepalceTracking","index","indexOf","insertTextInternal","endTextPosition","startPosition","children","linewidget","paragraph","childWidgets","setPositionParagraph","selectRange","eventArgs","source","trigger","replaceInternal","textToReplace","textToFind","currentSearchResult","pattern","searchModule","stringToRegex","getHierarchicalIndexInternal","findNext","addResult","replaceAll","layout","isReplacingAll","editorHistoryModule","initComplexHistory","count","isLayoutEnabled","i","parseInt","toString","allowLayout","previousResult","equals","destroy","currentHistoryInfo","updateComplexHistory","updateComplexWithoutHistory","searchResults","clear","replaceAllInternal","textSearchResult","updateFocus","highlightResult","renderVisiblePages","highlightSearchResult","selectionStartIndex","selectionEndIndex","startElement","endElement","lineWidget","getStartLineWidget","startLineWidget","line","endLine","getEndLineWidget","endLineWidget","top","getTop","left","getLeftInternal","right","isRtlText","isRightToLeft","width","Math","abs","bidi","elementBox","getElementsForward","elementIsRTL","createHighlightBorder","getWidth","x","elementCollection","lineIndex","highlightSearchResultParaWidget","findHighLight","addSearchHighlightBorder","page","getPage","pageTop","boundingRectangle","y","pageLeft","ceil","floor","height","context","containerContext","highlighters","collection","containsKey","add","searchHighlight","push","widget","startIndex","endIndex","j","getLeft","getElementsBackward","addSearchResultItems","findResultsList","addFindResultView","addFindResultViewForSearch","prefixText","suffixtext","currentText","inlineObj","prefix","lastIndex","elementInfo","getRenderedInline","nextNode","boxObj","getElementBoxInternal","box","substring","boxIndex","lastIndexOf","shiftIndex","endInlineObj","endInline","headerFooterString","listElement","containerWidget","type","headerFooterType"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/search/search.js"],"sourcesContent":["import { Dictionary } from '../../base/dictionary';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { TextPosition } from '../selection/selection-helper';\nimport { TextElementBox, FieldElementBox, HeaderFooterWidget } from '../viewer/page';\nimport { SearchWidgetInfo } from './text-search';\nimport { TextSearch } from '../search/text-search';\nimport { TextSearchResults } from '../search/text-search-results';\nimport { SearchResults } from './search-results';\nimport { searchResultsChangeEvent } from '../../base/index';\n/**\n * Search module\n */\nvar Search = /** @class */ (function () {\n    function Search(owner) {\n        /**\n         * @private\n         */\n        this.searchHighlighters = undefined;\n        this.owner = owner;\n        this.searchHighlighters = new Dictionary();\n        this.textSearch = new TextSearch(this.owner);\n        this.textSearchResults = new TextSearchResults(this.owner);\n        this.searchResultsInternal = new SearchResults(this);\n    }\n    Object.defineProperty(Search.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Search.prototype, \"searchResults\", {\n        /**\n         * Gets the search results object.\n         *\n         * @aspType SearchResults\n         * @returns {SearchResults} - Returns the search results object.\n         */\n        get: function () {\n            return this.searchResultsInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Search.prototype, \"documentHelper\", {\n        get: function () {\n            return this.owner.documentHelper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Search.prototype.getModuleName = function () {\n        return 'Search';\n    };\n    //#region Find & Find All\n    /**\n     * Finds the immediate occurrence of specified text from cursor position in the document.\n     *\n     * @param {string} text - Specifies text to find.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n     * @returns {void}\n     */\n    Search.prototype.find = function (text, findOptions) {\n        if (isNullOrUndefined(findOptions)) {\n            findOptions = 'None';\n        }\n        var result = this.textSearch.find(text, findOptions);\n        if (!isNullOrUndefined(result)) {\n            this.navigate(result);\n        }\n    };\n    /**\n     * Finds all occurrence of specified text in the document.\n     *\n     * @param {string} text - Specifies text to find.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is 'None'.\n     * @returns {void}\n     */\n    Search.prototype.findAll = function (text, findOptions) {\n        if (isNullOrUndefined(text || text === '')) {\n            return;\n        }\n        if (isNullOrUndefined(findOptions)) {\n            findOptions = 'None';\n        }\n        var results = this.textSearch.findAll(text, findOptions);\n        if (!isNullOrUndefined(results) && results.length > 0) {\n            this.navigate(results.innerList[results.currentIndex]);\n            this.highlight(results);\n        }\n    };\n    //#endregion\n    //#region Replace and Replace All\n    /**\n     * Replace the searched string with specified string\n     *\n     * @private\n     * @param  {string} replaceText  - Specifies text to replace.\n     * @param  {TextSearchResult} result - Specifies the result.\n     * @param  {TextSearchResults} results - Specifies the results.\n     * @returns {number} - Returns replaced text count.\n     */\n    Search.prototype.replace = function (replaceText, result, results) {\n        if (isNullOrUndefined(this.viewer.owner) || this.viewer.owner.isReadOnlyMode || !this.viewer.owner.editorModule.canEditContentControl || isNullOrUndefined(results)) {\n            return 0;\n        }\n        if (!isNullOrUndefined(this.viewer)) {\n            this.clearSearchHighlight();\n        }\n        this.navigate(result);\n        var endPosition = this.documentHelper.selection.start;\n        if (this.owner.enableTrackChanges && this.documentHelper.selection.start.currentWidget) {\n            var inline = undefined;\n            /* eslint-disable-next-line max-len */\n            var inlineElement = this.documentHelper.selection.end.currentWidget.getInline(this.owner.selectionModule.start.offset, 0);\n            inline = inlineElement.element;\n            if (inline.revisions.length > 0) {\n                this.isRepalceTracking = true;\n            }\n        }\n        var index = results.indexOf(result);\n        if (index < 0) {\n            return 0;\n        }\n        this.owner.editorModule.insertTextInternal(replaceText, true);\n        var endTextPosition = result.end;\n        var startPosition = new TextPosition(this.viewer.owner);\n        if (endTextPosition.currentWidget.children.length === 0) {\n            var linewidget = endTextPosition.currentWidget.paragraph.childWidgets[0];\n            startPosition.setPositionParagraph(linewidget, endPosition.offset - replaceText.length);\n        }\n        else {\n            startPosition.setPositionParagraph(endTextPosition.currentWidget, endPosition.offset - replaceText.length);\n        }\n        this.documentHelper.selection.selectRange(endPosition, startPosition);\n        var eventArgs = { source: this.viewer.owner };\n        this.viewer.owner.trigger(searchResultsChangeEvent, eventArgs);\n        return 1;\n    };\n    /**\n     * Find the textToFind string in current document and replace the specified string.\n     *\n     * @private\n     * @param {string} textToReplace - Specifies the text to replace.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n     * @returns {void}\n     */\n    Search.prototype.replaceInternal = function (textToReplace, findOptions) {\n        if ((textToReplace === '' || isNullOrUndefined(textToReplace))) {\n            return;\n        }\n        if (isNullOrUndefined(findOptions)) {\n            findOptions = 'None';\n        }\n        var textToFind = this.textSearchResults.currentSearchResult.text;\n        var pattern = this.viewer.owner.searchModule.textSearch.stringToRegex(textToFind, findOptions);\n        var index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n        var result = this.viewer.owner.searchModule.textSearch.findNext(pattern, findOptions, index);\n        if (!isNullOrUndefined(result)) {\n            this.navigate(result);\n            this.textSearchResults.addResult();\n            this.textSearchResults.innerList[0] = result;\n            this.replace(textToReplace, result, this.textSearchResults);\n            index = this.owner.selectionModule.end.getHierarchicalIndexInternal();\n            result = this.textSearch.findNext(textToFind, findOptions, index);\n            if (result) {\n                this.textSearchResults.addResult();\n                this.textSearchResults.innerList[0] = result;\n                this.navigate(result);\n            }\n        }\n    };\n    /**\n     * Replace all the searched string with specified string\n     *\n     * @private\n     * @param  {string} replaceText - Specifies the replace text.\n     * @param  {TextSearchResults} results - Specfies the results.\n     * @returns {number} - Returns the replace count.\n     */\n    Search.prototype.replaceAll = function (replaceText, results) {\n        this.documentHelper.layout.isReplacingAll = true;\n        if (isNullOrUndefined(this.viewer.owner) || this.viewer.owner.isReadOnlyMode || isNullOrUndefined(results)) {\n            return 0;\n        }\n        if (this.owner.editorHistoryModule) {\n            this.owner.editorHistoryModule.initComplexHistory(this.owner.selectionModule, 'ReplaceAll');\n        }\n        var count = results.length;\n        this.viewer.owner.isLayoutEnabled = false;\n        var text = results.innerList[0].text;\n        for (var i = count - 1; i >= 0; i--) {\n            var result = results.innerList[parseInt(i.toString(), 10)];\n            if (result.start.currentWidget.children.length === 0) {\n                results = this.textSearch.findAll(text);\n                i = results.length;\n            }\n            else {\n                this.navigate(result);\n                if (this.viewer.owner.isReadOnlyMode || !this.viewer.owner.editorModule.canEditContentControl) {\n                    continue;\n                }\n                var allowLayout = true;\n                if (i > 0) {\n                    var previousResult = results.innerList[i - 1];\n                    if (previousResult.start.paragraph.equals(result.start.paragraph)) {\n                        allowLayout = false;\n                    }\n                }\n                this.owner.editorModule.insertTextInternal(replaceText, true, undefined, allowLayout);\n                result.destroy();\n            }\n            //if (result.isHeader || result.isFooter) {\n            // eslint-disable-next-line max-len\n            //this.documentHelper.layout.updateHeaderFooterToParent(this.documentHelper.selection.start.paragraph.bodyWidget as HeaderFooterWidget);\n            //}\n        }\n        if (this.owner.editorHistoryModule && !isNullOrUndefined(this.owner.editorHistoryModule.currentHistoryInfo)) {\n            this.owner.editorHistoryModule.updateComplexHistory();\n        }\n        else {\n            this.owner.editorModule.updateComplexWithoutHistory(2);\n        }\n        this.searchResults.clear();\n        this.documentHelper.layout.isReplacingAll = false;\n        return count;\n    };\n    /**\n     * Find the textToFind string in current document and replace the specified string.\n     *\n     * @private\n     * @param {string} textToReplace - Specifies the text to replace.\n     * @param {FindOption} findOptions - Default value of ‘findOptions’ parameter is FindOption.None.\n     * @returns {void}\n     */\n    Search.prototype.replaceAllInternal = function (textToReplace, findOptions) {\n        if (isNullOrUndefined(textToReplace)) {\n            return;\n        }\n        if (isNullOrUndefined(findOptions)) {\n            findOptions = 'None';\n        }\n        if (this.textSearchResults.length > 0) {\n            this.navigate(this.textSearchResults.innerList[this.textSearchResults.currentIndex]);\n            this.highlight(this.textSearchResults);\n            this.replaceAll(textToReplace, this.textSearchResults);\n        }\n    };\n    //#endregion\n    //#region Highlight Search Result\n    /**\n     * @private\n     * @param {TextSearchResult} textSearchResult - Specifies the text search results.\n     * @returns {void}\n     */\n    Search.prototype.navigate = function (textSearchResult) {\n        if (textSearchResult) {\n            var start = textSearchResult.start;\n            var end = textSearchResult.end;\n            if (!isNullOrUndefined(this.owner) && !isNullOrUndefined(this.owner.selectionModule) && !isNullOrUndefined(start) &&\n                !isNullOrUndefined(end) && !isNullOrUndefined(start.paragraph) && !isNullOrUndefined(end.paragraph)) {\n                this.owner.selectionModule.selectRange(start, end);\n                this.documentHelper.updateFocus();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TextSearchResults} textSearchResults - Specifies the text search results.\n     * @returns {void}\n     */\n    Search.prototype.highlight = function (textSearchResults) {\n        this.searchHighlighters = new Dictionary();\n        for (var i = 0; i < textSearchResults.innerList.length; i++) {\n            var result = textSearchResults.innerList[parseInt(i.toString(), 10)];\n            this.highlightResult(result);\n        }\n        this.viewer.renderVisiblePages();\n    };\n    Search.prototype.highlightResult = function (result) {\n        this.highlightSearchResult(result.start.paragraph, result.start, result.end);\n    };\n    /* eslint-disable  */\n    Search.prototype.highlightSearchResult = function (paragraph, start, end) {\n        var selectionStartIndex = 0;\n        var selectionEndIndex = 0;\n        var startElement = null;\n        var endElement = null;\n        var lineWidget = this.documentHelper.selection.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n        selectionStartIndex = lineWidget.index;\n        startElement = lineWidget.element;\n        var startLineWidget = startElement ? startElement.line : paragraph.childWidgets[0];\n        var endLine = this.documentHelper.selection.getEndLineWidget(end, endElement, selectionEndIndex);\n        selectionEndIndex = endLine.index;\n        endElement = endLine.element;\n        var endLineWidget = endElement ? endElement.line :\n            end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n        var top = this.documentHelper.selection.getTop(startLineWidget);\n        var left = this.documentHelper.selection.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n        if (!isNullOrUndefined(startLineWidget) && startLineWidget === endLineWidget) {\n            //find result ends in current line.\n            var right = this.documentHelper.selection.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n            var isRtlText = false;\n            if (endElement instanceof TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            var width = 0;\n            width = Math.abs(right - left);\n            if (!isRtlText && startElement instanceof TextElementBox) {\n                isRtlText = startElement.isRightToLeft;\n            }\n            // Handled the highlighting approach as genric for normal and rtl text.\n            if (isRtlText || paragraph.bidi) {\n                var elementBox = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                if (elementBox && elementBox.length > 1) {\n                    for (var i = 0; i < elementBox.length; i++) {\n                        var element = elementBox[i];\n                        var elementIsRTL = false;\n                        var index = element instanceof TextElementBox ? element.length : 1;\n                        if (element === startElement) {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                        }\n                        else if (element === endElement) {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionEndIndex);\n                        }\n                        else {\n                            left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                        }\n                        if (element instanceof TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top);\n                }\n            }\n            else {\n                // Start element and end element will be in reverese for Bidi paragraph highlighting. \n                // So, the right is considered based on Bidi property. \n                this.createHighlightBorder(startLineWidget, width, left, top);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(startLineWidget)) {\n                if (paragraph !== startLineWidget.paragraph) {\n                    paragraph = startLineWidget.paragraph;\n                }\n                var width = this.documentHelper.selection.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n                // Handled the  highlighting approach as genric for normal and rtl text.\n                if (paragraph.bidi || (startElement instanceof TextElementBox && startElement.isRightToLeft)) {\n                    var right = 0;\n                    var elementCollection = this.documentHelper.selection.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                    if (elementCollection) {\n                        var elementIsRTL = false;\n                        for (var i = 0; i < elementCollection.length; i++) {\n                            var element = elementCollection[i];\n                            var index = element instanceof TextElementBox ? element.length : 1;\n                            right = this.documentHelper.selection.getLeftInternal(startLineWidget, element, index);\n                            elementIsRTL = false;\n                            if (element === startElement) {\n                                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            }\n                            else {\n                                left = this.documentHelper.selection.getLeftInternal(startLineWidget, element, 0);\n                            }\n                            if (element instanceof TextElementBox) {\n                                elementIsRTL = element.isRightToLeft;\n                            }\n                            width = Math.abs(right - left);\n                            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top);\n                        }\n                        // Highlight the Paragrph mark for last line.\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, left, top);\n                }\n                var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n                //Iterates to last item of paragraph or search result end.\n                for (var i = 0; i < paragraph.childWidgets.length; i++) {\n                    if (paragraph === startLineWidget.paragraph) {\n                        lineIndex += 1;\n                    }\n                    this.highlightSearchResultParaWidget(paragraph, lineIndex, endLineWidget, endElement, selectionEndIndex);\n                    if (paragraph === endLineWidget.paragraph) {\n                        return;\n                    }\n                    else {\n                        lineIndex = 0;\n                        paragraph = endLineWidget.paragraph;\n                        i--;\n                    }\n                }\n            }\n        }\n    };\n    Search.prototype.createHighlightBorder = function (lineWidget, width, left, top) {\n        var findHighLight = this.addSearchHighlightBorder(lineWidget);\n        var page = this.viewer.owner.selectionModule.getPage(lineWidget.paragraph);\n        var pageTop = page.boundingRectangle.y;\n        var pageLeft = page.boundingRectangle.x;\n        findHighLight.left = Math.ceil(left);\n        top = Math.ceil(top);\n        findHighLight.width = Math.floor(width);\n        var height = Math.floor(lineWidget.height);\n        var context = this.documentHelper.containerContext;\n    };\n    Search.prototype.addSearchHighlightBorder = function (lineWidget) {\n        var highlighters = undefined;\n        var collection = this.searchHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var searchHighlight = new SearchWidgetInfo(0, 0);\n        highlighters.push(searchHighlight);\n        return searchHighlight;\n    };\n    Search.prototype.highlightSearchResultParaWidget = function (widget, startIndex, endLine, endElement, endIndex) {\n        var top = 0;\n        var width = 0;\n        var isRtlText = false;\n        for (var j = startIndex; j < widget.childWidgets.length; j++) {\n            var lineWidget = widget.childWidgets[j];\n            if (j === startIndex) {\n                top = this.documentHelper.selection.getTop(lineWidget);\n            }\n            var left = this.documentHelper.selection.getLeft(lineWidget);\n            if (endElement instanceof TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            if (lineWidget === endLine) {\n                //Selection ends in current line.\n                var right = 0;\n                // Handled the highlighting using the element box highlighting approach as genric for normal and rtl text.\n                if (isRtlText || widget.bidi) {\n                    var elementBox = this.documentHelper.selection.getElementsBackward(lineWidget, endElement, endElement, widget.bidi);\n                    for (var i = 0; i < elementBox.length; i++) {\n                        var element = elementBox[i];\n                        var elementIsRTL = false;\n                        left = this.documentHelper.selection.getLeftInternal(lineWidget, element, 0);\n                        if (element === endElement) {\n                            right = this.documentHelper.selection.getLeftInternal(lineWidget, element, endIndex);\n                        }\n                        else {\n                            var index = element instanceof TextElementBox ? element.length : 1;\n                            right = this.documentHelper.selection.getLeftInternal(lineWidget, element, index);\n                        }\n                        if (element instanceof TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        this.createHighlightBorder(lineWidget, width, elementIsRTL ? right : left, top);\n                    }\n                    return;\n                }\n                else {\n                    right = this.documentHelper.selection.getLeftInternal(endLine, endElement, endIndex);\n                    width = Math.abs(right - left);\n                    this.createHighlightBorder(lineWidget, width, isRtlText ? right : left, top);\n                    return;\n                }\n            }\n            else {\n                width = this.documentHelper.selection.getWidth(lineWidget, true) - (left - widget.x);\n                this.createHighlightBorder(lineWidget, width, left, top);\n                top += lineWidget.height;\n            }\n        }\n    };\n    //#endregion\n    //#region Get find result view\n    /**\n     * @private\n     * @param {string} result - Specified the result.\n     * @returns {void}\n     */\n    Search.prototype.addSearchResultItems = function (result) {\n        if (isNullOrUndefined(result) || result === '') {\n            return;\n        }\n        if (isNullOrUndefined(this.owner.findResultsList)) {\n            this.owner.findResultsList = [];\n        }\n        this.owner.findResultsList.push(result);\n    };\n    /**\n     * @private\n     * @param {TextSearchResults} textSearchResults - Specified text search result.\n     * @returns {void}\n     */\n    Search.prototype.addFindResultView = function (textSearchResults) {\n        for (var i = 0; i < textSearchResults.innerList.length; i++) {\n            var result = textSearchResults.innerList[i];\n            this.addFindResultViewForSearch(result);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    Search.prototype.addFindResultViewForSearch = function (result) {\n        if (result.start != null && result.end != null && result.start.paragraph != null && result.end.paragraph != null) {\n            var prefixText = void 0;\n            var suffixtext = void 0;\n            var currentText = void 0;\n            var startIndex = 0;\n            var inlineObj = result.start.currentWidget.getInline(result.start.offset, startIndex);\n            var inline = inlineObj.element;\n            startIndex = inlineObj.index;\n            var prefix = '';\n            var lastIndex = 0;\n            if (inline instanceof FieldElementBox) {\n                var elementInfo = this.owner.selectionModule.getRenderedInline(inline, startIndex);\n                if (elementInfo.element.nextNode instanceof TextElementBox) {\n                    inline = elementInfo.element.nextNode;\n                    startIndex = elementInfo.index;\n                }\n                else {\n                    inline = elementInfo.element;\n                    startIndex = elementInfo.index;\n                }\n            }\n            var boxObj = this.owner.selectionModule.getElementBoxInternal(inline, startIndex);\n            var box = boxObj.element;\n            startIndex = boxObj.index;\n            if (box != null) {\n                if (box instanceof TextElementBox && startIndex > 0) {\n                    prefix = box.text.substring(0, startIndex);\n                }\n                var boxIndex = box.line.children.indexOf(box);\n                lastIndex = prefix.lastIndexOf(' ');\n                while (lastIndex < 0 && boxIndex > 0 && box.line.children[boxIndex - 1] instanceof TextElementBox) {\n                    prefix = box.line.children[boxIndex - 1].text + prefix;\n                    boxIndex--;\n                    lastIndex = prefix.lastIndexOf(' ');\n                }\n            }\n            var shiftIndex = prefix.lastIndexOf('\\v');\n            if (shiftIndex > 0) {\n                prefix = prefix.substring(0, shiftIndex);\n            }\n            else {\n                lastIndex = prefix.lastIndexOf(' ');\n                prefixText = lastIndex < 0 ? prefix : prefix.substring(lastIndex + 1);\n            }\n            currentText = result.text;\n            var endIndex = 0;\n            var endInlineObj = result.end.currentWidget.getInline(result.end.offset, endIndex);\n            var endInline = endInlineObj.element;\n            endIndex = endInlineObj.index;\n            suffixtext = '';\n            //Checks prefix element box is empty\n            if (boxObj != null) {\n                // Gets the element box using endIndex of the text and set as suffix\n                boxObj = this.owner.selectionModule.getElementBoxInternal(endInline, endIndex);\n                box = boxObj.element;\n                endIndex = boxObj.index;\n            }\n            //Checks suffix element box is empty.\n            if (box != null) {\n                if (box instanceof TextElementBox && endIndex < box.length) {\n                    suffixtext = box.text.substring(endIndex);\n                }\n                var boxIndex = box.line.children.indexOf(box);\n                while (boxIndex + 1 < box.line.children.length && (box.line.children[boxIndex + 1] instanceof TextElementBox) || (box.line.children[boxIndex + 1] instanceof FieldElementBox)) {\n                    if (box.line.children[boxIndex + 1] instanceof FieldElementBox) {\n                        boxIndex = boxIndex + 2;\n                    }\n                    else {\n                        suffixtext = suffixtext + box.line.children[boxIndex + 1].text;\n                        boxIndex = boxIndex + 1;\n                    }\n                }\n            }\n            lastIndex = suffixtext.lastIndexOf(' ');\n            suffixtext = suffixtext === '\\v' ? suffixtext = '' : suffixtext;\n            var headerFooterString = '';\n            var listElement = '';\n            var containerWidget = result.start.paragraph.containerWidget;\n            var type = containerWidget instanceof HeaderFooterWidget ? containerWidget.headerFooterType : '';\n            if (type.indexOf('Header') != -1) {\n                headerFooterString = '<span class=\"e-de-header-footer-list\">' + 'Header' + ': ' + '</span>';\n            }\n            else if (type.indexOf('Footer') != -1) {\n                listElement = '<li tabindex=0 class=\"e-de-search-result-item e-de-op-search-txt\">' + headerFooterString + prefix + '<span class=\"e-de-op-search-word\" style=\"pointer-events:none\">' + result.text + '</span>' + suffixtext + '</li>';\n                headerFooterString = '<span class=\"e-de-header-footer-list\">' + 'Footer' + ': ' + '</span>';\n            }\n            listElement = '<li tabindex=0 class=\"e-de-search-result-item e-de-op-search-txt\">' + headerFooterString + prefix + '<span class=\"e-de-op-search-word\" style=\"pointer-events:none\">' + result.text + '</span>' + suffixtext + '</li>';\n            this.addSearchResultItems(listElement);\n        }\n    };\n    //#endregion\n    /**\n     * Clears search highlight.\n     *\n     * @private\n     * @returns {void}\n     */\n    Search.prototype.clearSearchHighlight = function () {\n        if (!isNullOrUndefined(this.searchHighlighters)) {\n            this.searchHighlighters.clear();\n            this.searchHighlighters = undefined;\n        }\n        var eventArgs = { source: this.viewer.owner };\n        this.viewer.owner.trigger(searchResultsChangeEvent, eventArgs);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Search.prototype.destroy = function () {\n        if (this.textSearchResults) {\n            this.textSearchResults.destroy();\n        }\n        this.textSearchResults = undefined;\n        this.owner = undefined;\n    };\n    return Search;\n}());\nexport { Search };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}