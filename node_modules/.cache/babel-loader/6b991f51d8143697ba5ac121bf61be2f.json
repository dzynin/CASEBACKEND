{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { TextPosition, ImageSizeInfo } from '../selection/selection-helper';\nimport { ParagraphWidget, LineWidget, ElementBox, TextElementBox, Margin, ImageElementBox, BlockWidget, BlockContainer, BodyWidget, TableWidget, TableCellWidget, TableRowWidget, Widget, ListTextElementBox, BookmarkElementBox, HeaderFooterWidget, FieldTextElementBox, TabElementBox, EditRangeStartElementBox, EditRangeEndElementBox, CommentElementBox, CommentCharacterElementBox, CheckBoxFormField, DropDownFormField, TextFormField, ShapeElementBox, TextFrame, ContentControl, FootnoteElementBox, FootNoteWidget, ShapeBase, FootnoteEndnoteMarkerElementBox } from '../viewer/page';\nimport { WCharacterFormat } from '../format/character-format';\nimport { HelperMethods, Base64 } from './editor-helper';\nimport { isNullOrUndefined, Browser, classList, L10n } from '@syncfusion/ej2-base';\nimport { WParagraphFormat, WSectionFormat, WListFormat, WTableFormat, WRowFormat, WCellFormat, WBorder, WBorders, WTabStop } from '../index';\nimport { WList } from '../list/list';\nimport { WAbstractList } from '../list/abstract-list';\nimport { WListLevel } from '../list/list-level';\nimport { WLevelOverride } from '../list/level-override';\nimport { FieldElementBox } from '../viewer/page';\nimport { protectionTypeChangeEvent, imagesProperty, abstractListIdProperty } from '../../base/index';\nimport { SelectionCharacterFormat } from '../index';\nimport { PageLayoutViewer } from '../index';\nimport { WCharacterStyle, WStyles } from '../format/style';\nimport { HistoryInfo } from '../editor-history/index';\nimport { TableResizer } from './table-resizer';\nimport { Dictionary } from '../../base/dictionary';\nimport { WParagraphStyle } from '../format/style';\nimport { CONTROL_CHARACTERS } from '../../base/types';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { Revision } from '../track-changes/track-changes';\nimport { XmlHttpRequestHandler } from '../../base/ajax-helper';\nimport { beforeCommentActionEvent, trackChangeEvent, beforeXmlHttpRequestSend, internalStyleCollectionChange } from '../../base/index';\nimport { SectionBreakType } from '../../base/types';\nimport { sectionsProperty, commentsProperty, bidiProperty, revisionsProperty, lastParagraphMarkCopiedProperty, sectionFormatProperty, revisionIdProperty, contextualSpacingProperty, keepWithNextProperty, keepLinesTogetherProperty, widowControlProperty, outlineLevelProperty, numberFormatProperty, startAtProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, cellsProperty, rowsProperty, blocksProperty, listLevelPatternProperty, levelsProperty, stylesProperty, nameProperty } from '../../index';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { ChangesSingleView } from '../track-changes/track-changes-pane';\n/**\n * Editor module\n */\nvar Editor = /** @class */function () {\n  /**\n   * Initialize the editor module\n   *\n   * @param {DocumentHelper} documentHelper - Document helper\n   * @private\n   */\n  function Editor(documentHelper) {\n    var _this = this;\n    this.nodes = [];\n    this.editHyperlinkInternal = false;\n    this.startParagraph = undefined;\n    this.endParagraph = undefined;\n    this.formFieldCounter = 1;\n    this.skipFieldDeleteTracking = false;\n    this.skipFootNoteDeleteTracking = false;\n    this.isForHyperlinkFormat = false;\n    this.isTrackingFormField = false;\n    this.isInsertText = false;\n    this.keywordIndex = 0;\n    this.casingIndex = -1;\n    this.checkLastLetterSpace = '';\n    this.checkLastLetterSpaceDot = '';\n    this.pasteFootNoteType = '';\n    /**\n    * @private\n    */\n    this.isCopying = false;\n    /**\n    * @private\n    */\n    this.isFootnoteElementRemoved = false;\n    /**\n    * @private\n    */\n    this.isEndnoteElementRemoved = false;\n    /**\n    * @private\n    */\n    this.handledEnter = false;\n    /**\n     * @private\n     */\n    this.removeEditRange = false;\n    /**\n     * @private\n     */\n    this.isRemoveRevision = false;\n    /**\n     * @private\n     */\n    this.isFootNoteInsert = false;\n    /**\n     * @private\n     */\n    this.isTableInsert = false;\n    /**\n     * @private\n     */\n    this.isFootNote = false;\n    /**\n     * @private\n     */\n    this.isHandledComplex = false;\n    /**\n     * @private\n     */\n    this.isUserInsert = false;\n    /**\n     * @private\n     */\n    this.tableResize = undefined;\n    /**\n     * @private\n     */\n    this.tocStyles = {};\n    /**\n     * @private\n     */\n    this.triggerPageSpellCheck = true;\n    /**\n     * @private\n     */\n    this.chartType = false;\n    /**\n     * @private\n     */\n    this.removedBookmarkElements = [];\n    /**\n     * @private\n     */\n    this.removedEditRangeStartElements = [];\n    /**\n     * @private\n     */\n    this.removedEditRangeEndElements = [];\n    /**\n     * @private\n     */\n    this.tocBookmarkId = 0;\n    /**\n     * @private\n     */\n    this.copiedData = undefined;\n    /**\n    * @private\n    */\n    this.isPasteContentCheck = false;\n    this.pageRefFields = {};\n    this.delBlockContinue = false;\n    this.delBlock = undefined;\n    this.delSection = undefined;\n    /**\n     * @private\n     */\n    this.isInsertingTOC = false;\n    this.editStartRangeCollection = [];\n    this.skipReplace = false;\n    this.skipTableElements = false;\n    this.editRangeID = [];\n    /**\n     * @private\n     */\n    this.isImageInsert = false;\n    /**\n     * @private\n     */\n    this.isSkipOperationsBuild = false;\n    /**\n     * @private\n     */\n    this.isCellFormatApplied = false;\n    /**\n     * @private\n     */\n    this.revisionData = undefined;\n    /**\n     * @private\n     */\n    this.splittedRevisions = [];\n    /**\n     * @private\n     */\n    this.isSkipComments = false;\n    /**\n     * @private\n     */\n    this.isRemoteAction = false;\n    /**\n     * @private\n     */\n    this.isIncrementalSave = false;\n    /**\n     * @private\n     */\n    this.listNumberFormat = '';\n    /**\n     * @private\n     */\n    this.listLevelNumber = 0;\n    /**\n     * @private\n     */\n    this.isXmlMapped = false;\n    this.isAutoList = false;\n    this.isLastParaMarkCopied = false;\n    this.combineLastBlock = false;\n    /**\n     * @private\n     */\n    this.remotePasteRevision = [];\n    /**\n     * @private\n     */\n    this.isFieldOperation = false;\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    /**\n     * @private\n     */\n    this.copiedContent = '';\n    /**\n     * @private\n     */\n    this.copiedTextContent = '';\n    /**\n     * @private\n     */\n    this.previousParaFormat = undefined;\n    this.previousCharFormat = undefined;\n    this.previousSectionFormat = undefined;\n    this.pasteTextPosition = undefined;\n    //public isSkipHistory: boolean = false;\n    /**\n     * @private\n     */\n    this.isPaste = false;\n    /**\n     * @private\n     */\n    this.isPasteListUpdated = false;\n    /**\n     * @private\n     */\n    this.isHtmlPaste = false;\n    /**\n     * @private\n     */\n    this.isInsertField = false;\n    /**\n     * @private\n     */\n    this.isBordersAndShadingDialog = false;\n    /**\n     * @private\n    */\n    this.pasteImageIndex = undefined;\n    /**\n     * @private\n     * @returns {void}\n     */\n    this.onTextInputInternal = function () {\n      if (Browser.isDevice) {\n        var documentHelper = _this.documentHelper;\n        var nbsp = new RegExp(String.fromCharCode(160), 'g');\n        var lineFeed = new RegExp(String.fromCharCode(10), 'g');\n        documentHelper.prefix = documentHelper.prefix.replace(nbsp, ' ').replace(lineFeed, ' ');\n        var text = documentHelper.editableDiv.textContent.replace(nbsp, ' ').replace(lineFeed, ' ');\n        var textBoxText = text.substring(2);\n        if (documentHelper.isCompositionStart && documentHelper.isCompositionUpdated) {\n          documentHelper.isCompositionUpdated = false;\n          if (!documentHelper.owner.isReadOnlyMode && documentHelper.owner.isDocumentLoaded && _this.canEditContentControl) {\n            if (documentHelper.prefix.substring(2) !== textBoxText) {\n              if (_this.selection.isEmpty) {\n                /* eslint-disable-next-line max-len */\n                _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n                _this.handleTextInput(textBoxText);\n                documentHelper.prefix = '@' + String.fromCharCode(160) + textBoxText;\n              } else {\n                _this.handleTextInput(textBoxText);\n                documentHelper.prefix = '@' + String.fromCharCode(160) + textBoxText;\n              }\n            }\n          }\n          return;\n        } else if (documentHelper.isCompositionStart && documentHelper.isCompositionEnd && documentHelper.suffix === '') {\n          if (documentHelper.prefix.substring(2) !== textBoxText) {\n            if (_this.selection.isEmpty && documentHelper.isCompositionStart) {\n              documentHelper.isCompositionStart = false;\n              /* eslint-disable-next-line max-len */\n              _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - documentHelper.prefix.substring(2).length);\n              _this.selection.retrieveCurrentFormatProperties();\n              if (documentHelper.suffix === '' || textBoxText === '') {\n                _this.handleTextInput(textBoxText);\n              }\n            } else if (!_this.selection.isEmpty) {\n              documentHelper.isCompositionStart = false;\n              _this.handleTextInput(textBoxText);\n            }\n          } else if (textBoxText === '') {\n            documentHelper.isCompositionStart = false;\n            _this.handleBackKey();\n          } else if (documentHelper.prefix.substring(2) === textBoxText && documentHelper.suffix === '') {\n            documentHelper.isCompositionStart = false;\n            _this.handleTextInput(' ');\n          }\n          documentHelper.isCompositionEnd = false;\n          return;\n        } else if (documentHelper.isCompositionEnd || documentHelper.isCompositionStart && !documentHelper.isCompositionUpdated) {\n          if (textBoxText.length < documentHelper.prefix.length && /* eslint-disable-next-line max-len */\n          textBoxText === documentHelper.prefix.substring(2, documentHelper.prefix.length - 1) || documentHelper.editableDiv.innerText.length < 2) {\n            _this.handleBackKey();\n            return;\n          } else if (documentHelper.suffix !== '' && documentHelper.editableDiv.innerText[documentHelper.editableDiv.innerText.length - 1] !== String.fromCharCode(160)) {\n            documentHelper.isCompositionStart = false;\n            //When cursor is placed in between a word and chosen a word from predicted words.\n            /* eslint-disable-next-line max-len */\n            _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n            /* eslint-disable-next-line max-len */\n            _this.selection.end.setPositionForLineWidget(documentHelper.selection.end.currentWidget, _this.selection.end.offset + documentHelper.suffix.length);\n            //Retrieve the character format properties. Since the selection was changed manually.\n            _this.selection.retrieveCurrentFormatProperties();\n            _this.handleTextInput(textBoxText);\n            return;\n          }\n        }\n        if (text !== '\\r' && text !== '\\b' && text !== String.fromCharCode(27) && !documentHelper.owner.isReadOnlyMode && documentHelper.isControlPressed === false && _this.canEditContentControl) {\n          if (text === '@' || text[0] !== '@' || text === '' || text.length < documentHelper.prefix.length && textBoxText === documentHelper.prefix.substring(2, documentHelper.prefix.length - 1)) {\n            _this.handleBackKey();\n            if (documentHelper.editableDiv.innerText.length < 2) {\n              _this.predictText();\n            }\n          } else if (text.indexOf(documentHelper.prefix) === 0 && text.length > documentHelper.prefix.length) {\n            _this.handleTextInput(text.substring(documentHelper.prefix.length));\n          } else if (text.indexOf(documentHelper.prefix) === -1 && text[text.length - 1] !== String.fromCharCode(160) && text[text.length - 1] !== ' ') {\n            if (textBoxText.charAt(0).toLowerCase() + textBoxText.slice(1) === documentHelper.prefix.substring(2)) {\n              /* eslint-disable-next-line max-len */\n              _this.selection.start.setPositionParagraph(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n            }\n            _this.handleTextInput(textBoxText);\n          } else if (text.length !== 2) {\n            _this.handleTextInput(' ');\n          }\n        }\n      } else {\n        var text = _this.documentHelper.editableDiv.innerText;\n        if (text !== String.fromCharCode(160)) {\n          if (text !== '\\r' && text !== '\\b' && text !== String.fromCharCode(27) && !_this.owner.isReadOnlyMode && _this.documentHelper.isControlPressed === false && _this.canEditContentControl) {\n            _this.handleTextInput(text);\n          }\n        } else {\n          _this.handleTextInput(' ');\n        }\n        _this.documentHelper.editableDiv.innerText = '';\n      }\n    };\n    /**\n     * Fired on paste.\n     *\n     * @param {ClipboardEvent} event - Specfies clipboard event\n     * @private\n     * @returns {void}\n     */\n    this.onPaste = function (event) {\n      if (!_this.owner.isReadOnlyMode && _this.canEditContentControl) {\n        _this.pasteInternal(event);\n      }\n      event.preventDefault();\n    };\n    this.documentHelper = documentHelper;\n    if (!isNullOrUndefined(this.documentHelper)) {\n      this.tableResize = new TableResizer(this.documentHelper.owner);\n    }\n    this.base64 = new Base64();\n  }\n  Object.defineProperty(Editor.prototype, \"restrictFormatting\", {\n    /**\n     * @private\n     * @returns {boolean} - Returns the restrict formatting\n     */\n    get: function () {\n      return this.documentHelper.isDocumentProtected && (this.documentHelper.restrictFormatting || !this.documentHelper.restrictFormatting && !this.selection.isSelectionInEditRegion()) && this.documentHelper.protectionType !== 'RevisionsOnly';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"restrictEditing\", {\n    /**\n     * @private\n     * @returns {boolean} - Returns the restrict editing\n     */\n    get: function () {\n      return this.documentHelper.isDocumentProtected && ((this.documentHelper.protectionType === 'ReadOnly' || this.documentHelper.isCommentOnlyMode) && !this.selection.isSelectionInEditRegion() || this.documentHelper.protectionType === 'FormFieldsOnly');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"canEditContentControl\", {\n    /**\n     * @private\n     * @returns {boolean} - Returns the can edit content control.\n     */\n    get: function () {\n      if (this.owner.isReadOnlyMode) {\n        return false;\n      }\n      if (this.selection.checkContentControlLocked()) {\n        return false;\n      }\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"viewer\", {\n    get: function () {\n      if (!isNullOrUndefined(this.owner)) {\n        return this.owner.viewer;\n      }\n      return undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"editorHistory\", {\n    get: function () {\n      return this.documentHelper.owner.editorHistoryModule;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"selection\", {\n    get: function () {\n      if (this.documentHelper) {\n        return this.documentHelper.selection;\n      }\n      return undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Editor.prototype, \"owner\", {\n    get: function () {\n      return this.documentHelper.owner;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Editor.prototype.getModuleName = function () {\n    return 'Editor';\n  };\n  /**\n   * Sets the field information for the selected field.\n   *\n   * @param { FieldInfo } fieldInfo – Specifies the field information.\n   * @returns {void}\n   * > Nested field gets replaced completely with the specified field information.\n   */\n  Editor.prototype.setFieldInfo = function (fieldInfo) {\n    var field = this.selection.getHyperlinkField(true);\n    if (!isNullOrUndefined(field)) {\n      this.selection.selectField();\n      this.insertField(fieldInfo.code, fieldInfo.result);\n    }\n  };\n  /**\n   * Inserts the specified field at cursor position.\n   *\n   * @param {string} code Specify the field code.\n   * @param {string} result Specify the field result.\n   * @returns {void}\n   */\n  Editor.prototype.insertField = function (code, result) {\n    this.isInsertField = true;\n    var fieldCode = code;\n    fieldCode = HelperMethods.trimStart(fieldCode);\n    if (fieldCode.substring(0, 8) === 'NUMPAGES') {\n      this.insertPageCount(result);\n    } else if (fieldCode.substring(0, 4) === 'PAGE') {\n      this.insertPageNumber(result);\n    } else {\n      if (isNullOrUndefined(result)) {\n        if (fieldCode.substring(0, 10) === 'MERGEFIELD') {\n          fieldCode = fieldCode.substring(10).trim();\n          var index = fieldCode.indexOf('\\\\*');\n          result = '«' + fieldCode.substring(0, index).trim() + '»';\n        }\n      }\n      var paragraph = new ParagraphWidget();\n      var insertFormat = new WCharacterFormat();\n      var selectionFormat = this.copyInsertFormat(insertFormat, false);\n      var line = new LineWidget(paragraph);\n      var fieldBegin = new FieldElementBox(0);\n      fieldBegin.characterFormat.mergeFormat(selectionFormat);\n      line.children.push(fieldBegin);\n      var fieldCodeSpan = new TextElementBox();\n      fieldCodeSpan.characterFormat.mergeFormat(selectionFormat);\n      fieldCodeSpan.text = code;\n      line.children.push(fieldCodeSpan);\n      var fieldSeparator = new FieldElementBox(2);\n      fieldSeparator.characterFormat.mergeFormat(selectionFormat);\n      fieldSeparator.fieldBegin = fieldBegin;\n      fieldBegin.fieldSeparator = fieldSeparator;\n      line.children.push(fieldSeparator);\n      var fieldResultSpan = new TextElementBox();\n      fieldResultSpan.text = result;\n      fieldResultSpan.characterFormat.mergeFormat(selectionFormat);\n      line.children.push(fieldResultSpan);\n      var fieldEnd = new FieldElementBox(1);\n      fieldEnd.characterFormat.mergeFormat(selectionFormat);\n      fieldEnd.fieldSeparator = fieldSeparator;\n      fieldEnd.fieldBegin = fieldBegin;\n      fieldBegin.fieldEnd = fieldEnd;\n      fieldSeparator.fieldEnd = fieldEnd;\n      line.children.push(fieldEnd);\n      fieldBegin.line = line;\n      paragraph.childWidgets.push(line);\n      paragraph.isCreatedUsingHtmlSpanTag = true;\n      this.documentHelper.fields.push(fieldBegin);\n      var section = new BodyWidget();\n      section.sectionFormat = new WSectionFormat(section);\n      section.childWidgets.push(paragraph);\n      this.pasteContentsInternal([section], false);\n    }\n    this.isInsertField = false;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.isLinkedStyle = function (styleName) {\n    var styleObj = this.documentHelper.styles.findByName(styleName);\n    return !isNullOrUndefined(styleObj.link);\n  };\n  /**\n   * Applies the specified style for paragraph.\n   *\n   * @param {string} style Specify the style name to apply.\n   * @param {boolean} clearDirectFormatting - Removes manual formatting (formatting not applied using a style)\n   * from the selected text, to match the formatting of the applied style. Default value is false.\n   * @returns {void}\n   */\n  Editor.prototype.applyStyle = function (style, clearDirectFormatting) {\n    clearDirectFormatting = isNullOrUndefined(clearDirectFormatting) ? false : clearDirectFormatting;\n    var startPosition = undefined;\n    var endPosition = undefined;\n    if (clearDirectFormatting) {\n      this.initComplexHistory('ApplyStyle');\n      this.setOffsetValue(this.selection);\n      startPosition = this.startOffset;\n      endPosition = this.endOffset;\n      var isSelectionEmpty = this.selection.isEmpty;\n      this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.clearFormattingInternal(!this.isLinkedStyle(style));\n      this.isSkipOperationsBuild = false;\n      if (isSelectionEmpty && !this.selection.isEmpty) {\n        this.selection.end.setPositionInternal(this.selection.start);\n      }\n    }\n    var styleObj = this.documentHelper.styles.findByName(style);\n    if (styleObj !== undefined) {\n      if (styleObj instanceof WCharacterStyle && styleObj.type === 'Character') {\n        if (this.selection.isEmpty) {\n          var offset = this.selection.start.offset;\n          var preservedStartPosition = this.selection.start.clone();\n          var preservedEndPosition = this.selection.end.clone();\n          this.selection.selectCurrentWord();\n          if (offset === this.selection.start.offset || offset === this.selection.end.offset - 1) {\n            this.selection.start = preservedStartPosition;\n            this.selection.end = preservedEndPosition;\n            this.selection.characterFormat.copyFormat(styleObj.characterFormat);\n          } else {\n            this.onApplyCharacterFormat('styleName', styleObj, false, true);\n          }\n        } else {\n          this.onApplyCharacterFormat('styleName', styleObj, false, true);\n        }\n      } else {\n        this.onApplyParagraphFormat('styleName', styleObj, false, true);\n      }\n    } else {\n      /* eslint-disable-next-line max-len */\n      this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(style)), this.documentHelper.styles);\n      this.applyStyle(style);\n    }\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'ApplyStyle') {\n      this.startOffset = startPosition;\n      this.endOffset = endPosition;\n      this.editorHistory.updateComplexHistory();\n    }\n    this.startParagraph = undefined;\n    this.endParagraph = undefined;\n  };\n  // Public Implementation Starts\n  /**\n   * Moves the selected content in the document editor control to clipboard.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.cut = function () {\n    if (this.owner.isReadOnlyMode || this.selection.isEmpty || !this.canEditContentControl) {\n      return;\n    }\n    this.selection.copySelectedContent(true);\n    this.documentHelper.owner.parser.isCutPerformed = true;\n  };\n  /**\n   * Inserts the editing region in the current selection range for the specified user.\n   *\n   * @param {string} user Specifies the native rendering\n   * @returns {void}\n   */\n  Editor.prototype.insertEditingRegion = function (user) {\n    this.insertEditRangeElement(user && user !== '' ? user : 'Everyone');\n  };\n  Editor.prototype.enforceProtection = function (credential, restrictFormatType, isReadOnly) {\n    var typeOfProtection;\n    var limitToFormatting;\n    if (typeof restrictFormatType === 'boolean') {\n      typeOfProtection = isReadOnly ? 'ReadOnly' : this.documentHelper.protectionType;\n      limitToFormatting = restrictFormatType;\n    } else {\n      typeOfProtection = restrictFormatType;\n    }\n    if (!isNullOrUndefined(limitToFormatting)) {\n      this.documentHelper.restrictFormatting = limitToFormatting;\n    }\n    this.documentHelper.protectionType = typeOfProtection;\n    this.selection.isHighlightEditRegion = true;\n    this.addProtection(credential, this.documentHelper.protectionType, false);\n  };\n  Editor.prototype.enforceProtectionAsync = function (credential, restrictFormatType, isReadOnly) {\n    return __awaiter(this, void 0, void 0, function () {\n      var typeOfProtection, limitToFormatting;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof restrictFormatType === 'boolean') {\n              typeOfProtection = isReadOnly ? 'ReadOnly' : this.documentHelper.protectionType;\n              limitToFormatting = restrictFormatType;\n            } else {\n              limitToFormatting = true;\n              typeOfProtection = restrictFormatType;\n            }\n            this.documentHelper.restrictFormatting = limitToFormatting;\n            this.documentHelper.protectionType = typeOfProtection;\n            this.selection.isHighlightEditRegion = true;\n            return [4 /*yield*/, this.addProtection(credential, this.documentHelper.protectionType, true)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Editor.prototype.getCommentHierarchicalIndex = function (comment) {\n    var index = '';\n    while (comment.ownerComment) {\n      if (!isNullOrUndefined(comment.ownerComment)) {\n        index = comment.ownerComment.replyComments.indexOf(comment) + ';' + index;\n        comment = comment.ownerComment;\n      } else {\n        index = comment.replyComments.indexOf(comment) + ';' + index;\n        comment = comment;\n      }\n    }\n    index = 'C;' + this.documentHelper.comments.indexOf(comment) + ';' + index;\n    return index;\n  };\n  Editor.prototype.alertBox = function () {\n    var localObj = new L10n('documenteditor', this.owner.defaultLocale);\n    localObj.setLocale(this.owner.locale);\n    DialogUtility.alert({\n      title: localObj.getConstant('Information'),\n      content: localObj.getConstant('Multiple Comment')\n    });\n  };\n  /**\n   * Inserts the comment.\n   *\n   * @param {string} text Specify the comment text to be inserted.\n   * @returns {void}\n   */\n  // Comment implementation starts\n  Editor.prototype.insertComment = function (text) {\n    if (isNullOrUndefined(this.selection.start) || this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode || this.viewer.owner.enableHeaderAndFooter || !this.viewer.owner.enableComment) {\n      return;\n    }\n    if (this.viewer.owner.commentReviewPane.commentPane.isEditMode) {\n      return this.alertBox();\n    }\n    if (isNullOrUndefined(text)) {\n      text = '';\n    }\n    this.insertCommentInternal(text);\n  };\n  Editor.prototype.insertCommentInternal = function (text) {\n    this.documentHelper.layout.allowLayout = false;\n    if (this.selection.isEmpty) {\n      // If selection is at paragraph end, move selection to previous word similar to MS Word\n      if (this.selection.start.isAtSamePosition(this.selection.end) && this.selection.start.isAtParagraphEnd) {\n        var startOffset = this.selection.start.offset;\n        this.selection.start.offset = startOffset - 1 !== -1 ? startOffset - 1 : startOffset;\n      }\n      this.selection.selectCurrentWord();\n    }\n    // If paragraph mark selected, remove paragraph mark selection\n    if (this.selection.isParagraphLastLine(this.selection.end.currentWidget) && this.selection.end.offset === this.selection.getLineLength(this.selection.end.currentWidget) + 1) {\n      this.selection.end.offset -= 1;\n    }\n    var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n    var startIndex = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n    var endParagraphInfo = this.selection.getParagraphInfo(this.selection.end);\n    var endIndex = this.selection.getHierarchicalIndex(endParagraphInfo.paragraph, endParagraphInfo.offset.toString());\n    this.initComplexHistory('InsertComment');\n    var startPosition = this.selection.start;\n    var endPosition = this.selection.end;\n    var position = new TextPosition(this.owner);\n    if (!this.selection.isForward) {\n      startPosition = this.selection.end;\n      endPosition = this.selection.start;\n    }\n    // Clones the end position.\n    position.setPositionInternal(endPosition);\n    var commentRangeStart = new CommentCharacterElementBox(0);\n    var commentRangeEnd = new CommentCharacterElementBox(1);\n    var isSameLine = startPosition.currentWidget === endPosition.currentWidget;\n    // Adds comment start at selection start position.\n    endPosition.setPositionInternal(startPosition);\n    var lineIndex = position.currentWidget.indexInOwner;\n    var paragraph = position.currentWidget.paragraph;\n    this.initInsertInline(commentRangeStart);\n    if (position.currentWidget.indexInOwner === -1) {\n      position.currentWidget = paragraph.childWidgets[lineIndex];\n    }\n    if (isNullOrUndefined(position.paragraph) || position.currentWidget && position.currentWidget.children.length === 0 && position.currentWidget.indexInOwner === -1) {\n      var endPos = this.selection.getTextPosBasedOnLogicalIndex(endIndex);\n      position.setPositionInternal(endPos);\n    }\n    // Updates the cloned position, since comment start is added in the same line.\n    if (isSameLine) {\n      position.setPositionParagraph(position.currentWidget, position.offset + commentRangeStart.length);\n    }\n    // Adds comment end and comment at selection end position.\n    startPosition.setPositionInternal(position);\n    endPosition.setPositionInternal(position);\n    this.initInsertInline(commentRangeEnd);\n    var commentAdv = new CommentElementBox(HelperMethods.getUtcDate());\n    if (this.owner.editorHistoryModule) {\n      this.initHistory('InsertCommentWidget');\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start + CONTROL_CHARACTERS.Marker_End;\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(commentAdv);\n    }\n    var markerData = {\n      author: this.owner.currentUser ? this.owner.currentUser : 'Guest user',\n      initial: this.constructCommentInitial(commentAdv.author),\n      text: SanitizeHtmlHelper.sanitize(text),\n      commentId: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n    };\n    this.updateCommentElement(commentAdv, commentRangeStart, commentRangeEnd, markerData);\n    this.addCommentWidget(commentAdv, true, true, true);\n    if (this.editorHistory) {\n      this.editorHistory.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(commentAdv);\n      this.editorHistory.updateHistory();\n    }\n    // this.selection.selectPosition(this.selection.getTextPosBasedOnLogicalIndex(startIndex), this.selection.getTextPosBasedOnLogicalIndex(endIndex));\n    if (this.editorHistory) {\n      this.editorHistory.updateComplexHistory();\n    }\n    this.reLayout(this.selection, false);\n    this.documentHelper.layout.allowLayout = true;\n    if (!this.isUserInsert) {\n      var comment = this.owner.commentReviewPane.commentPane.comments.get(commentAdv);\n      comment.postComment();\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.updateCommentElement = function (commentAdv, commentRangeStart, commentRangeEnd, markerData) {\n    commentAdv.author = markerData.author;\n    commentAdv.initial = markerData.initial;\n    commentAdv.text = markerData.text;\n    commentAdv.commentId = markerData.commentId;\n    if (!isNullOrUndefined(markerData.done)) {\n      commentAdv.isResolved = markerData.done;\n    }\n    if (!isNullOrUndefined(markerData.isReply)) {\n      commentAdv.isReply = markerData.isReply;\n    }\n    if (!isNullOrUndefined(commentRangeStart) && !isNullOrUndefined(commentRangeEnd)) {\n      commentRangeStart.comment = commentAdv;\n      commentRangeStart.commentId = commentAdv.commentId;\n      commentRangeEnd.comment = commentAdv;\n      commentRangeEnd.commentId = commentAdv.commentId;\n      commentAdv.commentStart = commentRangeStart;\n      commentAdv.commentEnd = commentRangeEnd;\n    }\n    return commentAdv;\n  };\n  /**\n   * Deletes all the comments in the current document.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.deleteAllComments = function () {\n    if (this.documentHelper.comments.length === 0) {\n      return;\n    }\n    // this.documentHelper.clearSearchHighlight();\n    this.initComplexHistory('DeleteAllComments');\n    this.owner.isLayoutEnabled = false;\n    var historyInfo;\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      historyInfo = this.editorHistory.currentHistoryInfo;\n    }\n    while (this.documentHelper.comments.length > 0) {\n      var comment = this.documentHelper.comments[0];\n      this.initComplexHistory('DeleteComment');\n      this.deleteCommentInternal(comment);\n      if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n        historyInfo.addModifiedAction(this.editorHistory.currentHistoryInfo);\n      }\n    }\n    this.selection.selectContent(this.owner.documentStart, true);\n    if (this.editorHistory) {\n      this.editorHistory.currentHistoryInfo = historyInfo;\n      this.editorHistory.updateComplexHistory();\n    }\n  };\n  /**\n   * Deletes the current selected comment.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.deleteComment = function () {\n    if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode || isNullOrUndefined(this.owner) || isNullOrUndefined(this.owner.viewer) || isNullOrUndefined(this.owner.documentHelper.currentSelectedComment) || this.owner.enableHeaderAndFooter || !this.viewer.owner.enableComment) {\n      return;\n    }\n    this.deleteCommentInternal(this.owner.documentHelper.currentSelectedComment);\n  };\n  /**\n   * @param {CommentElementBox} comment - Specified the comment element box\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.deleteCommentInternal = function (comment) {\n    this.initComplexHistory('DeleteComment');\n    if (comment) {\n      if (comment.replyComments.length > 0) {\n        for (var i = comment.replyComments.length - 1; i >= 0; i--) {\n          this.deleteCommentInternal(comment.replyComments[i]);\n        }\n      }\n      this.deleteCommentWidgetInternal(comment);\n      var commentStart = comment.commentStart;\n      var commentEnd = comment.commentEnd;\n      if (commentEnd.indexInOwner !== -1) {\n        this.removeInline(commentEnd);\n      }\n      if (commentStart.indexInOwner !== -1) {\n        this.removeInline(commentStart);\n      }\n      commentStart.removeCommentMark();\n    }\n    if (this.editorHistory) {\n      this.editorHistory.updateComplexHistory();\n    }\n  };\n  Editor.prototype.deleteCommentWidgetInternal = function (comment) {\n    if (this.owner.editorHistoryModule) {\n      this.initHistory('DeleteCommentWidget');\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(comment);\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(comment);\n    }\n    this.deleteCommentWidget(comment);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n  };\n  /**\n   * @param {CommentElementBox} comment - Specified the comment element box\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.deleteCommentWidget = function (comment) {\n    var commentIndex = this.documentHelper.comments.indexOf(comment);\n    if (commentIndex !== -1) {\n      this.documentHelper.comments.splice(commentIndex, 1);\n    } else if (comment.isReply && comment.ownerComment) {\n      commentIndex = comment.ownerComment.replyComments.indexOf(comment);\n      comment.ownerComment.replyComments.splice(commentIndex, 1);\n    }\n    if (this.owner.commentReviewPane) {\n      this.owner.commentReviewPane.deleteComment(comment);\n      if (this.documentHelper.currentSelectedComment === comment) {\n        this.documentHelper.currentSelectedComment = undefined;\n      }\n    }\n  };\n  /**\n   * @param {CommentElementBox} comment - Specified the comment element box\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.resolveComment = function (comment) {\n    if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n      return;\n    }\n    var eventArgs = {\n      author: comment.author,\n      cancel: false,\n      type: 'Resolve'\n    };\n    this.owner.trigger(beforeCommentActionEvent, eventArgs);\n    if (eventArgs.cancel && eventArgs.type === 'Resolve') {\n      return;\n    }\n    this.initHistory('ResolveComment');\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.removedNodes.push(comment);\n    }\n    this.resolveOrReopenComment(comment, true);\n  };\n  /**\n   * @param {CommentElementBox} comment - Specified the comment element box\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.reopenComment = function (comment) {\n    if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n      return;\n    }\n    var eventArgs = {\n      author: comment.author,\n      cancel: false,\n      type: 'Reopen'\n    };\n    this.owner.trigger(beforeCommentActionEvent, eventArgs);\n    if (eventArgs.cancel && eventArgs.type === 'Reopen') {\n      return;\n    }\n    this.initHistory('ResolveComment');\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.removedNodes.push(comment);\n    }\n    this.resolveOrReopenComment(comment, false);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.resolveOrReopenComment = function (comment, resolve) {\n    comment.isResolved = resolve;\n    for (var i = 0; i < comment.replyComments.length; i++) {\n      comment.replyComments[i].isResolved = resolve;\n    }\n    if (this.owner.commentReviewPane) {\n      if (resolve) {\n        this.owner.commentReviewPane.resolveComment(comment);\n      } else {\n        this.owner.commentReviewPane.reopenComment(comment);\n      }\n    }\n    this.reLayout(this.selection, false, false);\n  };\n  /**\n   * @param {CommentElementBox} parentComment - Specified the parent comment\n   * @param {string} text - Specified the text.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.replyComment = function (parentComment, text, mentions) {\n    if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n      return;\n    }\n    var commentWidget = parentComment;\n    if (parentComment) {\n      this.initComplexHistory('InsertComment');\n      var currentCmtStart = commentWidget.commentStart;\n      var currentCmtEnd = commentWidget.commentEnd;\n      var replyCmtLength = commentWidget.replyComments.length;\n      var offset = currentCmtStart.line.getOffset(currentCmtStart, replyCmtLength + 1);\n      var startPosition = new TextPosition(this.documentHelper.owner);\n      startPosition.setPositionParagraph(currentCmtStart.line, offset);\n      var endOffset = currentCmtEnd.line.getOffset(currentCmtEnd, replyCmtLength + 1);\n      var endPosition = new TextPosition(this.documentHelper.owner);\n      endPosition.setPositionParagraph(currentCmtEnd.line, endOffset);\n      this.selection.start.setPositionInternal(startPosition);\n      this.selection.end.setPositionInternal(endPosition);\n      startPosition = this.selection.start;\n      endPosition = this.selection.end;\n      var position = new TextPosition(this.owner);\n      // Clones the end position.\n      position.setPositionInternal(endPosition);\n      var commentRangeStart = new CommentCharacterElementBox(0);\n      var commentRangeEnd = new CommentCharacterElementBox(1);\n      var isAtSameLine = startPosition.currentWidget === endPosition.currentWidget;\n      // Adds comment start at selection start position.\n      endPosition.setPositionInternal(startPosition);\n      var lineIndex = position.currentWidget.indexInOwner;\n      this.initInsertInline(commentRangeStart);\n      if (position.currentWidget.indexInOwner === -1) {\n        position.currentWidget = position.currentWidget.paragraph.childWidgets[lineIndex];\n      }\n      // Updates the cloned position, since comment start is added in the same paragraph.\n      if (isAtSameLine) {\n        position.setPositionParagraph(position.currentWidget, position.offset + commentRangeStart.length);\n      }\n      // Adds comment end and comment at selection end position.\n      startPosition.setPositionInternal(position);\n      endPosition.setPositionInternal(position);\n      this.initInsertInline(commentRangeEnd);\n      var replyComment = new CommentElementBox(HelperMethods.getUtcDate());\n      replyComment.author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n      replyComment.text = text ? text : '';\n      replyComment.mentions = mentions ? mentions : [];\n      replyComment.commentId = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n      replyComment.isReply = true;\n      commentWidget.replyComments.push(replyComment);\n      replyComment.ownerComment = commentWidget;\n      if (this.owner.editorHistoryModule) {\n        this.initHistory('InsertCommentWidget');\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(replyComment);\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start + CONTROL_CHARACTERS.Marker_End;\n      }\n      commentRangeStart.comment = replyComment;\n      commentRangeStart.commentId = replyComment.commentId;\n      commentRangeEnd.comment = replyComment;\n      commentRangeEnd.commentId = replyComment.commentId;\n      replyComment.commentStart = commentRangeStart;\n      replyComment.commentEnd = commentRangeEnd;\n      if (this.owner.commentReviewPane) {\n        this.owner.commentReviewPane.addReply(replyComment, false, true);\n      }\n      if (this.editorHistory) {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(replyComment);\n        this.editorHistory.updateHistory();\n      }\n      if (this.editorHistory) {\n        this.editorHistory.updateComplexHistory();\n      }\n      this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.reLayout(this.selection);\n      this.isSkipOperationsBuild = false;\n    }\n  };\n  Editor.prototype.removeInline = function (element) {\n    this.selection.start.setPositionParagraph(element.line, element.line.getOffset(element, 0));\n    this.selection.end.setPositionParagraph(this.selection.start.currentWidget, this.selection.start.offset + element.length);\n    this.initHistory('RemoveInline');\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.updateHistoryPosition(this.selection.start, true);\n    }\n    this.removeSelectedContents(this.documentHelper.selection);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.fireContentChange();\n  };\n  /**\n   * @param {CommentElementBox} commentWidget - Specifies the comment\n   * @param {boolean} isNewComment - Specifies is new comment\n   * @param {boolean} showComments - Specifies show comments\n   * @param {boolean} selectComment - Specified select comment\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.addCommentWidget = function (commentWidget, isNewComment, showComments, selectComment) {\n    if (this.documentHelper.comments.indexOf(commentWidget) === -1) {\n      var isInserted = false;\n      if (this.documentHelper.comments.length > 0) {\n        var currentStart = this.selection.getElementPosition(commentWidget.commentStart).startPosition;\n        for (var i = 0; i < this.documentHelper.comments.length; i++) {\n          /* eslint-disable-next-line max-len */\n          var paraIndex = this.selection.getElementPosition(this.documentHelper.comments[i].commentStart).startPosition;\n          if (currentStart.isExistBefore(paraIndex)) {\n            isInserted = true;\n            this.documentHelper.comments.splice(i, 0, commentWidget);\n            break;\n          }\n        }\n      }\n      if (!isInserted) {\n        this.documentHelper.comments.push(commentWidget);\n      }\n      if (this.owner.commentReviewPane) {\n        this.owner.showComments = showComments;\n        this.owner.commentReviewPane.selectedTab = 0;\n        this.owner.commentReviewPane.addComment(commentWidget, isNewComment, selectComment);\n        this.owner.commentReviewPane.reviewTab.selectedItem = 0;\n        if (selectComment) {\n          this.owner.selectionModule.selectComment(commentWidget);\n        }\n      }\n    }\n  };\n  /**\n   * @param {CommentElementBox} comment - Specifies comment element box\n   * @param {string} hierarchicalIndex - Specifies the hierachical index.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.addReplyComment = function (comment, hierarchicalIndex) {\n    var index = hierarchicalIndex.split(';');\n    var ownerComment = this.documentHelper.comments[parseInt(index[1], 10)];\n    if (index[2] !== '') {\n      ownerComment.replyComments.splice(parseInt(index[2], 10), 0, comment);\n      comment.ownerComment = ownerComment;\n    }\n    if (this.owner.commentReviewPane) {\n      this.owner.showComments = true;\n      this.owner.commentReviewPane.addReply(comment, false, true);\n      this.owner.selectionModule.selectComment(comment);\n    }\n  };\n  /**\n   * @param {string} password - Specifies the password\n   * @param {string} protectionType - Specifies the protection type\n   * @param {boolean} isAsync - specifies whether the send method is synchronous or asynchronous\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.addProtection = function (password, protectionType, isAsync) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          isAsync = isNullOrUndefined(isAsync) ? true : isAsync;\n          if (password === '') {\n            _this.protectDocument(protectionType);\n            resolve();\n          } else {\n            _this.currentProtectionType = protectionType;\n            var enforceProtectionHandler = new XmlHttpRequestHandler();\n            var passwordBase64 = _this.base64.encodeString(password);\n            /* eslint-disable @typescript-eslint/no-explicit-any */\n            var formObject = {\n              passwordBase64: passwordBase64,\n              saltBase64: '',\n              spinCount: 100000\n            };\n            /* eslint-enable @typescript-eslint/no-explicit-any */\n            var url = _this.owner.serviceUrl + _this.owner.serverActionSettings.restrictEditing;\n            enforceProtectionHandler.url = url;\n            enforceProtectionHandler.contentType = 'application/json;charset=UTF-8';\n            enforceProtectionHandler.onSuccess = function (result) {\n              _this.enforceProtectionInternal(result);\n              resolve();\n            };\n            enforceProtectionHandler.onFailure = function (result) {\n              _this.protectionFailureHandler(result);\n              reject();\n            };\n            enforceProtectionHandler.onError = function (result) {\n              _this.protectionFailureHandler(result);\n              reject();\n            };\n            enforceProtectionHandler.customHeaders = _this.owner.headers;\n            var httprequestEventArgs = {\n              serverActionType: 'RestrictEditing',\n              headers: _this.owner.headers,\n              timeout: 0,\n              cancel: false,\n              withCredentials: false\n            };\n            _this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n            if (httprequestEventArgs.cancel) {\n              if (_this.documentHelper.dialog.visible) {\n                _this.documentHelper.dialog.hide();\n              }\n            } else {\n              enforceProtectionHandler.send(formObject, httprequestEventArgs, isAsync);\n            }\n          }\n        })];\n      });\n    });\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.protectionFailureHandler = function (result) {\n    var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n    localeValue.setLocale(this.documentHelper.owner.locale);\n    if (result.name === 'onError') {\n      DialogUtility.alert(localeValue.getConstant('Error in establishing connection with web server'));\n    } else {\n      this.owner.fireServiceFailure(result);\n      console.error(result.statusText);\n    }\n  };\n  Editor.prototype.enforceProtectionInternal = function (result) {\n    var data = JSON.parse(result.data);\n    this.enforceProtectionAssign(data[0], data[1], this.currentProtectionType);\n    this.owner.showHideRulers();\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.enforceProtectionAssign = function (saltValue, hashValue, protectionType) {\n    this.documentHelper.saltValue = saltValue;\n    this.documentHelper.hashValue = hashValue;\n    this.protectDocument(protectionType);\n  };\n  Editor.prototype.toggleTrackChangesProtection = function (enabled) {\n    this.viewer.owner.enableTrackChanges = enabled;\n    var eventArgs = {\n      isTrackChangesEnabled: enabled\n    };\n    this.owner.trigger(trackChangeEvent, eventArgs);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.protectDocument = function (protectionType) {\n    this.documentHelper.owner.getSettingData(\"protection\", null, this.documentHelper.hashValue, this.documentHelper.saltValue, protectionType);\n    this.protect(protectionType);\n    var restrictPane = this.documentHelper.restrictEditingPane.restrictPane;\n    if (restrictPane && restrictPane.style.display === 'block') {\n      this.documentHelper.restrictEditingPane.showStopProtectionPane(true);\n      this.documentHelper.restrictEditingPane.loadPaneValue();\n      this.documentHelper.dialog.hide();\n    }\n    this.owner.notify(protectionTypeChangeEvent, {});\n    if (protectionType === 'RevisionsOnly') {\n      this.toggleTrackChangesProtection(true);\n    }\n    this.owner.trackChangesPane.enableDisableButton(false);\n  };\n  /**\n   * Stops the document protection.\n   *\n   * @param {string} password Specify the password to stop protection.\n   * @returns {void}\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.stopProtection = function (password) {\n    if (this.documentHelper.isDocumentProtected) {\n      if (!isNullOrUndefined(this.documentHelper.saltValue) && this.documentHelper.saltValue === '' && !isNullOrUndefined(this.documentHelper.hashValue) && this.documentHelper.hashValue === '' && !isNullOrUndefined(password) && password === '') {\n        this.unProtectDocument();\n        return;\n      }\n      var unProtectDocumentHandler = new XmlHttpRequestHandler();\n      var passwordBase64 = this.base64.encodeString(password);\n      var formObject = {\n        passwordBase64: passwordBase64,\n        saltBase64: this.documentHelper.saltValue,\n        spinCount: 100000\n      };\n      unProtectDocumentHandler.url = this.owner.serviceUrl + this.owner.serverActionSettings.restrictEditing;\n      unProtectDocumentHandler.contentType = 'application/json;charset=UTF-8';\n      unProtectDocumentHandler.customHeaders = this.owner.headers;\n      unProtectDocumentHandler.onSuccess = this.onUnProtectionSuccess.bind(this);\n      unProtectDocumentHandler.onFailure = this.protectionFailureHandler.bind(this);\n      unProtectDocumentHandler.onError = this.protectionFailureHandler.bind(this);\n      var httprequestEventArgs = {\n        serverActionType: 'RestrictEditing',\n        headers: this.owner.headers,\n        timeout: 0,\n        cancel: false,\n        withCredentials: false\n      };\n      this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n      if (httprequestEventArgs.cancel) {\n        if (this.documentHelper.dialog.visible) {\n          this.documentHelper.dialog.hide();\n        }\n      } else {\n        unProtectDocumentHandler.send(formObject, httprequestEventArgs, false);\n      }\n      if (!this.owner.enableTrackChanges) {\n        this.toggleTrackChangesProtection(false);\n      }\n    }\n  };\n  /**\n   * Stops the document protection.\n   *\n   * @param {string} password Specify the password to stop protection.\n   * @returns {Promise} Returns a Promise which is resolved when protection is stopped, or rejected if for any reason protection cannot be stopped.\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.stopProtectionAsync = function (password) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          if (_this.documentHelper.isDocumentProtected) {\n            if (!isNullOrUndefined(_this.documentHelper.saltValue) && _this.documentHelper.saltValue === '' && !isNullOrUndefined(_this.documentHelper.hashValue) && _this.documentHelper.hashValue === '' && !isNullOrUndefined(password) && password === '') {\n              _this.unProtectDocument();\n              resolve();\n              return;\n            }\n            var unProtectDocumentHandler = new XmlHttpRequestHandler();\n            var passwordBase64 = _this.base64.encodeString(password);\n            var formObject = {\n              passwordBase64: passwordBase64,\n              saltBase64: _this.documentHelper.saltValue,\n              spinCount: 100000\n            };\n            unProtectDocumentHandler.url = _this.owner.serviceUrl + _this.owner.serverActionSettings.restrictEditing;\n            unProtectDocumentHandler.contentType = 'application/json;charset=UTF-8';\n            unProtectDocumentHandler.customHeaders = _this.owner.headers;\n            unProtectDocumentHandler.onSuccess = function (result) {\n              _this.onUnProtectionSuccess(result);\n              resolve();\n            };\n            unProtectDocumentHandler.onFailure = function (result) {\n              _this.protectionFailureHandler(result);\n              reject();\n            };\n            unProtectDocumentHandler.onError = function (result) {\n              _this.protectionFailureHandler(result);\n              reject();\n            };\n            var httprequestEventArgs = {\n              serverActionType: 'RestrictEditing',\n              headers: _this.owner.headers,\n              timeout: 0,\n              cancel: false,\n              withCredentials: false\n            };\n            _this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n            if (httprequestEventArgs.cancel) {\n              if (_this.documentHelper.dialog.visible) {\n                _this.documentHelper.dialog.hide();\n              }\n            } else {\n              unProtectDocumentHandler.send(formObject, httprequestEventArgs);\n            }\n            if (!_this.owner.enableTrackChanges) {\n              _this.toggleTrackChangesProtection(false);\n            }\n          }\n        })];\n      });\n    });\n  };\n  Editor.prototype.onUnProtectionSuccess = function (result) {\n    var encodeString = JSON.parse(result.data);\n    this.validateHashValue(encodeString[1]);\n    this.owner.showHideRulers();\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.validateHashValue = function (currentHashValue) {\n    this.currentHashValue = currentHashValue;\n    var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n    localeValue.setLocale(this.documentHelper.owner.locale);\n    var decodeUserHashValue = this.base64.decodeString(currentHashValue);\n    var documentHashValue = this.documentHelper.hashValue;\n    var defaultHashValue = this.base64.decodeString(documentHashValue);\n    var stopProtection = true;\n    if (decodeUserHashValue.length === defaultHashValue.length) {\n      for (var i = 0; i < decodeUserHashValue.length; i++) {\n        if (decodeUserHashValue[i] !== defaultHashValue[i]) {\n          stopProtection = false;\n          break;\n        }\n      }\n    } else {\n      stopProtection = false;\n    }\n    if (stopProtection) {\n      this.unProtectDocument();\n    } else {\n      DialogUtility.alert(localeValue.getConstant('The password is incorrect'));\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.unProtectDocument = function () {\n    this.documentHelper.owner.getSettingData('protection', false, this.currentHashValue);\n    this.currentHashValue = null;\n    var previousProtectionType = this.documentHelper.protectionType;\n    this.documentHelper.isDocumentProtected = false;\n    this.documentHelper.restrictFormatting = false;\n    this.documentHelper.protectionType = 'NoProtection';\n    this.documentHelper.saltValue = '';\n    this.documentHelper.hashValue = '';\n    this.documentHelper.selection.highlightEditRegion();\n    var restrictPane = this.documentHelper.restrictEditingPane.restrictPane;\n    if (restrictPane && restrictPane.style.display === 'block') {\n      this.documentHelper.restrictEditingPane.showStopProtectionPane(false);\n    }\n    if (previousProtectionType === 'RevisionsOnly' && !this.owner.enableTrackChanges) {\n      this.toggleTrackChangesProtection(false);\n    }\n    this.owner.trackChangesPane.enableDisableButton(true);\n    if (!isNullOrUndefined(this.editorHistory)) {\n      this.owner.editorHistoryModule.clearHistory();\n    }\n    this.owner.notify(protectionTypeChangeEvent, {});\n    this.documentHelper.dialog.hide();\n    this.owner.showHideRulers();\n  };\n  /**\n   * Notify content change event\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.fireContentChange = function () {\n    this.owner.documentHelper.render.commentMarkDictionary.clear();\n    if (this.selection.isHighlightEditRegion) {\n      if (this.owner.enableLockAndEdit) {\n        this.owner.collaborativeEditingModule.updateLockRegion();\n      } else {\n        this.selection.onHighlight();\n      }\n    }\n    this.selection.highlightFormFields();\n    if (!this.isPaste) {\n      this.copiedContent = undefined;\n      this.copiedTextContent = '';\n      this.previousSectionFormat = undefined;\n      this.previousParaFormat = undefined;\n      this.previousCharFormat = undefined;\n      this.selection.isViewPasteOptions = false;\n      if (this.isPasteListUpdated) {\n        this.isPasteListUpdated = false;\n      }\n      this.selection.showHidePasteOptions(undefined, undefined);\n    }\n    if (this.documentHelper.owner.isLayoutEnabled && !this.documentHelper.owner.editorModule.isUserInsert && !this.documentHelper.owner.isShiftingEnabled && !this.isSkipOperationsBuild && !this.isRemoteAction) {\n      this.documentHelper.owner.fireContentChange();\n    }\n    if (this.owner.isSpellCheck && !isNullOrUndefined(this.selection.editPosition)) {\n      this.triggerPageSpellCheck = false;\n    }\n  };\n  /**\n   * Update physical location for text position\n   *\n   * @param {boolean} isSelectionChanged - Specifies the selection change\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateSelectionTextPosition = function (isSelectionChanged) {\n    this.getOffsetValue(this.selection);\n    this.selection.start.updatePhysicalPosition(true);\n    if (this.selection.isEmpty) {\n      this.selection.end.setPositionInternal(this.selection.start);\n    } else {\n      this.selection.end.updatePhysicalPosition(true);\n    }\n    this.selection.upDownSelectionLength = this.selection.end.location.x;\n    this.selection.fireSelectionChanged(isSelectionChanged);\n  };\n  /**\n   * Predict text\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.predictText = function () {\n    this.documentHelper.suffix = '';\n    if (this.selection.start.paragraph.isEmpty() || this.selection.start.offset === 0 && this.selection.start.currentWidget.isFirstLine() || this.selection.end.offset === 0 && this.selection.end.currentWidget.isFirstLine()) {\n      this.documentHelper.prefix = '';\n    } else {\n      this.getPrefixAndSuffix();\n    }\n    this.documentHelper.prefix = '@' + String.fromCharCode(160) + this.documentHelper.prefix; // &nbsp;\n    this.documentHelper.editableDiv.innerText = this.documentHelper.prefix;\n    this.documentHelper.selection.setEditableDivCaretPosition(this.documentHelper.prefix.length);\n  };\n  /* eslint-disable  */\n  Editor.prototype.getPrefixAndSuffix = function () {\n    //let viewer: LayoutViewer = this.owner.viewer;\n    var editor = this.owner;\n    var documentHelper = editor.documentHelper;\n    if (this.selection.text !== '') {\n      documentHelper.prefix = '';\n      return;\n    } else {\n      var startIndex = 0;\n      var inlineInfo = this.selection.start.currentWidget.getInline(this.selection.start.offset, startIndex);\n      var inline = inlineInfo.element;\n      startIndex = inlineInfo.index;\n      if (inline !== undefined) {\n        var boxInfo = this.selection.getElementBoxInternal(inline, startIndex);\n        var box = boxInfo.element;\n        startIndex = boxInfo.index;\n        var spaceIndex = 0;\n        if (!isNullOrUndefined(box)) {\n          var prefixAdded = false;\n          if (box instanceof TextElementBox && startIndex > 0 && box.line.isFirstLine()) {\n            documentHelper.prefix = '';\n          }\n          if (!(inline instanceof TextElementBox)) {\n            inline = this.selection.getPreviousTextElement(inline);\n          }\n          /* eslint-disable no-cond-assign */\n          while ((spaceIndex = documentHelper.prefix.lastIndexOf(' ')) < 0 && inline instanceof TextElementBox) {\n            if (inline.previousNode instanceof TextElementBox && documentHelper.prefix.indexOf(' ') === -1) {\n              if (!prefixAdded) {\n                documentHelper.prefix = inline.text.substring(0, startIndex);\n                prefixAdded = true;\n              } else {\n                documentHelper.prefix = inline.text + documentHelper.prefix;\n              }\n              inline = inline.previousNode;\n              // If the line has no elements then break the loop to avoid the exception.\n              if (inline instanceof ListTextElementBox) {\n                break;\n              }\n              if (!(inline instanceof TextElementBox)) {\n                inline = this.selection.getPreviousTextElement(inline);\n              }\n            } else if (!(inline.previousNode instanceof TextElementBox)) {\n              if (!prefixAdded) {\n                documentHelper.prefix = inline.text.substring(0, startIndex);\n                prefixAdded = true;\n              } else {\n                documentHelper.prefix = inline.text + documentHelper.prefix;\n              }\n              break;\n            }\n          }\n          if (!(documentHelper.prefix.length > 1 && documentHelper.prefix[documentHelper.prefix.length - 1] === ' ' && documentHelper.prefix[documentHelper.prefix.length - 2] === '.')) {\n            spaceIndex = documentHelper.prefix.lastIndexOf(' ');\n          } else {\n            spaceIndex = -1;\n            documentHelper.prefix = '';\n          }\n          documentHelper.prefix = spaceIndex < 0 ? documentHelper.prefix : documentHelper.prefix.substring(spaceIndex);\n          if (documentHelper.prefix.indexOf(' ') === 0 && documentHelper.prefix.length >= 1) {\n            documentHelper.prefix = documentHelper.prefix.substring(1);\n          }\n          // suffix text prediction\n          var endIndex = 0;\n          var endInlineInfo = this.selection.end.currentWidget.getInline(this.selection.end.offset, endIndex);\n          var endInline = endInlineInfo.element;\n          endIndex = endInlineInfo.index;\n          boxInfo = this.selection.getElementBoxInternal(endInline, endIndex);\n          box = boxInfo.element;\n          endIndex = boxInfo.index;\n          if (box) {\n            var suffixAdded = false;\n            if (box instanceof TextElementBox && endIndex < box.length) {\n              documentHelper.suffix = '';\n            }\n            // boxIndex = renderedElements.get(endInline).indexOf(box);\n            while ((spaceIndex = documentHelper.suffix.indexOf(' ')) < 0 && endInline instanceof TextElementBox) {\n              if (endInline.nextNode instanceof TextElementBox && documentHelper.suffix.indexOf(' ') === -1) {\n                if (!suffixAdded) {\n                  documentHelper.suffix = box.text.substring(endIndex);\n                  suffixAdded = true;\n                } else {\n                  documentHelper.suffix = documentHelper.suffix + endInline.text;\n                }\n                endInline = endInline.nextNode;\n              } else if (!(endInline.nextNode instanceof TextElementBox)) {\n                if (!suffixAdded) {\n                  documentHelper.suffix = box.text.substring(endIndex);\n                  suffixAdded = true;\n                } else {\n                  documentHelper.suffix = documentHelper.suffix + endInline.text;\n                }\n                break;\n              }\n            }\n            spaceIndex = documentHelper.suffix.indexOf(' ');\n            documentHelper.suffix = spaceIndex < 0 ? documentHelper.suffix : documentHelper.suffix.substring(0, spaceIndex);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * key action\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable  */\n  Editor.prototype.onKeyDownInternal = function (event, ctrl, shift, alt) {\n    var key = event.which || event.keyCode;\n    this.owner.focusIn();\n    if (ctrl && !shift && !alt) {\n      this.documentHelper.isControlPressed = true;\n      switch (key) {\n        case 8:\n          event.preventDefault();\n          this.handleCtrlBackKey();\n          break;\n        case 46:\n          event.preventDefault();\n          this.handleCtrlDelete();\n          break;\n        case 9:\n          event.preventDefault();\n          if (this.owner.acceptTab) {\n            this.selection.handleTabKey(false, false);\n          }\n          break;\n        case 13:\n          event.preventDefault();\n          this.insertPageBreak();\n          break;\n        case 48:\n          event.preventDefault();\n          var value = 0;\n          var beforeSpacing = this.documentHelper.selection.start.paragraph.paragraphFormat.beforeSpacing;\n          if (beforeSpacing > 12) {\n            value = 12;\n          } else if (beforeSpacing > 0 && beforeSpacing <= 12) {\n            value = 0;\n          } else if (beforeSpacing === 0) {\n            value = 12;\n          }\n          this.onApplyParagraphFormat('beforeSpacing', value, true, false);\n          break;\n        case 49:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyParagraphFormat('lineSpacing', 1, false, false);\n          }\n          break;\n        case 50:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyParagraphFormat('lineSpacing', 2, false, false);\n          }\n          break;\n        case 53:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyParagraphFormat('lineSpacing', 1.5, false, false);\n          }\n          break;\n        case 66:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleBold();\n          }\n          break;\n        case 68:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode && this.owner.fontDialogModule) {\n            this.owner.fontDialogModule.showFontDialog();\n          }\n          break;\n        case 69:\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleTextAlignment('Center');\n          }\n          event.preventDefault();\n          break;\n        case 72:\n          event.preventDefault();\n          if (!this.owner.isReadOnly && this.owner.optionsPaneModule) {\n            this.owner.optionsPaneModule.isReplace = true;\n            this.owner.documentEditorSettings.showNavigationPane = true;\n            this.owner.optionsPaneModule.showHideOptionsPane(true);\n          }\n          break;\n        case 73:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleItalic();\n          }\n          break;\n        case 74:\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleTextAlignment('Justify');\n          }\n          event.preventDefault();\n          break;\n        case 75:\n          event.preventDefault();\n          if (this.owner.hyperlinkDialogModule && !this.owner.isReadOnlyMode) {\n            this.owner.hyperlinkDialogModule.show();\n          }\n          break;\n        case 76:\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleTextAlignment('Left');\n          }\n          event.preventDefault();\n          break;\n        case 77:\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.owner.selectionModule.increaseIndent();\n          }\n          event.preventDefault();\n          break;\n        case 78:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            this.owner.openBlank();\n          }\n          break;\n        case 82:\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleTextAlignment('Right');\n          }\n          event.preventDefault();\n          break;\n        case 85:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.owner.selectionModule.toggleUnderline('Single');\n          }\n          break;\n        case 88:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            this.owner.editorModule.cut();\n          }\n          break;\n        case 89:\n          if (this.owner.enableEditorHistory) {\n            this.editorHistory.redo();\n            event.preventDefault();\n          }\n          break;\n        case 90:\n          if (this.owner.enableEditorHistory) {\n            this.editorHistory.undo();\n            event.preventDefault();\n          }\n          break;\n        case 219:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyCharacterFormat('fontSize', 'decrement', true);\n          }\n          break;\n        case 221:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyCharacterFormat('fontSize', 'increment', true);\n          }\n          break;\n        case 187:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.toggleBaselineAlignment('Subscript');\n          }\n          break;\n      }\n    } else if (shift && !ctrl && !alt) {\n      switch (key) {\n        case 9:\n          if (this.owner.acceptTab) {\n            event.preventDefault();\n            this.selection.handleTabKey(false, true);\n          } else {\n            this.documentHelper.editableDiv.blur();\n          }\n          break;\n        case 13:\n          this.handleShiftEnter();\n          event.preventDefault();\n          break;\n        case 114:\n          event.preventDefault();\n          this.changeCase(this.toggleChangeCase());\n          break;\n      }\n    } else if (shift && ctrl && !alt) {\n      switch (key) {\n        case 13:\n          if (!this.owner.isReadOnlyMode) {\n            event.preventDefault();\n            this.insertColumnBreak();\n          }\n          break;\n        case 68:\n          if (!this.owner.isReadOnlyMode) {\n            this.owner.selectionModule.toggleUnderline('Double');\n          }\n          break;\n        case 77:\n          if (!this.owner.isReadOnlyMode) {\n            this.owner.selectionModule.decreaseIndent();\n          }\n          event.preventDefault();\n          break;\n        case 188:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            this.onApplyCharacterFormat('fontSize', 'decrement', true);\n          }\n          break;\n        case 190:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            this.onApplyCharacterFormat('fontSize', 'increment', true);\n          }\n          break;\n        case 187:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            this.toggleBaselineAlignment('Superscript');\n          }\n          break;\n        case 69:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode) {\n            var eventArgs = {\n              isTrackChangesEnabled: !this.owner.enableTrackChanges\n            };\n            this.owner.trigger(trackChangeEvent, eventArgs);\n          }\n      }\n    } else if (!shift && ctrl && alt) {\n      switch (key) {\n        case 72:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n            this.toggleHighlightColor();\n          }\n          break;\n        case 70:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n            this.insertFootnote();\n          }\n          break;\n        case 68:\n          event.preventDefault();\n          if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n            this.insertEndnote();\n          }\n          break;\n      }\n    } else {\n      switch (key) {\n        case 8:\n          event.preventDefault();\n          this.handleBackKey();\n          break;\n        case 9:\n          if (this.owner.acceptTab) {\n            event.preventDefault();\n            this.selection.handleTabKey(true, false);\n          } else {\n            this.documentHelper.editableDiv.blur();\n          }\n          break;\n        case 13:\n          event.preventDefault();\n          if (this.owner.isSpellCheck) {\n            this.documentHelper.triggerSpellCheck = true;\n          }\n          this.handleEnterKey();\n          if (this.owner.isSpellCheck) {\n            this.documentHelper.triggerSpellCheck = false;\n          }\n          break;\n        case 27:\n          event.preventDefault();\n          if (!this.isPaste) {\n            this.copiedContent = undefined;\n            this.copiedTextContent = '';\n            this.previousParaFormat = undefined;\n            this.previousCharFormat = undefined;\n            this.previousSectionFormat = undefined;\n            this.selection.isViewPasteOptions = false;\n            if (this.isPasteListUpdated) {\n              this.isPasteListUpdated = false;\n            }\n            this.selection.showHidePasteOptions(undefined, undefined);\n          }\n          break;\n        case 46:\n          this.handleDelete();\n          event.preventDefault();\n          break;\n        case 32:\n          this.selection.handleSpaceBarKey();\n          break;\n        case 120:\n          var textPosition = this.selection.getDocumentEnd();\n          textPosition.offset = this.selection.getDocumentEnd().offset + 1;\n          if (this.selection.start.isAtSamePosition(this.selection.getDocumentStart()) && this.selection.end.isAtSamePosition(textPosition)) {\n            this.owner.updateFields();\n          } else {\n            this.selection.updateRefField();\n          }\n          break;\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleShiftEnter = function () {\n    if (!this.owner.isReadOnlyMode) {\n      this.handleTextInput('\\v');\n    }\n    this.selection.checkForCursorVisibility();\n  };\n  /**\n   * Handles back key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleBackKey = function () {\n    if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n      this.owner.editorModule.onBackSpace();\n    }\n    this.selection.checkForCursorVisibility();\n  };\n  /**\n   * Handles delete\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleDelete = function () {\n    if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n      this.owner.editorModule.delete();\n    }\n    this.selection.checkForCursorVisibility();\n  };\n  /**\n   * Handles enter key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleEnterKey = function () {\n    if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n      if (Browser.isDevice) {\n        this.documentHelper.isCompositionStart = false;\n      }\n      this.owner.editorModule.onEnter();\n    }\n    this.selection.checkForCursorVisibility();\n  };\n  /**\n   * Handles Control back key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleCtrlBackKey = function () {\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      if (!this.selection.isForward) {\n        start = end;\n      }\n      if (this.selection.isEmpty) {\n        this.selection.handleControlShiftLeftKey();\n        this.owner.editorModule.onBackSpace();\n        /* eslint-disable max-len */\n      } else if ((isNullOrUndefined(start.paragraph.previousRenderedWidget) || start.paragraph.previousRenderedWidget instanceof TableWidget) && start.offset === 0) {\n        return;\n      } else {\n        this.selection.handleLeftKey();\n        this.selection.handleControlShiftLeftKey();\n        this.owner.editorModule.onBackSpace();\n      }\n    }\n  };\n  /**\n   * Handles Ctrl delete\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleCtrlDelete = function () {\n    if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n      if (!this.selection.isEmpty) {\n        this.selection.handleLeftKey();\n        this.selection.handleControlShiftRightKey();\n        var selectedText = this.selection.text;\n        var checkSpace = HelperMethods.endsWith(selectedText);\n        if (checkSpace) {\n          this.selection.handleShiftLeftKey();\n        }\n        this.owner.editorModule.delete();\n      } else {\n        this.selection.handleControlShiftRightKey();\n        this.owner.editorModule.delete();\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleTextInput = function (text) {\n    var _this = this;\n    if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n      if (this.animationTimer) {\n        clearTimeout(this.animationTimer);\n      }\n      classList(this.selection.caret, [], ['e-de-cursor-animation']);\n      this.owner.editorModule.insertText(text);\n      /* eslint-disable @typescript-eslint/indent */\n      this.animationTimer = setTimeout(function () {\n        if (_this.animationTimer) {\n          clearTimeout(_this.animationTimer);\n        }\n        if (_this.selection && _this.selection.caret) {\n          classList(_this.selection.caret, ['e-de-cursor-animation'], []);\n        }\n      }, 600);\n    }\n    this.selection.checkForCursorVisibility();\n  };\n  /**\n   * Copies to format.\n   * @param {WCharacterFormat} format\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.copyInsertFormat = function (format, copy) {\n    var insertFormat = new WCharacterFormat();\n    var sFormat = this.selection.characterFormat;\n    if (copy) {\n      insertFormat.copyFormat(format);\n    }\n    if (!isNullOrUndefined(sFormat.bidi) && format.bidi !== sFormat.bidi) {\n      insertFormat.bidi = sFormat.bidi;\n    }\n    if (!isNullOrUndefined(sFormat.bold) && format.bold !== sFormat.bold) {\n      insertFormat.bold = sFormat.bold;\n    }\n    if (!isNullOrUndefined(sFormat.italic) && format.italic !== sFormat.italic) {\n      insertFormat.italic = sFormat.italic;\n    }\n    if (sFormat.fontSize > 0 && format.fontSize !== sFormat.fontSize) {\n      insertFormat.fontSize = sFormat.fontSize;\n    }\n    if (!isNullOrUndefined(sFormat.fontFamily) && format.fontFamily !== sFormat.fontFamily) {\n      insertFormat.fontFamily = sFormat.fontFamily;\n    }\n    if (!isNullOrUndefined(sFormat.highlightColor) && format.highlightColor !== sFormat.highlightColor) {\n      insertFormat.highlightColor = sFormat.highlightColor;\n    }\n    if (!isNullOrUndefined(sFormat.baselineAlignment) && format.baselineAlignment !== sFormat.baselineAlignment) {\n      insertFormat.baselineAlignment = sFormat.baselineAlignment;\n    }\n    if (!isNullOrUndefined(sFormat.fontColor) && format.fontColor !== sFormat.fontColor) {\n      insertFormat.fontColor = sFormat.fontColor;\n    }\n    if (!isNullOrUndefined(sFormat.underline) && format.underline !== sFormat.underline) {\n      insertFormat.underline = sFormat.underline;\n    }\n    if (!isNullOrUndefined(sFormat.strikethrough) && format.strikethrough !== sFormat.strikethrough) {\n      insertFormat.strikethrough = sFormat.strikethrough;\n    }\n    return insertFormat;\n  };\n  Editor.prototype.getResultContentControlText = function (element) {\n    var ele = element.nextNode;\n    var text = '';\n    while (!(ele instanceof ContentControl)) {\n      if (ele instanceof TextElementBox) {\n        text += ele.text;\n      }\n      if (isNullOrUndefined(ele)) {\n        break;\n      }\n      if (isNullOrUndefined(ele.nextNode)) {\n        if (ele.paragraph.nextRenderedWidget) {\n          ele = ele.paragraph.nextRenderedWidget.firstChild.children[0];\n        } else {\n          break;\n        }\n      } else {\n        ele = ele.nextNode;\n      }\n    }\n    return text;\n  };\n  Editor.prototype.updateXmlMappedContentControl = function () {\n    if (this.isXmlMapped) {\n      var startInlineEle = this.getContentControl();\n      if (startInlineEle && startInlineEle.contentControlProperties) {\n        this.updateCustomXml(startInlineEle.contentControlProperties.xmlMapping.storeItemId, startInlineEle.contentControlProperties.xmlMapping.xPath, this.getResultContentControlText(startInlineEle));\n      }\n    }\n  };\n  Editor.prototype.updateCustomXml = function (itemId, xPath, text) {\n    if (this.documentHelper.customXmlData.containsKey(itemId)) {\n      var xml = this.documentHelper.customXmlData.get(itemId);\n      var parser = new DOMParser();\n      var xmlDoc = parser.parseFromString(xml, 'text/xml');\n      var lastText = xPath.substring(xPath.lastIndexOf('/') + 1);\n      lastText = lastText.split('[')[0];\n      lastText = lastText.substring(lastText.lastIndexOf(':') + 1);\n      lastText = lastText.substring(lastText.lastIndexOf('@') + 1);\n      var htmlCollec = xmlDoc.getElementsByTagName(lastText);\n      if (htmlCollec.length > 0) {\n        htmlCollec[0].childNodes[0].nodeValue = text;\n      } else if (xmlDoc.documentElement.attributes.length > 0 && xmlDoc.documentElement.attributes.getNamedItem(lastText) !== null) {\n        xmlDoc.documentElement.attributes.getNamedItem(lastText).value = text;\n      } else {\n        return;\n      }\n      var newXml = new XMLSerializer();\n      var xmlString = newXml.serializeToString(xmlDoc);\n      this.documentHelper.customXmlData.set(itemId, xmlString);\n    }\n  };\n  /**\n   * Inserts the specified text at cursor position\n   * @param {string} text Specify the text to insert.\n   */\n  Editor.prototype.insertText = function (text) {\n    if (isNullOrUndefined(text) || text === '' || this.owner.isReadOnly || this.documentHelper.protectionType === 'ReadOnly' && !this.selection.isSelectionInEditRegion() || this.documentHelper.protectionType === 'CommentsOnly' && this.owner.isReadOnly) {\n      return;\n    }\n    this.insertTextInternal(text, false);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable  */\n  Editor.prototype.insertTextInternal = function (text, isReplace, revisionType, allowLayout) {\n    if (text.indexOf('\\r') >= 0 || text.indexOf('\\n') >= 0) {\n      if (text === '\\r' || text === '\\n' || text === '\\r\\n') {\n        this.onEnter();\n      } else {\n        this.isInsertText = true;\n        this.pasteContents(text);\n        this.isInsertText = false;\n      }\n      return;\n    }\n    if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.selection.isInlineFormFillMode()) {\n      var inline = this.selection.currentFormField;\n      if (!inline.formFieldData.enabled) {\n        return;\n      }\n      var resultText = this.getFieldResultText(inline);\n      var rex = new RegExp(this.owner.documentHelper.textHelper.getEnSpaceCharacter(), 'gi');\n      if (resultText.length > 0 && resultText.replace(rex, '') === '') {\n        resultText = '';\n        this.selection.selectFieldInternal(inline);\n      }\n      var maxLength = inline.formFieldData.maxLength;\n      if (maxLength !== 0 && resultText.length >= maxLength) {\n        return;\n      }\n    }\n    if (isReplace) {\n      this.documentHelper.layout.isReplaceAll = !isNullOrUndefined(allowLayout) ? !allowLayout : false;\n    }\n    var selection = this.documentHelper.selection;\n    var insertPosition;\n    var isRemoved = true;\n    revisionType = this.owner.enableTrackChanges && isNullOrUndefined(revisionType) ? 'Insertion' : revisionType;\n    var commentStarts = this.checkAndRemoveComments();\n    this.isListTextSelected();\n    if (this.documentHelper.isBookmarkInserted && selection.bookmarks.length > 0) {\n      this.extendSelectionToBookmarkStart();\n    }\n    if (isNullOrUndefined(revisionType) || revisionType === 'Insertion') {\n      this.initHistory('Insert');\n      if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = text;\n        if (this.documentHelper.protectionType === 'FormFieldsOnly') {\n          var field = this.documentHelper.selection.getCurrentFormField();\n          if (field && field instanceof FieldElementBox && field.formFieldData && field.formFieldData instanceof DropDownFormField) {\n            this.editorHistory.currentBaseHistoryInfo.fieldBegin = field;\n            this.editorHistory.currentBaseHistoryInfo.dropDownIndex = field.formFieldData.selectedIndex;\n          }\n        }\n      }\n    }\n    var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n    var paraFormat = paragraphInfo.paragraph.paragraphFormat;\n    selection.editPosition = selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n    var bidi = selection.start.paragraph.paragraphFormat.bidi;\n    if (!selection.isEmpty && !selection.isImageSelected || this.documentHelper.isListTextSelected && selection.contextType === 'List') {\n      selection.isSkipLayouting = true;\n      selection.skipFormatRetrieval = true;\n      var endPosition = undefined;\n      var endParagraphInfo = undefined;\n      var endOffset = 0;\n      var paragraphLength = 0;\n      if (this.owner.enableTrackChanges) {\n        if (!this.selection.start.isExistBefore(this.selection.end)) {\n          endParagraphInfo = this.selection.getParagraphInfo(selection.start);\n          endPosition = this.selection.start.clone();\n        } else {\n          endParagraphInfo = this.selection.getParagraphInfo(selection.end);\n          endPosition = this.selection.end.clone();\n        }\n        paragraphLength = endParagraphInfo.paragraph.getLength();\n        endOffset = endParagraphInfo.offset;\n        this.skipReplace = true;\n      }\n      isRemoved = this.removeSelectedContents(selection);\n      this.skipReplace = false;\n      if (!isNullOrUndefined(endPosition) && this.owner.searchModule && this.owner.searchModule.isRepalceTracking) {\n        this.owner.searchModule.isRepalceTracking = false;\n        this.selection.start.setPositionInternal(this.selection.start);\n        this.selection.end.setPositionInternal(endPosition);\n      } else if (endOffset > 0 && endOffset <= paragraphLength) {\n        var updatedParagraphLength = endParagraphInfo.paragraph.getLength();\n        if (paragraphLength !== updatedParagraphLength) {\n          endOffset -= paragraphLength - updatedParagraphLength;\n        }\n        this.setPositionParagraph(endParagraphInfo.paragraph, endOffset, true);\n      }\n      selection.skipFormatRetrieval = false;\n      selection.isSkipLayouting = false;\n    } else if (selection.isEmpty && !this.documentHelper.isListTextSelected && !isReplace) {\n      this.documentHelper.isTextInput = true;\n    }\n    paragraphInfo = this.selection.getParagraphInfo(selection.start);\n    paragraphInfo.paragraph.paragraphFormat.copyFormat(paraFormat);\n    var isSpecialChars = this.documentHelper.textHelper.containsSpecialCharAlone(text);\n    if (isRemoved) {\n      selection.owner.isShiftingEnabled = true;\n      this.updateInsertPosition();\n      insertPosition = selection.start;\n      if (insertPosition.paragraph.isEmpty()) {\n        var span = new TextElementBox();\n        var insertFormat = this.copyInsertFormat(insertPosition.paragraph.characterFormat, true);\n        span.characterFormat.copyFormat(insertFormat);\n        span.text = text;\n        var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl || this.selection.characterFormat.bidi;\n        span.characterFormat.bidi = isBidi;\n        insertFormat.bidi = isBidi;\n        span.isRightToLeft = isBidi;\n        span.line = insertPosition.paragraph.childWidgets[0];\n        span.margin = new Margin(0, 0, 0, 0);\n        span.line.children.push(span);\n        this.setCharFormatForCollaborativeEditing(span.characterFormat);\n        if (this.owner.enableTrackChanges) {\n          if (span.paragraph.characterFormat.revisions.length > 0) {\n            var matchedRevisions = this.getMatchedRevisionsToCombine(span.paragraph.characterFormat.revisions, revisionType);\n            if (matchedRevisions.length > 0) {\n              this.mapMatchedRevisions(matchedRevisions, span.paragraph.characterFormat, span, true);\n            }\n          } else if (!this.checkToCombineRevisionWithPrevPara(span, revisionType)) {\n            this.insertRevision(span, revisionType);\n          }\n        }\n        if ((insertPosition.paragraph.paragraphFormat.textAlignment === 'Center' || insertPosition.paragraph.paragraphFormat.textAlignment === 'Right' || insertPosition.paragraph.paragraphFormat.textAlignment === 'Justify' && insertPosition.paragraph.paragraphFormat.bidi) && insertPosition.paragraph.paragraphFormat.listFormat.listId === -1) {\n          insertPosition.paragraph.x = insertPosition.paragraph.clientX;\n          insertPosition.paragraph.clientX = undefined;\n          if (insertPosition.paragraph.hasOwnProperty('absoluteXPosition')) {\n            delete insertPosition.paragraph['absoluteXPosition'];\n          }\n        }\n        if (span instanceof TextElementBox && span.text.length > 90) {\n          // Here, the text is split based on the maximum character length of 90.\n          HelperMethods.splitWordByMaxLength(span, span.line);\n        }\n        this.documentHelper.layout.reLayoutParagraph(insertPosition.paragraph, 0, 0);\n      } else {\n        var indexInInline = 0;\n        var inlineObj = insertPosition.currentWidget.getInline(insertPosition.offset, indexInInline, bidi, isReplace ? false : true, this.documentHelper.owner.isSpellCheck);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        inline.ischangeDetected = true;\n        if (inline instanceof TextElementBox && text !== ' ' && this.documentHelper.owner.isSpellCheck) {\n          this.owner.spellCheckerModule.removeErrorsFromCollection({\n            'element': inline,\n            'text': inline.text\n          });\n          if (!isReplace) {\n            inline.ignoreOnceItems = [];\n          }\n        }\n        if (inline.canTrigger && inline.text.length <= 1) {\n          inline.canTrigger = false;\n        }\n        // Todo: compare selection format\n        var insertFormat = this.copyInsertFormat(inline.characterFormat, true);\n        var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl || this.selection.characterFormat.bidi;\n        var insertLangId = this.documentHelper.textHelper.getRtlLanguage(text).id;\n        var inlineLangId = 0;\n        var isRtl = false;\n        var isInlineContainsSpecChar = false;\n        var isTextContainsSpecChar = false;\n        if (inline instanceof TextElementBox) {\n          inlineLangId = this.documentHelper.textHelper.getRtlLanguage(inline.text).id;\n          isRtl = this.documentHelper.textHelper.getRtlLanguage(inline.text).isRtl;\n          isTextContainsSpecChar = this.documentHelper.textHelper.containsSpecialCharAlone(text);\n        }\n        if (!isBidi && inline.characterFormat.bidi && (inlineLangId !== 0 || isTextContainsSpecChar && isRtl) || text === ' ' && this.selection.characterFormat.bidi) {\n          isBidi = true;\n        }\n        if (isBidi || !this.documentHelper.owner.isSpellCheck) {\n          insertFormat.bidi = isBidi;\n        }\n        this.setCharFormatForCollaborativeEditing(insertFormat);\n        if ((!this.documentHelper.owner.isSpellCheck || text !== ' ' && inline.text !== ' ') && insertFormat.isSameFormat(inline.characterFormat) && this.canInsertRevision(inline, revisionType) || text.trim() === '' && !isBidi && inline.characterFormat.bidi || isRtl && insertFormat.isSameFormat(inline.characterFormat) && isSpecialChars) {\n          this.insertTextInline(inline, selection, text, indexInInline);\n          this.setCharFormatForCollaborativeEditing(inline.characterFormat);\n        } else {\n          var tempSpan = new TextElementBox();\n          tempSpan.text = text;\n          tempSpan.line = inline.line;\n          tempSpan.isRightToLeft = isRtl;\n          tempSpan.characterFormat.copyFormat(insertFormat);\n          this.setCharFormatForCollaborativeEditing(tempSpan.characterFormat);\n          if (inline instanceof FootnoteElementBox) {\n            tempSpan.characterFormat.baselineAlignment = 'Normal';\n          }\n          var isRevisionCombined = false;\n          var insertIndex = inline.indexInOwner;\n          var prevRevisionCount = tempSpan.revisions.length;\n          if (indexInInline === inline.length) {\n            var index = -1;\n            index = insertIndex + 1;\n            if (this.owner.enableTrackChanges && !(inline instanceof BookmarkElementBox)) {\n              isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n              if (!isRevisionCombined && tempSpan.revisions.length === prevRevisionCount) {\n                if (inline.nextNode != undefined && inline.nextNode.revisions.length == 1) {\n                  isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType);\n                } else if (inline.paragraph.characterFormat.revisions.length == 1 && inline.paragraph.characterFormat.revisions[0].revisionType == 'Deletion') {\n                  isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType, inline.paragraph);\n                } else {\n                  isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType);\n                }\n              }\n            }\n            if (!isRevisionCombined) {\n              inline.line.children.splice(index, 0, tempSpan);\n              this.checkToCombineRevisionsinBlocks(tempSpan, prevRevisionCount === tempSpan.revisions.length, true, revisionType);\n            }\n          } else if (indexInInline === 0) {\n            if (this.owner.enableTrackChanges) {\n              isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n              if (!isRevisionCombined && tempSpan.revisions.length === 0) {\n                this.checkToMapRevisionWithPreviousNode(inline.previousNode, tempSpan, isBidi, revisionType);\n              }\n            }\n            if (!isRevisionCombined) {\n              inline.line.children.splice(insertIndex, 0, tempSpan);\n              this.checkToCombineRevisionsinBlocks(tempSpan, prevRevisionCount === tempSpan.revisions.length, true, revisionType);\n            }\n          } else {\n            if (inline instanceof TextElementBox) {\n              var splittedSpan = new TextElementBox();\n              splittedSpan.line = inline.line;\n              splittedSpan.characterFormat.copyFormat(inline.characterFormat);\n              // Commented because character format is not syncing correctly.\n              // this.setCharFormatForCollaborativeEditing(splittedSpan.characterFormat);\n              splittedSpan.text = inline.text.substring(indexInInline);\n              if (!this.owner.enableTrackChanges && !this.selection.isInField) {\n                this.updateRevisionForSpittedTextElement(inline, splittedSpan);\n              }\n              inline.text = inline.text.slice(0, indexInInline);\n              if (this.owner.enableTrackChanges) {\n                isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n                if (isRevisionCombined || tempSpan.revisions.length > prevRevisionCount) {\n                  this.copyElementRevision(inline, splittedSpan, true);\n                } else if (tempSpan.revisions.length === prevRevisionCount) {\n                  this.updateRevisionForSpittedTextElement(inline, splittedSpan);\n                  this.insertRevision(tempSpan, revisionType);\n                }\n              } else if (this.selection.isInField) {\n                this.copyElementRevision(inline, splittedSpan, false);\n                this.updateElementInFieldRevision(inline, tempSpan, inline.revisions, true);\n              }\n              if (this.owner.isSpellCheck) {\n                this.owner.spellCheckerModule.updateSplittedElementError(inline, splittedSpan);\n              }\n              inline.line.children.splice(insertIndex + 1, 0, splittedSpan);\n            }\n            if (!isRevisionCombined) {\n              inline.line.children.splice(insertIndex + 1, 0, tempSpan);\n            }\n          }\n          if (tempSpan instanceof TextElementBox && tempSpan.text.length > 90) {\n            // Here, the text is split based on the maximum character length of 90.\n            HelperMethods.splitWordByMaxLength(tempSpan, tempSpan.line);\n          }\n          if (!(!isNullOrUndefined(revisionType) && revisionType === 'Deletion' && !insertPosition.paragraph.isLayouted)) {\n            this.documentHelper.layout.reLayoutParagraph(insertPosition.paragraph, inline.line.indexInOwner, 0);\n          }\n        }\n      }\n      this.documentHelper.layout.allowLayout = true;\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + text.length, true);\n      this.updateEndPosition();\n      if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentHistoryInfo) && this.editorHistory.currentHistoryInfo.action === 'ListSelect' && this.documentHelper.isListTextSelected) {\n        this.editorHistory.updateHistory();\n        this.editorHistory.updateComplexHistory();\n      }\n      if ((isNullOrUndefined(revisionType) || revisionType === 'Insertion') && !this.isFieldOperation) {\n        this.reLayout(selection);\n      }\n      this.documentHelper.isTextInput = false;\n    }\n    this.updateXmlMappedContentControl();\n    if (!isReplace && isRemoved && (text === ' ' || text === '\\t' || text === '\\v')) {\n      var isList = false;\n      if (!(text === '\\v') && !this.isRemoteAction) {\n        isList = this.checkAndConvertList(selection, text === '\\t');\n      }\n      if (!isList) {\n        if (!isNullOrUndefined(selection.getHyperlinkField())) {\n          return;\n        }\n        //Checks if the previous text is URL, then it is auto formatted to hyperlink.\n        this.checkAndConvertToHyperlink(selection, false);\n      }\n    }\n    this.updateHistoryForComments(commentStarts);\n  };\n  Editor.prototype.extendSelectionToBookmarkStart = function () {\n    if (this.documentHelper.bookmarks.length > 0) {\n      var startPos = this.selection.start;\n      var endPos = this.selection.end;\n      if (!this.selection.isForward) {\n        startPos = this.selection.end;\n        endPos = this.selection.start;\n      }\n      var bookMark = void 0;\n      var selectionBookmark = this.selection.bookmarks;\n      for (var i = 0; i < selectionBookmark.length; i++) {\n        bookMark = this.documentHelper.bookmarks.get(selectionBookmark[i]);\n        if (this.selection.isElementInSelection(bookMark.reference, false) && !this.selection.isElementInSelection(bookMark, true)) {\n          var bookmarkPargraph = bookMark.line.paragraph;\n          var selectionParagraphInfo = this.selection.getParagraphInfo(startPos);\n          if (bookmarkPargraph.equals(selectionParagraphInfo.paragraph)) {\n            var elementOffset = bookMark.line.getOffset(bookMark, bookMark.bookmarkType);\n            if (bookMark.line === startPos.currentWidget && selectionParagraphInfo.offset === elementOffset + 1) {\n              startPos.offset--;\n            }\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.updateElementInFieldRevision = function (revisionElement, elementToInclude, revisions, isEnd) {\n    for (var i = 0; i < revisions.length; i++) {\n      var currentRevision = revisions[i];\n      var rangeIndex = currentRevision.range.indexOf(revisionElement);\n      currentRevision.range.splice(isEnd ? rangeIndex + 1 : rangeIndex, 0, elementToInclude);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n    }\n  };\n  /**\n   * Retrieves the resultant field text from the specified field element box.\n   * @param item Specify the field element box to retrieve field text.\n   * @returns Returns the resultant field text.\n   */\n  Editor.prototype.retrieveFieldResultantText = function (item) {\n    var resultantText = '';\n    if (item.fieldType === 1) {\n      var textElement = item.previousElement;\n      while (!isNullOrUndefined(textElement) && textElement instanceof TextElementBox) {\n        resultantText = textElement.text + resultantText;\n        textElement = !isNullOrUndefined(textElement.previousNode) ? textElement.previousNode.previousValidNodeForTracking : undefined;\n      }\n    }\n    return resultantText;\n  };\n  Editor.prototype.checkToCombineRevisionsinBlocks = function (tempSpan, checkWidget, isEnd, revisionType) {\n    if (!checkWidget || !this.owner.enableTrackChanges) {\n      return;\n    }\n    // if (tempSpan instanceof FieldElementBox && tempSpan.fieldType === 2) {\n    //     return;\n    // }\n    if (tempSpan instanceof BookmarkElementBox || tempSpan instanceof CommentCharacterElementBox || tempSpan instanceof EditRangeStartElementBox || tempSpan instanceof EditRangeEndElementBox) {\n      return;\n    }\n    var isCombined = false;\n    if (isEnd) {\n      isCombined = this.combineRevisionWithNextPara(tempSpan, revisionType);\n    } else {\n      isCombined = this.combineRevisionWithPrevPara(tempSpan, revisionType);\n    }\n    if (!isCombined) {\n      this.insertRevision(tempSpan, revisionType);\n    }\n  };\n  Editor.prototype.checkToMapRevisionWithNextNode = function (inline, tempSpan, isBidi, revisionType, inlinePara) {\n    if (!isNullOrUndefined(inlinePara) && inlinePara.characterFormat.revisions.length == 1) {\n      var nextElementPara = inlinePara.characterFormat;\n      if (!isNullOrUndefined(nextElementPara)) {\n        return this.checkToMapRevisionWithInlineText(undefined, 0, tempSpan, isBidi, revisionType, nextElementPara);\n      }\n      return false;\n    }\n    if (isNullOrUndefined(inline)) {\n      return false;\n    }\n    var nextElement = inline.nextValidNodeForTracking;\n    if (!isNullOrUndefined(nextElement)) {\n      return this.checkToMapRevisionWithInlineText(nextElement, 0, tempSpan, isBidi, revisionType);\n    }\n    return false;\n  };\n  Editor.prototype.checkToMapRevisionWithPreviousNode = function (inline, tempSpan, isBidi, revisionType) {\n    if (isNullOrUndefined(inline)) {\n      return false;\n    }\n    var prevElement = inline.previousValidNodeForTracking;\n    if (!isNullOrUndefined(prevElement)) {\n      return this.checkToMapRevisionWithInlineText(prevElement, prevElement.length, tempSpan, isBidi, revisionType);\n    }\n    return false;\n  };\n  Editor.prototype.checkToMapRevisionWithInlineText = function (inline, indexInInline, newElement, isBidi, revisionType, inlinePara) {\n    if (!isNullOrUndefined(inlinePara)) {\n      if (revisionType === 'Deletion') {\n        this.updateLastElementRevision(newElement);\n      }\n      if (!isNullOrUndefined(inlinePara) && inlinePara.revisions.length > 0) {\n        return this.applyMatchedRevisionInorder(undefined, newElement, indexInInline, true, isBidi, revisionType, inlinePara);\n      }\n    } else if (!isNullOrUndefined(inline)) {\n      if (revisionType === 'Deletion') {\n        this.updateLastElementRevision(newElement);\n      }\n      if (inline.length === indexInInline && inline.previousValidNodeForTracking != undefined) {\n        inline = inline.previousValidNodeForTracking;\n        indexInInline = inline.length;\n        if (inline.revisions.length > 0) {\n          return this.applyMatchedRevisionInorder(inline, newElement, indexInInline, false, isBidi, revisionType);\n        }\n      } else if (indexInInline === 0) {\n        inline = inline.nextValidNodeForTracking;\n        if (!isNullOrUndefined(inline) && inline.revisions.length > 0) {\n          return this.applyMatchedRevisionInorder(inline, newElement, indexInInline, true, isBidi, revisionType);\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.combineElementRevisions = function (inline, elementToCombine) {\n    if (inline.revisions.length === 0 || elementToCombine.revisions.length === 0) {\n      return;\n    }\n    for (var i = 0; i < inline.revisions.length; i++) {\n      var prevRevision = inline.revisions[i];\n      for (var j = 0; j < elementToCombine.revisions.length; j++) {\n        var currentRevision = elementToCombine.revisions[i];\n        if (prevRevision.range.indexOf(elementToCombine) === -1 && currentRevision.revisionType === prevRevision.revisionType && currentRevision.author === prevRevision.author) {\n          elementToCombine.revisions.splice(j, 1);\n          prevRevision.range.push(elementToCombine);\n          elementToCombine.revisions.splice(j, 0, prevRevision);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(prevRevision);\n        }\n      }\n    }\n  };\n  Editor.prototype.applyMatchedRevisionInorder = function (inline, newElement, indexInInline, isBegin, isBidi, revisionType, inlinePara) {\n    var revisionsMatched;\n    if (!isNullOrUndefined(inlinePara) && isNullOrUndefined(inline)) {\n      revisionsMatched = this.getMatchedRevisionsToCombine(inlinePara.revisions, revisionType);\n      if (revisionsMatched.length > 0) {\n        this.mapMatchedRevisions(revisionsMatched, inlinePara, newElement, isBegin);\n      }\n      return false;\n    } else {\n      revisionsMatched = this.getMatchedRevisionsToCombine(inline.revisions, revisionType);\n      if (revisionsMatched.length > 0) {\n        this.mapMatchedRevisions(revisionsMatched, inline, newElement, isBegin);\n      }\n      return false;\n    }\n  };\n  Editor.prototype.copyElementRevision = function (elementToCopy, elementToInclude, isSplitElementMerged) {\n    if (!this.isTrackingFormField) {\n      for (var i = 0; i < elementToCopy.revisions.length; i++) {\n        var currentRevision = elementToCopy.revisions[i];\n        var rangeIndex = currentRevision.range.indexOf(elementToCopy);\n        elementToInclude.revisions.splice(0, 0, currentRevision);\n        currentRevision.range.splice(rangeIndex + (isSplitElementMerged ? 2 : 1), 0, elementToInclude);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n      }\n    }\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.mapMatchedRevisions = function (revisions, revisionElement, elementToInclude, isBegin) {\n    for (var i = 0; i < revisions.length; i++) {\n      var currentRevision = revisions[i];\n      if (!this.isRevisionAlreadyIn(elementToInclude, currentRevision) || elementToInclude instanceof WCharacterFormat) {\n        elementToInclude.revisions.splice(0, 0, currentRevision);\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.markerData.length === 0) {\n          this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, currentRevision));\n        }\n        if (elementToInclude instanceof FootnoteElementBox) {\n          this.insertRevisionForFootnoteWidget(elementToInclude, currentRevision);\n        }\n        var rangeIndex = currentRevision.range.indexOf(revisionElement);\n        currentRevision.range.splice(isBegin ? rangeIndex : rangeIndex + 1, 0, elementToInclude);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n      }\n    }\n  };\n  Editor.prototype.isRevisionAlreadyIn = function (element, revision) {\n    if (element.revisions.length > 0) {\n      for (var i = 0; i < element.revisions.length; i++) {\n        var elementRevision = element.revisions[i];\n        if (elementRevision.revisionID === revision.revisionID) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.getMatchedRevisionsToCombine = function (revisions, revisionType) {\n    var matchedRevisions = [];\n    for (var i = 0; i < revisions.length; i++) {\n      if (this.isRevisionMatched(revisions[i], revisionType)) {\n        matchedRevisions.push(revisions[i]);\n      }\n    }\n    return matchedRevisions;\n  };\n  Editor.prototype.decideInlineForTrackChanges = function (inline, revisionType) {\n    var matched = false;\n    if (this.owner.enableTrackChanges && !this.canInsertRevision(inline, revisionType)) {\n      var currentElement = inline.nextValidNodeForTracking;\n      if (!isNullOrUndefined(currentElement) && this.canInsertRevision(currentElement, revisionType)) {\n        inline = currentElement;\n        matched = true;\n      }\n    }\n    return {\n      'element': inline,\n      'isMatched': matched\n    };\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertIMEText = function (text, isUpdate) {\n    if (this.documentHelper.lastComposedText === text && isUpdate) {\n      return;\n    }\n    // Clone selection start position\n    var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n    var startPosition = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n    // Insert IME text in current selection\n    this.insertText(text);\n    this.documentHelper.lastComposedText = text;\n    // update selection start\n    var start = this.selection.start;\n    this.setPositionForCurrentIndex(start, startPosition);\n    // Update selection end\n    var endPosition = new TextPosition(this.owner);\n    endPosition.setPositionForLineWidget(start.currentWidget, start.offset + text.length);\n    if (this.owner.enableTrackChanges) {\n      if (!isUpdate) {\n        this.selection.start.setPositionInternal(this.selection.end);\n      }\n      this.selection.end.updatePhysicalPosition(true);\n    } else {\n      this.selection.selectPosition(isUpdate ? start : endPosition, endPosition);\n    }\n  };\n  /**\n    * Inserts the section break at cursor position with specified section break type.\n    *\n    * @param {SectionBreakType} sectionBreakType Specifies the section break type.\n    * > If this parameter is not set, it inserts the section break of type new page.\n    * @returns {void}\n    */\n  Editor.prototype.insertSectionBreak = function (sectionBreakType) {\n    if (isNullOrUndefined(sectionBreakType)) {\n      sectionBreakType = SectionBreakType.NewPage;\n    }\n    var selection = this.documentHelper.selection;\n    if (isNullOrUndefined(selection) || this.owner.isReadOnlyMode || selection.start.paragraph.isInHeaderFooter) {\n      return;\n    }\n    if (sectionBreakType === SectionBreakType.Continuous) {\n      this.initHistory('SectionBreakContinuous');\n    } else {\n      this.initHistory('SectionBreak');\n    }\n    if (!selection.isEmpty) {\n      selection.selectContent(selection.isForward ? selection.start : selection.end, true);\n    }\n    this.documentHelper.owner.isShiftingEnabled = true;\n    this.updateInsertPosition();\n    if (sectionBreakType === SectionBreakType.Continuous) {\n      this.documentHelper.layout.isSectionBreakCont = true;\n      this.insertSection(selection, true, undefined, true);\n    } else {\n      this.insertSection(selection, true, undefined, undefined, true);\n    }\n    this.updateEndPosition();\n    this.reLayout(selection, true);\n    //if (this.owner.layoutType === 'Continuous') {\n    this.layoutWholeDocument(true);\n    //} \n    this.documentHelper.layout.isSectionBreakCont = false;\n  };\n  Editor.prototype.combineRevisionWithBlocks = function (elementBox, revisionType) {\n    if (!this.owner.enableTrackChanges || isNullOrUndefined(elementBox)) {\n      return;\n    }\n    while (elementBox instanceof BookmarkElementBox || elementBox instanceof CommentCharacterElementBox || elementBox instanceof ListTextElementBox) {\n      elementBox = elementBox.nextElement;\n    }\n    if (isNullOrUndefined(elementBox)) {\n      return;\n    }\n    var prevPara = elementBox instanceof ParagraphWidget ? elementBox.previousRenderedWidget : elementBox.paragraph.previousRenderedWidget;\n    if (prevPara instanceof TableWidget) {\n      return;\n    }\n    var isNew = true;\n    var currentElement;\n    if (elementBox instanceof ParagraphWidget) {\n      currentElement = elementBox.characterFormat;\n    } else {\n      currentElement = elementBox;\n    }\n    if (!isNullOrUndefined(prevPara) && prevPara.characterFormat.revisions.length > 0) {\n      var lastLine = prevPara.lastChild;\n      if (isNullOrUndefined(lastLine) || lastLine.children.length === 0) {\n        return;\n      }\n      var lastElement_1 = lastLine.children[lastLine.children.length - 1];\n      while (lastElement_1 instanceof BookmarkElementBox || lastElement_1 instanceof CommentCharacterElementBox || lastElement_1 instanceof ListTextElementBox) {\n        lastElement_1 = lastElement_1.previousElement;\n      }\n      if (prevPara.isEmpty()) {\n        lastElement_1 = prevPara.characterFormat;\n      }\n      if (lastElement_1.revisions.length > 0) {\n        if (this.compareElementRevision(prevPara.characterFormat, currentElement)) {\n          var currentRevision = currentElement.revisions[currentElement.revisions.length - 1];\n          if (this.compareElementRevision(lastElement_1, currentElement)) {\n            var lastElementRevision = lastElement_1.revisions[lastElement_1.revisions.length - 1];\n            isNew = false;\n            if (currentRevision !== lastElementRevision) {\n              this.clearAndUpdateRevisons(currentRevision.range, lastElementRevision, lastElementRevision.range.indexOf(lastElement_1) + 1);\n              this.owner.revisions.remove(currentRevision);\n            }\n          }\n        }\n      }\n    }\n    var lastElement;\n    if (elementBox instanceof ParagraphWidget) {\n      lastElement = elementBox.characterFormat;\n    } else {\n      var lastLine = elementBox.paragraph.lastChild;\n      while (lastLine.children.length == 0 && !isNullOrUndefined(lastLine.previousLine)) {\n        // in case there was a line break and last line doesn't have any children\n        lastLine = lastLine.previousLine;\n      }\n      lastElement = lastLine.children[lastLine.children.length - 1];\n      elementBox = lastElement == undefined ? elementBox : lastElement;\n    }\n    var nextPara = elementBox instanceof ParagraphWidget ? elementBox.nextRenderedWidget : elementBox.paragraph.nextRenderedWidget;\n    if (nextPara instanceof TableWidget) {\n      return;\n    }\n    if (!isNullOrUndefined(nextPara)) {\n      // let lastLine: LineWidget = elementBox.paragraph.lastChild as LineWidget;\n      // let lastElement: ElementBox = lastLine.children[lastLine.children.length - 1];\n      var firstLine = nextPara.firstChild;\n      var firstElement = firstLine.children[0];\n      while (firstElement instanceof BookmarkElementBox || firstElement instanceof CommentCharacterElementBox || firstElement instanceof ListTextElementBox) {\n        firstElement = firstElement.nextElement;\n      }\n      if (nextPara.isEmpty()) {\n        firstElement = nextPara.characterFormat;\n      }\n      if (isNullOrUndefined(firstElement)) {\n        return;\n      }\n      if (firstElement.revisions.length > 0) {\n        var firstEleRevision = firstElement.revisions[firstElement.revisions.length - 1];\n        if (this.compareElementRevision(currentElement, firstElement)) {\n          if (this.compareElementRevision(currentElement, firstElement)) {\n            var lastElementRevision = currentElement.revisions[currentElement.revisions.length - 1];\n            isNew = false;\n            if (firstEleRevision !== lastElementRevision) {\n              this.clearAndUpdateRevisons(lastElementRevision.range, firstEleRevision, 0, true);\n              this.owner.revisions.remove(lastElementRevision);\n            }\n          }\n        }\n      }\n    }\n    if (elementBox instanceof ElementBox && elementBox.revisions.length === 0) {\n      this.insertRevision(elementBox, revisionType);\n    }\n  };\n  Editor.prototype.checkToCombineRevisionWithNextPara = function (elementBox, revisionType) {\n    var nextPara = elementBox.paragraph.nextRenderedWidget;\n    if (nextPara instanceof TableWidget) {\n      return false;\n    }\n    if (!isNullOrUndefined(nextPara) && !nextPara.isEmpty()) {\n      var firstLine = nextPara.firstChild;\n      var firstElement = firstLine.children[0];\n      while (firstElement instanceof BookmarkElementBox || firstElement instanceof CommentCharacterElementBox) {\n        firstElement = firstElement.previousElement;\n      }\n      if (isNullOrUndefined(firstElement)) {\n        return false;\n      }\n      if (firstElement.revisions.length > 0) {\n        var mappedRevisions = this.getMatchedRevisionsToCombine(firstElement.revisions, revisionType);\n        if (mappedRevisions.length > 0) {\n          this.mapMatchedRevisions(mappedRevisions, firstElement, elementBox, true);\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.checkToCombineRevisionWithPrevPara = function (elementBox, revisionType) {\n    var prevPara = elementBox.paragraph.previousRenderedWidget;\n    if (prevPara instanceof TableWidget) {\n      return false;\n    }\n    if (!isNullOrUndefined(prevPara) && prevPara.characterFormat.revisions.length > 0) {\n      if (!this.isRevisionMatched(prevPara.characterFormat, revisionType)) {\n        return false;\n      }\n      // let firstLine: LineWidget = prevPara.firstChild as LineWidget;\n      // let lastLine: LineWidget = prevPara.lastChild as LineWidget;\n      // if (isNullOrUndefined(lastLine) || lastLine.children.length === 0) {\n      //     return false;\n      // }\n      // let lastElement: ElementBox = lastLine.children[lastLine.children.length - 1];\n      // if (lastElement instanceof BookmarkElementBox || lastElement instanceof CommentCharacterElementBox) {\n      //     lastElement = lastElement.previousValidNodeForTracking;\n      // }\n      // if (isNullOrUndefined(lastElement)) {\n      //     return false;\n      // }\n      // if (lastElement.revisions.length > 0) {\n      var mappedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, revisionType);\n      if (mappedRevisions.length > 0) {\n        this.mapMatchedRevisions(mappedRevisions, prevPara.characterFormat, elementBox, false);\n        return true;\n      }\n      // }\n    }\n    return false;\n  };\n  Editor.prototype.combineRevisionWithNextPara = function (elementBox, revisionType) {\n    var isLastLine = elementBox.line.isLastLine();\n    var nextElement = elementBox.nextNode;\n    if (isLastLine && isNullOrUndefined(nextElement)) {\n      return this.checkToCombineRevisionWithNextPara(elementBox, revisionType);\n    }\n    return false;\n  };\n  Editor.prototype.combineRevisionWithPrevPara = function (elementBox, revisionType) {\n    var isFirstLine = elementBox.line.isFirstLine();\n    var prevElement = elementBox.previousNode;\n    if (isFirstLine && isNullOrUndefined(prevElement)) {\n      return this.checkToCombineRevisionWithPrevPara(elementBox, revisionType);\n    }\n    return false;\n  };\n  /**\n   * Removes the specified revision from the document.\n   *\n   * @param revisionToRemove Specify the revision to be removed.\n   * @returns {void}\n   */\n  Editor.prototype.removeRevision = function (revisionToRemove) {\n    var elementInfo = this.selection.start.currentWidget.getInline(this.selection.start.offset + 1, 0);\n    var elementBox = elementInfo.element;\n    if (elementInfo.element.revisions.length > 0) {\n      for (var i = 0; i < elementBox.revisions.length; i++) {\n        if (elementBox.revisions[i].revisionType === revisionToRemove.revisionType) {\n          var revision = elementBox.revisions[i];\n          var startIndex = revision.range.indexOf(elementBox);\n          for (var j = startIndex; startIndex < revision.range.length; startIndex++) {\n            revision.range[j].revisions.splice(i, 1);\n            revision.range.splice(j, 1);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Clears the specified revision from the document.\n   *\n   * @param revision Specify the revision to clear from the document.\n   * @returns {void}\n   */\n  Editor.prototype.clearElementRevision = function (revision) {\n    if (isNullOrUndefined(revision)) {\n      return;\n    }\n    for (var i = 0; i < revision.range.length; i++) {\n      if (revision.range[i] instanceof ElementBox) {\n        var currentElement = revision.range[i];\n        currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n        revision.range.splice(i, 1);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.insertRevision = function (item, type, author, date, spittedRange, skip, parseRevisionId) {\n    if (this.isRemoteAction && isNullOrUndefined(this.revisionData) && !this.documentHelper.owner.parser.isPaste) {\n      return undefined;\n    }\n    var revisionId;\n    if (!isNullOrUndefined(parseRevisionId)) {\n      revisionId = parseRevisionId;\n    }\n    if (!isNullOrUndefined(this.revisionData) && this.revisionData.length > 0) {\n      var newRevisionData = this.revisionData.pop();\n      author = newRevisionData.author;\n      date = newRevisionData.date;\n      revisionId = newRevisionData.revisionId;\n    }\n    author = !isNullOrUndefined(author) ? author : this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n    var currentDate = !isNullOrUndefined(date) ? date : HelperMethods.getUtcDate();\n    if (item instanceof ElementBox && !isNullOrUndefined(item.line) && item.line.paragraph.associatedCell || item instanceof WCharacterFormat && item.ownerBase instanceof ParagraphWidget && item.ownerBase.associatedCell) {\n      var cellWidget = undefined;\n      if (item instanceof ElementBox) {\n        cellWidget = item.line.paragraph.associatedCell;\n      } else if (item instanceof WCharacterFormat) {\n        cellWidget = item.ownerBase.associatedCell;\n      }\n      if (cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n        var rowFormat = cellWidget.ownerRow.rowFormat;\n        var matchedRevisions = this.getMatchedRevisionsToCombine(rowFormat.revisions, type);\n        if (matchedRevisions.length > 0) {\n          if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.markerData.length === 0) {\n            this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, matchedRevisions[0]));\n          }\n          for (var i = 0; i < matchedRevisions.length; i++) {\n            item.revisions.splice(0, 0, matchedRevisions[i]);\n            matchedRevisions[i].range.push(item);\n          }\n          return undefined;\n        }\n      }\n    }\n    var revision = new Revision(this.owner, author, currentDate);\n    revision.revisionType = type;\n    if (this.owner.enableCollaborativeEditing && this.isRemoteAction && !isNullOrUndefined(revisionId) && revisionId != '') {\n      revision.revisionID = revisionId;\n    } else {\n      revision.revisionID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n    if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.getRevision(revision.revisionID))) {\n      revision = this.getRevision(revision.revisionID);\n    }\n    if (!isNullOrUndefined(spittedRange) && spittedRange.length > 0) {\n      this.clearAndUpdateRevisons(spittedRange, revision, spittedRange.indexOf(item));\n    }\n    if (!isNullOrUndefined(item)) {\n      if (item instanceof FootnoteElementBox) {\n        this.insertRevisionForFootnoteWidget(item, revision);\n      }\n      if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && !skip) {\n        this.editorHistory.currentBaseHistoryInfo.markerData.splice(0, 0, this.getMarkerData(item, undefined, revision));\n      }\n      item.revisions.push(revision);\n      revision.range.push(item);\n    }\n    if (this.isRemoteAction && this.documentHelper.owner.parser.isPaste) {\n      this.remotePasteRevision.push(revision);\n    } else {\n      this.updateRevisionCollection(revision);\n    }\n    return revision;\n  };\n  Editor.prototype.insertRevisionForFootnoteWidget = function (element, revision) {\n    var blocks = element.bodyWidget.childWidgets;\n    this.skipFootNoteDeleteTracking = true;\n    for (var j = 0; j < blocks.length; j++) {\n      this.insertRevisionForBlock(blocks[j], revision.revisionType, false, revision);\n    }\n    this.skipFootNoteDeleteTracking = false;\n  };\n  /**\n   * Method help to clear previous revisions and include new revision at specified index\n   *\n   * @param range - range of elements to be cleared\n   * @param revision - revision to be inserted\n   * @param index - index at which to be included in the revision range\n   * @returns {void}\n   */\n  Editor.prototype.clearAndUpdateRevisons = function (range, revision, index, isReverse) {\n    if (revision.range.filter(function (range) {\n      return range instanceof WCharacterFormat;\n    })) {\n      index += 1;\n    }\n    for (var i = 0; i < range.length; i++) {\n      if (range[i] instanceof ElementBox || range[i] instanceof WCharacterFormat) {\n        var currentElement = range[i];\n        currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n        currentElement.revisions.push(revision);\n        revision.range.splice(isReverse ? i : index + i, 0, currentElement);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      }\n    }\n  };\n  Editor.prototype.splitRevisionByElement = function (item, revision) {\n    if (item.revisions.length > 0) {\n      var range = revision.range;\n      var index = range.indexOf(item);\n      revision.range = range.splice(0, index + 1);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      return range;\n    }\n    return undefined;\n  };\n  /**\n   * Method to update revision for the splitted text element\n   * @param inline - Original text element\n   * @param splittedSpan - Splitted element\n   */\n  Editor.prototype.updateRevisionForSpittedTextElement = function (inline, splittedSpan) {\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.splittedRevisions = [];\n    }\n    for (var i = 0; i < inline.revisions.length; i++) {\n      var revision = inline.revisions[i];\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      var splittedRange = this.splitRevisionByElement(inline, revision);\n      var splittedRevision = this.insertRevision(splittedSpan, revision.revisionType, revision.author, revision.date, splittedRange, true);\n      if (!this.isRemoteAction) {\n        this.editorHistory.currentBaseHistoryInfo.splittedRevisions.push(this.getMarkerData(undefined, undefined, this.getRevision(splittedRevision.revisionID)));\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getRevision = function (revisionId) {\n    for (var i = 0; i < this.owner.documentHelper.revisionsInternal.length; i++) {\n      var revision = this.owner.documentHelper.revisionsInternal.keys[i];\n      if (revision === revisionId) {\n        return this.owner.documentHelper.revisionsInternal.get(revision);\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.isRevisionMatched = function (item, type) {\n    var author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n    if (item instanceof Revision) {\n      if ((isNullOrUndefined(type) || type === item.revisionType) && item.author === author) {\n        return true;\n      }\n    } else if (item.revisions.length > 0) {\n      for (var i = 0; i < item.revisions.length; i++) {\n        var elementRevision = item.revisions[i];\n        if ((isNullOrUndefined(type) || type === elementRevision.revisionType) && elementRevision.author === author) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.compareElementRevision = function (element, compare) {\n    if (element.revisions.length === 0 || compare.revisions.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < element.revisions.length; i++) {\n      var currentRevision = element.revisions[i];\n      for (var j = 0; j < compare.revisions.length; j++) {\n        if (currentRevision.author === compare.revisions[j].author && currentRevision.revisionType === compare.revisions[j].revisionType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.canInsertRevision = function (item, type) {\n    var revisionType = isNullOrUndefined(type) ? 'Insertion' : type;\n    if (revisionType === 'Deletion') {\n      return false;\n    }\n    if (this.owner.enableTrackChanges) {\n      return this.isRevisionMatched(item, revisionType);\n      //if it has revision\n    } else if (item.revisions.length > 0) {\n      return false;\n    }\n    return true;\n  };\n  Editor.prototype.insertRevisionAtEnd = function (item, newElement, revisionType) {\n    if (newElement instanceof BookmarkElementBox || newElement instanceof CommentCharacterElementBox || newElement instanceof EditRangeStartElementBox || newElement instanceof EditRangeEndElementBox) {\n      return false;\n    }\n    item = item.previousValidNodeForTracking;\n    if (isNullOrUndefined(item)) {\n      return false;\n    }\n    return this.insertRevisionAtPosition(item, newElement, true, revisionType);\n  };\n  Editor.prototype.insertRevisionAtPosition = function (item, newElement, isEnd, revisionType) {\n    // if (newElement instanceof FieldElementBox && (newElement as FieldElementBox).fieldType === 2) {\n    //     return false;\n    // }\n    var prevRevisionLength = newElement.revisions.length;\n    var isRevisionCombined = this.checkToMapRevisionWithInlineText(item, isEnd ? item.length : 0, newElement, false, revisionType);\n    // Check to combine with previous and next element\n    if (isEnd) {\n      if (!isRevisionCombined && newElement.revisions.length === prevRevisionLength) {\n        isRevisionCombined = this.checkToMapRevisionWithNextNode(item.nextNode, newElement, false, revisionType);\n      }\n    } else {\n      if (!isRevisionCombined && newElement.revisions.length === prevRevisionLength) {\n        isRevisionCombined = this.checkToMapRevisionWithPreviousNode(item.previousNode, newElement, false, revisionType);\n      }\n    }\n    return isRevisionCombined;\n  };\n  Editor.prototype.insertRevisionAtBegining = function (item, newElement, revisionType) {\n    if (newElement instanceof BookmarkElementBox || newElement instanceof CommentCharacterElementBox || newElement instanceof EditRangeStartElementBox || newElement instanceof EditRangeEndElementBox) {\n      return false;\n    }\n    item = item.nextValidNodeForTracking;\n    if (isNullOrUndefined(item)) {\n      return false;\n    }\n    return this.insertRevisionAtPosition(item, newElement, false, revisionType);\n  };\n  Editor.prototype.splitRevisionForSpittedElement = function (element, spittedElement) {\n    for (var i = element.revisions.length - 1; i >= 0; i--) {\n      var revision = element.revisions[i];\n      var splittedRange = this.splitRevisionByElement(element, revision);\n      this.insertRevision(spittedElement, revision.revisionType, revision.author, revision.date, splittedRange);\n    }\n  };\n  /**\n   * Method to combine element revision if not inserts new revision\n   */\n  // private checkToCombineRevision(element: ElementBox, newElement: ElementBox, revisionType: RevisionType): boolean {\n  //     let isCombined: boolean = false;\n  //     if (this.isRevisionMatched(element, revisionType)) {\n  //         isCombined = true;\n  //         this.combineElementRevision(element, newElement, true);\n  //     } else {\n  //         this.insertRevision(newElement, revisionType);\n  //     }\n  //     return isCombined;\n  // }\n  Editor.prototype.combineElementRevision = function (currentElementRevisions, elementToCombine, isReverse) {\n    for (var i = 0; i < currentElementRevisions.length; i++) {\n      for (var j = 0; j < elementToCombine.length; j++) {\n        var currentRevision = currentElementRevisions[i];\n        var revisionToCombine = elementToCombine[j];\n        if (currentRevision.author === revisionToCombine.author && currentRevision.revisionType === revisionToCombine.revisionType) {\n          var rangeLength = revisionToCombine.range.length;\n          for (var k = 0; k < rangeLength; k++) {\n            var item = revisionToCombine.range[0];\n            item.revisions.splice(item.revisions.indexOf(revisionToCombine), 1);\n            revisionToCombine.range.splice(0, 1);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revisionToCombine);\n            isReverse ? currentRevision.range.splice(k, 0, item) : currentRevision.range.push(item);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n            item.revisions.push(currentRevision);\n          }\n          if (revisionToCombine.range.length === 0) {\n            this.owner.revisions.remove(revisionToCombine);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n              this.removeMarkerInfoRevision(revisionToCombine.revisionID, this.editorHistory.currentBaseHistoryInfo.markerData);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeMarkerInfoRevision = function (revisionID, markerInfo) {\n    for (var i = 0; i < markerInfo.length; i++) {\n      if (!isNullOrUndefined(markerInfo[i].revisionId) && markerInfo[i].revisionId === revisionID) {\n        markerInfo.splice(markerInfo.indexOf(markerInfo[i]), 1);\n      }\n    }\n  };\n  Editor.prototype.combineRevisions = function (block, startPosition, endposition) {\n    if (!this.owner.enableTrackChanges) {\n      return;\n    }\n    var info = this.selection.getLineInfo(block, startPosition.offset);\n    var elementInfo = info.line.getInline(startPosition.offset, 0);\n    var currentElement = elementInfo.element;\n    if (currentElement.revisions.length > 0) {\n      if (this.isRevisionMatched(currentElement, 'Insertion')) {\n        var nextElement = currentElement.nextElement;\n        if (!isNullOrUndefined(nextElement) && nextElement.revisions.length > 0) {\n          var revision = currentElement.revisions[currentElement.revisions.length - 1];\n          var range = nextElement.revisions[nextElement.revisions.length - 1].range;\n          if (revision !== nextElement.revisions[nextElement.revisions.length - 1]) {\n            this.clearAndUpdateRevisons(range, revision, revision.range.indexOf(currentElement) + 1);\n          }\n        }\n      }\n    }\n    // let startOffset: number = startPosition.currentWidget.getOffset(firstElement, 0);\n    // let endOffset: number = endposition.currentWidget.getOffset(lastElement, 0);\n  };\n  /**\n   * Method to update the revision for whole block\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertRevisionForBlock = function (widget, revisionType, isTOC, revision, skipReLayout) {\n    if (widget.childWidgets.length === 0 || !this.owner.enableTrackChanges) {\n      return;\n    }\n    if (revisionType === 'Deletion') {\n      var editPostion = this.selection.editPosition;\n      var start = this.selection.start.clone();\n      var end = this.selection.end.clone();\n      this.documentHelper.layout.clearListElementBox(widget);\n      var isLastChild = widget == this.getLastParaForBodywidgetCollection(widget);\n      var nextParagraph = this.selection.getNextParagraphBlock(widget);\n      if (widget.isInsideTable && widget == this.selection.getLastParagraph(widget.associatedCell)) {\n        isLastChild = true;\n      }\n      if (!isLastChild && !widget.isInsideTable && !(isNullOrUndefined(nextParagraph) && widget.isEmpty())) {\n        // Added the condition to remove section if current and next para have different section indexes if selection is covered till the end of section.\n        if (!isNullOrUndefined(nextParagraph) && !nextParagraph.isInsideTable && widget.bodyWidget.sectionIndex !== nextParagraph.bodyWidget.sectionIndex) {\n          this.addRemovedNodes(widget.bodyWidget);\n        }\n        if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo)) {\n          this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(widget);\n        }\n        this.addRemovedNodes(widget.clone());\n        this.insertRevision(widget.characterFormat, revisionType);\n      } else if (!isLastChild && widget.isInsideTable && start.paragraph.isInsideTable && end.paragraph.isInsideTable && end.offset <= end.paragraph.getLength() && end.paragraph.associatedCell.index === start.paragraph.associatedCell.index) {\n        if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo)) {\n          this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(widget);\n        }\n        this.addRemovedNodes(widget.clone());\n        this.insertRevision(widget.characterFormat, revisionType);\n      }\n      for (var i = widget.childWidgets.length - 1; i > -1; i--) {\n        var line = widget.childWidgets[i];\n        this.removeContent(line, 0, this.documentHelper.selection.getLineLength(line), undefined, !isLastChild);\n      }\n      var lastLine = widget.lastChild;\n      while (lastLine.children.length == 0 && !isNullOrUndefined(lastLine.previousLine)) {\n        // in case there was a line break and last line doesn't have any children\n        lastLine = lastLine.previousLine;\n      }\n      if (lastLine.children.length > 0) {\n        var lastEle = lastLine.children[lastLine.children.length - 1];\n        this.combineElementRevision(widget.characterFormat.revisions, lastEle.revisions, true);\n      }\n      this.selection.editPosition = editPostion;\n      this.selection.start.setPositionInternal(start);\n      this.selection.end.setPositionInternal(end);\n      // let textPosition: TextPosition = this.selection.getTextPosBasedOnLogicalIndex(editPostion);\n      // this.selection.selectContent(textPosition, true);\n      this.removeEmptyLine(widget);\n      if (!skipReLayout) {\n        this.documentHelper.layout.reLayoutParagraph(widget, 0, 0);\n      }\n    } else {\n      var skipParaMark = false;\n      if (isNullOrUndefined(revision)) {\n        var author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n        revision = new Revision(this.owner, author, HelperMethods.getUtcDate());\n        revision.revisionID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n        revision.revisionType = revisionType;\n      }\n      for (var i = 0; i < widget.childWidgets.length; i++) {\n        var elemets = widget.childWidgets[i].children;\n        if (elemets.length === 0) {\n          var paraIndex = widget.containerWidget.childWidgets.indexOf(widget);\n          var prevWidget = undefined;\n          if (paraIndex > 0) {\n            prevWidget = widget.containerWidget.childWidgets[paraIndex - 1];\n          }\n          if (!isNullOrUndefined(prevWidget) && prevWidget instanceof ParagraphWidget && prevWidget.characterFormat.revisions.length > 0) {\n            if (this.isRevisionMatched(prevWidget.characterFormat, revisionType)) {\n              var mappedRevisions = this.getMatchedRevisionsToCombine(prevWidget.characterFormat.revisions, revisionType);\n              if (mappedRevisions.length > 0) {\n                this.mapMatchedRevisions(mappedRevisions, prevWidget.characterFormat, widget.characterFormat, false);\n                skipParaMark = true;\n                revision = undefined;\n              }\n            }\n          }\n        }\n        for (var j = 0; j < elemets.length; j++) {\n          if (j === 0 && !isTOC) {\n            var prevRevisionCount = elemets[i].revisions.length;\n            this.checkToCombineRevisionsinBlocks(elemets[i], true, false, 'Insertion');\n            if (elemets[i].revisions.length > prevRevisionCount) {\n              revision = elemets[i].revisions[elemets[i].revisions.length - 1];\n            } else {\n              elemets[j].revisions.push(revision);\n              revision.range.push(elemets[j]);\n            }\n          } else {\n            elemets[j].revisions.push(revision);\n            revision.range.push(elemets[j]);\n          }\n        }\n      }\n      if (!isTOC && !skipParaMark) {\n        widget.characterFormat.revisions.push(revision);\n        revision.range.push(widget.characterFormat);\n      }\n      if (!isNullOrUndefined(revision)) {\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n        this.updateRevisionCollection(revision);\n      }\n    }\n  };\n  /**\n  * @private\n  */\n  Editor.prototype.getLastParaForBodywidgetCollection = function (widget) {\n    var bodywidget = widget.containerWidget;\n    if (bodywidget.containerWidget instanceof FootNoteWidget) {\n      return bodywidget.childWidgets[bodywidget.childWidgets.length - 1];\n    }\n    var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n    var lastBodyWidget = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n    var lastPara = lastBodyWidget.childWidgets[lastBodyWidget.childWidgets.length - 1];\n    return lastPara;\n  };\n  Editor.prototype.updatePasteRevision = function () {\n    for (var i = 0; i < this.remotePasteRevision.length; i++) {\n      this.updateRevisionCollection(this.remotePasteRevision[i]);\n    }\n    this.remotePasteRevision = [];\n  };\n  Editor.prototype.updateRevisionCollection = function (revision) {\n    var isInserted = false;\n    var paraIndex = undefined;\n    if (this.owner.revisions.changes.indexOf(revision) < 0) {\n      if (!this.documentHelper.revisionsInternal.containsKey(revision.revisionID)) {\n        this.documentHelper.revisionsInternal.add(revision.revisionID, revision);\n      }\n      if (this.owner.revisions.changes.length > 0) {\n        var currentStart = this.owner.selectionModule.start;\n        for (var i = 0; i < this.owner.revisions.changes.length; i++) {\n          var currentRange = this.owner.revisions.changes[i].range[0];\n          if (currentRange instanceof ElementBox && !isNullOrUndefined(currentRange.line) && currentRange.line.paragraph.bodyWidget) {\n            paraIndex = this.selection.getElementPosition(this.owner.revisions.changes[i].range[0]).startPosition;\n          } else if (currentRange instanceof WRowFormat) {\n            var rowWidget = currentRange.ownerBase;\n            var firstCell = rowWidget.childWidgets[0];\n            if (firstCell.childWidgets.length === 0) {\n              for (var j = 1; j < rowWidget.childWidgets.length; j++) {\n                if (rowWidget.childWidgets[j].childWidgets.length > 0) {\n                  firstCell = rowWidget.childWidgets[j];\n                  break;\n                }\n              }\n            }\n            var firstPara = this.selection.getFirstParagraph(firstCell);\n            // Get the currentRange position to check (before or after) to insert table revision in order.\n            var editPosition = void 0;\n            if (firstPara.bodyWidget) {\n              var selection = this.documentHelper.selection;\n              if (!isNullOrUndefined(selection.editPosition)) {\n                editPosition = selection.editPosition;\n              }\n              this.updateEditPosition(firstCell, selection);\n              paraIndex = this.selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n              if (!isNullOrUndefined(editPosition) && !this.selection.start.paragraph.isInsideTable) {\n                selection.editPosition = editPosition;\n              }\n            }\n          } else if (currentRange instanceof WCharacterFormat) {\n            var paraWidget = currentRange.ownerBase;\n            if (paraWidget.lastChild && paraWidget.lastChild.paragraph.bodyWidget) {\n              var offset = paraWidget.getLength();\n              var startPosition = new TextPosition(this.owner);\n              startPosition.setPositionParagraph(paraWidget.lastChild, offset);\n              paraIndex = startPosition;\n            }\n          }\n          if (!isNullOrUndefined(paraIndex) && !isNullOrUndefined(currentStart)) {\n            if (currentStart.isExistBefore(paraIndex) && !(revision.range[0] instanceof WRowFormat)) {\n              isInserted = true;\n              this.owner.revisions.changes.splice(i, 0, revision);\n              var currentChangeView = new ChangesSingleView(this.owner, this.owner.trackChangesPane);\n              this.owner.trackChangesPane.changesInfoDiv.insertBefore(currentChangeView.createSingleChangesDiv(revision), this.owner.trackChangesPane.changesInfoDiv.children[i + 1]);\n              this.owner.trackChangesPane.revisions.splice(i, 0, revision);\n              this.owner.trackChangesPane.changes.add(revision, currentChangeView);\n              this.owner.trackChangesPane.renderedChanges.add(revision, currentChangeView);\n              break;\n            } else if (revision.range[0] instanceof WRowFormat && currentRange instanceof WRowFormat && revision.range[0].ownerBase.containerWidget === currentRange.ownerBase.containerWidget && revision.range[0].ownerBase.index === currentRange.ownerBase.index) {\n              isInserted = true;\n              this.owner.revisions.changes.splice(i - revision.range[0].ownerBase.indexInOwner, 0, revision);\n              break;\n            } else if (!isNullOrUndefined(paraIndex) && !isNullOrUndefined(currentStart) && (currentStart.isExistBefore(paraIndex) || currentStart.isAtSamePosition(paraIndex) || currentStart.paragraph.isInsideTable && paraIndex.paragraph.isInsideTable && currentStart.paragraph.associatedCell === paraIndex.paragraph.associatedCell)) {\n              // Insert the table revision if getting row is first row of table we insert directly in ith index or insert next index of currentRange.\n              if (currentRange instanceof WRowFormat && revision.range[0] instanceof WRowFormat && currentRange.ownerBase.containerWidget === revision.range[0].ownerBase.containerWidget) {\n                this.owner.revisions.changes.splice(i + revision.range[0].ownerBase.indexInOwner, 0, revision);\n                isInserted = true;\n                break;\n              } else if (revision.range[0] instanceof WRowFormat) {\n                this.owner.revisions.changes.splice(i, 0, revision);\n                isInserted = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      if (!isInserted) {\n        this.owner.revisions.changes.push(revision);\n        if (!(revision.range[0] instanceof WRowFormat)) {\n          var currentChangeView = new ChangesSingleView(this.owner, this.owner.trackChangesPane);\n          this.owner.trackChangesPane.changesInfoDiv.appendChild(currentChangeView.createSingleChangesDiv(revision));\n          this.owner.trackChangesPane.revisions.push(revision);\n          this.owner.trackChangesPane.changes.add(revision, currentChangeView);\n          this.owner.trackChangesPane.renderedChanges.add(revision, currentChangeView);\n        }\n      }\n      this.documentHelper.updateAuthorIdentity();\n    }\n  };\n  /**\n   * @private\n   * @returns {BodyWidget}\n   */\n  Editor.prototype.insertSection = function (selection, selectFirstBlock, isUndoing, sectionBreakContinuous, sectionBreakNewPage, sectionFormat) {\n    var newSectionFormat;\n    var startPara = this.selection.start.paragraph;\n    if (sectionBreakContinuous && !isUndoing && !startPara.isInsideTable && selection.start.offset === 0 && selection.start.currentWidget === startPara.firstChild && !isNullOrUndefined(startPara.previousRenderedWidget) && startPara.previousRenderedWidget instanceof ParagraphWidget && startPara.previousRenderedWidget.isEndsWithPageBreak) {\n      this.selection.start.paragraph.bodyWidget.sectionFormat.breakCode = 'NoBreak';\n      this.selection.start.paragraph.index = 0;\n      this.updateNextBlocksIndex(this.selection.start.paragraph, true);\n      this.updateSectionIndex(this.selection.start.paragraph.bodyWidget.sectionFormat, this.selection.start.paragraph.bodyWidget, true);\n      this.selection.moveToNextParagraph();\n      this.editorHistory.currentBaseHistoryInfo.insertPosition = undefined;\n      this.updateInsertPosition();\n      return undefined;\n    }\n    if (!isNullOrUndefined(sectionFormat)) {\n      newSectionFormat = sectionFormat;\n    } else {\n      newSectionFormat = this.selection.start.paragraph.bodyWidget.sectionFormat.cloneFormat();\n    }\n    var lastBlock;\n    var firstBlock;\n    if (selection.start.paragraph.isInsideTable) {\n      var table = this.documentHelper.layout.getParentTable(selection.start.paragraph);\n      table = table.combineWidget(this.owner.viewer);\n      var insertBefore = false;\n      if (selection.start.paragraph.associatedCell.rowIndex === 0) {\n        insertBefore = true;\n      }\n      var newParagraph = new ParagraphWidget();\n      var previousBlock = table.previousRenderedWidget;\n      if (!insertBefore) {\n        lastBlock = this.splitTable(table, selection.start.paragraph.associatedCell.ownerRow);\n        this.documentHelper.layout.layoutBodyWidgetCollection(lastBlock.index, lastBlock.containerWidget, lastBlock, false);\n        lastBlock = lastBlock.getSplitWidgets().pop();\n      } else {\n        lastBlock = table;\n      }\n      var insertIndex = 0;\n      if ((isNullOrUndefined(previousBlock) || !previousBlock.bodyWidget.equals(lastBlock.bodyWidget)) && insertBefore) {\n        insertIndex = 0;\n        newParagraph.index = 0;\n      } else {\n        insertIndex = lastBlock.indexInOwner + 1;\n        newParagraph.index = lastBlock.index + 1;\n      }\n      lastBlock.containerWidget.childWidgets.splice(insertIndex, 0, newParagraph);\n      newParagraph.containerWidget = lastBlock.containerWidget;\n      this.updateNextBlocksIndex(newParagraph, true);\n      this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, newParagraph.containerWidget, newParagraph, false);\n      lastBlock = newParagraph;\n    } else {\n      var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n      var selectionStart = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n      //Split Paragraph\n      if (!isUndoing) {\n        this.splitParagraphInternal(selection, selection.start.paragraph, selection.start.currentWidget, selection.start.offset);\n      }\n      this.setPositionForCurrentIndex(selection.start, selectionStart);\n      lastBlock = selection.start.paragraph.getSplitWidgets().pop();\n      if (isUndoing && lastBlock.previousRenderedWidget !== undefined) {\n        lastBlock = lastBlock.previousRenderedWidget;\n      }\n    }\n    //Split body widget\n    firstBlock = this.splitBodyWidget(lastBlock.bodyWidget, newSectionFormat, lastBlock, sectionBreakContinuous, sectionBreakNewPage).firstChild;\n    // if (isUndoing) {\n    //     this.layoutWholeDocument(true);\n    // }\n    if (firstBlock instanceof TableWidget) {\n      firstBlock.updateRowIndex(0);\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(firstBlock.index, firstBlock.containerWidget, firstBlock, false);\n    if (firstBlock instanceof TableWidget) {\n      firstBlock = this.documentHelper.getFirstParagraphInFirstCell(firstBlock);\n    }\n    if (selectFirstBlock) {\n      selection.selectParagraphInternal(firstBlock, true);\n    }\n    return firstBlock;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.splitBodyWidget = function (bodyWidget, sectionFormat, startBlock, sectionBreakContinuous, sectionBreakNewPage) {\n    //let sectionIndex: number;\n    //Move blocks after the start block to next body widget\n    var newBodyWidget = this.documentHelper.layout.moveBlocksToNextPage(startBlock, true, undefined, sectionBreakContinuous);\n    if (this.editorHistory.isUndoing) {\n      startBlock.bodyWidget.sectionFormat = sectionFormat;\n    }\n    if (newBodyWidget.page === undefined) {\n      newBodyWidget.page = bodyWidget.page;\n      bodyWidget.page.bodyWidgets.splice(bodyWidget.page.bodyWidgets.indexOf(bodyWidget) + 1, 0, newBodyWidget);\n    } else if (bodyWidget.page.bodyWidgets.length > 1 && newBodyWidget.page !== undefined && !this.editorHistory.isUndoing) {\n      var temp_NewBody = newBodyWidget;\n      while (!isNullOrUndefined(bodyWidget.nextRenderedWidget) && newBodyWidget !== bodyWidget.nextRenderedWidget) {\n        var startindex = bodyWidget.nextRenderedWidget.page.bodyWidgets.indexOf(bodyWidget.nextRenderedWidget);\n        newBodyWidget.page.bodyWidgets.push(bodyWidget.nextRenderedWidget);\n        bodyWidget.nextRenderedWidget.page.bodyWidgets.splice(startindex, 1);\n      }\n      while (!isNullOrUndefined(newBodyWidget.nextRenderedWidget)) {\n        newBodyWidget.nextRenderedWidget.page = newBodyWidget.page;\n        newBodyWidget = newBodyWidget.nextRenderedWidget;\n      }\n      newBodyWidget = temp_NewBody;\n      newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n      this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n      newBodyWidget.sectionFormat.breakCode = 'NewPage';\n    }\n    //Update SectionIndex for splitted body widget\n    if (sectionBreakContinuous) {\n      newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n      this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n      newBodyWidget.sectionFormat.breakCode = 'NoBreak';\n    }\n    if (sectionBreakNewPage) {\n      newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n      this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n      newBodyWidget.sectionFormat.breakCode = 'NewPage';\n    }\n    this.updateSectionIndex(newBodyWidget.sectionFormat, newBodyWidget, true);\n    if (newBodyWidget.sectionFormat.numberOfColumns > 1) {\n      this.updateColumnIndex(newBodyWidget, false);\n    }\n    // insert New header footer widget in to section index \n    if (this.editorHistory && !this.editorHistory.isUndoing) {\n      this.insertRemoveHeaderFooter(newBodyWidget.sectionIndex, true);\n    }\n    // if (this.documentHelper.viewer instanceof PageLayoutViewer) {\n    //     //update header and footer for splitted widget\n    //     this.documentHelper.layout.layoutHeaderFooter(newBodyWidget, this.owner.viewer as PageLayoutViewer, newBodyWidget.page);\n    // }\n    //Update Child item index from 0 for new Section\n    this.updateBlockIndex(0, newBodyWidget.firstChild);\n    // Start sinfting from first block\n    this.owner.viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n    return newBodyWidget;\n  };\n  Editor.prototype.insertRemoveHeaderFooter = function (sectionIndex, insert) {\n    if (this.documentHelper.headersFooters[sectionIndex]) {\n      // Need to handle further\n      this.documentHelper.headersFooters.splice(sectionIndex, 0, {});\n    } else {\n      this.documentHelper.headersFooters[sectionIndex] = {};\n    }\n  };\n  Editor.prototype.updateBlockIndex = function (blockIndex, block) {\n    var blocks;\n    var sectionIndex = block.bodyWidget.sectionIndex;\n    do {\n      blocks = block.getSplitWidgets();\n      for (var i = 0; i < blocks.length; i++) {\n        blocks[i].index = blockIndex;\n      }\n      blockIndex++;\n      block = blocks.pop().nextRenderedWidget;\n    } while (!isNullOrUndefined(block) && block.bodyWidget.sectionIndex === sectionIndex);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateSectionIndex = function (sectionFormat, startBodyWidget, increaseIndex) {\n    var currentSectionIndex = startBodyWidget.sectionIndex;\n    var blockIndex = 0;\n    var bodyWidget = startBodyWidget;\n    do {\n      if (bodyWidget.index === currentSectionIndex && sectionFormat) {\n        bodyWidget.sectionFormat = sectionFormat;\n      }\n      if (increaseIndex) {\n        bodyWidget.index++;\n      } else {\n        bodyWidget.index--;\n      }\n      bodyWidget = bodyWidget.nextRenderedWidget;\n    } while (bodyWidget);\n  };\n  /**\n  * @private\n  * @returns {void}\n  */\n  Editor.prototype.updateColumnIndex = function (startBodyWidget, increaseIndex) {\n    var bodyWidget = startBodyWidget;\n    do {\n      if (!increaseIndex && bodyWidget.columnIndex === 0) {\n        break;\n      }\n      if (increaseIndex) {\n        bodyWidget.columnIndex++;\n      } else {\n        bodyWidget.columnIndex--;\n      }\n      if (!isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.sectionIndex !== bodyWidget.nextRenderedWidget.sectionIndex) {\n        break;\n      }\n      bodyWidget = bodyWidget.nextRenderedWidget;\n    } while (bodyWidget);\n  };\n  //Auto convert List\n  Editor.prototype.checkAndConvertList = function (selection, isTab) {\n    var list = selection.paragraphFormat.getList();\n    if (!isNullOrUndefined(list) || selection.start.paragraph.containerWidget instanceof FootNoteWidget) {\n      return false;\n    }\n    var convertList = false;\n    var isLeadingZero = false;\n    var indexInInline = 0;\n    var inlineObj = selection.start.currentWidget.getInline(selection.start.offset - 1, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    if (!(inline instanceof TextElementBox)) {\n      return false;\n    }\n    var span = inline;\n    var text = span.text.substring(0, indexInInline);\n    var tabValue = 0;\n    var length = 0;\n    while (!isNullOrUndefined(span.previousNode)) {\n      if (span.previousNode instanceof TextElementBox && (span.previousNode.text === '\\t' || span.previousNode.text.trim().length === 0)) {\n        span.previousNode.text === '\\t' ? tabValue += 36 : length = span.previousNode.text.length * 2.5;\n        span = span.previousNode;\n        continue;\n      }\n      return false;\n    }\n    span = inline;\n    var index = 0;\n    var tabIndex = text.lastIndexOf('\\t');\n    index = tabIndex >= 0 ? tabIndex + 1 : text.lastIndexOf(' ') + 1;\n    while (span.previousNode instanceof TextElementBox && index === 0) {\n      span = span.previousNode;\n      var previousText = span.text;\n      tabIndex = previousText.lastIndexOf('\\t');\n      index = tabIndex >= 0 ? tabIndex + 1 : previousText.lastIndexOf(' ') + 1;\n      text = span.text + text;\n      text = text.substring(index);\n    }\n    text = HelperMethods.trimStart(text);\n    var numberFormat = text.substring(1, 2);\n    var previousList = undefined;\n    var listLevelPattern = this.getListLevelPattern(text.substring(0, 1));\n    if (listLevelPattern !== 'None' && this.checkNumberFormat(numberFormat, listLevelPattern === 'Bullet', text)) {\n      convertList = true;\n    } else if (this.checkLeadingZero(text)) {\n      isLeadingZero = true;\n      convertList = true;\n    } else {\n      previousList = this.checkNextLevelAutoList(text);\n      if (!isNullOrUndefined(previousList)) {\n        convertList = true;\n      }\n    }\n    if (convertList && listLevelPattern === 'Bullet' && inline.text === '- ' && !isNullOrUndefined(inline.paragraph.previousWidget) && !(inline.paragraph.previousWidget.firstChild.children[0] instanceof ListTextElementBox)) {\n      convertList = false;\n    }\n    if (convertList) {\n      this.initComplexHistory('AutoList');\n      var paragraph = inline.paragraph;\n      selection.start.setPositionParagraph(paragraph.childWidgets[0], paragraph.childWidgets[0].getOffset(inline, indexInInline + 1));\n      selection.end.setPositionParagraph(paragraph.childWidgets[0], 0);\n      this.initHistory('Delete');\n      this.deleteSelectedContents(selection, false);\n      this.reLayout(selection, false);\n      var followCharacter = isTab ? 'Tab' : 'Space';\n      numberFormat = !isLeadingZero ? '%1' + numberFormat : '%1' + text.substring(text.length - 1, text.length);\n      var leadingZeroText = text.substring(text.length - 3, text.length - 1);\n      listLevelPattern = !isLeadingZero ? listLevelPattern : this.getListLevelPattern(leadingZeroText);\n      var listLevel = new WListLevel(undefined);\n      listLevel.listLevelPattern = listLevelPattern;\n      if (listLevelPattern === 'Bullet') {\n        if (text === '*') {\n          listLevel.numberFormat = String.fromCharCode(61623);\n          listLevel.characterFormat.fontFamily = 'Symbol';\n        } else if (text === '-') {\n          listLevel.numberFormat = '-';\n        }\n      } else {\n        listLevel.numberFormat = numberFormat;\n      }\n      listLevel.followCharacter = followCharacter;\n      var leftIndent = selection.paragraphFormat.leftIndent;\n      if (tabValue !== 0 || length !== 0) {\n        listLevel.paragraphFormat.leftIndent = leftIndent + 18 + tabValue + length;\n      } else if (indexInInline > 2) {\n        listLevel.paragraphFormat.leftIndent = leftIndent + (indexInInline - 2) * 2.5 + 18;\n      } else if (leftIndent > 0) {\n        listLevel.paragraphFormat.leftIndent = leftIndent + 18;\n      } else {\n        listLevel.paragraphFormat.leftIndent = 36;\n      }\n      listLevel.paragraphFormat.firstLineIndent = -18;\n      if (!isLeadingZero && text.substring(0, 1) === '0' || leadingZeroText === '00') {\n        listLevel.startAt = 0;\n      } else {\n        listLevel.startAt = 1;\n      }\n      if (!isNullOrUndefined(previousList)) {\n        selection.paragraphFormat.setList(previousList);\n      } else {\n        this.autoConvertList(selection, listLevel);\n      }\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n        this.editorHistory.updateComplexHistory();\n      } else {\n        this.reLayout(selection);\n      }\n    }\n    return convertList;\n  };\n  Editor.prototype.checkNextLevelAutoList = function (text) {\n    var selection = this.documentHelper.selection;\n    var previousList = undefined;\n    var convertList = false;\n    var currentParagraph = selection.start.paragraph;\n    var prevParagraph = selection.getPreviousParagraphBlock(currentParagraph);\n    while (!isNullOrUndefined(prevParagraph) && prevParagraph instanceof ParagraphWidget) {\n      if (prevParagraph.paragraphFormat.listFormat && prevParagraph.paragraphFormat.listFormat.listId !== -1) {\n        var levelNumber = prevParagraph.paragraphFormat.listFormat.listLevelNumber;\n        convertList = this.isConvertList(text, prevParagraph);\n        if (convertList) {\n          this.listLevelNumber = levelNumber;\n          this.isAutoList = true;\n          break;\n        }\n      }\n      prevParagraph = selection.getPreviousParagraphBlock(prevParagraph, true);\n    }\n    if (convertList) {\n      previousList = this.documentHelper.getListById(prevParagraph.paragraphFormat.listFormat.listId);\n    }\n    return previousList;\n  };\n  Editor.prototype.isConvertList = function (text, paragraph) {\n    var convertList = false;\n    var listNumber = this.documentHelper.layout.getListNumber(paragraph.paragraphFormat.listFormat, true);\n    var prevListText = listNumber.substring(0, listNumber.length - 1);\n    var currentListText = text.substring(0, text.length - 1);\n    //check if numberFormat equal\n    var inputString;\n    if (listNumber.substring(listNumber.length - 1) !== text.substring(text.length - 1)) {\n      convertList = false;\n    } else if (currentListText.match(/^[0-9]+$/) && prevListText.match(/^[0-9]+$/)) {\n      inputString = parseInt(currentListText, 10);\n      if (parseInt(prevListText, 10) === inputString || parseInt(prevListText, 10) + 1 === inputString || parseInt(prevListText, 10) + 2 === inputString) {\n        convertList = true;\n      }\n    } else if (currentListText.match(/^[a-zA-Z]+$/) && prevListText.match(/^[a-zA-Z]+$/)) {\n      if (prevListText.charCodeAt(0) === text.charCodeAt(0) || prevListText.charCodeAt(0) + 1 === text.charCodeAt(0) || prevListText.charCodeAt(0) + 2 === text.charCodeAt(0)) {\n        convertList = true;\n      } else if (currentListText.match(/^[MDCLXVImdclxvi]+$/) && prevListText.match(/^[MDCLXVImdclxvi]+$/)) {\n        var prevListNumber = this.getNumber(prevListText.toUpperCase());\n        var currentListNumber = this.getNumber(currentListText.toUpperCase());\n        if (prevListNumber === currentListNumber || prevListNumber + 1 === currentListNumber || prevListNumber + 2 === currentListNumber) {\n          convertList = true;\n        }\n      }\n    }\n    return convertList;\n  };\n  Editor.prototype.getNumber = function (roman) {\n    var conversion = {\n      'M': 1000,\n      'D': 500,\n      'C': 100,\n      'L': 50,\n      'X': 10,\n      'V': 5,\n      'I': 1\n    };\n    var arr = roman.split('');\n    var num = 0;\n    for (var i = 0; i < arr.length; i++) {\n      var currentValue = conversion[arr[i]];\n      var nextValue = conversion[arr[i + 1]];\n      if (currentValue < nextValue) {\n        num -= currentValue;\n      } else {\n        num += currentValue;\n      }\n    }\n    return num;\n  };\n  Editor.prototype.getListLevelPattern = function (value) {\n    switch (value) {\n      case '0':\n      case '1':\n        return 'Arabic';\n      case 'I':\n        return 'UpRoman';\n      case 'i':\n        return 'LowRoman';\n      case 'A':\n        return 'UpLetter';\n      case 'a':\n        return 'LowLetter';\n      case '*':\n      case '-':\n        return 'Bullet';\n      case '00':\n      case '01':\n        return 'LeadingZero';\n      default:\n        return 'None';\n    }\n  };\n  Editor.prototype.autoConvertList = function (selection, listLevel) {\n    var start = selection.start;\n    if (!selection.isForward) {\n      start = selection.end;\n    }\n    var newList = new WList();\n    if (this.documentHelper.lists.length > 0) {\n      newList.listId = this.documentHelper.lists[this.documentHelper.lists.length - 1].listId + 1;\n    } else {\n      newList.listId = 0;\n    }\n    var newAbstractList = new WAbstractList();\n    var layout = this.documentHelper;\n    if (layout.abstractLists.length > 0) {\n      newAbstractList.abstractListId = layout.abstractLists[layout.abstractLists.length - 1].abstractListId + 1;\n    } else {\n      newAbstractList.abstractListId = 0;\n    }\n    newList.abstractListId = newAbstractList.abstractListId;\n    newList.abstractList = newAbstractList;\n    newList.nsid = newAbstractList.nsid = HelperMethods.generateUniqueId(layout.lists);\n    layout.abstractLists.push(newAbstractList);\n    newAbstractList.levels.push(listLevel);\n    listLevel.ownerBase = newAbstractList;\n    selection.paragraphFormat.setList(newList);\n    selection.paragraphFormat.listLevelNumber = 0;\n  };\n  Editor.prototype.checkNumberFormat = function (numberFormat, isBullet, text) {\n    if (isBullet) {\n      return numberFormat === '';\n    } else {\n      var index = text.indexOf(numberFormat);\n      return (numberFormat === '.' || numberFormat === ')' || numberFormat === '>' || numberFormat === '-') && text.substring(index, text.length - 1) === '';\n    }\n  };\n  Editor.prototype.checkLeadingZero = function (text) {\n    var j;\n    var isZero = false;\n    for (var i = 0; i <= text.length - 1; i++) {\n      if (text.charAt(i) === '0') {\n        isZero = true;\n        continue;\n      }\n      j = i;\n      break;\n    }\n    var numberFormat = undefined;\n    if (text.charAt(j) === '1') {\n      numberFormat = text.charAt(j + 1);\n    } else {\n      numberFormat = text.charAt(j);\n    }\n    return isZero && this.checkNumberFormat(numberFormat, false, text);\n  };\n  Editor.prototype.getPageFromBlockWidget = function (block) {\n    var page = undefined;\n    if (block.containerWidget instanceof BodyWidget) {\n      page = block.containerWidget.page;\n    } else if (block.containerWidget instanceof HeaderFooterWidget) {\n      page = block.containerWidget.page;\n    } else if (block.containerWidget instanceof TableCellWidget) {\n      page = block.containerWidget.bodyWidget.page;\n    }\n    return page;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertTextInline = function (element, selection, text, index, skipReLayout) {\n    if (element instanceof TextElementBox) {\n      element.text = HelperMethods.insert(element.text, index, text);\n      if (this.owner.enableTrackChanges) {\n        var revision = element.revisions[0];\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n          this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, revision));\n        }\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      }\n      var paragraph = element.line.paragraph;\n      var lineIndex = paragraph.childWidgets.indexOf(element.line);\n      var elementIndex = element.line.children.indexOf(element);\n      if (element instanceof TextElementBox && element.text.length > 90) {\n        // Here, the text is split based on the maximum character length of 90.\n        HelperMethods.splitWordByMaxLength(element, element.line);\n      }\n      if (isNullOrUndefined(skipReLayout) || !skipReLayout) {\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex, element.line.paragraph.bidi);\n      }\n    } else if (element instanceof ImageElementBox) {\n      this.insertImageText(element, selection, text, index);\n    } else if (element instanceof FieldElementBox) {\n      if (element.fieldType === 0) {\n        this.insertFieldBeginText(element, selection, text, index);\n      } else if (element.fieldType === 2) {\n        this.insertFieldSeparatorText(element, selection, text, index);\n      } else {\n        this.insertFieldEndText(element, selection, text, index);\n      }\n    } else if (element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n      this.insertBookMarkText(element, text);\n    }\n  };\n  Editor.prototype.insertFieldBeginText = function (fieldBegin, selection, text, index) {\n    var spanObj = new TextElementBox();\n    spanObj.text = text;\n    var lineIndex = fieldBegin.line.paragraph.childWidgets.indexOf(fieldBegin.line);\n    var spanIndex = fieldBegin.line.children.indexOf(fieldBegin);\n    if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n      spanIndex++;\n    }\n    spanObj.characterFormat.copyFormat(fieldBegin.characterFormat);\n    fieldBegin.line.children.splice(spanIndex, 0, spanObj);\n    spanObj.line = fieldBegin.line;\n    this.documentHelper.layout.reLayoutParagraph(fieldBegin.line.paragraph, lineIndex, spanIndex);\n  };\n  Editor.prototype.insertBookMarkText = function (element, text) {\n    var spanObj = new TextElementBox();\n    spanObj.text = text;\n    var lineIndex = element.line.paragraph.childWidgets.indexOf(element.line);\n    var spanIndex = element.line.children.indexOf(element);\n    spanObj.characterFormat.copyFormat(element.characterFormat);\n    if (element instanceof EditRangeEndElementBox || element instanceof BookmarkElementBox) {\n      element.line.children.splice(spanIndex, 0, spanObj);\n    } else {\n      element.line.children.splice(spanIndex + 1, 0, spanObj);\n    }\n    spanObj.line = element.line;\n    this.documentHelper.layout.reLayoutParagraph(element.line.paragraph, lineIndex, spanIndex);\n  };\n  Editor.prototype.insertFieldSeparatorText = function (fieldSeparator, selection, text, index) {\n    var previousInline = selection.getPreviousTextInline(fieldSeparator);\n    var nextInline = selection.getNextTextInline(fieldSeparator);\n    var span = new TextElementBox();\n    span.text = text;\n    var spanIndex = fieldSeparator.line.children.indexOf(fieldSeparator);\n    if (index === fieldSeparator.length) {\n      spanIndex++;\n    }\n    if (isNullOrUndefined(previousInline) && isNullOrUndefined(nextInline)) {\n      span.characterFormat.copyFormat(fieldSeparator.line.paragraph.characterFormat);\n    } else if (isNullOrUndefined(previousInline)) {\n      span.characterFormat.copyFormat(nextInline.characterFormat);\n    } else {\n      if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n        var temp = this.getCharacterFormat(this.selection);\n        span.characterFormat.copyFormat(temp);\n      } else {\n        span.characterFormat.copyFormat(previousInline.characterFormat);\n      }\n    }\n    fieldSeparator.line.children.splice(spanIndex, 0, span);\n    span.line = fieldSeparator.line;\n    var lineIndex = fieldSeparator.line.paragraph.childWidgets.indexOf(fieldSeparator.line);\n    this.documentHelper.layout.reLayoutParagraph(fieldSeparator.line.paragraph, lineIndex, spanIndex);\n  };\n  Editor.prototype.insertFieldEndText = function (fieldEnd, selection, text, index) {\n    var span = new TextElementBox();\n    span.text = text;\n    var spanIndex = fieldEnd.line.children.indexOf(fieldEnd);\n    span.characterFormat.copyFormat(fieldEnd.characterFormat);\n    if (selection.isInlineFormFillMode() && index == 0) {\n      // special case to insert text before fieldEnd while filling a text form field.\n      // when spell check enabled the white space and charaters are inserted as saperate text element box and getInline returns fieldEnd with index 0\n      fieldEnd.line.children.splice(spanIndex, 0, span);\n    } else {\n      fieldEnd.line.children.splice(spanIndex + 1, 0, span);\n    }\n    span.line = fieldEnd.line;\n    var lineIndex = fieldEnd.line.paragraph.childWidgets.indexOf(fieldEnd.line);\n    if (this.owner.enableTrackChanges) {\n      var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl;\n      var revisionType = 'Insertion';\n      var isRevisionCombined = this.checkToMapRevisionWithInlineText(fieldEnd, index, span, isBidi, revisionType);\n      if (!isRevisionCombined && span.revisions.length === 0) {\n        isRevisionCombined = this.checkToMapRevisionWithNextNode(fieldEnd.nextNode, span, isBidi, revisionType);\n      }\n    }\n    this.documentHelper.layout.reLayoutParagraph(fieldEnd.line.paragraph, lineIndex, spanIndex);\n  };\n  Editor.prototype.insertImageText = function (image, selection, text, index) {\n    var previousInlineObj = selection.getPreviousTextInline(image);\n    var nextInlineObj = selection.getNextTextInline(image);\n    var line = image.line;\n    var element = new TextElementBox();\n    var paragraph = line.paragraph;\n    var lineIndex = paragraph.childWidgets.indexOf(line);\n    element.text = text;\n    var spanIndex = line.children.indexOf(image);\n    if (index === image.length) {\n      spanIndex++;\n    }\n    if (isNullOrUndefined(previousInlineObj) && isNullOrUndefined(nextInlineObj)) {\n      element.characterFormat.copyFormat(paragraph.characterFormat);\n    } else if (isNullOrUndefined(previousInlineObj)) {\n      element.characterFormat.copyFormat(nextInlineObj.characterFormat);\n    } else {\n      element.characterFormat.copyFormat(previousInlineObj.characterFormat);\n    }\n    line.children.splice(spanIndex, 0, element);\n    element.line = line;\n    this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, spanIndex);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.isListTextSelected = function () {\n    if (this.documentHelper.isListTextSelected) {\n      this.initComplexHistory('ListSelect');\n      if (this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat && this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat.listId !== -1) {\n        this.onApplyList(undefined);\n      }\n    }\n  };\n  //Auto Format and insert Hyperlink Implementation starts\n  Editor.prototype.checkAndConvertToHyperlink = function (selection, isEnter, paragraph) {\n    var text;\n    var span;\n    if (isEnter) {\n      span = paragraph.lastChild.children[paragraph.lastChild.children.length - 1];\n      text = span.text;\n    } else {\n      var indexInInline = 0;\n      var inlineObj = selection.start.currentWidget.getInline(selection.start.offset - 1, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      if (!(inline instanceof TextElementBox)) {\n        return;\n      }\n      span = inline;\n      text = span.text.substring(0, indexInInline);\n    }\n    var index = 0;\n    var tabCharIndex = text.lastIndexOf('\\t');\n    index = tabCharIndex >= 0 ? tabCharIndex + 1 : text.lastIndexOf(' ') + 1;\n    while (span.previousElement instanceof TextElementBox && index === 0) {\n      span = span.previousNode;\n      var previousText = span.text;\n      tabCharIndex = previousText.lastIndexOf('\\t');\n      index = tabCharIndex >= 0 ? tabCharIndex + 1 : previousText.lastIndexOf(' ') + 1;\n      text = span.text + text;\n    }\n    text = text.substring(index);\n    var lowerCaseText = text.toLowerCase();\n    var containsURL = false;\n    if (lowerCaseText.substring(0, 8) === 'file:///' || lowerCaseText.substring(0, 7) === 'http://' && lowerCaseText.length > 7 || lowerCaseText.substring(0, 8) === 'https://' && lowerCaseText.length > 8 || lowerCaseText.substring(0, 4) === 'www.' && lowerCaseText.length > 4 || lowerCaseText.substring(0, 3) === '\\\\' && lowerCaseText.length > 3 || lowerCaseText.substring(0, 7) === 'mailto:' && lowerCaseText.length > 7) {\n      containsURL = true;\n      if (lowerCaseText.substring(0, 4) === 'www.' && lowerCaseText.length > 4) {\n        text = 'http://' + text;\n      }\n    } else {\n      var atIndex = text.indexOf('@');\n      var dotIndex = text.indexOf('.');\n      if (atIndex > 0 && atIndex < dotIndex && dotIndex < text.length - 1) {\n        containsURL = true;\n        text = 'mailto:' + text;\n      }\n    }\n    if (containsURL) {\n      var startPos = new TextPosition(this.documentHelper.owner);\n      startPos.setPositionParagraph(span.line, span.line.getOffset(span, index));\n      var endPos = new TextPosition(this.documentHelper.owner);\n      if (isEnter) {\n        endPos.setPositionParagraph(span.line, span.line.getEndOffset());\n      } else {\n        if (selection.end.currentWidget.children.length === 0 && selection.end.offset === 0) {\n          var prevLine = selection.end.currentWidget.previousLine;\n          endPos.setPositionParagraph(prevLine, prevLine.getEndOffset());\n        } else {\n          endPos.setPositionParagraph(selection.end.currentWidget, selection.end.offset - 1);\n        }\n      }\n      this.autoFormatHyperlink(selection, text, startPos, endPos);\n    }\n  };\n  Editor.prototype.autoFormatHyperlink = function (selection, url, startPosition, endPosition) {\n    if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n      return;\n    }\n    this.initComplexHistory('AutoFormatHyperlink');\n    var blockInfo = this.selection.getParagraphInfo(startPosition);\n    var start = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      this.editorHistory.currentHistoryInfo.insertPosition = start;\n    }\n    // Moves the selection to URL text start and end position.\n    selection.start.setPositionInternal(startPosition);\n    selection.end.setPositionInternal(endPosition);\n    // Preserves the character format for hyperlink field.\n    var temp = this.getCharacterFormat(selection);\n    var format = new WCharacterFormat();\n    format.copyFormat(temp);\n    var fieldEnd = this.createHyperlinkElement(url, startPosition, endPosition, format);\n    // Moves the selection to the end of field end position.\n    selection.start.setPositionParagraph(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, 1));\n    // Moves to next text position. (To achieve common behavior for space and enter).\n    selection.start.moveNextPosition();\n    selection.end.setPositionInternal(selection.start);\n    blockInfo = this.selection.getParagraphInfo(selection.end);\n    var end = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      this.editorHistory.currentHistoryInfo.endPosition = end;\n      this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.editorHistory.updateComplexHistory();\n      this.isSkipOperationsBuild = false;\n      this.reLayout(selection);\n    } else {\n      this.updateComplexWithoutHistory(0, start, end);\n    }\n  };\n  Editor.prototype.appylingHyperlinkFormat = function (selection) {\n    this.initHistory('Underline');\n    this.updateCharacterFormatWithUpdate(selection, 'underline', 'Single', false);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.reLayout(selection, false);\n    // Applies font color for field result.\n    this.initHistory('FontColor');\n    this.isForHyperlinkFormat = true;\n    this.updateCharacterFormatWithUpdate(selection, 'fontColor', '#0563c1', false);\n    this.isForHyperlinkFormat = false;\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.reLayout(selection, false);\n  };\n  Editor.prototype.createHyperlinkElement = function (url, startPosition, endPosition, format) {\n    var selection = this.selection;\n    this.documentHelper.layout.allowLayout = false;\n    this.documentHelper.layout.isReplaceAll = true;\n    this.appylingHyperlinkFormat(selection);\n    //this.documentHelper.layout.allowLayout = true;\n    // Adds the field end at the URL text end position.\n    var fieldEnd = new FieldElementBox(1);\n    fieldEnd.characterFormat.copyFormat(format);\n    fieldEnd.line = selection.end.currentWidget;\n    selection.start.setPositionInternal(selection.end);\n    // this.insertElementInCurrentLine(selection, fieldEnd, true);\n    this.initInsertInline(fieldEnd);\n    // Moves the selection to URL text start position.        \n    selection.start.setPositionInternal(startPosition);\n    selection.end.setPositionInternal(selection.start);\n    // Adds field begin, field code and field separator at the URL text start position.\n    var begin = this.insertHyperlinkfield(selection, format, url);\n    var lineIndex = selection.start.paragraph.childWidgets.indexOf(begin.line);\n    var index = begin.line.children.indexOf(begin);\n    fieldEnd.linkFieldCharacter(this.documentHelper);\n    this.documentHelper.layout.isReplaceAll = false;\n    this.documentHelper.layout.allowLayout = true;\n    this.documentHelper.layout.reLayoutParagraph(selection.start.paragraph, lineIndex, index);\n    return fieldEnd;\n  };\n  Editor.prototype.insertHyperlinkfield = function (selection, format, url, isBookmark) {\n    // Adds field begin, field code and field separator at the URL text start position.\n    var begin = new FieldElementBox(0);\n    begin.characterFormat.copyFormat(format);\n    begin.line = selection.start.currentWidget;\n    this.initInsertInline(begin);\n    var span = new TextElementBox();\n    span.characterFormat.copyFormat(format);\n    if (isBookmark) {\n      span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n    } else {\n      span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n    }\n    span.line = selection.start.currentWidget;\n    this.initInsertInline(span);\n    var separator = new FieldElementBox(2);\n    separator.characterFormat.copyFormat(format);\n    separator.line = selection.start.currentWidget;\n    this.initInsertInline(separator);\n    return begin;\n  };\n  /**\n   * @private\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.unlinkRangeFromRevision = function (inline, removeCollection) {\n    for (var i = 0; i < inline.revisions.length; i++) {\n      var currentRevision = inline.revisions[i];\n      var rangeIndex = currentRevision.range.indexOf(inline);\n      if (rangeIndex >= 0) {\n        currentRevision.range.splice(rangeIndex, 1);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n      }\n      if (currentRevision.range.length === 0 && removeCollection) {\n        this.owner.revisions.remove(currentRevision);\n        if (this.isRemoveRevision && this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n          this.documentHelper.revisionsInternal.remove(currentRevision.revisionID);\n          this.owner.trackChangesPane.updateTrackChanges();\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.unlinkWholeRangeInRevision = function (item, revision) {\n    var currentRevision = revision;\n    item.revisions.splice(item.revisions.indexOf(item), 1);\n    var rangeLength = currentRevision.range.length;\n    for (var rangeIndex = 0; rangeIndex < rangeLength; rangeIndex++) {\n      currentRevision.range.splice(0, 1);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n    }\n    if (currentRevision.range.length === 0) {\n      this.owner.revisions.remove(currentRevision);\n      if (this.isRemoveRevision && this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n        this.documentHelper.revisionsInternal.remove(currentRevision.revisionID);\n        this.owner.trackChangesPane.updateTrackChanges();\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.unLinkFieldCharacter = function (inline) {\n    if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n      if (inline.fieldEnd) {\n        if (this.documentHelper) {\n          this.documentHelper.fieldToLayout = inline;\n          this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n        }\n        // inline.line.paragraph.addFieldCharacter(inline.fieldEnd);\n        if (inline.fieldEnd) {\n          inline.fieldEnd.fieldBegin = undefined;\n        }\n        inline.fieldEnd = undefined;\n      }\n    }\n    if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n      if (!isNullOrUndefined(inline.fieldEnd)) {\n        if (this.documentHelper) {\n          this.documentHelper.fieldToLayout = inline.fieldBegin;\n          this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n        }\n        inline.fieldBegin.fieldSeparator = undefined;\n        inline.fieldEnd.fieldSeparator = undefined;\n      }\n    } else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n      if (inline.fieldBegin) {\n        if (!isNullOrUndefined(this.documentHelper)) {\n          this.documentHelper.fieldToLayout = inline.fieldBegin;\n          this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n        }\n        var fieldIndex = this.documentHelper.fields.indexOf(inline.fieldBegin);\n        if (fieldIndex !== -1) {\n          this.documentHelper.fields.splice(fieldIndex, 1);\n        }\n        var formFieldIndex = this.documentHelper.formFields.indexOf(inline.fieldBegin);\n        if (formFieldIndex !== -1) {\n          this.documentHelper.formFields.splice(formFieldIndex, 1);\n        }\n        inline.fieldBegin.fieldEnd = undefined;\n        inline.fieldBegin = undefined;\n      }\n    }\n  };\n  Editor.prototype.getCharacterFormat = function (selection) {\n    if (selection.start.paragraph.isEmpty()) {\n      return selection.start.paragraph.characterFormat;\n    } else {\n      var info = selection.start.currentWidget.getInline(selection.start.offset + 1, 0);\n      return info.element.characterFormat;\n    }\n  };\n  /**\n   * Inserts the Hyperlink.\n   *\n   * @param {string} address Specify the Hyperlink URL to be inserted.\n   * @param {string} displayText Specify the display text for the hyperlink\n   * @param {string} screenTip Specify the screen tip text.\n   * @returns {void}\n   */\n  Editor.prototype.insertHyperlink = function (address, displayText, screenTip) {\n    if (HelperMethods.startsWith(address, 'http://') || HelperMethods.startsWith(address, 'https://')) {\n      address = address.replace(/\\s/g, \"\");\n    }\n    if (isNullOrUndefined(displayText)) {\n      displayText = address;\n    }\n    if (!isNullOrUndefined(screenTip)) {\n      address = address + '\\\" \\\\o \\\"' + screenTip;\n    }\n    this.insertHyperlinkInternal(address, displayText, this.owner.selectionModule.text !== displayText, false);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.insertHyperlinkInternal = function (url, displayText, remove, isBookmark) {\n    var selection = this.documentHelper.selection;\n    if (selection.start.paragraph.associatedCell !== selection.end.paragraph.associatedCell) {\n      return;\n    }\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    // if selection end is covering paraMark exclude paraMark\n    if (endPosition.offset == endPosition.paragraph.getLength() + 1) {\n      endPosition.movePreviousPosition();\n    }\n    if (remove) {\n      //Empty selection Hyperlink insert\n      this.insertHyperlinkInternalInternal(selection, url, displayText, isBookmark);\n    } else {\n      this.documentHelper.layout.allowLayout = false;\n      //Non-Empty Selection- change the selected text to Field       \n      // this.preservedFontCol = this.getFontColor();\n      var fieldStartPosition = new TextPosition(this.documentHelper.owner);\n      fieldStartPosition.setPositionInternal(startPosition);\n      var temp = this.getCharacterFormat(selection);\n      var format = new WCharacterFormat(undefined);\n      format.copyFormat(temp);\n      this.initComplexHistory('InsertHyperlink');\n      var blockInfo = this.selection.getParagraphInfo(startPosition);\n      var start = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n        this.editorHistory.currentHistoryInfo.insertPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      }\n      this.appylingHyperlinkFormat(selection);\n      startPosition.setPositionInternal(endPosition);\n      // Adds the field end at the URL text end position.\n      var fieldEnd = new FieldElementBox(1);\n      fieldEnd.characterFormat.copyFormat(format);\n      fieldEnd.line = selection.end.currentWidget;\n      startPosition.setPositionInternal(endPosition);\n      // this.insertElementInCurrentLine(selection, fieldEnd, true);\n      this.initInsertInline(fieldEnd);\n      // Moves the selection to URL text start position.        \n      startPosition.setPositionInternal(fieldStartPosition);\n      endPosition.setPositionInternal(startPosition);\n      // Adds field begin, field code and field separator at the URL text start position.\n      var begin = this.insertHyperlinkfield(selection, format, url, isBookmark);\n      fieldEnd.linkFieldCharacter(this.documentHelper);\n      var lineIndex = selection.start.paragraph.childWidgets.indexOf(begin.line);\n      var index = begin.line.children.indexOf(begin);\n      this.documentHelper.layout.allowLayout = true;\n      this.documentHelper.layout.reLayoutParagraph(selection.start.paragraph, lineIndex, index);\n      var lineWidget = fieldEnd.line;\n      selection.selects(lineWidget, lineWidget.getOffset(fieldEnd, fieldEnd.length), true);\n      blockInfo = this.selection.getParagraphInfo(endPosition);\n      var end = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n        this.editorHistory.currentHistoryInfo.endPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        this.editorHistory.updateComplexHistory();\n      } else {\n        this.updateComplexWithoutHistory(1, start, end);\n      }\n    }\n  };\n  Editor.prototype.insertHyperlinkInternalInternal = function (selection, url, displayText, isBookmark) {\n    if (isNullOrUndefined(selection.start)) {\n      return;\n    }\n    if (this.editHyperlink(selection, url, displayText)) {\n      return;\n    }\n    var commentStarts = this.checkAndRemoveComments();\n    // Preserves the character format for hyperlink field.\n    var temp = this.getCharacterFormat(selection);\n    this.initHistory('InsertHyperlink');\n    var isRemoved = true;\n    if (!selection.isEmpty) {\n      var isTrackEnabled = this.owner.enableTrackChanges;\n      this.owner.enableTrackChanges = false;\n      isRemoved = this.removeSelectedContents(selection);\n      this.owner.enableTrackChanges = isTrackEnabled;\n    }\n    if (isRemoved) {\n      var format = new WCharacterFormat();\n      format.copyFormat(temp);\n      this.insertHyperlinkByFormat(selection, url, displayText, format, isBookmark);\n    }\n    this.updateHistoryForComments(commentStarts);\n  };\n  Editor.prototype.insertHyperlinkByFormat = function (selection, url, displayText, format, isBookmark) {\n    this.updateInsertPosition();\n    selection.owner.isShiftingEnabled = true;\n    var indexInInline = 0;\n    //let initial: number = indexInInline;\n    var element = [];\n    var fieldBegin = new FieldElementBox(0);\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n    }\n    element.push(fieldBegin);\n    var span = new TextElementBox();\n    if (isBookmark) {\n      span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n    } else {\n      span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n    }\n    element.push(span);\n    var fieldSeparator = new FieldElementBox(2);\n    element.push(fieldSeparator);\n    if (!isNullOrUndefined(displayText) && displayText !== '') {\n      span = new TextElementBox();\n      span.characterFormat.copyFormat(format);\n      span.characterFormat.underline = 'Single';\n      span.characterFormat.fontColor = '#0563c1';\n      span.text = displayText;\n      element.push(span);\n    }\n    var fieldEnd = new FieldElementBox(1);\n    element.push(fieldEnd);\n    fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n    fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n    fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n    this.insertElement(element);\n    //let paragraph: ParagraphWidget = selection.start.paragraph;\n    fieldEnd.linkFieldCharacter(this.documentHelper);\n    if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n      this.documentHelper.fields.push(fieldBegin);\n    }\n    //let offset: number = fieldEnd.line.getOffset(fieldEnd, 1);\n    selection.selects(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, fieldEnd.length), true);\n    this.updateEndPosition();\n    this.reLayout(selection, true);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.initInsertInline = function (element, insertHyperlink, isInsertRemovedBookamrk) {\n    var selection = this.selection;\n    var isSelectionUpdated = false;\n    // if (!this.isInsertingTOC && isInsertRemovedBookamrk && element instanceof BookmarkElementBox) {\n    //     selection.start.offset--;\n    //     selection.end.offset--;\n    //     isSelectionUpdated = true;\n    // }\n    this.initHistory('InsertInline');\n    this.insertInlineInSelection(selection, element);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    // if (isSelectionUpdated) {\n    //     selection.start.offset++;\n    //     selection.end.offset++;\n    // }\n  };\n  Editor.prototype.insertElementInCurrentLine = function (selection, inline) {\n    if (this.checkIsNotRedoing()) {\n      selection.owner.isShiftingEnabled = true;\n    }\n    if (!selection.isEmpty) {\n      this.removeSelectedContents(selection);\n    }\n    this.updateInsertPosition();\n    this.insertElement([inline]);\n    if (this.checkEndPosition(selection)) {\n      this.updateHistoryPosition(selection.start, false);\n    }\n    this.fireContentChange();\n  };\n  /**\n   * Edit Hyperlink\n   * @param {Selection} selection - Specified the selection\n   * @param {string} url - Specifies the url\n   * @param {string} displayText - Specified the display test\n   * @param {boolean} isBookmark - Specifies is bookmark\n   * @private\n   * @returns {boolean} - Return tru of hyperlink is edited.\n   */\n  Editor.prototype.editHyperlink = function (selection, url, displayText, isBookmark) {\n    var fieldBegin = selection.getHyperlinkField();\n    if (isNullOrUndefined(fieldBegin)) {\n      return false;\n    }\n    this.initHistory('InsertHyperlink');\n    this.editHyperlinkInternal = isNullOrUndefined(this.editorHistory) || this.editorHistory && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo);\n    var fieldResult = '';\n    var isNestedField = false;\n    // Preserves the character format for hyperlink field.\n    var temp = this.getCharacterFormat(selection);\n    var format = new WCharacterFormat();\n    format.copyFormat(temp);\n    var fieldSeparator = undefined;\n    if (!isNullOrUndefined(fieldBegin.fieldSeparator)) {\n      fieldSeparator = fieldBegin.fieldSeparator;\n      var fieldObj = selection.getHyperlinkDisplayText(fieldBegin.fieldSeparator.line.paragraph, fieldBegin.fieldSeparator, fieldBegin.fieldEnd, isNestedField, format);\n      fieldResult = fieldObj.displayText;\n      isNestedField = fieldObj.isNestedField;\n      format = fieldObj.format;\n    }\n    var offset = fieldBegin.line.getOffset(fieldBegin, 0);\n    selection.start.setPositionParagraph(fieldBegin.line, offset);\n    offset = fieldBegin.fieldEnd.line.getOffset(fieldBegin.fieldEnd, 1);\n    selection.end.setPositionParagraph(fieldBegin.fieldEnd.line, offset);\n    this.skipFieldDeleteTracking = true;\n    this.deleteSelectedContents(selection, false);\n    if (!isNestedField && fieldResult !== displayText || isNullOrUndefined(fieldSeparator)) {\n      this.insertHyperlinkByFormat(selection, url, displayText, format, isBookmark);\n      this.skipFieldDeleteTracking = false;\n    } else {\n      //Modify the new hyperlink url. Inserts field begin, url and field separator.\n      this.updateInsertPosition();\n      var newFieldBegin = new FieldElementBox(0);\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.currentBaseHistoryInfo.fieldBegin = newFieldBegin;\n        this.editorHistory.currentBaseHistoryInfo.isEditHyperlink = true;\n      }\n      newFieldBegin.characterFormat.copyFormat(fieldBegin.characterFormat);\n      newFieldBegin.line = selection.start.currentWidget;\n      this.insertInlineInternal(newFieldBegin);\n      var span = new TextElementBox();\n      span.characterFormat.copyFormat(fieldBegin.characterFormat);\n      if (isBookmark) {\n        span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n      } else {\n        span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n      }\n      span.line = selection.start.currentWidget;\n      this.insertInlineInternal(span);\n      var nodes = this.editorHistory && this.editorHistory.currentBaseHistoryInfo ? this.editorHistory.currentBaseHistoryInfo.removedNodes : this.nodes;\n      this.insertClonedFieldResult(selection, nodes, fieldSeparator);\n      var fieldEnd = selection.end.currentWidget.getInline(selection.end.offset, 0).element;\n      fieldEnd.linkFieldCharacter(this.documentHelper);\n      this.skipFieldDeleteTracking = false;\n      var paragraph = newFieldBegin.line.paragraph;\n      var lineIndex = newFieldBegin.line.paragraph.childWidgets.indexOf(newFieldBegin.line);\n      var elementIndex = newFieldBegin.line.children.indexOf(newFieldBegin);\n      this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n      offset = newFieldBegin.fieldEnd.line.getOffset(newFieldBegin.fieldEnd, 1);\n      selection.selects(newFieldBegin.fieldEnd.line, offset, true);\n      this.updateEndPosition();\n      this.reLayout(selection, true);\n    }\n    this.editHyperlinkInternal = false;\n    this.nodes = [];\n    return true;\n  };\n  Editor.prototype.insertClonedFieldResult = function (selection, nodes, fieldSeparator) {\n    var fieldEnd;\n    var isStarted = false;\n    for (var i = nodes.length - 1; i > -1; i--) {\n      var node = nodes[i];\n      if (!isStarted) {\n        if (fieldSeparator === node) {\n          isStarted = true;\n        } else {\n          if (node instanceof ParagraphWidget && node === fieldSeparator.line.paragraph) {\n            isStarted = true;\n            var paragraph = undefined;\n            if (i === nodes.length - 1) {\n              paragraph = selection.start.paragraph;\n              var fieldParagraph = fieldSeparator.line.paragraph;\n              this.getClonedFieldResultWithSel(fieldParagraph, selection, fieldSeparator);\n            } else {\n              paragraph = this.getClonedFieldResult(fieldSeparator.line.paragraph, fieldSeparator);\n              this.insertParagraph(paragraph, true);\n            }\n            selection.selectParagraphInternal(selection.getNextParagraphBlock(paragraph), true);\n          }\n          continue;\n        }\n      }\n      if (node instanceof ElementBox) {\n        this.insertInlineInternal(node.clone());\n      } else if (node instanceof BlockWidget) {\n        this.insertBlock(node.clone());\n      }\n      // else if (node instanceof WSection)\n      //     editor.insertSection((node as WSection)._Clone());\n    }\n  };\n  Editor.prototype.getClonedFieldResultWithSel = function (paragraph, selection, fieldSeparator) {\n    var lineIndex = paragraph.childWidgets.indexOf(fieldSeparator.line);\n    var elementIndex = paragraph.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n    for (var j = lineIndex; j < paragraph.childWidgets.length; j++) {\n      var lineWidget = paragraph.childWidgets[j];\n      if (j !== lineIndex) {\n        elementIndex = 0;\n      }\n      for (var i = elementIndex; i < lineWidget.children.length; i++) {\n        this.insertInlineInternal(lineWidget.children[i].clone());\n      }\n    }\n  };\n  Editor.prototype.getClonedFieldResult = function (curParagraph, fieldSeparator) {\n    var paragraph = new ParagraphWidget();\n    paragraph.characterFormat.copyFormat(curParagraph.characterFormat);\n    paragraph.paragraphFormat.copyFormat(curParagraph.paragraphFormat);\n    var lineIndex = curParagraph.childWidgets.indexOf(fieldSeparator.line);\n    var elementIndex = curParagraph.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n    for (var j = lineIndex; j < curParagraph.childWidgets.length; j++) {\n      var lineWidget = curParagraph.childWidgets[j];\n      if (j !== lineIndex) {\n        elementIndex = 0;\n      }\n      for (var i = elementIndex; i < lineWidget.children.length; i++) {\n        paragraph.childWidgets[0].children.push(lineWidget.children[i]);\n      }\n    }\n    return paragraph;\n  };\n  /**\n   * Removes the hyperlink if selection is within hyperlink.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.removeHyperlink = function () {\n    if (this.owner.isReadOnlyMode) {\n      return;\n    }\n    var selection = this.selection;\n    var fieldBegin = selection.getHyperlinkField();\n    if (isNullOrUndefined(fieldBegin)) {\n      return;\n    }\n    var fieldEnd = fieldBegin.fieldEnd;\n    var fieldSeparator = fieldBegin.fieldSeparator;\n    var fieldStartPosition = new TextPosition(selection.owner);\n    fieldStartPosition.setPositionParagraph(fieldBegin.line, fieldBegin.line.getOffset(fieldBegin, 0));\n    var blockInfo = this.selection.getParagraphInfo(fieldStartPosition);\n    var fieldStartString = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    var fieldSeparatorPosition = new TextPosition(selection.owner);\n    fieldSeparatorPosition.setPositionParagraph(fieldSeparator.line, fieldSeparator.line.getOffset(fieldSeparator, fieldSeparator.length));\n    blockInfo = this.selection.getParagraphInfo(fieldSeparatorPosition);\n    var fieldSeparatorString = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    this.initComplexHistory('RemoveHyperlink');\n    selection.start.setPositionParagraph(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, 0));\n    blockInfo = this.selection.getParagraphInfo(selection.start);\n    var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    selection.end.setPositionParagraph(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, 1));\n    this.delete();\n    selection.start.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(fieldSeparatorString));\n    this.initHistory('Underline');\n    this.updateCharacterFormatWithUpdate(selection, 'underline', 'None', false);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    selection.end.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(startIndex));\n    // Applies font color for field result.\n    this.initHistory('FontColor');\n    this.updateCharacterFormatWithUpdate(selection, 'fontColor', undefined, false);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.reLayout(selection, false);\n    selection.end.setPositionInternal(selection.start);\n    selection.start.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(fieldStartString));\n    this.initHistory('Delete');\n    this.deleteSelectedContents(selection, false);\n    this.reLayout(selection, true);\n    // Bug 873011: Combined the field begin and field end revisions to preserve single tracking in track changes pane.\n    this.combineElementRevision(fieldSeparator.revisions, fieldEnd.revisions);\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n      this.editorHistory.updateComplexHistory();\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.updateHyperlinkFormat = function (selection) {\n    var fieldBegin = selection.getHyperlinkField();\n    if (isNullOrUndefined(fieldBegin)) {\n      return;\n    }\n    var fieldEnd = fieldBegin.fieldEnd;\n    var fieldSeparator = fieldBegin.fieldSeparator;\n    selection.start.setPositionParagraph(fieldSeparator.line, fieldSeparator.line.getOffset(fieldSeparator, fieldSeparator.length));\n    selection.end.setPositionParagraph(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, 0));\n    this.initHistory('Underline');\n    this.updateCharacterFormatWithUpdate(selection, 'underline', 'Single', false);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.reLayout(selection, false);\n    // Applies font color for field result.\n    this.initHistory('FontColor');\n    this.isForHyperlinkFormat = true;\n    this.updateCharacterFormatWithUpdate(selection, 'fontColor', '#0563c1', false);\n    this.isForHyperlinkFormat = false;\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.reLayout(selection, false);\n  };\n  //Paste Implementation starts\n  /**\n   * Paste copied clipboard content on Paste event\n   * @param {ClipboardEvent} event - Specifies the paste event\n   * @param {any} pasteWindow - Specifies the paste window\n   * @private\n   */\n  Editor.prototype.pasteInternal = function (event, pasteWindow) {\n    this.currentPasteOptions = this.owner.defaultPasteOption;\n    this.isHtmlPaste = false;\n    if (this.documentHelper.owner.enableLocalPaste) {\n      this.paste();\n    } else {\n      this.selection.isViewPasteOptions = true;\n      if (this.selection.pasteElement) {\n        this.selection.pasteElement.style.display = 'none';\n      }\n      if (isNullOrUndefined(pasteWindow)) {\n        pasteWindow = window;\n      }\n      var textContent = '';\n      var htmlContent = '';\n      var rtfContent = '';\n      var clipbordData = pasteWindow.clipboardData ? pasteWindow.clipboardData : event.clipboardData;\n      if (Browser.info.name !== 'msie') {\n        rtfContent = clipbordData.getData('Text/Rtf');\n        htmlContent = clipbordData.getData('Text/Html');\n      }\n      this.copiedTextContent = textContent = HelperMethods.sanitizeString(clipbordData.getData('Text'));\n      this.previousCharFormat = new WCharacterFormat();\n      this.previousCharFormat.copyFormat(this.selection.start.paragraph.characterFormat);\n      this.previousParaFormat = new WParagraphFormat();\n      this.previousParaFormat.copyFormat(this.selection.start.paragraph.paragraphFormat);\n      if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.selection.isInlineFormFillMode()) {\n        htmlContent = '';\n        rtfContent = '';\n      }\n      if (rtfContent !== '') {\n        this.pasteAjax(rtfContent, '.rtf');\n      } else if (htmlContent !== '') {\n        this.isHtmlPaste = true;\n        var doc = new DOMParser().parseFromString(htmlContent, 'text/html');\n        var result = new XMLSerializer().serializeToString(doc);\n        result = result.replace(/<!--StartFragment-->/gi, '');\n        result = result.replace(/<!--EndFragment-->/gi, '');\n        // Removed namesapce which is added when using XMLSerializer.\n        // When copy content from MS Word, the clipboard html content already have same namespace which cause duplicate namespace\n        // Here, removed the duplicate namespace.\n        result = result.replace('xmlns=\"http://www.w3.org/1999/xhtml\"', '');\n        var substringToRemove = 'iscreatedusinghtmlspantag';\n        if (result.indexOf(substringToRemove) !== -1) {\n          var parser = new DOMParser();\n          var doc_1 = parser.parseFromString(result, 'text/html');\n          var paragraphs = doc_1.querySelectorAll('.iscreatedusinghtmlspantag');\n          var lastPElement = doc_1.querySelector('body > p:last-child');\n          if (paragraphs.length > 0 && lastPElement && lastPElement === paragraphs[paragraphs.length - 1]) {\n            paragraphs[paragraphs.length - 1].remove();\n            result = doc_1.documentElement.outerHTML;\n          }\n        }\n        this.pasteAjax(result, '.html');\n      } else if (textContent !== null && textContent !== '') {\n        this.selection.currentPasteAction = 'TextOnly';\n        this.pasteContents(textContent);\n        this.applyPasteOptions(this.currentPasteOptions, true);\n        this.copiedContent = undefined;\n        this.documentHelper.editableDiv.innerHTML = '';\n      } else if (Browser.info.name !== 'msie' && clipbordData.items !== undefined && clipbordData.items.length !== 0) {\n        for (var m = 0; m < clipbordData.items.length; m++) {\n          var item = clipbordData.items[m];\n          if (item.type === 'image/png' || item.type === \"image/svg+xml\" && item.kind !== 'string') {\n            this.pasteImage(item.getAsFile());\n          }\n        }\n      } else if (Browser.info.name === 'msie' && clipbordData.files !== undefined && clipbordData.files.length !== 0 && clipbordData.files[0].type === 'image/png') {\n        this.pasteImage(clipbordData.files[0]);\n      }\n      // if (textContent !== '') {\n      //     this.pasteContents(textContent);\n      //     this.documentHelper.editableDiv.innerHTML = '';\n      // }\n    }\n  };\n  Editor.prototype.pasteImage = function (imgFile) {\n    var _this = this;\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      _this.onPasteImage(fileReader.result);\n    };\n    fileReader.readAsDataURL(imgFile);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onPasteImage = function (data) {\n    var image = document.createElement('img');\n    var editor = this;\n    image.addEventListener('load', function () {\n      editor.insertImageInternal(data, true, this.width, this.height, this.alt);\n    });\n    image.src = data;\n  };\n  Editor.prototype.pasteAjax = function (content, type) {\n    var proxy = this;\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    var formObject = {\n      content: content,\n      type: type\n    };\n    var editor = this;\n    this.pasteRequestHandler = new XmlHttpRequestHandler();\n    this.owner.documentHelper.viewerContainer.focus();\n    showSpinner(this.owner.element);\n    this.pasteRequestHandler.url = proxy.owner.serviceUrl + this.owner.serverActionSettings.systemClipboard;\n    this.pasteRequestHandler.responseType = 'json';\n    this.pasteRequestHandler.contentType = 'application/json;charset=UTF-8';\n    this.pasteRequestHandler.customHeaders = proxy.owner.headers;\n    this.pasteRequestHandler.onSuccess = this.pasteFormattedContent.bind(this);\n    this.pasteRequestHandler.onFailure = this.onPasteFailure.bind(this);\n    this.pasteRequestHandler.onError = this.onPasteFailure.bind(this);\n    var httprequestEventArgs = {\n      serverActionType: 'SystemClipboard',\n      headers: this.owner.headers,\n      timeout: 0,\n      cancel: false,\n      withCredentials: false,\n      clipboardData: formObject\n    };\n    this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n    if (httprequestEventArgs.cancel) {\n      hideSpinner(this.owner.element);\n    } else {\n      this.pasteRequestHandler.send(formObject, httprequestEventArgs);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.pasteFormattedContent = function (result) {\n    var _this = this;\n    if (this.isPasteListUpdated) {\n      this.isPasteListUpdated = false;\n    }\n    this.pasteContents(isNullOrUndefined(result.data) ? this.copiedTextContent : HelperMethods.getSfdtDocument(result.data));\n    if (this.currentPasteOptions !== 'KeepSourceFormatting') {\n      this.applyPasteOptions(this.currentPasteOptions);\n    }\n    hideSpinner(this.owner.element);\n    setTimeout(function () {\n      if (!isNullOrUndefined(_this.viewer)) {\n        _this.documentHelper.isScrollHandler = true;\n        _this.isPasteContentCheck = true;\n        _this.viewer.updateScrollBars();\n        _this.documentHelper.isScrollHandler = false;\n        _this.isPasteContentCheck = false;\n      }\n    }, 0);\n  };\n  Editor.prototype.onPasteFailure = function (result) {\n    this.owner.fireServiceFailure(result);\n    console.error(result.status, result.statusText);\n    hideSpinner(this.owner.element);\n    this.documentHelper.updateFocus();\n  };\n  /**\n   * Pastes the provided sfdt content or the data present in local clipboard if any.\n   *\n   * @param {string} sfdt Specifies the sfdt content to paste at current position.\n   * @param {PasteOptions} defaultPasteOption Specifies the paste options.\n   * @returns {void}\n   */\n  Editor.prototype.paste = function (sfdt, defaultPasteOption) {\n    var _this = this;\n    if (isNullOrUndefined(sfdt)) {\n      sfdt = this.owner.enableLocalPaste ? HelperMethods.sanitizeString(this.copiedData) : undefined;\n    }\n    if (!isNullOrUndefined(defaultPasteOption)) {\n      this.currentPasteOptions = defaultPasteOption;\n    }\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    if (sfdt) {\n      var document_1 = HelperMethods.getSfdtDocument(sfdt);\n      this.pasteContents(document_1);\n      this.applyPasteOptions(this.currentPasteOptions);\n      if (this.chartType) {\n        setTimeout(function () {\n          if (!isNullOrUndefined(_this.viewer)) {\n            _this.viewer.updateScrollBars();\n          }\n        }, 30);\n        this.chartType = false;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getUniqueListOrAbstractListId = function (isList) {\n    if (isList && this.documentHelper.lists.length) {\n      var sortedList = this.documentHelper.lists.slice().sort(function (a, b) {\n        return a.listId - b.listId;\n      });\n      return sortedList[sortedList.length - 1].listId + 1;\n    } else if (this.documentHelper.abstractLists.length) {\n      var sortedAbsList = this.documentHelper.abstractLists.slice().sort(function (a, b) {\n        return a.abstractListId - b.abstractListId;\n      });\n      return sortedAbsList[sortedAbsList.length - 1].abstractListId + 1;\n    }\n    return 0;\n  };\n  Editor.prototype.checkSameLevelFormat = function (lstLevelNo, abstractList, list) {\n    return abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][listLevelPatternProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].listLevelPattern && abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][numberFormatProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].numberFormat && (abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][listLevelPatternProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 10 : 'Bullet') || abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][startAtProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].startAt);\n  };\n  Editor.prototype.listLevelPatternInCollection = function (lstLevelNo, listLevel) {\n    var _this = this;\n    return this.documentHelper.lists.filter(function (list) {\n      return list.abstractList.levels[lstLevelNo].listLevelPattern === listLevel[listLevelPatternProperty[_this.keywordIndex]] && list.abstractList.levels[lstLevelNo].numberFormat === listLevel[numberFormatProperty[_this.keywordIndex]] && (listLevel[listLevelPatternProperty[_this.keywordIndex]] === (_this.keywordIndex == 1 ? 10 : 'Bullet') || list.abstractList.levels[lstLevelNo].startAt === listLevel[startAtProperty[_this.keywordIndex]]) && _this.isEqualParagraphFormat(list.abstractList.levels[lstLevelNo].paragraphFormat, listLevel[paragraphFormatProperty[_this.keywordIndex]]);\n    })[0];\n  };\n  Editor.prototype.isEqualParagraphFormat = function (source, dest) {\n    if (isNullOrUndefined(dest[leftIndentProperty[this.keywordIndex]]) && source.leftIndent !== 0 || !isNullOrUndefined(dest[leftIndentProperty[this.keywordIndex]]) && Math.round(source.leftIndent) !== Math.round(dest[leftIndentProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[rightIndentProperty[this.keywordIndex]]) && source.rightIndent !== 0 || !isNullOrUndefined(dest[rightIndentProperty[this.keywordIndex]]) && Math.round(source.rightIndent) !== Math.round(dest[rightIndentProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[firstLineIndentProperty[this.keywordIndex]]) && source.firstLineIndent !== 0 || !isNullOrUndefined(dest[firstLineIndentProperty[this.keywordIndex]]) && Math.round(source.firstLineIndent) !== Math.round(dest[firstLineIndentProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[beforeSpacingProperty[this.keywordIndex]]) && source.beforeSpacing !== 0 || !isNullOrUndefined(dest[beforeSpacingProperty[this.keywordIndex]]) && Math.round(source.beforeSpacing) !== Math.round(dest[beforeSpacingProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[afterSpacingProperty[this.keywordIndex]]) && source.afterSpacing !== 0 || !isNullOrUndefined(dest.afterSpacing) && Math.round(source.afterSpacing) !== Math.round(dest[afterSpacingProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[textAlignmentProperty[this.keywordIndex]]) && source.textAlignment !== 'Left' || !isNullOrUndefined(dest[textAlignmentProperty[this.keywordIndex]]) && source.textAlignment !== dest[textAlignmentProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[bidiProperty[this.keywordIndex]]) && source.bidi !== false || !isNullOrUndefined(dest[bidiProperty[this.keywordIndex]]) && source.bidi !== dest[bidiProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[contextualSpacingProperty[this.keywordIndex]]) && source.contextualSpacing !== false || !isNullOrUndefined(dest.contextualSpacing) && source.contextualSpacing !== dest[contextualSpacingProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[keepWithNextProperty[this.keywordIndex]]) && source.keepWithNext !== false || !isNullOrUndefined(dest[keepWithNextProperty[this.keywordIndex]]) && source.keepWithNext !== dest[keepWithNextProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[keepLinesTogetherProperty[this.keywordIndex]]) && source.keepLinesTogether !== false || !isNullOrUndefined(dest[keepLinesTogetherProperty[this.keywordIndex]]) && source.keepLinesTogether !== dest[keepLinesTogetherProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[widowControlProperty[this.keywordIndex]]) && source.widowControl !== false || !isNullOrUndefined(dest[widowControlProperty[this.keywordIndex]]) && source.widowControl !== dest[widowControlProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[outlineLevelProperty[this.keywordIndex]]) && source.outlineLevel !== 'BodyText' || !isNullOrUndefined(dest[outlineLevelProperty[this.keywordIndex]]) && source.outlineLevel !== dest[outlineLevelProperty[this.keywordIndex]]) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[lineSpacingProperty[this.keywordIndex]]) && source.lineSpacing !== 1 || !isNullOrUndefined(dest[lineSpacingProperty[this.keywordIndex]]) && Math.round(source.lineSpacing) !== Math.round(dest[lineSpacingProperty[this.keywordIndex]])) {\n      return false;\n    }\n    if (isNullOrUndefined(dest[lineSpacingTypeProperty[this.keywordIndex]]) && source.lineSpacingType !== 'Multiple' || !isNullOrUndefined(dest[lineSpacingTypeProperty[this.keywordIndex]]) && source.lineSpacingType !== dest[lineSpacingTypeProperty[this.keywordIndex]]) {\n      return false;\n    }\n    return true;\n  };\n  Editor.prototype.getBlocksToUpdate = function (blocks) {\n    var blcks = [];\n    for (var i = 0; i < blocks.length; i++) {\n      var obj = blocks[i];\n      if (obj[paragraphFormatProperty[this.keywordIndex]] && obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]] && Object.keys(obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]).length > 0) {\n        blcks.push(obj);\n      } else if (obj[rowsProperty[this.keywordIndex]]) {\n        for (var j = 0; j < obj[rowsProperty[this.keywordIndex]].length; j++) {\n          var currentRow = obj[rowsProperty[this.keywordIndex]][j];\n          for (var k = 0; k < currentRow[cellsProperty[this.keywordIndex]].length; k++) {\n            var cell = currentRow[cellsProperty[this.keywordIndex]][k];\n            blcks = blcks.concat(this.getBlocksToUpdate(cell[blocksProperty[this.keywordIndex]]));\n          }\n        }\n      }\n    }\n    return blcks;\n  };\n  Editor.prototype.updateListIdForBlocks = function (blocks, abstractList, list, id, idToUpdate) {\n    var update = false;\n    for (var i = 0; i < blocks.length; i++) {\n      var obj = blocks[i];\n      if (obj[paragraphFormatProperty[this.keywordIndex]] && obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]] && Object.keys(obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]).length > 0) {\n        var format = obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]];\n        var existingList = this.listLevelPatternInCollection(format[listLevelNumberProperty[this.keywordIndex]], abstractList[levelsProperty[this.keywordIndex]][format[listLevelNumberProperty[this.keywordIndex]]]);\n        if (format[listIdProperty[this.keywordIndex]] === id) {\n          if (isNullOrUndefined(existingList) && (!list || list && !this.checkSameLevelFormat(format[listLevelNumberProperty[this.keywordIndex]], abstractList, list))) {\n            update = true;\n            format[listIdProperty[this.keywordIndex]] = idToUpdate;\n          } else if (!isNullOrUndefined(existingList) && this.checkSameLevelFormat(format[listLevelNumberProperty[this.keywordIndex]], abstractList, existingList)) {\n            if (!format.isUpdated) {\n              format[listIdProperty[this.keywordIndex]] = existingList[listIdProperty[this.keywordIndex]];\n              format.isUpdated = true;\n            }\n            update = false;\n          }\n        }\n      } else if (obj[rowsProperty[this.keywordIndex]]) {\n        for (var j = 0; j < obj[rowsProperty[this.keywordIndex]].length; j++) {\n          var row = obj[rowsProperty[this.keywordIndex]][j];\n          for (var k = 0; k < row[cellsProperty[this.keywordIndex]].length; k++) {\n            var cell = row[cellsProperty[this.keywordIndex]][k];\n            var toUpdate = this.updateListIdForBlocks(cell[blocksProperty[this.keywordIndex]], abstractList, list, id, idToUpdate);\n            if (!update) {\n              update = toUpdate;\n            }\n          }\n        }\n      }\n    }\n    return update;\n  };\n  Editor.prototype.updatePasteContent = function (pasteContent, sectionId) {\n    var _this = this;\n    var uniqueListId = this.getUniqueListOrAbstractListId(true);\n    if (pasteContent[listsProperty[this.keywordIndex]].filter(function (obj) {\n      return obj[listIdProperty[_this.keywordIndex]] === uniqueListId;\n    }).length > 0) {\n      var sortedPasteList = pasteContent[listsProperty[this.keywordIndex]].slice().sort(function (a, b) {\n        return a[listIdProperty[_this.keywordIndex]] - b[listIdProperty[_this.keywordIndex]];\n      });\n      uniqueListId = sortedPasteList[sortedPasteList.length - 1][listIdProperty[this.keywordIndex]] + 1;\n    }\n    var uniqueAbsLstId = this.getUniqueListOrAbstractListId(false);\n    if (pasteContent[abstractListsProperty[this.keywordIndex]].filter(function (obj) {\n      return obj[abstractListIdProperty[_this.keywordIndex]] === uniqueAbsLstId;\n    }).length > 0) {\n      var sortedPasteAbsList = pasteContent[abstractListsProperty[this.keywordIndex]].slice().sort(function (a, b) {\n        return a[abstractListIdProperty[_this.keywordIndex]] - b[abstractListIdProperty[_this.keywordIndex]];\n      });\n      uniqueAbsLstId = sortedPasteAbsList[sortedPasteAbsList.length - 1][abstractListIdProperty[this.keywordIndex]] + 1;\n    }\n    var _loop_1 = function (k) {\n      var list = pasteContent[listsProperty[this_1.keywordIndex]][k];\n      var abstractList = pasteContent[abstractListsProperty[this_1.keywordIndex]].filter(function (obj) {\n        return obj[abstractListIdProperty[_this.keywordIndex]] === list[abstractListIdProperty[_this.keywordIndex]];\n      })[0];\n      var lstDup = this_1.documentHelper.lists.filter(function (obj) {\n        return obj.listId === list[listIdProperty[_this.keywordIndex]];\n      });\n      if (!isNullOrUndefined(abstractList)) {\n        var isUpdate = this_1.updateListIdForBlocks(pasteContent[sectionsProperty[this_1.keywordIndex]][sectionId][blocksProperty[this_1.keywordIndex]], abstractList, lstDup[0], list[listIdProperty[this_1.keywordIndex]], uniqueListId);\n        if (isUpdate) {\n          var absListId = abstractList[abstractListIdProperty[this_1.keywordIndex]];\n          // iterate the list object from pasteContent and update the abstractListId with new value.\n          for (var i = 0; i < pasteContent[listsProperty[this_1.keywordIndex]].length; i++) {\n            var listObj = pasteContent[listsProperty[this_1.keywordIndex]][i];\n            if (listObj[abstractListIdProperty[this_1.keywordIndex]] === absListId) {\n              listObj[abstractListIdProperty[this_1.keywordIndex]] = uniqueAbsLstId;\n            }\n          }\n          abstractList[abstractListIdProperty[this_1.keywordIndex]] = uniqueAbsLstId;\n          list[listIdProperty[this_1.keywordIndex]] = uniqueListId;\n          uniqueListId++;\n          uniqueAbsLstId++;\n        } else {\n          pasteContent[listsProperty[this_1.keywordIndex]].splice(k, 1);\n          pasteContent[abstractListsProperty[this_1.keywordIndex]].splice(pasteContent[abstractListsProperty[this_1.keywordIndex]].indexOf(abstractList), 1);\n          k--;\n        }\n      }\n      out_k_1 = k;\n    };\n    var this_1 = this,\n      out_k_1;\n    for (var k = 0; k < pasteContent[listsProperty[this.keywordIndex]].length; k++) {\n      _loop_1(k);\n      k = out_k_1;\n    }\n    var blocks = this.getBlocksToUpdate(pasteContent[sectionsProperty[this.keywordIndex]][sectionId][blocksProperty[this.keywordIndex]]);\n    for (var i = 0; i < blocks.length; i++) {\n      var blck = blocks[i];\n      delete blck[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]].isUpdated;\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getBlocks = function (pasteContent, isPaste, sections, comments, revision) {\n    var widgets = [];\n    if (typeof pasteContent === 'string') {\n      var startParagraph = this.selection.start.paragraph;\n      if (!this.selection.isForward) {\n        startParagraph = this.selection.end.paragraph;\n      }\n      var arr = [];\n      var txt = pasteContent;\n      txt = txt.replace(/\\r?\\n/g, '\\r');\n      arr = txt.split('\\r');\n      var widget = [];\n      var bodyWidget = new BodyWidget();\n      bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n      bodyWidget.childWidgets = widget;\n      for (var i = 0; i < arr.length; i++) {\n        if (i === arr.length - 1 && arr[i].length === 0 && !this.isInsertText) {\n          continue;\n        }\n        var currentInline = this.selection.start.currentWidget.getInline(this.selection.start.offset, 0);\n        var element = this.selection.getPreviousValidElement(currentInline.element);\n        if (element !== currentInline.element) {\n          element = this.selection.getNextValidElement(currentInline.element);\n        }\n        var insertFormat = void 0;\n        if (startParagraph.isEmpty()) {\n          insertFormat = startParagraph.characterFormat;\n        } else if (!isNullOrUndefined(element) && !this.isInsertText) {\n          insertFormat = element.characterFormat;\n        } else {\n          this.copyInsertFormat(startParagraph.characterFormat, false);\n        }\n        var insertParaFormat = this.documentHelper.selection.copySelectionParagraphFormat();\n        if (!isNullOrUndefined(this.previousParaFormat)) {\n          insertParaFormat = this.previousParaFormat;\n        }\n        var paragraph = new ParagraphWidget();\n        paragraph.paragraphFormat.copyFormat(insertParaFormat);\n        var line = new LineWidget(paragraph);\n        if (arr[i].length > 0) {\n          //Too many character in single line it took time past the content will cause layout performance, so spliting by space.\n          var words = arr[i].split(/(\\s+)/);\n          for (var j = 0; j < words.length; j++) {\n            var textElement = new TextElementBox();\n            textElement.characterFormat.copyFormat(insertFormat);\n            textElement.text = words[j];\n            line.children.push(textElement);\n            textElement.line = line;\n          }\n        }\n        paragraph.childWidgets.push(line);\n        paragraph.containerWidget = bodyWidget;\n        widget.push(paragraph);\n      }\n      widgets.push(bodyWidget);\n    } else {\n      var parser = this.documentHelper.owner.parser;\n      parser.keywordIndex = this.keywordIndex;\n      parser.isPaste = isPaste;\n      parser.isHtmlPaste = this.isHtmlPaste;\n      parser.addCustomStyles(pasteContent);\n      if (pasteContent[commentsProperty[this.keywordIndex]] && pasteContent[commentsProperty[this.keywordIndex]].length > 0) {\n        parser.commentsCollection = new Dictionary();\n        parser.commentStarts = new Dictionary();\n        parser.commentEnds = new Dictionary();\n        parser.parseComments(pasteContent, comments ? comments : this.documentHelper.comments);\n      }\n      var bodyWidget = void 0;\n      this.selection.currentPasteAction = 'DefaultPaste';\n      for (var i = 0; i < pasteContent[sectionsProperty[this.keywordIndex]].length; i++) {\n        if (!this.isPasteListUpdated && !isNullOrUndefined(pasteContent[listsProperty[this.keywordIndex]])) {\n          if (this.documentHelper.lists.length > 0) {\n            this.updatePasteContent(pasteContent, i);\n          }\n          this.isPasteListUpdated = true;\n          if (!isNullOrUndefined(pasteContent[abstractListsProperty[this.keywordIndex]])) {\n            parser.parseAbstractList(pasteContent, this.documentHelper.abstractLists);\n          }\n          if (!isNullOrUndefined(pasteContent[listsProperty[this.keywordIndex]])) {\n            parser.parseList(pasteContent, this.documentHelper.lists);\n          }\n        }\n        if (!isNullOrUndefined(pasteContent[revisionsProperty[this.keywordIndex]])) {\n          if (isPaste) {\n            var revisionChanges = this.viewer.owner.revisionsInternal.changes;\n            if (!isNullOrUndefined(parser.revisionCollection)) {\n              parser.revisionCollection = undefined;\n            }\n            if (this.isRemoteAction) {\n              parser.revisionCollection = this.documentHelper.revisionsInternal;\n            } else {\n              parser.revisionCollection = new Dictionary();\n            }\n            var revisionCollection = parser.revisionCollection;\n            if (!(this.documentHelper.owner.sfdtExportModule.copyWithTrackChange && parser.isCutPerformed)) {\n              if (pasteContent[revisionsProperty[this.keywordIndex]].length >= 1) {\n                for (var i_1 = 0; i_1 < pasteContent[revisionsProperty[this.keywordIndex]].length; i_1++) {\n                  var revisionCheck = true;\n                  if (revisionCollection.containsKey(pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]])) {\n                    if (revisionChanges.length > 0) {\n                      for (var j_1 = 0; j_1 < revisionChanges.length; j_1++) {\n                        if (revisionChanges[j_1].revisionID === pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]]) {\n                          revisionCheck = false;\n                        }\n                      }\n                    }\n                    if (revisionCheck && !this.isRemoteAction) {\n                      var revision_1 = revisionCollection.get(pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]]);\n                      revisionChanges.push(revision_1);\n                    }\n                  } else {\n                    parser.parseRevisions(pasteContent, revisionChanges);\n                  }\n                }\n              }\n            }\n            this.documentHelper.owner.sfdtExportModule.copyWithTrackChange = false;\n          } else {\n            parser.revisionCollection = this.documentHelper.revisionsInternal;\n            parser.parseRevisions(pasteContent, revision);\n          }\n        }\n        bodyWidget = new BodyWidget();\n        bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n        if (!isPaste) {\n          sections.unshift(bodyWidget);\n        } else {\n          widgets.push(bodyWidget);\n        }\n        if (isPaste && !isNullOrUndefined(pasteContent[stylesProperty[this.keywordIndex]])) {\n          for (var j = 0; j < pasteContent[stylesProperty[this.keywordIndex]].length; j++) {\n            var styleName = pasteContent[stylesProperty[this.keywordIndex]][j][nameProperty[this.keywordIndex]];\n            var style = this.documentHelper.styles.findByName(styleName);\n            if (isNullOrUndefined(style)) {\n              parser.parseStyle(pasteContent, pasteContent[stylesProperty[this.keywordIndex]][j], this.documentHelper.styles);\n            }\n          }\n        }\n        parser.parseBody(pasteContent[sectionsProperty[this.keywordIndex]][i][blocksProperty[this.keywordIndex]], bodyWidget.childWidgets, undefined, undefined, undefined, pasteContent[stylesProperty[this.keywordIndex]]);\n        if (pasteContent[lastParagraphMarkCopiedProperty[this.keywordIndex]] && this.selection.start.paragraph.isEmpty() && this.documentHelper.pages.length == 1 && this.documentHelper.pages[0].bodyWidgets[0].childWidgets.length == 1) {\n          parser.parseSectionFormat(this.keywordIndex, pasteContent[sectionsProperty[this.keywordIndex]][i][sectionFormatProperty[this.keywordIndex]], bodyWidget.sectionFormat);\n        }\n        parser.isPaste = false;\n        parser.isHtmlPaste = false;\n      }\n      if (pasteContent[lastParagraphMarkCopiedProperty[this.keywordIndex]]) {\n        this.isLastParaMarkCopied = true;\n        var paragraphWidget = new ParagraphWidget();\n        bodyWidget.childWidgets.push(paragraphWidget);\n      }\n    }\n    if (this.currentPasteOptions === 'MergeWithExistingFormatting') {\n      this.applyMergeFormat(widgets);\n    }\n    return widgets;\n  };\n  Editor.prototype.applyMergeFormat = function (bodyWidgets) {\n    var startParagraph = this.selection.start.paragraph;\n    var currentInline = this.selection.start.currentWidget.getInline(this.selection.start.offset, 0);\n    var element = this.selection.getPreviousValidElement(currentInline.element);\n    var insertFormat = element ? element.characterFormat : this.copyInsertFormat(startParagraph.characterFormat, false);\n    var insertParaFormat = this.documentHelper.selection.paragraphFormat;\n    for (var k = 0; k < bodyWidgets.length; k++) {\n      var widgets = bodyWidgets[k].childWidgets;\n      for (var i = 0; i < widgets.length; i++) {\n        var widget = widgets[i];\n        if (widget instanceof ParagraphWidget) {\n          this.applyParaFormatInternal(widget.paragraphFormat, insertParaFormat);\n          this.applyFormatInternal(widget, insertFormat);\n        } else {\n          for (var j = 0; j < widget.childWidgets.length; j++) {\n            var row = widget.childWidgets[j];\n            for (var k_1 = 0; k_1 < row.childWidgets.length; k_1++) {\n              var cell = row.childWidgets[k_1];\n              for (var l = 0; l < cell.childWidgets.length; l++) {\n                this.applyFormatInternal(cell.childWidgets[l], insertFormat);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.applyParaFormatInternal = function (paragraphFormat, insertedParaFormat) {\n    if (!isNullOrUndefined(insertedParaFormat.leftIndent)) {\n      paragraphFormat.leftIndent = insertedParaFormat.leftIndent;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.rightIndent)) {\n      paragraphFormat.rightIndent = insertedParaFormat.rightIndent;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.firstLineIndent)) {\n      paragraphFormat.firstLineIndent = insertedParaFormat.firstLineIndent;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.textAlignment)) {\n      paragraphFormat.textAlignment = insertedParaFormat.textAlignment;\n    } else {\n      paragraphFormat.textAlignment = 'Left';\n    }\n    if (!isNullOrUndefined(insertedParaFormat.outlineLevel)) {\n      paragraphFormat.outlineLevel = insertedParaFormat.outlineLevel;\n    } else {\n      paragraphFormat.outlineLevel = 'BodyText';\n    }\n    if (insertedParaFormat.beforeSpacing === -1) {\n      paragraphFormat.beforeSpacing = 0;\n    } else {\n      paragraphFormat.beforeSpacing = insertedParaFormat.beforeSpacing;\n    }\n    if (insertedParaFormat.afterSpacing === -1) {\n      paragraphFormat.afterSpacing = 0;\n    } else {\n      paragraphFormat.afterSpacing = insertedParaFormat.afterSpacing;\n    }\n    if (insertedParaFormat.lineSpacing === 0) {\n      paragraphFormat.lineSpacing = 1;\n    } else {\n      paragraphFormat.lineSpacing = insertedParaFormat.lineSpacing;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.lineSpacingType)) {\n      paragraphFormat.lineSpacingType = insertedParaFormat.lineSpacingType;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.bidi)) {\n      paragraphFormat.bidi = insertedParaFormat.bidi;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.spaceAfterAuto)) {\n      paragraphFormat.spaceAfterAuto = insertedParaFormat.spaceAfterAuto;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.spaceBeforeAuto)) {\n      paragraphFormat.spaceBeforeAuto = insertedParaFormat.spaceBeforeAuto;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.keepWithNext)) {\n      paragraphFormat.keepWithNext = insertedParaFormat.keepWithNext;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.keepLinesTogether)) {\n      paragraphFormat.keepLinesTogether = insertedParaFormat.keepLinesTogether;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.widowControl)) {\n      paragraphFormat.widowControl = insertedParaFormat.widowControl;\n    }\n    if (!isNullOrUndefined(insertedParaFormat.contextualSpacing)) {\n      paragraphFormat.contextualSpacing = insertedParaFormat.contextualSpacing;\n    }\n    if (paragraphFormat.tabs) {\n      paragraphFormat.tabs = [];\n    }\n  };\n  Editor.prototype.applyFormatInternal = function (widget, insertFormat) {\n    if (widget instanceof ParagraphWidget) {\n      for (var j = 0; j < widget.childWidgets.length; j++) {\n        var lineWidget = widget.childWidgets[j];\n        for (var k = 0; k < lineWidget.children.length; k++) {\n          var inlineCharacterFormat = lineWidget.children[k].characterFormat;\n          var characterFormat = inlineCharacterFormat.cloneFormat();\n          if (characterFormat.bold) {\n            lineWidget.children[k].characterFormat.bold = characterFormat.bold;\n          }\n          if (characterFormat.italic) {\n            lineWidget.children[k].characterFormat.italic = characterFormat.italic;\n          }\n          if (characterFormat.underline !== 'None') {\n            lineWidget.children[k].characterFormat.underline = characterFormat.underline;\n          }\n          if (this.currentPasteOptions === 'MergeWithExistingFormatting' && !isNullOrUndefined(insertFormat)) {\n            if (insertFormat.bold) {\n              lineWidget.children[k].characterFormat.bold = insertFormat.bold;\n            }\n            if (insertFormat.italic) {\n              lineWidget.children[k].characterFormat.italic = insertFormat.italic;\n            }\n            if (insertFormat.underline !== 'None') {\n              lineWidget.children[k].characterFormat.underline = insertFormat.underline;\n            }\n            if (lineWidget.children[k].characterFormat.fontColor !== insertFormat.fontColor) {\n              lineWidget.children[k].characterFormat.fontColor = insertFormat.fontColor;\n            }\n            if (lineWidget.children[k].characterFormat.fontSize !== insertFormat.fontSize) {\n              lineWidget.children[k].characterFormat.fontSize = insertFormat.fontSize;\n              lineWidget.children[k].characterFormat.fontSizeBidi = insertFormat.fontSizeBidi;\n            }\n            if (lineWidget.children[k].characterFormat.fontFamily !== insertFormat.fontFamily) {\n              lineWidget.children[k].characterFormat.fontFamily = insertFormat.fontFamily;\n              lineWidget.children[k].characterFormat.fontFamilyBidi = insertFormat.fontFamilyBidi;\n            }\n            if (lineWidget.children[k].characterFormat.fontFamilyAscii !== insertFormat.fontFamilyAscii) {\n              lineWidget.children[k].characterFormat.fontFamilyAscii = insertFormat.fontFamilyAscii;\n            }\n            if (lineWidget.children[k].characterFormat.fontFamilyFarEast !== insertFormat.fontFamilyFarEast) {\n              lineWidget.children[k].characterFormat.fontFamilyFarEast = insertFormat.fontFamilyFarEast;\n            }\n            if (lineWidget.children[k].characterFormat.fontFamilyAscii !== insertFormat.fontFamilyAscii) {\n              lineWidget.children[k].characterFormat.fontFamilyAscii = insertFormat.fontFamilyAscii;\n            }\n          }\n        }\n      }\n    } else {\n      for (var j = 0; j < widget.childWidgets.length; j++) {\n        var rowWidget = widget.childWidgets[j];\n        for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n          var cellWidget = rowWidget.childWidgets[k];\n          for (var l = 0; l < cellWidget.childWidgets.length; l++) {\n            this.applyFormatInternal(cellWidget.childWidgets[l], insertFormat);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.applyPasteOptions = function (options, isPasteOptionTextOnly) {\n    if (isNullOrUndefined(this.copiedContent) || this.copiedTextContent === '' || isPasteOptionTextOnly) {\n      return;\n    }\n    //this.isSkipHistory = true;\n    this.currentPasteOptions = options;\n    var start = this.selection.isForward ? this.selection.start : this.selection.end;\n    var currentFormat = start.paragraph.paragraphFormat;\n    var copiedContent = this.copiedContent;\n    var copiedTextContent = this.copiedTextContent;\n    if (this.editorHistory && this.editorHistory.canUndo()) {\n      this.editorHistory.undo();\n      this.editorHistory.redoStack.pop();\n    }\n    this.copiedContent = copiedContent;\n    this.copiedTextContent = copiedTextContent;\n    this.selection.isViewPasteOptions = true;\n    // }\n    switch (options) {\n      case 'KeepSourceFormatting':\n        this.pasteContents(this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent);\n        break;\n      case 'MergeWithExistingFormatting':\n        this.pasteContents(this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent, currentFormat);\n        break;\n      case 'KeepTextOnly':\n        this.pasteContents(this.copiedTextContent);\n        break;\n    }\n    //this.isSkipHistory = false;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.applyTablePasteOptions = function (options) {\n    if (isNullOrUndefined(this.copiedContent) || this.copiedTextContent === '') {\n      return;\n    }\n    this.isPaste = true;\n    var copiedContent = this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent;\n    if (this.editorHistory && this.editorHistory.canUndo()) {\n      // this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.editorHistory.undo();\n      this.editorHistory.redoStack.pop();\n      // this.isSkipOperationsBuild = false;\n    }\n    var widgets = this.getBlocks(copiedContent, true);\n    var currentFormat = this.selection.start.paragraph.paragraphFormat;\n    switch (options) {\n      case 'NestTable':\n        this.pasteAsNestedTable(widgets, currentFormat);\n        break;\n      case 'InsertAsRows':\n        this.pasteAsNewRow(widgets[0].childWidgets[0]);\n        break;\n      case 'InsertAsColumns':\n        this.pasteAsNewColumn(widgets[0].childWidgets[0]);\n        break;\n      case 'OverwriteCells':\n        this.pasteOverwriteCell(widgets[0].childWidgets[0]);\n        break;\n    }\n    this.isPaste = false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.pasteContents = function (content, currentFormat) {\n    if (!isNullOrUndefined(content.optimizeSfdt) && content.optimizeSfdt) {\n      this.keywordIndex = 1;\n    } else {\n      this.keywordIndex = 0;\n    }\n    if (typeof content !== 'string') {\n      this.copiedContent = content;\n    }\n    if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.selection.isInlineFormFillMode()) {\n      var inline = this.selection.getCurrentFormField();\n      var resultText = this.getFieldResultText();\n      var maxLength = inline.formFieldData.maxLength;\n      var selectedTextLength = this.documentHelper.selection.text.length;\n      if (maxLength > 0) {\n        if (selectedTextLength === 0) {\n          var contentlength = maxLength - resultText.length;\n          content = content.substring(0, contentlength);\n        } else if (selectedTextLength > 0) {\n          content = content.substring(0, selectedTextLength);\n        }\n      }\n    }\n    if (!isNullOrUndefined(content[imagesProperty[this.keywordIndex]])) {\n      var images = content[imagesProperty[this.keywordIndex]];\n      if (this.documentHelper.images.length > 0) {\n        this.pasteImageIndex = new Dictionary();\n        var newImages = {};\n        for (var img in images) {\n          var newIndex = this.documentHelper.images.length + parseInt(img);\n          newImages[newIndex] = images[img];\n          this.pasteImageIndex.add(img, newIndex.toString());\n        }\n        images = newImages;\n      }\n      this.documentHelper.owner.parser.parseImages(images);\n    }\n    this.pasteContentsInternal(this.getBlocks(content, true), true, currentFormat);\n    if (this.isRemoteAction) {\n      this.updatePasteRevision();\n      this.owner.trackChangesPane.updateTrackChanges();\n    }\n    if (content[commentsProperty[this.keywordIndex]] && content[commentsProperty[this.keywordIndex]].length > 0) {\n      this.documentHelper.layout.layoutComments(this.documentHelper.comments);\n    }\n    if (!isNullOrUndefined(this.pasteImageIndex)) {\n      this.pasteImageIndex.destroy();\n    }\n    this.pasteImageIndex = undefined;\n    this.isInsertField = false;\n    this.isPasteListUpdated = false;\n    this.isLastParaMarkCopied = false;\n  };\n  Editor.prototype.pasteContentsInternal = function (widgets, isPaste, currentFormat) {\n    this.isPaste = isPaste;\n    var selection = this.documentHelper.selection;\n    if (selection.start.paragraph.isInsideTable && selection.end.paragraph.isInsideTable) {\n      var isTablePaste = false;\n      if (widgets.length === 1) {\n        var childWidgets = widgets[0].childWidgets;\n        if (childWidgets.length < 3) {\n          if (childWidgets.length === 1 && childWidgets[0] instanceof TableWidget || childWidgets.length === 2 && childWidgets[0] instanceof TableWidget && childWidgets[1].isEmpty()) {\n            isTablePaste = true;\n          }\n        }\n      }\n      if (isTablePaste) {\n        var startCell = selection.start.paragraph.associatedCell;\n        var endCell = selection.end.paragraph.associatedCell;\n        var newTable = widgets[0].childWidgets[0];\n        // tslint:disable-next-line:max-line-length\n        if (startCell.ownerTable.equals(endCell.ownerTable)) {\n          if (selection.start.paragraph.associatedCell.rowIndex === 0 && selection.end.paragraph.associatedCell.rowIndex === 0 && startCell.equals(endCell) && !this.selection.isCellSelected(startCell, selection.start, selection.end)) {\n            this.selection.currentPasteAction = 'InsertAsColumns';\n            this.pasteAsNewColumn(newTable);\n          } else {\n            this.selection.currentPasteAction = 'OverwriteCells';\n            this.pasteOverwriteCell(newTable);\n          }\n          this.isPaste = false;\n          return;\n        }\n      }\n    }\n    var commentStartToInsert;\n    //if (!this.isSkipHistory) {\n    commentStartToInsert = this.checkAndRemoveComments();\n    //}\n    this.defaultPaste(widgets, currentFormat);\n    //if (!this.isSkipHistory) {\n    this.updateHistoryForComments(commentStartToInsert);\n    //}\n  };\n  Editor.prototype.defaultPaste = function (widgets, currentFormat) {\n    var selection = this.documentHelper.selection;\n    var isRemoved = true;\n    var layoutWholeDocument = false;\n    //if (!this.isSkipHistory) {\n    this.initComplexHistory('Paste');\n    //}\n    if (this.documentHelper.isListTextSelected) {\n      var paragraph = selection.start.paragraph;\n      if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n        this.onApplyList(undefined);\n      }\n    }\n    //if (!this.isSkipHistory) {\n    this.initHistory('Paste');\n    //}\n    if (!selection.isEmpty && (!this.owner.documentHelper.isDragging || !this.owner.selection.isImageSelected) || this.documentHelper.isListTextSelected) {\n      isRemoved = this.removeSelectedContentInternal(selection, selection.start, selection.end);\n    }\n    if (isRemoved) {\n      layoutWholeDocument = this.pasteContent(widgets, currentFormat);\n    } else if (this.editorHistory) {\n      this.editorHistory.currentBaseHistoryInfo = undefined;\n    }\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      if (this.editorHistory.currentBaseHistoryInfo) {\n        if (this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n          var start = this.selection.getTextPosBasedOnLogicalIndex(this.editorHistory.currentBaseHistoryInfo.insertPosition);\n          var end = this.selection.getTextPosBasedOnLogicalIndex(this.editorHistory.currentBaseHistoryInfo.endPosition);\n          if (!this.isRemoteAction) {\n            var documentContent = !isNullOrUndefined(this.owner.sfdtExportModule) ? this.owner.sfdtExportModule.write(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0, start.currentWidget, start.offset, end.currentWidget, end.offset, false, true) : {};\n            this.editorHistory.currentBaseHistoryInfo.pasteContent = documentContent;\n          }\n        }\n      }\n      this.editorHistory.updateHistory();\n      this.editorHistory.updateComplexHistory();\n    } else {\n      this.reLayout(selection, selection.isEmpty);\n    }\n    if (layoutWholeDocument) {\n      if (this.selection.pasteElement) {\n        this.selection.pasteElement.style.display = 'none';\n      }\n      this.layoutWholeDocument(true);\n    }\n    this.isPaste = false;\n  };\n  Editor.prototype.pasteAsNewColumn = function (data) {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    if (this.selection.start.paragraph.isInsideTable) {\n      if (this.checkIsNotRedoing()) {\n        this.initHistory('PasteColumn');\n      }\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n      if (this.editorHistory) {\n        //Clones the entire table to preserve in history.\n        var clonedTable = this.cloneTableToHistoryInfo(table);\n      }\n      this.selection.owner.isLayoutEnabled = false;\n      var cloneTable = data.clone();\n      var rowWidget = cloneTable.childWidgets[0];\n      var numberOfRows = cloneTable.childWidgets.length;\n      var numberOfColumns = rowWidget.childWidgets.length;\n      var cellIndex = startCell.columnIndex;\n      var startParagraph = undefined;\n      var newCell = undefined;\n      var columnCount = numberOfColumns;\n      var rowSpannedCells = [];\n      if (numberOfRows > table.childWidgets.length) {\n        this.addRows(numberOfRows - table.childWidgets.length, table);\n        this.tableUpdate(table);\n      } else if (table.childWidgets.length > numberOfRows) {\n        this.addRows(table.childWidgets.length - numberOfRows, cloneTable, table);\n        this.tableUpdate(table);\n      }\n      for (var i = 0; i < columnCount; i++) {\n        for (var j = 0; j < table.childWidgets.length; j++) {\n          var row = table.childWidgets[j];\n          var rowWidget_1 = cloneTable.childWidgets[j];\n          var cellWidget = rowWidget_1.childWidgets[i];\n          var cell = row.childWidgets[startCell.columnIndex];\n          newCell = this.createColumn(this.selection.getLastParagraph(startCell));\n          newCell.index = j;\n          newCell.rowIndex = row.index;\n          newCell.containerWidget = row;\n          var prevCell = row.previousWidget;\n          var spannedCell = this.rowspannedCollection(row, rowSpannedCells);\n          if (cell != null) {\n            newCell.cellFormat.copyFormat(cell.cellFormat);\n            newCell.cellFormat.rowSpan = 1;\n          } else if (spannedCell.length > 0) {\n            for (var z = 0; z < spannedCell.length; z++) {\n              if (prevCell.rowIndex + (spannedCell[z].cellFormat.rowSpan - 1) >= row.rowIndex) {\n                newCell.cellFormat.copyFormat(spannedCell[z].cellFormat);\n                newCell.cellFormat.rowSpan = 1;\n              }\n            }\n          }\n          cellWidget.containerWidget = newCell.containerWidget;\n          newCell.childWidgets = cellWidget.childWidgets;\n          if (isNullOrUndefined(startParagraph)) {\n            startParagraph = this.selection.getFirstParagraph(newCell);\n          }\n          if (cellIndex === 0) {\n            row.childWidgets.splice(i, 0, newCell);\n          } else {\n            this.insertSpannedCells(row, rowSpannedCells, newCell, cellIndex);\n          }\n        }\n      }\n      this.tableReLayout(table, startParagraph, newCell, true);\n    }\n  };\n  Editor.prototype.pasteAsNestedTable = function (widgets, currentFormat) {\n    var data = widgets[0].childWidgets[0];\n    if (this.selection.start.paragraph.isInsideTable) {\n      if (this.checkIsNotRedoing()) {\n        this.initHistory('PasteNested');\n      }\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n      if (this.editorHistory) {\n        //Clones the entire table to preserve in history.\n        this.cloneTableToHistoryInfo(table);\n      }\n      var startParagraph = undefined;\n      var dataTable = data.clone();\n      var endCell = this.selection.end.paragraph.containerWidget;\n      var pasteCell = void 0;\n      if (startCell != endCell) {\n        var row = startCell.ownerRow;\n        while (row != endCell.ownerRow.nextRow) {\n          for (var cellIndex = startCell.columnIndex; cellIndex <= endCell.columnIndex; cellIndex++) {\n            pasteCell = row.childWidgets[cellIndex];\n            var clonedTable = dataTable.clone();\n            var newPara = new ParagraphWidget();\n            pasteCell.childWidgets = [];\n            pasteCell.childWidgets[0] = clonedTable;\n            pasteCell.childWidgets[1] = newPara;\n            newPara.containerWidget = pasteCell;\n            clonedTable.containerWidget = pasteCell;\n            clonedTable.index = 0;\n            newPara.index = 1;\n            row.childWidgets[cellIndex] = pasteCell;\n            if (isNullOrUndefined(startParagraph)) {\n              startParagraph = this.selection.getFirstParagraph(pasteCell);\n            }\n          }\n          row = row.nextRow;\n        }\n        this.tableReLayout(table, startParagraph, pasteCell);\n      } else {\n        this.defaultPaste(widgets, currentFormat);\n      }\n    }\n  };\n  Editor.prototype.pasteOverwriteCell = function (data) {\n    if (this.selection.start.paragraph.isInsideTable) {\n      if (this.checkIsNotRedoing()) {\n        this.initHistory('PasteOverwrite');\n      }\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n      if (this.editorHistory) {\n        //Clones the entire table to preserve in history.\n        this.cloneTableToHistoryInfo(table);\n      }\n      var cloneTable = data.clone();\n      // let rowWidget: TableRowWidget = cloneTable.childWidgets[0] as TableRowWidget;\n      var numberOfRows = cloneTable.childWidgets.length;\n      var endCell = this.getOwnerCell(!this.selection.isForward);\n      // let columnCount: number = numberOfColumns;\n      // let newCell: TableCellWidget = undefined;\n      var coloumnIndexPaste = startCell.columnIndex;\n      var rowIndexPaste = startCell.rowIndex;\n      var startParagraph = undefined;\n      var row = this.selection.start.paragraph.associatedCell.ownerRow;\n      var rowWidget = cloneTable.childWidgets[0];\n      var newCells = void 0; // = rowWidget.childWidgets[0] as TableCellWidget;\n      var numberOfColumns = rowWidget.childWidgets.length;\n      var row2 = startCell.ownerRow;\n      if (startCell != endCell) {\n        var k = 0;\n        var rowSpan = void 0;\n        var rowSpanIndex = void 0;\n        var columnSpan = void 0;\n        var cloneCells = void 0;\n        while (row2 != endCell.ownerRow.nextRow) {\n          rowWidget = cloneTable.childWidgets[k] || cloneTable.childWidgets[k = 0];\n          var rowWidgetLength = rowWidget.childWidgets.length;\n          var cellIndexSE = 0;\n          for (var cellIndex = startCell.columnIndex; cellIndex <= endCell.columnIndex; cellIndex++) {\n            rowWidget = cloneTable.childWidgets[k];\n            if (rowSpan > 1 && rowSpanIndex === cellIndex) {\n              cellIndex++;\n              rowSpan--;\n              rowSpanIndex = null;\n            }\n            if (columnSpan > 1 && cellIndexSE >= rowWidgetLength - (columnSpan - 1)) {\n              columnSpan = 1;\n              cellIndex = cellIndex + (columnSpan - 1);\n              cellIndexSE = 0;\n            }\n            newCells = rowWidget.childWidgets[cellIndexSE] || rowWidget.childWidgets[cellIndexSE = 0];\n            cloneCells = newCells.clone();\n            var pasteCell = row2.childWidgets[cellIndex];\n            for (var x = 0; x < cloneCells.childWidgets.length; x++) {\n              var newPara = cloneCells.childWidgets[x];\n              newPara.containerWidget = pasteCell;\n              cloneCells.childWidgets[x] = newPara;\n            }\n            pasteCell.childWidgets = cloneCells.childWidgets;\n            if (newCells.cellFormat.rowSpan > 1) {\n              rowSpan = newCells.cellFormat.rowSpan;\n              rowSpanIndex = cellIndex;\n            }\n            if (newCells.cellFormat.columnSpan > 1) {\n              columnSpan = newCells.cellFormat.columnSpan;\n            }\n            row2.childWidgets[cellIndex] = pasteCell;\n            if (isNullOrUndefined(startParagraph)) {\n              startParagraph = this.selection.getFirstParagraph(cloneCells);\n            }\n            cellIndexSE++;\n          }\n          row2 = row2.nextRow;\n          k++;\n        }\n        this.tableReLayout(table, startParagraph, cloneCells);\n      } else {\n        var rowsToAdd = void 0;\n        var rowSpan = void 0;\n        var rowSpanIndex = void 0;\n        var pasteCell = void 0;\n        if (numberOfRows > table.childWidgets.length - rowIndexPaste) {\n          rowsToAdd = numberOfRows - table.childWidgets.length + rowIndexPaste;\n          this.addRows(rowsToAdd, table);\n        }\n        for (var i = 0; i < numberOfRows; i++) {\n          var cellIndex = startCell.columnIndex;\n          rowWidget = cloneTable.childWidgets[i];\n          var numberOfColumns_1 = rowWidget.childWidgets.length;\n          for (var cellIterate = 0; cellIterate < numberOfColumns_1; cellIterate++) {\n            newCells = rowWidget.childWidgets[cellIterate];\n            var cloneCells = newCells.clone();\n            if (rowSpan > 1 && rowSpanIndex === cellIndex) {\n              cellIndex++;\n              rowSpan--;\n              rowSpanIndex = null;\n            }\n            pasteCell = row.childWidgets[cellIndex];\n            if (!pasteCell) {\n              pasteCell = cloneCells;\n              pasteCell.containerWidget = row;\n              pasteCell.index = cellIndex;\n            }\n            for (var index = 0; index < cloneCells.childWidgets.length; index++) {\n              var newPara = cloneCells.childWidgets[index];\n              newPara.containerWidget = pasteCell;\n              cloneCells.childWidgets[index] = newPara;\n            }\n            pasteCell.childWidgets = cloneCells.childWidgets;\n            if (newCells.cellFormat.rowSpan > 1) {\n              rowSpan = newCells.cellFormat.rowSpan; //getting span\n              rowSpanIndex = cellIndex;\n            }\n            row.childWidgets.splice(cellIndex++, 1, pasteCell);\n            if (isNullOrUndefined(startParagraph)) {\n              startParagraph = this.selection.getFirstParagraph(pasteCell);\n            }\n          }\n          row = row.nextRow;\n        }\n        this.tableReLayout(table, startParagraph, pasteCell, true);\n      }\n    }\n  };\n  Editor.prototype.pasteAsNewRow = function (data) {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    if (this.checkIsNotRedoing()) {\n      this.initHistory('PasteRow');\n    }\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n    var endCell = this.getOwnerCell(!this.selection.isForward).getSplitWidgets()[0];\n    var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n    var row = endCell.ownerRow;\n    if (this.editorHistory) {\n      this.cloneTableToHistoryInfo(table);\n    }\n    var rowCount = this.getRowCountToInsert();\n    var columncount = this.getColumnCountToInsert();\n    var rows = [];\n    var index = row.rowIndex;\n    index++;\n    var pasteRowCount = data.childWidgets.length;\n    for (var i = 0; i < pasteRowCount; i++) {\n      var newRow = data.childWidgets[i].clone();\n      if (this.owner.enableTrackChanges) {\n        this.insertRevision(newRow.rowFormat, 'Insertion');\n      }\n      rows.push(newRow);\n    }\n    table.insertTableRowsInternal(rows, index, false);\n    var cellWidget = undefined;\n    var paragraphWidget = undefined;\n    if (table.childWidgets[index] instanceof TableRowWidget) {\n      cellWidget = table.childWidgets[index].firstChild;\n      paragraphWidget = this.selection.getFirstParagraph(cellWidget);\n    } else {\n      var widget = undefined;\n      while (!(widget instanceof TableWidget)) {\n        widget = table.nextRenderedWidget;\n      }\n      paragraphWidget = this.documentHelper.getFirstParagraphInFirstCell(widget);\n    }\n    this.copyContent(table);\n    this.documentHelper.layout.reLayoutTable(table);\n    this.selection.selectParagraphInternal(paragraphWidget, true);\n    this.reLayout(this.selection, true);\n  };\n  Editor.prototype.tableUpdate = function (table) {\n    table.isGridUpdated = false;\n    table.calculateGrid();\n    table.buildTableColumns();\n    table.isGridUpdated = true;\n  };\n  Editor.prototype.rowspannedCollection = function (row, rowSpannedCells) {\n    for (var j = 0; j < row.childWidgets.length; j++) {\n      var rowCell = row.childWidgets[j];\n      if (rowCell.cellFormat.rowSpan > 1) {\n        rowSpannedCells.push(rowCell);\n      }\n    }\n    return rowSpannedCells;\n  };\n  Editor.prototype.insertSpannedCells = function (row, rowSpannedCells, newCell, cellIndex) {\n    var isCellInserted = false;\n    for (var j = 0; j < row.childWidgets.length; j++) {\n      var rowCell = row.childWidgets[j];\n      // Add the row spanned cells to colection for adding column before / after row spnned cells.\n      if (rowCell.cellFormat.rowSpan > 1) {\n        rowSpannedCells.push(rowCell);\n      }\n      if (rowCell.columnIndex + rowCell.cellFormat.columnSpan === cellIndex) {\n        row.childWidgets.splice(rowCell.cellIndex + 1, 0, newCell);\n        isCellInserted = true;\n      } else if (cellIndex > rowCell.columnIndex && rowCell.columnIndex + rowCell.cellFormat.columnSpan > cellIndex && cellIndex < rowCell.columnIndex + rowCell.cellFormat.columnSpan) {\n        row.childWidgets.splice(rowCell.cellIndex + 1, 0, newCell);\n        isCellInserted = true;\n      }\n      if (isCellInserted) {\n        break;\n      }\n    }\n    // If the cell is not inserted for row, then check for row spanned cells.\n    if (!isCellInserted) {\n      if (rowSpannedCells.length > 0) {\n        for (var k = 0; k < rowSpannedCells.length; k++) {\n          var rowSpannedCell = rowSpannedCells[k];\n          if (rowSpannedCell.ownerRow !== row && row.rowIndex <= rowSpannedCell.ownerRow.rowIndex + rowSpannedCell.cellFormat.rowSpan - 1) {\n            if (rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan === cellIndex) {\n              if (rowSpannedCell.cellIndex > row.childWidgets.length) {\n                row.childWidgets.push(newCell);\n              } else {\n                row.childWidgets.splice(rowSpannedCell.cellIndex + 1, 0, newCell);\n              }\n              isCellInserted = true;\n            } else if (cellIndex > rowSpannedCell.columnIndex && rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan > cellIndex && cellIndex < rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan) {\n              row.childWidgets.splice(rowSpannedCell.columnIndex, 0, newCell);\n              isCellInserted = true;\n            }\n          }\n          if (isCellInserted) {\n            break;\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.addRows = function (count, table, ownerTable) {\n    var rowPlacement = 'Below';\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    var isInsertRow = false;\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    var rows = table.childWidgets.length;\n    var rowWidget = table.childWidgets[rows - 1];\n    var column = rowWidget.childWidgets.length;\n    var cloneTable = ownerTable ? ownerTable : table;\n    if (startPos.paragraph.isInsideTable) {\n      var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n      var endCell = rowWidget.childWidgets[column - 1];\n      var row = endCell.ownerRow;\n      this.rowInsertion(count, rowPlacement, startCell, endCell, row, table, isInsertRow);\n    }\n    //this.reLayout(this.selection, true);\n  };\n  Editor.prototype.pasteContent = function (widgets, currentFormat) {\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var insertPosition = '';\n    this.updateInsertPosition();\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      insertPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n    } else {\n      var position = this.selection.start;\n      if (!this.selection.isForward) {\n        position = this.selection.end;\n      }\n      var blockInfo = this.selection.getParagraphInfo(position);\n      insertPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    }\n    this.documentHelper.owner.isLayoutEnabled = true;\n    this.documentHelper.owner.isPastingContent = true;\n    var layoutWholeDocument = this.pasteCopiedData(widgets, currentFormat);\n    var endPosition = '';\n    this.updateEndPosition();\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      endPosition = this.editorHistory.currentBaseHistoryInfo.endPosition;\n    } else {\n      var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n      endPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    }\n    if (this.selection.start.paragraph.isEmpty() && this.selection.start.paragraph.paragraphFormat.bidi) {\n      this.documentHelper.layout.reLayoutParagraph(this.selection.start.paragraph, 0, 0);\n    }\n    var startPosition = new TextPosition(this.documentHelper.owner);\n    this.setPositionForCurrentIndex(startPosition, insertPosition);\n    var end = new TextPosition(this.documentHelper.owner);\n    this.setPositionForCurrentIndex(end, endPosition);\n    this.pasteTextPosition = {\n      startPosition: startPosition,\n      endPosition: end\n    };\n    this.documentHelper.owner.isPastingContent = false;\n    this.documentHelper.selection.fireSelectionChanged(true);\n    return layoutWholeDocument;\n  };\n  Editor.prototype.pasteCopiedData = function (bodyWidget, currentFormat) {\n    var layoutWholeDocument = false;\n    var hasFootNoteElement = false;\n    if (this.documentHelper.layout.isBidiReLayout) {\n      this.documentHelper.layout.isBidiReLayout = false;\n    }\n    if (this.isPaste && this.isSectionEmpty(this.selection) && !this.selection.start.paragraph.isInHeaderFooter) {\n      this.previousSectionFormat = new WSectionFormat();\n      this.previousSectionFormat.copyFormat(this.selection.start.paragraph.bodyWidget.sectionFormat);\n      this.selection.start.paragraph.bodyWidget.sectionFormat.copyFormat(bodyWidget[0].sectionFormat);\n      this.selection.start.paragraph.bodyWidget.sectionFormat.footerDistance = this.previousSectionFormat.footerDistance;\n      this.selection.start.paragraph.bodyWidget.sectionFormat.headerDistance = this.previousSectionFormat.headerDistance;\n      if (this.owner.viewer instanceof PageLayoutViewer) {\n        var page = this.selection.start.paragraph.bodyWidget.page;\n        this.owner.viewer.updatePageBoundingRectangle(this.selection.start.paragraph.bodyWidget, page, page.boundingRectangle.y);\n        this.owner.viewer.updateClientArea(this.selection.start.paragraph.bodyWidget, page);\n      }\n      layoutWholeDocument = true;\n    }\n    for (var k = 0; k < bodyWidget.length; k++) {\n      if (k !== 0) {\n        this.insertSectionBreak(bodyWidget[k].sectionFormat.breakCode);\n      }\n      var widgets = bodyWidget[k].childWidgets;\n      var isConsiderLastBlock = false;\n      for (var j = 0; j < widgets.length; j++) {\n        var widget = widgets[j];\n        if (widget instanceof TableWidget) {\n          isConsiderLastBlock = true;\n        }\n        if (widget instanceof ParagraphWidget && widget.childWidgets.length === 0) {\n          widget.childWidgets[0] = new LineWidget(widget);\n        }\n        if (widget instanceof ParagraphWidget && !isNullOrUndefined(currentFormat)) {\n          widget.paragraphFormat.copyFormat(currentFormat);\n          var insertFormat = this.copyInsertFormat(this.selection.start.paragraph.characterFormat, false);\n          widget.characterFormat.mergeFormat(insertFormat);\n        }\n        var isPara = widget instanceof ParagraphWidget && (this.owner.enableLocalPaste ? isNullOrUndefined(widget.isCreatedUsingHtmlSpanTag) ? false : !widget.isCreatedUsingHtmlSpanTag : widget.isCreatedUsingHtmlSpanTag);\n        if (widget instanceof ParagraphWidget && (isPara || j === widgets.length - 1 && (this.isLastParaMarkCopied || this.isInsertField || this.isInsertingTOC || isConsiderLastBlock || this.owner.documentHelper.isDragging || this.isRemoteAction)) && !isNullOrUndefined(widget.paragraphFormat.listFormat) && isNullOrUndefined(widget.paragraphFormat.listFormat.list) && widget.paragraphFormat.listFormat.listId === -1) {\n          var newParagraph = widget;\n          if (newParagraph.childWidgets.length > 0 && newParagraph.childWidgets[0].children.length > 0) {\n            var insertPosition = this.selection.start;\n            if ((insertPosition.paragraph.paragraphFormat.textAlignment === 'Center' || insertPosition.paragraph.paragraphFormat.textAlignment === 'Right') && insertPosition.paragraph.paragraphFormat.listFormat.listId === -1) {\n              insertPosition.paragraph.x = this.owner.viewer.clientActiveArea.x;\n            }\n            if (this.currentPasteOptions === 'KeepTextOnly') {\n              var paraFormat = new WParagraphFormat(this.selection.start.paragraph);\n              this.selection.start.paragraph.paragraphFormat = paraFormat;\n            }\n            if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n              this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newParagraph.clone());\n            }\n            hasFootNoteElement = this.insertElement(newParagraph.childWidgets[0].children, newParagraph.paragraphFormat);\n          }\n        } else if (widget instanceof BlockWidget) {\n          var block = widget;\n          var startParagraph = this.selection.start.paragraph;\n          var isTable = block instanceof TableWidget;\n          if (isTable) {\n            var table = block;\n            this.generateTableRevision(table);\n            if (startParagraph.isInsideTable) {\n              //Handled to resize table based on parent cell width.\n              var clientWidth = startParagraph.getContainerWidth();\n              table.fitCellsToClientArea(clientWidth);\n            }\n            if (startParagraph.isEmpty() && startParagraph.previousWidget instanceof TableWidget && !this.isPaste) {\n              this.insertTableRows(table, startParagraph.previousWidget);\n              return layoutWholeDocument;\n            }\n          }\n          this.insertBlockInternal(block);\n        }\n      }\n    }\n    if (hasFootNoteElement) {\n      layoutWholeDocument = true;\n      if (this.pasteFootNoteType === 'Footnote') {\n        this.arrangeFootnoteCollection();\n      } else if (this.pasteFootNoteType === 'Endnote') {\n        this.arrangeEndnoteCollection();\n      }\n    }\n    return layoutWholeDocument;\n  };\n  Editor.prototype.arrangeEndnoteCollection = function () {\n    for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n      for (var j = 0; j < this.documentHelper.endnoteCollection.length - 1 - i; j++) {\n        var currentStart = this.selection.getElementPosition(this.documentHelper.endnoteCollection[j]).startPosition;\n        var nextStart = this.selection.getElementPosition(this.documentHelper.endnoteCollection[j + 1]).startPosition;\n        if (!currentStart.isExistBefore(nextStart)) {\n          var tempElementBox = this.documentHelper.endnoteCollection[j];\n          this.documentHelper.endnoteCollection[j] = this.documentHelper.endnoteCollection[j + 1];\n          this.documentHelper.endnoteCollection[j + 1] = tempElementBox;\n        }\n      }\n    }\n  };\n  Editor.prototype.arrangeFootnoteCollection = function () {\n    for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n      for (var j = 0; j < this.documentHelper.footnoteCollection.length - 1 - i; j++) {\n        var currentStart = this.selection.getElementPosition(this.documentHelper.footnoteCollection[j]).startPosition;\n        var nextStart = this.selection.getElementPosition(this.documentHelper.footnoteCollection[j + 1]).startPosition;\n        if (!currentStart.isExistBefore(nextStart)) {\n          var tempElementBox = this.documentHelper.footnoteCollection[j];\n          this.documentHelper.footnoteCollection[j] = this.documentHelper.footnoteCollection[j + 1];\n          this.documentHelper.footnoteCollection[j + 1] = tempElementBox;\n        }\n      }\n    }\n  };\n  Editor.prototype.generateTableRevision = function (table) {\n    if (this.owner.enableTrackChanges && !isNullOrUndefined(table)) {\n      for (var i = 0; i < table.childWidgets.length; i++) {\n        var row = table.childWidgets[i];\n        this.insertRevision(row.rowFormat, 'Insertion');\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          var cell = row.childWidgets[j];\n          for (var k = 0; k < cell.childWidgets.length; k++) {\n            var para = cell.childWidgets[k];\n            if (!isNullOrUndefined(para)) {\n              this.insertRevisionForBlock(para, 'Insertion');\n            }\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.isSectionEmpty = function (selection) {\n    var startParagraph = selection.start.paragraph;\n    if (startParagraph) {\n      if (startParagraph.isInsideTable || startParagraph.isInHeaderFooter || startParagraph !== selection.end.paragraph) {\n        return false;\n      }\n      var bodyWidget = startParagraph.bodyWidget;\n      if (bodyWidget) {\n        var page = bodyWidget.page;\n        if (page) {\n          if ((isNullOrUndefined(page.previousPage) || page.previousPage.sectionIndex !== page.sectionIndex) && isNullOrUndefined(page.nextPage) && startParagraph.isEmpty() && bodyWidget.childWidgets.length === 1) {\n            var isEmpty = true;\n            var sectionIndex = selection.start.paragraph.bodyWidget.sectionIndex;\n            var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n            if (headerFooters) {\n              for (var index in headerFooters) {\n                var headerFooter = headerFooters[index];\n                if (!isNullOrUndefined(headerFooter)) {\n                  var widget = headerFooter.childWidgets[0];\n                  if (widget instanceof TableWidget) {\n                    isEmpty = false;\n                  } else if (widget instanceof ParagraphWidget && !widget.isEmpty()) {\n                    isEmpty = false;\n                  }\n                } else {\n                  isEmpty = false;\n                }\n                if (!isEmpty) {\n                  break;\n                }\n              }\n              return isEmpty;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * Insert table on undo\n   *\n   * @param {TableWidget} table - Specifies the table\n   * @param {TableWidget} newTable - Speciefies the new table\n   * @param {boolean} moveRows - Specifies the new row\n   * @private\n   * @private {void}\n   */\n  Editor.prototype.insertTableInternal = function (table, newTable, moveRows, skipRemoving) {\n    //Gets the index of current table.\n    var insertIndex = table.index;\n    var owner;\n    var currentParagraph = this.selection.start.paragraph;\n    if (!table.isInsideTable && newTable.isInsideTable) {\n      insertIndex = newTable.index;\n      skipRemoving = true;\n      owner = currentParagraph.containerWidget;\n    }\n    if (moveRows) {\n      //Moves the rows to table.\n      for (var i = 0, index = 0; i < table.childWidgets.length; i++, index++) {\n        var row = table.childWidgets[i];\n        newTable.childWidgets.splice(index, 0, row);\n        row.containerWidget = newTable;\n        table.childWidgets.splice(i, 1);\n        i--;\n      }\n    }\n    if (!currentParagraph.isInsideTable && isNullOrUndefined(owner)) {\n      table.containerWidget = currentParagraph.containerWidget;\n      owner = currentParagraph.containerWidget;\n    } else if (isNullOrUndefined(owner)) {\n      owner = table.containerWidget;\n    }\n    if (table.isInsideTable) {\n      owner = owner.combineWidget(this.owner.viewer);\n    }\n    //remove old table revisions if it is present.\n    this.constructRevisionsForTable(table, false);\n    if (!skipRemoving) {\n      this.removeBlock(table, true);\n    }\n    this.removeRevisionFromTable(table);\n    if (owner instanceof TableCellWidget) {\n      owner = owner.combineWidget(this.owner.viewer);\n    } else {\n      var curretBlock = this.documentHelper.layout.checkAndGetBlock(owner, insertIndex);\n      if (owner.childWidgets.indexOf(curretBlock) !== -1) {\n        insertIndex = owner.childWidgets.indexOf(curretBlock);\n      }\n    }\n    //Inserts table in the current table position.\n    var blockAdvCollection = owner.childWidgets;\n    blockAdvCollection.splice(insertIndex, 0, newTable);\n    if (!skipRemoving) {\n      table.containerWidget = undefined;\n      newTable.index = table.index;\n    }\n    newTable.containerWidget = owner;\n    this.documentHelper.layout.clearTableWidget(newTable, true, true, true);\n    newTable.buildTableColumns();\n    this.constructRevisionsForTable(newTable, true);\n    newTable.isGridUpdated = true;\n    this.updateNextBlocksIndex(newTable, true);\n    this.documentHelper.layout.linkFieldInTable(newTable);\n    this.documentHelper.layout.layoutBodyWidgetCollection(newTable.index, owner, newTable, false);\n  };\n  Editor.prototype.removeRevisionFromTable = function (table) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row.rowFormat.revisions.length > 0) {\n        for (var j = 0; j < row.rowFormat.revisions.length; j++) {\n          if (row.rowFormat.revisions[j].range.length === 0) {\n            var revisionIndex = row.rowFormat.revisions.indexOf(row.rowFormat.revisions[j]);\n            row.rowFormat.revisions.splice(revisionIndex, 1);\n            j--;\n          }\n        }\n      }\n    }\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.canConstructRevision = function (item) {\n    if (item.revisions.length > 0 && item.revisions[0].range.length === 0 || item.removedIds.length > 0) {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.constructRevisionsForTable = function (table, canConstructRevision) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var rowWidget = table.childWidgets[i];\n      if (canConstructRevision) {\n        if (this.canConstructRevision(rowWidget.rowFormat)) {\n          this.constructRevisionFromID(rowWidget.rowFormat, true);\n        }\n        for (var rowIndex = 0; rowIndex < rowWidget.childWidgets.length; rowIndex++) {\n          var cellWidget = rowWidget.childWidgets[rowIndex];\n          for (var paraIndex = 0; paraIndex < cellWidget.childWidgets.length; paraIndex++) {\n            if (cellWidget.childWidgets[paraIndex] instanceof ParagraphWidget) {\n              this.constructRevisionsForBlock(cellWidget.childWidgets[paraIndex], canConstructRevision);\n            } else if (cellWidget.childWidgets[paraIndex] instanceof TableWidget) {\n              this.constructRevisionsForTable(cellWidget.childWidgets[paraIndex], true);\n            }\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(this.owner.editorHistoryModule) && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing)) {\n          this.deleteRevision(rowWidget);\n        } else {\n          this.removeDeletedCellRevision(rowWidget);\n        }\n      }\n    }\n  };\n  Editor.prototype.deleteRevision = function (row) {\n    if (row.rowFormat.revisions.length > 0) {\n      for (var i = 0; i < row.rowFormat.revisions.length; i++) {\n        var currentRevision = row.rowFormat.revisions[i];\n        for (var j = 0; j < currentRevision.range.length; j++) {\n          currentRevision.range.splice(j, 1);\n          j--;\n          this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n        if (currentRevision.range.length === 0) {\n          this.owner.revisions.remove(currentRevision);\n        }\n      }\n    }\n  };\n  Editor.prototype.constructRevisionsForBlock = function (paragraph, canConstructRevision) {\n    for (var linIndex = 0; linIndex < paragraph.childWidgets.length; linIndex++) {\n      var lineWidget = paragraph.childWidgets[linIndex];\n      for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n        if (canConstructRevision) {\n          if (lineWidget.children[elementIndex] instanceof ElementBox && this.canConstructRevision(lineWidget.children[elementIndex])) {\n            this.constructRevisionFromID(lineWidget.children[elementIndex], true);\n          }\n        }\n      }\n    }\n    if (this.canConstructRevision(paragraph.characterFormat)) {\n      this.constructRevisionFromID(paragraph.characterFormat, true);\n    }\n  };\n  /**\n   * @private\n   * @param paraWidget\n   * @param startoffset\n   * @param endoffset\n   * @param revisionId\n   * @param isParaMarkIncluded\n   * @returns {void}\n   */\n  Editor.prototype.applyRevisionForCurrentPara = function (paraWidget, startoffset, endoffset, revisionId, isParaMarkIncluded) {\n    var elementInfo = paraWidget.getInline(startoffset + 1, 0);\n    var currentElement = elementInfo.element;\n    var skipElement = false;\n    if (startoffset === paraWidget.getLength()) {\n      skipElement = true;\n    }\n    // Update the end offset if start and end both are same and both are positioned in the end of previous para of splitted para.\n    if (startoffset === endoffset && paraWidget.nextSplitWidget) {\n      endoffset += currentElement.length;\n    }\n    var endElement = paraWidget.getInline(endoffset, 0).element;\n    // Set false if paraWidget contains nextSplitWidget because we shouldn't include paramark if current para contains nextSplitWidget.\n    if (!isNullOrUndefined(paraWidget.nextSplitWidget)) {\n      isParaMarkIncluded = false;\n    }\n    // Get the total length of previous splitted widgets of current para to include paramark because endoffset point out to the end of current. \n    var lastIndex = 0;\n    var tempPara = paraWidget;\n    while (tempPara) {\n      if (!isNullOrUndefined(tempPara)) {\n        lastIndex += tempPara.getLength();\n      }\n      tempPara = tempPara.previousSplitWidget;\n    }\n    if (!isNullOrUndefined(paraWidget.previousSplitWidget) && lastIndex !== 0 && startoffset !== lastIndex) {\n      skipElement = false;\n    }\n    if (endoffset > lastIndex) {\n      isParaMarkIncluded = true;\n    }\n    if (!isNullOrUndefined(currentElement) && !isNullOrUndefined(endElement)) {\n      if (!skipElement && currentElement === endElement) {\n        currentElement.removedIds.push(revisionId);\n        this.constructRevisionFromID(currentElement, true);\n      } else {\n        while (!isNullOrUndefined(currentElement) && currentElement !== endElement) {\n          if (!skipElement) {\n            currentElement.removedIds.push(revisionId);\n            this.constructRevisionFromID(currentElement, true);\n          }\n          if (!isNullOrUndefined(currentElement.nextNode)) {\n            if (currentElement.nextNode instanceof BookmarkElementBox) {\n              currentElement = currentElement.nextNode;\n            } else {\n              currentElement = currentElement.nextNode.nextValidNodeForTracking;\n            }\n          }\n          skipElement = false;\n        }\n        if (!isNullOrUndefined(currentElement) && !skipElement) {\n          currentElement.removedIds.push(revisionId);\n          this.constructRevisionFromID(currentElement, true);\n        }\n      }\n    } else if (!isNullOrUndefined(currentElement) && !skipElement) {\n      currentElement.removedIds.push(revisionId);\n      this.constructRevisionFromID(currentElement, true);\n    } else if (!isNullOrUndefined(endElement)) {\n      endElement.removedIds.push(revisionId);\n      this.constructRevisionFromID(endElement, true);\n    }\n    if (isParaMarkIncluded) {\n      paraWidget.characterFormat.removedIds.push(revisionId);\n      this.constructRevisionFromID(paraWidget.characterFormat, true);\n    }\n  };\n  /**\n   * Insert table on undo\n   *\n   * @param {Selection} selection - Specified the selection\n   * @param {WBlock} block - Spcifies the block\n   * @param {WTable} table - Specifies the table.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertBlockTable = function (selection, block, table) {\n    var offset = selection.start.offset;\n    var lineIndex = selection.start.paragraph.childWidgets.indexOf(selection.start.currentWidget);\n    if (block instanceof ParagraphWidget && offset > 0) {\n      //Moves the inline items before selection start to the inserted paragraph.\n      this.moveInlines(selection.start.paragraph, block, 0, 0, selection.start.paragraph.firstChild, offset, selection.start.currentWidget);\n      selection.selectParagraphInternal(selection.start.paragraph, true);\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(this.selection.getHierarchicalIndex(block, offset.toString()), true);\n      }\n    }\n    if (offset > 0 && this.checkInsertPosition(selection)) {\n      this.updateHistoryPosition(selection.start, true);\n    }\n    var index = table.indexInOwner;\n    table.containerWidget.childWidgets.splice(index, 0, block);\n    block.containerWidget = table.containerWidget;\n    block.index = table.index;\n    this.updateNextBlocksIndex(block, true);\n    // Insert the revision based on id when perform accept + undo in pagebreak case\n    if (block instanceof ParagraphWidget) {\n      this.constructRevisionsForBlock(block, true);\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(block.index, block.containerWidget, block, false);\n    if (this.checkInsertPosition(selection)) {\n      var paragraph = undefined;\n      if (block instanceof ParagraphWidget) {\n        paragraph = block;\n      }\n      if (block instanceof TableWidget) {\n        paragraph = this.documentHelper.getFirstParagraphInFirstCell(block);\n      }\n      this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n    }\n  };\n  /**\n   * On cut handle selected content remove and relayout\n   *\n   * @param {Selection} selection - Specified the selection\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.handleCut = function (selection) {\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    // this.owner.isShiftingEnabled = true;     \n    var image = undefined;\n    if (startPosition.paragraph === endPosition.paragraph && startPosition.offset + 1 === endPosition.offset) {\n      //Gets selected image and copy image to clipboard.\n      var index = 0;\n      var currentInline = startPosition.paragraph.getInline(endPosition.offset, index);\n      var inline = currentInline.element;\n      image = inline;\n    }\n    var removedCommentStart = this.checkAndRemoveComments();\n    var blockInfo = this.selection.getParagraphInfo(startPosition);\n    selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    this.initHistory('Cut');\n    selection.owner.isShiftingEnabled = true;\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(selection.editPosition, true);\n      }\n    }\n    this.deleteSelectedContent(endPosition.paragraph, selection, startPosition, endPosition, 3);\n    var textPosition = new TextPosition(selection.owner);\n    this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n    selection.selectContent(textPosition, true);\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      if (this.checkEndPosition(selection)) {\n        this.updateHistoryPosition(selection.end, false);\n      }\n    }\n    this.reLayout(selection);\n    this.updateHistoryForComments(removedCommentStart);\n  };\n  Editor.prototype.insertInlineInternal = function (element, revisionType) {\n    var selection = this.selection;\n    var length = element.length;\n    var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n    revisionType = isNullOrUndefined(revisionType) ? 'Insertion' : revisionType;\n    if (selection.start.paragraph.isEmpty()) {\n      var paragraph = selection.start.paragraph;\n      if ((paragraph.paragraphFormat.textAlignment === 'Center' || paragraph.paragraphFormat.textAlignment === 'Right') && paragraph.paragraphFormat.listFormat.listId === -1) {\n        paragraph.x = this.owner.viewer.clientActiveArea.x;\n      }\n      var isUndoing = !isNullOrUndefined(this.editorHistory) ? this.editorHistory.isUndoing || this.editorHistory.isRedoing : false;\n      paragraph.childWidgets[0].children.push(element);\n      element.line = paragraph.childWidgets[0];\n      if (this.owner.enableTrackChanges && element.isValidNodeForTracking && !isUndoing) {\n        this.insertRevision(element, revisionType);\n      }\n      if (element.removedIds.length > 0 || isUndoing) {\n        this.constructRevisionFromID(element, true);\n      }\n      element.linkFieldCharacter(this.documentHelper);\n      if (element instanceof FootnoteElementBox) {\n        if (element.footnoteType === 'Footnote') {\n          this.updateFootnoteCollection(element);\n        }\n        if (element.footnoteType === 'Endnote') {\n          this.updateEndnoteCollection(element);\n        }\n      }\n      this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0, undefined, undefined);\n    } else {\n      var indexInInline = 0;\n      var inlineObj = selection.start.currentWidget.getInline(selection.start.offset, indexInInline);\n      var curInline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      this.insertElementInternal(curInline, element, indexInInline, revisionType, true);\n    }\n    var revision = element.revisions[0];\n    if (!isNullOrUndefined(revision)) {\n      this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n    }\n    this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n  };\n  Editor.prototype.insertElement = function (element, paragraphFormat) {\n    var isElementHasEndNote = false;\n    var selection = this.selection;\n    var length = 0;\n    var paragraph = undefined;\n    var lineIndex = -1;\n    var lineWidget = undefined;\n    var insertIndex = 0;\n    var begin = undefined;\n    var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n    var isTrackingEnabled = this.owner.enableTrackChanges;\n    var curInline = undefined;\n    var prevElement = undefined;\n    var indexInInline = 0;\n    if (selection.start.paragraph.isEmpty()) {\n      paragraph = selection.start.paragraph;\n      lineWidget = paragraph.childWidgets[0];\n      lineIndex = 0;\n    } else {\n      var inlineObj = selection.start.currentWidget.getInline(selection.start.offset, indexInInline);\n      curInline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      paragraph = curInline.line.paragraph;\n      lineIndex = paragraph.childWidgets.indexOf(curInline.line);\n      insertIndex = curInline.indexInOwner;\n      lineWidget = curInline.line;\n      if (indexInInline === curInline.length) {\n        // Add new Element in current \n        insertIndex++;\n        begin = false;\n      } else if (indexInInline === 0) {\n        if (isNullOrUndefined(curInline.previousNode)) {\n          insertIndex = 0;\n        }\n        begin = true;\n      } else {\n        insertIndex++;\n        prevElement = new TextElementBox();\n        prevElement.characterFormat.copyFormat(curInline.characterFormat);\n        prevElement.text = curInline.text.substring(indexInInline);\n        curInline.text = curInline.text.slice(0, indexInInline);\n        if (curInline.revisions.length > 0 && !this.owner.enableTrackChanges) {\n          this.splitRevisionForSpittedElement(curInline, prevElement);\n        }\n        lineWidget.children.splice(insertIndex, 0, prevElement);\n        prevElement.line = curInline.line;\n      }\n    }\n    for (var i = 0; i < element.length; i++) {\n      length += element[i].length;\n      if (element[i] instanceof TextElementBox && element[i].text.indexOf(' ') >= 0) {\n        this.documentHelper.triggerSpellCheck = true;\n      }\n      var prevRevisionsCount = element[i].revisions.length;\n      element[i].ischangeDetected = true;\n      lineWidget.children.splice(insertIndex, 0, element[i]);\n      element[i].line = lineWidget;\n      element[i].linkFieldCharacter(this.documentHelper);\n      var isRevisionCombined = this.updateRevisionForElement(curInline, element[i], indexInInline, i === 0 ? true : false, prevElement, begin);\n      //Check to combine elements with previous / next para\n      if (isTrackingEnabled && !isRevisionCombined && element[i].revisions.length === prevRevisionsCount) {\n        //if (!(element[i] instanceof FieldElementBox && (element[i] as FieldElementBox).fieldType === 2)) {\n        this.checkToCombineRevisionsinBlocks(element[i], prevRevisionsCount === element[i].revisions.length, i > 0 && i === element.length - 1, 'Insertion');\n        //}\n      }\n      curInline = element[i];\n      insertIndex++;\n      if (element[i] instanceof FootnoteElementBox) {\n        this.pasteFootNoteType = element[i].footnoteType;\n        isElementHasEndNote = true;\n      }\n    }\n    if (!this.isPaste && paragraphFormat && (isNullOrUndefined(paragraph.paragraphFormat.listFormat.list) || !isNullOrUndefined(paragraph.paragraphFormat.listFormat) && paragraph.paragraphFormat.listFormat.listId === -1)) {\n      paragraph.paragraphFormat.copyFormat(paragraphFormat);\n    }\n    if (this.isPaste) {\n      if (this.isRemoteAction) {\n        var revision = paragraphFormat.ownerBase.characterFormat.revisions;\n        var isBreak = false;\n        for (var i = 0; i < revision.length; i++) {\n          paragraph.characterFormat.revisions.push(revision[i]);\n          var range = revision[i].range;\n          for (var j = 0; j < range.length; j++) {\n            if (range[j] instanceof WCharacterFormat && range[j] == paragraphFormat.ownerBase.characterFormat) {\n              range.splice(j, 1);\n              range.push(paragraph.characterFormat);\n              isBreak = true;\n              break;\n            }\n          }\n          if (isBreak) {\n            break;\n          }\n        }\n      }\n      this.viewer.updateClientAreaForBlock(paragraph, true);\n      paragraph.x = this.viewer.clientActiveArea.x;\n    }\n    this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, 0, this.isInsertField ? undefined : paragraph.paragraphFormat.bidi);\n    this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n    return isElementHasEndNote;\n  };\n  Editor.prototype.updateRevisionForElement = function (currentElement, newElement, indexInInline, isFirstItem, prevElement, isBeginning) {\n    if (!this.owner.enableTrackChanges) {\n      return false;\n    }\n    if (isNullOrUndefined(currentElement) && isNullOrUndefined(prevElement)) {\n      return false;\n    }\n    var isMiddle = isNullOrUndefined(isBeginning) ? true : false;\n    var prevRevisionCount = newElement.revisions.length;\n    if (isFirstItem) {\n      if (isMiddle) {\n        var isRevisionCombined = this.checkToMapRevisionWithInlineText(currentElement, indexInInline, newElement, false, 'Insertion');\n        if (isRevisionCombined || newElement.revisions.length > prevRevisionCount) {\n          this.copyElementRevision(currentElement, prevElement, true);\n        } else if (newElement.revisions.length === 0) {\n          this.splitRevisionForSpittedElement(currentElement, prevElement);\n          this.insertRevision(newElement, 'Insertion');\n        }\n      } else if (isBeginning) {\n        return this.insertRevisionAtBegining(currentElement, newElement, 'Insertion');\n      } else {\n        return this.insertRevisionAtEnd(currentElement, newElement, 'Insertion');\n      }\n    } else {\n      // if (currentElement instanceof FieldElementBox && currentElement.fieldType === 2) {\n      //     currentElement = (currentElement as FieldElementBox).previousElement;\n      // }\n      return this.insertRevisionAtEnd(currentElement, newElement, 'Insertion');\n    }\n    return false;\n  };\n  Editor.prototype.insertElementInternal = function (element, newElement, index, revisionType, relayout) {\n    var line = element.line;\n    var paragraph = line.paragraph;\n    var lineIndex = line.indexInOwner;\n    var insertIndex = element.indexInOwner;\n    var isBidi = paragraph.paragraphFormat.bidi && element.isRightToLeft;\n    var isEqualFormat = false;\n    revisionType = isNullOrUndefined(revisionType) ? 'Insertion' : revisionType;\n    var isUndoing = this.skipTracking();\n    var isTrackingEnabled = this.owner.enableTrackChanges;\n    var isRevisionCombined = false;\n    var prevRevisionCount = newElement.revisions.length;\n    if (this.owner.editorHistoryModule && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing) && newElement instanceof TextElementBox) {\n      isEqualFormat = element.characterFormat.isEqualFormat(newElement.characterFormat) && this.documentHelper.textHelper.isRTLText(newElement.text);\n    }\n    if (!isEqualFormat) {\n      if (index === element.length) {\n        // Add new Element in current \n        insertIndex = this.incrementCommentIndex(isBidi, element, insertIndex);\n        if (newElement.removedIds.length > 0 || isUndoing) {\n          this.constructRevisionFromID(newElement, true, element);\n        } else if (isTrackingEnabled && !isUndoing && !this.skipFieldDeleteTracking) {\n          isRevisionCombined = this.insertRevisionAtEnd(element, newElement, revisionType);\n        }\n        line.children.splice(insertIndex, 0, newElement);\n      } else if (index === 0) {\n        if (newElement.removedIds.length > 0) {\n          this.constructRevisionFromID(newElement, false);\n        } else if (isTrackingEnabled && !isUndoing && !this.skipFieldDeleteTracking) {\n          isRevisionCombined = this.insertRevisionAtBegining(element, newElement, revisionType);\n        }\n        if (isNullOrUndefined(element.previousNode)) {\n          element.line.children.splice(0, 0, newElement);\n          insertIndex = 0;\n        } else {\n          element.line.children.splice(insertIndex, 0, newElement);\n        }\n      } else if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.isHyperlinkField && newElement instanceof FieldElementBox && newElement.fieldType === 1 && newElement.removedIds.length > 0) {\n        this.constructRevisionFromID(newElement, false);\n        line.children.splice(insertIndex, 0, newElement);\n      } else {\n        insertIndex = this.incrementCommentIndex(isBidi, element, insertIndex);\n        var textElement = new TextElementBox();\n        textElement.characterFormat.copyFormat(element.characterFormat);\n        textElement.text = element.text.substring(index);\n        if (element.revisions.length > 0 && !isTrackingEnabled && !isUndoing && newElement.removedIds.length === 0) {\n          this.splitRevisionForSpittedElement(element, textElement);\n        }\n        element.text = element.text.substr(0, index);\n        line.children.splice(insertIndex, 0, textElement);\n        textElement.line = element.line;\n        isRevisionCombined = true;\n        this.isTrackingFormField = element.previousElement instanceof FieldElementBox ? true : false;\n        if (newElement.removedIds.length > 0 && !this.isTrackingFormField) {\n          this.constructRevisionFromID(newElement, false);\n          this.copyElementRevision(element, textElement, true);\n        } else if (this.owner.enableTrackChanges) {\n          if (!(newElement instanceof BookmarkElementBox) && !(newElement instanceof CommentCharacterElementBox) && !(newElement instanceof EditRangeStartElementBox) && !(newElement instanceof EditRangeEndElementBox)) {\n            var isRevisionCombined_1 = this.checkToMapRevisionWithInlineText(element, index, newElement, isBidi, revisionType);\n            if (isRevisionCombined_1 || newElement.revisions.length > prevRevisionCount) {\n              this.copyElementRevision(element, textElement, true);\n            } else if (newElement.revisions.length === prevRevisionCount) {\n              this.splitRevisionForSpittedElement(element, textElement);\n              this.insertRevision(newElement, revisionType);\n            }\n          } else {\n            this.copyElementRevision(element, textElement, false);\n          }\n        }\n        //Inserts the new inline.\n        line.children.splice(insertIndex, 0, newElement);\n        insertIndex -= 1;\n      }\n    } else {\n      element.text = element.text.substring(0, index) + newElement.text + element.text.substring(index);\n    }\n    newElement.line = element.line;\n    if (newElement instanceof BookmarkElementBox) {\n      var bookmarkCol = this.documentHelper.bookmarks;\n      if (newElement.reference) {\n        newElement.reference.reference = newElement;\n      }\n      if (!bookmarkCol.containsKey(newElement.name)) {\n        bookmarkCol.add(newElement.name, newElement);\n      }\n    }\n    if (!isNullOrUndefined(newElement.line.paragraph.containerWidget) && !isNullOrUndefined(newElement.line.paragraph.containerWidget.containerWidget) && newElement.line.paragraph.containerWidget.containerWidget instanceof FootNoteWidget) {\n      newElement.line.paragraph.containerWidget.containerWidget.height += newElement.height;\n    }\n    newElement.linkFieldCharacter(this.documentHelper);\n    if (newElement instanceof ContentControl && newElement.type === 0) {\n      this.documentHelper.contentControlCollection.push(newElement);\n    }\n    if (newElement instanceof ImageElementBox && newElement.textWrappingStyle !== 'Inline' || newElement instanceof ShapeElementBox) {\n      if (paragraph.floatingElements.indexOf(newElement) === -1) {\n        paragraph.floatingElements.push(newElement);\n      }\n      if (paragraph.bodyWidget.floatingElements.indexOf(newElement) === -1 && newElement.textWrappingStyle !== 'Inline') {\n        paragraph.bodyWidget.floatingElements.push(newElement);\n      }\n    }\n    if (isTrackingEnabled && !isRevisionCombined && !isUndoing && !this.skipFieldDeleteTracking) {\n      this.checkToCombineRevisionsinBlocks(newElement, prevRevisionCount === newElement.revisions.length, index === element.length, revisionType);\n    }\n    if (newElement instanceof FootnoteElementBox) {\n      if (isUndoing) {\n        // this.documentHelper.layout.isLayoutWhole = true;\n        newElement.isLayout = false;\n      }\n      if (newElement.footnoteType === 'Footnote') {\n        this.updateFootnoteCollection(newElement);\n      }\n      if (newElement.footnoteType === 'Endnote') {\n        this.updateEndnoteCollection(newElement);\n      }\n    }\n    if (relayout) {\n      this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, insertIndex, undefined, undefined);\n    }\n  };\n  Editor.prototype.incrementCommentIndex = function (isBidi, element, insertIndex) {\n    if (!this.owner.editorHistoryModule || !(this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentHistoryInfo) || this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentHistoryInfo && (this.owner.editorHistoryModule.currentHistoryInfo.action !== \"SkipCommentInline\" || this.owner.editorHistoryModule.currentHistoryInfo.action === \"SkipCommentInline\" && (this.owner.editorHistoryModule.currentHistoryInfo.modifiedActions[0] === this.editorHistory.currentBaseHistoryInfo || this.owner.editorHistoryModule.currentHistoryInfo.modifiedActions[0] !== this.editorHistory.currentBaseHistoryInfo && !(element instanceof CommentCharacterElementBox)))) {\n      insertIndex++;\n    }\n    return insertIndex;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Editor.prototype.constructRevisionFromID = function (insertElement, isEnd, prevElement) {\n    if (insertElement.removedIds.length > 0) {\n      for (var i = 0; i < insertElement.removedIds.length; i++) {\n        var revisionToInclude = undefined;\n        if (this.documentHelper.revisionsInternal.containsKey(insertElement.removedIds[i])) {\n          revisionToInclude = this.documentHelper.revisionsInternal.get(insertElement.removedIds[i]);\n          insertElement.revisions.push(revisionToInclude);\n          if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            // Handle collab editing for track changes.\n            this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(insertElement, undefined, revisionToInclude));\n          }\n          var isFieldBeginRedoing = insertElement instanceof FieldElementBox && insertElement.fieldType === 0;\n          isEnd = isEnd ? true : !isFieldBeginRedoing && this.skipTracking();\n          var isInsertEnd = false;\n          // Bug 873011: Handled the revision update for Accept Change action on undoing.\n          if (this.editorHistory.isUndoing && this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Accept Change' && insertElement instanceof FieldElementBox && insertElement.fieldType === 1) {\n            isInsertEnd = true;\n          }\n          if (isEnd) {\n            if (this.editorHistory.isRedoing && this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'BackSpace' && this.selection.isTOC()) {\n              isEnd = false;\n            }\n            // Bug 873011: Handled the revision update for Remove Hyperlink action on redoing.\n            if (this.editorHistory.isRedoing && this.owner.editorHistoryModule.currentHistoryInfo && this.owner.editorHistoryModule.currentHistoryInfo.action === 'RemoveHyperlink' && insertElement instanceof FieldElementBox && insertElement.fieldType === 0) {\n              isEnd = false;\n            }\n          }\n          if (!isNullOrUndefined(prevElement)) {\n            var rangeIndex = revisionToInclude.range.indexOf(prevElement);\n            if (rangeIndex === -1 && isInsertEnd && revisionToInclude.range.length > 0) {\n              rangeIndex = revisionToInclude.range.indexOf(revisionToInclude.range[revisionToInclude.range.length - 1]);\n            }\n            if (rangeIndex >= 0) {\n              revisionToInclude.range.splice(rangeIndex + (isEnd ? 1 : 0), 0, insertElement);\n            } else {\n              revisionToInclude.range.splice(0, 0, insertElement);\n            }\n          } else {\n            var insertIndex = void 0;\n            if (!isNullOrUndefined(this.owner.editorHistory) && (this.owner.editorHistory.isUndoing || this.owner.editorHistory.isRedoing) && !(insertElement instanceof WRowFormat)) {\n              var currentElementIndex = this.owner.selectionModule.start.paragraph.index;\n              var isInsideTable = this.owner.selectionModule.start.paragraph.isInsideTable;\n              var existingIndex = 0;\n              if (!isInsideTable) {\n                for (var j = 0; j < revisionToInclude.range.length; j++) {\n                  if (revisionToInclude.range[j] instanceof TextElementBox) {\n                    existingIndex = revisionToInclude.range[j].paragraph.index;\n                  } else if (revisionToInclude.range[j] instanceof WCharacterFormat) {\n                    existingIndex = revisionToInclude.range[j].ownerBase.index;\n                  }\n                  if (currentElementIndex < existingIndex) {\n                    insertIndex = j;\n                    break;\n                  }\n                }\n              }\n            }\n            if (isNullOrUndefined(insertIndex)) {\n              if (isEnd) {\n                insertIndex = revisionToInclude.range.length;\n              } else {\n                insertIndex = 0;\n              }\n            }\n            revisionToInclude.range.splice(insertIndex, 0, insertElement);\n          }\n          this.owner.trackChangesPane.updateCurrentTrackChanges(revisionToInclude);\n          this.updateRevisionCollection(revisionToInclude);\n        }\n      }\n      insertElement.removedIds = [];\n    } else {\n      // on undoing revisions will be cloned , so need to update range information.\n      for (var i = 0; i < insertElement.revisions.length; i++) {\n        var currentRevision = insertElement.revisions[i];\n        if (this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n          currentRevision = this.documentHelper.revisionsInternal.get(currentRevision.revisionID);\n          currentRevision.range.splice(isEnd ? currentRevision.range.length : 0, 0, insertElement);\n          this.updateRevisionCollection(currentRevision);\n        }\n      }\n    }\n  };\n  /**\n   * Insert block on undo\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {WBlock} block - Specifes the block\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertBlock = function (block) {\n    var isRemoved = true;\n    var isSkipEmptyPara = false;\n    var selection = this.selection;\n    if (!selection.isEmpty) {\n      isRemoved = this.removeSelectedContents(selection);\n      isSkipEmptyPara = true;\n    }\n    if (!isRemoved) {\n      selection.selectContent(selection.start, false);\n    }\n    this.insertBlockInternal(block, isSkipEmptyPara);\n    if (this.checkInsertPosition(selection)) {\n      var paragraph = undefined;\n      if (block instanceof ParagraphWidget) {\n        paragraph = block;\n      } else {\n        paragraph = this.documentHelper.getFirstParagraphInFirstCell(block);\n      }\n      this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n    }\n    this.fireContentChange();\n  };\n  Editor.prototype.insertBlockInternal = function (block, isRemoved) {\n    var selection = this.selection;\n    var startPara = this.selection.start.paragraph;\n    var paraStart = this.selection.start.isAtParagraphStart;\n    if (!selection.start.isAtParagraphStart) {\n      if (block instanceof ParagraphWidget) {\n        if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking()) {\n          this.insertRevisionForBlock(block, 'Insertion');\n        }\n        var startPosition = selection.start.clone();\n        //let prevBlock: ParagraphWidget = (block as ParagraphWidget).clone()\n        if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking()) {\n          this.insertRevisionForBlock(block, 'Insertion');\n        }\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n          if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(block.clone());\n          }\n        }\n        this.insertNewParagraphWidget(block, false);\n        if (!this.isInsertingTOC) {\n          this.combineRevisions(block, startPosition, this.selection.end);\n        }\n        return;\n      }\n      this.updateInsertPosition();\n      startPara = startPara.combineWidget(this.owner.viewer);\n      if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n        if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n          this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(startPara);\n        }\n      }\n      this.splitParagraph(startPara, startPara.firstChild, 0, selection.start.currentWidget, selection.start.offset, false);\n      selection.selectParagraphInternal(this.selection.start.paragraph, true);\n    }\n    var bodyWidget = selection.start.paragraph.containerWidget;\n    var blockIndex = selection.start.paragraph.index;\n    if (!isNullOrUndefined(bodyWidget)) {\n      if (!isNullOrUndefined(this.editorHistory)) {\n        if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && !this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n          this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(block.clone());\n        }\n        // Added the condition to skip adding an empty paragraph when performing a redo if the document has an empty case.\n        if (this.editorHistory.isRedoing && isRemoved && bodyWidget.firstChild instanceof ParagraphWidget && bodyWidget.firstChild.isEmpty() && bodyWidget.firstChild === bodyWidget.lastChild && block instanceof ParagraphWidget && block.isEmpty()) {\n          return;\n        }\n      }\n      var insertIndex = bodyWidget.childWidgets.indexOf(selection.start.paragraph);\n      bodyWidget.childWidgets.splice(insertIndex, 0, block);\n      block.containerWidget = bodyWidget;\n      block.index = blockIndex;\n      block.height = 0;\n      if (block instanceof TableWidget) {\n        block.isGridUpdated = false;\n        block.buildTableColumns();\n        block.isGridUpdated = true;\n      }\n      this.updateNextBlocksIndex(block, true);\n      if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking() && block instanceof ParagraphWidget) {\n        this.insertRevisionForBlock(block, 'Insertion');\n      } else if (block instanceof ParagraphWidget) {\n        this.constructRevisionsForBlock(block, true);\n      } else if (block instanceof TableWidget) {\n        this.constructRevisionsForTable(block, true);\n      }\n      if (this.documentHelper.owner.editorModule.isRemoteAction && !paraStart && block instanceof TableWidget) {\n        this.updateNextBlocksIndex(block.nextWidget, false);\n        bodyWidget.childWidgets.splice(block.indexInOwner + 1, 1);\n      }\n      this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, bodyWidget, block, false);\n    }\n  };\n  /**\n   * Inserts the image with specified size at cursor position in the document editor.\n   *\n    *\n   * @param {string} imageString  Base64 string, web URL or file URL.\n   * @param {number} width Specify the image width.\n   * @param {number} height Specify the image height.\n   * @param {string} alternateText Specify the image alternateText.\n   * @returns {void}\n   */\n  Editor.prototype.insertImage = function (imageString, width, height, alternateText) {\n    this.insertImageInternal(imageString, false, width, height, alternateText);\n  };\n  /**\n   * Inserts an image with a specified size at the cursor position in the DocumentEditor component.\n   *\n   * @param {string} imageString - The Base64 string, web URL, or file URL of the image to be inserted.\n   * @param {number} width - The width of the image. Optional parameter, if not specified, the original width of the image will be used.\n   * @param {number} height - The height of the image. Optional parameter, if not specified, the original height of the image will be used.\n   * @param {string} alternateText - The alternate text of the image. Optional parameter, if specified, this text will be displayed when the image is not available or when images are disabled in the document.\n   * @returns {Promise<void>} - A Promise that is resolved when the image has been inserted successfully, or rejected if the image could not be inserted for any reason.\n   */\n  Editor.prototype.insertImageAsync = function (imageString, width, height, alternateText) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.insertImageInternal(imageString, false, width, height, alternateText)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Inserts the image with specified size at cursor position in the document editor.\n   *\n   * @private\n   * @param {string} imageString Base64 string, web URL or file URL.\n   * @param {boolean} isUiInteracted Is image instered from UI interaction.\n   * @param {number} width? Image width\n   * @param {number} height? Image height\n   * @param {string} alternateText? Image alternateText\n   * @returns {void}\n   */\n  Editor.prototype.insertImageInternal = function (imageString, isUiInteracted, width, height, alternateText) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var formField = _this.selection.getCurrentFormField();\n          var isFormFillProtectedMode = _this.documentHelper.protectionType === 'FormFieldsOnly' && !isNullOrUndefined(formField) && formField.formFieldData instanceof TextFormField;\n          if ((_this.owner.isReadOnlyMode || !_this.canEditContentControl) && !isFormFillProtectedMode) {\n            resolve();\n            return;\n          }\n          if (isNullOrUndefined(width) && isNullOrUndefined(height)) {\n            var image = document.createElement('img');\n            var editor_1 = _this;\n            image.addEventListener('load', function () {\n              editor_1.insertPicture(imageString, this.width, this.height, this.alt, true);\n              resolve();\n            });\n            image.src = imageString;\n          } else {\n            _this.insertPicture(imageString, width, height, alternateText, isUiInteracted);\n            resolve();\n          }\n          setTimeout(function () {\n            if (!isNullOrUndefined(_this.documentHelper)) {\n              _this.viewer.updateScrollBars();\n            }\n          }, 30);\n        })];\n      });\n    });\n  };\n  /**\n   * Inserts a table of specified size at cursor position in the document editor.\n   *\n   * @param {number} rows Default value of ‘rows’ parameter is 1.\n   * @param {number} columns Default value of ‘columns’ parameter is 1.\n   * @returns {void}\n   */\n  Editor.prototype.insertTable = function (rows, columns) {\n    var startPos = this.selection.start;\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    rows = rows || 1;\n    columns = columns || 1;\n    var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n    localeValue.setLocale(this.documentHelper.owner.locale);\n    if (columns < 1 || columns > this.documentHelper.owner.documentEditorSettings.maximumColumns) {\n      var columnAlertPopup = localeValue.getConstant('Number of columns must be between') + ' 1 ' + localeValue.getConstant('and') + ' ' + this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n      DialogUtility.alert(columnAlertPopup).enableRtl = this.documentHelper.owner.enableRtl;\n      return;\n    }\n    if (rows < 1 || rows > this.documentHelper.owner.documentEditorSettings.maximumRows) {\n      var rowAlertPopup = localeValue.getConstant('Number of rows must be between') + ' 1 ' + localeValue.getConstant('and') + ' ' + this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n      localeValue.getConstant('Number of rows must be between 1 and 32767.').replace(\"32767\", this.documentHelper.owner.documentEditorSettings.maximumRows.toString());\n      DialogUtility.alert(rowAlertPopup).enableRtl = this.documentHelper.owner.enableRtl;\n      return;\n    }\n    var table = this.createTable(rows, columns);\n    var clientWidth = startPos.paragraph.getContainerWidth() - table.tableFormat.leftIndent;\n    table.splitWidthToTableCells(clientWidth);\n    var removedComment;\n    var prevBlock = startPos.paragraph.previousWidget;\n    if (startPos.currentWidget.isFirstLine() && startPos.offset === 0 && prevBlock instanceof TableWidget) {\n      this.insertTableRows(table, prevBlock);\n      table.destroy();\n      return;\n    } else {\n      removedComment = this.checkAndRemoveComments();\n      this.initHistory('InsertTable');\n      this.documentHelper.owner.isShiftingEnabled = true;\n      this.insertBlock(table);\n      if (!isNullOrUndefined(table.containerWidget) && !isNullOrUndefined(table.containerWidget.containerWidget) && table.containerWidget.containerWidget instanceof FootNoteWidget) {\n        table.containerWidget.containerWidget.height += table.height;\n        this.isTableInsert = true;\n      }\n    }\n    var startLine = this.documentHelper.getFirstParagraphInFirstCell(table).childWidgets[0];\n    startPos.setPosition(startLine, true);\n    this.selection.end.setPositionInternal(startPos);\n    var lastParagraph = this.documentHelper.getLastParagraphInLastCell(table.getSplitWidgets().pop());\n    var endOffset = lastParagraph.getLength() + 1;\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(lastParagraph, endOffset.toString());\n    }\n    this.reLayout(this.selection);\n    this.isTableInsert = false;\n    this.updateHistoryForComments(removedComment);\n  };\n  /**\n   * Inserts the specified number of rows to the table above or below to the row at cursor position.\n   *\n   * @param {boolean} above The above parameter is optional and if omitted,\n   * it takes the value as false and inserts below the row at cursor position.\n   * @param {number} count The count parameter is optional and if omitted, it takes the value as 1.\n   * @returns {void}\n   */\n  Editor.prototype.insertRow = function (above, count) {\n    var rowPlacement = above ? 'Above' : 'Below';\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    var isInsertRow = true;\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    if (startPos.paragraph.isInsideTable) {\n      if (this.checkIsNotRedoing()) {\n        this.initHistory(rowPlacement === 'Above' ? 'InsertRowAbove' : 'InsertRowBelow');\n      }\n      this.documentHelper.owner.isShiftingEnabled = true;\n      var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n      var endCell = this.getOwnerCell(!this.selection.isForward).getSplitWidgets()[0];\n      var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n      var row = rowPlacement === 'Below' ? endCell.ownerRow : startCell.ownerRow;\n      if (this.editorHistory) {\n        var clonedTable = this.cloneTableToHistoryInfo(table);\n      }\n      this.rowInsertion(count, rowPlacement, startCell, endCell, row, table, isInsertRow);\n    }\n    this.reLayout(this.selection, true);\n  };\n  Editor.prototype.rowInsertion = function (count, rowPlacement, startCell, endCell, row, table, isInsertRow) {\n    var rowCount = count ? count : this.getRowCountToInsert();\n    var rows = [];\n    var index = row.rowIndex;\n    if (rowPlacement === 'Below') {\n      index++;\n      var isAffectedByRowSpannedCell = isNullOrUndefined(endCell.previousWidget) || endCell.columnIndex === endCell.previousWidget.columnIndex + 1;\n      var isRowSpanEnd = endCell.cellIndex !== endCell.columnIndex && isAffectedByRowSpannedCell && row.rowIndex + startCell.cellFormat.rowSpan - 1 === endCell.ownerRow.rowIndex;\n      if (!isRowSpanEnd) {\n        if (endCell.cellFormat.rowSpan > 1) {\n          if (!isNullOrUndefined(row.nextWidget) && row.nextWidget instanceof TableRowWidget) {\n            endCell.cellFormat.rowSpan += rowCount;\n            row = row.nextWidget;\n          }\n        }\n      }\n      row.bottomBorderWidth = 0;\n    }\n    for (var i = 0; i < rowCount; i++) {\n      var cellCountInfo = this.updateRowspan(row, rowPlacement === 'Below' ? endCell : startCell, rowPlacement);\n      var newRow = this.createRowAndColumn(cellCountInfo.count, i, index, table);\n      newRow.rowFormat = row.rowFormat.cloneFormat();\n      newRow.rowFormat.ownerBase = newRow;\n      if (this.owner.enableTrackChanges) {\n        this.insertRevision(newRow.rowFormat, 'Insertion');\n      }\n      this.updateCellFormatForInsertedRow(newRow, cellCountInfo.cellFormats);\n      if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n        this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newRow);\n      }\n      rows.push(newRow);\n    }\n    table.insertTableRowsInternal(rows, index, isInsertRow);\n    var cell = undefined;\n    var paragraph = undefined;\n    if (table.childWidgets[index] instanceof TableRowWidget) {\n      cell = table.childWidgets[index].firstChild;\n      paragraph = this.selection.getFirstParagraph(cell);\n    } else {\n      var widget = undefined;\n      while (!(widget instanceof TableWidget)) {\n        widget = table.nextRenderedWidget;\n      }\n      paragraph = this.documentHelper.getFirstParagraphInFirstCell(widget);\n    }\n    if (isInsertRow) {\n      this.documentHelper.layout.reLayoutTable(table);\n    }\n    this.selection.selectParagraphInternal(paragraph, true);\n  };\n  /**\n   * Fits the table based on AutoFitType.\n   *\n   * @param {AutoFitType} fitType Specify the auto fit type.\n   * @returns {void}\n   */\n  Editor.prototype.autoFitTable = function (fitType) {\n    if (this.documentHelper.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    this.insertAutoFitTable(fitType);\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertAutoFitTable = function (fitType, tableAdv) {\n    if (isNullOrUndefined(tableAdv)) {\n      var startPosition = this.selection.start;\n      var endPosition = this.selection.end;\n      if (!this.selection.isForward) {\n        startPosition = this.selection.end;\n        endPosition = this.selection.start;\n      }\n      tableAdv = this.selection.getTable(startPosition, endPosition);\n      tableAdv = tableAdv.getSplitWidgets()[0];\n    }\n    var parentTable = this.documentHelper.layout.getParentTable(tableAdv);\n    if (!isNullOrUndefined(parentTable)) {\n      this.setOffsetValue(this.selection);\n      parentTable = parentTable.combineWidget(this.owner.viewer);\n      this.initHistory(fitType === 'FitToContents' ? 'TableAutoFitToContents' : fitType === 'FitToWindow' ? 'TableAutoFitToWindow' : 'TableFixedColumnWidth');\n      if (this.documentHelper.owner.editorHistoryModule) {\n        this.cloneTableToHistoryInfo(parentTable);\n      }\n      parentTable.updateProperties(true, tableAdv, fitType);\n      this.documentHelper.owner.isShiftingEnabled = true;\n      //Layouts the table.\n      this.documentHelper.layout.reLayoutTable(tableAdv);\n      this.reLayout(this.selection, true);\n    }\n  };\n  /**\n   * Inserting the row for collaborative editing.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.rowInsertionForCE = function (index, cellCount, insertrow, table, rowData, cellData, paragraphData, characterData) {\n    var rows = [];\n    for (var i = 0; i < insertrow; i++) {\n      var newRow = this.createRowAndColumn(cellCount, i, index, table);\n      this.documentHelper.owner.parser.parseRowFormat(rowData, newRow.rowFormat, 0);\n      for (var j = 0; j < cellCount; j++) {\n        var cellWidget = newRow.childWidgets[j];\n        this.documentHelper.owner.parser.parseCellFormat(cellData[j], cellWidget.cellFormat, 0);\n        this.documentHelper.owner.parser.parseParagraphFormat(0, paragraphData[j], cellWidget.childWidgets[0].paragraphFormat);\n        this.documentHelper.owner.parser.parseCharacterFormat(0, characterData[j], cellWidget.childWidgets[0].characterFormat);\n      }\n      if (this.owner.enableTrackChanges) {\n        this.insertRevision(newRow.rowFormat, 'Insertion');\n      }\n      rows.push(newRow);\n    }\n    table.insertTableRowsInternal(rows, index, true);\n    var cell = undefined;\n    var paragraph = undefined;\n    if (table.childWidgets[index] instanceof TableRowWidget) {\n      cell = table.childWidgets[index].firstChild;\n      paragraph = this.selection.getFirstParagraph(cell);\n    } else {\n      var widget = undefined;\n      while (!(widget instanceof TableWidget)) {\n        widget = table.nextRenderedWidget;\n      }\n      paragraph = this.documentHelper.getFirstParagraphInFirstCell(widget);\n    }\n    this.documentHelper.layout.reLayoutTable(table);\n    this.selection.selectParagraphInternal(paragraph, true);\n    this.reLayout(this.selection, true);\n  };\n  Editor.prototype.updateCellFormatForInsertedRow = function (newRow, cellFormats) {\n    for (var i = 0; i < newRow.childWidgets.length; i++) {\n      newRow.childWidgets[i].cellFormat.copyFormat(cellFormats[i]);\n      newRow.childWidgets[i].cellFormat.rowSpan = 1;\n    }\n  };\n  Editor.prototype.updateRowspan = function (row, startCell, rowPlacement) {\n    var spannedCells = row.getPreviousRowSpannedCells(true);\n    var count = 0;\n    var cellFormats = [];\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      var isCellIncluded = false;\n      // Need to check with all the row spanned cells. if the start cell contains rowspan greater than 1, \n      // and when inserting below, need to increment rowspan for all row spanned cells by 1 except\n      // if the spanned cells is placed in the same column or cell to be cloned has the same row index of cloned cell row index.\n      // and when inserting above, if cloned cell placed in the same row of start cell or\n      // if the cloned cell has equal column index, need to skip updating rowspan value of cloned cell.\n      // else update row span value for spanned cell except \n      // if the spanned cells is placed in the same column or cell to be cloned has the same row index of cloned cell row index.\n      var isRowSpanned = isNullOrUndefined(cell.previousWidget) || cell.columnIndex !== cell.previousWidget.columnIndex + 1;\n      for (var j = 0; j < spannedCells.length; j++) {\n        if (isRowSpanned) {\n          var spannedCell = spannedCells[j];\n          var clonedRowIndex = spannedCell.ownerRow.rowIndex + spannedCell.cellFormat.rowSpan - 1;\n          if (cell.columnIndex < spannedCell.columnIndex && cell.cellIndex !== cell.columnIndex) {\n            isCellIncluded = true;\n            count++;\n            cellFormats.push(cell.cellFormat);\n          }\n          if (startCell.cellFormat.rowSpan === 1) {\n            // Need to check whether cell is affected by a row spanned cell. if cell is placed on the row where it is affected \n            // by row spanned cell, then if we are inserting row below, need to add new cell with spanned cell width\n            // or if we are inserting above, need to update row span value of the spanned cell.\n            // if cell is placed inbetween the spanned cell , \n            // then if we are inserting below, need to update row span value of spanned cell or\n            // if we are inserting above, need to skip updating row span value except\n            // if start cell is placed on the same row of spanned cell or if start cell placed in the same column.\n            if (clonedRowIndex > cell.ownerRow.rowIndex) {\n              if (rowPlacement === 'Above' && spannedCell.ownerRow === startCell.ownerRow) {\n                continue;\n              } else {\n                spannedCell.cellFormat.rowSpan += 1;\n                spannedCells.splice(j, 1);\n                j--;\n              }\n            } else if (cell.cellIndex !== cell.columnIndex && isRowSpanned && clonedRowIndex === cell.ownerRow.rowIndex) {\n              if (rowPlacement === 'Above') {\n                spannedCell.cellFormat.rowSpan += 1;\n                spannedCells.splice(j, 1);\n                j--;\n              } else {\n                count++;\n                cellFormats.push(spannedCell.cellFormat);\n                spannedCells.splice(j, 1);\n                j--;\n              }\n            }\n          } else {\n            if (spannedCell !== startCell) {\n              if (rowPlacement === 'Above' && (spannedCell.ownerRow === startCell.ownerRow || spannedCell.columnIndex === startCell.columnIndex)) {\n                continue;\n              } else {\n                if (spannedCell.columnIndex !== startCell.columnIndex && spannedCell.ownerRow.rowIndex !== cell.ownerRow.rowIndex && (clonedRowIndex > startCell.ownerRow.rowIndex || rowPlacement === 'Above' && clonedRowIndex === startCell.ownerRow.rowIndex)) {\n                  spannedCell.cellFormat.rowSpan += 1;\n                  spannedCells.splice(j, 1);\n                  j--;\n                }\n              }\n            }\n          }\n        }\n      }\n      if (spannedCells.indexOf(cell) === -1 && cell.cellFormat.rowSpan > 1) {\n        isCellIncluded = true;\n      }\n      if (!isCellIncluded) {\n        count++;\n        cellFormats.push(cell.cellFormat);\n      }\n    }\n    return {\n      count: count,\n      cellFormats: cellFormats\n    };\n  };\n  Editor.prototype.getInsertedTable = function (table, index) {\n    if (table.childWidgets && table.childWidgets.length > 0) {\n      table.childWidgets.splice(0, index);\n      this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(table);\n    }\n  };\n  Editor.prototype.insertTableRows = function (table, prevBlock) {\n    this.initHistory('InsertTableBelow');\n    table.containerWidget = prevBlock.containerWidget;\n    prevBlock = prevBlock.combineWidget(this.owner.viewer);\n    // if (this.editorHistory) {\n    //     let clonedTable: TableWidget = this.cloneTableToHistoryInfo(prevBlock);\n    // }\n    var row = prevBlock.childWidgets[prevBlock.childWidgets.length - 1];\n    var index = prevBlock.childWidgets.length;\n    prevBlock.insertTableRowsInternal(table.childWidgets, index, true);\n    var cloneTable = prevBlock.clone();\n    this.getInsertedTable(cloneTable, index);\n    var paragraph = this.selection.getFirstParagraph(row.nextWidget.childWidgets[0]);\n    prevBlock.isDefaultFormatUpdated = false;\n    this.documentHelper.layout.reLayoutTable(prevBlock);\n    if (this.checkInsertPosition(this.selection)) {\n      this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n    }\n    this.selection.start.setPosition(paragraph.firstChild, true);\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.updateHistoryPosition(this.selection.end, false);\n    }\n    this.selection.end.setPosition(paragraph.firstChild, true);\n    this.reLayout(this.selection);\n  };\n  /**\n   * Inserts the specified number of columns to the table left or right to the column at cursor position.\n   *\n   * @param {number} left The left parameter is optional and if omitted, it takes the value as false and\n   * inserts to the right of column at cursor position.\n   * @param {number} count The count parameter is optional and if omitted, it takes the value as 1.\n   * @returns {void}\n   */\n  Editor.prototype.insertColumn = function (left, count) {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    var columnPlacement = left ? 'Left' : 'Right';\n    if (this.selection.start.paragraph.isInsideTable) {\n      if (this.checkIsNotRedoing()) {\n        this.initHistory(columnPlacement === 'Left' ? 'InsertColumnLeft' : 'InsertColumnRight');\n      }\n      this.selection.owner.isShiftingEnabled = true;\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var endCell = this.getOwnerCell(!this.selection.isForward);\n      var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n      if (this.editorHistory) {\n        //Clones the entire table to preserve in history.\n        this.cloneTableToHistoryInfo(table);\n      }\n      this.selection.owner.isLayoutEnabled = false;\n      var cellIndex = startCell.columnIndex;\n      if (columnPlacement === 'Right') {\n        cellIndex = endCell.columnIndex + endCell.cellFormat.columnSpan;\n      }\n      var startParagraph = undefined;\n      var newCell = undefined;\n      var columnCount = count ? count : this.getColumnCountToInsert();\n      var rowSpannedCells = [];\n      //let rowSpanCellIndex: number = cellIndex;\n      for (var i = 0; i < columnCount; i++) {\n        for (var j = 0; j < table.childWidgets.length; j++) {\n          var row = table.childWidgets[j];\n          newCell = this.createColumn(this.selection.getLastParagraph(startCell));\n          newCell.index = j;\n          newCell.rowIndex = row.rowIndex;\n          newCell.containerWidget = row;\n          newCell.cellFormat.copyFormat(startCell.cellFormat);\n          newCell.cellFormat.rowSpan = 1;\n          if (isNullOrUndefined(startParagraph)) {\n            startParagraph = this.selection.getFirstParagraph(newCell);\n          }\n          if (cellIndex === 0) {\n            row.childWidgets.splice(cellIndex, 0, newCell);\n          } else {\n            this.insertSpannedCells(row, rowSpannedCells, newCell, cellIndex);\n          }\n          this.copyCellFormats(row, cellIndex);\n          this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newCell);\n        }\n      }\n      this.tableReLayout(table, startParagraph, newCell);\n    }\n  };\n  /**\n   * Inserting the cell for collaborative editing.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.cellInsertionForCE = function (index, row, cellData, paragraphData, characterData) {\n    var startParagraph = undefined;\n    var newCell = undefined;\n    newCell = this.createColumn(undefined);\n    var line = new LineWidget(newCell.childWidgets[0]);\n    newCell.childWidgets[0].childWidgets.push(line);\n    newCell.index = row.index;\n    newCell.rowIndex = row.rowIndex;\n    newCell.containerWidget = row;\n    this.documentHelper.owner.parser.parseCellFormat(cellData, newCell.cellFormat, 0);\n    this.documentHelper.owner.parser.parseParagraphFormat(0, paragraphData, newCell.childWidgets[0].paragraphFormat);\n    this.documentHelper.owner.parser.parseCharacterFormat(0, characterData, newCell.childWidgets[0].characterFormat);\n    newCell.cellFormat.rowSpan = 1;\n    row.childWidgets.splice(index, 0, newCell);\n  };\n  Editor.prototype.copyCellFormats = function (row, index) {\n    var newCell = row.childWidgets[index];\n    if (!isNullOrUndefined(newCell)) {\n      var newCellPara = newCell.childWidgets[0];\n      index == row.childWidgets.length - 1 ? --index : ++index;\n      var nextCell = row.childWidgets[index];\n      var widget = nextCell.childWidgets[0];\n      while (widget instanceof TableWidget) {\n        widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n      }\n      var nextCellpara = nextCell.childWidgets[0];\n      var line = void 0;\n      var nextCellTextBox = void 0;\n      if (nextCellpara.childWidgets.length > 0) {\n        line = nextCellpara.childWidgets[0];\n        if (line.children.length > 0) {\n          nextCellTextBox = line.children[0];\n        }\n      }\n      newCellPara.paragraphFormat.copyFormat(nextCellpara.paragraphFormat);\n      if (!isNullOrUndefined(nextCellTextBox)) {\n        newCellPara.characterFormat.copyFormat(nextCellTextBox.characterFormat);\n      } else {\n        newCellPara.characterFormat.copyFormat(nextCellpara.characterFormat);\n      }\n    }\n  };\n  Editor.prototype.copyContent = function (table) {\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.owner.enableCollaborativeEditing) {\n      var lastPara = this.documentHelper.getLastParagraphBlock(table);\n      var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n      if (firstPara.childWidgets.length === 0) {\n        firstPara.childWidgets[0] = new LineWidget(firstPara);\n      }\n      if (lastPara.childWidgets.length === 0) {\n        lastPara.childWidgets[0] = new LineWidget(lastPara);\n      }\n      var startLine = firstPara.firstChild;\n      var lastLine = lastPara.lastChild;\n      var endoffset = lastPara.lastChild.getEndOffset();\n      var documentContent = !isNullOrUndefined(this.owner.sfdtExportModule) ? this.owner.sfdtExportModule.write(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0, startLine, 0, lastLine, endoffset, false, true) : {};\n      this.editorHistory.currentBaseHistoryInfo.pasteContent = documentContent;\n    }\n  };\n  Editor.prototype.tableReLayout = function (table, startParagraph, newCell, isCollaborativePaste) {\n    table.updateRowIndex(0);\n    var parentTable = this.documentHelper.layout.getParentTable(table);\n    if (parentTable) {\n      parentTable.fitChildToClientArea();\n    } else {\n      table.fitChildToClientArea();\n    }\n    this.selection.owner.isLayoutEnabled = true;\n    table.isGridUpdated = false;\n    table.buildTableColumns();\n    table.isGridUpdated = true;\n    this.documentHelper.skipScrollToPosition = true;\n    if (isCollaborativePaste) {\n      this.copyContent(table);\n    }\n    this.documentHelper.layout.reLayoutTable(table);\n    this.selection.start.setPosition(startParagraph.firstChild, true);\n    this.selection.end.setPosition(this.selection.getLastParagraph(newCell).firstChild, false);\n    if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n      this.reLayout(this.selection);\n    }\n  };\n  /**\n   * Creates table with specified rows and columns.\n   * @private\n   *\n   * @returns {TableWidget}\n   */\n  Editor.prototype.createTable = function (rows, columns) {\n    var startPara = this.selection.start.paragraph;\n    var table = new TableWidget();\n    table.tableFormat.preferredWidthType = 'Auto';\n    table.tableFormat.leftIndent = this.selection.start.paragraph.leftIndent;\n    table.tableFormat.initializeTableBorders();\n    var index = 0;\n    while (index < rows) {\n      var tableRow = this.createRowAndColumn(columns, index);\n      tableRow.rowFormat.heightType = 'Auto';\n      if (this.owner.enableTrackChanges) {\n        this.insertRevision(tableRow.rowFormat, 'Insertion');\n      }\n      tableRow.containerWidget = table;\n      table.childWidgets.push(tableRow);\n      index++;\n    }\n    return table;\n  };\n  Editor.prototype.createRowAndColumn = function (columns, rowIndex, index, table) {\n    var tableWidget = table;\n    var startPara = this.selection.start.paragraph;\n    var tableRow = new TableRowWidget();\n    tableRow.rowFormat = new WRowFormat(tableRow);\n    tableRow.index = rowIndex;\n    for (var i = 0; i < columns; i++) {\n      if (!isNullOrUndefined(index) && !isNullOrUndefined(tableWidget)) {\n        if (index && index > 0 && tableWidget.childWidgets[index - 1] && tableWidget.childWidgets[index - 1].childWidgets[i]) {\n          var widget = tableWidget.childWidgets[index - 1].childWidgets[i].childWidgets[0];\n          while (widget instanceof TableWidget) {\n            widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n          }\n          startPara = widget;\n        } else if (index == 0) {\n          var widget = tableWidget.childWidgets[index].childWidgets[i].childWidgets[0];\n          while (widget instanceof TableWidget) {\n            widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n          }\n          startPara = widget;\n        }\n      }\n      var tableCell = this.createColumn(startPara, true);\n      tableCell.index = i;\n      tableCell.rowIndex = rowIndex;\n      tableCell.containerWidget = tableRow;\n      tableRow.childWidgets.push(tableCell);\n    }\n    return tableRow;\n  };\n  Editor.prototype.createColumn = function (paragraph, isNewRow) {\n    var tableCell = new TableCellWidget();\n    var para = new ParagraphWidget();\n    // let line: LineWidget = new LineWidget(para);\n    // para.childWidgets.push(line);\n    if (isNewRow) {\n      para.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n      para.paragraphFormat.leftIndent = 0;\n      para.paragraphFormat.firstLineIndent = 0;\n      var elementBox = void 0;\n      if (!isNullOrUndefined(paragraph.childWidgets[0])) {\n        elementBox = paragraph.childWidgets[0].children[0];\n      }\n      if (!isNullOrUndefined(elementBox)) {\n        para.characterFormat.copyFormat(elementBox.characterFormat);\n      } else {\n        para.characterFormat.copyFormat(paragraph.characterFormat);\n      }\n    }\n    para.containerWidget = tableCell;\n    tableCell.childWidgets.push(para);\n    tableCell.cellFormat = new WCellFormat(tableCell);\n    return tableCell;\n  };\n  Editor.prototype.getColumnCountToInsert = function () {\n    var count = 1;\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.selection.isForward) {\n      start = this.selection.end;\n      end = this.selection.start;\n    }\n    if (start && end && this.selection.getTable(start, end)) {\n      if (start.paragraph.associatedCell === end.paragraph.associatedCell) {\n        return count = 1;\n      }\n      if (start.paragraph.associatedCell.ownerRow === end.paragraph.associatedCell.ownerRow) {\n        return count = count + end.paragraph.associatedCell.cellIndex - start.paragraph.associatedCell.cellIndex;\n      } else {\n        count = 0;\n        var selectedCells = start.paragraph.associatedCell.ownerTable.getColumnCellsForSelection(start.paragraph.associatedCell, end.paragraph.associatedCell);\n        for (var i = 0; i < selectedCells.length; i++) {\n          if (start.paragraph.associatedCell.ownerRow === selectedCells[i].ownerRow) {\n            count++;\n          }\n        }\n      }\n    }\n    return count === 0 ? 1 : count;\n  };\n  Editor.prototype.getRowCountToInsert = function () {\n    var count = 1;\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.selection.isForward) {\n      start = this.selection.end;\n      end = this.selection.start;\n    }\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.selection.getTable(start, end))) {\n      if (start.paragraph.associatedCell === end.paragraph.associatedCell || start.paragraph.associatedCell.ownerRow === end.paragraph.associatedCell.ownerRow) {\n        return count = 1;\n      } else {\n        return count = count + this.getOwnerRow(!this.selection.isForward).rowIndex - this.getOwnerRow(this.selection.isForward).rowIndex;\n      }\n    }\n    return count === 0 ? 1 : count;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getOwnerCell = function (isStart) {\n    var cell = undefined;\n    var startCell = isStart ? this.selection.start.paragraph.associatedCell : this.selection.end.paragraph.associatedCell;\n    var endCell = isStart ? this.selection.end.paragraph.associatedCell : this.selection.start.paragraph.associatedCell;\n    cell = startCell;\n    var owner = cell.ownerTable;\n    while (!isNullOrUndefined(owner) && owner.containerWidget instanceof TableCellWidget && owner !== endCell.ownerTable) {\n      cell = owner.containerWidget;\n      owner = cell.ownerTable;\n    }\n    return cell;\n  };\n  Editor.prototype.getOwnerRow = function (isStart) {\n    var row;\n    var startRow = isStart ? this.selection.start.paragraph.associatedCell.ownerRow : this.selection.end.paragraph.associatedCell.ownerRow;\n    var endRow = isStart ? this.selection.end.paragraph.associatedCell.ownerRow : this.selection.start.paragraph.associatedCell.ownerRow;\n    row = startRow;\n    var owner = row.ownerTable;\n    while (!isNullOrUndefined(owner) && owner.containerWidget instanceof TableCellWidget && owner !== endRow.ownerTable) {\n      row = owner.containerWidget.ownerRow;\n      owner = row.ownerTable;\n    }\n    return row;\n  };\n  Editor.prototype.getOwnerTable = function (isStart) {\n    var table = undefined;\n    var startTable = this.selection.start.paragraph.associatedCell.ownerTable;\n    var endTable = this.selection.end.paragraph.associatedCell.ownerTable;\n    table = isStart ? startTable : endTable;\n    while (table.containerWidget instanceof TableCellWidget && table !== (isStart ? endTable : startTable)) {\n      table = table.containerWidget.ownerTable;\n    }\n    return table;\n  };\n  /**\n   * Merge Selected cells\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.mergeSelectedCellsInTable = function () {\n    if (!this.canMergeCells()) {\n      return;\n    }\n    if (this.owner.enableTrackChanges) {\n      var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n      localizeValue.setLocale(this.owner.locale);\n      this.alertDialog = DialogUtility.alert({\n        title: localizeValue.getConstant('UnTrack'),\n        content: localizeValue.getConstant('Merge Track'),\n        showCloseIcon: true,\n        okButton: {\n          text: 'Ok',\n          click: this.confirmCellMerge.bind(this)\n        },\n        closeOnEscape: true,\n        position: {\n          X: 'center',\n          Y: 'center'\n        },\n        animationSettings: {\n          effect: 'Zoom'\n        }\n      });\n      this.alertDialog.enableRtl = this.owner.enableRtl;\n    } else {\n      this.confirmCellMerge();\n    }\n  };\n  Editor.prototype.confirmCellMerge = function () {\n    if (this.checkIsNotRedoing()) {\n      this.initHistory('MergeCells');\n    }\n    this.selection.owner.isShiftingEnabled = true;\n    var startPosition = this.selection.start;\n    var endPosition = this.selection.end;\n    if (!this.selection.isForward) {\n      startPosition = this.selection.end;\n      endPosition = this.selection.start;\n    }\n    var startOwnerCell = this.getOwnerCell(this.selection.isForward);\n    var endOwnerCell = this.getOwnerCell(!this.selection.isForward);\n    var containerCell = this.selection.getContainerCellOf(startOwnerCell, endOwnerCell);\n    if (containerCell.ownerTable.contains(endOwnerCell)) {\n      if (!this.selection.containsCell(containerCell, endOwnerCell)) {\n        //Start and End are in different cells.               \n        var table = startOwnerCell.ownerTable.combineWidget(this.owner.viewer);\n        startOwnerCell = this.selection.getSelectedCell(startOwnerCell, containerCell);\n        endOwnerCell = this.selection.getSelectedCell(endOwnerCell, containerCell);\n        //Merges the selected cells.               \n        var mergedCell = this.mergeSelectedCells(table, startOwnerCell, endOwnerCell);\n        var firstParagraph = this.selection.getFirstParagraph(mergedCell);\n        startPosition.setPosition(firstParagraph.firstChild, true);\n        var lastParagraph = this.selection.getLastParagraph(mergedCell);\n        endPosition.setPosition(lastParagraph.lastChild, false);\n        this.selection.fireSelectionChanged(false);\n      }\n    }\n    if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n      this.reLayout(this.selection, false);\n    }\n    if (!isNullOrUndefined(this.alertDialog)) {\n      this.alertDialog.close();\n      this.alertDialog = undefined;\n    }\n  };\n  Editor.prototype.mergeSelectedCells = function (table, startCell, endCell) {\n    //Clones the entire table to preserve in history.\n    var clonedTable = this.cloneTableToHistoryInfo(table);\n    this.selection.owner.isLayoutEnabled = false;\n    //Merges the selected cells.\n    var start = this.selection.getCellLeft(startCell.ownerRow, startCell);\n    var end = start + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(start, end, endCellLeft, endCellRight);\n    start = cellInfo.start;\n    end = cellInfo.end;\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n    var mergedCell = undefined;\n    var firstBlock;\n    for (var i = rowStartIndex; i <= count; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        var cellStart = this.selection.getCellLeft(row, cell);\n        if (HelperMethods.round(start, 2) <= HelperMethods.round(cellStart, 2) && HelperMethods.round(cellStart, 2) < HelperMethods.round(end, 2)) {\n          var lastBlock = cell.lastChild;\n          if (lastBlock instanceof ParagraphWidget && lastBlock.isEmpty()) {\n            cell.childWidgets.pop();\n          }\n          if (isNullOrUndefined(mergedCell)) {\n            mergedCell = cell;\n            firstBlock = lastBlock;\n          } else {\n            if (i === rowStartIndex) {\n              mergedCell.cellFormat.preferredWidth += cell.cellFormat.preferredWidth;\n              mergedCell.cellFormat.columnSpan += cell.cellFormat.columnSpan;\n              this.mergeBorders(mergedCell, cell);\n            }\n            for (var k = 0; k < cell.childWidgets.length; k++) {\n              var block = cell.childWidgets[k];\n              var newBlock = block.clone();\n              newBlock.containerWidget = mergedCell;\n              mergedCell.childWidgets.push(newBlock);\n            }\n            row.childWidgets.splice(j, 1);\n            cell.destroy();\n            j--;\n            for (var l = this.documentHelper.contentControlCollection.length - 1; l > -1; l--) {\n              var content = this.documentHelper.contentControlCollection[l];\n              if (isNullOrUndefined(content.contentControlProperties)) {\n                this.documentHelper.contentControlCollection.splice(l);\n              }\n            }\n          }\n        }\n      }\n      //To Ensure minimul content. \n      if ((mergedCell.childWidgets.length === 0 || mergedCell.childWidgets.length === 1 && mergedCell.childWidgets[0] instanceof TableWidget) && firstBlock) {\n        var newBlock = firstBlock.clone();\n        mergedCell.childWidgets.push(newBlock);\n        newBlock.containerWidget = mergedCell;\n      }\n      if (row.childWidgets.length === 0) {\n        var rowIndex = table.childWidgets.indexOf(row);\n        row.updateRowBySpannedCells();\n        table.childWidgets.splice(rowIndex, 1);\n        row.destroy();\n        count--;\n        i--;\n      }\n    }\n    if (!isNullOrUndefined(mergedCell) && rowStartIndex < count) {\n      mergedCell.cellFormat.rowSpan = count - rowStartIndex + 1;\n    }\n    this.updateBlockIndexAfterMerge(mergedCell);\n    table.updateRowIndex(0);\n    table.calculateGrid();\n    table.isGridUpdated = false;\n    table.buildTableColumns();\n    table.isGridUpdated = true;\n    this.documentHelper.layout.reLayoutTable(table);\n    //Layouts the table after merging cells.\n    this.selection.owner.isLayoutEnabled = true;\n    return mergedCell;\n  };\n  Editor.prototype.mergeBorders = function (mergedCell, tableCell) {\n    var mergedCellborders = undefined;\n    var cellBorders = null;\n    if (!isNullOrUndefined(mergedCell.cellFormat.borders)) {\n      mergedCellborders = mergedCell.cellFormat.borders;\n    }\n    if (!isNullOrUndefined(tableCell.cellFormat.borders)) {\n      cellBorders = tableCell.cellFormat.borders;\n    }\n    if (isNullOrUndefined(mergedCellborders) && isNullOrUndefined(cellBorders)) {\n      return;\n    }\n    if (isNullOrUndefined(mergedCellborders)) {\n      mergedCellborders = new WBorders(mergedCell.cellFormat);\n      mergedCellborders.copyFormat(cellBorders);\n    } else if (isNullOrUndefined(cellBorders)) {\n      return;\n    } else {\n      if (mergedCell.ownerRow.rowIndex === tableCell.ownerRow.rowIndex) {\n        mergedCellborders.top = mergedCell.getBorderBasedOnPriority(mergedCellborders.top, cellBorders.bottom);\n        mergedCellborders.bottom = mergedCell.getBorderBasedOnPriority(mergedCellborders.bottom, cellBorders.bottom);\n      }\n    }\n  };\n  Editor.prototype.updateBlockIndexAfterMerge = function (cell) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      cell.childWidgets[i].index = i;\n    }\n  };\n  /**\n   * Determines whether the merge cell operation can be done.\n   *\n   * @returns {boolean} Returns true if to merge cells; Otherwise, false.\n   */\n  Editor.prototype.canMergeCells = function () {\n    if (this.selection.isEmpty || !this.selection.start.paragraph.isInsideTable || !this.selection.end.paragraph.isInsideTable) {\n      return false;\n    }\n    var startPos = this.selection.start;\n    var endPos = this.selection.end;\n    if (!this.selection.isForward) {\n      startPos = this.selection.end;\n      endPos = this.selection.start;\n    }\n    var startCell = this.getOwnerCell(this.selection.isForward);\n    var endCell = this.getOwnerCell(!this.selection.isForward);\n    var containerCell = this.selection.getContainerCellOf(startCell, endCell);\n    if (containerCell.ownerTable.contains(endCell)) {\n      if (!this.selection.containsCell(containerCell, endCell)) {\n        startCell = this.selection.getSelectedCell(startCell, containerCell);\n        endCell = this.selection.getSelectedCell(endCell, containerCell);\n        var rowSpan = 1;\n        if (startCell.ownerRow === endCell.ownerRow) {\n          var startCellIndex = startCell.ownerRow.childWidgets.indexOf(startCell);\n          for (var i = startCellIndex; i <= startCell.ownerRow.childWidgets.indexOf(endCell); i++) {\n            var cell = startCell.ownerRow.childWidgets[i];\n            var prevCell = cell.previousWidget;\n            if (i !== startCellIndex) {\n              if (cell.cellFormat.rowSpan !== rowSpan) {\n                return false;\n              }\n              if (!isNullOrUndefined(prevCell) && cell.columnIndex !== prevCell.cellFormat.columnSpan + prevCell.columnIndex) {\n                return false;\n              }\n            }\n            rowSpan = cell.cellFormat.rowSpan;\n          }\n          return true;\n        }\n        return this.canMergeSelectedCellsInTable(startCell.ownerTable, startCell, endCell);\n      }\n    }\n    return false;\n  };\n  Editor.prototype.canMergeSelectedCellsInTable = function (table, startCell, endCell) {\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n    var startLeft = this.selection.getCellLeft(startCell.ownerRow, startCell);\n    var endLeft = startLeft + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(startLeft, endLeft, endCellLeft, endCellRight);\n    startLeft = cellInfo.start;\n    endLeft = cellInfo.end;\n    var selectionLeft = 0;\n    var selectionRight = 0;\n    var isRowLeftWithinSel = false;\n    var isRowRightWithinSel = false;\n    var rowSpannedCells = [];\n    for (var i = rowStartIndex; i <= count; i++) {\n      var row = table.childWidgets[i];\n      var rowLeft = 0;\n      var rowRight = 0;\n      var isStarted = false;\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        var cellStart = this.selection.getCellLeft(row, cell);\n        if (this.checkCellWithInSelection(startLeft, endLeft, cellStart)) {\n          isRowLeftWithinSel = false;\n          isRowRightWithinSel = false;\n          if (cell.cellFormat.rowSpan > 1) {\n            rowSpannedCells.push(cell);\n          }\n          if (!isStarted) {\n            rowLeft = cellStart;\n            rowRight = cellStart;\n            isStarted = true;\n          }\n          var prevCell = cell.previousWidget;\n          if (rowRight !== 0 && HelperMethods.round(rowRight, 0) !== HelperMethods.round(cellStart, 0)) {\n            rowRight = cellStart;\n          }\n          rowRight += HelperMethods.convertPointToPixel(cell.cellFormat.cellWidth);\n          var isPrevCellWithinSel = this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, true);\n          var isNextCellWithinSel = this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, false);\n          // When selected cell not having row spanned cells and column index is not having immediate cell index value,\n          // then returned false.\n          var isNoRowSpan = rowSpannedCells.length === 0 || rowSpannedCells.length === 1 && rowSpannedCells[0] === cell;\n          // checks whether current cell is with in selection.\n          var isCellWithInSel = this.checkCurrentCell(rowSpannedCells, cell, isPrevCellWithinSel, isNextCellWithinSel);\n          // when last selected row not having equal row span then returned false.\n          if (i === count && !isNullOrUndefined(prevCell) && cell.cellFormat.rowSpan > prevCell.cellFormat.rowSpan && !isCellWithInSel) {\n            return false;\n          }\n          if (i !== rowStartIndex) {\n            for (var m = 0; m < rowSpannedCells.length; m++) {\n              {\n                var rowSpan = rowSpannedCells[m].ownerRow.rowIndex + rowSpannedCells[m].cellFormat.rowSpan - 1;\n                if (rowSpan >= row.rowIndex) {\n                  if (rowSpannedCells[m].columnIndex > cell.columnIndex) {\n                    isRowRightWithinSel = true;\n                  } else {\n                    isRowLeftWithinSel = true;\n                  }\n                  if (i === count && rowSpannedCells[m] !== cell && rowSpan > cell.ownerRow.rowIndex + cell.cellFormat.rowSpan - 1) {\n                    return false;\n                  }\n                  if (rowSpan === row.rowIndex && !this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, false)) {\n                    rowSpannedCells.splice(rowSpannedCells.indexOf(rowSpannedCells[m]), 1);\n                  }\n                }\n              }\n            }\n          }\n          if (isPrevCellWithinSel && !isNullOrUndefined(prevCell) && isNoRowSpan && cell.columnIndex !== prevCell.columnIndex + 1 && this.checkCellWidth(cell)) {\n            return false;\n          }\n        }\n      }\n      if (i === rowStartIndex) {\n        selectionLeft = rowLeft;\n        selectionRight = rowRight;\n      } else {\n        if (rowRight > 0 && rowLeft > 0) {\n          if (!((isRowLeftWithinSel || Math.round(selectionLeft) === Math.round(rowLeft)) && (isRowRightWithinSel || Math.round(selectionRight) === Math.round(rowRight)))) {\n            return false;\n          }\n        }\n        if (i === count) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.checkCellWidth = function (cell) {\n    var prevCell = cell.previousWidget;\n    var cellLeft = this.documentHelper.selection.getCellLeft(cell.ownerRow, cell);\n    var prevCellLeft = this.documentHelper.selection.getCellLeft(cell.ownerRow, prevCell);\n    var left = prevCellLeft + HelperMethods.convertPointToPixel(prevCell.cellFormat.cellWidth);\n    if (HelperMethods.round(left, 2) !== HelperMethods.round(cellLeft, 2)) {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.checkCellWithInSelection = function (startLeft, endLeft, cellStart) {\n    if (HelperMethods.round(startLeft, 2) <= HelperMethods.round(cellStart, 2) && HelperMethods.round(cellStart, 2) < HelperMethods.round(endLeft, 2)) {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.checkPrevOrNextCellIsWithinSel = function (startLeft, endLeft, cell, isPrev) {\n    var prevOrNextCell = isPrev ? cell.previousWidget : cell.nextWidget;\n    var cellStart = 0;\n    if (isNullOrUndefined(prevOrNextCell)) {\n      return false;\n    }\n    cellStart = this.documentHelper.selection.getCellLeft(prevOrNextCell.ownerRow, prevOrNextCell);\n    return this.checkCellWithInSelection(startLeft, endLeft, cellStart);\n  };\n  Editor.prototype.checkCurrentCell = function (rowSpannedCells, cell, isPrevCellWithInSel, isNextCellWithinSel) {\n    var cellOwner = cell.ownerRow;\n    if (rowSpannedCells.length > 0) {\n      for (var i = 0; i < rowSpannedCells.length; i++) {\n        var spannedCellOwner = rowSpannedCells[i].ownerRow;\n        var rowSpan = spannedCellOwner.rowIndex + rowSpannedCells[i].cellFormat.rowSpan - 1;\n        if (rowSpannedCells[i] === cell && (rowSpannedCells.length === 1 || this.checkRowSpannedCells(rowSpannedCells, cell)) && !(isNextCellWithinSel || isPrevCellWithInSel)) {\n          return true;\n        }\n        if (rowSpannedCells[i] !== cell && spannedCellOwner.rowIndex < cellOwner.rowIndex && rowSpan === cellOwner.rowIndex + cell.cellFormat.rowSpan - 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.checkRowSpannedCells = function (rowSpannedCells, cell) {\n    for (var i = 0; i < rowSpannedCells.length; i++) {\n      if (rowSpannedCells[i] !== cell && rowSpannedCells[i].columnIndex === cell.columnIndex) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertNewParagraphWidget = function (newParagraph, insertAfter) {\n    this.updateInsertPosition();\n    this.insertParagraph(newParagraph, insertAfter);\n    if (!insertAfter) {\n      var nextParagraph = void 0;\n      var currentParagraph = newParagraph;\n      do {\n        nextParagraph = this.selection.getNextParagraphBlock(currentParagraph);\n        currentParagraph = nextParagraph;\n      } while (nextParagraph && nextParagraph.equals(newParagraph));\n      if (!isNullOrUndefined(nextParagraph)) {\n        this.selection.selectParagraphInternal(nextParagraph, true);\n      } else {\n        this.selection.selectParagraphInternal(newParagraph, true);\n      }\n    }\n    this.fireContentChange();\n  };\n  Editor.prototype.insertParagraph = function (newParagraph, insertAfter) {\n    var lineWidget = this.selection.start.currentWidget;\n    var offset = this.selection.start.offset;\n    if (this.editorHistory && this.editorHistory.isUndoing && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'InsertTextParaReplace') {\n      offset = 0;\n    }\n    var currentParagraph = this.selection.start.paragraph;\n    currentParagraph = currentParagraph.combineWidget(this.owner.viewer);\n    if (insertAfter) {\n      var length_1 = this.selection.getLineLength(currentParagraph.lastChild);\n      var insertIndex_1 = newParagraph.firstChild ? newParagraph.firstChild.children.length : 0;\n      this.moveInlines(currentParagraph, newParagraph, insertIndex_1, offset, lineWidget, length_1, currentParagraph.lastChild);\n    } else if (offset > 0) {\n      var length_2 = currentParagraph.getLength();\n      this.moveInlines(currentParagraph, newParagraph, 0, 0, currentParagraph.firstChild, offset, lineWidget);\n      if (length_2 === offset && currentParagraph.characterFormat.revisions.length > 0) {\n        while (currentParagraph.characterFormat.revisions.length > 0) {\n          newParagraph.characterFormat.revisions.push(currentParagraph.characterFormat.revisions.shift());\n        }\n      }\n    }\n    var splittedWidget = currentParagraph.getSplitWidgets();\n    currentParagraph = insertAfter ? splittedWidget[splittedWidget.length - 1] : splittedWidget[0];\n    var insertIndex = currentParagraph.containerWidget.childWidgets.indexOf(currentParagraph);\n    if (insertAfter) {\n      insertIndex++;\n    }\n    var bodyWidget = currentParagraph.containerWidget;\n    newParagraph.index = currentParagraph.index;\n    newParagraph.containerWidget = bodyWidget;\n    bodyWidget.childWidgets.splice(insertIndex, 0, newParagraph);\n    this.constructRevisionsForBlock(newParagraph, true);\n    this.updateNextBlocksIndex(insertAfter ? currentParagraph : newParagraph, true);\n    newParagraph.height = 0;\n    this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, bodyWidget, newParagraph, false);\n  };\n  Editor.prototype.moveInlines = function (currentParagraph, newParagraph, insertIndex, startOffset, startLine, endOffset, endLine, removeBlock) {\n    if (newParagraph.childWidgets.length === 0) {\n      var line = new LineWidget(newParagraph);\n      newParagraph.childWidgets.push(line);\n    }\n    var isMoved = false;\n    this.documentHelper.layout.clearListElementBox(currentParagraph);\n    this.documentHelper.layout.clearListElementBox(newParagraph);\n    for (var j = 0; j < currentParagraph.childWidgets.length; j++) {\n      var lineWidget = currentParagraph.childWidgets[j];\n      if (startLine === lineWidget && endLine === lineWidget) {\n        insertIndex = this.moveContent(lineWidget, startOffset, endOffset, insertIndex, newParagraph);\n        break;\n      }\n      if (endLine === lineWidget) {\n        insertIndex = this.moveContent(lineWidget, 0, endOffset, insertIndex, newParagraph);\n        break;\n      } else if (startLine === lineWidget) {\n        isMoved = true;\n        insertIndex = this.moveContent(lineWidget, startOffset, this.documentHelper.selection.getLineLength(lineWidget), insertIndex, newParagraph);\n      } else if (isMoved) {\n        insertIndex = this.moveContent(lineWidget, 0, this.documentHelper.selection.getLineLength(lineWidget), insertIndex, newParagraph);\n      }\n    }\n    this.removeEmptyLine(currentParagraph);\n    if (!currentParagraph.isInsideTable && !removeBlock) {\n      this.viewer.updateClientArea(currentParagraph.bodyWidget, currentParagraph.bodyWidget.page);\n      this.documentHelper.layout.reLayoutParagraph(currentParagraph, 0, 0);\n    }\n  };\n  Editor.prototype.moveContent = function (lineWidget, startOffset, endOffset, insertIndex, paragraph) {\n    var count = 0;\n    //let lineIndex: number = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n    for (var i = 0; i < lineWidget.children.length; i++) {\n      var inline = lineWidget.children[i];\n      if (startOffset >= count + inline.length || inline instanceof ListTextElementBox) {\n        if (!(inline instanceof ListTextElementBox)) {\n          count += inline.length;\n        }\n        continue;\n      }\n      var startIndex = 0;\n      if (startOffset > count) {\n        startIndex = startOffset - count;\n      }\n      var endIndex = endOffset - count;\n      if (endIndex > inline.length) {\n        endIndex = inline.length;\n      }\n      if (startIndex > 0) {\n        count += startIndex;\n      }\n      if (startIndex === 0 && endIndex === inline.length) {\n        if (inline instanceof ShapeBase) {\n          var shapeIndex = lineWidget.paragraph.floatingElements.indexOf(inline);\n          if (shapeIndex !== -1) {\n            lineWidget.paragraph.floatingElements.splice(shapeIndex, 1);\n          }\n        }\n        paragraph.firstChild.children.splice(insertIndex, 0, inline);\n        inline.line = paragraph.firstChild;\n        insertIndex++;\n        // if (editAction < 4) {\n        // this.unLinkFieldCharacter(inline);\n        lineWidget.children.splice(i, 1);\n        i--;\n        // }\n      } else if (inline instanceof TextElementBox) {\n        // if (editAction < 4) {\n        var span = new TextElementBox();\n        span.characterFormat.copyFormat(inline.characterFormat);\n        span.text = inline.text.substr(startIndex, endIndex - startIndex);\n        inline.ischangeDetected = true;\n        span.ischangeDetected = true;\n        paragraph.firstChild.children.splice(insertIndex, 0, span);\n        span.line = paragraph.firstChild;\n        insertIndex++;\n        this.updateRevisionForMovedContent(inline, span);\n        inline.text = inline.text.slice(0, startIndex) + inline.text.slice(endIndex);\n        inline.ischangeDetected = true;\n      }\n      if (endOffset <= count + endIndex - startIndex) {\n        break;\n      }\n      count += endIndex - startIndex;\n    }\n    return insertIndex;\n  };\n  Editor.prototype.updateRevisionForMovedContent = function (inline, tempSpan) {\n    for (var i = 0; i < inline.revisions.length; i++) {\n      var currentRevision = inline.revisions[i];\n      var rangeIndex = currentRevision.range.indexOf(inline);\n      tempSpan.revisions.splice(0, 0, currentRevision);\n      currentRevision.range.splice(rangeIndex, 0, tempSpan);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n    }\n  };\n  /**\n   * update complex changes when history is not preserved\n   *\n   * @param {number} action - Specifies the action\n   * @param {string} start - Specifies the selection start\n   * @param {string} end - Specified the selection end\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateComplexWithoutHistory = function (action, start, end) {\n    var selection = this.documentHelper.selection;\n    if (action === 0) {\n      var startPosition = new TextPosition(selection.owner);\n      this.setPositionForCurrentIndex(startPosition, start);\n      this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n      this.setPositionForCurrentIndex(selection.start, end);\n      this.setPositionForCurrentIndex(selection.end, end);\n    }\n    if (action === 1) {\n      var startPosition = new TextPosition(selection.owner);\n      this.setPositionForCurrentIndex(startPosition, start);\n      var endPosition = new TextPosition(selection.owner);\n      this.setPositionForCurrentIndex(endPosition, end);\n      this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n      if (endPosition.paragraph !== startPosition.paragraph) {\n        this.documentHelper.layout.reLayoutParagraph(endPosition.paragraph, 0, 0);\n      }\n    }\n    if (selection.owner.isShiftingEnabled) {\n      this.documentHelper.layout.shiftLayoutedItems(false);\n      if (this.documentHelper.owner.enableHeaderAndFooter) {\n        this.updateHeaderFooterWidget();\n      }\n    }\n    selection.owner.isShiftingEnabled = false;\n    selection.start.updatePhysicalPosition(true);\n    if (selection.isEmpty) {\n      selection.end.setPositionInternal(selection.start);\n    } else {\n      selection.end.updatePhysicalPosition(true);\n    }\n    selection.upDownSelectionLength = selection.end.location.x;\n    selection.fireSelectionChanged(true);\n    this.documentHelper.updateFocus();\n    this.owner.viewer.updateScrollBars();\n    this.fireContentChange();\n    this.isHandledComplex = true;\n  };\n  /**\n   * Re-layout content.\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param isSelectionChanged - Specifies the selection changed\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.reLayout = function (selection, isSelectionChanged, isLayoutChanged) {\n    if (!isNullOrUndefined(this.previousBlockToLayout)) {\n      // Layout content for previous page to fix content based on KeepWithNext format.\n      var previousBlock = this.previousBlockToLayout;\n      this.documentHelper.layout.layoutBodyWidgetCollection(previousBlock.index, previousBlock.bodyWidget, previousBlock, false, false);\n      this.previousBlockToLayout = undefined;\n    }\n    if (!this.documentHelper.isComposingIME && this.editorHistory && this.editorHistory.isHandledComplexHistory()) {\n      if (this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action !== 'ClearFormat') {\n        if (this.editorHistory.currentHistoryInfo.action !== 'ApplyStyle') {\n          if (this.editorHistory.currentHistoryInfo.action === 'DragAndDropContent') {\n            this.documentHelper.layout.shiftLayoutedItems(true);\n          }\n          this.startParagraph = undefined;\n          this.endParagraph = undefined;\n        }\n      }\n      this.isHandledComplex = false;\n      if (this.editorHistory.currentHistoryInfo && (this.editorHistory.currentHistoryInfo.action === 'ColumnBreak' || this.editorHistory.currentHistoryInfo.action === 'PageBreak')) {} else {\n        return;\n      }\n    }\n    if (!isNullOrUndefined(selection.editRegionHighlighters)) {\n      selection.editRegionHighlighters.clear();\n    }\n    if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n      this.documentHelper.removeEmptyPages();\n      this.documentHelper.layout.updateFieldElements();\n      /*  if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.footnoteWidget)) {\n            let foot: FootNoteWidget = selection.start.paragraph.bodyWidget.page.footnoteWidget;\n            //this.documentHelper.layout.layoutfootNote(foot);\n        }\n        if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.endnoteWidget)) {\n            let foot: FootNoteWidget = selection.start.paragraph.bodyWidget.page.endnoteWidget;\n            //this.documentHelper.layout.layoutfootNote(foot);\n        }*/\n      this.owner.viewer.updateScrollBars();\n      if (!selection.owner.isShiftingEnabled || this.documentHelper.isRowOrCellResizing) {\n        selection.fireSelectionChanged(true);\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n      }\n    }\n    if (isNullOrUndefined(isSelectionChanged)) {\n      isSelectionChanged = selection.isEmpty;\n    }\n    if (this.owner.showRevisions && this.owner.trackChangesPane.isUpdateTrackChanges(this.owner.revisions.length)) {\n      this.owner.trackChangesPane.updateTrackChanges();\n    }\n    if (selection.owner.isShiftingEnabled) {\n      selection.owner.isShiftingEnabled = false;\n      selection.owner.isLayoutEnabled = true;\n      var bodyWidget = selection.start.paragraph.bodyWidget;\n      var splittedSection = bodyWidget.getSplitWidgets();\n      bodyWidget = splittedSection[splittedSection.length - 1];\n      var isColumnBreak = this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'ColumnBreak' && this.documentHelper.layout.isMultiColumnDoc ? true : false;\n      if ((!isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && this.documentHelper.layout.isMultiColumnDoc || bodyWidget.sectionFormat.breakCode === 'NoBreak' && bodyWidget.sectionIndex === bodyWidget.page.bodyWidgets[0].sectionIndex && bodyWidget.sectionFormat.numberOfColumns > 1 || isColumnBreak) && !(bodyWidget instanceof HeaderFooterWidget) && !(!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget)) {\n        var startPosition = this.documentHelper.selection.start;\n        var endPosition = this.documentHelper.selection.end;\n        var startInfo = this.selection.getParagraphInfo(startPosition);\n        var endInfo = this.selection.getParagraphInfo(endPosition);\n        var startIndex = this.selection.getHierarchicalIndex(startInfo.paragraph, startInfo.offset.toString());\n        var endIndex = this.selection.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n        this.documentHelper.layout.shiftLayoutedItems(true);\n        this.setPositionForCurrentIndex(startPosition, startIndex);\n        this.setPositionForCurrentIndex(endPosition, endIndex);\n        this.documentHelper.selection.selectPosition(startPosition, endPosition);\n        this.owner.viewer.updateScrollBars();\n      } else {\n        this.documentHelper.layout.shiftLayoutedItems(true);\n      }\n      if (this.documentHelper.owner.enableHeaderAndFooter) {\n        this.updateHeaderFooterWidget();\n      }\n      if (!this.documentHelper.isRowOrCellResizing) {\n        if (!isNullOrUndefined(selection.start.paragraph)) {\n          if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.containerWidget) && selection.start.paragraph.bodyWidget.containerWidget instanceof FootNoteWidget) {\n            if (selection.start.paragraph.bodyWidget.containerWidget.footNoteType === 'Footnote') {\n              this.documentHelper.layout.isRelayoutFootnote = true;\n              this.shiftFootnotePageContent(selection.start.paragraph.bodyWidget.containerWidget);\n              //this.documentHelper.layout.layoutfootNote(selection.start.paragraph.bodyWidget.containerWidget);\n            } else {\n              this.documentHelper.layout.isRelayoutFootnote = false;\n              this.shiftFootnotePageContent();\n            }\n          }\n        }\n        this.getOffsetValue(selection);\n        selection.upDownSelectionLength = selection.end.location.x;\n        selection.fireSelectionChanged(true);\n        if (this.owner.enableAutoFocus) {\n          this.documentHelper.updateFocus();\n        }\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n        //this.documentHelper.layout.allowLayout = true;\n      }\n    } else if (this.documentHelper.owner.enableHeaderAndFooter) {\n      this.updateHeaderFooterWidget();\n    }\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && (this.editorHistory.currentBaseHistoryInfo.action !== 'RowResizing' && this.editorHistory.currentBaseHistoryInfo.action !== 'CellResizing' || this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n      if (this.editorHistory.currentBaseHistoryInfo.modifiedProperties.length > 0) {\n        this.editorHistory.currentBaseHistoryInfo.updateSelection();\n      }\n      if (!(this.editorHistory.undoStack && this.editorHistory.undoStack.length > 0 && this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1] instanceof HistoryInfo && this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions && this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions[this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions.length - 1] === this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.updateHistory();\n      } else {\n        this.editorHistory.currentBaseHistoryInfo = undefined;\n      }\n    }\n    if (isLayoutChanged) {\n      return;\n    }\n    this.fireContentChange();\n    if (this.owner.enableLockAndEdit) {\n      // Editable region border get updated in content changes event.\n      // So, handled rerendering content after applying border.\n      this.owner.viewer.updateScrollBars();\n    }\n    this.owner.documentHelper.layout.isRelayout = false;\n    this.isFootnoteElementRemoved = false;\n    this.isEndnoteElementRemoved = false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateHeaderFooterWidget = function (headerFooterWidget) {\n    if (isNullOrUndefined(headerFooterWidget)) {\n      headerFooterWidget = this.selection.start.paragraph.bodyWidget;\n    }\n    this.updateHeaderFooterWidgetToPage(headerFooterWidget);\n    this.shiftPageContent(headerFooterWidget.headerFooterType, headerFooterWidget.sectionFormat);\n  };\n  Editor.prototype.updateHeaderFooterWidgetToPage = function (node) {\n    var currentPage = node.page;\n    //node = this.documentHelper.layout.updateHeaderFooterToParent(node);\n    var isEvenPage = node.headerFooterType === 'EvenHeader' || node.headerFooterType === 'EvenFooter';\n    var isFirstPage = node.headerFooterType === 'FirstPageHeader' || node.headerFooterType === 'FirstPageFooter';\n    for (var i = 0; i < this.documentHelper.pages.length; i++) {\n      var page = this.documentHelper.pages[i];\n      if (page.bodyWidgets[0].sectionFormat.differentFirstPage && isFirstPage && (page.headerWidgetIn.headerFooterType == node.headerFooterType || page.footerWidgetIn.headerFooterType == node.headerFooterType)) {\n        this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n        continue;\n      }\n      if (page.bodyWidgets[0].sectionFormat.differentFirstPage && (isFirstPage || !isFirstPage && page.index == 0 || page.sectionIndex != page.previousPage.sectionIndex)) {\n        continue;\n      }\n      //if (currentPage !== page) {\n      if (page.bodyWidgets[0].sectionFormat.differentOddAndEvenPages) {\n        if (isEvenPage && (i + 1) % 2 === 0) {\n          this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n        } else if (!isEvenPage && (i + 1) % 2 !== 0) {\n          if (i > 0 || !page.bodyWidgets[0].sectionFormat.differentFirstPage) {\n            this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n          }\n        }\n      } else {\n        this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n      }\n      //}\n    }\n  };\n  Editor.prototype.updateHeaderFooterWidgetToPageInternal = function (page, widget, isHeader) {\n    var update = false;\n    if (isHeader) {\n      update = widget != page.headerWidgetIn && widget.page.headerWidget == page.headerWidget;\n    } else {\n      update = widget != page.footerWidgetIn && widget.page.footerWidget == page.footerWidget;\n    }\n    if (update) {\n      var hfWidget = widget.clone();\n      this.documentHelper.layout.clearBlockWidget(hfWidget.childWidgets, true, true, true);\n      hfWidget.page = page;\n      hfWidget.parentHeaderFooter = widget;\n      this.owner.viewer.updateHFClientArea(hfWidget.sectionFormat, isHeader);\n      hfWidget = this.documentHelper.layout.layoutHeaderFooterItems(this.owner.viewer, hfWidget);\n      var headerOrFooter = void 0;\n      if (isHeader) {\n        headerOrFooter = page.headerWidgetIn;\n        page.headerWidget = hfWidget;\n      } else {\n        headerOrFooter = page.footerWidgetIn;\n        page.footerWidget = hfWidget;\n      }\n      this.removeFieldInWidget(headerOrFooter);\n      this.removeFieldInWidget(headerOrFooter, undefined, true);\n      headerOrFooter.destroy();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeFieldInWidget = function (widget, isBookmark, isContentControl) {\n    if (isNullOrUndefined(isBookmark)) {\n      isBookmark = false;\n    }\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      this.removeFieldInBlock(widget.childWidgets[i], isBookmark, isContentControl);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeFieldInBlock = function (block, isBookmark, isContentControl) {\n    if (block instanceof TableWidget) {\n      if (block.wrapTextAround && !isNullOrUndefined(block.bodyWidget)) {\n        var index = block.bodyWidget.floatingElements.indexOf(block);\n        if (index !== -1) {\n          block.bodyWidget.floatingElements.splice(index, 1);\n        }\n      }\n      this.removeFieldTable(block, isBookmark, isContentControl);\n    } else if (block instanceof TableRowWidget) {\n      for (var i = 0; i < block.childWidgets.length; i++) {\n        this.removeFieldInWidget(block.childWidgets[i], isBookmark, isContentControl);\n      }\n    } else {\n      this.removeField(block, isBookmark, isContentControl);\n    }\n  };\n  Editor.prototype.removeFieldTable = function (table, isBookmark, isContentControl) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.removeFieldInWidget(row.childWidgets[j], isBookmark, isContentControl);\n      }\n    }\n  };\n  Editor.prototype.shiftFootnotePageContent = function (foot) {\n    var section = this.documentHelper.pages[0].bodyWidgets[0];\n    if (!isNullOrUndefined(foot)) {\n      var index = this.documentHelper.pages.indexOf(foot.page);\n      section = this.documentHelper.pages[index].bodyWidgets[0];\n    }\n    if (!isNullOrUndefined(section.page.footnoteWidget)) {\n      this.checkAndShiftFromBottom(section.page, section.page.footnoteWidget);\n    }\n    if (!isNullOrUndefined(section.page.endnoteWidget)) {\n      //this.checkAndShiftFromBottom(section.page, section.page.endnoteWidget);\n    }\n    if (this.documentHelper.blockToShift) {\n      this.documentHelper.renderedLists.clear();\n      this.documentHelper.renderedLevelOverrides = [];\n      this.documentHelper.layout.shiftLayoutedItems(false);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.shiftPageContent = function (type, sectionFormat) {\n    // let type: HeaderFooterType = headerFooter.headerFooterType;\n    var pageIndex;\n    if (type.indexOf('First') !== -1) {\n      pageIndex = 0;\n    } else if (sectionFormat.differentOddAndEvenPages) {\n      var isEven = type.indexOf('Even') !== -1;\n      if (sectionFormat.differentFirstPage) {\n        pageIndex = isEven ? 1 : 2;\n      } else {\n        pageIndex = !isEven ? 0 : 1;\n      }\n    } else {\n      pageIndex = sectionFormat.differentFirstPage ? 1 : 0;\n      if (pageIndex === 1 && this.documentHelper.pages.length === 1) {\n        pageIndex = 0;\n      }\n    }\n    var section = this.documentHelper.pages[pageIndex].bodyWidgets[0];\n    do {\n      if (type.indexOf('Header') !== -1) {\n        var widget = section.page.headerWidget;\n        var isNotEmpty = !widget.isEmpty || widget.isEmpty && this.owner.enableHeaderAndFooter;\n        var firstBlock = section.firstChild;\n        var top_1 = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n        var headerDistance = HelperMethods.convertPointToPixel(sectionFormat.headerDistance);\n        if (isNotEmpty) {\n          top_1 = Math.max(headerDistance + section.page.headerWidget.height, top_1);\n        }\n        if (firstBlock.y !== top_1 && section.sectionFormat.breakCode !== \"NoBreak\") {\n          this.owner.viewer.updateClientArea(section, section.page);\n          firstBlock = firstBlock.combineWidget(this.owner.viewer);\n          var prevWidget = firstBlock.previousRenderedWidget;\n          if (prevWidget) {\n            if (firstBlock.containerWidget.equals(prevWidget.containerWidget) && !(prevWidget.containerWidget.lastChild instanceof ParagraphWidget && (prevWidget.containerWidget.lastChild.isEndsWithPageBreak || prevWidget.containerWidget.lastChild.isEndsWithColumnBreak))) {\n              this.owner.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n              this.documentHelper.layout.updateContainerWidget(firstBlock, prevWidget.containerWidget, prevWidget.indexInOwner + 1, false);\n            }\n          }\n          this.documentHelper.blockToShift = firstBlock;\n        }\n      } else {\n        this.checkAndShiftFromBottom(section.page, section.page.footerWidget);\n      }\n      if (this.documentHelper.blockToShift) {\n        this.documentHelper.renderedLists.clear();\n        this.documentHelper.renderedLevelOverrides = [];\n        this.documentHelper.layout.shiftLayoutedItems(false);\n      }\n      while (section) {\n        var previousSection = section;\n        do {\n          //To skip section continuous, since it already shifted in `shiftLayoutedItems` method.\n          var splittedSection = section.getSplitWidgets();\n          section = splittedSection[splittedSection.length - 1].nextRenderedWidget;\n        } while (section && previousSection.page === section.page);\n        if (section) {\n          if (pageIndex === 0) {\n            break;\n          } else {\n            if (section.page.index + 1 % 2 === 0 && pageIndex === 1 || section.page.index + 1 % 2 !== 0 && pageIndex === 2) {\n              break;\n            }\n            var nextPage = section.page.nextPage;\n            if (!isNullOrUndefined(nextPage) && nextPage.bodyWidgets[0].equals(section)) {\n              section = nextPage.bodyWidgets[0];\n              break;\n            }\n          }\n        }\n      }\n    } while (section);\n  };\n  Editor.prototype.checkAndShiftFromBottom = function (page, footerWidget) {\n    var bodyWidget = page.bodyWidgets[0];\n    var blockToShift;\n    if (bodyWidget.childWidgets.length > 1) {\n      for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n        var block = bodyWidget.childWidgets[i];\n        if (block.y + block.height > footerWidget.y) {\n          blockToShift = block;\n          break;\n        }\n        if (!(footerWidget instanceof FootNoteWidget)) {\n          if (bodyWidget.childWidgets.length - 1 === i && block.y + block.height < footerWidget.y) {\n            blockToShift = block;\n            break;\n          }\n        }\n      }\n      if (!isNullOrUndefined(blockToShift)) {\n        this.owner.viewer.updateClientArea(bodyWidget, page, true);\n        this.owner.viewer.cutFromTop(blockToShift.y);\n        this.documentHelper.blockToShift = blockToShift;\n      }\n    }\n  };\n  Editor.prototype.allowFormattingInFormFields = function (property) {\n    if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.selection.isInlineFormFillMode() && !isNullOrUndefined(this.owner.documentEditorSettings.formFieldSettings.formattingExceptions)) {\n      for (var j = 0; j < this.owner.documentEditorSettings.formFieldSettings.formattingExceptions.length; j++) {\n        if (property.toLowerCase() === this.owner.documentEditorSettings.formFieldSettings.formattingExceptions[j].toLowerCase()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.getContentControl = function () {\n    for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n      var contentControlStart = this.documentHelper.contentControlCollection[i];\n      var position = this.selection.getPosition(contentControlStart);\n      var cCstart = position.startPosition;\n      var cCend = position.endPosition;\n      var start = this.selection.start;\n      var end = this.selection.end;\n      if (!this.selection.isForward) {\n        start = this.selection.end;\n        end = this.selection.start;\n      }\n      if ((start.isExistAfter(cCstart) || start.isAtSamePosition(cCstart)) && (end.isExistBefore(cCend) || end.isAtSamePosition(cCend))) {\n        return contentControlStart;\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.checkPlainTextContentControl = function () {\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.selection.isForward) {\n      end = this.selection.start;\n      start = this.selection.end;\n    }\n    var startIndex = 0;\n    var endIndex = 0;\n    var startInline = start.currentWidget.getInline(start.offset, startIndex);\n    var endInline = end.currentWidget.getInline(end.offset, endIndex);\n    startIndex = startInline.index;\n    endIndex = endInline.index;\n    var startInlineEle = startInline.element;\n    var endInlineEle = endInline.element;\n    var startPosition;\n    var endPosition;\n    if (startInlineEle && startInlineEle.contentControlProperties && startInlineEle.contentControlProperties.type === 'Text' || endInlineEle && endInlineEle.contentControlProperties && endInlineEle.contentControlProperties.type === 'Text') {\n      startInlineEle = this.getContentControl();\n      if (startInlineEle.contentControlProperties && !isNullOrUndefined(startInlineEle)) {\n        var offset = startInlineEle.line.getOffset(startInlineEle, 1);\n        startPosition = new TextPosition(this.owner);\n        startPosition.setPositionParagraph(startInlineEle.line, offset);\n      } else {\n        startPosition = start;\n      }\n      if (endInlineEle.contentControlProperties && startInlineEle.reference) {\n        endInlineEle = startInlineEle.reference;\n        var endoffset = endInlineEle.line.getOffset(endInlineEle, endInlineEle.length);\n        endPosition = new TextPosition(this.owner);\n        endPosition.setPositionParagraph(endInlineEle.line, endoffset);\n      } else {\n        endPosition = end;\n      }\n      this.selection.selectRange(startPosition, endPosition);\n    } else if (start.paragraph.contentControlProperties && start.paragraph.contentControlProperties.type === 'Text') {\n      this.selection.selectParagraph();\n    }\n  };\n  //Paste Implementation ends\n  //Character Format apply implementation starts\n  /**\n   * Applies character format for selection.\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @param {boolean} update - Spcifies the update\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyCharacterFormat = function (property, value, update, applyStyle) {\n    var allowFormatting = this.documentHelper.isFormFillProtectedMode && this.documentHelper.selection.isInlineFormFillMode() && this.allowFormattingInFormFields(property);\n    if (this.restrictFormatting && !allowFormatting || this.selection.checkContentControlLocked(true)) {\n      return;\n    }\n    this.documentHelper.layout.isBidiReLayout = true;\n    var selection = this.documentHelper.selection;\n    if (selection.owner.isReadOnlyMode && !allowFormatting || !selection.owner.isDocumentLoaded) {\n      return;\n    }\n    update = isNullOrUndefined(update) ? false : update;\n    applyStyle = isNullOrUndefined(applyStyle) ? false : applyStyle;\n    var action = property[0].toUpperCase() + property.slice(1);\n    var paragraph = selection.start.paragraph;\n    var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n    this.checkPlainTextContentControl();\n    if (selection.isEmpty && selection.contextType !== 'List' && !applyStyle) {\n      selection.skipFormatRetrieval = true;\n      if (selection.end.isAtParagraphEnd) {\n        this.initHistory(action);\n        this.documentHelper.owner.isShiftingEnabled = true;\n        this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n        this.reLayout(this.documentHelper.selection);\n        this.documentHelper.updateFocus();\n      } else {\n        selection.fireSelectionChanged(true);\n      }\n      selection.skipFormatRetrieval = false;\n      return;\n    }\n    //Skip consider highlightcolor if paragraph mark alone is selected similar to Microsoft Word behaviour\n    if (property === 'highlightColor' && selection.start.isInSameParagraph(selection.end)) {\n      var start = selection.start;\n      var end = selection.end;\n      if (!this.selection.isForward) {\n        end = selection.start;\n        start = selection.end;\n      }\n      if (end.offset === selection.getLineLength(end.currentWidget) + 1 && end.offset - 1 === start.offset) {\n        return;\n      }\n    }\n    this.setOffsetValue(selection);\n    this.initHistory(action);\n    // Todo: Complete Microsoft Word behavior on apply formatting in empty selection\n    // if (selection.isEmpty) {\n    //     this.documentHelper.owner.isShiftingEnabled = true;\n    //     this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n    //     this.reLayout(this.documentHelper.selection);\n    //     this.documentHelper.updateFocus();\n    //     return;\n    // }\n    if (selection.contextType === 'List') {\n      // this.updateCharacterFormatForListText(selection, action, value, update);\n      this.applyCharacterFormatForListText(selection, property, value, update);\n    } else {\n      //Iterate and update format.\n      this.updateSelectionCharacterFormatting(property, value, update);\n    }\n    this.documentHelper.layout.isBidiReLayout = false;\n  };\n  Editor.prototype.applyCharacterFormatForListText = function (selection, property, values, update) {\n    var listLevel = selection.getListLevel(selection.start.paragraph);\n    if (isNullOrUndefined(listLevel)) {\n      return;\n    }\n    var characterFormat = listLevel.characterFormat;\n    switch (property) {\n      case 'bold':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'bold', !characterFormat.bold);\n        break;\n      case 'italic':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'italic', !characterFormat.italic);\n        break;\n      case 'fontColor':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'fontColor', values);\n        break;\n      case 'fontFamily':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'fontFamily', values);\n        break;\n      case 'fontSize':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'fontSize', values);\n        break;\n      case 'highlightColor':\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'highlightColor', values);\n        break;\n      case 'baselineAlignment':\n        if (characterFormat.baselineAlignment === values) {\n          values = 'Normal';\n        }\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'baselineAlignment', values);\n        break;\n      case 'strikethrough':\n        if (characterFormat.strikethrough === values) {\n          values = 'None';\n        }\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'strikethrough', values);\n        break;\n      case 'underline':\n        if (characterFormat.underline === values) {\n          values = 'None';\n        }\n        this.applyListCharacterFormatByValue(selection, characterFormat, 'underline', values);\n        break;\n      case 'characterFormat':\n        this.applyListCharacterFormatByValue(selection, characterFormat, undefined, values);\n        break;\n    }\n  };\n  Editor.prototype.applyListCharacterFormatByValue = function (selection, format, property, value) {\n    this.initHistory('ListCharacterFormat');\n    this.applyCharFormatValue(format, property, value, false);\n    this.editorHistory.updateHistory();\n    this.reLayout(selection);\n    this.fireContentChange();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListCharacterFormat = function (selection, property, value) {\n    this.updateListTextSelRange(selection, property, value, false);\n  };\n  Editor.prototype.updateListTextSelRange = function (selection, property, value, update) {\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var startPositionInternal = selection.start;\n    var endPositionInternal = selection.end;\n    if (!selection.isForward) {\n      startPositionInternal = selection.end;\n      endPositionInternal = selection.start;\n    }\n    this.initHistoryPosition(selection, startPositionInternal);\n    var listLevel = selection.getListLevel(selection.start.paragraph);\n    this.applyCharFormatValue(listLevel.characterFormat, property, value, update);\n    this.startSelectionReLayouting(startPositionInternal.paragraph, selection, startPositionInternal, endPositionInternal);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateInsertPosition = function () {\n    var selection = this.documentHelper.selection;\n    var position = selection.start;\n    if (!selection.isForward) {\n      position = selection.end;\n    }\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && !isNullOrUndefined(position)) {\n      if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n        this.updateHistoryPosition(position, true);\n      }\n    }\n  };\n  /**\n   * Preserve paragraph and offset value for selection\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.setOffsetValue = function (selection) {\n    var info = this.selection.getParagraphInfo(selection.start);\n    this.startParagraph = info.paragraph;\n    this.startOffset = info.offset;\n    info = this.selection.getParagraphInfo(selection.end);\n    this.endParagraph = info.paragraph;\n    this.endOffset = info.offset;\n  };\n  /**\n   * Toggles the highlight color property of selected contents.\n   *\n   * @param {HighlightColor} highlightColor Specify the highlight color to be applied (default: Yellow).\n   * @returns {void}\n   */\n  Editor.prototype.toggleHighlightColor = function (highlightColor) {\n    var selection = this.documentHelper.selection;\n    if (isNullOrUndefined(highlightColor) || highlightColor === 'NoColor') {\n      highlightColor = 'Yellow';\n    }\n    //In Ms Word the highlight color is took from the ribbon. So we Have given yellow as constant.\n    if (selection.characterFormat.highlightColor === highlightColor) {\n      highlightColor = 'NoColor';\n    }\n    this.selection.characterFormat.highlightColor = highlightColor;\n  };\n  /**\n   * Toggles the subscript formatting of selected contents.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.toggleSubscript = function () {\n    if (this.owner.isReadOnlyMode || this.restrictFormatting) {\n      return;\n    }\n    var value = this.selection.characterFormat.baselineAlignment === 'Subscript' ? 'Normal' : 'Subscript';\n    this.selection.characterFormat.baselineAlignment = value;\n  };\n  /**\n   * Toggles the superscript formatting of selected contents.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.toggleSuperscript = function () {\n    if (this.owner.isReadOnlyMode || this.restrictFormatting) {\n      return;\n    }\n    var value = this.selection.characterFormat.baselineAlignment === 'Superscript' ? 'Normal' : 'Superscript';\n    this.selection.characterFormat.baselineAlignment = value;\n  };\n  /**\n   * Increases the left indent of selected paragraphs to a factor of 36 points.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.increaseIndent = function () {\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      this.onApplyParagraphFormat('leftIndent', this.documentHelper.defaultTabWidth, true, false);\n    }\n  };\n  /**\n   * Decreases the left indent of selected paragraphs to a factor of 36 points.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.decreaseIndent = function () {\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      this.onApplyParagraphFormat('leftIndent', -this.documentHelper.defaultTabWidth, true, false);\n    }\n  };\n  /**\n   * Clears the list format for selected paragraphs.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.clearList = function () {\n    this.selection.owner.editorModule.onApplyList(undefined);\n  };\n  /**\n   * Applies the bullet list to selected paragraphs.\n   *\n   * @param {string} bullet Specify the bullet character to be applied.\n   * @param {string} fontFamily Specify the bullet font family name.\n   * @returns {void}\n   */\n  Editor.prototype.applyBullet = function (bullet, fontFamily) {\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      this.applyBulletOrNumbering(bullet, 'Bullet', fontFamily);\n    }\n  };\n  /**\n   * Applies the numbering list to selected paragraphs.\n   *\n   * @param {string} numberFormat  “%n” representations in ‘numberFormat’ parameter will be replaced by respective list level’s value.\n   * `“%1)” will be displayed as “1)” `\n   * @param {ListLevelPattern} listLevelPattern  Default value of ‘listLevelPattern’ parameter is ListLevelPattern.Arabic\n   * @returns {void}\n   */\n  Editor.prototype.applyNumbering = function (numberFormat, listLevelPattern) {\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      this.applyBulletOrNumbering(numberFormat, listLevelPattern, 'Verdana');\n    }\n  };\n  /**\n   * Toggles the baseline alignment property of selected contents.\n   *\n   * @param {BaselineAlignment} baseAlignment Specifies the baseline alignment.\n   * @returns {void}\n   */\n  Editor.prototype.toggleBaselineAlignment = function (baseAlignment) {\n    this.updateProperty(2, baseAlignment);\n  };\n  Editor.prototype.clearFormattingInternal = function (isCompletePara) {\n    var selection = this.documentHelper.selection;\n    this.setPreviousBlockToLayout();\n    this.initComplexHistory('ClearFormat');\n    // let startIndex: string = selection.start.getHierarchicalIndexInternal();\n    // let endIndex: string = selection.end.getHierarchicalIndexInternal();\n    if (selection.isEmpty || !isNullOrUndefined(isCompletePara) && isCompletePara) {\n      selection.start.moveToParagraphStartInternal(selection, false);\n      selection.end.moveToParagraphEndInternal(selection, false);\n    }\n    this.setOffsetValue(selection);\n    if (this.editorHistory) {\n      this.editorHistory.initializeHistory('ClearCharacterFormat');\n    }\n    this.updateSelectionCharacterFormatting('ClearCharacterFormat', undefined, false);\n    this.getOffsetValue(selection);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.setOffsetValue(selection);\n    if (this.editorHistory) {\n      this.editorHistory.initializeHistory('ClearParagraphFormat');\n    }\n    this.updateParagraphFormatInternal('ClearParagraphFormat', undefined, false);\n    if (this.editorHistory) {\n      this.editorHistory.updateHistory();\n    }\n    this.getOffsetValue(selection);\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n      this.editorHistory.updateComplexHistory();\n    }\n    this.startParagraph = undefined;\n    this.endParagraph = undefined;\n    // else {\n    //     this.checkAndUpdatedSelection(startIndex, endIndex);\n    // }\n  };\n  /**\n   * Clears the formatting.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.clearFormatting = function () {\n    this.clearFormattingInternal();\n  };\n  Editor.prototype.updateProperty = function (type, value) {\n    var selection = this.selection;\n    if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode() || !selection.owner.isDocumentLoaded) {\n      return;\n    }\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    var indexInInline = 0;\n    var inlineObj = startPosition.currentWidget.getInline(startPosition.offset, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    var paragraph = startPosition.paragraph;\n    if (!isNullOrUndefined(inline) && inline.length === indexInInline && !this.selection.isEmpty) {\n      inline = inline.nextNode;\n    }\n    if (type === 1) {\n      var currentUnderline = 'None';\n      if (!isNullOrUndefined(inline)) {\n        currentUnderline = inline.characterFormat.underline;\n      } else if (!isNullOrUndefined(paragraph)) {\n        currentUnderline = paragraph.characterFormat.underline;\n      }\n      this.selection.characterFormat.underline = value === currentUnderline ? 'None' : value;\n    } else {\n      var script = 'Normal';\n      if (!isNullOrUndefined(inline)) {\n        script = inline.characterFormat.baselineAlignment;\n      } else if (!isNullOrUndefined(paragraph)) {\n        script = paragraph.characterFormat.baselineAlignment;\n      }\n      if (script === value) {\n        value = 'Normal';\n      }\n      this.selection.characterFormat.baselineAlignment = value;\n    }\n  };\n  Editor.prototype.getCompleteStyles = function () {\n    var completeStylesString = '{\"styles\":[';\n    for (var _i = 0, _a = this.documentHelper.preDefinedStyles.keys; _i < _a.length; _i++) {\n      var name_1 = _a[_i];\n      completeStylesString += this.documentHelper.preDefinedStyles.get(name_1) + ',';\n    }\n    return completeStylesString.slice(0, -1) + ']}';\n  };\n  /**\n   * Initialize default styles\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.intializeDefaultStyles = function () {\n    var existingStyles = this.owner.getStyleNames('Paragraph');\n    var defaultStyleNames = ['Normal', 'Heading 1', 'Heading 2', 'Heading 3', 'Heading 4', 'Heading 5', 'Heading 6', 'Heading 7', 'Heading 8', 'Heading 9', 'Header', 'Footer'];\n    var styleNames = defaultStyleNames.filter(function (val) {\n      return existingStyles.indexOf(val) === -1;\n    });\n    for (var _i = 0, styleNames_1 = styleNames; _i < styleNames_1.length; _i++) {\n      var name_2 = styleNames_1[_i];\n      this.createStyle(this.documentHelper.preDefinedStyles.get(name_2));\n    }\n  };\n  /**\n   * Creates a new style or modifies an existing style with the specified style properties.\n   *\n   * > If modifyExistingStyle parameter is set to true and a style already exists with same name, it modifies the specified properties in the existing style.\n   * > If modifyExistingStyle parameter is set to false and a style already exists with same name, it creates a new style with unique name by appending ‘_1’. Hence, the newly style will not have the specified name.\n   * > If no style exists with same name, it creates a new style.\n   *\n   * @param {string} styleString The style properties.\n   * @param {boolean} modifyExistingStyle The Boolean value denotes whether to modify the properties in the existing style or create a new style.\n   *\n   * @returns {string} Returns the name of the created style.\n   */\n  Editor.prototype.createStyle = function (styleString, modifyExistingStyle) {\n    return this.createStyleIn(styleString, modifyExistingStyle).name;\n  };\n  /**\n   * @private\n   * Adds a new style to the document or updates an existing style.\n   *\n   * @param {string} styleString - The style to be added or updated.\n   * @param {boolean} modifyExistingStyle - Whether to modify an existing style.\n   * @returns {Object} - The style that was added or updated.\n   */\n  Editor.prototype.createStyleIn = function (styleString, modifyExistingStyle) {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    var style = JSON.parse(styleString);\n    var styleObj = this.documentHelper.styles.findByName(style.name);\n    var inputStyleType = style.type;\n    if (isNullOrUndefined(styleObj) || isNullOrUndefined(modifyExistingStyle) || !modifyExistingStyle) {\n      if (styleObj !== undefined) {\n        // Create a new style with new name and add it to collection.\n        style.name = this.getUniqueStyleName(style.name);\n      }\n      this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), style, this.documentHelper.styles, true);\n    } else {\n      if (inputStyleType === styleObj.type) {\n        // Update the existing style with the newly received style information(Json)\n        this.setStyle(styleObj, style);\n      } else {\n        // Create a new style with new name and add it to collection.\n        style.name = this.getUniqueStyleName(style.name);\n        this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), style, this.documentHelper.styles, true);\n      }\n    }\n    this.owner.notify(internalStyleCollectionChange, {});\n    return this.documentHelper.styles.findByName(style.name);\n  };\n  /**\n   * Modify the Style\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.setStyle = function (styleObj, style) {\n    // based on Style\n    if (!isNullOrUndefined(style.basedOn)) {\n      var basedOn = this.documentHelper.styles.findByName(style.basedOn);\n      if (!isNullOrUndefined(basedOn)) {\n        if (basedOn.type === style.type) {\n          styleObj.basedOn = basedOn;\n        }\n      } else {\n        var basedStyle = this.getStyle(style.basedOn, JSON.parse(this.getCompleteStyles()));\n        var styleData = void 0;\n        if (!isNullOrUndefined(basedStyle) && basedStyle.type === style.type) {\n          styleData = basedStyle;\n        } else {\n          if (style.type === 'Paragraph') {\n            styleData = JSON.parse('{\"type\":\"Paragraph\",\"name\":\"Normal\",\"next\":\"Normal\"}');\n          } else {\n            styleData = JSON.parse('{\"type\": \"Character\",\"name\": \"Default Paragraph Font\"}');\n          }\n        }\n        styleObj.basedOn = this.documentHelper.styles.findByName(styleData.name);\n      }\n    }\n    // next style\n    if (!isNullOrUndefined(style.next)) {\n      if (style.type === \"Paragraph\") {\n        if (style.next === style.name) {\n          styleObj.next = styleObj;\n        } else {\n          var next = this.documentHelper.styles.findByName(style.next);\n          if (!isNullOrUndefined(next) && next.type === styleObj.type) {\n            styleObj.next = next;\n          } else {\n            styleObj.next = styleObj;\n          }\n        }\n      }\n    }\n    // link style\n    if (!isNullOrUndefined(style.link)) {\n      var link = this.documentHelper.styles.findByName(style.link);\n      var styleString = void 0;\n      if (!isNullOrUndefined(link) && link.type === \"Character\") {\n        this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, link.characterFormat);\n        styleObj.link = link;\n      } else {\n        //Construct the CharacterStyle string\n        var charaStyle = {};\n        charaStyle.characterFormat = style.characterFormat;\n        var newCharStyle = this.documentHelper.styles.findByName(style.name + ' Char');\n        if (newCharStyle.name !== undefined) {\n          charaStyle.name = this.getUniqueStyleName(style.name) + ' Char';\n        } else {\n          charaStyle.name = style.name + ' Char';\n        }\n        charaStyle.type = 'Character';\n        charaStyle.basedOn = 'Default Paragraph Font';\n        styleString = charaStyle;\n        this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), styleString, this.documentHelper.styles);\n        styleObj.link = this.documentHelper.styles.findByName(styleString.name);\n      }\n      if (style.type == 'Character') {\n        for (var i = 0; i < this.documentHelper.styles.length; i++) {\n          var styleFormCollection = this.documentHelper.styles.getItem(i);\n          var styleLink = styleFormCollection.link;\n          var linkName = styleLink === undefined ? \"\" : styleLink.name;\n          if (styleFormCollection.type === 'Paragraph' && linkName === style.link) {\n            if (!isNullOrUndefined(styleFormCollection.characterFormat)) {\n              this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, styleFormCollection.characterFormat);\n            }\n          }\n        }\n      }\n    }\n    //update the new paragraph style \n    if (!isNullOrUndefined(style.paragraphFormat)) {\n      this.documentHelper.owner.parser.parseParagraphFormat(0, style.paragraphFormat, styleObj.paragraphFormat);\n    }\n    //update the new character style \n    if (!isNullOrUndefined(style.characterFormat)) {\n      this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, styleObj.characterFormat);\n    }\n  };\n  Editor.prototype.getStyle = function (name, data) {\n    for (var i = 0; i < data.styles.length; i++) {\n      if (data.styles[i].name === name) {\n        return data.styles[i];\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.getUniqueStyleName = function (name) {\n    var uniqueName = this.getUniqueName(name);\n    var style = this.documentHelper.styles.findByName(uniqueName);\n    while (!isNullOrUndefined(style)) {\n      uniqueName = this.getUniqueStyleName(style.name);\n      style = this.documentHelper.styles.findByName(uniqueName);\n    }\n    return uniqueName;\n  };\n  Editor.prototype.getUniqueName = function (name) {\n    var matchArray = name.match(/\\d+$/);\n    var returnName;\n    if (!isNullOrUndefined(matchArray) && matchArray.length > 0) {\n      return name.replace(matchArray[0], (parseInt(matchArray[0], 10) + 1).toString());\n    } else {\n      return name + '_1';\n    }\n  };\n  /**\n   * Update Character format for selection\n   * @private\n   */\n  Editor.prototype.updateSelectionCharacterFormatting = function (property, values, update) {\n    if (isNullOrUndefined(property)) {\n      property = 'CharacterFormat';\n    }\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = values;\n    }\n    switch (property) {\n      case 'bold':\n        this.updateCharacterFormat('bold', values);\n        break;\n      case 'italic':\n        this.updateCharacterFormat('italic', values);\n        break;\n      case 'fontColor':\n        this.updateCharacterFormat('fontColor', values);\n        break;\n      case 'fontFamily':\n        this.updateCharacterFormat('fontFamily', values);\n        break;\n      case 'fontSize':\n        this.documentHelper.layout.isBidiReLayout = false;\n        this.updateCharacterFormatWithUpdate(this.documentHelper.selection, 'fontSize', values, update);\n        break;\n      case 'highlightColor':\n        this.updateCharacterFormat('highlightColor', values);\n        break;\n      case 'baselineAlignment':\n        this.updateCharacterFormat('baselineAlignment', values);\n        break;\n      case 'strikethrough':\n        this.updateCharacterFormat('strikethrough', values);\n        break;\n      case 'underline':\n        this.updateCharacterFormat('underline', values);\n        break;\n      case 'styleName':\n        this.updateCharacterFormatWithUpdate(this.documentHelper.selection, 'styleName', values, true, true);\n        break;\n      case 'CharacterFormat':\n        this.updateCharacterFormat(undefined, values);\n        break;\n      case 'ClearCharacterFormat':\n        this.updateCharacterFormat(undefined, values);\n        break;\n      case 'allCaps':\n        this.updateCharacterFormat('allCaps', values);\n        break;\n    }\n    this.reLayout(this.documentHelper.selection);\n  };\n  Editor.prototype.updateCharacterFormat = function (property, value) {\n    this.updateCharacterFormatWithUpdate(this.documentHelper.selection, property, value, false);\n  };\n  Editor.prototype.updateCharacterFormatWithUpdate = function (selection, property, value, update, styleName) {\n    styleName = isNullOrUndefined(styleName) ? false : styleName;\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isEmpty && !selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    if (selection.isEmpty && styleName) {\n      var offset = startPosition.offset;\n      var preservedStartPosition = startPosition.clone();\n      var preservedEndPosition = endPosition.clone();\n      this.selection.selectCurrentWord();\n      if (offset === this.selection.start.offset || offset === this.selection.end.offset - 1) {\n        this.selection.start = preservedStartPosition;\n        this.selection.end = preservedEndPosition;\n      }\n    }\n    this.applyCharFormatSelectedContent(startPosition.paragraph, selection, startPosition, endPosition, property, value, update);\n  };\n  Editor.prototype.applyCharFormatSelectedContent = function (paragraph, selection, start, end, property, value, update) {\n    //Selection start in cell.\n    if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable || start.paragraph.associatedCell !== end.paragraph.associatedCell || selection.isCellSelected(start.paragraph.associatedCell, start, end))) {\n      var cell = void 0;\n      start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(start, true);\n      }\n      cell = start.paragraph.associatedCell;\n      this.applyCharFormatCell(cell, selection, start, end, property, value, update);\n      var table = cell.ownerTable;\n      this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    } else {\n      this.applyCharFormat(paragraph, selection, start, end, property, value, update);\n    }\n  };\n  Editor.prototype.applyCharFormatForSelectedPara = function (paragraph, selection, property, value, update) {\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var line = paragraph.childWidgets[i];\n      for (var j = 0; j < line.children.length; j++) {\n        var element = line.children[j];\n        this.applyCharFormatValue(element.characterFormat, property, value, update);\n      }\n    }\n    this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n  };\n  Editor.prototype.splittedLastParagraph = function (paragraph) {\n    var splittedWidets = paragraph.getSplitWidgets();\n    return splittedWidets[splittedWidets.length - 1];\n  };\n  Editor.prototype.getNextParagraphForCharacterFormatting = function (block, start, end, property, value, update) {\n    var widgetCollection = block.getSplitWidgets();\n    block = widgetCollection[widgetCollection.length - 1];\n    block = this.documentHelper.selection.getNextRenderedBlock(block);\n    if (!isNullOrUndefined(block)) {\n      //Goto the next block.\n      if (block instanceof ParagraphWidget) {\n        this.applyCharFormat(block, this.documentHelper.selection, start, end, property, value, update);\n      } else {\n        this.applyCharFormatForTable(0, block, this.documentHelper.selection, start, end, property, value, update);\n      }\n    }\n  };\n  Editor.prototype.applyCharFormat = function (paragraph, selection, start, end, property, value, update) {\n    paragraph = paragraph.combineWidget(this.owner.viewer);\n    var startOffset = 0;\n    var length = selection.getParagraphLength(paragraph);\n    var startLineWidget = paragraph.childWidgets.indexOf(start.currentWidget) !== -1 ? paragraph.childWidgets.indexOf(start.currentWidget) : 0;\n    var endOffset = end.offset;\n    var endLineWidget = paragraph.childWidgets.indexOf(end.currentWidget) !== -1 ? paragraph.childWidgets.indexOf(end.currentWidget) : paragraph.childWidgets.length - 1;\n    if (!isNullOrUndefined(selection)) {\n      if (paragraph === start.paragraph) {\n        startOffset = start.offset;\n      }\n    }\n    if (!paragraph.equals(end.paragraph)) {\n      var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n      //Skip consider highlightcolor if paragraph mark alone is selected similar to Microsoft Word behaviour\n      if (!(property === 'highlightColor' && selection.isParagraphLastLine(lastLine) && start.currentWidget === lastLine && start.offset === selection.getLineLength(lastLine))) {\n        this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n      }\n      endOffset = length;\n    } else {\n      var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n      if (selection.isParagraphLastLine(lastLine) && end.currentWidget === lastLine && (endOffset === selection.getLineLength(lastLine) + 1 || selection.isEmpty && selection.end.isAtParagraphEnd)) {\n        this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n      }\n    }\n    // let count: number = 0;\n    for (var i = startLineWidget; i <= endLineWidget; i++) {\n      var line = paragraph.childWidgets[i];\n      if (i !== startLineWidget) {\n        startOffset = selection.getStartLineOffset(line);\n      }\n      if (line === end.currentWidget) {\n        endOffset = end.offset;\n      } else {\n        endOffset = selection.getLineLength(line);\n      }\n      var count = 0;\n      var isStarted = true;\n      var endElement = undefined;\n      var indexOf = -1;\n      var isIncrease = true;\n      for (var j = 0; j < line.children.length; isIncrease ? j++ : j--) {\n        var inlineObj = line.children[j];\n        isStarted = false;\n        if (inlineObj instanceof ListTextElementBox) {\n          continue;\n        }\n        if (endElement === inlineObj) {\n          endElement = undefined;\n          j = indexOf;\n          indexOf = -1;\n          isIncrease = true;\n        }\n        if (startOffset >= count + inlineObj.length) {\n          count += inlineObj.length;\n          continue;\n        }\n        var startIndex = 0;\n        if (startOffset > count) {\n          startIndex = startOffset - count;\n        }\n        var endIndex = endOffset - count;\n        var inlineLength = inlineObj.length;\n        if (endIndex > inlineLength) {\n          endIndex = inlineLength;\n        }\n        var index = this.applyCharFormatInline(inlineObj, selection, startIndex, endIndex, property, value, update);\n        j += index;\n        if (endOffset <= count + inlineLength) {\n          break;\n        }\n        count += inlineLength;\n      }\n    }\n    var endParagraph = end.paragraph;\n    this.documentHelper.layout.reLayoutParagraph(paragraph, startLineWidget, 0);\n    if (paragraph.equals(endParagraph)) {\n      return;\n    }\n    this.getNextParagraphForCharacterFormatting(paragraph, start, end, property, value, update);\n  };\n  /**\n   * Toggles the bold property of selected contents.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.toggleBold = function () {\n    if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n      return;\n    }\n    var value = this.getCurrentSelectionValue('bold');\n    this.selection.characterFormat.bold = value;\n  };\n  /**\n   * Toggles the bold property of selected contents.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.toggleItalic = function () {\n    if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n      return;\n    }\n    var value = this.getCurrentSelectionValue('italic');\n    this.selection.characterFormat.italic = value;\n  };\n  /**\n   * Change the selected text to uppercase.\n   * @private\n   */\n  Editor.prototype.changeCase = function (property) {\n    if (this.selection.isEmpty || (this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n      return;\n    }\n    this.selection.characterFormat.allCaps = property === \"Uppercase\" ? true : false;\n    this.initHistory(property);\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var selection = this.selection;\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    this.changeSelectedTextCase(selection, startPosition, endPosition, property);\n    this.reLayout(selection);\n  };\n  /**\n   * Change the selected text case.\n   * @private\n   */\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeSelectedTextCase = function (selection, startPosition, endPosition, property, removedTextNodes) {\n    var blockInfo = this.selection.getParagraphInfo(startPosition);\n    selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(startPosition, true);\n      }\n    }\n    var isRevert = this.editorHistory.isUndoing;\n    if (isRevert && !isNullOrUndefined(removedTextNodes) && removedTextNodes.length > 0) {\n      this.removedTextNodes = removedTextNodes;\n    }\n    var endPos = endPosition.selection.endOffset;\n    this.changeTextCase(startPosition.paragraph, selection, startPosition, endPosition, property, isRevert);\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      if (endPosition.selection.endOffset !== endPos) {\n        endPosition = selection.getTextPosBasedOnLogicalIndex(endPos);\n      }\n      if (this.checkEndPosition(selection)) {\n        this.updateHistoryPosition(endPosition, false);\n      }\n      selection.selectPosition(startPosition, endPosition);\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeTextCase = function (para, selection, startPosition, endPosition, property, isRevert) {\n    if (startPosition.paragraph.isInsideTable && (!endPosition.paragraph.isInsideTable || startPosition.paragraph.associatedCell !== endPosition.paragraph.associatedCell || selection.isCellSelected(startPosition.paragraph.associatedCell, startPosition, endPosition))) {\n      var tableCell = void 0;\n      startPosition.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(startPosition, true);\n      }\n      tableCell = startPosition.paragraph.associatedCell;\n      this.changeCaseParaFormatInCell(tableCell, startPosition, endPosition, property, isRevert);\n      var table = tableCell.ownerTable;\n      this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    } else {\n      this.changeCaseParagraph(para, selection, startPosition, endPosition, property, isRevert);\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParagraph = function (para, selection, startPos, endPos, property, isRevert) {\n    para = para.combineWidget(this.owner.viewer);\n    var startOffsetVal = 0;\n    var len = selection.getParagraphLength(para);\n    var startLine = para.childWidgets.indexOf(startPos.currentWidget) !== -1 ? para.childWidgets.indexOf(startPos.currentWidget) : 0;\n    var endOffsetVal = endPos.offset;\n    var endLine = para.childWidgets.indexOf(endPos.currentWidget) !== -1 ? para.childWidgets.indexOf(endPos.currentWidget) : para.childWidgets.length - 1;\n    if (!isNullOrUndefined(selection)) {\n      if (para === startPos.paragraph) {\n        startOffsetVal = startPos.offset;\n      }\n    }\n    if (!para.equals(endPos.paragraph)) {\n      endOffsetVal = len;\n    }\n    // let count: number = 0;\n    for (var i = startLine; i <= endLine; i++) {\n      this.checkLastLetterSpaceDot = '';\n      this.checkLastLetterSpace = '';\n      var line = para.childWidgets[i];\n      if (i !== startLine) {\n        startOffsetVal = selection.getStartLineOffset(line);\n      }\n      if (line === endPos.currentWidget) {\n        endOffsetVal = endPos.offset;\n      } else {\n        endOffsetVal = selection.getLineLength(line);\n      }\n      var textCount = 0;\n      var isIterationStarted = true;\n      var endElementBox = undefined;\n      var childIndex = -1;\n      var isIncreaseIteration = true;\n      /* eslint-disable-next-line max-len */\n      for (var j = 0; j < line.children.length; isIncreaseIteration ? j++ : j--) {\n        var child = line.children[j];\n        var isPreviousTextElementBox = false;\n        if (j === 0 || j > 0 && line.children[j - 1] instanceof TextElementBox) {\n          isPreviousTextElementBox = true;\n          if (j > 0) {\n            var textElement = line.children[j - 1];\n            this.checkLastLetterSpace = textElement.text.substr(-1);\n            this.checkLastLetterSpaceDot = textElement.text.substr(-2);\n          }\n        }\n        isIterationStarted = false;\n        if (child instanceof ListTextElementBox) {\n          continue;\n        }\n        if (endElementBox === child) {\n          endElementBox = undefined;\n          j = childIndex;\n          childIndex = -1;\n          isIncreaseIteration = true;\n        }\n        if (startOffsetVal >= textCount + child.length) {\n          textCount += child.length;\n          continue;\n        }\n        var startIndex = 0;\n        if (startOffsetVal > textCount) {\n          startIndex = startOffsetVal - textCount;\n        }\n        var endIndex = endOffsetVal - textCount;\n        var inlineLength = child.length;\n        if (endIndex > inlineLength) {\n          endIndex = inlineLength;\n        }\n        var index = this.changeCaseInline(child, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n        j += index;\n        if (endOffsetVal <= textCount + inlineLength) {\n          break;\n        }\n        textCount += inlineLength;\n      }\n    }\n    var endPara = endPos.paragraph;\n    this.documentHelper.layout.reLayoutParagraph(para, startLine, 0);\n    if (para.equals(endPara)) {\n      return;\n    }\n    this.changeCaseNextBlock(para, startPos, endPos, property, isRevert);\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseInline = function (inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox) {\n    if (inline instanceof TextElementBox) {\n      if (startIndex === 0 && endIndex === inline.length) {\n        this.changeCaseInlineInternal(inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n      } else {\n        return this.changeCaseInlineInternal(inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n      }\n    }\n    return 0;\n  };\n  Editor.prototype.addRemovedTextNodes = function (inline, newText) {\n    if (inline instanceof TextElementBox) {\n      if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        var span = this.editorHistory.currentBaseHistoryInfo.removedNodes[0];\n        if (isNullOrUndefined(span)) {\n          span = new TextElementBox();\n          span.text = '';\n          this.editorHistory.currentBaseHistoryInfo.removedNodes.push(span);\n        }\n        span.text += newText;\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseInlineInternal = function (inlineObj, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox) {\n    var x = 0;\n    var makeFirstLetterCapital = false;\n    var index = inlineObj.line.children.indexOf(inlineObj);\n    var paragraph = inlineObj.paragraph;\n    var lineIndex = paragraph.childWidgets.indexOf(inlineObj.line);\n    var textElement;\n    if (startIndex > 0) {\n      var textToChange = inlineObj.text.substr(startIndex, endIndex - startIndex);\n      this.addRemovedTextNodes(inlineObj, textToChange);\n      textElement = new TextElementBox();\n      textElement.characterFormat.copyFormat(inlineObj.characterFormat);\n      textElement.line = inlineObj.line;\n      //Change the text case\n      if (property === 'CapitalizeEachWord') {\n        var firstLetter = inlineObj.text.substr(startIndex - 1, 1);\n        makeFirstLetterCapital = firstLetter === ' ';\n      }\n      if (property === 'SentenceCase') {\n        var firstLetter = inlineObj.text.substr(startIndex - 2, 2);\n        makeFirstLetterCapital = firstLetter === '. ';\n      }\n      textElement.text = this.getChangeCaseText(textToChange, property, isRevert, makeFirstLetterCapital);\n      textElement.isRightToLeft = inlineObj.isRightToLeft;\n      index++;\n      inlineObj.line.children.splice(index, 0, textElement);\n      x++;\n    }\n    if (endIndex < inlineObj.length) {\n      textElement = new TextElementBox();\n      textElement.characterFormat.copyFormat(inlineObj.characterFormat);\n      textElement.text = inlineObj.text.substring(endIndex);\n      textElement.line = inlineObj.line;\n      textElement.isRightToLeft = inlineObj.isRightToLeft;\n      index++;\n      inlineObj.line.children.splice(index, 0, textElement);\n      x++;\n    }\n    var textElementBox = inlineObj;\n    if (startIndex === 0) {\n      var newText = textElementBox.text.substr(0, endIndex);\n      this.addRemovedTextNodes(inlineObj, newText);\n      //Change the text case\n      if (property === 'SentenceCase') {\n        if (this.checkLastLetterSpaceDot === '. ') {\n          makeFirstLetterCapital = true;\n        } else if (lineIndex === 0 && this.checkLastLetterSpaceDot === '') {\n          if (isPreviousTextElementBox) {\n            var line = paragraph.childWidgets[0];\n            var element = line.children[0];\n            makeFirstLetterCapital = element === textElementBox;\n          } else {\n            makeFirstLetterCapital = true;\n          }\n        }\n        this.checkLastLetterSpaceDot = textElementBox.text.substr(-2);\n      } else if (property == 'CapitalizeEachWord') {\n        if (isPreviousTextElementBox) {\n          makeFirstLetterCapital = selection.getIndexInInline(inlineObj) === 0 || this.checkLastLetterSpace === ' ';\n        } else {\n          makeFirstLetterCapital = true;\n        }\n        this.checkLastLetterSpace = textElementBox.text.charAt(textElementBox.length - 1);\n      }\n      textElementBox.text = this.getChangeCaseText(newText, property, isRevert, makeFirstLetterCapital);\n    } else {\n      var preText = textElementBox.text.substr(0, startIndex);\n      textElementBox.text = preText;\n    }\n    return x;\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseNextBlock = function (block, start, end, property, isRevert) {\n    block = this.getNextBlockForChangeCase(block, start, end, property, isRevert);\n    if (!isNullOrUndefined(block)) {\n      //Goto the next block.\n      if (block instanceof ParagraphWidget) {\n        this.changeCaseParagraph(block, this.documentHelper.selection, start, end, property, isRevert);\n      } else {\n        this.changeCaseForTable(0, block, this.documentHelper.selection, start, end, property, isRevert);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.getNextBlockForChangeCase = function (block, start, end, property, isRevert) {\n    var widgetCollection = block.getSplitWidgets();\n    block = widgetCollection[widgetCollection.length - 1];\n    block = this.documentHelper.selection.getNextRenderedBlock(block);\n    return block;\n  };\n  Editor.prototype.getChangeCaseText = function (input, property, isRevert, makeFirstLetterCapital) {\n    if (isRevert) {\n      if (!isNullOrUndefined(this.removedTextNodes) && this.removedTextNodes.length > 0) {\n        var textElement = this.removedTextNodes[0];\n        var oldText = textElement.text.substr(0, input.length);\n        textElement.text = textElement.text.substr(oldText.length, textElement.length - oldText.length);\n        input = oldText;\n        if (textElement.text === '') {\n          this.removedTextNodes.splice(0, 1);\n        }\n      }\n    } else {\n      switch (property) {\n        case 'SentenceCase':\n          input = this.sentencecase(input, makeFirstLetterCapital);\n          break;\n        case 'Uppercase':\n          input = input.toUpperCase();\n          break;\n        case 'Lowercase':\n          input = input.toLowerCase();\n          break;\n        case 'CapitalizeEachWord':\n          input = this.capitalizeFirst(input, makeFirstLetterCapital);\n          break;\n        case 'ToggleCase':\n          input = this.togglecase(input);\n          break;\n        default:\n          break;\n      }\n    }\n    return input;\n  };\n  //Change text into capitalize each word\n  Editor.prototype.capitalizeFirst = function (inputString, makeFirstLetterCapital) {\n    var words = inputString.split(/[^\\w]+/g);\n    var capitalizedWords = words.map(function (word, index) {\n      if (index === 0) {\n        return makeFirstLetterCapital ? word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : word.toLowerCase();\n      }\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    });\n    var specialChars = inputString.split(/\\w+/).filter(Boolean);\n    var resultArray = [];\n    for (var i = 0; i < Math.max(capitalizedWords.length, specialChars.length); i++) {\n      if (capitalizedWords[i]) {\n        resultArray.push(capitalizedWords[i]);\n      }\n      if (specialChars[i]) {\n        resultArray.push(specialChars[i]);\n      }\n    }\n    var resultString = resultArray.join('');\n    return resultString;\n  };\n  //change text to sentence case\n  Editor.prototype.sentencecase = function (value, makeFirstLetterCapital) {\n    var sentences = value.split('. ');\n    var capitalizedSentences = sentences.map(function (sentence, index) {\n      if (index === 0) {\n        return makeFirstLetterCapital ? sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase() : sentence.toLowerCase();\n      }\n      return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n    });\n    var resultString = capitalizedSentences.join('. ');\n    return resultString;\n  };\n  //Change text to toggle case\n  Editor.prototype.togglecase = function (value) {\n    var text = '';\n    var toggle = value.split('').map(function (char) {\n      if (char === char.toLowerCase()) {\n        return char.toUpperCase();\n      } else {\n        return char.toLowerCase();\n      }\n    });\n    text = toggle.join('');\n    return text;\n  };\n  // Table\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseForTable = function (indexToStart, tableWidget, selection, startPos, endPos, property, isRevert) {\n    tableWidget = tableWidget.combineWidget(this.owner.viewer);\n    for (var i = indexToStart; i < tableWidget.childWidgets.length; i++) {\n      var row = tableWidget.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.changeCaseForSelectedCell(row.childWidgets[j], selection, property, isRevert);\n      }\n      if (endPos.paragraph.isInsideTable && selection.containsRow(row, endPos.paragraph.associatedCell)) {\n        this.documentHelper.layout.layoutBodyWidgetCollection(tableWidget.index, tableWidget.containerWidget, tableWidget, false);\n        return;\n      }\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(tableWidget.index, tableWidget.containerWidget, tableWidget, false);\n    this.changeCaseNextBlock(tableWidget, startPos, endPos, property, isRevert);\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseForSelectedCell = function (cell, selection, property, isRevert) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      var block = cell.childWidgets[i];\n      if (block instanceof ParagraphWidget) {\n        this.changeCaseForSelectedPara(block, selection, property, isRevert);\n      } else {\n        this.changeCaseForSelTable(block, selection, property, isRevert);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseForSelectedPara = function (paragraph, selection, property, isRevert) {\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var line = paragraph.childWidgets[i];\n      var firstLetter = '';\n      for (var j = 0; j < line.children.length; j++) {\n        var element = line.children[j];\n        var makeFirstLetterCapital = false;\n        if (!isNullOrUndefined(element) && element instanceof TextElementBox) {\n          this.addRemovedTextNodes(element, element.text);\n          if (property === 'CapitalizeEachWord') {\n            makeFirstLetterCapital = j === 0 || firstLetter === ' ';\n            firstLetter = element.text.substr(element.length - 1, 1);\n          } else if (property === 'SentenceCase') {\n            makeFirstLetterCapital = element.text.substr(element.length - 2, 2) === '. ' || j === 0;\n          }\n          element.text = this.getChangeCaseText(element.text, property, isRevert, makeFirstLetterCapital);\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseForSelTable = function (tableWidget, selection, property, isRevert) {\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var row = tableWidget.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.changeCaseForSelectedCell(row.childWidgets[j], selection, property, isRevert);\n      }\n    }\n  };\n  // Cell\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParaFormatInCell = function (tableCell, startPos, endPos, property, isRevert) {\n    var selection = this.documentHelper.selection;\n    if (endPos.paragraph.isInsideTable) {\n      var cellContainer = selection.getContainerCellOf(tableCell, endPos.paragraph.associatedCell);\n      if (cellContainer.ownerTable.contains(endPos.paragraph.associatedCell)) {\n        var startCell = selection.getSelectedCell(tableCell, cellContainer);\n        var endCell = selection.getSelectedCell(endPos.paragraph.associatedCell, cellContainer);\n        if (selection.containsCell(cellContainer, endPos.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (selection.isCellSelected(cellContainer, startPos, endPos)) {\n            this.changeCaseParaForCellInternal(cellContainer, selection, property, isRevert);\n          } else {\n            if (startCell === cellContainer) {\n              this.changeCaseParagraph(startPos.paragraph, selection, startPos, endPos, property, isRevert);\n            } else {\n              this.changeCaseParaForRow(startCell.ownerRow, selection, startPos, endPos, property, isRevert);\n            }\n          }\n        } else {\n          //Change case of other selected cells in the current table.\n          this.changeCaseParaForTableCell(cellContainer.ownerTable, cellContainer, endCell, property, isRevert);\n        }\n      } else {\n        this.changeCaseParaForRow(cellContainer.ownerRow, selection, startPos, endPos, property, isRevert);\n      }\n    } else {\n      var wCell = selection.getContainerCell(tableCell);\n      this.changeCaseParaForRow(wCell.ownerRow, selection, startPos, endPos, property, isRevert);\n    }\n  };\n  // Table\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParaForTableCell = function (tableWidget, startCell, endCell, property, isRevert) {\n    var selection = this.documentHelper.selection;\n    var cellStartValue = selection.getCellLeft(startCell.ownerRow, startCell);\n    var cellEndValue = cellStartValue + startCell.cellFormat.cellWidth;\n    var cellEndLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n    var cellEndRight = cellEndLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(cellStartValue, cellEndValue, cellEndLeft, cellEndRight);\n    cellStartValue = cellInfo.start;\n    cellEndValue = cellInfo.end;\n    var count = tableWidget.childWidgets.indexOf(endCell.ownerRow);\n    for (var m = tableWidget.childWidgets.indexOf(startCell.ownerRow); m <= count; m++) {\n      var row = tableWidget.childWidgets[m];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var left = selection.getCellLeft(row, row.childWidgets[j]);\n        if (Math.round(cellStartValue) <= Math.round(left) && Math.round(left) < Math.round(cellEndValue)) {\n          this.changeCaseParaForCellInternal(row.childWidgets[j], selection, property, isRevert);\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParaForCellInternal = function (tableCell, selection, property, isRevert) {\n    for (var i = 0; i < tableCell.childWidgets.length; i++) {\n      var childBlock = tableCell.childWidgets[i];\n      if (childBlock instanceof ParagraphWidget) {\n        this.changeCaseForSelectedPara(childBlock, selection, property, isRevert);\n      } else {\n        this.changeCaseParaFormatTableInternal(childBlock, selection, property, isRevert);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParaFormatTableInternal = function (table, selection, property, isRevert) {\n    for (var x = 0; x < table.childWidgets.length; x++) {\n      var row = table.childWidgets[x];\n      for (var y = 0; y < row.childWidgets.length; y++) {\n        this.changeCaseParaForCellInternal(row.childWidgets[y], selection, property, isRevert);\n      }\n    }\n  };\n  // Row\n  /* eslint-disable-next-line max-len */\n  Editor.prototype.changeCaseParaForRow = function (wRow, selection, start, end, property, isRevert) {\n    for (var i = wRow.rowIndex; i < wRow.ownerTable.childWidgets.length; i++) {\n      var row = wRow.ownerTable.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.changeCaseParaForCellInternal(row.childWidgets[j], selection, property, isRevert);\n      }\n      if (end.paragraph.isInsideTable && this.documentHelper.selection.containsRow(row, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    this.changeCaseNextBlock(wRow.ownerTable, start, end, property, isRevert);\n  };\n  /**\n   * Toggles the all Caps formatting for the selected content.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.toggleAllCaps = function () {\n    if (this.documentHelper.owner.isReadOnlyMode && !this.selection.isInlineFormFillMode()) {\n      return;\n    }\n    var value = this.getCurrentSelectionValue('allCaps');\n    this.selection.characterFormat.allCaps = value;\n  };\n  Editor.prototype.toggleChangeCase = function () {\n    var casings = ['Uppercase', 'Lowercase', 'CapitalizeEachWord'];\n    this.casingIndex++;\n    if (this.casingIndex >= casings.length) {\n      this.casingIndex = 0;\n    }\n    return casings[this.casingIndex];\n  };\n  Editor.prototype.getCurrentSelectionValue = function (property) {\n    var value = false;\n    if (property === 'bold' || property === 'italic') {\n      var characterFormat = this.getSelectedCharacterFormat();\n      if (property === 'bold') {\n        value = !characterFormat.bold;\n      }\n      if (property === 'italic') {\n        value = !characterFormat.italic;\n      }\n    }\n    return value;\n  };\n  Editor.prototype.getSelectedCharacterFormat = function () {\n    var index = 0;\n    var start = this.selection.start;\n    if (!this.selection.isForward) {\n      start = this.selection.end;\n    }\n    var lineWidget = start.currentWidget;\n    var inlineObj = lineWidget.getInline(start.offset, index);\n    var inline = inlineObj.element;\n    // inline.ownerBase\n    index = inlineObj.index;\n    var characterFormat = lineWidget.paragraph.characterFormat;\n    if (!isNullOrUndefined(inline)) {\n      if (this.selection.isEmpty && this.selection.contextType === 'List') {\n        var listLevel = this.selection.getListLevel(this.selection.start.paragraph);\n        if (listLevel.characterFormat.uniqueCharacterFormat) {\n          characterFormat = listLevel.characterFormat;\n        }\n      } else if (!this.selection.isEmpty && index === inline.length) {\n        characterFormat = isNullOrUndefined(inline.nextNode) ? lineWidget.paragraph.characterFormat : inline.nextNode.characterFormat;\n      } else {\n        characterFormat = inline.characterFormat;\n      }\n    }\n    return characterFormat;\n  };\n  /**\n   * Toggles the underline property of selected contents.\n   *\n   * @param underline Specify the underline to be toggled (default: Single).\n   * @returns {void}\n   */\n  Editor.prototype.toggleUnderline = function (underline) {\n    if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n      return;\n    }\n    this.updateProperty(1, underline);\n  };\n  /**\n   * Toggles the strike through property of selected contents.\n   *\n   * @param {Strikethrough} strikethrough Specify the strike through to be toggled (default: SingleStrike).\n   * @returns {void}\n   */\n  Editor.prototype.toggleStrikethrough = function (strikethrough) {\n    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n      var value = void 0;\n      if (isNullOrUndefined(strikethrough)) {\n        value = this.selection.characterFormat.strikethrough === 'SingleStrike' ? 'None' : 'SingleStrike';\n      } else {\n        value = strikethrough;\n      }\n      this.selection.characterFormat.strikethrough = value;\n    }\n  };\n  Editor.prototype.updateFontSize = function (format, value) {\n    if (typeof value === 'number' && !(value < 0 && format.fontSize === 1)) {\n      return format.fontSize + value;\n    }\n    var fontsizeCollection = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72];\n    if (typeof value === 'string' && value === 'increment') {\n      if (format.fontSize < 8) {\n        return format.fontSize + 1;\n      } else if (format.fontSize >= 72 && format.fontSize < 80) {\n        return 80;\n      } else if (format.fontSize >= 80) {\n        return format.fontSize + 10;\n      } else {\n        for (var i = 0; i < fontsizeCollection.length; i++) {\n          if (format.fontSize < fontsizeCollection[i]) {\n            return fontsizeCollection[i];\n          }\n        }\n      }\n    } else if (typeof value === 'string' && value === 'decrement' && format.fontSize > 1) {\n      if (format.fontSize <= 8) {\n        return format.fontSize - 1;\n      } else if (format.fontSize > 72 && format.fontSize <= 80) {\n        return 72;\n      } else if (format.fontSize > 80) {\n        return format.fontSize - 10;\n      } else {\n        for (var i = 0; i < fontsizeCollection.length; i++) {\n          if (format.fontSize <= fontsizeCollection[i]) {\n            return fontsizeCollection[i - 1];\n          }\n        }\n      }\n    }\n    return format.fontSize;\n  };\n  // Inline\n  Editor.prototype.applyCharFormatInline = function (inline, selection, startIndex, endIndex, property, value, update) {\n    if (startIndex === 0 && endIndex === inline.length) {\n      this.applyCharFormatValue(inline.characterFormat, property, value, update);\n      return 0;\n    } else if (inline instanceof TextElementBox) {\n      return this.formatInline(inline, selection, startIndex, endIndex, property, value, update);\n    }\n    return 0;\n  };\n  Editor.prototype.formatInline = function (inline, selection, startIndex, endIndex, property, value, update) {\n    var x = 0;\n    var node = inline;\n    var index = inline.line.children.indexOf(node);\n    var paragraph = inline.paragraph;\n    var textElement;\n    var indexCountForRevision = 0;\n    if (startIndex > 0) {\n      indexCountForRevision += 1;\n      textElement = new TextElementBox();\n      textElement.characterFormat.copyFormat(inline.characterFormat);\n      textElement.line = inline.line;\n      textElement.text = inline.text.substr(startIndex, endIndex - startIndex);\n      textElement.isRightToLeft = inline.isRightToLeft;\n      this.applyCharFormatValue(textElement.characterFormat, property, value, update);\n      index++;\n      node.line.children.splice(index, 0, textElement);\n      x++;\n      this.updateRevisionForFormattedContent(inline, textElement, indexCountForRevision);\n      // this.addToLinkedFields(span);                      \n    }\n    if (endIndex < node.length) {\n      indexCountForRevision += 1;\n      textElement = new TextElementBox();\n      textElement.characterFormat.copyFormat(inline.characterFormat);\n      textElement.text = node.text.substring(endIndex);\n      textElement.line = inline.line;\n      textElement.isRightToLeft = inline.isRightToLeft;\n      index++;\n      node.line.children.splice(index, 0, textElement);\n      x++;\n      this.updateRevisionForFormattedContent(inline, textElement, indexCountForRevision);\n      // this.addToLinkedFields(span);                       \n    }\n    if (startIndex === 0) {\n      inline.text = inline.text.substr(0, endIndex);\n      this.applyCharFormatValue(inline.characterFormat, property, value, update);\n    } else {\n      inline.text = inline.text.substr(0, startIndex);\n    }\n    return x;\n  };\n  Editor.prototype.updateRevisionForFormattedContent = function (inline, tempSpan, indexCount) {\n    for (var i = 0; i < inline.revisions.length; i++) {\n      var currentRevision = inline.revisions[i];\n      var rangeIndex = currentRevision.range.indexOf(inline) + indexCount;\n      tempSpan.revisions.splice(0, 0, currentRevision);\n      currentRevision.range.splice(rangeIndex, 0, tempSpan);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n    }\n  };\n  // Cell\n  Editor.prototype.applyCharFormatCell = function (cell, selection, start, end, property, value, update) {\n    if (end.paragraph.isInsideTable) {\n      var containerCell = selection.getContainerCellOf(cell, end.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n        var startCell = selection.getSelectedCell(cell, containerCell);\n        var endCell = selection.getSelectedCell(end.paragraph.associatedCell, containerCell);\n        if (selection.containsCell(containerCell, end.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (selection.isCellSelected(containerCell, start, end)) {\n            value = this.getCharacterFormatValueOfCell(cell, selection, value, property);\n            this.applyCharFormatForSelectedCell(containerCell, selection, property, value, update);\n          } else {\n            if (startCell === containerCell) {\n              this.applyCharFormat(start.paragraph, selection, start, end, property, value, update);\n            } else {\n              this.applyCharFormatRow(startCell.ownerRow, selection, start, end, property, value, update);\n            }\n          }\n        } else {\n          //Format other selected cells in current table.\n          this.applyCharFormatForTableCell(containerCell.ownerTable, selection, containerCell, endCell, property, value, update);\n        }\n      } else {\n        this.applyCharFormatRow(containerCell.ownerRow, selection, start, end, property, value, update);\n      }\n    } else {\n      var tableCell = selection.getContainerCell(cell);\n      this.applyCharFormatRow(tableCell.ownerRow, selection, start, end, property, value, update);\n    }\n  };\n  Editor.prototype.applyCharFormatForSelectedCell = function (cell, selection, property, value, update) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      var block = cell.childWidgets[i];\n      if (block instanceof ParagraphWidget) {\n        this.applyCharFormatForSelectedPara(block, selection, property, value, update);\n      } else {\n        this.applyCharFormatForSelTable(block, selection, property, value, update);\n      }\n    }\n  };\n  // Row\n  Editor.prototype.applyCharFormatRow = function (row, selection, start, end, property, value, update) {\n    value = this.getCharacterFormatValueOfCell(row.childWidgets[0], selection, value, property);\n    this.applyCharFormatForTable(row.rowIndex, row.ownerTable, selection, start, end, property, value, update);\n  };\n  // Table\n  Editor.prototype.applyCharFormatForTable = function (index, table, selection, start, end, property, value, update) {\n    table = table.combineWidget(this.owner.viewer);\n    for (var i = index; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n      }\n      if (end.paragraph.isInsideTable && selection.containsRow(row, end.paragraph.associatedCell)) {\n        this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        return;\n      }\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    this.getNextParagraphForCharacterFormatting(table, start, end, property, value, update);\n  };\n  Editor.prototype.applyCharFormatForSelTable = function (tableWidget, selection, property, value, update) {\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var row = tableWidget.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n      }\n    }\n  };\n  Editor.prototype.applyCharFormatForTableCell = function (table, selection, startCell, endCell, property, value, update) {\n    var startCellLeft = selection.getCellLeft(startCell.ownerRow, startCell);\n    var startCellRight = startCellLeft + startCell.cellFormat.cellWidth;\n    var endCellLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(startCellLeft, startCellRight, endCellLeft, endCellRight);\n    startCellLeft = cellInfo.start;\n    startCellRight = cellInfo.end;\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    var isStarted = false;\n    for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var left = selection.getCellLeft(row, row.childWidgets[j]);\n        if (HelperMethods.round(startCellLeft, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(startCellRight, 2)) {\n          if (!isStarted) {\n            value = this.getCharacterFormatValueOfCell(row.childWidgets[j], selection, value, property);\n            isStarted = true;\n          }\n          this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n        }\n      }\n    }\n  };\n  /**\n   * private\n   * @returns {CellInfo}\n   */\n  Editor.prototype.updateSelectedCellsInTable = function (start, end, endCellLeft, endCellRight) {\n    var selection = this.documentHelper.selection;\n    if (start > endCellLeft) {\n      start = endCellLeft;\n    }\n    if (end < endCellRight) {\n      end = endCellRight;\n    }\n    if (start > selection.upDownSelectionLength) {\n      start = selection.upDownSelectionLength;\n    }\n    if (end < selection.upDownSelectionLength) {\n      end = selection.upDownSelectionLength;\n    }\n    return {\n      start: start,\n      end: end\n    };\n  };\n  Editor.prototype.getCharacterFormatValueOfCell = function (cell, selection, value, property) {\n    if (typeof value === 'boolean' || value === undefined && (property === 'bold' || property === 'italic')) {\n      var firstParagraph = selection.getFirstParagraph(cell);\n      var format = firstParagraph.characterFormat;\n      if (firstParagraph.childWidgets.length > 0 && firstParagraph.childWidgets[0].children.length > 0) {\n        format = firstParagraph.childWidgets[0].children[0].characterFormat;\n      }\n      value = !format.getPropertyValue(property);\n    }\n    return value;\n  };\n  /**\n   * Apply Character format for selection\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyCharFormatValueInternal = function (selection, format, property, value) {\n    this.applyCharFormatValue(format, property, value, false);\n  };\n  Editor.prototype.copyInlineCharacterFormat = function (sourceFormat, destFormat) {\n    destFormat.uniqueCharacterFormat = sourceFormat.uniqueCharacterFormat;\n    destFormat.baseCharStyle = sourceFormat.baseCharStyle;\n  };\n  Editor.prototype.applyCharFormatValue = function (format, property, value, update) {\n    if (update && property === 'fontSize') {\n      value = this.updateFontSize(format, value);\n    }\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedProperties(format, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (value instanceof WCharacterFormat) {\n      if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n        this.copyInlineCharacterFormat(value, format);\n        if (this.owner.enableCollaborativeEditing && format.ownerBase instanceof ElementBox) {\n          this.editorHistory.currentBaseHistoryInfo.buildCharacterFormatOperation(format.ownerBase, format);\n        }\n      } else {\n        format.copyFormat(value);\n      }\n      return;\n    }\n    if (this.isForHyperlinkFormat && this.owner.enableTrackChanges && format.ownerBase instanceof ElementBox) {\n      var currentElement = format.ownerBase;\n      var prevElement = currentElement.previousNode;\n      if (isNullOrUndefined(prevElement)) {\n        var paraWidget = currentElement.paragraph.previousWidget;\n        if (!isNullOrUndefined(paraWidget) && !paraWidget.isEmpty()) {\n          var lineWidget = paraWidget.lastChild;\n          prevElement = lineWidget.children[lineWidget.children.length - 1];\n        }\n      }\n      while (!isNullOrUndefined(prevElement) && !(prevElement instanceof TextElementBox)) {\n        prevElement = prevElement.previousNode;\n      }\n      if (!isNullOrUndefined(prevElement) && prevElement.revisions.length > 0) {\n        var currentRevision = prevElement.revisions[prevElement.revisions.length - 1];\n        if (!this.isRevisionAlreadyIn(currentElement, currentRevision)) {\n          currentElement.revisions.push(currentRevision);\n          currentRevision.range.push(currentElement);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n      } else {\n        var currentRevision = currentElement.revisions[currentElement.revisions.length - 1];\n        if (!isNullOrUndefined(currentRevision) && currentRevision.range.length > 0) {\n          currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n          var rangeIndex = currentRevision.range.indexOf(currentElement);\n          currentRevision.range.splice(rangeIndex, 1);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n        this.insertRevision(currentElement, 'Insertion');\n      }\n    }\n    if (isNullOrUndefined(value) && isNullOrUndefined(property)) {\n      format.clearFormat();\n      if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.currentBaseHistoryInfo.insertedFormat = format[property];\n      }\n      return;\n    }\n    if (property === 'bold') {\n      format.bold = value;\n    } else if (property === 'italic') {\n      format.italic = value;\n    } else if (property === 'fontColor') {\n      format.fontColor = value;\n    } else if (property === 'fontFamily') {\n      format.fontFamily = value;\n      format.fontFamilyAscii = value;\n      format.fontFamilyFarEast = value;\n      format.fontFamilyNonFarEast = value;\n      format.fontFamilyBidi = value;\n    } else if (property === 'fontSize') {\n      format.fontSize = value;\n    } else if (property === 'highlightColor') {\n      format.highlightColor = value;\n    } else if (property === 'baselineAlignment') {\n      format.baselineAlignment = value;\n    } else if (property === 'strikethrough') {\n      format.strikethrough = value;\n    } else if (property === 'underline') {\n      format.underline = value;\n    } else if (property === 'styleName') {\n      format.baseCharStyle = value;\n    } else if (property === 'allCaps') {\n      format.allCaps = value;\n    }\n    if (property === 'fontColor') {\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.currentBaseHistoryInfo.insertedFormat = format.fontColor;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.updateStyleObject = function (styleData) {\n    var styles = new WStyles();\n    var keyIndex = this.owner.parser.keywordIndex;\n    this.owner.parser.keywordIndex = 1;\n    var isRemoteAction = this.owner.editor.isRemoteAction;\n    this.owner.editor.isRemoteAction = true;\n    this.owner.parser.parseStyles(styleData, styles);\n    for (var i = 0; i < styles.length; i++) {\n      var style = styles.getItem(i);\n      var styleInCollection = this.owner.documentHelper.styles.findByName(style.name);\n      if (!isNullOrUndefined(styleData[abstractListsProperty[1]])) {\n        this.owner.parser.parseAbstractList(styleData, this.owner.documentHelper.abstractLists);\n        if (!isNullOrUndefined(styleData[listsProperty[1]])) {\n          this.owner.parser.parseList(styleData, this.owner.documentHelper.lists);\n        }\n      }\n      if (!isNullOrUndefined(styleInCollection)) {\n        if (this.owner.editorHistoryModule && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing) && i === 0) {\n          if (this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'ModifyStyle') {\n            var listId = styleInCollection instanceof WParagraphStyle ? styleInCollection.paragraphFormat.listFormat.listId : -1;\n            var styleObject = this.owner.getStyleObject(styleInCollection, listId);\n            if (!isNullOrUndefined(styleData['isNew'])) {\n              styleObject['isNew'] = styleData['isNew'];\n            }\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.modifiedProperties.push(styleObject);\n          }\n        }\n        if (styleData['isNew'] && this.owner.editorHistoryModule.isUndoing) {\n          this.owner.documentHelper.styles.remove(styleInCollection);\n        } else {\n          this.owner.updateStyle(styleInCollection, style);\n        }\n      } else {\n        if (this.owner.editorHistory.isRedoing) {\n          var listId = style instanceof WParagraphStyle ? style.paragraphFormat.listFormat.listId : -1;\n          var styleObject = this.documentHelper.owner.getStyleObject(style, listId);\n          styleObject[\"isNew\"] = true;\n          this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.modifiedProperties.push(styleObject);\n        }\n        this.owner.documentHelper.styles.push(style);\n      }\n    }\n    this.owner.editor.isRemoteAction = isRemoteAction;\n    if (styles.length > 0) {\n      this.owner.isShiftingEnabled = true;\n      this.owner.editorModule.layoutWholeDocument();\n      this.owner.isShiftingEnabled = false;\n    }\n    this.owner.parser.keywordIndex = keyIndex;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onImageFormat = function (elementBox, width, height, alternateText) {\n    var modifiedFormat = new ImageSizeInfo(elementBox);\n    if (this.editorHistory) {\n      this.editorHistory.initializeHistory('ImageResizing');\n      this.editorHistory.currentBaseHistoryInfo.modifiedProperties.push(modifiedFormat);\n      this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Image;\n      this.editorHistory.currentBaseHistoryInfo.insertedData = {\n        width: HelperMethods.convertPixelToPoint(width),\n        height: HelperMethods.convertPixelToPoint(height),\n        alternativeText: alternateText\n      };\n    }\n    this.setOffsetValue(this.selection);\n    elementBox.width = width;\n    elementBox.height = height;\n    elementBox.alternateText = alternateText;\n    this.documentHelper.layout.reLayoutParagraph(elementBox.line.paragraph, elementBox.line.indexInOwner, 0);\n    this.reLayout(this.selection, false);\n    if (this.documentHelper.owner.imageResizerModule && !this.isRemoteAction) {\n      this.documentHelper.owner.imageResizerModule.positionImageResizer(elementBox);\n    }\n  };\n  /**\n   * Toggles the text alignment of selected paragraphs.\n   *\n   * @param {TextAlignment} textAlignment Specifies the text alignment.\n   * @returns {void}\n   */\n  Editor.prototype.toggleTextAlignment = function (textAlignment) {\n    if (this.documentHelper.owner.isReadOnlyMode && !this.selection.isInlineFormFillMode() || !this.documentHelper.owner.isDocumentLoaded) {\n      return;\n    }\n    // Toggle performed based on current selection format similar to MS word behavior.\n    if (!isNullOrUndefined(this.documentHelper.selection.paragraphFormat.textAlignment) && this.documentHelper.selection.paragraphFormat.textAlignment === textAlignment) {\n      if (textAlignment === 'Left') {\n        this.onApplyParagraphFormat('textAlignment', 'Justify', false, true);\n      } else {\n        this.onApplyParagraphFormat('textAlignment', 'Left', false, true);\n      }\n    } else {\n      this.onApplyParagraphFormat('textAlignment', textAlignment, false, true);\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.setPreviousBlockToLayout = function () {\n    var startPosition = this.documentHelper.selection.start;\n    if (!this.documentHelper.selection.isForward) {\n      startPosition = this.documentHelper.selection.end;\n    }\n    var startParagraph = startPosition.paragraph;\n    if (startParagraph.paragraphFormat.keepWithNext) {\n      var bodyWidget = startParagraph.bodyWidget;\n      if (!isNullOrUndefined(bodyWidget) && bodyWidget instanceof BodyWidget && bodyWidget.page) {\n        var previousPage = bodyWidget.page.previousPage;\n        if (previousPage) {\n          this.previousBlockToLayout = previousPage.bodyWidgets[0].lastChild;\n        }\n      }\n    }\n  };\n  /**\n   * Apply borders for selected paragraph borders\n   * @private\n   */\n  Editor.prototype.applyParagraphBorders = function (property, bordersType, value) {\n    var borders = new WBorder();\n    switch (property) {\n      case 'color':\n        borders.color = value;\n        break;\n      case 'lineWidth':\n        borders.lineWidth = value;\n        break;\n      case 'lineStyle':\n        borders.lineStyle = value;\n        break;\n      case 'shadow':\n        borders.shadow = value;\n        break;\n      case 'space':\n        borders.space = value;\n        break;\n    }\n    this.onApplyParagraphFormat(bordersType, borders, false, false);\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.applyRulerMarkerValues = function (type, initialValue, finalValue) {\n    var differenceValue = HelperMethods.convertPixelToPoint(finalValue - initialValue) / this.owner.zoomFactor;\n    if (type === 'firstLineIndent') {\n      var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.firstLineIndent;\n      this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n    } else if (type === 'hangingIndent') {\n      var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.firstLineIndent;\n      this.onApplyParagraphFormat('firstLineIndent', currentValue - differenceValue, false, false);\n      var leftIndentCurrentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.leftIndent + currentValue;\n      currentValue = currentValue - differenceValue;\n      this.onApplyParagraphFormat('leftIndent', leftIndentCurrentValue - currentValue, false, false, true);\n    } else if (type === 'leftIndent') {\n      var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.leftIndent;\n      this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n    } else if (type === 'rightIndent') {\n      var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.rightIndent;\n      this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n    }\n  };\n  /**\n   * Applies paragraph format for the selection ranges.\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @param {boolean} update - Specifies the update\n   * @param {boolean} isSelectionChanged - Specifies the selection change.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyParagraphFormat = function (property, value, update, isSelectionChanged, isSkipPositionCheck) {\n    var allowFormatting = this.documentHelper.isFormFillProtectedMode && this.documentHelper.selection.isInlineFormFillMode() && this.allowFormattingInFormFields(property);\n    if (this.restrictFormatting && !allowFormatting) {\n      return;\n    }\n    this.setPreviousBlockToLayout();\n    var action = property === 'bidi' ? 'ParagraphBidi' : property[0].toUpperCase() + property.slice(1);\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var selection = this.documentHelper.selection;\n    var currentPara = selection.start.paragraph;\n    var isFirstParaForList = false;\n    if (!selection.isForward) {\n      currentPara = selection.end.paragraph;\n    }\n    if (property == 'leftIndent') {\n      isFirstParaForList = this.isFirstParaForList(selection, currentPara);\n    }\n    // To stop the indentation when the paragraph x position is at the clientArea's x position\n    if (value <= 0 && property == 'leftIndent' && !isSkipPositionCheck) {\n      var x = HelperMethods.convertPointToPixel(value);\n      if (currentPara.x + x < this.viewer.clientArea.x && !currentPara.paragraphFormat.bidi) {\n        this.documentHelper.owner.isShiftingEnabled = false;\n        return;\n      }\n    }\n    this.initHistory(action);\n    if (this.owner.isReadOnlyMode && !allowFormatting || !this.owner.isDocumentLoaded) {\n      return;\n    }\n    if (property === 'leftIndent') {\n      if (!isNullOrUndefined(selection.paragraphFormat.listId) && selection.paragraphFormat.listId !== -1 && update) {\n        if (isFirstParaForList) {\n          this.updateListLevelIndent(value, currentPara);\n        } else {\n          this.updateListLevel(value > 0);\n        }\n        return;\n      }\n    }\n    var isSkipSelection = !(value instanceof WCharacterStyle && property == 'styleName' && selection.isEmpty);\n    if (isSkipSelection && selection.isEmpty) {\n      this.setOffsetValue(selection);\n      var isBidiList = selection.paragraphFormat.bidi && (property === 'listFormat' || selection.paragraphFormat.listId !== -1);\n      if (!isBidiList) {\n        this.documentHelper.layout.isBidiReLayout = true;\n      }\n      if (update && property === 'leftIndent') {\n        value = this.getIndentIncrementValue(selection.start.paragraph, value);\n      }\n      var para = selection.start.paragraph;\n      var layout = this.documentHelper.layout;\n      // let footNoteWidgetsInfo: FootNoteWidgetsInfo = layout.getFootNodeWidgetsToShiftToPage(para);\n      para = para.combineWidget(this.owner.viewer);\n      this.applyParaFormatProperty(para, property, value, update);\n      this.layoutItemBlock(para, false);\n      // if (footNoteWidgetsInfo.footNoteWidgets.length > 0) {\n      //     layout.moveFootNotesToPage(footNoteWidgetsInfo.footNoteWidgets, footNoteWidgetsInfo.fromBodyWidget, footNoteWidgetsInfo.toBodyWidget);\n      //     layout.layoutfootNote(footNoteWidgetsInfo.toBodyWidget.page.footnoteWidget);\n      // }\n    } else {\n      //Iterate and update formatting's.      \n      if (action !== 'ParagraphBidi') {\n        this.setOffsetValue(selection);\n      }\n      this.updateSelectionParagraphFormatting(property, value, update);\n    }\n    this.reLayout(selection);\n  };\n  /**\n   * Updates the indent value in the ListLevel\n   * @param {Object} value - Specifies the value\n   * @param {ParagraphWidget} currentPara - Specifies the selected paragraph\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListLevelIndent = function (value, currentPara) {\n    var _a;\n    var list = this.documentHelper.getListById(currentPara.paragraphFormat.listFormat.listId);\n    var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n    var level;\n    var property = undefined;\n    if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      property = this.editorHistory.currentBaseHistoryInfo.action;\n    }\n    this.initHistory('List');\n    if (value < 0) {\n      if (abstractList.levels[0].paragraphFormat.leftIndent + value <= 0) {\n        value = 18 - abstractList.levels[0].paragraphFormat.leftIndent;\n      }\n    }\n    if (value == 0) {\n      return;\n    }\n    for (var i = 0; i < abstractList.levels.length; i++) {\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForList(abstractList.levels[i]);\n      }\n      level = abstractList.levels[i];\n      level.paragraphFormat.leftIndent += value;\n    }\n    if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && !isNullOrUndefined(property)) {\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = (_a = {}, _a[property.toString().charAt(0).toLowerCase() + property.toString().slice(1)] = value, _a[\"isFirstParaForList\"] = true, _a);\n    }\n    //To Do, Implement relayouting logic for this listStyle applied paragraphs alone.\n    //And shift remaining elements without layouting again.\n    //It will improve the performance in large size documents.\n    //The same can be reused in style modifications.\n    this.documentHelper.owner.isShiftingEnabled = true;\n    this.layoutWholeDocument();\n    this.documentHelper.owner.isShiftingEnabled = false;\n  };\n  /**\n   * To check the current selection is first paragraph for list\n   * @param {Selection} selection - Specifies the selection\n   * @param {ParagraphWidget} currentPara - Specifies the current paragraph\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.isFirstParaForList = function (selection, currentPara) {\n    var isFirstParaForList = false;\n    if (!isNullOrUndefined(selection.paragraphFormat.listId) && selection.paragraphFormat.listId !== -1 && currentPara.paragraphFormat.listFormat.listLevelNumber === 0) {\n      //Getting the previous paragraph with same listId\n      var previousParagraph = this.updateWholeListItems(currentPara, true, selection.paragraphFormat.listId);\n      if (isNullOrUndefined(previousParagraph)) {\n        isFirstParaForList = true;\n      }\n    }\n    return isFirstParaForList;\n  };\n  /**\n   * Update the list level\n   *\n   * @param {boolean} increaseLevel - Specifies the increase level\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListLevel = function (increaseLevel) {\n    // Increment or Decrement list level for Multilevel lists.\n    var documentHelper = this.documentHelper;\n    var listFormat = this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat;\n    var paragraphFormat = this.documentHelper.selection.start.paragraph.paragraphFormat;\n    var list = documentHelper.getListById(paragraphFormat.listFormat.listId);\n    var listLevel = documentHelper.layout.getListLevel(list, paragraphFormat.listFormat.listLevelNumber);\n    var levelNumber;\n    if (increaseLevel) {\n      levelNumber = paragraphFormat.listFormat.listLevelNumber + 1;\n    } else {\n      levelNumber = paragraphFormat.listFormat.listLevelNumber - 1;\n    }\n    var nextListLevel = documentHelper.layout.getListLevel(list, levelNumber);\n    if (!isNullOrUndefined(nextListLevel)) {\n      this.onApplyListInternal(list, levelNumber);\n      documentHelper.selection.start.updatePhysicalPosition(true);\n      documentHelper.selection.end.updatePhysicalPosition(true);\n      documentHelper.selection.updateCaretPosition();\n    }\n  };\n  /**\n   * Applies list\n   *\n   * @param {WList} list - Specified the list\n   * @param {number} listLevelNumber - Specified the list level number\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyListInternal = function (list, listLevelNumber) {\n    //let selection: Selection = this.documentHelper.selection;\n    var listFormat = new WListFormat();\n    if (!isNullOrUndefined(list) && listLevelNumber >= 0 && listLevelNumber < 9) {\n      listFormat.listId = list.listId;\n      listFormat.listLevelNumber = listLevelNumber;\n    }\n    this.onApplyParagraphFormat('listFormat', listFormat, false, false);\n  };\n  /**\n   * Apply paragraph format to selection range\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @param {boolean} update - Specifies the update\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateSelectionParagraphFormatting = function (property, value, update) {\n    var selection = this.documentHelper.selection;\n    if (property === 'leftIndent' && update) {\n      if (!isNullOrUndefined(selection.start) && selection.start.isExistBefore(selection.end)) {\n        value = this.getIndentIncrementValue(selection.start.paragraph, value);\n      } else {\n        value = this.getIndentIncrementValue(selection.end.paragraph, value);\n      }\n    }\n    this.updateParagraphFormatInternal(property, value, update);\n  };\n  Editor.prototype.getIndentIncrementValue = function (currentParagraph, incrementFactor) {\n    var currentParagraphIndent = currentParagraph.paragraphFormat.leftIndent;\n    if (currentParagraphIndent < 0) {\n      // In MS Word, if the current paragraph left indent is lesser that or equal to 0\n      // then performing decrement indent will set left indent to 0. \n      if (incrementFactor < 0 || currentParagraphIndent + incrementFactor >= 0) {\n        return -currentParagraphIndent;\n      } else {\n        var incrementValue = -this.getIndentIncrementValueInternal(-currentParagraphIndent, -incrementFactor);\n        return incrementValue % incrementFactor === 0 ? incrementValue : incrementValue + incrementFactor;\n      }\n    } else {\n      return this.getIndentIncrementValueInternal(currentParagraphIndent, incrementFactor);\n    }\n  };\n  Editor.prototype.getIndentIncrementValueInternal = function (position, incrementFactor) {\n    var tabValue = Math.abs(incrementFactor);\n    if (position === 0 || tabValue === 0) {\n      return incrementFactor > 0 ? tabValue : 0;\n    } else {\n      var diff = Math.round(position) * 100 % (Math.round(tabValue) * 100) / 100;\n      var cnt = (Math.round(position) - diff) / Math.round(tabValue);\n      var fPosition = cnt * tabValue;\n      if (incrementFactor > 0) {\n        fPosition += tabValue;\n      }\n      return fPosition - position === 0 ? incrementFactor : fPosition - position;\n    }\n  };\n  Editor.prototype.updateParagraphFormatInternal = function (property, value, update) {\n    if (isNullOrUndefined(property)) {\n      property = 'ParagraphFormat';\n    }\n    switch (property) {\n      case 'afterSpacing':\n        this.updateParagraphFormat('afterSpacing', value, false);\n        break;\n      case 'beforeSpacing':\n        this.updateParagraphFormat('beforeSpacing', value, false);\n        break;\n      case 'spaceAfterAuto':\n        this.updateParagraphFormat('spaceAfterAuto', value, false);\n        break;\n      case 'spaceBeforeAuto':\n        this.updateParagraphFormat('spaceBeforeAuto', value, false);\n        break;\n      case 'rightIndent':\n        this.updateParagraphFormat('rightIndent', value, false);\n        break;\n      case 'leftIndent':\n        this.updateParagraphFormat('leftIndent', value, update);\n        break;\n      case 'firstLineIndent':\n        this.updateParagraphFormat('firstLineIndent', value, false);\n        break;\n      case 'lineSpacing':\n        this.updateParagraphFormat('lineSpacing', value, false);\n        break;\n      case 'lineSpacingType':\n        this.updateParagraphFormat('lineSpacingType', value, false);\n        break;\n      case 'textAlignment':\n        this.updateParagraphFormat('textAlignment', value, false);\n        break;\n      case 'borders':\n      case 'topBorder':\n      case 'bottomBorder':\n      case 'leftBorder':\n      case 'rightBorder':\n      case 'horizontalBorder':\n      case 'verticalBorder':\n        this.updateParagraphFormat(property, value, false);\n        break;\n      case 'listFormat':\n        this.updateParagraphFormat('listFormat', value, false);\n        break;\n      case 'ParagraphFormat':\n        this.updateParagraphFormat(undefined, value, false);\n        break;\n      case 'styleName':\n        this.updateParagraphFormat('styleName', value, false);\n        break;\n      case 'ClearParagraphFormat':\n        // this.initializeHistory('ClearParagraphFormat', selectionRange);\n        this.updateParagraphFormat(undefined, value, false);\n        break;\n      case 'bidi':\n        var isBidiList = this.selection.paragraphFormat.listId !== -1;\n        if (!isBidiList) {\n          this.documentHelper.layout.isBidiReLayout = true;\n        }\n        this.updateParagraphFormat('bidi', value, false);\n        if (!isBidiList) {\n          this.documentHelper.layout.isBidiReLayout = false;\n        }\n        break;\n      case 'contextualSpacing':\n        this.updateParagraphFormat('contextualSpacing', value, false);\n        break;\n      case 'tabStop':\n        this.updateParagraphFormat('tabStop', value, false);\n        break;\n    }\n  };\n  /**\n   * Update paragraph format on undo\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @param {boolean} update - Specifies the update\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateParagraphFormat = function (property, value, update) {\n    var selection = this.documentHelper.selection;\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    // this.updateInsertPosition(selection, startPosition);\n    this.applyParaFormatSelectedContent(startPosition, endPosition, property, value, update);\n    // this.startSelectionReLayouting(startPosition.paragraph, selection, startPosition, endPosition);\n  };\n  Editor.prototype.applyParaFormatSelectedContent = function (start, end, property, value, update) {\n    var selection = this.documentHelper.selection;\n    if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable || start.paragraph.associatedCell !== end.paragraph.associatedCell || selection.isCellSelected(start.paragraph.associatedCell, start, end))) {\n      var cell = void 0;\n      start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n      if (this.checkInsertPosition(selection)) {\n        this.updateHistoryPosition(start, true);\n      }\n      cell = start.paragraph.associatedCell;\n      this.applyParaFormatInCell(cell, start, end, property, value, update);\n      var table = cell.ownerTable;\n      this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    } else {\n      if (!isNullOrUndefined(value) && !this.selection.isEmpty && property === 'styleName' && this.applyCharacterStyle(start.paragraph, start, end, property, value, update)) {\n        return;\n      } else {\n        this.applyParaFormat(start.paragraph, start, end, property, value, update);\n      }\n    }\n  };\n  /**\n   * Apply Paragraph format\n   *\n   * @param {ParagraphWidget} paragraph - Specifies the selection\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @param {boolean} update - Specifies the update\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyParaFormatProperty = function (paragraph, property, value, update) {\n    var format = paragraph.paragraphFormat;\n    if (update && property === 'leftIndent') {\n      value = format.leftIndent + value;\n    }\n    if (property === 'listFormat' && value instanceof WListFormat) {\n      var listFormat = value;\n      if (!listFormat.hasValue('listLevelNumber')) {\n        if (this.isAutoList) {\n          listFormat.listLevelNumber = this.listLevelNumber;\n          // reset the list level number to 0.\n          this.listLevelNumber = 0;\n          this.isAutoList = false;\n        } else {\n          listFormat.listLevelNumber = format.listFormat.listLevelNumber;\n        }\n      }\n    }\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForParagraphFormat(format, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (value instanceof WParagraphFormat) {\n      if (isNullOrUndefined(property)) {\n        if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n          this.copyParagraphFormat(value, format);\n        } else if (this.isRemoteAction) {\n          this.copyParagraphFormat(value, format);\n        } else {\n          format.copyFormat(value);\n        }\n      } else if (property === 'listFormat') {\n        format.listFormat = value.listFormat;\n        format.listFormat.ownerBase = format;\n        // this.handleListFormat(format, value as WParagraphFormat);\n      }\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n        if (this.owner.enableCollaborativeEditing && this.editorHistory.isUndoing) {\n          this.editorHistory.currentBaseHistoryInfo.getParagraohFormatOperation(paragraph, format);\n        }\n      }\n    }\n    if (isNullOrUndefined(value)) {\n      format.clearFormat();\n      this.documentHelper.layout.reLayoutParagraph(format.ownerBase, 0, 0);\n      return;\n    }\n    if (property === 'afterSpacing') {\n      format.afterSpacing = value;\n    } else if (property === 'beforeSpacing') {\n      format.beforeSpacing = value;\n    } else if (property === 'leftIndent') {\n      format.leftIndent = value;\n    } else if (property === 'lineSpacingType') {\n      format.lineSpacingType = value;\n    } else if (property === 'lineSpacing') {\n      format.lineSpacing = value;\n    } else if (property === 'rightIndent') {\n      format.rightIndent = value;\n    } else if (property === 'firstLineIndent') {\n      format.firstLineIndent = value;\n    } else if (property === 'textAlignment') {\n      var textAlignment = value;\n      if (format.bidi && !(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n        if (textAlignment === 'Left') {\n          textAlignment = 'Right';\n        } else if (textAlignment === 'Right') {\n          textAlignment = 'Left';\n        }\n      }\n      format.textAlignment = textAlignment;\n      //this.documentHelper.layout.allowLayout = false;\n    } else if (property === 'outlineLevel') {\n      format.outlineLevel = value;\n    } else if (property === 'topBorder') {\n      this.applyBorder(format.borders.top, value);\n    } else if (property === 'bottomBorder') {\n      this.applyBorder(format.borders.bottom, value);\n    } else if (property === 'leftBorder') {\n      this.applyBorder(format.borders.left, value);\n    } else if (property === 'rightBorder') {\n      this.applyBorder(format.borders.right, value);\n    } else if (property === 'horizontalBorder') {\n      this.applyBorder(format.borders.horizontal, value);\n    } else if (property === 'verticalBorder') {\n      this.applyBorder(format.borders.vertical, value);\n    } else if (property === 'borders') {\n      format.borders.copyFormat(value);\n    } else if (property === 'styleName') {\n      if (typeof value === 'string') {\n        value = this.documentHelper.styles.findByName(value);\n      }\n      format.applyStyle(value);\n    } else if (property === 'listFormat') {\n      if (value instanceof WParagraphFormat) {\n        value = value.listFormat;\n      }\n      format.listFormat.copyFormat(value);\n      this.documentHelper.layout.clearListElementBox(format.ownerBase);\n      if (format.listFormat.listId >= 0) {\n        format.clearIndent();\n      }\n      this.layoutItemBlock(format.ownerBase, false);\n      return;\n    } else if (property === 'bidi') {\n      format.bidi = value;\n    } else if (property === 'keepWithNext') {\n      format.keepWithNext = value;\n    } else if (property === 'keepLinesTogether') {\n      format.keepLinesTogether = value;\n    } else if (property === 'widowControl') {\n      format.widowControl = value;\n    } else if (property === 'contextualSpacing') {\n      format.contextualSpacing = value;\n    } else if (property === 'spaceAfterAuto') {\n      format.spaceAfterAuto = value;\n    } else if (property === 'spaceBeforeAuto') {\n      format.spaceBeforeAuto = value;\n    } else if (property === 'tabStop') {\n      var isReplace = this.editorHistory.isUndoing || this.editorHistory.isRedoing;\n      this.updateTabStopCollection(paragraph, value, isReplace);\n    }\n  };\n  Editor.prototype.copyParagraphFormat = function (sourceFormat, destFormat) {\n    destFormat.uniqueParagraphFormat = sourceFormat.uniqueParagraphFormat;\n    destFormat.listFormat = sourceFormat.listFormat;\n    destFormat.listFormat.ownerBase = destFormat;\n    destFormat.baseStyle = sourceFormat.baseStyle;\n    //destFormat.borders = sourceFormat.borders;\n  };\n  /**\n   * Copies list level paragraph format\n   *\n   * @param {WParagraphFormat} oldFormat - Specifies the old format\n   * @param {WParagraphFormat} newFormat - Specifies the new format\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.copyFromListLevelParagraphFormat = function (oldFormat, newFormat) {\n    if (!isNullOrUndefined(newFormat.leftIndent)) {\n      oldFormat.leftIndent = newFormat.leftIndent;\n    }\n    if (!isNullOrUndefined(newFormat.firstLineIndent)) {\n      oldFormat.firstLineIndent = newFormat.firstLineIndent;\n    }\n  };\n  /**\n   * Applies the continue numbering from the previous list.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.applyContinueNumbering = function () {\n    var selection = this.selection;\n    if (this.editorHistory) {\n      this.editorHistory.initializeHistory('ContinueNumbering');\n    }\n    this.applyContinueNumberingInternal(selection);\n  };\n  /**\n   * @private\n   * @param selection\n   * @param paraFormat\n   */\n  Editor.prototype.applyContinueNumberingInternal = function (selection, paraFormat) {\n    var paragraph = selection.start.paragraph;\n    var numberingInfo = this.getContinueNumberingInfo(paragraph);\n    if (isNullOrUndefined(paraFormat)) {\n      paraFormat = this.getParagraphFormat(paragraph, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n    }\n    paraFormat = !isNullOrUndefined(paraFormat) ? paraFormat : paragraph.paragraphFormat;\n    this.changeListId(numberingInfo.currentList, paragraph, paraFormat, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n    this.reLayout(selection, false);\n    if (this.owner.enableAutoFocus) {\n      this.documentHelper.updateFocus();\n    }\n  };\n  Editor.prototype.getContinueNumberingInfo = function (paragraph) {\n    var currentList = undefined;\n    var listLevelNumber = 0;\n    var listPattern = 'None';\n    if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n      currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n      listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n    }\n    var documentHelper = this.documentHelper;\n    if (listLevelNumber !== 0 && !isNullOrUndefined(currentList) && !isNullOrUndefined(documentHelper.getAbstractListById(currentList.abstractListId)) && !isNullOrUndefined(documentHelper.getAbstractListById(currentList.abstractListId).levels[listLevelNumber])) {\n      var listLevel = this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n      if (!isNullOrUndefined(listLevel)) {\n        listPattern = listLevel.listLevelPattern;\n      }\n    }\n    return {\n      currentList: currentList,\n      listLevelNumber: listLevelNumber,\n      listPattern: listPattern\n    };\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.revertContinueNumbering = function (selection, format) {\n    var paragraph = selection.start.paragraph;\n    var numberingInfo = this.getContinueNumberingInfo(paragraph);\n    this.changeListId(numberingInfo.currentList, paragraph, format, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n    this.reLayout(selection, false);\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      this.editorHistory.updateHistory();\n    }\n  };\n  Editor.prototype.changeListId = function (list, block, format, levelNum, listType) {\n    if (isNullOrUndefined(block)) {\n      return;\n    }\n    if (block instanceof ParagraphWidget) {\n      if (list.listId === block.paragraphFormat.listFormat.listId) {\n        if (this.editorHistory) {\n          var baseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n          if (!isNullOrUndefined(baseHistoryInfo)) {\n            format = baseHistoryInfo.addModifiedPropertiesForContinueNumbering(block.paragraphFormat, format);\n            baseHistoryInfo.insertedFormat = format;\n          }\n        }\n        if (levelNum === block.paragraphFormat.listFormat.listLevelNumber) {\n          block.paragraphFormat.copyFormat(format);\n        } else {\n          block.paragraphFormat.listFormat.listId = format.listFormat.listId;\n        }\n        this.documentHelper.layout.reLayoutParagraph(block, 0, 0);\n      }\n    }\n    return this.changeListId(list, block.nextRenderedWidget, format, levelNum, listType);\n  };\n  Editor.prototype.getParagraphFormat = function (paragraph, levelNumber, listType) {\n    if (!isNullOrUndefined(paragraph.previousRenderedWidget)) {\n      if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n        if (!isNullOrUndefined(paragraph.previousRenderedWidget.paragraphFormat.listFormat) && paragraph.previousRenderedWidget.paragraphFormat.listFormat.listId !== -1) {\n          // let listLevel: WListLevel = this.selection.getListLevel(paragraph.previousRenderedWidget);\n          if (levelNumber === paragraph.previousRenderedWidget.paragraphFormat.listFormat.listLevelNumber) {\n            return paragraph.previousRenderedWidget.paragraphFormat;\n          } else {\n            return this.getParagraphFormat(paragraph.previousRenderedWidget, levelNumber, listType);\n          }\n        } else {\n          return this.getParagraphFormat(paragraph.previousRenderedWidget, levelNumber, listType);\n        }\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.checkNumberArabic = function (listType, levelPattern) {\n    if (listType === 'Number' && levelPattern === 'Arabic' || levelPattern === 'Number' && listType === 'Arabic') {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyRestartNumbering = function (selection) {\n    if (this.editorHistory) {\n      this.editorHistory.initializeHistory('RestartNumbering');\n    }\n    this.restartListAt(selection);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.restartListAt = function (selection) {\n    var currentList = selection.paragraphFormat.getList();\n    var list = currentList.clone();\n    list.listId = this.documentHelper.lists[this.documentHelper.lists.length - 1].listId + 1;\n    var nsid = HelperMethods.generateUniqueId(this.documentHelper.lists);\n    this.documentHelper.lists.push(list);\n    var abstractList = currentList.abstractList.clone();\n    abstractList.abstractListId = this.documentHelper.abstractLists[this.documentHelper.abstractLists.length - 1].abstractListId + 1;\n    list.abstractListId = abstractList.abstractListId;\n    list.nsid = abstractList.nsid = nsid;\n    list.abstractList = abstractList;\n    this.documentHelper.abstractLists.push(abstractList);\n    this.restartListAtInternal(selection, list.listId, list.nsid);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.restartListAtInternal = function (selection, listId, nsid) {\n    var numberingInfo = this.getContinueNumberingInfo(selection.start.paragraph);\n    this.changeRestartNumbering(numberingInfo.currentList, selection.start.paragraph, listId, nsid);\n    this.reLayout(selection, false);\n    this.documentHelper.updateFocus();\n  };\n  Editor.prototype.changeRestartNumbering = function (list, block, listId, nsid) {\n    if (isNullOrUndefined(block)) {\n      return;\n    }\n    if (block instanceof ParagraphWidget) {\n      if (list.listId === block.paragraphFormat.listFormat.listId) {\n        if (this.editorHistory) {\n          var baseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n          if (!isNullOrUndefined(baseHistoryInfo)) {\n            listId = baseHistoryInfo.addModifiedPropertiesForRestartNumbering(block.paragraphFormat.listFormat, listId);\n            baseHistoryInfo.insertedFormat = {\n              listId: listId,\n              nsid: nsid\n            };\n          }\n        }\n        block.paragraphFormat.listFormat.listId = listId;\n        this.documentHelper.layout.reLayoutParagraph(block, 0, 0);\n      }\n    }\n    return this.changeRestartNumbering(list, block.nextRenderedWidget, listId, nsid);\n  };\n  Editor.prototype.applyParaFormat = function (paragraph, start, end, property, value, update) {\n    this.setOffsetValue(this.selection);\n    paragraph = paragraph.combineWidget(this.owner.viewer);\n    //Apply Paragraph Format for spitted paragraph\n    this.applyParaFormatProperty(paragraph, property, value, update);\n    this.layoutItemBlock(paragraph, false);\n    this.getOffsetValue(this.selection);\n    if (paragraph.equals(end.paragraph)) {\n      return;\n    }\n    this.getNextParagraphForFormatting(paragraph, start, end, property, value, update);\n  };\n  Editor.prototype.applyCharacterStyle = function (paragraph, start, end, property, value, update) {\n    var paragraphWidget = paragraph.getSplitWidgets();\n    var selection = end.owner.selectionModule;\n    var lastLine = end.currentWidget;\n    var isParaSelected = start.offset === 0 && (selection.isParagraphLastLine(lastLine) && end.currentWidget === lastLine && end.offset === selection.getLineLength(lastLine) + 1 || end.isAtParagraphEnd);\n    if (!isParaSelected && (end.paragraph === paragraph || paragraphWidget.indexOf(end.paragraph) !== -1)) {\n      if (value.type === 'Paragraph' && value.link instanceof WCharacterStyle || value.type === 'Character') {\n        var obj = value.type === 'Character' ? value : value.link;\n        this.updateSelectionCharacterFormatting(property, obj, update);\n        return true;\n      }\n    }\n    return false;\n  };\n  // Cell\n  Editor.prototype.applyParaFormatInCell = function (cell, start, end, property, value, update) {\n    var selection = this.documentHelper.selection;\n    if (end.paragraph.isInsideTable) {\n      var cellContainer = selection.getContainerCellOf(cell, end.paragraph.associatedCell);\n      if (cellContainer.ownerTable.contains(end.paragraph.associatedCell)) {\n        var startCell = selection.getSelectedCell(cell, cellContainer);\n        var endCell = selection.getSelectedCell(end.paragraph.associatedCell, cellContainer);\n        if (selection.containsCell(cellContainer, end.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (selection.isCellSelected(cellContainer, start, end)) {\n            value = this.getParaFormatValueInCell(cellContainer, property, value);\n            this.applyParaFormatCellInternal(cellContainer, property, value, update);\n          } else {\n            if (startCell === cellContainer) {\n              this.applyParaFormat(start.paragraph, start, end, property, value, update);\n            } else {\n              this.applyParagraphFormatRow(startCell.ownerRow, start, end, property, value, update);\n            }\n          }\n        } else {\n          //Format other selected cells in current table.\n          this.applyParaFormatTableCell(cellContainer.ownerTable, cellContainer, endCell, property, value, update);\n        }\n      } else {\n        this.applyParagraphFormatRow(cellContainer.ownerRow, start, end, property, value, update);\n      }\n    } else {\n      var wCell = selection.getContainerCell(cell);\n      this.applyParagraphFormatRow(wCell.ownerRow, start, end, property, value, update);\n    }\n  };\n  Editor.prototype.applyParaFormatCellInternal = function (cell, property, value, update, isNext) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      var block = cell.childWidgets[i];\n      if (block instanceof ParagraphWidget) {\n        if (property === 'listFormat' && value instanceof WListFormat && isNext && block.paragraphFormat.listFormat.hasValue(\"listLevelNumber\") && value[\"listLevelNumber\"] < block.paragraphFormat.listFormat.listLevelNumber) {\n          value[\"listLevelNumber\"] = block.paragraphFormat.listFormat.listLevelNumber;\n        }\n        this.applyParaFormatProperty(block, property, value, update);\n      } else {\n        this.applyParagraphFormatTableInternal(block, property, value, update, isNext);\n      }\n    }\n  };\n  Editor.prototype.getParaFormatValueInCell = function (cell, property, value) {\n    if (typeof value === 'boolean') {\n      var firstPara = this.documentHelper.selection.getFirstParagraph(cell);\n      value = !firstPara.paragraphFormat.getPropertyValue(property);\n    }\n    return value;\n  };\n  // Row\n  Editor.prototype.applyParagraphFormatRow = function (wRow, start, end, property, value, update) {\n    value = this.getParaFormatValueInCell(wRow.childWidgets[0], property, value);\n    for (var i = wRow.rowIndex; i < wRow.ownerTable.childWidgets.length; i++) {\n      var row = wRow.ownerTable.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.applyParaFormatCellInternal(row.childWidgets[j], property, value, update);\n      }\n      if (end.paragraph.isInsideTable && this.documentHelper.selection.containsRow(row, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    this.getNextParagraphForFormatting(wRow.ownerTable, start, end, property, value, update);\n  };\n  // Table\n  Editor.prototype.applyParaFormatTableCell = function (table, startCell, endCell, property, value, update) {\n    var selection = this.documentHelper.selection;\n    var startValue = selection.getCellLeft(startCell.ownerRow, startCell);\n    var endValue = startValue + startCell.cellFormat.cellWidth;\n    var endCellLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(startValue, endValue, endCellLeft, endCellRight);\n    startValue = cellInfo.start;\n    endValue = cellInfo.end;\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    var isStarted = false;\n    for (var m = table.childWidgets.indexOf(startCell.ownerRow); m <= count; m++) {\n      var row = table.childWidgets[m];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var left = selection.getCellLeft(row, row.childWidgets[j]);\n        if (Math.round(startValue) <= Math.round(left) && Math.round(left) < Math.round(endValue)) {\n          if (!isStarted) {\n            value = this.getParaFormatValueInCell(row.childWidgets[j], property, value);\n            isStarted = true;\n          }\n          this.applyParaFormatCellInternal(row.childWidgets[j], property, value, update);\n        }\n      }\n    }\n  };\n  Editor.prototype.applyParaFormatTable = function (table, start, end, property, value, update, isNext) {\n    table = table.combineWidget(this.owner.viewer);\n    var selection = this.documentHelper.selection;\n    for (var m = 0; m < table.childWidgets.length; m++) {\n      var tableRow = table.childWidgets[m];\n      for (var k = 0; k < tableRow.childWidgets.length; k++) {\n        this.applyParaFormatCellInternal(tableRow.childWidgets[k], property, value, update, isNext);\n      }\n      if (end.paragraph.isInsideTable && selection.containsRow(tableRow, end.paragraph.associatedCell)) {\n        this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        return;\n      }\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    this.getNextParagraphForFormatting(table, start, end, property, value, update);\n  };\n  Editor.prototype.getNextParagraphForFormatting = function (block, start, end, property, value, update) {\n    var widgetCollection = block.getSplitWidgets();\n    block = widgetCollection[widgetCollection.length - 1];\n    block = this.documentHelper.selection.getNextRenderedBlock(block);\n    if (!isNullOrUndefined(block)) {\n      //Goto the next block.\n      if (block instanceof ParagraphWidget) {\n        if (property === 'listFormat' && value instanceof WListFormat && block.paragraphFormat.listFormat.hasValue(\"listLevelNumber\") && value[\"listLevelNumber\"] < block.paragraphFormat.listFormat.listLevelNumber) {\n          value[\"listLevelNumber\"] = block.paragraphFormat.listFormat.listLevelNumber;\n        }\n        this.applyParaFormat(block, start, end, property, value, update);\n      } else {\n        this.applyParaFormatTable(block, start, end, property, value, update, true);\n      }\n    }\n  };\n  Editor.prototype.applyParagraphFormatTableInternal = function (table, property, value, update, isNext) {\n    for (var x = 0; x < table.childWidgets.length; x++) {\n      var row = table.childWidgets[x];\n      for (var y = 0; y < row.childWidgets.length; y++) {\n        this.applyParaFormatCellInternal(row.childWidgets[y], property, value, update, isNext);\n      }\n    }\n  };\n  /**\n   * Apply column format changes\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyColumnFormat = function (property, value) {\n    if (this.restrictFormatting) {\n      return;\n    }\n    this.initHistory('SectionFormat');\n    var selection = this.documentHelper.selection;\n    selection.owner.isShiftingEnabled = true;\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    var startPageIndex;\n    var endPageIndex;\n    this.documentHelper.clearContent();\n    var startSectionIndex = startPosition.paragraph.bodyWidget.sectionIndex;\n    var endSectionIndex = endPosition.paragraph.bodyWidget.sectionIndex;\n    var isMultipleSection = false;\n    for (var i = 0; i < this.documentHelper.pages.length; i++) {\n      if (this.documentHelper.pages[i].bodyWidgets[0].index === startSectionIndex) {\n        startPageIndex = i;\n      } else {\n        isMultipleSection = true;\n      }\n    }\n    for (var i = startPageIndex; i < this.documentHelper.pages.length; i++) {\n      var bodyWidget = this.documentHelper.pages[i].bodyWidgets[0];\n      endPageIndex = i;\n      if (bodyWidget.index === startSectionIndex) {\n        continue;\n      } else if (bodyWidget.index >= startSectionIndex && bodyWidget.index <= endSectionIndex) {\n        continue;\n      } else {\n        endPageIndex = i - 1;\n        break;\n      }\n    }\n    if (isMultipleSection && property == \"differentOddAndEvenPages\" && startPosition.paragraph.isInHeaderFooter) {\n      startPageIndex = 0;\n      endPageIndex = this.documentHelper.pages.length - 1;\n    }\n    // let startPageIndex: number = this.documentHelper.pages.indexOf((selection.start.paragraph.containerWidget as BodyWidget).page);\n    // let endPageIndex: number = this.documentHelper.pages.indexOf((selection.end.paragraph.containerWidget as BodyWidget).page);\n    var update = true;\n    var index = 0;\n    for (var i = startPageIndex; i <= endPageIndex; i++) {\n      if (index !== this.documentHelper.pages[i].bodyWidgets[0].index && !update) {\n        update = true;\n      }\n      this.applyPropertyValueForSection(this.documentHelper.pages[i].bodyWidgets[0].sectionFormat, property, value, update);\n      index = this.documentHelper.pages[i].bodyWidgets[0].index;\n      update = false;\n    }\n    this.layoutWholeDocument();\n    this.fireContentChange();\n  };\n  //Paragraph Format apply implementation Ends\n  // Apply Selection Section Format Option Implementation Starts\n  /**\n   * Apply section format selection changes\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplySectionFormat = function (property, value) {\n    if (this.restrictFormatting) {\n      return;\n    }\n    if (!isNullOrUndefined(property)) {\n      var action = property[0].toUpperCase() + property.slice(1);\n      this.initHistory(action);\n    } else {\n      this.initHistory('SectionFormat');\n    }\n    this.updateSectionFormat(property, value);\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeInlineHeaderFooterWidget = function (sectionIndex, headerFooterType, propertyName, value) {\n    if (sectionIndex != 0) {\n      var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n      var index = this.viewer.getHeaderFooter(headerFooterType);\n      var sectionFormat = this.selection.start.paragraph.containerWidget.sectionFormat.cloneFormat();\n      if (!isNullOrUndefined(value)) {\n        if (!isNullOrUndefined(propertyName)) {\n          var action = propertyName[0].toUpperCase() + propertyName.slice(1);\n          this.initHistory(action);\n          if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n          }\n          var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n          this.selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n          if (this.checkInsertPosition(this.selection)) {\n            this.setPositionForHistory(this.selection.editPosition);\n          }\n        }\n        if (value) {\n          if (headerFooters && !isNullOrUndefined(headerFooters[index])) {\n            sectionFormat.removedHeaderFooters.push(headerFooters[index]);\n            this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, propertyName, value);\n            delete headerFooters[index];\n          }\n        } else {\n          var parentHeaderFooter = this.viewer.getCurrentHeaderFooter(headerFooterType, sectionIndex);\n          if (!isNullOrUndefined(parentHeaderFooter) && isNullOrUndefined(headerFooters[index])) {\n            var HeaderFooterWidget_1 = parentHeaderFooter.clone();\n            headerFooters[index] = HeaderFooterWidget_1;\n            sectionFormat.removedHeaderFooters.push(HeaderFooterWidget_1);\n            this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, propertyName, value);\n          }\n        }\n        this.selection.updateTextPositionForBlockContainer(this.selection.start.paragraph.containerWidget);\n        this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.layoutWholeDocument();\n        this.isSkipOperationsBuild = false;\n        this.fireContentChange();\n      }\n    }\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateHeaderFooters = function (propertyName, value, sectionIndex, widget) {\n    var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n    var index = this.viewer.getHeaderFooter(widget.headerFooterType);\n    var headerFooter = headerFooters[index];\n    if (this.editorHistory.isUndoing || this.editorHistory.isRedoing) {\n      if (isNullOrUndefined(headerFooter)) {\n        this.documentHelper.headersFooters[sectionIndex][index] = widget;\n      } else if (!isNullOrUndefined(headerFooter)) {\n        delete headerFooters[index];\n      }\n    }\n    this.selection.updateTextPositionForBlockContainer(this.selection.start.paragraph.containerWidget);\n    this.layoutWholeDocument();\n  };\n  /**\n   * Update section format\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateSectionFormat = function (property, value) {\n    if (this.documentHelper.selection.startPage === 1 && property === \"differentFirstPage\") {\n      var paraInfo = void 0;\n      if (this.documentHelper.selection.start.paragraph.containerWidget instanceof TableCellWidget) {\n        paraInfo = this.getFirstChildOfTable(this.documentHelper.selection.start.paragraph.containerWidget);\n      } else {\n        paraInfo = this.documentHelper.selection.start.paragraph.containerWidget.childWidgets[0];\n      }\n      var startIndex = this.selection.getHierarchicalIndex(paraInfo, \"0\");\n      this.documentHelper.selection.select(startIndex, startIndex);\n    }\n    var selection = this.documentHelper.selection;\n    selection.owner.isShiftingEnabled = true;\n    var startPosition = selection.start;\n    var endPosition = selection.end;\n    if (!selection.isForward) {\n      startPosition = selection.end;\n      endPosition = selection.start;\n    }\n    var startPageIndex;\n    var endPageIndex;\n    this.documentHelper.clearContent();\n    var startSectionIndex = startPosition.paragraph.bodyWidget.sectionIndex;\n    var endSectionIndex = endPosition.paragraph.bodyWidget.sectionIndex;\n    var isMultipleSection = false;\n    var isSkip = false;\n    for (var i = 0; i < this.documentHelper.pages.length; i++) {\n      for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n        if (this.documentHelper.pages[i].bodyWidgets[j].index === startSectionIndex) {\n          startPageIndex = i;\n          if (selection.isForward) {\n            isSkip = true;\n            break;\n          }\n        } else {\n          isMultipleSection = true;\n        }\n      }\n      if (isSkip) {\n        break;\n      }\n    }\n    for (var i = startPageIndex; i < this.documentHelper.pages.length; i++) {\n      for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n        var bodyWidget = this.documentHelper.pages[i].bodyWidgets[j];\n        if (bodyWidget.index === startSectionIndex) {\n          endPageIndex = i;\n          continue;\n        } else if (bodyWidget.index >= startSectionIndex && bodyWidget.index <= endSectionIndex) {\n          endPageIndex = i;\n          continue;\n        }\n      }\n    }\n    if (isMultipleSection && property == \"differentOddAndEvenPages\" && startPosition.paragraph.isInHeaderFooter) {\n      startPageIndex = 0;\n      endPageIndex = this.documentHelper.pages.length - 1;\n    }\n    // let startPageIndex: number = this.documentHelper.pages.indexOf((selection.start.paragraph.containerWidget as BodyWidget).page);\n    // let endPageIndex: number = this.documentHelper.pages.indexOf((selection.end.paragraph.containerWidget as BodyWidget).page);\n    var update = true;\n    var index = 0;\n    for (var i = startPageIndex; i <= endPageIndex; i++) {\n      for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n        if (this.documentHelper.pages[i].bodyWidgets[j].index >= startSectionIndex && this.documentHelper.pages[i].bodyWidgets[j].index <= endSectionIndex || !selection.isForward && this.documentHelper.pages[i].bodyWidgets[j].index <= startSectionIndex && this.documentHelper.pages[i].bodyWidgets[j].index >= endSectionIndex) {\n          if (index !== this.documentHelper.pages[i].bodyWidgets[j].index && !update) {\n            update = true;\n          }\n          this.applyPropertyValueForSection(this.documentHelper.pages[i].bodyWidgets[j].sectionFormat, property, value, update);\n          index = this.documentHelper.pages[i].bodyWidgets[j].index;\n          update = false;\n          var body = this.documentHelper.pages[i].bodyWidgets[j];\n          if (!isNullOrUndefined(body.nextWidget) && (body.sectionFormat.pageHeight !== body.nextWidget.sectionFormat.pageHeight || body.sectionFormat.pageWidth !== body.nextWidget.sectionFormat.pageWidth) && body.nextWidget.sectionFormat.breakCode === 'NoBreak') {\n            body.nextWidget.sectionFormat.breakCode = 'NewPage';\n            body = this.documentHelper.layout.getBodyWidget(body.nextWidget, false);\n            if (!isNullOrUndefined(body.nextWidget)) {\n              body.nextWidget.sectionFormat.breakCode = 'NewPage';\n            }\n          }\n        }\n      }\n    }\n    this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n    this.layoutWholeDocument();\n    this.isSkipOperationsBuild = false;\n    this.fireContentChange();\n  };\n  Editor.prototype.getFirstChildOfTable = function (cellWidget) {\n    var ownerTable = cellWidget.ownerTable;\n    return ownerTable.childWidgets[0].childWidgets[0].childWidgets[0];\n  };\n  //Apply Selection Table Format option implementation starts\n  /**\n   * Apply table format property changes\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyTableFormat = function (property, value, table) {\n    if (this.restrictFormatting) {\n      return;\n    }\n    var action = this.getTableFormatAction(property);\n    this.viewer.owner.isShiftingEnabled = true;\n    var selection = this.documentHelper.selection;\n    if (isNullOrUndefined(table)) {\n      table = selection.start.paragraph.associatedCell.ownerTable;\n    }\n    table = table.combineWidget(this.owner.viewer);\n    if (selection.isEmpty) {\n      this.initHistory(action);\n      this.applyTablePropertyValue(property, value, table);\n    } else {\n      this.updateSelectionTableFormat(this.selection, action, value);\n    }\n    table.calculateGrid();\n    this.selection.owner.isLayoutEnabled = true;\n    this.documentHelper.layout.reLayoutTable(table);\n    this.reLayout(selection, false);\n  };\n  Editor.prototype.getTableFormatAction = function (property) {\n    switch (property) {\n      case 'tableAlignment':\n        return 'TableAlignment';\n      case 'leftIndent':\n        return 'TableLeftIndent';\n      case 'leftMargin':\n        return 'DefaultCellLeftMargin';\n      case 'rightMargin':\n        return 'DefaultCellRightMargin';\n      case 'bottomMargin':\n        return 'DefaultCellBottomMargin';\n      case 'topMargin':\n        return 'DefaultCellTopMargin';\n      case 'preferredWidth':\n        return 'TablePreferredWidth';\n      case 'preferredWidthType':\n        return 'TablePreferredWidthType';\n      case 'shading':\n        return 'Shading';\n      case 'bidi':\n        return 'TableBidi';\n      case 'title':\n        return 'TableTitle';\n      case 'description':\n        return 'TableDescription';\n      default:\n        return 'DefaultCellSpacing';\n    }\n  };\n  // Apply Selection Row Format Option Implementation Starts\n  /**\n   * Apply table row format property changes\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyTableRowFormat = function (property, value) {\n    if (this.restrictFormatting) {\n      return;\n    }\n    var action = this.getRowAction(property);\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var selection = this.documentHelper.selection;\n    if (selection.isEmpty) {\n      this.initHistory(action);\n      var table = selection.start.paragraph.associatedCell.ownerRow.ownerTable;\n      this.applyRowPropertyValue(selection, property, value, selection.start.paragraph.associatedCell.ownerRow);\n    } else {\n      this.updateSelectionTableFormat(this.selection, action, value);\n    }\n    this.reLayout(selection, false);\n  };\n  Editor.prototype.getRowAction = function (property) {\n    switch (property) {\n      case 'height':\n        return 'RowHeight';\n      case 'heightType':\n        return 'RowHeightType';\n      case 'isHeader':\n        return 'RowHeader';\n      default:\n        return 'AllowBreakAcrossPages';\n    }\n  };\n  /**\n   * Apply table cell property changes\n   *\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyTableCellFormat = function (property, value) {\n    if (this.restrictFormatting) {\n      return;\n    }\n    var action = this.getTableCellAction(property);\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var selection = this.documentHelper.selection;\n    var table = selection.start.paragraph.associatedCell.ownerTable;\n    table = table.combineWidget(this.owner.viewer);\n    if (selection.isEmpty) {\n      this.initHistory(action);\n      this.applyCellPropertyValue(selection, property, value, selection.start.paragraph.associatedCell.cellFormat);\n      table.calculateGrid();\n      this.selection.owner.isLayoutEnabled = true;\n      this.documentHelper.layout.reLayoutTable(table);\n    } else {\n      this.updateSelectionTableFormat(this.selection, action, value);\n    }\n    this.reLayout(selection, false);\n  };\n  Editor.prototype.getTableCellAction = function (property) {\n    switch (property) {\n      case 'verticalAlignment':\n        return 'CellContentVerticalAlignment';\n      case 'leftMargin':\n        return 'CellLeftMargin';\n      case 'rightMargin':\n        return 'CellRightMargin';\n      case 'bottomMargin':\n        return 'CellBottomMargin';\n      case 'topMargin':\n        return 'CellTopMargin';\n      case 'preferredWidth':\n        return 'CellPreferredWidth';\n      case 'shading':\n        return 'Shading';\n      default:\n        return 'CellPreferredWidthType';\n    }\n  };\n  Editor.prototype.applyPropertyValueForSection = function (sectionFormat, property, value, update) {\n    //let selection: Selection = this.documentHelper.selection;\n    if (update && this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      if (property === 'columns') {\n        sectionFormat.numberOfColumns = value.length;\n      }\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (isNullOrUndefined(value)) {\n      return;\n    }\n    if (value instanceof WSectionFormat) {\n      if (isNullOrUndefined(property)) {\n        sectionFormat.copyFormat(value, this.editorHistory);\n      }\n      return;\n    }\n    if (property === 'pageHeight') {\n      sectionFormat.pageHeight = value;\n    } else if (property === 'pageWidth') {\n      sectionFormat.pageWidth = value;\n    } else if (property === 'leftMargin') {\n      sectionFormat.leftMargin = value;\n    } else if (property === 'rightMargin') {\n      sectionFormat.rightMargin = value;\n    } else if (property === 'topMargin') {\n      sectionFormat.topMargin = value;\n    } else if (property === 'bottomMargin') {\n      sectionFormat.bottomMargin = value;\n    } else if (property === 'differentFirstPage') {\n      sectionFormat.differentFirstPage = value;\n    } else if (property === 'differentOddAndEvenPages') {\n      sectionFormat.differentOddAndEvenPages = value;\n    } else if (property === 'headerDistance') {\n      sectionFormat.headerDistance = value;\n    } else if (property === 'footerDistance') {\n      sectionFormat.footerDistance = value;\n    } else if (property === 'pageStartingNumber') {\n      sectionFormat.pageStartingNumber = value;\n    } else if (property === 'restartPageNumbering') {\n      sectionFormat.restartPageNumbering = value;\n    } else if (property === 'endnoteNumberFormat') {\n      sectionFormat.endnoteNumberFormat = value;\n    } else if (property === 'footNoteNumberFormat') {\n      sectionFormat.footNoteNumberFormat = value;\n    } else if (property === 'restartIndexForEndnotes') {\n      sectionFormat.restartIndexForEndnotes = value;\n    } else if (property === 'restartIndexForFootnotes') {\n      sectionFormat.restartIndexForFootnotes = value;\n    } else if (property === 'initialFootNoteNumber') {\n      sectionFormat.initialFootNoteNumber = value;\n    } else if (property === 'initialEndNoteNumber') {\n      sectionFormat.initialEndNoteNumber = value;\n    } else if (property == 'numberOfColumns') {\n      sectionFormat.numberOfColumns = value;\n    } else if (property == 'equalWidth') {\n      sectionFormat.equalWidth = value;\n    } else if (property == 'lineBetweenColumns') {\n      sectionFormat.lineBetweenColumns = value;\n    } else if (property == 'columns') {\n      sectionFormat.columns = value;\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.layoutWholeDocument = function (isLayoutChanged) {\n    this.documentHelper.layout.isInitialLoad = true;\n    this.documentHelper.layout.isLayoutWhole = true;\n    var startPosition = this.documentHelper.selection.start;\n    var endPosition = this.documentHelper.selection.end;\n    if (startPosition.isExistAfter(endPosition)) {\n      startPosition = this.documentHelper.selection.end;\n      endPosition = this.documentHelper.selection.start;\n    }\n    if (this.owner.layoutType == 'Continuous' && (this.documentHelper.selection.isinEndnote || this.documentHelper.selection.isinFootnote)) {\n      this.documentHelper.selection.footnoteReferenceElement(startPosition, endPosition);\n      startPosition = endPosition;\n    }\n    var startInfo = this.selection.getParagraphInfo(startPosition);\n    var endInfo = this.selection.getParagraphInfo(endPosition);\n    var startIndex = this.selection.getHierarchicalIndex(startInfo.paragraph, startInfo.offset.toString());\n    var endIndex = this.selection.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n    this.documentHelper.renderedLists.clear();\n    this.documentHelper.renderedLevelOverrides = [];\n    // this.viewer.owner.isLayoutEnabled = true;\n    var sections = this.combineSection();\n    this.documentHelper.clearContent();\n    // this.documentHelper.layout.isRelayout = false;\n    this.documentHelper.layout.layoutItems(sections, true);\n    // this.documentHelper.layout.isRelayout = true;\n    this.documentHelper.owner.isShiftingEnabled = false;\n    this.setPositionForCurrentIndex(startPosition, startIndex);\n    this.setPositionForCurrentIndex(endPosition, endIndex);\n    this.documentHelper.selection.selectPosition(startPosition, endPosition);\n    this.reLayout(this.documentHelper.selection, undefined, isLayoutChanged);\n    this.documentHelper.layout.isLayoutWhole = false;\n    this.documentHelper.layout.isInitialLoad = false;\n  };\n  Editor.prototype.combineSection = function () {\n    var sections = [];\n    var nextSection = this.documentHelper.pages[0].bodyWidgets[0];\n    do {\n      nextSection = this.combineSectionChild(nextSection, sections, false);\n    } while (nextSection);\n    for (var j = 0; j < this.documentHelper.pages.length; j++) {\n      this.documentHelper.pages[j].destroy();\n      j--;\n    }\n    return sections;\n  };\n  Editor.prototype.combineFollowingSection = function () {\n    var sections = [];\n    var nextSection = this.documentHelper.selection.start.paragraph.bodyWidget.getSplitWidgets()[0];\n    if (nextSection.childWidgets[0] instanceof ParagraphWidget) {\n      this.updateWholeListItems(nextSection.childWidgets[0]);\n    } else {\n      var block = this.documentHelper.getFirstParagraphInFirstCell(nextSection.childWidgets[0]);\n      this.viewer.owner.editorModule.updateWholeListItems(block);\n    }\n    var pageIndex = this.documentHelper.pages.indexOf(nextSection.page);\n    var startIndex = nextSection.indexInOwner === 0 ? pageIndex : pageIndex + 1;\n    do {\n      nextSection = this.combineSectionChild(nextSection, sections, false);\n    } while (nextSection);\n    for (var i = startIndex; i < this.documentHelper.pages.length; i++) {\n      this.documentHelper.pages[i].destroy();\n      i--;\n    }\n    for (var j = pageIndex; j < this.documentHelper.pages.length; j++) {\n      for (var k = 0; k < this.documentHelper.pages[j].bodyWidgets.length; k++) {\n        if (this.documentHelper.pages[j].bodyWidgets[k].childWidgets.length === 0) {\n          this.documentHelper.pages[j].bodyWidgets.splice(k, 1);\n          k--;\n        }\n      }\n    }\n    return sections;\n  };\n  Editor.prototype.combineSectionChild = function (bodyWidget, sections, destoryPage) {\n    var previousBodyWidget = bodyWidget;\n    var temp = new BodyWidget();\n    var emptyBody = false;\n    temp.sectionFormat = bodyWidget.sectionFormat;\n    temp.index = previousBodyWidget.index;\n    do {\n      emptyBody = false;\n      previousBodyWidget = bodyWidget;\n      if (bodyWidget.lastChild) {\n        bodyWidget.lastChild.combineWidget(this.owner.viewer);\n      }\n      bodyWidget = bodyWidget.nextRenderedWidget;\n      for (var j = 0; j < previousBodyWidget.childWidgets.length; j++) {\n        var block = previousBodyWidget.childWidgets[j];\n        if (block instanceof TableWidget) {\n          this.documentHelper.layout.clearTableWidget(block, true, true, true);\n        } else {\n          block.x = 0;\n          block.y = 0;\n          block.width = 0;\n          block.height = 0;\n        }\n        temp.childWidgets.push(block);\n        previousBodyWidget.childWidgets.splice(j, 1);\n        j--;\n        block.containerWidget = temp;\n      }\n      for (var i = 0; i < previousBodyWidget.page.bodyWidgets.length; i++) {\n        if (previousBodyWidget.page.bodyWidgets[i].childWidgets.length === 0) {\n          emptyBody = true;\n        } else {\n          emptyBody = false;\n          break;\n        }\n      }\n      if (emptyBody && destoryPage) {\n        previousBodyWidget.page.destroy();\n      }\n      // this.documentHelper.pages.splice(previousBodyWidget.page.index, 1);\n    } while (bodyWidget && previousBodyWidget.index === bodyWidget.index);\n    sections.push(temp);\n    return bodyWidget;\n  };\n  Editor.prototype.updateSelectionTableFormat = function (selection, action, value) {\n    switch (action) {\n      case 'TableAlignment':\n        this.editorHistory.initializeHistory('TableAlignment');\n        this.updateTableFormat(selection, 'tableAlignment', value);\n        break;\n      case 'TableLeftIndent':\n        this.editorHistory.initializeHistory('TableLeftIndent');\n        this.updateTableFormat(selection, 'leftIndent', value);\n        break;\n      case 'DefaultCellSpacing':\n        this.editorHistory.initializeHistory('DefaultCellSpacing');\n        this.updateTableFormat(selection, 'cellSpacing', value);\n        break;\n      case 'DefaultCellLeftMargin':\n        this.editorHistory.initializeHistory('DefaultCellLeftMargin');\n        this.updateTableFormat(selection, 'leftMargin', value);\n        break;\n      case 'DefaultCellRightMargin':\n        this.editorHistory.initializeHistory('DefaultCellRightMargin');\n        this.updateTableFormat(selection, 'rightMargin', value);\n        break;\n      case 'DefaultCellTopMargin':\n        this.editorHistory.initializeHistory('DefaultCellTopMargin');\n        this.updateTableFormat(selection, 'topMargin', value);\n        break;\n      case 'TablePreferredWidth':\n        this.editorHistory.initializeHistory('TablePreferredWidth');\n        this.updateTableFormat(selection, 'preferredWidth', value);\n        break;\n      case 'TablePreferredWidthType':\n        this.editorHistory.initializeHistory('TablePreferredWidthType');\n        this.updateTableFormat(selection, 'preferredWidthType', value);\n        break;\n      case 'DefaultCellBottomMargin':\n        this.editorHistory.initializeHistory('DefaultCellBottomMargin');\n        this.updateTableFormat(selection, 'bottomMargin', value);\n        break;\n      case 'CellContentVerticalAlignment':\n        this.editorHistory.initializeHistory('CellContentVerticalAlignment');\n        this.updateCellFormat(selection, 'verticalAlignment', value);\n        break;\n      case 'CellLeftMargin':\n        this.editorHistory.initializeHistory('CellLeftMargin');\n        this.updateCellFormat(selection, 'leftMargin', value);\n        break;\n      case 'CellRightMargin':\n        this.editorHistory.initializeHistory('CellRightMargin');\n        this.updateCellFormat(selection, 'rightMargin', value);\n        break;\n      case 'CellTopMargin':\n        this.editorHistory.initializeHistory('CellTopMargin');\n        this.updateCellFormat(selection, 'topMargin', value);\n        break;\n      case 'CellBottomMargin':\n        this.editorHistory.initializeHistory('CellBottomMargin');\n        this.updateCellFormat(selection, 'bottomMargin', value);\n        break;\n      case 'CellPreferredWidth':\n        this.editorHistory.initializeHistory('CellPreferredWidth');\n        this.updateCellFormat(selection, 'preferredWidth', value);\n        break;\n      case 'CellPreferredWidthType':\n        this.editorHistory.initializeHistory('CellPreferredWidthType');\n        this.updateCellFormat(selection, 'preferredWidthType', value);\n        break;\n      case 'Shading':\n        this.editorHistory.initializeHistory('Shading');\n        this.updateCellFormat(selection, 'shading', value);\n        break;\n      case 'RowHeight':\n        this.editorHistory.initializeHistory('RowHeight');\n        this.updateRowFormat(selection, 'height', value);\n        break;\n      case 'RowHeightType':\n        this.editorHistory.initializeHistory('RowHeightType');\n        this.updateRowFormat(selection, 'heightType', value);\n        break;\n      case 'RowHeader':\n        this.editorHistory.initializeHistory('RowHeader');\n        this.updateRowFormat(selection, 'isHeader', value);\n        break;\n      case 'AllowBreakAcrossPages':\n        this.editorHistory.initializeHistory('AllowBreakAcrossPages');\n        this.updateRowFormat(selection, 'allowBreakAcrossPages', value);\n        break;\n      case 'TableBidi':\n        this.editorHistory.initializeHistory(action);\n        this.updateTableFormat(selection, 'bidi', value);\n        break;\n      case 'TableTitle':\n        this.editorHistory.initializeHistory(action);\n        this.updateTableFormat(selection, 'title', value);\n        break;\n      case 'TableDescription':\n        this.editorHistory.initializeHistory(action);\n        this.updateTableFormat(selection, 'description', value);\n        break;\n    }\n  };\n  // Update Table Properties\n  /**\n   * Update Table Format on undo\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateTableFormat = function (selection, property, value) {\n    var tableStartPosition = selection.start;\n    var tableEndPosition = selection.end;\n    if (!selection.isForward) {\n      tableStartPosition = selection.end;\n      tableEndPosition = selection.start;\n    }\n    this.initHistoryPosition(selection, tableStartPosition);\n    this.applyTablePropertyValue(property, value, tableStartPosition.paragraph.associatedCell.ownerTable);\n    if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n      this.documentHelper.layout.reLayoutTable(tableStartPosition.paragraph.associatedCell.ownerTable);\n    }\n  };\n  /**\n   * update cell format on undo\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateCellFormat = function (selection, property, value) {\n    selection.owner.isShiftingEnabled = true;\n    var newStartPosition = selection.start;\n    var newEndPosition = selection.end;\n    if (!selection.isForward) {\n      newStartPosition = selection.end;\n      newEndPosition = selection.start;\n    }\n    this.initHistoryPosition(selection, newStartPosition);\n    this.updateFormatForCell(selection, property, value);\n  };\n  /**\n   * Update row format on undo\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {string} property - Specifies the property\n   * @param {Object} value - Specifies the value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateRowFormat = function (selection, property, value) {\n    var rowStartPosition = selection.start;\n    var rowEndPosition = selection.end;\n    if (!selection.isForward) {\n      rowStartPosition = selection.end;\n      rowEndPosition = selection.start;\n    }\n    this.initHistoryPosition(selection, rowStartPosition);\n    this.applyRowFormat(rowStartPosition.paragraph.associatedCell.ownerRow, rowStartPosition, rowEndPosition, property, value);\n  };\n  Editor.prototype.initHistoryPosition = function (selection, position) {\n    if (this.documentHelper.owner.editorHistoryModule && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      if (!isNullOrUndefined(position)) {\n        if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n          this.editorHistory.currentBaseHistoryInfo.insertPosition = position.getHierarchicalIndexInternal();\n        }\n      } else if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = selection.start.getHierarchicalIndexInternal();\n      }\n    }\n  };\n  Editor.prototype.startSelectionReLayouting = function (paragraph, selection, start, end) {\n    selection.owner.isLayoutEnabled = true;\n    if (start.paragraph.isInsideTable) {\n      var table = start.paragraph.associatedCell.ownerTable;\n      while (table.isInsideTable) {\n        table = table.associatedCell.ownerTable;\n      }\n      this.reLayoutSelectionOfTable(table, selection, start, end);\n    } else {\n      this.reLayoutSelection(paragraph, selection, start, end);\n    }\n  };\n  Editor.prototype.reLayoutSelectionOfTable = function (table, selection, start, end) {\n    var isEnded = false;\n    this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n    // If the selection ends in the current table, need to stop relayouting.\n    if (!isNullOrUndefined(end.paragraph.associatedCell) && table.contains(end.paragraph.associatedCell)) {\n      return true;\n    }\n    var block = selection.getNextRenderedBlock(table);\n    // Relayout the next block.\n    if (!isNullOrUndefined(block)) {\n      isEnded = this.reLayoutSelectionOfBlock(block, selection, start, end);\n    }\n    return isEnded;\n  };\n  Editor.prototype.reLayoutSelection = function (paragraph, selection, start, end) {\n    if (start.paragraph === paragraph) {\n      var startOffset = start.offset;\n      var length_3 = selection.getParagraphLength(paragraph);\n      var indexInInline = 0;\n      var index = 0;\n      var inlineObj = paragraph.getInline(start.offset, indexInInline);\n      var inline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      if (!isNullOrUndefined(inline)) {\n        if (indexInInline === inline.length && !isNullOrUndefined(inline.nextNode)) {\n          inline = inline.nextNode;\n        }\n        index = inline.line.children.indexOf(inline);\n      }\n      var lineIndex = 0;\n      if (start.currentWidget.paragraph === paragraph) {\n        lineIndex = paragraph.childWidgets.indexOf(start.currentWidget);\n        index = start.currentWidget.children.indexOf(inline);\n      }\n      // If selection start inline is at new inline, need to relayout from the previous inline.\n      if (inline instanceof TextElementBox && !inline.line && index > 0) {\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, index - 1);\n      } else {\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, index);\n      }\n    } else {\n      this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n    }\n    // If the selection ends at the current paragraph, need to stop relayouting.\n    if (end.paragraph === paragraph) {\n      return true;\n    }\n    // _Relayout the next block.\n    var block = selection.getNextRenderedBlock(paragraph);\n    if (!isNullOrUndefined(block)) {\n      return this.reLayoutSelectionOfBlock(block, selection, start, end);\n    }\n    return false;\n  };\n  //Relayouting Start    \n  Editor.prototype.reLayoutSelectionOfBlock = function (block, selection, start, end) {\n    if (block instanceof ParagraphWidget) {\n      return this.reLayoutSelection(block, selection, start, end);\n    } else {\n      return undefined;\n      // return this.reLayoutSelectionOfTable(block as TableWidget, selection, start, end);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.layoutItemBlock = function (block, shiftNextWidget) {\n    var section = undefined;\n    if (block.containerWidget instanceof BlockContainer || block.containerWidget instanceof TextFrame) {\n      // let index: number = section.childWidgets.indexOf(block);\n      if (!isNullOrUndefined(this.documentHelper.owner) && this.documentHelper.owner.isLayoutEnabled) {\n        block = block.combineWidget(this.viewer);\n        section = block.containerWidget;\n        this.documentHelper.layout.layoutBodyWidgetCollection(block.index, section, block, false);\n      }\n    } else if (block.containerWidget instanceof TableCellWidget) {\n      var cell = block.containerWidget;\n      cell = this.documentHelper.selection.getContainerCell(cell);\n      if (!isNullOrUndefined(this.documentHelper.owner) && this.documentHelper.owner.isLayoutEnabled) {\n        this.documentHelper.layout.reLayoutTable(block);\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.removeSelectedContents = function (selection) {\n    return this.removeSelectedContentInternal(selection, selection.start, selection.end);\n  };\n  Editor.prototype.removeSelectedContentInternal = function (selection, startPosition, endPosition) {\n    var startPos = startPosition;\n    var endPos = endPosition;\n    if (!startPosition.isExistBefore(endPosition)) {\n      startPos = endPosition;\n      endPos = startPosition;\n    }\n    if (startPos.paragraph === endPos.paragraph && startPos.paragraph.childWidgets.indexOf(startPos.currentWidget) === startPos.paragraph.childWidgets.length - 1 && startPos.offset === selection.getParagraphLength(startPos.paragraph) && startPos.offset + 1 === endPos.offset) {\n      selection.owner.isShiftingEnabled = true;\n      selection.selectContent(startPos, true);\n      return true;\n    }\n    var paragraphInfo = this.selection.getParagraphInfo(startPos);\n    selection.editPosition = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n    var start = startPos.clone();\n    var body = start.paragraph.containerWidget;\n    var isFirstLine = start.currentWidget.isFirstLine();\n    var isMultipleSectionSelected = this.checkMultipleSectionSelected(start, endPos);\n    var isRemoved = this.removeSelectedContent(endPos.paragraph, selection, startPos, endPos);\n    var textPosition = new TextPosition(selection.owner);\n    if (isMultipleSectionSelected && this.selection.currentPasteAction == \"DefaultPaste\" && isFirstLine && start.offset < 1) {\n      var currentParagraph = start.paragraph;\n      var paragraph = new ParagraphWidget();\n      var line = new LineWidget(paragraph);\n      line.paragraph = paragraph;\n      paragraph.containerWidget = body;\n      paragraph.childWidgets.push(line);\n      body.childWidgets.push(paragraph);\n      paragraph.index = currentParagraph.index;\n      paragraph.x = start.location.x;\n      paragraph.y = start.location.y;\n    }\n    this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n    selection.selectContent(textPosition, true);\n    return isRemoved;\n  };\n  Editor.prototype.checkMultipleSectionSelected = function (start, end) {\n    var startSectionIndex = this.getBodyWidgetIndex(start);\n    var endSectionIndex = this.getBodyWidgetIndex(end);\n    if (startSectionIndex == endSectionIndex) {\n      return false;\n    }\n    return true;\n  };\n  Editor.prototype.getBodyWidgetIndex = function (textPosition) {\n    var position = textPosition.hierarchicalPosition;\n    var index = position.indexOf(';');\n    var value = position.substring(0, index);\n    position = position.substring(index).replace(';', '');\n    index = position.indexOf(';');\n    value = position.substring(0, index);\n    var bodyWidgetIndex = parseInt(value, 10);\n    return bodyWidgetIndex;\n  };\n  Editor.prototype.removeSelectedContent = function (paragraph, selection, start, end) {\n    //If end is not table end and start is outside the table, then skip removing the contents and move caret to start position.\n    if (end.paragraph.isInsideTable && end.paragraph !== this.documentHelper.getLastParagraphInLastCell(end.paragraph.associatedCell.ownerTable) && (!start.paragraph.isInsideTable || start.paragraph.associatedCell.ownerTable.index !== end.paragraph.associatedCell.ownerTable.index)) {\n      return false;\n    }\n    selection.owner.isShiftingEnabled = true;\n    this.deleteSelectedContent(paragraph, selection, start, end, 2);\n    return true;\n  };\n  Editor.prototype.deleteSelectedContent = function (paragraph, selection, start, end, editAction, isDeletecell) {\n    var indexInInline = 0;\n    var inlineObj = start.currentWidget.getInline(start.offset, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    // if (!isNullOrUndefined(inline)) {\n    //     inline = selection.getNextRenderedInline(inline, indexInInline);\n    // }\n    // if (inline instanceof WFieldBegin && !isNullOrUndefined((inline as WFieldBegin).fieldEnd)) {\n    //     let fieldEndOffset: number = ((inline as WFieldBegin).fieldEnd.owner as WParagraph).getOffset((inline as WFieldBegin).fieldEnd, 1);\n    //     let fieldEndIndex: string = WordDocument.getHierarchicalIndexOf((inline as WFieldBegin).fieldEnd.owner as WParagraph, fieldEndOffset.toString());\n    //     let selectionEndIndex: string = end.getHierarchicalIndexInternal();\n    //     if (!TextPosition.isForwardSelection(fieldEndIndex, selectionEndIndex)) {\n    //         //If selection end is after field begin, moves selection start to field separator.\n    //         start.moveToInline((inline as WFieldBegin).fieldSeparator, 1);\n    //         selection.editPosition = start.getHierarchicalIndexInternal();\n    //         if (!isNullOrUndefined(selection.currentBaseHistoryInfo)) {\n    //             selection.currentBaseHistoryInfo.insertPosition = selection.editPosition;\n    //         }\n    //     }\n    // }\n    indexInInline = 0;\n    inlineObj = end.currentWidget.getInline(end.offset, indexInInline);\n    inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    // if (!isNullOrUndefined(inline)) {\n    //     inline = selection.getNextRenderedInline(inline, indexInInline);\n    // }\n    // if (inline instanceof WFieldEnd && !isNullOrUndefined((inline as WFieldEnd).fieldBegin)) {\n    //     let fieldBeginOffset: number = ((inline as WFieldEnd).fieldBegin.owner as WParagraph).getOffset((inline as WFieldEnd).fieldBegin, 0);\n    //     let fieldBeginIndex: string = WordDocument.getHierarchicalIndexOf((inline as WFieldEnd).fieldBegin.owner as WParagraph, fieldBeginOffset.toString());\n    //     let selectionStartIndex: string = start.getHierarchicalIndexInternal();\n    //     if (!TextPosition.isForwardSelection(selectionStartIndex, fieldBeginIndex)) {\n    //         //If field begin is before selection start, move selection end to inline item before field end.\n    //         let prevInline: WInline = selection.getPreviousTextInline(inline);\n    //         if (isNullOrUndefined(prevInline)) {\n    //             end.moveBackward();\n    //         } else {\n    //             end.moveToInline(prevInline, prevInline.length);\n    //         }\n    //     }\n    // }\n    // if (inline instanceof FootnoteElementBox) {\n    //     this.removeFootnote(inline);\n    // }\n    if (end.paragraph !== paragraph) {\n      this.deleteSelectedContent(end.paragraph, selection, start, end, editAction);\n      return;\n    }\n    //  Selection start in cell.\n    if (end.paragraph.isInsideTable && (!start.paragraph.isInsideTable || start.paragraph.associatedCell !== end.paragraph.associatedCell || selection.isCellSelected(end.paragraph.associatedCell, start, end) && isDeletecell)) {\n      end.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n      this.deleteTableCell(end.paragraph.associatedCell, selection, start, end, editAction, isDeletecell);\n    } else {\n      var shiftPara = undefined;\n      if (this.owner.viewer instanceof PageLayoutViewer && paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && paragraph === paragraph.bodyWidget.lastChild && !isNullOrUndefined(paragraph.bodyWidget.nextRenderedWidget) && paragraph.bodyWidget.index !== paragraph.bodyWidget.nextRenderedWidget.index && paragraph.bodyWidget.page === paragraph.bodyWidget.nextRenderedWidget.page) {\n        shiftPara = paragraph.nextRenderedWidget;\n      }\n      this.deletePara(paragraph, start, end, editAction);\n      if (this.delBlockContinue && this.delBlock) {\n        if (this.delSection) {\n          var bodyWidget = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n          this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n          this.delSection = undefined;\n        }\n        this.deleteBlock(this.delBlock, selection, start, end, editAction);\n        this.delBlockContinue = false;\n        this.delBlock = undefined;\n      }\n      if (this.owner.viewer instanceof PageLayoutViewer && shiftPara !== undefined) {\n        this.documentHelper.blockToShift = shiftPara;\n      }\n    }\n  };\n  /**\n   * Merges the selected cells.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.mergeCells = function () {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl || !this.owner.isDocumentLoaded) {\n      return;\n    }\n    if (!isNullOrUndefined(this.documentHelper) && !this.selection.isEmpty) {\n      this.mergeSelectedCellsInTable();\n    }\n  };\n  /**\n   * Deletes the entire table at selection.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.deleteTable = function () {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    if (startPos.paragraph.isInsideTable) {\n      var table = this.getOwnerTable(this.selection.isForward).combineWidget(this.owner.viewer);\n      this.selection.selectTable();\n      var commentStart = [];\n      this.selection.owner.isShiftingEnabled = true;\n      if (this.checkIsNotRedoing()) {\n        commentStart = this.checkAndRemoveComments();\n        this.initHistory('DeleteTable');\n        //Sets the insert position in history info as current table.    \n        this.updateHistoryPosition(startPos, true);\n      }\n      var considerTrackChanges = true;\n      if (!this.skipTracking()) {\n        var count = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n          var row = table.childWidgets[i];\n          if (row.rowFormat.revisions.length === 1 && row.rowFormat.revisions[0].revisionType === 'Insertion' && row.rowFormat.revisions[0].author === (this.owner.currentUser === '' ? 'Guest user' : this.owner.currentUser)) {\n            this.isRemoveRevision = true;\n            this.unlinkRangeFromRevision(row.rowFormat, true);\n            this.isRemoveRevision = false;\n            if (row.rowFormat.revisions[0].range.length === 0) {\n              row.rowFormat.revisions.splice(0, 1);\n            }\n            count++;\n          }\n        }\n        if (count === table.childWidgets.length) {\n          considerTrackChanges = false;\n        }\n      }\n      var paragraph = this.getParagraphForSelection(table);\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Table;\n        this.editorHistory.currentBaseHistoryInfo.removedNodes.push(table.clone());\n      }\n      if (this.owner.enableTrackChanges && considerTrackChanges) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n          if (i === 0) {\n            var nextCell = table.childWidgets[0];\n            paragraph = this.selection.getFirstParagraph(nextCell);\n          }\n          this.trackRowDeletion(table.childWidgets[i]);\n        }\n      } else {\n        this.removeBlock(table);\n      }\n      this.selection.selectParagraphInternal(paragraph, true);\n      if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n        this.reLayout(this.selection);\n        this.updateHistoryForComments(commentStart);\n      }\n    }\n  };\n  /**\n   * Deletes the selected column(s).\n   *\n   * @returns {void}\n   */\n  Editor.prototype.deleteColumn = function () {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    if (this.owner.enableTrackChanges) {\n      var locale = new L10n('documenteditor', this.owner.defaultLocale);\n      locale.setLocale(this.owner.locale);\n      this.alertDialog = DialogUtility.alert({\n        title: locale.getConstant('UnTrack'),\n        content: locale.getConstant('Merge Track'),\n        showCloseIcon: true,\n        okButton: {\n          text: 'Ok',\n          click: this.onDeleteColumnConfirmed.bind(this)\n        },\n        closeOnEscape: true,\n        position: {\n          X: 'center',\n          Y: 'center'\n        },\n        animationSettings: {\n          effect: 'Zoom'\n        }\n      });\n      this.alertDialog.enableRtl = this.owner.enableRtl;\n    } else {\n      this.onDeleteColumnConfirmed();\n    }\n  };\n  Editor.prototype.onDeleteColumnConfirmed = function () {\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    if (startPos.paragraph.isInsideTable) {\n      this.selection.selectColumn();\n      var commentStart = [];\n      this.selection.owner.isShiftingEnabled = true;\n      if (this.checkIsNotRedoing()) {\n        commentStart = this.checkAndRemoveComments();\n        this.initHistory('DeleteColumn');\n      }\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var endCell = this.getOwnerCell(!this.selection.isForward);\n      var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n        this.cloneTableToHistoryInfo(table);\n      }\n      var paragraph = undefined;\n      if (endCell.nextWidget) {\n        var nextCell = endCell.nextWidget;\n        paragraph = this.selection.getFirstParagraph(nextCell);\n      } else if (startCell.previousWidget) {\n        var previousCell = startCell.previousWidget;\n        paragraph = this.selection.getFirstParagraph(previousCell);\n      }\n      if (isNullOrUndefined(paragraph)) {\n        paragraph = this.getParagraphForSelection(table);\n      }\n      //retrieve the cell collection based on start and end cell to remove. \n      var deleteCells = table.getColumnCellsForSelection(startCell, endCell);\n      this.onDeleteColumn(table, deleteCells);\n      if (table.childWidgets.length === 0) {\n        // Before disposing table reset the paragrph.\n        paragraph = this.getParagraphForSelection(table);\n        this.removeBlock(table);\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n          this.editorHistory.currentBaseHistoryInfo.action = 'DeleteTable';\n        }\n        table.destroy();\n      } else {\n        this.updateTable(table);\n      }\n      this.selection.selectParagraphInternal(paragraph, true);\n      if (isNullOrUndefined(this.editorHistory) || this.checkIsNotRedoing()) {\n        this.reLayout(this.selection, true);\n        this.updateHistoryForComments(commentStart);\n      }\n      if (!isNullOrUndefined(this.alertDialog)) {\n        this.alertDialog.close();\n        this.alertDialog = undefined;\n      }\n    }\n  };\n  /**\n   * Delete the column for collaborative editing.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onDeleteColumn = function (table, deleteCells) {\n    var length = 0;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row.childWidgets.length === 1) {\n        if (deleteCells.indexOf(row.childWidgets[0]) >= 0) {\n          this.removeFieldInWidget(row.childWidgets[0], true);\n          table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n          row.destroy();\n          length += 1;\n          i--;\n        }\n      } else {\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          var tableCell = row.childWidgets[j];\n          if (deleteCells.indexOf(tableCell) >= 0) {\n            this.removeFieldInWidget(tableCell, true);\n            row.childWidgets.splice(j, 1);\n            tableCell.destroy();\n            j--;\n          }\n        }\n        if (row.childWidgets.length === 0) {\n          table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n          row.destroy();\n          length += 1;\n          i--;\n        }\n      }\n    }\n    return length;\n  };\n  /**\n   * Deletes the selected row(s).\n   *\n   * @returns {void}\n   */\n  Editor.prototype.deleteRow = function () {\n    if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n      return;\n    }\n    var startPos = !this.selection.isForward ? this.selection.end : this.selection.start;\n    var endPos = !this.selection.isForward ? this.selection.start : this.selection.end;\n    var blockInfo = this.selection.getParagraphInfo(startPos);\n    var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    if (startPos.paragraph.isInsideTable) {\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var endCell = this.getOwnerCell(!this.selection.isForward);\n      this.selection.selectRow();\n      var commentStart = [];\n      if (this.checkIsNotRedoing()) {\n        commentStart = this.checkAndRemoveComments();\n        this.initHistory('DeleteRow');\n      }\n      this.selection.owner.isShiftingEnabled = true;\n      var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n      var row = this.getOwnerRow(true);\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n        this.cloneTableToHistoryInfo(table);\n      }\n      var paragraph = undefined;\n      if (row.nextWidget) {\n        var nextCell = row.nextWidget.childWidgets[0];\n        paragraph = this.selection.getFirstParagraph(nextCell);\n      }\n      if (isNullOrUndefined(paragraph)) {\n        paragraph = this.getParagraphForSelection(table);\n      }\n      startPos = startPos.clone();\n      if (!this.selection.isEmpty) {\n        var containerCell = this.selection.getContainerCellOf(startCell, endCell);\n        if (containerCell.ownerTable.contains(endCell)) {\n          startCell = this.selection.getSelectedCell(startCell, containerCell);\n          endCell = this.selection.getSelectedCell(endCell, containerCell);\n          if (this.selection.containsCell(containerCell, endCell)) {\n            row = startCell.ownerRow;\n            if (this.owner.enableTrackChanges) {\n              if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n                this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Row;\n              }\n              this.trackRowDeletion(row, true, false);\n            } else {\n              this.removeRow(row);\n            }\n          } else {\n            row = startCell.ownerRow;\n            var endRow = endCell.ownerRow;\n            //Update the selection paragraph.\n            paragraph = undefined;\n            if (endRow.nextWidget) {\n              var nextCell = endRow.nextWidget.childWidgets[0];\n              paragraph = this.selection.getFirstParagraph(nextCell);\n            }\n            if (isNullOrUndefined(paragraph)) {\n              paragraph = this.getParagraphForSelection(table);\n            }\n            for (var i = 0; i < table.childWidgets.length; i++) {\n              var tableRow = table.childWidgets[i];\n              if (tableRow.rowIndex >= row.rowIndex && tableRow.rowIndex <= endRow.rowIndex) {\n                if (this.owner.enableTrackChanges && this.checkIsNotRedoing()) {\n                  this.trackRowDeletion(tableRow, true, false);\n                } else {\n                  this.removeFieldInBlock(tableRow, true);\n                  table.childWidgets.splice(i, 1);\n                  tableRow.destroy();\n                  i--;\n                }\n              }\n            }\n            if (table.childWidgets.length === 0) {\n              this.removeBlock(table);\n              if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                this.editorHistory.currentBaseHistoryInfo.action = 'DeleteTable';\n              }\n              table.destroy();\n            } else {\n              this.updateTable(table);\n            }\n          }\n        }\n      } else {\n        if (this.owner.enableTrackChanges) {\n          this.trackRowDeletion(row, true, false);\n        } else {\n          this.removeRow(row);\n        }\n      }\n      if (!this.owner.enableTrackChanges || isNullOrUndefined(table.childWidgets)) {\n        this.selection.selectParagraphInternal(paragraph, true);\n      } else {\n        var textPosition = this.selection.getTextPosBasedOnLogicalIndex(startIndex);\n        this.selection.selectContent(textPosition, true);\n        // this.selection.start.setPositionInternal(startPos);\n        // this.selection.end.setPositionInternal(this.selection.start);\n      }\n      if (isNullOrUndefined(this.editorHistory) || this.checkIsNotRedoing()) {\n        this.reLayout(this.selection, true);\n        this.updateHistoryForComments(commentStart);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.trackRowDeletion = function (row, canremoveRow, updateHistory) {\n    var rowFormat = row.rowFormat;\n    if (!isNullOrUndefined(rowFormat)) {\n      var canInsertRevision = true;\n      if (rowFormat.revisions.length > 0) {\n        var revision = this.retrieveRevisionInOder(rowFormat);\n        if (revision.revisionType === 'Insertion') {\n          if (this.isRevisionMatched(rowFormat, undefined)) {\n            if (isNullOrUndefined(canremoveRow) || canremoveRow) {\n              this.removeRow(row);\n            } else {\n              this.removeRevisionsInRow(row);\n            }\n            return true;\n          }\n        } else if (revision.revisionType === 'Deletion') {\n          this.unlinkWholeRangeInRevision(rowFormat, revision);\n          canInsertRevision = false;\n        }\n      }\n      if (canInsertRevision) {\n        if ((isNullOrUndefined(updateHistory) || updateHistory) && this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n          this.editorHistory.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n        }\n        this.insertRevision(rowFormat, 'Deletion');\n      }\n      for (var i = 0; i < row.childWidgets.length; i++) {\n        var cellWidget = row.childWidgets[i];\n        for (var j = 0; j < cellWidget.childWidgets.length; j++) {\n          if (cellWidget.childWidgets[j] instanceof TableWidget) {\n            this.trackInnerTable(cellWidget.childWidgets[j], canremoveRow, updateHistory);\n          } else {\n            var paraWidget = cellWidget.childWidgets[j];\n            // We used this boolean since for table tracking we should add removed nodes only for entire table not for every elements in the table\n            this.skipTableElements = true;\n            if (canInsertRevision) {\n              this.insertRevisionForBlock(paraWidget, 'Deletion', undefined, undefined, true);\n            }\n            this.skipTableElements = false;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  Editor.prototype.trackInnerTable = function (tableWidget, canremoveRow, updateHistory) {\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      this.trackRowDeletion(tableWidget.childWidgets[i], canremoveRow, updateHistory);\n    }\n  };\n  Editor.prototype.returnDeleteRevision = function (revisions) {\n    for (var i = 0; i < revisions.length; i++) {\n      if (revisions[i].revisionType === 'Deletion') {\n        return revisions[i];\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.removeRow = function (row) {\n    var table = row.ownerTable;\n    if (row.rowFormat.revisions.length > 0) {\n      this.removeRevisionsInRow(row);\n    }\n    if (table.childWidgets.length === 1) {\n      this.removeBlock(table);\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n        this.editorHistory.currentBaseHistoryInfo.action = 'Delete';\n      }\n      table.destroy();\n    } else {\n      this.removeFieldInBlock(row, true);\n      table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n      row.destroy();\n      this.updateTable(table);\n    }\n  };\n  /**\n   * @private\n   * @param {TableWidget} table Specifies the table widget\n   * @returns {void}\n   */\n  Editor.prototype.updateTable = function (table, skipCombine) {\n    if (!skipCombine) {\n      table = table.combineWidget(this.viewer);\n    }\n    table.updateRowIndex(0);\n    table.isGridUpdated = false;\n    table.buildTableColumns();\n    table.isGridUpdated = true;\n    this.documentHelper.layout.reLayoutTable(table);\n  };\n  /**\n   * @private\n   * @param {TableWidget} table Specifies the table widget\n   * @returns { ParagraphWidget }\n   */\n  Editor.prototype.getParagraphForSelection = function (table) {\n    var paragraph = undefined;\n    var nextWidget = table.nextWidget ? table.nextWidget : table.nextRenderedWidget;\n    var previousWidget = table.previousWidget ? table.previousWidget : table.previousRenderedWidget;\n    if (nextWidget) {\n      paragraph = nextWidget instanceof ParagraphWidget ? nextWidget : this.documentHelper.getFirstParagraphInFirstCell(nextWidget);\n    } else if (previousWidget) {\n      paragraph = previousWidget instanceof ParagraphWidget ? previousWidget : this.documentHelper.getLastParagraphInLastCell(previousWidget);\n    }\n    return paragraph;\n  };\n  Editor.prototype.deletePara = function (paragraph, start, end, editAction) {\n    paragraph = paragraph.combineWidget(this.owner.viewer);\n    var selection = this.documentHelper.selection;\n    var paragraphStart = selection.getStartOffset(paragraph);\n    var endParagraphStartOffset = selection.getStartOffset(end.paragraph);\n    var startOffset = paragraphStart;\n    var endOffset = 0;\n    var isCombineNextParagraph = false;\n    var lastLinelength = this.selection.getLineLength(paragraph.lastChild);\n    var currentParagraph = paragraph;\n    var section = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n    var startLine = undefined;\n    var endLineWidget = undefined;\n    var isCombineLastBlock = this.combineLastBlock;\n    var tempStartOffset;\n    if (paragraph === start.paragraph) {\n      startOffset = start.offset;\n      startLine = start.currentWidget;\n      tempStartOffset = startOffset;\n      if (startOffset + 1 === this.documentHelper.selection.getLineLength(paragraph.lastChild)) {\n        startOffset++;\n      }\n      if (end.paragraph.isInsideTable && (!this.owner.enableTrackChanges || this.skipTracking())) {\n        isCombineNextParagraph = this.isEndInAdjacentTable(paragraph, end.paragraph);\n      }\n      if (!isCombineNextParagraph) {\n        isCombineNextParagraph = this.combineLastBlock;\n      }\n      this.combineLastBlock = false;\n    } else {\n      startLine = paragraph.firstChild;\n    }\n    if (paragraph !== start.paragraph && selection.isSkipLayouting) {\n      selection.isSkipLayouting = false;\n    }\n    if (paragraph === end.paragraph) {\n      endLineWidget = end.currentWidget;\n      endOffset = end.offset;\n    } else {\n      endLineWidget = paragraph.lastChild;\n      endOffset = this.documentHelper.selection.getLineLength(paragraph.lastChild);\n    }\n    // If previous widget is splitted paragraph, combine paragraph widget.\n    var block = !isNullOrUndefined(paragraph.previousRenderedWidget) && start.paragraph !== paragraph ? paragraph.previousRenderedWidget.combineWidget(this.documentHelper.viewer) : undefined;\n    if (this.owner.enableTrackChanges && !isNullOrUndefined(block) && block instanceof TableWidget && paragraph.isEmpty() && isNullOrUndefined(paragraph.nextRenderedWidget)) {\n      this.delBlockContinue = true;\n      this.delBlock = block;\n      return;\n    }\n    if (startOffset > paragraphStart && start.currentWidget === paragraph.lastChild && startOffset === lastLinelength && (paragraph === end.paragraph && end.offset === startOffset + 1 || paragraph.nextRenderedWidget === end.paragraph && end.offset === endParagraphStartOffset) || this.editorHistory && this.editorHistory.isUndoing && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'PageBreak' && block && block.isPageBreak() && (startOffset === 0 && !start.currentWidget.isFirstLine || startOffset > 0) || start.paragraph !== end.paragraph && editAction === 2 && start.paragraph === paragraph && start.paragraph.nextWidget === end.paragraph || !(paragraph.nextRenderedWidget instanceof TableWidget) && !isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && (this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' && start.paragraph === paragraph && end.paragraph != paragraph && startOffset >= paragraphStart || this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change' && start.currentWidget.isLastLine() && (start.currentWidget == end.currentWidget && start.offset + 1 >= end.paragraph.getLength() || start.currentWidget !== end.currentWidget && start.paragraph === paragraph))) {\n      isCombineNextParagraph = true;\n    }\n    if (tempStartOffset + 1 === this.documentHelper.selection.getLineLength(paragraph.lastChild)) {\n      startOffset--;\n    }\n    var paraEnd = end.clone();\n    paraEnd.offset = paraEnd.offset - 1;\n    var paraReplace = start.paragraph === paragraph && start.isAtParagraphStart && paraEnd.isAtParagraphEnd && this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.action === 'Insert';\n    if (paraReplace) {\n      this.editorHistory.currentBaseHistoryInfo.action = 'InsertTextParaReplace';\n    }\n    var isStartParagraph = start.paragraph === paragraph;\n    if (end.paragraph === paragraph && end.currentWidget !== paragraph.lastChild || end.currentWidget === paragraph.lastChild && end.offset <= selection.getLineLength(paragraph.lastChild) || paraReplace) {\n      if (end.currentWidget.isFirstLine() && end.offset > paragraphStart || !end.currentWidget.isFirstLine() || paraReplace) {\n        //If selection end with this paragraph and selection doesnot include paragraph mark.               \n        this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n        //Removes the splitted paragraph.\n      }\n      if (!isNullOrUndefined(block) && !isStartParagraph && !paraReplace) {\n        this.delBlockContinue = true;\n        this.delBlock = block;\n        var nextSection = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n        if (nextSection && !section.equals(nextSection) && section.index !== nextSection.index) {\n          this.delSection = nextSection;\n        } else {\n          this.delSection = undefined;\n        }\n      } else {\n        this.delBlockContinue = false;\n        this.delBlock = undefined;\n      }\n    } else if (start.paragraph === paragraph && (start.currentWidget !== paragraph.firstChild || start.currentWidget === paragraph.firstChild && startOffset > paragraphStart)) {\n      // If selection start is after paragraph start\n      //And selection does not end with this paragraph Or selection include paragraph mark.\n      this.delBlockContinue = false;\n      this.delBlock = undefined;\n      if (editAction === 4) {\n        return;\n      } else {\n        if (this.skipTracking() && this.editorHistory.currentBaseHistoryInfo.action === 'ParaMarkTrack') {\n          this.addRemovedNodes(paragraph.characterFormat.cloneFormat());\n          if (paragraph.characterFormat.revisions.length > 0) {\n            this.unlinkRangeFromRevision(paragraph.characterFormat, true);\n          }\n          paragraph.characterFormat.revisions = [];\n        } else {\n          if (this.owner.enableTrackChanges && !this.skipTracking() && this.editorHistory.currentBaseHistoryInfo.action !== 'TOC' && this.editorHistory.currentBaseHistoryInfo.action !== 'Reject Change') {\n            if (isCombineNextParagraph) {\n              currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, startLine, startOffset, true);\n              this.deleteParagraphMark(currentParagraph, selection, editAction, true);\n              this.addRemovedNodes(paragraph);\n            } else {\n              if (start.paragraph !== end.paragraph && startOffset !== paragraph.getLength()) {\n                var para = new ParagraphWidget();\n                para.childWidgets = undefined;\n                this.addRemovedNodes(para);\n                this.insertRevision(paragraph.characterFormat, 'Deletion');\n              }\n              this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n              if (startOffset !== paragraph.getLength()) {\n                var lastLine = paragraph.lastChild;\n                if (lastLine.children.length > 0) {\n                  var lastEle = lastLine.children[lastLine.children.length - 1];\n                  this.combineElementRevision(lastEle.revisions, paragraph.characterFormat.revisions);\n                }\n                if (paragraph.isEmpty()) {\n                  this.combineRevisionWithBlocks(paragraph);\n                } else {\n                  this.combineRevisionWithBlocks(paragraph.lastChild.children[paragraph.lastChild.children.length - 1]);\n                }\n              }\n            }\n          } else {\n            if (!start.currentWidget.isFirstLine() && paragraph.lastChild === end.currentWidget && !isCombineNextParagraph) {\n              this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n            } else {\n              if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' && start.paragraph === paragraph && end.paragraph != paragraph && startOffset >= paragraphStart && isCombineNextParagraph) {\n                isCombineLastBlock = true;\n              }\n              currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, startLine, startOffset, true);\n              if (!isNullOrUndefined(currentParagraph) && !isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                this.deletaRevisionIDs(currentParagraph.characterFormat);\n              }\n              var skipHistoryCollection = false;\n              if (!end.paragraph.isEmpty() && isCombineNextParagraph && !(this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'PageBreak')) {\n                skipHistoryCollection = true;\n              }\n              this.insertParagraphPaste(paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock, skipHistoryCollection);\n              this.removeRevisionForBlock(paragraph, undefined, false, true);\n              this.addRemovedNodes(paragraph);\n              isCombineLastBlock = false;\n            }\n          }\n        }\n        return;\n      }\n    } else {\n      if (end.paragraph === paragraph && end.paragraph.isInsideTable && (start.currentWidget.isFirstLine() && start.offset > selection.getStartOffset(start.paragraph) || !start.currentWidget.isFirstLine()) && end.offset >= selection.getLineLength(end.paragraph.lastChild) && end.paragraph.nextRenderedWidget) {\n        this.combineLastBlock = true;\n      }\n      var newParagraph = undefined;\n      var previousBlock = paragraph.previousWidget;\n      var prevParagraph = previousBlock instanceof ParagraphWidget ? previousBlock : undefined;\n      var nextWidget = paragraph.nextRenderedWidget;\n      if (editAction < 4) {\n        //Checks whether this is last paragraph of owner text body and previousBlock is not paragraph.\n        if (this.owner.enableTrackChanges && !this.skipTracking() && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action !== 'TOC') {\n          var removedNodeLength = -1;\n          if (this.editorHistory.currentBaseHistoryInfo) {\n            removedNodeLength = this.editorHistory.currentBaseHistoryInfo.removedNodes.length;\n          }\n          this.insertRevisionForBlock(paragraph, 'Deletion');\n          var charFormatRev = paragraph.characterFormat.revisions;\n          if (!(end.paragraph.previousRenderedWidget instanceof TableWidget) && charFormatRev.length > 1 && charFormatRev[charFormatRev.length - 2].revisionType == 'Insertion') {\n            if (paragraph.isEmpty()) {\n              newParagraph = this.checkAndInsertBlock(paragraph, start, end, editAction, prevParagraph);\n              this.removeBlock(paragraph);\n              if (removedNodeLength === -1) {\n                this.addRemovedNodes(paragraph);\n              } else {\n                this.editorHistory.currentBaseHistoryInfo.removedNodes.splice(removedNodeLength, 0, paragraph);\n              }\n              this.removeRevisionForBlock(paragraph, undefined, false, true);\n            } else {\n              while (paragraph.characterFormat.revisions.length !== 0) {\n                this.removePrevParaMarkRevision(paragraph, true);\n              }\n              this.deleteParagraphMark(paragraph, selection, editAction, false);\n              nextWidget = paragraph.nextRenderedWidget;\n            }\n          } else {\n            if (paragraph.isEmpty()) {\n              this.combineRevisionWithBlocks(paragraph);\n            } else {\n              // On deleting para, para items may be added with delete revisions so we need to ensure whether it can be combined with prev/ next para.\n              this.combineRevisionWithBlocks(paragraph.firstChild.children[0]);\n            }\n          }\n          if (this.editorHistory.currentBaseHistoryInfo.action === 'Delete' && !this.isInsertingTOC) {\n            // Changed the condition to update editposition if current para contains revision (deletion) and previous para contain revision (insertion) and both are selected case.\n            if (paragraph === end.paragraph && paragraph.containerWidget && !paragraph.isEmpty() || isNullOrUndefined(start.paragraph.containerWidget) && !isNullOrUndefined(end.paragraph.containerWidget) && !end.paragraph.isEmpty()) {\n              var paraInfo = this.selection.getParagraphInfo(end);\n              this.selection.editPosition = this.selection.getHierarchicalIndex(paraInfo.paragraph, paraInfo.offset.toString());\n            }\n          }\n          if (start.paragraph !== paragraph && !isNullOrUndefined(block)) {\n            this.delBlockContinue = true;\n            this.delBlock = block;\n            return;\n          }\n        } else {\n          //this.documentHelper.comments;\n          var foot = void 0;\n          /*  if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.footnoteWidget)) {\n                foot = selection.start.paragraph.bodyWidget.page.footnoteWidget;\n            }else if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.endnoteWidget)) {\n                foot = selection.start.paragraph.bodyWidget.page.endnoteWidget;\n            }*/\n          newParagraph = this.checkAndInsertBlock(paragraph, start, end, editAction, prevParagraph);\n          this.removeRevisionForBlock(paragraph, undefined, false, true);\n          // Added the condition to skip to add entair paragraph (with para mark) into history if the current widget has the last widget. \n          var isLastChild = paragraph == this.getLastParaForBodywidgetCollection(paragraph);\n          if (this.owner.enableTrackChanges && isLastChild) {\n            for (var i = paragraph.childWidgets.length - 1; i > -1; i--) {\n              var line = paragraph.childWidgets[i];\n              this.removeContent(line, 0, this.documentHelper.selection.getLineLength(line), undefined, false);\n            }\n          } else {\n            // Added the condition to remove section if current and next para have different section indexes if selection is covered till the end of first section.\n            var nextParagraph = this.selection.getNextParagraphBlock(paragraph);\n            if (!isLastChild && !paragraph.isInsideTable && !isNullOrUndefined(nextParagraph) && !nextParagraph.isInsideTable && paragraph.bodyWidget.sectionIndex !== nextParagraph.bodyWidget.sectionIndex) {\n              this.deleteSection(selection, paragraph.bodyWidget, nextParagraph.bodyWidget, editAction);\n              isStartParagraph = true;\n            }\n            this.addRemovedNodes(paragraph);\n          }\n          if (!isNullOrUndefined(block) && !isStartParagraph && !paraReplace) {\n            this.delBlock = block;\n            var nextSection = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n            if (nextSection && section.index !== nextSection.index) {\n              var bodyWidget = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n              this.deleteSection(selection, nextSection, bodyWidget, editAction);\n            }\n          }\n          this.removeBlock(paragraph);\n          /* let widget: IWidget;\n           for(let i:number =0;i< foot.childWidgets.length; i++) {\n           widget = foot.childWidgets[i];\n           if (widget instanceof ParagraphWidget) {\n             let para: ParagraphWidget = widget;\n           if (!isNullOrUndefined(para)) {\n               this.removeBlock(para);\n           }}}*/\n        }\n        if (this.documentHelper.blockToShift === paragraph) {\n          this.documentHelper.blockToShift = undefined;\n        }\n        if (!isNullOrUndefined(newParagraph)) {\n          selection.editPosition = this.selection.getHierarchicalIndex(newParagraph, '0');\n          var offset = selection.getParagraphLength(newParagraph) + 1;\n          if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(newParagraph, offset.toString());\n          }\n        } else if (paragraph === start.paragraph && (isNullOrUndefined(nextWidget) || !isNullOrUndefined(nextWidget) && !isNullOrUndefined(section) && section.index !== nextWidget.bodyWidget.index) && !isNullOrUndefined(prevParagraph)) {\n          var offset = this.selection.getParagraphLength(prevParagraph);\n          // if (isNullOrUndefined(block)) {\n          selection.editPosition = this.selection.getHierarchicalIndex(prevParagraph, offset.toString());\n          if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.updateHistoryPosition(selection.editPosition, true);\n            this.editorHistory.currentBaseHistoryInfo.endPosition = selection.editPosition;\n          }\n          // } else {\n          //     let offset: number = selection.getParagraphLength(paragraph) + 1;\n          //     if (block instanceof ParagraphWidget) {\n          //         prevParagraph = block as ParagraphWidget;\n          //     }\n          //     // if (block instanceof WTable) {\n          //     //     prevParagraph = (block as WTable).getFirstParagraphInFirstCell();\n          //     // }\n          //     selection.editPosition = prevLineWidget.getHierarchicalIndex('0');\n          // }\n        }\n      }\n      if (start.paragraph !== paragraph && !isNullOrUndefined(block)) {\n        this.delBlockContinue = true;\n        this.delBlock = block;\n      } else {\n        this.delBlockContinue = false;\n        this.delBlock = undefined;\n      }\n    }\n    this.insertParagraphPaste(paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock);\n  };\n  Editor.prototype.deletaRevisionIDs = function (format) {\n    if (format.removedIds.length > 0) {\n      while (format.removedIds.length > 0) {\n        format.removedIds.splice(0, 1);\n      }\n    }\n  };\n  Editor.prototype.deleteSection = function (selection, section, nextSection, editAction) {\n    if (editAction < 4) {\n      if (this.owner.enableCollaborativeEditing) {\n        var paragraphInfo = void 0;\n        var positionInfo = void 0;\n        // Find the start linear index of deleted HeadersFooters\n        var headerFooterWidget = this.owner.documentHelper.headersFooters[section.sectionIndex]['0'];\n        if (!isNullOrUndefined(headerFooterWidget)) {\n          paragraphInfo = {\n            'paragraph': headerFooterWidget.firstChild,\n            'offset': 0\n          };\n          positionInfo = this.owner.selectionModule.getPositionInfoForHeaderFooter(paragraphInfo, {\n            position: 0,\n            done: false\n          });\n          this.editorHistory.currentBaseHistoryInfo.headerFooterStart = positionInfo.position;\n        }\n        // Find the end linear index of deleted HeadersFooters\n        var keyCount = Object.keys(this.owner.documentHelper.headersFooters[section.sectionIndex]).length;\n        if (keyCount > 0) {\n          headerFooterWidget = this.owner.documentHelper.headersFooters[section.sectionIndex][(keyCount - 1).toString()];\n          if (!isNullOrUndefined(headerFooterWidget)) {\n            var paraLength = this.owner.selectionModule.getParagraphLength(headerFooterWidget.lastChild);\n            paragraphInfo = {\n              'paragraph': headerFooterWidget.lastChild,\n              'offset': paraLength + 1\n            };\n            positionInfo = this.owner.selectionModule.getPositionInfoForHeaderFooter(paragraphInfo, {\n              position: 0,\n              done: false\n            });\n            this.editorHistory.currentBaseHistoryInfo.headerFooterEnd = positionInfo.position;\n          }\n        }\n      }\n      this.combineSectionInternal(selection, section, nextSection);\n    }\n    //Copies the section properties, if this is last paragraph of section.\n    if (editAction > 2) {\n      section.sectionFormat.copyFormat(nextSection.sectionFormat);\n    }\n  };\n  /**\n   *\n   * @private\n   */\n  Editor.prototype.combineSectionInternal = function (selection, section, nextSection) {\n    // if (section.sectionFormat.isEqualFormat(nextSection.sectionFormat)) {\n    // } else {\n    var bodyWidget = section.getSplitWidgets()[0];\n    var currentSection = [];\n    var previousY = bodyWidget.y;\n    this.combineSectionChild(bodyWidget, currentSection, true);\n    bodyWidget = currentSection[0];\n    var lastBlockIndex = bodyWidget.lastChild.index;\n    this.updateBlockIndex(lastBlockIndex + 1, nextSection.firstChild);\n    var insertIndex = 0;\n    var containerWidget = nextSection;\n    containerWidget.y = previousY;\n    for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n      var block = bodyWidget.childWidgets.splice(i, 1)[0];\n      containerWidget.childWidgets.splice(insertIndex, 0, block);\n      block.containerWidget = containerWidget;\n      this.documentHelper.layout.layoutBodyWidgetCollection(block.index, block.bodyWidget, block, false);\n      block = block.getSplitWidgets().pop();\n      containerWidget = block.containerWidget;\n      insertIndex = block.indexInOwner + 1;\n      i--;\n    }\n    if (bodyWidget.sectionIndex > 0 && this.documentHelper.headersFooters[bodyWidget.sectionIndex]) {\n      bodyWidget.removedHeaderFooters = [];\n      var headerFooters = this.documentHelper.headersFooters.splice(bodyWidget.sectionIndex, 1)[0];\n      var keys = Object.keys(headerFooters);\n      for (var i = 0; i < keys.length; i++) {\n        var headerWidgetIn = headerFooters[keys[i]];\n        //if (headerWidgetIn.page) {\n        this.removeFieldInWidget(headerWidgetIn);\n        // Remove content control\n        this.removeFieldInWidget(headerWidgetIn, false, true);\n        //}\n        headerWidgetIn.page = undefined;\n      }\n      bodyWidget.removedHeaderFooters.push(headerFooters);\n    }\n    this.updateSectionIndex(undefined, nextSection, false);\n    this.addRemovedNodes(bodyWidget);\n    this.documentHelper.removeEmptyPages();\n    if (this.editorHistory && this.editorHistory.isUndoing) {\n      nextSection.sectionFormat = section.sectionFormat;\n    }\n    var page = nextSection.page;\n    do {\n      this.documentHelper.layout.layoutHeaderFooter(page.bodyWidgets[0], this.viewer, page);\n      page = page.nextPage;\n    } while (page);\n    // }\n  };\n  /* eslint-disable max-len */\n  Editor.prototype.checkAndInsertBlock = function (block, start, end, editAction, previousParagraph) {\n    if (block instanceof ParagraphWidget && block === start.paragraph || block instanceof TableWidget) {\n      var newParagraph = void 0; //Adds an empty paragraph, to ensure minimal content.\n      if (isNullOrUndefined(block.nextRenderedWidget) && (isNullOrUndefined(previousParagraph) || previousParagraph.nextRenderedWidget instanceof TableWidget)) {\n        newParagraph = new ParagraphWidget();\n        if (editAction === 1 && block instanceof ParagraphWidget && !isNullOrUndefined(block.paragraphFormat.baseStyle) && block.paragraphFormat.baseStyle.name === 'Normal') {\n          newParagraph.characterFormat.copyFormat(block.characterFormat);\n          // Added the condition to remove removedIds when document contain single empty paragraph\n          if (isNullOrUndefined(block.previousRenderedWidget) && newParagraph.characterFormat.removedIds.length !== 0) {\n            while (newParagraph.characterFormat.removedIds.length > 0) {\n              newParagraph.characterFormat.removedIds.splice(0, 1);\n            }\n          }\n          newParagraph.paragraphFormat.copyFormat(block.paragraphFormat);\n        }\n        newParagraph.index = block.index + 1;\n        newParagraph.containerWidget = block.containerWidget;\n        if (block instanceof ParagraphWidget) {\n          newParagraph.paragraphFormat.lineSpacing = block.paragraphFormat.lineSpacing;\n          newParagraph.paragraphFormat.lineSpacingType = block.paragraphFormat.lineSpacingType;\n          var style = this.documentHelper.styles.findByName('Normal');\n          if (!isNullOrUndefined(style)) {\n            newParagraph.paragraphFormat.baseStyle = new WParagraphStyle();\n            newParagraph.paragraphFormat.baseStyle.copyStyle(style);\n          }\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, newParagraph.bodyWidget, newParagraph, false);\n        if (block.containerWidget instanceof Widget) {\n          block.containerWidget.childWidgets.push(newParagraph);\n        }\n      }\n      return newParagraph;\n    }\n    return undefined;\n  };\n  Editor.prototype.splitParagraph = function (paragraphAdv, startLine, startOffset, endLine, endOffset, removeBlock) {\n    var paragraph = new ParagraphWidget();\n    paragraph.paragraphFormat = new WParagraphFormat(paragraph);\n    paragraph.characterFormat = new WCharacterFormat(paragraph);\n    paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n    paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n    var lineWidget = new LineWidget(paragraph);\n    paragraph.childWidgets.push(lineWidget);\n    var blockIndex = paragraphAdv.index;\n    var insertIndex = paragraphAdv.indexInOwner;\n    this.moveInlines(paragraphAdv, paragraph, 0, startOffset, startLine, endOffset, endLine, removeBlock);\n    if (paragraphAdv.containerWidget.childWidgets[insertIndex]) {\n      var line = paragraphAdv.containerWidget.childWidgets[insertIndex];\n      for (var i = 0; i < line.childWidgets.length; i++) {\n        var linewid = line.childWidgets[i];\n        for (var j = 0; j < linewid.children.length; j++) {\n          var inline = linewid.children[j];\n          if (inline instanceof FootnoteElementBox) {\n            this.removeFootnote(inline);\n          }\n        }\n      }\n    }\n    //Inserts new paragraph in the current text position.\n    paragraphAdv.containerWidget.childWidgets.splice(insertIndex, 0, paragraph);\n    paragraph.index = blockIndex;\n    paragraph.containerWidget = paragraphAdv.containerWidget;\n    this.updateNextBlocksIndex(paragraph, true);\n    if (removeBlock) {\n      this.removeBlock(paragraphAdv);\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, paragraph.containerWidget, paragraph, false);\n    return paragraph;\n  };\n  Editor.prototype.removeCommentsInBlock = function (block) {\n    if (block instanceof TableWidget) {\n      for (var i = 0; i < block.childWidgets.length; i++) {\n        var row = block.childWidgets[i];\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          var cell = row.childWidgets[j];\n          for (var k = 0; k < cell.childWidgets.length; k++) {\n            var block_1 = cell.childWidgets[k];\n            this.removeCommentsInBlock(block_1);\n          }\n        }\n      }\n    } else {\n      this.removeCommentInPara(block);\n    }\n  };\n  Editor.prototype.removeCommentInPara = function (block) {\n    for (var i = 0; i < block.childWidgets.length; i++) {\n      var lineWidget = block.childWidgets[i];\n      //Iterate through each line widgets.\n      for (var j = 0; j < lineWidget.children.length; j++) {\n        this.removeCommentsInline(lineWidget.children[j]);\n      }\n    }\n  };\n  Editor.prototype.removeCommentsInline = function (inline) {\n    if (inline instanceof CommentCharacterElementBox) {\n      if (inline.commentType === 1) {\n        // if (!inline.comment.isReply) {\n        //     for (let i: number = 0; i < inline.comment.replyComments.length; i++) {\n        //         this.removeCommentsInline(inline.comment.replyComments[i].commentEnd);\n        //     }\n        // }\n        // if (inline.comment.commentStart && inline.comment.commentStart.commentMark) {\n        //     inline.comment.commentStart.removeCommentMark();\n        // }\n        // if (!inline.comment.isReply && this.documentHelper.comments.indexOf(inline.comment) >= 0\n        //     || inline.comment.isReply && this.documentHelper.comments.indexOf(inline.comment.ownerComment) >= 0) {\n        //     this.deleteCommentWidget(inline.comment);\n        // }\n      } else {\n        inline.removeCommentMark();\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeBlock = function (block, isSkipShifting, skipElementRemoval) {\n    var index;\n    var blockCollection;\n    var containerWidget;\n    if (!skipElementRemoval) {\n      this.removeFieldInBlock(block);\n      this.removeFieldInBlock(block, true);\n      this.removeFieldInBlock(block, undefined, true);\n      this.removeCommentsInBlock(block);\n    }\n    if (block.isInsideTable) {\n      containerWidget = block.associatedCell;\n      index = block.associatedCell.childWidgets.indexOf(block);\n      blockCollection = block.associatedCell.childWidgets;\n      this.updateNextBlocksIndex(block, false);\n      block.associatedCell.childWidgets.splice(index, 1);\n      block.containerWidget = undefined;\n      this.documentHelper.layout.layoutBodyWidgetCollection(block.index, containerWidget, block, false);\n    } else {\n      containerWidget = block.containerWidget;\n      for (var i = 0; i < block.childWidgets.length; i++) {\n        var isSkipTracking = void 0;\n        if (!this.isPasteRevertAction()) {\n          isSkipTracking = this.skipTracking();\n        }\n        if (block.childWidgets[i] instanceof TableRowWidget && !isSkipTracking) {\n          var tableDelete = block.childWidgets[i];\n          this.removeDeletedCellRevision(tableDelete);\n        }\n        if (block.childWidgets[i] instanceof LineWidget) {\n          var line = block.childWidgets[i];\n          for (var j = 0; j < line.children.length; j++) {\n            var element = line.children[j];\n            if (element instanceof FootnoteElementBox && !this.selection.isEmpty) {\n              this.removeFootnote(element);\n            }\n          }\n        }\n      }\n      index = containerWidget.childWidgets.indexOf(block);\n      blockCollection = containerWidget.childWidgets;\n      this.updateNextBlocksIndex(block, false);\n      containerWidget.childWidgets.splice(index, 1);\n      block.containerWidget = undefined;\n      containerWidget.height -= block.height;\n      if (!isNullOrUndefined(containerWidget.containerWidget) && containerWidget.containerWidget instanceof FootNoteWidget) {\n        containerWidget.containerWidget.height -= block.height;\n      }\n      this.documentHelper.layout.layoutBodyWidgetCollection(block.index, containerWidget, block, false, isSkipShifting);\n    }\n  };\n  Editor.prototype.removePrevParaMarkRevision = function (currentBlock, isFromDelete) {\n    isFromDelete = isNullOrUndefined(isFromDelete) ? false : isFromDelete;\n    if (this.owner.enableTrackChanges || currentBlock.characterFormat.revisions.length != 0) {\n      var currentPara = currentBlock;\n      var rangeIndex = -1;\n      var revision = void 0;\n      var nonEmptyEndPara = currentPara;\n      if (!isFromDelete && !isNullOrUndefined(nonEmptyEndPara.previousRenderedWidget)) {\n        nonEmptyEndPara = nonEmptyEndPara.previousRenderedWidget;\n      }\n      if (nonEmptyEndPara.characterFormat.revisions.length > 0) {\n        revision = nonEmptyEndPara.characterFormat.revisions[nonEmptyEndPara.characterFormat.revisions.length - 1];\n        rangeIndex = revision.range.indexOf(nonEmptyEndPara.characterFormat);\n      }\n      if (rangeIndex >= 0 && !isNullOrUndefined(revision)) {\n        var lastRange = revision.range[rangeIndex];\n        var isParaMark = lastRange instanceof WCharacterFormat;\n        if (isParaMark) {\n          revision.range.splice(rangeIndex, 1);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n          if (nonEmptyEndPara.characterFormat && nonEmptyEndPara.characterFormat.revisions.indexOf(revision) > -1) {\n            nonEmptyEndPara.characterFormat.revisions.splice(nonEmptyEndPara.characterFormat.revisions.indexOf(revision), 1);\n          }\n          if (revision.range.length == 0) {\n            this.owner.revisionsInternal.remove(revision);\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.isPasteRevertAction = function () {\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.toCheckForTrack = function (block) {\n    if (this.owner.enableTrackChanges && !this.skipTracking()) {\n      if (block instanceof TableWidget && block.childWidgets.length > 0) {\n        var rowFormat = block.childWidgets[0].rowFormat;\n        if (rowFormat.revisions.length > 0 && rowFormat.revisions[0].revisionType !== 'Insertion' && rowFormat.revisions[0].author === (this.owner.currentUser === '' ? 'Guest user' : this.owner.currentUser) || rowFormat.revisions.length === 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeFootnote = function (element, paragraph) {\n    if (element.paragraph.bodyWidget.page.footnoteWidget) {\n      var footnoteWidget = element.paragraph.bodyWidget.page.footnoteWidget;\n      for (var j = 0; j < footnoteWidget.bodyWidgets.length; j++) {\n        if (element === footnoteWidget.bodyWidgets[j].footNoteReference) {\n          footnoteWidget.height -= footnoteWidget.bodyWidgets[j].childWidgets[0].height;\n          if (this.owner.enableTrackChanges) {\n            for (var i = 0; i < footnoteWidget.bodyWidgets[j].childWidgets.length; i++) {\n              this.removeRevisionForBlock(footnoteWidget.bodyWidgets[j].childWidgets[i], undefined, false, true);\n            }\n          }\n          footnoteWidget.bodyWidgets.splice(j, 1);\n          j--;\n          this.isFootnoteElementRemoved = true;\n        }\n      }\n      if (footnoteWidget.bodyWidgets.length === 0) {\n        element.paragraph.bodyWidget.page.footnoteWidget = undefined;\n      }\n    }\n    this.documentHelper.footnoteCollection.splice(this.documentHelper.footnoteCollection.indexOf(element), 1);\n    this.updateFootNoteIndex();\n  };\n  Editor.prototype.removeEndnote = function (element, paragraph) {\n    var lastpage = this.documentHelper.pages.length;\n    var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n    if (bodyWidget.page.endnoteWidget) {\n      var endnoteWidget = bodyWidget.page.endnoteWidget;\n      for (var j = 0; j < endnoteWidget.bodyWidgets.length; j++) {\n        if (element === endnoteWidget.bodyWidgets[j].footNoteReference) {\n          endnoteWidget.height -= endnoteWidget.bodyWidgets[j].childWidgets[0].height;\n          endnoteWidget.bodyWidgets.splice(j, 1);\n          this.isEndnoteElementRemoved = true;\n          j--;\n        }\n      }\n      if (endnoteWidget.bodyWidgets.length === 0) {\n        bodyWidget.page.endnoteWidget = undefined;\n      }\n    }\n    this.documentHelper.endnoteCollection.splice(this.documentHelper.endnoteCollection.indexOf(element), 1);\n    this.updateEndNoteIndex();\n  };\n  Editor.prototype.removeAutoShape = function (inline) {\n    var shapeIndex = inline.line.paragraph.floatingElements.indexOf(inline);\n    var floatingElementIndex = inline.line.paragraph.bodyWidget.floatingElements.indexOf(inline);\n    if (floatingElementIndex > -1) {\n      inline.line.paragraph.bodyWidget.floatingElements.splice(floatingElementIndex, 1);\n    }\n    inline.line.paragraph.floatingElements.splice(shapeIndex, 1);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeField = function (block, isBookmark, isContentControl) {\n    var collection = this.documentHelper.fields;\n    if (isBookmark) {\n      collection = this.documentHelper.bookmarks.keys;\n    } else if (isContentControl) {\n      collection = this.documentHelper.contentControlCollection;\n    }\n    if (block.floatingElements.length > 0) {\n      for (var z = 0; z < block.floatingElements.length; z++) {\n        var inline = block.floatingElements[z];\n        this.removeAutoShape(inline);\n        z--;\n      }\n    }\n    for (var i = 0; i < collection.length; i++) {\n      var element = isBookmark ? this.documentHelper.bookmarks.get(collection[i]) : collection[i];\n      if (element.line.paragraph === block || element instanceof BookmarkElementBox && !isNullOrUndefined(element.reference) && element.reference.line.paragraph === block) {\n        if (isBookmark) {\n          this.documentHelper.bookmarks.remove(collection[i]);\n          element.line.children.splice(element.indexInOwner, 1);\n          if (!isNullOrUndefined(element.line.paragraph.associatedCell)) {\n            var cell = element.line.paragraph.associatedCell;\n            cell.isRenderBookmarkStart ? cell.isRenderBookmarkStart = false : cell.isRenderBookmarkEnd = false;\n          }\n          var endBookMarkElement = element.reference;\n          if (endBookMarkElement) {\n            endBookMarkElement.line.children.splice(endBookMarkElement.indexInOwner, 1);\n          }\n          if (endBookMarkElement && !isNullOrUndefined(endBookMarkElement.line.paragraph.associatedCell)) {\n            var cell = endBookMarkElement.line.paragraph.associatedCell;\n            cell.isRenderBookmarkStart ? cell.isRenderBookmarkStart = false : cell.isRenderBookmarkEnd = false;\n          }\n        } else if (isContentControl) {\n          this.documentHelper.contentControlCollection.splice(i, 1);\n        } else {\n          this.documentHelper.fields.splice(i, 1);\n          if (this.documentHelper.formFields.indexOf(element) !== -1) {\n            this.documentHelper.formFields.splice(this.documentHelper.formFields.indexOf(element), 1);\n          }\n        }\n        i--;\n      }\n    }\n    if (this.documentHelper.footnoteCollection.length > 0) {\n      for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n        var element = this.documentHelper.footnoteCollection[i];\n        if (element.line.paragraph === block) {\n          if (element.paragraph.bodyWidget.page.footnoteWidget) {\n            var footnote = element.paragraph.bodyWidget.page.footnoteWidget;\n            for (var j = 0; j < footnote.bodyWidgets.length; j++) {\n              if (element === footnote.bodyWidgets[j].footNoteReference) {\n                footnote.height -= footnote.bodyWidgets[j].height;\n                footnote.bodyWidgets.splice(j, 1);\n                j--;\n              }\n            }\n            if (footnote.bodyWidgets.length === 0) {\n              element.paragraph.bodyWidget.page.footnoteWidget = undefined;\n            }\n          }\n          this.documentHelper.footnoteCollection.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    if (this.documentHelper.endnoteCollection.length > 0) {\n      for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n        var element = this.documentHelper.endnoteCollection[i];\n        if (element.line.paragraph === block) {\n          if (element.paragraph.bodyWidget.page.endnoteWidget) {\n            var endnote = element.paragraph.bodyWidget.page.endnoteWidget;\n            for (var j = 0; j < endnote.bodyWidgets.length; j++) {\n              if (element === endnote.bodyWidgets[j].footNoteReference) {\n                endnote.height -= endnote.bodyWidgets[j].height;\n                endnote.bodyWidgets.splice(j, 1);\n                j--;\n              }\n            }\n            if (endnote.bodyWidgets.length === 0) {\n              element.paragraph.bodyWidget.page.endnoteWidget = undefined;\n            }\n          }\n          this.documentHelper.endnoteCollection.splice(i, 1);\n          i--;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getTabsInSelection = function () {\n    var oldTabstops = [];\n    var selection = this.owner.selectionModule;\n    var selectedWidgets = selection.selectedWidgets.keys;\n    var paragraphsInSelection = [];\n    if (selectedWidgets.length === 0) {\n      return selection.start.paragraph.paragraphFormat.getUpdatedTabs();\n    } else if (selection.start.paragraph === selection.end.paragraph) {\n      return selection.start.paragraph.paragraphFormat.getUpdatedTabs();\n    } else if (selection.start.paragraph !== selection.end.paragraph) {\n      paragraphsInSelection = this.owner.selectionModule.getParagraphsInSelection();\n    }\n    var para = paragraphsInSelection.length > 0 ? paragraphsInSelection[0] : undefined;\n    var tabs = !isNullOrUndefined(para) ? para.paragraphFormat.getUpdatedTabs() : [];\n    var isRemove = true;\n    for (var j = 0; j < tabs.length; j++) {\n      oldTabstops.push(tabs[j]);\n    }\n    for (var i = 1; i < paragraphsInSelection.length; i++) {\n      var para_1 = paragraphsInSelection[i];\n      var newCollection = para_1.paragraphFormat.getUpdatedTabs();\n      var itemsToRemove = [];\n      isRemove = true;\n      for (var k = 0; k < oldTabstops.length; k++) {\n        for (var j = 0; j < newCollection.length; j++) {\n          if (newCollection[j].equals(oldTabstops[k])) {\n            isRemove = false;\n            break;\n          }\n        }\n        if (isRemove) {\n          itemsToRemove.push(oldTabstops[k]);\n        }\n      }\n      for (var k = 0; k < itemsToRemove.length; k++) {\n        oldTabstops.splice(oldTabstops.indexOf(itemsToRemove[k]), 1);\n      }\n    }\n    return oldTabstops;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.updateTabStopCollection = function (paragraph, newCollection, isReplace) {\n    var oldCollection = paragraph.paragraphFormat.tabs;\n    if (isReplace) {\n      paragraph.paragraphFormat.tabs = [];\n      for (var i = 0; i < newCollection.length; i++) {\n        paragraph.paragraphFormat.tabs.push(newCollection[i]);\n      }\n      return;\n    }\n    for (var i = 0; i < newCollection.length; i++) {\n      var newTab = newCollection[i];\n      var index = -1;\n      for (var j = 0; j < oldCollection.length; j++) {\n        var oldTab = oldCollection[j];\n        if (newTab.position === oldTab.position) {\n          index = j;\n          break;\n        } else if (newTab.position < oldTab.position) {\n          break;\n        }\n      }\n      if (index >= 0) {\n        this.modifyTabStop(oldCollection[index], newTab);\n      } else {\n        this.addTabStopToCollection(oldCollection, newTab);\n      }\n    }\n  };\n  Editor.prototype.modifyTabStop = function (oldTab, newTab) {\n    oldTab.deletePosition = newTab.deletePosition;\n    oldTab.tabJustification = newTab.tabJustification;\n    oldTab.tabLeader = newTab.tabLeader;\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeTabStops = function (paragraphs, tabs) {\n    for (var k = 0; k < paragraphs.length; k++) {\n      var tabCollection = paragraphs[k].paragraphFormat.tabs;\n      for (var i = 0; i < tabs.length; i++) {\n        var tab = tabs[i];\n        for (var j = 0; j < tabCollection.length; j++) {\n          if (tabCollection[j].equals(tab)) {\n            tabCollection.splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.addTabStopToCollection = function (collection, tab, isReturnIndex) {\n    var index = -1;\n    for (var i = 0; i < collection.length; i++) {\n      var element = collection[i];\n      if (element.position > tab.position) {\n        index = i;\n        break;\n      }\n    }\n    index = index === -1 ? collection.length : index;\n    if (isReturnIndex) {\n      return index;\n    }\n    collection.splice(index, 0, tab.clone());\n    return index;\n  };\n  /**\n   * @private\n   * @param {IWidget} node Specifies the node.\n   * @returns {void}\n   */\n  Editor.prototype.addRemovedNodes = function (node, isInsertBefore) {\n    if (node instanceof CommentCharacterElementBox && node.commentType === 0 && node.commentMark) {\n      node.removeCommentMark();\n    }\n    if (node instanceof ContentControl && node.type === 0) {\n      this.documentHelper.contentControlCollection.splice(this.documentHelper.contentControlCollection.indexOf(node), 1);\n    }\n    if (node instanceof FieldElementBox && node.fieldType === 0) {\n      if (this.documentHelper.fields.indexOf(node) !== -1) {\n        this.documentHelper.fields.splice(this.documentHelper.fields.indexOf(node), 1);\n      }\n      if (this.documentHelper.formFields.indexOf(node) !== -1) {\n        this.documentHelper.formFields.splice(this.documentHelper.formFields.indexOf(node), 1);\n      }\n    }\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      if (isInsertBefore) {\n        this.editorHistory.currentBaseHistoryInfo.removedNodes.splice(0, 0, node);\n      } else {\n        this.editorHistory.currentBaseHistoryInfo.removedNodes.push(node);\n      }\n    } else if (this.editHyperlinkInternal) {\n      this.nodes.push(node);\n    }\n  };\n  Editor.prototype.deleteBlock = function (block, selection, start, end, editAction) {\n    if (block instanceof ParagraphWidget) {\n      this.deletePara(block, start, end, editAction);\n      if (this.delBlockContinue && this.delBlock) {\n        if (this.delSection) {\n          var bodyWidget = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n          this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n          this.delSection = undefined;\n        }\n        if (this.delBlock.indexInOwner !== -1) {\n          this.deleteBlock(this.delBlock, selection, start, end, editAction);\n        }\n        this.delBlockContinue = false;\n        this.delBlock = undefined;\n      }\n    } else {\n      this.deleteTableBlock(block, selection, start, end, editAction);\n      if (this.owner.enableTrackChanges && !this.skipTracking()) {\n        this.documentHelper.layout.reLayoutTable(block);\n      }\n    }\n  };\n  Editor.prototype.deleteTableCell = function (cellAdv, selection, start, end, editAction, isDeletecell) {\n    var deletePreviousBlock = !(start.paragraph.isInsideTable && cellAdv.ownerTable.contains(start.paragraph.associatedCell));\n    var previousBlock = cellAdv.ownerTable.previousRenderedWidget;\n    if (start.paragraph.isInsideTable) {\n      var containerCell = selection.getContainerCellOf(cellAdv, start.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(start.paragraph.associatedCell)) {\n        var startCell = selection.getSelectedCell(cellAdv, containerCell);\n        var endCell = selection.getSelectedCell(start.paragraph.associatedCell, containerCell);\n        if (selection.containsCell(containerCell, start.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (selection.isCellSelected(containerCell, start, end)) {\n            //Container cell is completely selected.\n            this.updateEditPosition(containerCell, selection);\n            if (editAction === 1 || isDeletecell) {\n              //Specifically handled for backspace. Delete selected cell in current table.\n              this.deleteCellsInTable(cellAdv.ownerRow.ownerTable, selection, start, end, editAction);\n            } else {\n              //Delete contents within table cell or Copy contents within table cell to clipboard.\n              var isCellCleared = this.deleteCell(containerCell, selection, editAction, true);\n              if (!isCellCleared && editAction !== 2 && this.editorHistory) {\n                this.editorHistory.currentBaseHistoryInfo = undefined;\n              } else if (isCellCleared) {\n                this.documentHelper.layout.reLayoutTable(containerCell.ownerRow.ownerTable);\n              }\n            }\n          } else {\n            if (startCell === containerCell) {\n              this.deletePara(end.paragraph, start, end, editAction);\n              if (this.delBlockContinue && this.delBlock) {\n                if (this.delSection) {\n                  var para = end.paragraph;\n                  var bodyWidget = para.bodyWidget instanceof BodyWidget ? para.bodyWidget : undefined;\n                  this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n                  this.delSection = undefined;\n                }\n                this.deleteBlock(this.delBlock, selection, start, end, editAction);\n                this.delBlockContinue = false;\n                this.delBlock = undefined;\n              }\n            } else {\n              this.deleteContainer(startCell, selection, start, end, editAction);\n            }\n          }\n        } else {\n          if (editAction === 2) {\n            //Delete contents within table cell.\n            this.deleteCell(cellAdv, selection, 2, false);\n          } else {\n            //Delete other selected cells in current table.\n            this.deleteCellsInTable(containerCell.ownerTable, selection, start, end, editAction);\n          }\n        }\n      } else {\n        //Selection end is different table.\n        this.deleteContainer(containerCell, selection, start, end, editAction);\n      }\n    } else {\n      //Selection end is outside table.\n      var cell = selection.getContainerCell(cellAdv);\n      //Added the condition to remove the entire table when the selection contains a table with the above paragraph.\n      if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n        this.deleteTableBlock(cell.ownerTable, selection, start, end, editAction);\n        deletePreviousBlock = false;\n      } else {\n        this.deleteContainer(cell, selection, start, end, editAction);\n      }\n    }\n    if (deletePreviousBlock) {\n      var sectionAdv = previousBlock.bodyWidget instanceof BodyWidget ? previousBlock.bodyWidget : undefined;\n      // this.deleteContent(cellAdv.ownerTable, selection, editAction);\n      if (!isNullOrUndefined(previousBlock)) {\n        // let nextSection: WSection = blockAdv.section instanceof WSection ? blockAdv.section as WSection : undefined;\n        // if (sectionAdv !== nextSection) {\n        //     this.deleteSection(selection, sectionAdv, nextSection, editAction);\n        // }\n        //Goto the next block.\n        this.deleteBlock(previousBlock, selection, start, end, editAction);\n      }\n    }\n  };\n  Editor.prototype.deleteCellsInTable = function (table, selection, start, end, editAction, endCells) {\n    var clonedTable = undefined;\n    var action = 'Delete';\n    var isDeleteCells = false;\n    var startCell = start.paragraph.associatedCell;\n    var endCell = end.paragraph.associatedCell;\n    if (!isNullOrUndefined(endCells)) {\n      endCell = endCells;\n    }\n    var startColumnIndex = startCell.columnIndex;\n    var endColumnIndex = endCell.columnIndex + endCell.cellFormat.columnSpan - 1;\n    var startRowIndex = startCell.rowIndex;\n    var endRowIndex = endCell.rowIndex;\n    var isRowSelected = this.isWholeRowSelected(startCell.ownerRow, startColumnIndex, endColumnIndex);\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      action = this.editorHistory.currentBaseHistoryInfo.action;\n      isDeleteCells = this.editorHistory.currentBaseHistoryInfo.action === 'BackSpace' || this.editorHistory.currentBaseHistoryInfo.action === 'DeleteCells' || this.editorHistory.currentBaseHistoryInfo.action === 'InsertTable' || this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack' || isNullOrUndefined(startCell.ownerRow.previousWidget) && isNullOrUndefined(endCell.ownerRow.nextWidget) && this.editorHistory.currentBaseHistoryInfo.action === 'Cut';\n      clonedTable = this.cloneTableToHistoryInfo(table);\n      if (this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack') {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n          var row = table.childWidgets[i];\n          if (row.index >= startRowIndex && row.index <= endRowIndex) {\n            if (isRowSelected) {\n              this.trackRowDeletion(row, false);\n            }\n          }\n        }\n      }\n      if (this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack') {\n        return;\n      }\n      this.editorHistory.currentBaseHistoryInfo.action = isDeleteCells ? 'DeleteCells' : 'ClearCells';\n      selection.owner.isLayoutEnabled = false;\n    }\n    //let cells: TableCellWidget[] = [];\n    if (this.owner.enableTrackChanges && !this.skipTracking()) {\n      if (!isRowSelected) {\n        var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n        var tiltle = localizeValue.getConstant('UnTrack');\n        var content = localizeValue.getConstant('Merge Track');\n        localizeValue.setLocale(this.owner.locale);\n        this.alertDialog = DialogUtility.alert({\n          title: tiltle,\n          content: content,\n          showCloseIcon: true,\n          okButton: {\n            text: 'Ok',\n            click: this.onConfirmedTableCellsDeletion.bind(this, table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action)\n          },\n          closeOnEscape: true,\n          position: {\n            X: 'center',\n            Y: 'center'\n          },\n          animationSettings: {\n            effect: 'Zoom'\n          }\n        });\n        this.alertDialog.enableRtl = this.owner.enableRtl;\n      } else {\n        this.onConfirmedTableCellsDeletion(table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action);\n      }\n    } else {\n      this.onConfirmedTableCellsDeletion(table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action);\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeDeletedCellRevision = function (row) {\n    if (row.rowFormat.revisions.length > 0) {\n      this.unlinkRangeFromRevision(row.rowFormat, true);\n    }\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cellWidget = row.childWidgets[i];\n      for (var j = 0; j < cellWidget.childWidgets.length; j++) {\n        var paraWidget = cellWidget.childWidgets[j];\n        if (!isNullOrUndefined(paraWidget) && paraWidget instanceof ParagraphWidget) {\n          for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n            var lineWidget = paraWidget.childWidgets[lineIndex];\n            if (!isNullOrUndefined(lineWidget.children)) {\n              for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                var element = lineWidget.children[elementIndex];\n                if (element.revisions.length > 0) {\n                  this.unlinkRangeFromRevision(element, true);\n                }\n              }\n            }\n          }\n          this.unlinkRangeFromRevision(paraWidget.characterFormat, true);\n        } else if (!isNullOrUndefined(paraWidget) && paraWidget instanceof TableWidget) {\n          for (var k = 0; k < paraWidget.childWidgets.length; k++) {\n            var tableRow = paraWidget.childWidgets[k];\n            this.removeDeletedCellRevision(tableRow);\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.onConfirmedTableCellsDeletion = function (table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      var canRemoveRow = false;\n      if (row.index >= startRowIndex && row.index <= endRowIndex) {\n        if (this.owner.enableTrackChanges && !this.skipTracking()) {\n          if (isRowSelected) {\n            canRemoveRow = this.trackRowDeletion(row, false);\n            if (canRemoveRow) {\n              this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n            }\n          } else {\n            this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n          }\n        } else {\n          this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n        }\n      }\n      if (!canRemoveRow && row.childWidgets.length === 0) {\n        var rowToRemove = table.childWidgets[i];\n        var prevRenderedRow = rowToRemove.previousRenderedWidget;\n        while (!isNullOrUndefined(prevRenderedRow)) {\n          for (var k = 0; k < prevRenderedRow.childWidgets.length; k++) {\n            var cell = prevRenderedRow.childWidgets[k];\n            if (rowToRemove.rowIndex < cell.ownerRow.rowIndex + cell.cellFormat.rowSpan) {\n              cell.cellFormat.rowSpan--;\n            }\n          }\n          prevRenderedRow = prevRenderedRow.previousRenderedWidget;\n        }\n        this.updateNextBlocksIndex(rowToRemove, false);\n        table.childWidgets.splice(i, 1);\n        i--;\n        endRowIndex--;\n      }\n    }\n    //Layouts the table after delete cells.\n    selection.owner.isLayoutEnabled = true;\n    if (table.childWidgets.length === 0) {\n      selection.editPosition = this.selection.getHierarchicalIndex(table, '0');\n      this.setActionInternal(selection, action);\n      this.removeBlock(table);\n    } else {\n      // Before lay outing need to update table grid.\n      table.isGridUpdated = false;\n      table.buildTableColumns();\n      table.isGridUpdated = true;\n      this.documentHelper.layout.reLayoutTable(table);\n    }\n    if (!isNullOrUndefined(this.alertDialog)) {\n      var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n      selection.selectContent(textPosition, true);\n      this.reLayout(selection);\n      this.alertDialog.close();\n      this.alertDialog = undefined;\n    }\n  };\n  Editor.prototype.onConfirmedCellDeletion = function (row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction) {\n    var isStarted = false;\n    var isCellCleared = false;\n    this.removeDeletedCellRevision(row);\n    for (var j = 0; j < row.childWidgets.length; j++) {\n      var cell = row.childWidgets[j];\n      //this.removeRevisionForCell(cell, true);\n      if (cell.columnIndex >= startColumnIndex && cell.columnIndex <= endColumnIndex) {\n        if (!isStarted) {\n          this.updateEditPosition(cell, selection);\n          isStarted = true;\n        }\n        if (isDeleteCells) {\n          //Specific for Backspace and Cut if selection includes all rows.\n          var cell_1 = row.childWidgets[j];\n          this.updateNextBlocksIndex(cell_1, false);\n          for (var k = 0; k < cell_1.childWidgets.length; k++) {\n            var para = cell_1.childWidgets[k];\n            for (var l = 0; l < para.childWidgets.length; l++) {\n              var block = para.childWidgets[l];\n              if (block instanceof LineWidget) {\n                var line = block;\n                for (var j_2 = 0; j_2 < line.children.length; j_2++) {\n                  var element = line.children[j_2];\n                  if (element instanceof FootnoteElementBox) {\n                    this.removeFootnote(element);\n                  }\n                }\n              }\n            }\n          }\n          row.childWidgets.splice(j, 1);\n          j--;\n        } else if (editAction < 4) {\n          isCellCleared = this.deleteCell(cell, selection, editAction, false);\n        }\n      }\n    }\n  };\n  Editor.prototype.removeRevisionForRow = function (rowWidget) {\n    if (rowWidget.rowFormat.revisions.length > 0 && this.skipTracking()) {\n      this.unlinkRangeFromRevision(rowWidget.rowFormat, true);\n      this.addRemovedRevisionInfo(rowWidget.rowFormat, undefined);\n    }\n  };\n  Editor.prototype.removeRevisionsInRow = function (rowWidget) {\n    if (rowWidget.rowFormat.revisions.length > 0) {\n      for (var i = 0; i < rowWidget.rowFormat.revisions.length; i++) {\n        var rowRevision = rowWidget.rowFormat.revisions[i];\n        this.unlinkWholeRangeInRevision(rowWidget.rowFormat, rowRevision);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeRevisionForCell = function (cellWidget, removeCollection) {\n    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n      if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n        var paraWidget = cellWidget.childWidgets[i];\n        for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n          var lineWidget = paraWidget.childWidgets[lineIndex];\n          for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n            var currentElement = lineWidget.children[elementIndex];\n            if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n              this.unlinkRangeFromRevision(currentElement, removeCollection);\n              this.addRemovedRevisionInfo(currentElement, undefined);\n            }\n          }\n        }\n      } else if (cellWidget.childWidgets[i] instanceof TableWidget) {\n        this.removeRevisionForInnerTable(cellWidget.childWidgets[i]);\n      }\n    }\n  };\n  Editor.prototype.removeRevisionForInnerTable = function (tableWidget) {\n    if (tableWidget.childWidgets.length > 0) {\n      for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n        var row = tableWidget.childWidgets[i];\n        if (!isNullOrUndefined(row)) {\n          this.removeRevisionForRow(row);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeRevisionForBlock = function (paraWidget, revision, skipParaMark, addToRevisionInfo) {\n    if (paraWidget.characterFormat.revisions.length > 0 && !skipParaMark) {\n      if (addToRevisionInfo) {\n        this.addRemovedRevisionInfo(paraWidget.characterFormat, undefined, false);\n      }\n      if (isNullOrUndefined(revision)) {\n        this.unlinkRangeFromRevision(paraWidget.characterFormat, true);\n      } else {\n        this.unlinkRangeByRevision(paraWidget.characterFormat, revision);\n      }\n      paraWidget.characterFormat.revisions = [];\n    }\n    if (!isNullOrUndefined(paraWidget)) {\n      for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n        var lineWidget = paraWidget.childWidgets[lineIndex];\n        for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n          var currentElement = lineWidget.children[elementIndex];\n          if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n            if (addToRevisionInfo) {\n              this.addRemovedRevisionInfo(currentElement, undefined, false);\n            }\n            if (isNullOrUndefined(revision)) {\n              this.unlinkRangeFromRevision(currentElement, true);\n            } else {\n              this.unlinkRangeByRevision(currentElement, revision);\n            }\n            currentElement.revisions = [];\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.unlinkRangeByRevision = function (item, revision) {\n    for (var i = 0; i < item.revisions.length; i++) {\n      var currentRevision = item.revisions[i];\n      if (currentRevision.author === revision.author && currentRevision.revisionType === revision.revisionType) {\n        item.revisions.splice(item.revisions.indexOf(revision), 1);\n        var rangeIndex = revision.range.indexOf(item);\n        revision.range.splice(rangeIndex, 1);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      }\n    }\n  };\n  Editor.prototype.isWholeRowSelected = function (ownerRow, startColumnIndex, endColumnIndex) {\n    var columnCount = startColumnIndex + endColumnIndex;\n    if (startColumnIndex === 0 && ownerRow.childWidgets.length - 1 === columnCount) {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.deleteCell = function (cell, selection, editAction, copyChildToClipboard) {\n    //Checks whether this is last paragraph of owner textbody.\n    var block = cell.childWidgets[0];\n    if (cell.childWidgets.length === 1 && block instanceof ParagraphWidget && block.isEmpty()) {\n      return false;\n    }\n    var totalLength = cell.childWidgets.length - 1;\n    for (var i = cell.childWidgets.length - 1; i > -1; i--) {\n      block = cell.childWidgets[i];\n      if (editAction < 4) {\n        //Checks whether this is last paragraph of owner textbody.\n        if (block instanceof ParagraphWidget && i === totalLength) {\n          //Preserves empty paragraph, to ensure minimal content.\n          var paragraph = block;\n          //Removes all the inlines in the paragraph.\n          if (!this.checkClearCells(selection)) {\n            for (var j = paragraph.childWidgets.length - 1; j >= 0; j--) {\n              var inline = paragraph.childWidgets[j];\n              for (var k = inline.children.length - 1; k >= 0; k--) {\n                var element = inline.children[k];\n                if (element instanceof FootnoteElementBox) {\n                  this.removeFootnote(element);\n                } else if (element instanceof BookmarkElementBox && element.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                  this.documentHelper.bookmarks.remove(element.name);\n                }\n                this.unLinkFieldCharacter(element);\n                inline.children.splice(k, 1);\n              }\n              if (paragraph.childWidgets.length > 1) {\n                paragraph.childWidgets.splice(j, 1);\n              }\n            }\n          } else if (!paragraph.isEmpty()) {\n            this.removeInlines(paragraph, paragraph.firstChild, 0, paragraph.lastChild, paragraph.lastChild.getEndOffset(), editAction);\n          }\n          continue;\n        }\n        this.removeBlock(block);\n        if (this.checkClearCells(selection)) {\n          this.addRemovedNodes(block);\n          if (cell.childWidgets.length === 1) {\n            //Add Index for line Widget\n            selection.editPosition = this.selection.getHierarchicalIndex(cell.childWidgets[0], '0');\n            this.updateHistoryPosition(selection.editPosition, true);\n          }\n        }\n      }\n    }\n    return true;\n  };\n  Editor.prototype.paragrapghBookmarkCollection = function (block, existingBookmark) {\n    var bookmarkCol = this.documentHelper.bookmarks;\n    for (var i = 0; i < bookmarkCol.length; i++) {\n      var bookmark = this.documentHelper.bookmarks.get(bookmarkCol.keys[i]);\n      if (bookmark.paragraph === block) {\n        existingBookmark.push(bookmark);\n      }\n    }\n    return existingBookmark;\n  };\n  Editor.prototype.deleteContainer = function (cell, selection, start, end, editAction) {\n    var ownerTable = cell.ownerTable;\n    if (selection.containsRow(ownerTable.lastChild, end.paragraph.associatedCell) && !this.owner.enableTrackChanges) {\n      this.deleteContent(ownerTable, selection, editAction);\n    } else {\n      if (this.toCheckForTrack(ownerTable)) {\n        this.cloneTableToHistoryInfo(ownerTable);\n        for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n          var inline = ownerTable.childWidgets[i];\n          this.trackRowDeletion(inline);\n          if (end.paragraph.isInsideTable && selection.containsRow(inline, end.paragraph.associatedCell)) {\n            this.documentHelper.layout.reLayoutTable(ownerTable);\n            return;\n          }\n        }\n      } else {\n        for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n          var row = ownerTable.childWidgets[i];\n          if (editAction < 4) {\n            this.updateNextBlocksIndex(row, false);\n            ownerTable.childWidgets.splice(i, 1);\n            this.addRemovedNodes(row);\n            i--;\n          }\n          if (end.paragraph.isInsideTable && selection.containsRow(row, end.paragraph.associatedCell)) {\n            this.documentHelper.layout.reLayoutTable(ownerTable);\n            return;\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.deleteTableBlock = function (table, selection, start, end, editAction) {\n    table = table.combineWidget(this.owner.viewer);\n    if (start.paragraph.isInsideTable && table.contains(start.paragraph.associatedCell)) {\n      var block = table.previousRenderedWidget;\n      var previousBlock = this.checkAndInsertBlock(table, start, end, editAction, block instanceof ParagraphWidget ? block : undefined);\n      if (selection.containsRow(table.firstChild, start.paragraph.associatedCell)) {\n        if (this.owner.enableTrackChanges) {\n          this.cloneTableToHistoryInfo(table);\n          for (var i = 0; i < table.childWidgets.length; i++) {\n            this.trackRowDeletion(table.childWidgets[i]);\n          }\n          // Added the condition to remove the entire table when the selection contains a table with the below paragraph.\n          if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n            this.removeBlock(table);\n          }\n        } else {\n          this.deleteContent(table, selection, editAction);\n        }\n      } else {\n        if (this.owner.enableTrackChanges) {\n          if (isNullOrUndefined(end.paragraph.associatedCell) && !end.paragraph.isInsideTable) {\n            var previousChild = end.paragraph.previousRenderedWidget.lastChild;\n            var endCells = previousChild.lastChild;\n            this.deleteCellsInTable(table, selection, start, end, editAction, endCells);\n          }\n        } else {\n          var newTable = this.splitTable(table, start.paragraph.associatedCell.ownerRow);\n          this.deleteContent(table, selection, editAction);\n          this.documentHelper.layout.layoutBodyWidgetCollection(newTable.index, newTable.containerWidget, newTable, false);\n        }\n      }\n      if (!isNullOrUndefined(previousBlock)) {\n        selection.editPosition = this.selection.getHierarchicalIndex(previousBlock, '0');\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n          this.editorHistory.currentBaseHistoryInfo.endPosition = selection.editPosition;\n        }\n      }\n    } else {\n      var blockAdv = table.previousRenderedWidget;\n      var sectionAdv = table.bodyWidget instanceof BodyWidget ? table.bodyWidget : undefined;\n      if (this.owner.enableTrackChanges) {\n        this.cloneTableToHistoryInfo(table);\n        for (var i = 0; i < table.childWidgets.length; i++) {\n          this.trackRowDeletion(table.childWidgets[i]);\n        }\n        if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n          this.removeBlock(table);\n        }\n      } else {\n        this.deleteContent(table, selection, editAction);\n      }\n      if (!isNullOrUndefined(blockAdv)) {\n        // let nextSection: WSection = blockAdv.section instanceof WSection ? blockAdv.section as WSection : undefined;\n        // if (sectionAdv !== nextSection) {\n        //     this.deleteSection(selection, sectionAdv, nextSection, editAction);\n        // }\n        //Goto the next block.\n        this.deleteBlock(blockAdv, selection, start, end, editAction);\n      }\n    }\n  };\n  Editor.prototype.splitTable = function (table, splitEndRow) {\n    var newTable = new TableWidget();\n    newTable.tableFormat.copyFormat(table.tableFormat);\n    newTable.index = table.index;\n    //Moves the rows to new table.\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row === splitEndRow) {\n        break;\n      }\n      newTable.childWidgets.push(row);\n      row.containerWidget = newTable;\n      table.childWidgets.splice(i, 1);\n      i--;\n    }\n    //Inserts new table in the current text position.\n    var insertIndex = table.getIndex();\n    table.containerWidget.childWidgets.splice(insertIndex, 0, newTable);\n    newTable.containerWidget = table.containerWidget;\n    this.updateNextBlocksIndex(newTable, true);\n    return newTable;\n  };\n  Editor.prototype.updateEditPosition = function (cell, selection) {\n    var firstParagraph = this.documentHelper.getFirstParagraphInCell(cell);\n    selection.editPosition = this.selection.getHierarchicalIndex(firstParagraph, '0');\n  };\n  Editor.prototype.deleteContent = function (table, selection, editAction) {\n    if (editAction < 4) {\n      this.removeBlock(table);\n      this.addRemovedNodes(table);\n    }\n  };\n  Editor.prototype.setActionInternal = function (selection, action) {\n    if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      this.editorHistory.currentBaseHistoryInfo.action = action;\n    }\n  };\n  Editor.prototype.checkClearCells = function (selection) {\n    return this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action !== 'ClearCells';\n  };\n  Editor.prototype.isEndInAdjacentTable = function (paragraph, endParagraph) {\n    var start = this.selection.getHierarchicalIndex(paragraph, '');\n    var end = this.selection.getHierarchicalIndex(endParagraph, '');\n    var selectionStart = start.split(';');\n    var selectionEnd = end.split(';');\n    return selectionStart.length < selectionEnd.length;\n  };\n  /**\n   * @private\n   * @param table\n   * @returns {TableWidget}\n   */\n  Editor.prototype.cloneTableToHistoryInfo = function (table) {\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      //Clones the entire table to preserve in history.\n      var clonedTable = table.clone();\n      clonedTable.index = table.index;\n      //Preserves the cloned table in history info, for future undo operation.\n      this.editorHistory.currentBaseHistoryInfo.removedNodes.push(clonedTable);\n      //Sets the insert position in history info as current table.\n      if (this.documentHelper.selection.start.paragraph.isInsideTable && this.documentHelper.selection.start.paragraph.associatedCell.ownerTable === table) {\n        this.updateHistoryPosition(this.selection.getHierarchicalIndex(table, '0'), true);\n      }\n      return clonedTable;\n    }\n    return undefined;\n  };\n  Editor.prototype.insertParagraphPaste = function (paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock, skipHistoryCollection) {\n    if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n      var nextParagraph = this.selection.getNextParagraphBlock(currentParagraph);\n      if (nextParagraph) {\n        if (start.offset > 0 && nextParagraph === end.paragraph && paragraph === start.paragraph && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n          //Combines the current paragraph with end paragraph specific for undo/redo paste action.\n          var insertIndex = 0;\n          this.removeBlock(currentParagraph);\n          this.documentHelper.layout.clearListElementBox(nextParagraph);\n          this.documentHelper.layout.clearListElementBox(currentParagraph);\n          for (var i = 0; i < currentParagraph.childWidgets.length; i++) {\n            var line = currentParagraph.childWidgets[i];\n            nextParagraph.childWidgets.splice(insertIndex, 0, line);\n            currentParagraph.childWidgets.splice(i, 1);\n            i--;\n            insertIndex++;\n            line.paragraph = nextParagraph;\n          }\n          this.documentHelper.layout.reLayoutParagraph(nextParagraph, 0, 0);\n          isCombineNextParagraph = false;\n          var offset = this.selection.editPosition.substring(this.selection.editPosition.lastIndexOf(';') + 1);\n          this.selection.editPosition = this.selection.getHierarchicalIndex(nextParagraph, offset);\n        }\n      }\n    }\n    if (isCombineNextParagraph) {\n      this.deleteParagraphMark(currentParagraph, this.selection, editAction, false, isCombineLastBlock, skipHistoryCollection);\n    }\n  };\n  Editor.prototype.removeInlines = function (paragraph, startLine, startOffset, endLine, endOffset, editAction) {\n    var isRemoved = false;\n    this.documentHelper.layout.clearListElementBox(paragraph);\n    var startIndex = paragraph.childWidgets.indexOf(startLine);\n    var startPosition = this.selection.start.clone();\n    var endPosition = this.selection.end.clone();\n    var editPosition = this.selection.editPosition;\n    for (var i = paragraph.childWidgets.length - 1; i >= 0; i--) {\n      var lineWidget = paragraph.childWidgets[i];\n      if (startLine === lineWidget && endLine === lineWidget) {\n        this.removeContent(lineWidget, startOffset, endOffset, editAction);\n        isRemoved = true;\n        break;\n      }\n      if (endLine === lineWidget) {\n        paragraph.isLayouted = false;\n        isRemoved = true;\n        this.removeContent(lineWidget, 0, endOffset, editAction);\n      } else if (startLine === lineWidget) {\n        this.removeContent(lineWidget, startOffset, this.documentHelper.selection.getLineLength(lineWidget), editAction);\n        break;\n      } else if (isRemoved) {\n        this.removeContent(lineWidget, 0, this.documentHelper.selection.getLineLength(lineWidget), editAction);\n      }\n    }\n    if (this.owner.enableTrackChanges && !this.skipTracking()) {\n      this.selection.start.setPositionInternal(startPosition);\n      this.selection.end.setPositionInternal(endPosition);\n      if (this.skipReplace) {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = undefined;\n        this.updateInsertPosition();\n      }\n      this.selection.editPosition = editPosition;\n    }\n    if (isRemoved) {\n      paragraph.isLayouted = true;\n      this.removeEmptyLine(paragraph);\n      this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n    }\n  };\n  Editor.prototype.skipTracking = function () {\n    if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n      return true;\n    } else if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && (this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' || this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change')) {\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.canHandleDeletion = function () {\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'DeleteRow') {\n      return true;\n    }\n    return false;\n  };\n  /**\n   *\n   * @param comment\n   * Deletes comment start and end markers along with its comment widgets.\n   */\n  Editor.prototype.deleteCommentInSelection = function (comment) {\n    //if comment end mark is in selection, both comment start and end markers will get deleted along with its comment widgets.\n    var curentBaseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.editorHistory.currentHistoryInfo && !(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n      this.initComplexHistory('DeleteCommentInline');\n    }\n    this.deleteCommentInternal(comment);\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      if (!(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n        this.editorHistory.currentHistoryInfo.addModifiedAction(curentBaseHistoryInfo);\n      }\n      this.selection.editPosition = curentBaseHistoryInfo.insertPosition;\n      this.editorHistory.currentHistoryInfo.insertPosition = this.selection.editPosition;\n      this.editorHistory.currentBaseHistoryInfo = curentBaseHistoryInfo;\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.removeContent = function (lineWidget, startOffset, endOffset, editAction, skipHistoryCollection) {\n    var count = this.selection.getLineLength(lineWidget);\n    var startText = undefined;\n    var textCount = 0;\n    var lastText = undefined;\n    for (var i = lineWidget.children.length - 1; i >= 0; i--) {\n      var inline = lineWidget.children[i];\n      if (isNullOrUndefined(editAction) || editAction !== 2 && editAction !== 1) {\n        for (var k = 0; k < lineWidget.children.length; k++) {\n          var elementbox = lineWidget.children[k];\n          if (elementbox instanceof TextElementBox) {\n            var text = elementbox.text;\n            if (text.length + textCount > startOffset && !(textCount > startOffset)) {\n              startText = text[startOffset - textCount - 1];\n              if (isNullOrUndefined(startText) && startOffset - textCount === 0) {\n                startText = lastText;\n              }\n            }\n            // tslint:disable-next-line:max-line-length\n            if (text.length + textCount > endOffset) {\n              if (text[endOffset - textCount] === ' ' && startOffset === 0 || startText === ' ' && text[endOffset - textCount] === ' ') {\n                endOffset += 1;\n              }\n            }\n            lastText = text[text.length - 1];\n          }\n          textCount += elementbox.length;\n        }\n      }\n      if (endOffset <= count - inline.length) {\n        count -= inline.length;\n        continue;\n      }\n      var endIndex = inline.length;\n      if (count > endOffset && count - endIndex < endOffset) {\n        endIndex = endOffset - (count - inline.length);\n      }\n      var startIndex = 0;\n      if (count - inline.length < startOffset) {\n        startIndex = startOffset - (count - inline.length);\n      }\n      if (count > endOffset) {\n        count -= inline.length - endIndex;\n      }\n      if (startIndex === 0 && endIndex === inline.length) {\n        if (!this.owner.enableTrackChanges || this.owner.enableTrackChanges && this.skipTracking()) {\n          if (!(this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing))) {\n            if (inline instanceof BookmarkElementBox) {\n              this.removedBookmarkElements.push(inline);\n            }\n          }\n          if (inline instanceof BookmarkElementBox) {\n            if (this.documentHelper.bookmarks.containsKey(inline.name)) {\n              if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.markerData.push({\n                  bookmarkName: inline.name\n                });\n              }\n              this.documentHelper.bookmarks.remove(inline.name);\n            }\n          }\n        }\n        if (inline instanceof ImageElementBox && inline.textWrappingStyle !== 'Inline' || inline instanceof ShapeElementBox) {\n          this.removeAutoShape(inline);\n        }\n        //clear form field revisions if it is intentionally deleted.\n        if (this.skipFieldDeleteTracking && inline.revisions.length > 0) {\n          var fieldInline = inline;\n          if (fieldInline instanceof FieldElementBox) {\n            if (fieldInline.fieldType === 1 || fieldInline.fieldType === 2) {\n              fieldInline = fieldInline.fieldBegin;\n            }\n            this.clearFieldElementRevisions(fieldInline, inline.revisions);\n          }\n        }\n        if (this.canHandleDeletion() || this.owner.enableTrackChanges && (!this.skipTracking() || inline.paragraph.isInsideTable && !isNullOrUndefined(this.editorHistory) && this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === \"RemoveRowTrack\") && !this.skipFieldDeleteTracking && !this.isInsertingTOC) {\n          if (!this.skipTableElements && !this.skipFootNoteDeleteTracking && !skipHistoryCollection) {\n            this.addRemovedNodes(inline.clone());\n          }\n          this.handleDeleteTracking(inline, startOffset, endOffset, i, skipHistoryCollection);\n        } else {\n          // if (editAction < 4) {\n          if (inline instanceof FootnoteElementBox) {\n            inline.isLayout = false;\n          }\n          this.unLinkFieldCharacter(inline);\n          this.unlinkRangeFromRevision(inline, true);\n          this.addRemovedRevisionInfo(inline, undefined);\n          // Added the condition to skip adding inner elements of the table to separate collection of history if the entire table is selected.\n          if (!(!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack' && inline.paragraph.isInsideTable)) {\n            this.addRemovedNodes(inline);\n          }\n          if (inline instanceof EditRangeStartElementBox) {\n            this.removedEditRangeStartElements.push(inline);\n            if (inline.columnFirst != -1 && inline.columnLast != -1) {\n              this.removeEditRangeFromCollection(inline);\n            }\n          } else if (inline instanceof EditRangeEndElementBox) {\n            this.removedEditRangeEndElements.push(inline);\n          }\n          lineWidget.children.splice(i, 1);\n          if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n            lineWidget.layoutedElements.splice(i, 1);\n          }\n        }\n      } else if (inline instanceof TextElementBox) {\n        var span = this.handleDeleteTracking(inline, startIndex, endIndex);\n        //if (editAction < 4) {\n        // let span: TextElementBox = new TextElementBox();\n        // span.characterFormat.copyFormat(inline.characterFormat);\n        // span.text = inline.text.substr(startIndex, endIndex - startIndex);\n        // for (let i = inline.revisions.length - 1; i >= 0; i--) {\n        //     let revision: Revision = inline.revisions[i];\n        //     let splittedRange: object[] = this.splitRevisionByElement(inline, revision);\n        //     this.insertRevision(span, revision.revisionType, revision.author, revision.date, splittedRange);\n        // }\n        // inline.text = inline.text.slice(0, startIndex) + inline.text.slice(endIndex);\n        if (!isNullOrUndefined(span)) {\n          if (!this.skipTableElements) {\n            if (inline.revisions.length > 0) {\n              this.addRemovedRevisionInfo(inline, span);\n            }\n            this.addRemovedNodes(span);\n          }\n        }\n        // else {\n        //     this.insertTextInternal(span.text, false, 'Deletion');\n        //     this.editorHistory.currentBaseHistoryInfo.revisionToRemove = inline.revisions[inline.revisions.length - 1];\n        //     // let info: ElementInfo = this.selection.start.currentWidget.getInline(startOffset +1, 0);\n        //     // let element: ElementBox = info.element.clone();\n        //     //this.addRemovedNodes(span);\n        // }\n      }\n      if ((!this.owner.enableTrackChanges || this.editorHistory.isUndoing) && inline instanceof FootnoteElementBox) {\n        if (inline.footnoteType === 'Footnote') {\n          this.removeFootnote(inline);\n        } else {\n          this.removeEndnote(inline);\n        }\n      }\n      if (startOffset >= count - (endIndex - startIndex)) {\n        break;\n      }\n      count -= endIndex - startIndex;\n      this.documentHelper.layout.clearListElementBox(lineWidget.paragraph);\n    }\n  };\n  /**\n   * Deletes comment widgets from comment pane along with history preservation.\n   */\n  Editor.prototype.deleteCommentWidgetInline = function (inline) {\n    // let curentBaseHistoryInfo: BaseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n    // if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.editorHistory.currentHistoryInfo) {\n    //     this.initComplexHistory('DeleteCommentInline');\n    // }\n    // // if (!this.selection.isElementInSelection(inline.comment.commentStart, true)) {\n    // //     this.removeCommentCharacters.push(inline.comment.commentStart);\n    // // }\n    // this.deleteCommentWidgetInternal(inline.comment);\n    // if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n    //     // let index = this.editorHistory.currentHistoryInfo.modifiedActions.indexOf(curentHistoryInfo);\n    //     // this.editorHistory.currentHistoryInfo.modifiedActions.push(this.editorHistory.currentHistoryInfo.modifiedActions.splice(index, 1)[0]);\n    //     let lstActionHistoryInfo: HistoryInfo = this.editorHistory.currentHistoryInfo;\n    //     let frstAction: BaseHistoryInfo = lstActionHistoryInfo.modifiedActions[0];\n    //     // if (frstAction.action === \"DeleteCommentWidget\" && frstAction.removedNodes[0] instanceof CommentElementBox\n    //     //     && !(frstAction.removedNodes[0] as CommentElementBox).isReply && (lstActionHistoryInfo.modifiedActions[1].action === \"DeleteCommentWidget\")) {\n    //     //     // index = this.editorHistory.currentHistoryInfo.modifiedActions.indexOf(curentHistoryInfo);\n    //     //     // this.editorHistory.currentHistoryInfo.modifiedActions.splice(index - 1, 0, this.editorHistory.currentHistoryInfo.modifiedActions.splice(0, 1)[0]);\n    //     // }\n    // }\n    // this.editorHistory.currentHistoryInfo.addModifiedAction(curentBaseHistoryInfo);\n    // this.editorHistory.currentBaseHistoryInfo = curentBaseHistoryInfo;\n    // this.selection.editPosition = curentBaseHistoryInfo.insertPosition;        \n    // this.editorHistory.currentHistoryInfo.insertPosition = curentBaseHistoryInfo.insertPosition;\n    // this.editorHistory.currentHistoryInfo.endPosition = curentBaseHistoryInfo.insertPosition;\n    // this.editorHistory.currentHistoryInfo.selectionStart = curentBaseHistoryInfo.selectionStart;\n    // this.editorHistory.currentHistoryInfo.selectionEnd = curentBaseHistoryInfo.selectionEnd;\n  };\n  Editor.prototype.clearFieldElementRevisions = function (inline, revision) {\n    var revisions = revision;\n    for (var i = 0; i < revisions.length; i++) {\n      var currentRevision = revisions[i];\n      for (var j = 0; j < currentRevision.range.length; j++) {\n        if (currentRevision.range[j] === inline) {\n          for (var k = j; k < currentRevision.range.length; k) {\n            if (currentRevision.range[j] instanceof FieldElementBox && currentRevision.range[j].fieldType === 1 && currentRevision.range[j].fieldBegin === inline) {\n              currentRevision.removeRangeRevisionForItem(currentRevision.range[j]);\n              if (currentRevision.range.length === 0) {\n                this.owner.revisions.remove(currentRevision);\n              }\n              break;\n            }\n            currentRevision.removeRangeRevisionForItem(currentRevision.range[j]);\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.addRemovedRevisionInfo = function (currentElement, spittedElement, removePrevRevisions) {\n    for (var i = 0; i < currentElement.revisions.length; i++) {\n      var revisionId = currentElement.revisions[i].revisionID;\n      if (!isNullOrUndefined(spittedElement)) {\n        spittedElement.removedIds.push(revisionId);\n      } else {\n        currentElement.removedIds.push(revisionId);\n      }\n    }\n    if (isNullOrUndefined(spittedElement) && (isNullOrUndefined(removePrevRevisions) || removePrevRevisions)) {\n      currentElement.revisions = [];\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeEmptyLine = function (paragraph) {\n    if (paragraph.childWidgets.length > 1) {\n      for (var i = 0; i < paragraph.childWidgets.length; i++) {\n        var lineWidget = paragraph.childWidgets[i];\n        if (lineWidget.children.length === 0 && paragraph.childWidgets.length > 1) {\n          paragraph.childWidgets.splice(i, 1);\n          i--;\n        }\n      }\n    }\n  };\n  //#endregion\n  /**\n   * Clone the list level\n   *\n   * @param {WListLevel} source - Specifies the source\n   * @private\n   * @returns {WListLevel} - Returns the list level\n   */\n  Editor.prototype.cloneListLevel = function (source) {\n    var listLevel = new WListLevel(undefined);\n    this.copyListLevel(listLevel, source);\n    return listLevel;\n  };\n  /**\n   * Copies the list level\n   *\n   * @param {WListLevel} destination - Specifies the destination\n   * @param {WListLevel} listLevel - Specifies the list level\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.copyListLevel = function (destination, listLevel) {\n    if (!isNullOrUndefined(listLevel.paragraphFormat)) {\n      destination.paragraphFormat = new WParagraphFormat(destination);\n      destination.paragraphFormat.copyFormat(listLevel.paragraphFormat);\n    }\n    if (!isNullOrUndefined(listLevel.characterFormat)) {\n      destination.characterFormat = new WCharacterFormat(destination);\n      destination.characterFormat.copyFormat(listLevel.characterFormat);\n    }\n    if (!isNullOrUndefined(listLevel.followCharacter)) {\n      destination.followCharacter = listLevel.followCharacter;\n    }\n    if (!isNullOrUndefined(listLevel.listLevelPattern)) {\n      destination.listLevelPattern = listLevel.listLevelPattern;\n    }\n    if (!isNullOrUndefined(listLevel.numberFormat)) {\n      destination.numberFormat = listLevel.numberFormat;\n    }\n    if (!isNullOrUndefined(listLevel.restartLevel)) {\n      destination.restartLevel = listLevel.restartLevel;\n    }\n    if (!isNullOrUndefined(listLevel.startAt)) {\n      destination.startAt = listLevel.startAt;\n    }\n  };\n  /**\n   * Clone level override\n   *\n   * @param {WLevelOverride} source  @returns {void} - Specifies the level override\n   * @private\n   * @returns {WLevelOverride} - Returns the level overeide\n   */\n  Editor.prototype.cloneLevelOverride = function (source) {\n    var levelOverride = new WLevelOverride();\n    if (!isNullOrUndefined(source.startAt)) {\n      levelOverride.startAt = source.startAt;\n    }\n    if (!isNullOrUndefined(source.overrideListLevel)) {\n      levelOverride.overrideListLevel = source.overrideListLevel;\n    }\n    if (!isNullOrUndefined(source.levelNumber)) {\n      levelOverride.levelNumber = source.levelNumber;\n    }\n    return levelOverride;\n  };\n  /**\n   * Update List Paragraph\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListParagraphs = function () {\n    this.documentHelper.listParagraphs = [];\n    for (var j = 0; j < this.documentHelper.pages.length; j++) {\n      var bodyWidget = this.documentHelper.pages[j].bodyWidgets[0];\n      for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n        this.updateListParagraphsInBlock(bodyWidget.childWidgets[i]);\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListParagraphsInBlock = function (block) {\n    if (block instanceof ParagraphWidget) {\n      if (!isNullOrUndefined(block.paragraphFormat) && !isNullOrUndefined(block.paragraphFormat.listFormat) && !isNullOrUndefined(block.paragraphFormat.listFormat.listId)) {\n        if (block.paragraphFormat.listFormat.listId >= 0) {\n          block.paragraphFormat.clearIndent();\n        }\n        if (isNullOrUndefined(this.documentHelper.listParagraphs)) {\n          this.documentHelper.listParagraphs = [];\n        }\n        this.documentHelper.listParagraphs.push(block);\n      }\n    } else if (block instanceof TableWidget) {\n      for (var i = 0; i < block.childWidgets.length; i++) {\n        for (var j = 0; j < block.childWidgets[i].childWidgets.length; j++) {\n          var cell = block.childWidgets[i].childWidgets[j];\n          for (var k = 0; k < cell.childWidgets.length; k++) {\n            this.updateListParagraphsInBlock(cell.childWidgets[k]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Applies list format\n   *\n   * @param {WList} list - Specifies the list.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onApplyList = function (list) {\n    var selection = this.documentHelper.selection;\n    this.setOffsetValue(this.documentHelper.selection);\n    this.initHistory('ListFormat');\n    var format = new WListFormat();\n    if (!isNullOrUndefined(list)) {\n      format.listId = list.listId;\n      format.nsid = list.nsid;\n    }\n    this.documentHelper.owner.isShiftingEnabled = true;\n    if (selection.isEmpty) {\n      this.applyParaFormatProperty(selection.start.paragraph, 'listFormat', format, false);\n      this.layoutItemBlock(selection.start.paragraph, false);\n    } else {\n      this.updateSelectionParagraphFormatting('listFormat', format, false);\n    }\n    this.documentHelper.owner.isShiftingEnabled = true;\n    this.layoutWholeDocument();\n    this.documentHelper.owner.isShiftingEnabled = false;\n    this.startParagraph = undefined;\n    this.endParagraph = undefined;\n  };\n  /**\n   * Applies bullets or numbering list\n   *\n   * @param {string} format - Specifies the format\n   * @param {ListLevelPattern} listLevelPattern - Specifies the list level patterns\n   * @param {string} fontFamily - Specifies the font family.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyBulletOrNumbering = function (format, listLevelPattern, fontFamily) {\n    var selection = this.documentHelper.selection;\n    var list = selection.paragraphFormat.getList();\n    var isUpdate = false;\n    var start = selection.start;\n    if (!selection.isForward) {\n      start = selection.end;\n    }\n    var currentParagraph = start.paragraph;\n    if (isNullOrUndefined(list)) {\n      while (!isNullOrUndefined(currentParagraph.previousWidget) && currentParagraph.previousWidget instanceof ParagraphWidget && currentParagraph.previousWidget.isEmpty() && currentParagraph.previousWidget.paragraphFormat.listFormat.listId === -1) {\n        currentParagraph = currentParagraph.previousWidget;\n      }\n      if (currentParagraph.previousWidget && currentParagraph.previousWidget instanceof ParagraphWidget && currentParagraph.previousWidget.paragraphFormat.listFormat.listId !== -1) {\n        var isUpdated = false;\n        while (!isNullOrUndefined(currentParagraph.previousWidget) && currentParagraph.previousWidget instanceof ParagraphWidget && currentParagraph.previousWidget.paragraphFormat.listFormat.listId !== -1 && start.paragraph.paragraphFormat.firstLineIndent < Math.abs(currentParagraph.previousWidget.paragraphFormat.firstLineIndent)) {\n          currentParagraph = currentParagraph.previousWidget;\n          isUpdated = true;\n        }\n        if (!isUpdated) {\n          currentParagraph = currentParagraph.previousWidget;\n        }\n        list = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n        isUpdate = true;\n      }\n      if (!isUpdate) {\n        while (!isNullOrUndefined(currentParagraph.nextWidget) && currentParagraph.nextWidget instanceof ParagraphWidget && currentParagraph.nextWidget.isEmpty() && currentParagraph.nextWidget.paragraphFormat.listFormat.listId === -1) {\n          currentParagraph = currentParagraph.nextWidget;\n        }\n        if (currentParagraph.nextWidget && currentParagraph.nextWidget instanceof ParagraphWidget && currentParagraph.nextWidget.paragraphFormat.listFormat.listId !== -1) {\n          currentParagraph = currentParagraph.nextWidget;\n          list = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n          isUpdate = true;\n        }\n      }\n    }\n    var startListLevel = undefined;\n    var levelNumber = -1;\n    var initialListLevel = undefined;\n    var isSameList = false;\n    if (currentParagraph.paragraphFormat.listFormat.listId !== -1 && !isNullOrUndefined(currentParagraph.paragraphFormat.listFormat.listLevel)) {\n      this.listNumberFormat = currentParagraph.paragraphFormat.listFormat.listLevel.numberFormat;\n      this.listLevelPattern = currentParagraph.paragraphFormat.listFormat.listLevel.listLevelPattern;\n      this.listLevelNumber = currentParagraph.paragraphFormat.listFormat.listLevelNumber;\n    }\n    if (!isNullOrUndefined(list)) {\n      levelNumber = currentParagraph.paragraphFormat.listFormat.listLevelNumber;\n      var tempList = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n      startListLevel = this.documentHelper.layout.getListLevel(tempList, levelNumber);\n      if (levelNumber > 0) {\n        initialListLevel = this.documentHelper.layout.getListLevel(tempList, 0);\n        isSameList = !isNullOrUndefined(initialListLevel) && levelNumber > 0 && selection.start.isInSameListParagraph(selection.end);\n      }\n      var abstractList = tempList.abstractList;\n      if (!abstractList) {\n        abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n      }\n      if (abstractList.levels.length === 0) {\n        startListLevel = this.documentHelper.layout.getListLevel(tempList, currentParagraph.paragraphFormat.listFormat.listLevelNumber);\n      }\n      if (isUpdate) {\n        if (listLevelPattern !== 'Bullet' && startListLevel.listLevelPattern === listLevelPattern && (startListLevel.numberFormat === format || startListLevel.numberFormat.indexOf(format) !== -1)) {\n          selection.paragraphFormat.listId = list.listId;\n          selection.paragraphFormat.listLevelNumber = levelNumber;\n          selection.paragraphFormat.setList(list);\n          return;\n        } else {\n          startListLevel = abstractList.levels[0];\n        }\n      }\n    }\n    if (isNullOrUndefined(list) || !isNullOrUndefined(list) && levelNumber === 0 && (startListLevel.listLevelPattern !== listLevelPattern || startListLevel.numberFormat !== format || startListLevel.characterFormat.fontFamily !== fontFamily && startListLevel.listLevelPattern === 'Bullet')) {\n      isUpdate = false;\n      list = new WList();\n      if (this.documentHelper.lists.length > 0) {\n        list.listId = this.documentHelper.lists[this.documentHelper.lists.length - 1].listId + 1;\n      } else {\n        list.listId = 0;\n      }\n      var abstractList = new WAbstractList();\n      if (this.documentHelper.abstractLists.length > 0) {\n        abstractList.abstractListId = this.documentHelper.abstractLists[this.documentHelper.abstractLists.length - 1].abstractListId + 1;\n      } else {\n        abstractList.abstractListId = 0;\n      }\n      list.nsid = abstractList.nsid = HelperMethods.generateUniqueId(this.owner.documentHelper.lists);\n      list.abstractListId = abstractList.abstractListId;\n      list.abstractList = abstractList;\n      this.documentHelper.abstractLists.push(abstractList);\n      if (format === 'bullet' || format === 'multiLevel' || format === 'numbering') {\n        this.addListLevels(abstractList, format, selection);\n      } else {\n        var listLevel = new WListLevel(abstractList);\n        listLevel.listLevelPattern = listLevelPattern;\n        listLevel.numberFormat = format;\n        if (listLevelPattern !== 'Bullet') {\n          listLevel.startAt = 1;\n        } else {\n          listLevel.characterFormat.fontFamily = fontFamily;\n        }\n        listLevel.paragraphFormat.leftIndent = 36;\n        listLevel.paragraphFormat.firstLineIndent = -18;\n        abstractList.levels.push(listLevel);\n        selection.paragraphFormat.listLevelNumber = 0;\n      }\n      selection.paragraphFormat.setList(list);\n    } else if (isSameList && !isNullOrUndefined(list) && !isUpdate) {\n      var tempList = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n      var listLevel = this.documentHelper.layout.getListLevel(tempList, levelNumber);\n      if (listLevelPattern === 'Bullet') {\n        listLevel.numberFormat = format;\n        listLevel.characterFormat.fontFamily = fontFamily;\n        listLevel.listLevelPattern = listLevelPattern;\n      } else {\n        listLevel.listLevelPattern = listLevelPattern;\n        listLevel.characterFormat.fontFamily = fontFamily;\n        var currentFormat = listLevel.numberFormat.substring(listLevel.numberFormat.length - 1);\n        if (listLevel.numberFormat.length !== format.length && levelNumber > 0) {\n          listLevel.numberFormat = format;\n        } else if (format.substring(format.length - 1) !== listLevel.numberFormat.substring(listLevel.numberFormat.length - 1)) {\n          listLevel.numberFormat = listLevel.numberFormat.replace(currentFormat, format.substring(format.length - 1));\n        }\n      }\n      selection.paragraphFormat.setList(tempList);\n    } else if (!isNullOrUndefined(list) && isUpdate) {\n      selection.paragraphFormat.setList(list);\n    } else {\n      selection.paragraphFormat.setList(undefined);\n    }\n  };\n  Editor.prototype.addListLevels = function (abstractListAdv, listName, selection) {\n    var bulletCharacters = [String.fromCharCode(61558), String.fromCharCode(61656), String.fromCharCode(61607), String.fromCharCode(61623), String.fromCharCode(61608)];\n    for (var i = abstractListAdv.levels.length; i < 9; i++) {\n      var listLevel = new WListLevel(abstractListAdv);\n      if (listName.match('bullet')) {\n        listLevel.listLevelPattern = 'Bullet';\n        listLevel.numberFormat = bulletCharacters[i < 5 ? i % 5 : i % 5 + 1];\n        listLevel.characterFormat.fontFamily = i < 3 || i === 5 ? 'Wingdings' : 'Symbol';\n      } else {\n        if (listName.match('multiLevel')) {\n          for (var j = 0; j < i + 1; j++) {\n            listLevel.numberFormat += '%' + (j + 1).toString() + '.';\n          }\n          listLevel.listLevelPattern = 'Number';\n        } else {\n          listLevel.numberFormat = '%' + (i + 1).toString() + ')';\n          listLevel.listLevelPattern = i % 3 === 0 ? 'Number' : i % 3 === 1 ? 'LowLetter' : 'LowRoman';\n        }\n        listLevel.startAt = 1;\n        listLevel.restartLevel = i;\n      }\n      if (i === 0) {\n        listLevel.paragraphFormat.leftIndent = 36;\n      } else {\n        listLevel.paragraphFormat.leftIndent = 36 * i;\n      }\n      listLevel.paragraphFormat.firstLineIndent = -18;\n      abstractListAdv.levels.push(listLevel);\n      selection.paragraphFormat.listLevelNumber = i;\n    }\n  };\n  /**\n   * Inserts the page break at the cursor position.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.insertPageBreak = function () {\n    if (!this.owner.isReadOnlyMode) {\n      if (this.documentHelper.selection.start.paragraph.isInsideTable || this.documentHelper.selection.start.paragraph.isInHeaderFooter) {\n        return;\n      }\n      this.initComplexHistory('PageBreak');\n      this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.onEnter('PageBreak');\n      this.isSkipOperationsBuild = false;\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n        this.editorHistory.updateComplexHistory();\n      }\n      if (this.owner.enableAutoFocus) {\n        this.selection.checkForCursorVisibility();\n      }\n    }\n  };\n  /**\n   * Inserts a column break at cursor position.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.insertColumnBreak = function () {\n    if (!this.owner.isReadOnlyMode) {\n      if (this.documentHelper.selection.start.paragraph.isInsideTable || this.documentHelper.selection.start.paragraph.isInHeaderFooter) {\n        return;\n      }\n      this.initComplexHistory('ColumnBreak');\n      var para = this.documentHelper.selection.start.paragraph;\n      if (this.viewer instanceof PageLayoutViewer && para.bodyWidget.sectionFormat.columns.length > 1) {\n        var lastbody = this.documentHelper.layout.getBodyWidget(para.bodyWidget, false);\n        if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page) {\n          this.documentHelper.layout.combineMultiColumn(lastbody);\n        }\n      }\n      this.onEnter('ColumnBreak');\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n        this.editorHistory.updateComplexHistory();\n      }\n      if (this.owner.enableAutoFocus) {\n        this.selection.checkForCursorVisibility();\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onEnter = function (breakType) {\n    this.handledEnter = true;\n    var selection = this.documentHelper.selection;\n    var format;\n    if (isNullOrUndefined(selection.start.paragraph.paragraphFormat.baseStyle) || selection.start.paragraph.paragraphFormat.baseStyle.name === 'Normal' || selection.start.paragraph.paragraphFormat.baseStyle.name === 'Normal (Web)') {\n      format = new SelectionCharacterFormat(undefined);\n      format.cloneFormat(this.selection.characterFormat);\n      var eleme = selection.start.paragraph.lastChild.children[selection.start.paragraph.lastChild.children.length - 1];\n      if (eleme instanceof FootnoteElementBox) {\n        format.baselineAlignment = 'Normal';\n      }\n    }\n    if (this.isXmlMapped) {\n      return;\n    }\n    if (selection.isEmpty) {\n      //ToDo: Need to handle the CTRL + Enter (Page Break) and SHIFT + Enter (Line Break) behavior.\n      var hyperlinkField = selection.getHyperlinkField();\n      var isSelectionOnHyperlink = !isNullOrUndefined(hyperlinkField);\n      if (isSelectionOnHyperlink) {\n        selection.fireRequestNavigate(hyperlinkField);\n        return;\n      }\n      var paragraph = selection.start.paragraph;\n      if (paragraph.isEmpty() && paragraph.paragraphFormat.listFormat.listId !== -1) {\n        this.onApplyListInternal(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId), paragraph.paragraphFormat.listFormat.listLevelNumber - 1);\n        return;\n      }\n    }\n    var commentStartToInsert = this.checkAndRemoveComments();\n    this.initHistory('Enter');\n    var isRemoved = true;\n    if (!selection.isEmpty && !selection.isImageSelected) {\n      // this.initHistoryWithSelection(selection, 'Enter');\n      isRemoved = this.removeSelectedContents(selection);\n    }\n    if (isRemoved) {\n      if (selection.isImageSelected && !selection.isForward) {\n        var start = selection.start;\n        selection.start = selection.end;\n        selection.end = start;\n      }\n      selection.owner.isShiftingEnabled = true;\n      this.updateInsertPosition();\n      var blockInfo = this.selection.getParagraphInfo(selection.start);\n      var initialStart = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      this.splitParagraphInternal(selection, selection.start.paragraph, selection.start.currentWidget, selection.start.offset);\n      this.setPositionForCurrentIndex(selection.start, initialStart);\n      if (!isNullOrUndefined(breakType) && (breakType === 'PageBreak' || breakType === 'ColumnBreak')) {\n        var currentParagraph = selection.start.paragraph;\n        var breakParagraph = new ParagraphWidget();\n        breakParagraph.characterFormat.copyFormat(currentParagraph.characterFormat);\n        breakParagraph.paragraphFormat.copyFormat(currentParagraph.paragraphFormat);\n        var pageBreak = new TextElementBox();\n        switch (breakType) {\n          case 'PageBreak':\n            pageBreak.text = '\\f';\n            break;\n          case 'ColumnBreak':\n            pageBreak.text = String.fromCharCode(14);\n            break;\n        }\n        var line = new LineWidget(breakParagraph);\n        line.children.push(pageBreak);\n        pageBreak.line = line;\n        breakParagraph.childWidgets.push(line);\n        if (this.owner.enableTrackChanges && currentParagraph.characterFormat.revisions.length > 0) {\n          var currentRevision = this.retrieveRevisionInOder(currentParagraph.characterFormat);\n          currentRevision.range.push(breakParagraph.characterFormat);\n          breakParagraph.characterFormat.revisions.push(currentRevision);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n          breakParagraph.characterFormat.removedIds = [];\n        }\n        this.insertParagraph(breakParagraph, true);\n        selection.selectParagraphInternal(breakParagraph, true);\n      }\n      var nextNode = selection.start.paragraph.nextWidget;\n      if (isNullOrUndefined(nextNode)) {\n        nextNode = selection.getNextRenderedBlock(selection.start.paragraph);\n      }\n      selection.selectParagraphInternal(nextNode, true);\n      this.updateEndPosition();\n      if (!isNullOrUndefined(breakType) && this.editorHistory) {\n        this.owner.editorHistoryModule.updateHistory();\n      }\n      // if (!isNullOrUndefined(selection.currentHistoryInfo)) {\n      //     this.updateComplexHistory();\n      // } else {\n      this.reLayout(selection);\n      var currentPara = this.selection.start.paragraph.containerWidget.firstChild;\n      if (!isNullOrUndefined(currentPara)) {\n        currentPara.isChangeDetected = false;\n        var nextPara = currentPara.nextRenderedWidget;\n        while (this.owner.isSpellCheck && !isNullOrUndefined(nextPara)) {\n          currentPara = nextPara;\n          currentPara.isChangeDetected = false;\n          nextPara = currentPara.nextRenderedWidget;\n        }\n      }\n      // }\n      var paragraph = selection.start.paragraph.previousWidget;\n      if (!isNullOrUndefined(paragraph) && !paragraph.isEmpty() && paragraph.lastChild.children[paragraph.lastChild.children.length - 1] instanceof TextElementBox) {\n        this.checkAndConvertToHyperlink(selection, true, paragraph);\n      }\n    }\n    if (!isNullOrUndefined(format) && !isNullOrUndefined(selection.start.paragraph) && selection.start.paragraph.isEmpty()) {\n      this.selection.isRetrieveFormatting = true;\n      this.selection.characterFormat.cloneFormat(format);\n      this.selection.isRetrieveFormatting = false;\n    }\n    this.documentHelper.layout.islayoutFootnote = false;\n    this.updateHistoryForComments(commentStartToInsert);\n    this.handledEnter = false;\n  };\n  Editor.prototype.splitParagraphInternal = function (selection, paragraphAdv, currentLine, offset) {\n    var insertIndex = 0;\n    var blockIndex = paragraphAdv.index;\n    var currentPara = paragraphAdv;\n    var isAddRevToNxtPara = false;\n    currentPara.isChangeDetected = offset === 0 ? true : false;\n    while (this.owner.isSpellCheck && !isNullOrUndefined(currentPara.nextRenderedWidget)) {\n      currentPara = currentPara.nextRenderedWidget;\n      currentPara.isChangeDetected = true;\n    }\n    var paragraph = new ParagraphWidget();\n    var lineWidget = new LineWidget(paragraph);\n    paragraph.childWidgets.push(lineWidget);\n    //Cop ies the format to new paragraph.\n    paragraph.paragraphFormat.ownerBase = paragraph;\n    if (currentLine === paragraphAdv.lastChild && offset === selection.getLineLength(currentLine) && !paragraphAdv.isContainsShapeAlone()) {\n      if (paragraphAdv.paragraphFormat.baseStyle && paragraphAdv.paragraphFormat.baseStyle.name !== 'Normal' && paragraphAdv.paragraphFormat.baseStyle.next instanceof WParagraphStyle) {\n        if (paragraphAdv.paragraphFormat.baseStyle.name === paragraphAdv.paragraphFormat.baseStyle.next.name) {\n          paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n          paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n        } else {\n          paragraph.paragraphFormat.baseStyle = paragraphAdv.paragraphFormat.baseStyle.next;\n        }\n        this.selection.skipFormatRetrieval = false;\n      } else {\n        paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n        paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n      }\n      if (paragraphAdv.lastChild.children.length > 0) {\n        paragraphAdv.characterFormat.copyFormat(paragraphAdv.lastChild.children[paragraphAdv.lastChild.children.length - 1].characterFormat);\n      }\n      // let revisions: Revision[] = [];\n      // if (paragraphAdv.characterFormat.revisions.length > 0) {\n      //     revisions = paragraphAdv.characterFormat.revisions;\n      // } else {\n      if (this.handledEnter && this.selection.isEmpty && this.selection.start.isAtParagraphEnd && paragraphAdv.characterFormat.revisions.length > 0) {\n        isAddRevToNxtPara = true;\n      }\n      if (this.owner.enableTrackChanges) {\n        var lastLine = paragraphAdv.lastChild;\n        if (!isNullOrUndefined(lastLine) && lastLine.children.length > 0) {\n          var lastElement = lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n          if (lastElement.revisions.length !== 0) {\n            isAddRevToNxtPara = false;\n          }\n          //ensure whether para mark can be combined with element revision\n          if (!isNullOrUndefined(lastElement) && !this.checkParaMarkMatchedWithElement(lastElement, paragraphAdv.characterFormat, false, 'Insertion')) {\n            if (isAddRevToNxtPara) {\n              this.insertParaRevision(paragraph);\n            } else {\n              this.insertParaRevision(paragraphAdv);\n            }\n          }\n        }\n      }\n      //}\n      //ToDo in future: Need to skip copying formattings to new paragraph, if the style for following paragraph is same style.\n      insertIndex++;\n      blockIndex++;\n    } else {\n      paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n      paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n      if ((offset > 0 || !currentLine.isFirstLine()) && !paragraphAdv.isContainsShapeAlone()) {\n        paragraphAdv = paragraphAdv.combineWidget(this.owner.viewer);\n        this.moveInlines(paragraphAdv, paragraph, 0, 0, paragraphAdv.firstChild, offset, currentLine);\n        if (this.owner.enableTrackChanges) {\n          this.insertParaRevision(paragraph, paragraphAdv.firstChild);\n        }\n      } else {\n        var paragraphWidget = paragraphAdv.previousRenderedWidget;\n        var isPreviousRevision = false;\n        if (!isNullOrUndefined(paragraphWidget) && paragraphWidget instanceof ParagraphWidget) {\n          isPreviousRevision = paragraphWidget.characterFormat.revisions.length > 0 ? true : false;\n        }\n        if (this.owner.enableTrackChanges) {\n          if (!isPreviousRevision) {\n            var firstLine = paragraphAdv.firstChild;\n            var firstElement = firstLine.children[0].previousValidNodeForTracking;\n            //ensure whether para mark can be combined with element revision\n            if (!isNullOrUndefined(firstElement) && !this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, true, 'Insertion')) {\n              this.insertParaRevision(paragraph);\n            } else if (isNullOrUndefined(firstElement)) {\n              insertIndex++;\n              blockIndex++;\n            }\n          } else {\n            if (!this.checkToMatchEmptyParaMark(paragraphAdv, paragraph)) {\n              this.insertParaRevision(paragraphAdv);\n            }\n          }\n        }\n      }\n      paragraphAdv = paragraphAdv.getSplitWidgets()[0];\n    }\n    insertIndex += paragraphAdv.getIndex();\n    var container = paragraphAdv.containerWidget;\n    var childNodes = container.childWidgets;\n    childNodes.splice(insertIndex, 0, paragraph);\n    paragraph.containerWidget = container;\n    paragraph.index = blockIndex;\n    this.updateNextBlocksIndex(paragraph, true);\n    if (!isNullOrUndefined(container.containerWidget) && container.containerWidget instanceof FootNoteWidget || container instanceof TableCellWidget && !isNullOrUndefined(container.bodyWidget) && container.bodyWidget.containerWidget instanceof FootNoteWidget) {\n      var height = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Height;\n      if (container instanceof TableCellWidget) {\n        container.bodyWidget.height += height;\n        container.bodyWidget.containerWidget.height += height;\n      } else {\n        container.containerWidget.height += height;\n        container.height += height;\n      }\n    }\n    if (this.owner.enableTrackChanges && paragraph.characterFormat.revisions.length === 0) {\n      var para = undefined;\n      if (paragraphAdv.characterFormat.revisions.length === 0) {\n        para = paragraphAdv;\n      } else if (isAddRevToNxtPara) {\n        para = paragraph;\n      }\n      if (!isNullOrUndefined(para) && !this.checkToMatchEmptyParaMark(para)) {\n        this.insertParaRevision(para);\n      }\n    }\n    this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, container, paragraph, false);\n  };\n  Editor.prototype.insertParaRevision = function (paragraph, firstChild) {\n    if (this.owner.enableTrackChanges && isNullOrUndefined(firstChild) && !this.isRevisionMatched(paragraph.characterFormat, 'Insertion')) {\n      paragraph.characterFormat.revisions = [];\n      this.insertRevision(paragraph.characterFormat, 'Insertion');\n    }\n    //If it is spitted para, we need to ensure whether first element of the spitted para matches with inserted revision\n    if (!isNullOrUndefined(firstChild)) {\n      if (firstChild.paragraph.isInsideTable) {\n        this.insertRevision(paragraph.characterFormat, 'Insertion');\n        return;\n      }\n      this.applyRevisionForParaMark(paragraph, firstChild, 'Insertion', true);\n      // let firstElement: ElementBox = firstChild.children[0];\n      // firstElement = firstElement.nextValidNodeForTracking;\n      // let lastLine: LineWidget = paragraph.lastChild as LineWidget;\n      // let lastElement: ElementBox = lastLine.children.length === 0 ? undefined : lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n      // let isCombined: boolean = false;\n      // //Ensure revision matched with inserted para mark\n      // if (!isNullOrUndefined(lastElement)) {\n      //     isCombined = this.checkParaMarkMatchedWithElement(lastElement, paragraph.characterFormat, true);\n      // }\n      // if (!isNullOrUndefined(firstElement)) {\n      //     if (paragraph.characterFormat.revisions.length > 0) {\n      //         if (this.isRevisionMatched(firstElement, 'Insertion')) {\n      //             let revisionToInclude: Revision = paragraph.characterFormat.revisions[0];\n      //             let matchedRevisions: Revision[] = this.getMatchedRevisionsToCombine(firstElement.revisions, 'Insertion');\n      //             for (let i: number = 0; i < matchedRevisions.length; i++) {\n      //                 isCombined = true;\n      //                 this.clearAndUpdateRevisons(matchedRevisions[i].range, revisionToInclude, revisionToInclude.range.indexOf(paragraph.characterFormat) + 1);\n      //             }\n      //         }\n      //     } else {\n      //         isCombined = this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, false);\n      //     }\n      // }\n      // if (!isCombined) {\n      //     this.insertRevision(paragraph.characterFormat, 'Insertion');\n      // }\n    }\n  };\n  Editor.prototype.applyRevisionForParaMark = function (paragraph, firstChild, revisionType, splitRevision) {\n    var firstElement = firstChild.children[0];\n    if (isNullOrUndefined(firstElement)) {\n      return;\n    }\n    firstElement = firstElement.nextValidNodeForTracking;\n    var lastLine = paragraph.lastChild;\n    var lastElement = lastLine.children.length === 0 ? undefined : lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n    var isCombined = false;\n    var prevRevCount = paragraph.characterFormat.revisions.length;\n    //Ensure revision matched with inserted para mark\n    if (!isNullOrUndefined(lastElement)) {\n      isCombined = this.checkParaMarkMatchedWithElement(lastElement, paragraph.characterFormat, false, revisionType);\n    }\n    if (!isNullOrUndefined(firstElement)) {\n      //Ensure previous inserted para mark revision matched with first element of the next paragraph.\n      if (paragraph.characterFormat.revisions.length > prevRevCount) {\n        if (this.isRevisionMatched(firstElement, revisionType)) {\n          var revisionToInclude = paragraph.characterFormat.revisions[0];\n          var matchedRevisions = this.getMatchedRevisionsToCombine(firstElement.revisions, revisionType);\n          for (var i = 0; i < matchedRevisions.length; i++) {\n            if (matchedRevisions[i] !== revisionToInclude) {\n              isCombined = true;\n              this.clearAndUpdateRevisons(matchedRevisions[i].range, revisionToInclude, revisionToInclude.range.indexOf(paragraph.characterFormat) + 1);\n            }\n          }\n        }\n      } else {\n        isCombined = this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, true, revisionType);\n      }\n    }\n    if (!isCombined && (this.owner.enableTrackChanges || firstChild.paragraph.characterFormat.revisions.length > 0)) {\n      this.insertRevision(paragraph.characterFormat, revisionType);\n      // for spitted paragraph on moving content we maintain same revision, so if it not matched with inserted paragraph then we need to spit it.\n      if (splitRevision && lastElement.revisions.length > 0 && firstElement.revisions.length > 0) {\n        this.updateRevisionForSpittedTextElement(lastElement, firstElement);\n      }\n    }\n  };\n  //Combines para mark with element revision\n  Editor.prototype.checkParaMarkMatchedWithElement = function (lastElement, characterFormat, isBegin, revisionType) {\n    var matchedRevisions = this.getMatchedRevisionsToCombine(lastElement.revisions, revisionType);\n    if (matchedRevisions.length > 0) {\n      this.mapMatchedRevisions(matchedRevisions, lastElement, characterFormat, isBegin);\n      return true;\n    }\n    return false;\n  };\n  Editor.prototype.checkToMatchEmptyParaMark = function (paraWidget, paragraphAdv) {\n    var prevPara = paraWidget.previousRenderedWidget;\n    if (!isNullOrUndefined(prevPara) && prevPara instanceof ParagraphWidget && prevPara.characterFormat.revisions.length > 0) {\n      var matchedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, 'Insertion');\n      if (matchedRevisions.length > 0) {\n        if (!isNullOrUndefined(paragraphAdv)) {\n          this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paragraphAdv.characterFormat, false);\n        } else {\n          this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paraWidget.characterFormat, false);\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n  Editor.prototype.checkToMatchEmptyParaMarkBack = function (paraWidget) {\n    var prevPara = paraWidget.nextRenderedWidget;\n    var lineWid = prevPara.childWidgets[0];\n    var textWid = lineWid.children[0];\n    if (!isNullOrUndefined(prevPara) && prevPara instanceof ParagraphWidget && prevPara.characterFormat.revisions.length > 0) {\n      var matchedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, 'Deletion');\n      if (matchedRevisions.length > 0) {\n        if (prevPara != undefined && lineWid != undefined && textWid != undefined && textWid.revisions.length == 1) {\n          this.mapMatchedRevisions(matchedRevisions, textWid, paraWidget.characterFormat, true);\n          return true;\n        } else {\n          this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paraWidget.characterFormat, true);\n          return true;\n        }\n      }\n    } else if (textWid != undefined && textWid.revisions.length == 1) {\n      var matchedRevisions = this.getMatchedRevisionsToCombine(textWid.revisions, 'Deletion');\n      if (matchedRevisions.length > 0) {\n        this.mapMatchedRevisions(matchedRevisions, textWid, paraWidget.characterFormat, true);\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateNextBlocksIndex = function (block, increaseIndex) {\n    if (isNullOrUndefined(block.nextRenderedWidget) || block.nextRenderedWidget instanceof ParagraphWidget && block.bodyWidget.index !== block.nextRenderedWidget.bodyWidget.index) {\n      return;\n    }\n    var nextIndex = block.containerWidget.childWidgets.indexOf(block) + 1;\n    if (block.containerWidget instanceof BodyWidget && !(block.containerWidget.containerWidget instanceof FootNoteWidget)) {\n      // let startSel = this.selection.startOffset.substring(0,1);\n      // let endSel = this.selection.endOffset.substring(0,1);\n      if (block.containerWidget.page.bodyWidgets.length > 1 && block.containerWidget.sectionFormat.numberOfColumns > 1) {\n        var fromSectionIndex = block.containerWidget.indexInOwner;\n        for (var i = this.documentHelper.pages.indexOf(block.containerWidget.page); i < this.documentHelper.pages.length; i++) {\n          var page = this.documentHelper.pages[i];\n          for (var j = 0; j < page.bodyWidgets.length; j++) {\n            if (page.bodyWidgets[j].indexInOwner === fromSectionIndex) {\n              for (var k = nextIndex; k < page.bodyWidgets[j].childWidgets.length; k++) {\n                var childWidget = page.bodyWidgets[j].childWidgets[k];\n                this.updateIndex(childWidget, increaseIndex);\n              }\n              nextIndex = 0;\n              if (!isNullOrUndefined(page.bodyWidgets[j].nextRenderedWidget) && page.bodyWidgets[j].nextRenderedWidget.sectionIndex === page.bodyWidgets[j].sectionIndex) {\n                fromSectionIndex++;\n              }\n            }\n          }\n          if (fromSectionIndex !== block.containerWidget.indexInOwner && !isNullOrUndefined(page.bodyWidgets[page.bodyWidgets.length - 1].nextRenderedWidget) && page.bodyWidgets[page.bodyWidgets.length - 1].nextRenderedWidget.sectionFormat.columns.length > 1) {\n            fromSectionIndex = 0;\n          }\n        }\n      } else if (block.containerWidget.page.bodyWidgets.length > 1) {\n        var currentSectionIndex = block.containerWidget.index;\n        for (var i = this.documentHelper.pages.indexOf(block.containerWidget.page); i < this.documentHelper.pages.length; i++) {\n          var page = this.documentHelper.pages[i];\n          for (var j = 0; j < page.bodyWidgets.length; j++) {\n            if (page.bodyWidgets[j].index === currentSectionIndex) {\n              for (var k = nextIndex; k < page.bodyWidgets[j].childWidgets.length; k++) {\n                var childWidget = page.bodyWidgets[j].childWidgets[k];\n                this.updateIndex(childWidget, increaseIndex);\n              }\n              nextIndex = 0;\n            }\n          }\n        }\n      } else {\n        var currentSectionIndex = block.containerWidget.index;\n        for (var j = this.documentHelper.pages.indexOf(block.containerWidget.page); j < this.documentHelper.pages.length; j++) {\n          var page = this.documentHelper.pages[j];\n          if (page.bodyWidgets[0].index === currentSectionIndex) {\n            for (var k = nextIndex; k < page.bodyWidgets[0].childWidgets.length; k++) {\n              var childWidget = page.bodyWidgets[0].childWidgets[k];\n              this.updateIndex(childWidget, increaseIndex);\n            }\n            nextIndex = 0;\n          } else {\n            return;\n          }\n        }\n      }\n    } else if (block.containerWidget instanceof TableCellWidget) {\n      var cells = block.containerWidget.getSplitWidgets();\n      var currentCellIndex = cells.indexOf(block.containerWidget);\n      for (var x = currentCellIndex; x < cells.length; x++) {\n        var blocks = cells[x].childWidgets;\n        for (var y = nextIndex; y < blocks.length; y++) {\n          this.updateIndex(blocks[y], increaseIndex);\n        }\n        currentCellIndex = 0;\n        nextIndex = 0;\n      }\n    } else if (block.containerWidget instanceof TableRowWidget) {\n      for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n        var cell = block.containerWidget.childWidgets[i];\n        if (cell.rowIndex === block.containerWidget.index) {\n          this.updateIndex(cell, increaseIndex);\n        }\n      }\n    } else if (block.containerWidget instanceof TableWidget) {\n      for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n        var row = block.containerWidget.childWidgets[i];\n        this.updateIndex(row, increaseIndex);\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          row.childWidgets[j].rowIndex = row.index;\n        }\n      }\n      //update Row index of all the cell\n    } else if (block.containerWidget instanceof HeaderFooterWidget || block.containerWidget instanceof TextFrame || !isNullOrUndefined(block.containerWidget) && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n      for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n        var nextBlock = block.containerWidget.childWidgets[i];\n        this.updateIndex(nextBlock, increaseIndex);\n      }\n    }\n  };\n  Editor.prototype.updateIndex = function (widget, increment) {\n    if (increment) {\n      widget.index++;\n    } else {\n      widget.index--;\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateEndPosition = function () {\n    var selection = this.documentHelper.selection;\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      this.updateHistoryPosition(selection.start, false);\n    }\n  };\n  /**\n   * @private\n   * @returns { CommentCharacterElementBox[] }\n   */\n  Editor.prototype.checkAndRemoveComments = function () {\n    var selection = this.selection;\n    if (selection.isEmpty || this.owner.enableTrackChanges) {\n      return [];\n    }\n    var initComplexHistory = false;\n    var comments = this.getSelectedComments();\n    if (comments.commentEndInfo.length > 0 || comments.commentStartInfo.length > 0) {\n      if (!initComplexHistory) {\n        initComplexHistory = true;\n        this.initComplexHistory('RemoveComment');\n      }\n      var startPosition = this.selection.start;\n      var endPosition = this.selection.end;\n      if (!this.selection.isForward) {\n        startPosition = this.selection.end;\n        endPosition = this.selection.start;\n      }\n      //Get start and end position in order.\n      var startBlockInfo = this.selection.getParagraphInfo(startPosition);\n      var endBlockInfo = this.selection.getParagraphInfo(endPosition);\n      for (var j = 0; j < comments.commentEndInfo.length; j++) {\n        var commentToDelete = comments.commentEndInfo[j].comment;\n        var commentStart = commentToDelete.commentStart;\n        var commentEndMark = commentToDelete.commentEnd;\n        var commentStartBlockInfo = this.selection.getParagraphInfoInternal(commentStart.line, commentStart.line.getOffset(commentStart, 0));\n        var commentEndBlockInfo = this.selection.getParagraphInfoInternal(commentEndMark.line, commentEndMark.line.getOffset(commentEndMark, 0));\n        if (endBlockInfo.paragraph === commentEndBlockInfo.paragraph) {\n          if (commentToDelete.replyComments.length > 0) {\n            for (var m = 0; m < commentToDelete.replyComments.length; m++) {\n              var replyComment = commentToDelete.replyComments[m];\n              if (!isNullOrUndefined(replyComment.commentEnd)) {\n                endBlockInfo.offset--;\n              }\n            }\n          }\n          endBlockInfo.offset--;\n        }\n        if (startBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n          var updateStartPosition = commentStartBlockInfo.offset < startBlockInfo.offset;\n          if (commentToDelete.replyComments.length > 0) {\n            for (var m = 0; m < commentToDelete.replyComments.length; m++) {\n              var replyComment = commentToDelete.replyComments[m];\n              if (!isNullOrUndefined(replyComment.commentStart)) {\n                var replyCommentStart = this.selection.getParagraphInfoInternal(replyComment.commentStart.line, replyComment.commentStart.line.getOffset(replyComment.commentStart, 0));\n                if (replyCommentStart.offset < startBlockInfo.offset) {\n                  startBlockInfo.offset--;\n                }\n                if (endBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n                  endBlockInfo.offset--;\n                }\n              }\n            }\n          }\n          if (updateStartPosition) {\n            startBlockInfo.offset--;\n          }\n          if (endBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n            endBlockInfo.offset--;\n          }\n        }\n        this.deleteCommentInternal(commentToDelete);\n      }\n      if (comments.commentStartInfo.length > 0) {\n        for (var k = 0; k < comments.commentStartInfo.length; k++) {\n          if (comments.commentStartInfo[k].line.paragraph.equals(endBlockInfo.paragraph)) {\n            endBlockInfo.offset--;\n          }\n          this.removeInline(comments.commentStartInfo[k]);\n        }\n      }\n      var startLineInfo = selection.getLineInfoBasedOnParagraph(startBlockInfo.paragraph, startBlockInfo.offset);\n      selection.start.setPositionFromLine(startLineInfo.line, startLineInfo.offset);\n      var endLineInfo = selection.getLineInfoBasedOnParagraph(endBlockInfo.paragraph, endBlockInfo.offset);\n      selection.end.setPositionFromLine(endLineInfo.line, endLineInfo.offset);\n    }\n    return comments.commentStartInfo;\n  };\n  Editor.prototype.updateHistoryForComments = function (removedCommentStart) {\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo) && this.editorHistory.currentHistoryInfo.action === 'RemoveComment') {\n      if (!isNullOrUndefined(removedCommentStart)) {\n        for (var i = 0; i < removedCommentStart.length; i++) {\n          this.initInsertInline(removedCommentStart[i], false);\n        }\n      }\n      this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n      this.editorHistory.updateComplexHistory();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onBackSpace = function () {\n    this.removeEditRange = true;\n    var selection = this.documentHelper.selection;\n    this.documentHelper.triggerSpellCheck = true;\n    if (selection.bookmarks.length > 0) {\n      this.extendSelectionToBookmarkStart();\n    }\n    if (selection.isEmpty) {\n      this.singleBackspace(selection, false);\n    } else {\n      var comments = this.checkAndRemoveComments();\n      this.initHistory('BackSpace');\n      var skipBackSpace = this.deleteSelectedContents(selection, true);\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n        if (skipBackSpace) {\n          this.editorHistory.currentBaseHistoryInfo = undefined;\n        } else {\n          if (this.checkEndPosition(selection)) {\n            this.updateHistoryPosition(selection.end, false);\n          }\n          this.isSkipOperationsBuild = !isNullOrUndefined(this.alertDialog);\n          this.reLayout(selection);\n          this.isSkipOperationsBuild = false;\n          this.insertSpaceInFormField();\n        }\n      }\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n        for (var k = 0; k < comments.length; k++) {\n          this.initInsertInline(comments[k], false);\n        }\n        this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n        this.editorHistory.updateComplexHistory();\n      }\n      if (this.owner.isSpellCheck) {\n        this.documentHelper.triggerSpellCheck = false;\n      }\n    }\n    this.removeEditRange = false;\n    this.documentHelper.layout.islayoutFootnote = false;\n    this.updateXmlMappedContentControl();\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.insertRemoveBookMarkElements = function (isUpdateComplexHistory) {\n    var isHandledComplexHistory = false;\n    for (var i = 0; i < this.removedBookmarkElements.length; i++) {\n      var bookMark = this.removedBookmarkElements[i];\n      if (bookMark.bookmarkType === 0) {\n        var bookMarkStart = bookMark;\n        if (bookMarkStart && bookMarkStart.reference && this.removedBookmarkElements.indexOf(bookMarkStart.reference) !== -1) {\n          var endIndex = this.removedBookmarkElements.indexOf(bookMarkStart.reference);\n          var startIndex = this.removedBookmarkElements.indexOf(bookMarkStart);\n          this.removedBookmarkElements.splice(endIndex, 1);\n          this.removedBookmarkElements.splice(startIndex, 1);\n          i--;\n        } else {\n          if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n            this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n            this.editorHistory.updateHistory();\n          }\n          this.initInsertInline(bookMarkStart.clone(), undefined, true);\n          if (this.editorHistory.currentHistoryInfo && i === this.removedBookmarkElements.length - 1 && this.removedEditRangeStartElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n            this.editorHistory.updateComplexHistory();\n            isHandledComplexHistory = true;\n          }\n        }\n      } else {\n        var bookMarkEnd = bookMark;\n        if (bookMarkEnd && bookMarkEnd.reference && this.removedBookmarkElements.indexOf(bookMarkEnd.reference) !== -1) {\n          var endIndex = this.removedBookmarkElements.indexOf(bookMarkEnd.reference);\n          var startIndex = this.removedBookmarkElements.indexOf(bookMarkEnd);\n          this.removedBookmarkElements.splice(endIndex, 1);\n          this.removedBookmarkElements.splice(startIndex, 1);\n          i--;\n        } else {\n          if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n            this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n            this.editorHistory.updateHistory();\n          }\n          this.initInsertInline(bookMarkEnd.clone(), undefined, true);\n          if (this.editorHistory.currentHistoryInfo && i === this.removedBookmarkElements.length - 1 && this.removedEditRangeStartElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n            this.editorHistory.updateComplexHistory();\n            isHandledComplexHistory = true;\n          }\n        }\n      }\n    }\n    this.removedBookmarkElements = [];\n    return isHandledComplexHistory;\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.insertRemovedEditRangeEndElements = function (isUpdateComplexHistory) {\n    var isHandledComplexHistory = false;\n    for (var i = this.removedEditRangeEndElements.length - 1; i >= 0; i--) {\n      var editRangeEndElementBox = this.removedEditRangeEndElements[i];\n      if (editRangeEndElementBox && this.removedEditRangeStartElements.indexOf(editRangeEndElementBox.editRangeStart) !== -1) {\n        var endIndex = this.removedEditRangeEndElements.indexOf(editRangeEndElementBox);\n        var startIndex = this.removedEditRangeStartElements.indexOf(editRangeEndElementBox.editRangeStart);\n        this.removedEditRangeEndElements.splice(endIndex, 1);\n        this.removedEditRangeStartElements.splice(startIndex, 1);\n        i--;\n      } else {\n        if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n          this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n          this.editorHistory.updateHistory();\n        }\n        this.initInsertInline(editRangeEndElementBox.clone(), undefined, true);\n        var inlineObj = this.selection.start.paragraph.getInline(this.selection.start.offset, 0);\n        inlineObj.element.editRangeStart.editRangeEnd = inlineObj.element;\n        if (this.editorHistory.currentHistoryInfo && i === 0 && this.removedEditRangeStartElements.length === 0 && this.removedBookmarkElements.length === 0) {\n          this.editorHistory.updateComplexHistory();\n          isHandledComplexHistory = true;\n        }\n      }\n    }\n    this.removedEditRangeEndElements = [];\n    return isHandledComplexHistory;\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.insertRemovedEditRangeStartElements = function (isUpdateComplexHistory) {\n    var isHandledComplexHistory = false;\n    for (var i = 0; i < this.removedEditRangeStartElements.length; i++) {\n      var editRangeStartElementBox = this.removedEditRangeStartElements[i];\n      if (editRangeStartElementBox && this.removedEditRangeEndElements.indexOf(editRangeStartElementBox.editRangeEnd) !== -1) {\n        var endIndex = this.removedEditRangeEndElements.indexOf(editRangeStartElementBox.editRangeEnd);\n        var startIndex = this.removedEditRangeStartElements.indexOf(editRangeStartElementBox);\n        this.removedEditRangeEndElements.splice(endIndex, 1);\n        this.removedEditRangeStartElements.splice(startIndex, 1);\n        i--;\n      } else {\n        if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n          this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n          this.editorHistory.updateHistory();\n        }\n        this.initInsertInline(editRangeStartElementBox.clone(), undefined, true);\n        var inlineObj = this.selection.start.paragraph.getInline(this.selection.start.offset, 0);\n        inlineObj.element.editRangeEnd.editRangeStart = inlineObj.element;\n        if (this.editorHistory.currentHistoryInfo && i === this.removedEditRangeStartElements.length - 1 && this.removedBookmarkElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n          this.editorHistory.updateComplexHistory();\n          isHandledComplexHistory = true;\n        }\n      }\n    }\n    this.removedEditRangeStartElements = [];\n    return isHandledComplexHistory;\n  };\n  /**\n   * @private\n   * @param {Selection} selection - Specifies the selection\n   * @param {boolean} isBackSpace - Specifies is backspace.\n   * @returns {boolean}\n   */\n  Editor.prototype.deleteSelectedContents = function (selection, isBackSpace, isDeletecell) {\n    var skipBackSpace = this.deleteSelectedContentInternal(selection, isBackSpace, selection.start, selection.end, isDeletecell);\n    var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n    selection.selectContent(textPosition, true);\n    return skipBackSpace;\n  };\n  Editor.prototype.removeWholeElement = function (selection) {\n    this.initHistory('BackSpace');\n    this.deleteSelectedContents(selection, true);\n    if (this.checkEndPosition(selection)) {\n      this.updateHistoryPosition(selection.end, false);\n    }\n    this.reLayout(selection);\n  };\n  Editor.prototype.getSelectedComments = function () {\n    var comments = this.documentHelper.comments;\n    var commentEnds = [];\n    var commentStarts = [];\n    for (var i = 0; i < comments.length; i++) {\n      var comment = comments[i];\n      var commentEnd = comment.commentEnd;\n      var commentStart = comment.commentStart;\n      if (!isNullOrUndefined(commentEnd) && this.selection.isElementInSelection(commentEnd, true)) {\n        commentEnds.push(commentEnd);\n      } else if (!isNullOrUndefined(commentStart) && this.selection.isElementInSelection(commentStart, true)) {\n        commentStarts.push(commentStart);\n        for (var j = 0; j < comment.replyComments.length; j++) {\n          if (comment.replyComments[j].commentStart) {\n            commentStarts.push(comment.replyComments[j].commentStart);\n          }\n        }\n      }\n    }\n    return {\n      commentStartInfo: commentStarts,\n      commentEndInfo: commentEnds\n    };\n  };\n  /**\n   * Remove single character on left of cursor position\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {boolean} isRedoing - Specified the is redoing.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.singleBackspace = function (selection, isRedoing) {\n    var history = this.editorHistory;\n    // If backspace is pressed after auto format to hyperlink is done, need to undo auto format.\n    if (history && !isRedoing && !history.canRedo() && history.canUndo()) {\n      var historyInfo = history.undoStack[history.undoStack.length - 1];\n      var startBlockInfo = this.selection.getParagraphInfo(selection.start);\n      var endBlockInfo = this.selection.getParagraphInfo(selection.end);\n      if (historyInfo.action === 'AutoFormatHyperlink' && historyInfo.insertPosition === this.selection.getHierarchicalIndex(startBlockInfo.paragraph, startBlockInfo.offset.toString()) && historyInfo.endPosition === this.selection.getHierarchicalIndex(endBlockInfo.paragraph, endBlockInfo.offset.toString())) {\n        history.undo();\n        return;\n      }\n    }\n    var isCommentDelete = false;\n    var paragraph = selection.start.paragraph;\n    var currentLineWidget = selection.start.currentWidget;\n    var offset = selection.start.offset;\n    var indexInInline = 0;\n    var inlineObj = currentLineWidget.getInline(offset, indexInInline);\n    var inline = inlineObj.element;\n    var initComplextHistory = false;\n    var previousOffset = offset;\n    var updateSelection = false;\n    var previousNode;\n    while (inline instanceof CommentCharacterElementBox) {\n      var commentMark = inline;\n      inline = inline.previousNode;\n      if (isNullOrUndefined(inline)) {\n        inline = previousNode;\n      }\n      if (!isNullOrUndefined(inline) && inline.commentType == 0) {\n        previousNode = inline.previousNode;\n      }\n      if (inline) {\n        previousOffset = inline.length;\n      }\n      if (commentMark.commentType === 0 && (isNullOrUndefined(inline) || !(inline instanceof CommentCharacterElementBox))) {\n        if (isNullOrUndefined(inline)) {\n          inline = commentMark;\n          previousOffset = 0;\n        } else {\n          previousOffset = inline.length;\n        }\n        updateSelection = true;\n        break;\n      } else if (commentMark.commentType === 1) {\n        if (!initComplextHistory) {\n          this.initComplexHistory('RemoveComment');\n          initComplextHistory = true;\n        }\n        this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.deleteCommentInternal(commentMark.comment);\n        this.isSkipOperationsBuild = false;\n        updateSelection = true;\n      }\n    }\n    if (updateSelection) {\n      //When paragraph has only comment end mark, there will be no previous inline and comment end mark will be delete\n      //And paragraph will become empty paragraph.\n      //So handled special case to update selection.\n      if (isNullOrUndefined(inline)) {\n        var lineWidget = paragraph.childWidgets[0];\n        selection.start.setPositionParagraph(lineWidget, 0);\n        selection.end.setPositionParagraph(lineWidget, 0);\n      } else {\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, previousOffset);\n        selection.start.setPositionParagraph(inline.line, offset);\n        selection.end.setPositionParagraph(inline.line, offset);\n      }\n    }\n    if (this.selection.isInlineFormFillMode()) {\n      if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n        return;\n      }\n      var resultText = this.getFieldResultText();\n      if (resultText.length === 1) {\n        this.selection.selectFieldInternal(this.selection.getCurrentFormField());\n        this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n        this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n        return;\n      }\n    }\n    indexInInline = inlineObj.index;\n    if (inline instanceof TextElementBox) {\n      inline.ignoreOnceItems = [];\n    }\n    if (inline instanceof TextElementBox) {\n      inline.ignoreOnceItems = [];\n    }\n    var previousInline = inline;\n    if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n      if (HelperMethods.isLinkedFieldCharacter(inline)) {\n        var begin = inline.fieldBegin;\n        var end = inline.fieldEnd;\n        if (begin.nextNode instanceof BookmarkElementBox && begin.nextNode.reference) {\n          end = begin.nextNode.reference;\n        }\n        selection.start.setPositionParagraph(begin.line, begin.line.getOffset(begin, 0));\n        selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n        selection.fireSelectionChanged(true);\n        return;\n      }\n    }\n    if (!this.owner.enableTrackChanges && inline instanceof FootnoteElementBox) {\n      if (inline.footnoteType === 'Footnote') {\n        this.removeFootnote(inline);\n      } else {\n        this.removeEndnote(inline);\n      }\n    }\n    if (inline && (inline instanceof ContentControl || inline.previousNode instanceof ContentControl)) {\n      if (inline instanceof ContentControl && inline.previousNode && !(inline.previousElement instanceof ListTextElementBox)) {\n        inline = inline.previousNode;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, inline.length);\n      }\n      if (inline && inline.length === 1 && inline.nextNode instanceof ContentControl && inline.previousNode instanceof ContentControl) {\n        var start_1 = inline.previousNode;\n        var end = inline.nextNode;\n        if (!start_1.contentControlProperties.lockContentControl) {\n          selection.start.setPositionParagraph(start_1.line, start_1.line.getOffset(start_1, 0));\n          selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n          this.removeWholeElement(selection);\n          return;\n        }\n      }\n    }\n    // if (inline instanceof CommentCharacterElementBox && inline.commentType === 1) {\n    //     let comment: CommentElementBox = inline.comment;\n    //     if (comment.isReply) {\n    //         comment = comment.ownerComment;\n    //     }\n    //     while (inline instanceof CommentCharacterElementBox) {\n    //         inline = inline.previousNode;\n    //     }\n    //     this.deleteCommentInternal(comment);\n    //     paragraph = inline.line.paragraph;\n    //     offset = inline.line.getOffset(inline, inline.length);\n    //     selection.start.setPositionParagraph(inline.line, offset);\n    //     selection.end.setPositionParagraph(inline.line, offset);\n    //     isCommentDelete = true;\n    // }\n    if (inline instanceof FieldElementBox && inline.fieldType === 1 && !this.selection.isInlineFormFillMode()) {\n      var prevInline = selection.getPreviousValidElement(inline);\n      if (prevInline instanceof FieldElementBox) {\n        inline = prevInline.fieldBegin;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, 0);\n        if (inline.nextNode instanceof BookmarkElementBox && inline.nextNode.reference) {\n          var start_2 = inline.nextNode.reference;\n          selection.start.setPositionParagraph(start_2.line, start_2.line.getOffset(start_2, 1));\n        }\n        selection.end.setPositionParagraph(inline.line, offset); //Selects the entire field.\n        selection.fireSelectionChanged(true);\n        return;\n      } else if (prevInline !== inline) {\n        inline = prevInline; //Updates the offset to delete next content.\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, inline.length);\n      }\n    }\n    if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n      if (inline.nextNode instanceof EditRangeEndElementBox && inline.editRangeEnd === inline.nextNode || inline.previousNode instanceof EditRangeStartElementBox && inline.editRangeStart === inline.previousNode) {\n        return;\n      }\n      if (inline instanceof EditRangeStartElementBox && !(inline.previousNode instanceof EditRangeEndElementBox)) {\n        return;\n      }\n      if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'ReadOnly') {\n        if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n          return;\n        }\n      }\n      if (inline instanceof EditRangeEndElementBox) {\n        do {\n          if (!isNullOrUndefined(inline.previousNode)) {\n            inline = inline.previousNode;\n            paragraph = inline.line.paragraph;\n            offset = inline.line.getOffset(inline, inline.length);\n          } else {\n            break;\n          }\n        } while (inline instanceof EditRangeEndElementBox);\n      }\n      if (inline.length === 1 && inline.nextNode instanceof EditRangeEndElementBox && inline.previousNode instanceof EditRangeStartElementBox) {\n        var start_3 = inline.previousNode;\n        var end = inline.nextNode;\n        selection.start.setPositionParagraph(start_3.line, start_3.line.getOffset(start_3, 0));\n        selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n        this.removeWholeElement(selection);\n        return;\n      }\n    }\n    if (inline && (inline instanceof BookmarkElementBox || inline.previousNode instanceof BookmarkElementBox)) {\n      if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'ReadOnly') {\n        if (inline.previousNode && inline.previousNode instanceof EditRangeStartElementBox || inline.previousNode instanceof EditRangeEndElementBox) {\n          return;\n        }\n      }\n      if (inline instanceof BookmarkElementBox) {\n        if (inline.previousNode) {\n          inline = inline.previousNode;\n          if (inline instanceof FieldElementBox && !this.selection.isInlineFormFillMode()) {\n            inline = inline.fieldBegin;\n            paragraph = inline.line.paragraph;\n            offset = inline.line.getOffset(inline, 0);\n            if (inline.nextNode instanceof BookmarkElementBox && inline.nextNode.reference) {\n              var start = inline.nextNode.reference;\n              selection.start.setPositionParagraph(start.line, start.line.getOffset(start, 1));\n            }\n            selection.end.setPositionParagraph(inline.line, offset);\n            selection.fireSelectionChanged(true);\n            return;\n          }\n          paragraph = inline.line.paragraph;\n          offset = inline.line.getOffset(inline, inline.length);\n          selection.start.setPositionFromLine(inline.line, offset);\n          selection.end.setPositionInternal(selection.start);\n        } else {\n          if (inline.bookmarkType === 1) {\n            // remove paragraph mark and move bookmark to previous paragraph\n            if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n              var prevParagraph = paragraph.previousRenderedWidget;\n              var line = prevParagraph.lastChild;\n              selection.start.setPositionParagraph(inline.line, inline.line.getOffset(inline, 0));\n              selection.end.setPositionParagraph(line, line.getEndOffset());\n              this.removeWholeElement(selection);\n              return;\n            }\n          } else {\n            if (inline.paragraph.previousWidget instanceof ParagraphWidget) {\n              selection.start.setPositionFromLine(inline.line, 0);\n              selection.end.setPositionInternal(selection.start);\n              offset = 0;\n            } else {\n              return;\n            }\n          }\n        }\n        // Remove bookmark if selection is in between bookmark start and end element.\n      } else if (inline.nextNode instanceof BookmarkElementBox && inline instanceof BookmarkElementBox && inline.bookmarkType === 0 && inline.reference === inline.nextNode) {\n        this.deleteBookmark(inline.name);\n        return;\n      }\n      if (inline.length === 1 && inline.nextNode instanceof BookmarkElementBox && inline.previousNode instanceof BookmarkElementBox) {\n        var begin = inline.previousNode;\n        var end = inline.nextNode;\n        selection.start.setPositionParagraph(begin.line, begin.line.getOffset(begin, 0));\n        selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n        this.removeWholeElement(selection);\n        return;\n      }\n    }\n    if (!isRedoing) {\n      this.initHistory('BackSpace');\n    }\n    if (offset === selection.getStartOffset(paragraph) && selection.start.currentWidget.isFirstLine()) {\n      if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n        // BUG_859140 - handled backspace for list as per word desktop behaviour\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.undoStack) && this.editorHistory.undoStack.length > 0 && this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].action === 'ListFormat') {\n          this.onApplyListInternal(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId), paragraph.paragraphFormat.listFormat.listLevelNumber - 1);\n        } else {\n          this.onApplyList(undefined);\n        }\n        return;\n      }\n      if (paragraph.paragraphFormat.firstLineIndent !== 0) {\n        this.onApplyParagraphFormat('firstLineIndent', 0, false, false);\n        if (paragraph.paragraphFormat.leftIndent !== 0) {\n          this.onApplyParagraphFormat('leftIndent', 0, false, false);\n        }\n        return;\n      }\n      if (paragraph.paragraphFormat.leftIndent !== 0) {\n        this.onApplyParagraphFormat('leftIndent', 0, false, false);\n        return;\n      }\n      if (!paragraph.paragraphFormat.bidi && paragraph.paragraphFormat.textAlignment !== 'Left') {\n        this.onApplyParagraphFormat('textAlignment', 'Left', false, true);\n        return;\n      }\n      if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n        selection.owner.isShiftingEnabled = true;\n        var previousParagraph = paragraph.previousRenderedWidget;\n        // if (isNullOrUndefined(previousParagraph)) {\n        //     previousParagraph = this.documentHelper.selection.getPreviousBlock(paragraph) as ParagraphWidget;\n        // }\n        if (this.owner.enableTrackChanges && paragraph.previousRenderedWidget != undefined && paragraph.previousRenderedWidget.characterFormat.revisions.length == 0) {\n          if (!this.checkToMatchEmptyParaMarkBack(previousParagraph)) {\n            this.insertRevision(previousParagraph.characterFormat, 'Deletion');\n            var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n            var previousIndex = previousParagraph.childWidgets.length - 1;\n            this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n            selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n            this.addRemovedNodes(paragraph);\n          } else {\n            var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n            var previousIndex = previousParagraph.childWidgets.length - 1;\n            this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n            selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n            this.addRemovedNodes(paragraph);\n          }\n        } else if (previousParagraph.isEmpty() && !this.owner.enableTrackChanges) {\n          this.removePrevParaMarkRevision(paragraph);\n          if (!(paragraph === paragraph.bodyWidget.lastChild && previousParagraph.bodyWidget.index !== paragraph.bodyWidget.index)) {\n            this.removeBlock(previousParagraph);\n            this.addRemovedNodes(previousParagraph);\n            var prevParagraph = paragraph.previousRenderedWidget;\n            if (!isNullOrUndefined(prevParagraph) && prevParagraph instanceof ParagraphWidget && prevParagraph.isEmpty() && prevParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n              selection.moveToPreviousCharacter();\n            }\n          } else {\n            var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n            var previousIndex = previousParagraph.childWidgets.length - 1;\n            selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n          }\n        } else if (this.owner.enableTrackChanges && previousParagraph.characterFormat.revisions != undefined && previousParagraph.characterFormat.revisions[0].revisionType == 'Deletion') {\n          var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n          var previousIndex = previousParagraph.childWidgets.length - 1;\n          this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n          selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n          this.addRemovedNodes(paragraph);\n        } else {\n          var checkCombine = false;\n          if (!(paragraph === paragraph.bodyWidget.lastChild && previousParagraph.bodyWidget.index !== paragraph.bodyWidget.index) && paragraph.bodyWidget.sectionFormat.breakCode !== 'NoBreak') {\n            this.removePrevParaMarkRevision(paragraph);\n            this.removeBlock(paragraph, false, true);\n            checkCombine = true;\n          }\n          var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n          var previousIndex = previousParagraph.childWidgets.length - 1;\n          var lineWidget = void 0;\n          if (!paragraph.isEmpty() && checkCombine) {\n            for (var i = 0; i < paragraph.childWidgets.length; i++) {\n              lineWidget = paragraph.childWidgets[i];\n              previousParagraph.childWidgets.push(lineWidget);\n              for (var j = 0; j < lineWidget.children.length; j++) {\n                if (lineWidget.children[j] instanceof FootnoteElementBox) {\n                  var index = this.documentHelper.footnoteCollection.indexOf(lineWidget.children[j]);\n                  if (index === -1) {\n                    lineWidget.children[j].isLayout = false;\n                    var indexcolle = parseInt(lineWidget.children[j].text);\n                    this.documentHelper.footnoteCollection.splice(indexcolle - 1, 0, lineWidget.children[j]);\n                    // this.documentHelper.footnoteCollection.push(lineWidget.children[j] as FootnoteElementBox);\n                  }\n                }\n              }\n              paragraph.childWidgets.splice(i, 1);\n              i--;\n              lineWidget.paragraph = previousParagraph;\n            }\n          }\n          this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n          selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n          if (checkCombine) {\n            this.addRemovedNodes(paragraph);\n          }\n        }\n        this.setPositionForHistory();\n        var footNoteWidgets = this.documentHelper.layout.getFootNoteWidgetsOf(paragraph);\n        if (footNoteWidgets.length > 0) {\n          var layout = this.documentHelper.layout;\n          var bodyWidget = paragraph.bodyWidget;\n          layout.layoutfootNote(bodyWidget.page.footnoteWidget);\n        }\n        // if (!isRedoing) {\n        this.reLayout(selection);\n        // }\n      } else {\n        if (this.editorHistory) {\n          this.editorHistory.currentBaseHistoryInfo = undefined;\n        }\n      }\n    } else {\n      if (!isRedoing) {\n        selection.owner.isShiftingEnabled = true;\n      }\n      var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n      var lineWidget = selection.start.currentWidget;\n      var removeOffset = offset - 1;\n      if (removeOffset < 0) {\n        lineWidget = lineWidget.previousLine;\n        removeOffset = this.documentHelper.selection.getLineLength(lineWidget) + removeOffset;\n      }\n      this.removeAtOffset(lineWidget, selection, removeOffset);\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset - 1, false);\n      this.setPositionForHistory();\n      if (!isRedoing) {\n        this.reLayout(selection);\n        if (isCommentDelete) {\n          this.owner.editorHistoryModule.undoStack[this.owner.editorHistoryModule.undoStack.length - 2].modifiedActions.push(this.owner.editorHistoryModule.undoStack[this.owner.editorHistoryModule.undoStack.length - 1]);\n          this.owner.editorHistoryModule.undoStack.splice(this.owner.editorHistoryModule.undoStack.length - 1, 1);\n          isCommentDelete = false;\n        }\n      } else {\n        this.fireContentChange();\n      }\n    }\n    if (initComplextHistory && this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n      this.editorHistory.updateComplexHistory();\n    }\n  };\n  Editor.prototype.setPositionForHistory = function (editPosition) {\n    var selection = this.documentHelper.selection;\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      if (isNullOrUndefined(editPosition)) {\n        this.updateHistoryPosition(selection.start, true);\n        this.editorHistory.currentBaseHistoryInfo.endPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n      } else {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = editPosition;\n        this.editorHistory.currentBaseHistoryInfo.endPosition = editPosition;\n      }\n    }\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeAtOffset = function (lineWidget, selection, offset) {\n    var count = 0;\n    var lineIndex = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n    var childLength = lineWidget.children.length;\n    for (var i = 0; i < childLength; i++) {\n      var inline = lineWidget.children[i];\n      if (inline instanceof ListTextElementBox) {\n        continue;\n      }\n      var isBreak = this.removeCharacter(inline, offset, count, lineWidget, lineIndex, i);\n      if (isBreak) {\n        break;\n      }\n      count += inline.length;\n    }\n  };\n  Editor.prototype.removeCharacter = function (inline, offset, count, lineWidget, lineIndex, i, isRearrange) {\n    var isBreak = false;\n    if (inline instanceof BookmarkElementBox && inline.reference && inline.line !== inline.reference.line && !(lineWidget.children[i] instanceof BookmarkElementBox)) {\n      if (!isNullOrUndefined(inline.line.previousLine)) {\n        inline.line.previousLine.children.splice(inline.line.previousLine.children.length, 0, inline);\n        inline.line = inline.line.previousLine;\n      } else if (!isNullOrUndefined(inline.line.paragraph.previousRenderedWidget)) {\n        inline.line.paragraph.previousRenderedWidget.lastChild.children.splice(inline.line.paragraph.previousRenderedWidget.lastChild.children.length, 0, inline);\n        inline.line = inline.line.paragraph.previousRenderedWidget.lastChild;\n      } else if (!isNullOrUndefined(inline.line.paragraph.nextRenderedWidget)) {\n        inline.line.paragraph.nextRenderedWidget.firstChild.children.splice(inline.line.paragraph.nextRenderedWidget.firstChild.children.length, 0, inline);\n        inline.line = inline.line.paragraph.nextRenderedWidget.firstChild;\n      }\n      lineWidget.children.splice(i, 1);\n      if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n        lineWidget.layoutedElements.splice(i, 1);\n      }\n      return true;\n    }\n    if (offset < count + inline.length) {\n      var indexInInline = offset - count;\n      inline.ischangeDetected = true;\n      if (this.owner.isSpellCheck) {\n        // here we are removing errorCollection for next & previous elements for recalculating spellcheck error\n        var nextElement = inline.nextElement;\n        var previousElement = inline.previousElement;\n        this.owner.spellCheckerModule.removeErrorsFromCollection({\n          'element': inline,\n          'text': inline.text\n        });\n        if (!isNullOrUndefined(nextElement) && nextElement instanceof TextElementBox) {\n          nextElement.ischangeDetected = true;\n          this.owner.spellCheckerModule.removeErrorsFromCollection({\n            'element': nextElement,\n            'text': nextElement.text\n          });\n        }\n        if (!isNullOrUndefined(previousElement) && previousElement instanceof TextElementBox) {\n          previousElement.ischangeDetected = true;\n          this.owner.spellCheckerModule.removeErrorsFromCollection({\n            'element': previousElement,\n            'text': previousElement.text\n          });\n        }\n        if (!inline.canTrigger) {\n          this.documentHelper.triggerSpellCheck = false;\n        }\n      }\n      if (offset === count && inline.length === 1) {\n        if (this.owner.enableTrackChanges && !this.skipTracking()) {\n          this.addRemovedNodes(inline.clone());\n          this.handleDeleteTracking(inline, indexInInline, 1, i);\n        } else {\n          this.unLinkFieldCharacter(inline);\n          this.unlinkRangeFromRevision(inline, true);\n          this.addRemovedRevisionInfo(inline, undefined);\n          this.addRemovedNodes(inline);\n          if (this.owner.enableTrackChanges && this.editorHistory.isRedoing && inline instanceof FootnoteElementBox) {\n            if (inline.footnoteType === 'Footnote') {\n              this.removeFootnote(inline);\n            } else {\n              this.removeEndnote(inline);\n            }\n          }\n          lineWidget.children.splice(i, 1);\n          if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n            lineWidget.layoutedElements.splice(i, 1);\n          }\n        }\n        this.documentHelper.layout.reLayoutParagraph(lineWidget.paragraph, lineIndex, i, undefined, isRearrange);\n      } else {\n        var span = this.handleDeleteTracking(inline, indexInInline, 1);\n        this.documentHelper.layout.reLayoutParagraph(lineWidget.paragraph, lineIndex, i, undefined, isRearrange);\n        if (!isNullOrUndefined(span)) {\n          if (inline.revisions.length > 0) {\n            this.addRemovedRevisionInfo(inline, span);\n          }\n          this.addRemovedNodes(span);\n        }\n      }\n      if (inline instanceof EditRangeStartElementBox) {\n        this.selection.skipEditRangeRetrieval = true;\n        this.removeUserRestrictionsInternal(inline, undefined, true);\n        this.selection.updateEditRangeCollection();\n        this.fireContentChange();\n        this.selection.skipEditRangeRetrieval = false;\n      }\n      if (inline instanceof BookmarkElementBox) {\n        if (inline.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(inline.name)) {\n          this.documentHelper.bookmarks.remove(inline.name);\n        }\n      }\n      isBreak = true;\n    }\n    return isBreak;\n  };\n  Editor.prototype.removeCharacterInLine = function (inline, indexInInline, endOffset) {\n    var span = new TextElementBox();\n    if (inline instanceof TextElementBox) {\n      span.characterFormat.copyFormat(inline.characterFormat);\n      var removedCount = endOffset === 1 ? 1 : endOffset - indexInInline;\n      span.text = inline.text.substr(indexInInline, removedCount);\n      var text = inline.text;\n      inline.text = text.substring(0, indexInInline) + text.substring(indexInInline + removedCount, text.length);\n      if (inline.contentControlProperties) {\n        span.contentControlProperties = inline.contentControlProperties.clone();\n      }\n    }\n    return span;\n  };\n  Editor.prototype.removeRevisionsInformation = function (elementBox, indexInInline, endOffset, elementIndex) {\n    var removeElement = elementBox.previousElement;\n    var revision;\n    revision = this.retrieveRevisionInOder(removeElement);\n    if (revision.revisionType === 'Insertion') {\n      if (this.isRevisionMatched(removeElement, undefined)) {\n        elementBox.line.children.splice(elementIndex, 1);\n      }\n    }\n  };\n  Editor.prototype.handleDeleteTracking = function (elementBox, indexInInline, endOffset, elementIndex, isSkipRecordRevision, startIndex, endIndex) {\n    var isTrackingEnabled = this.owner.enableTrackChanges;\n    var isUndoing = isNullOrUndefined(this.editorHistory) ? false : this.editorHistory.isUndoing || this.editorHistory.isRedoing;\n    var removedNode = undefined;\n    if (this.canHandleDeletion() || isTrackingEnabled && (!this.skipTracking() || elementBox.paragraph.isInsideTable && !isNullOrUndefined(this.editorHistory) && this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === \"RemoveRowTrack\")) {\n      if (elementBox instanceof BookmarkElementBox || elementBox instanceof CommentCharacterElementBox || elementBox instanceof EditRangeStartElementBox || elementBox instanceof EditRangeEndElementBox) {\n        if (elementBox instanceof BookmarkElementBox && elementBox.previousElement instanceof FieldElementBox && elementBox.previousElement.formFieldData) {\n          if (elementBox.previousElement.revisions.length > 0) {\n            this.removeRevisionsInformation(elementBox, indexInInline, endOffset, elementIndex);\n          }\n        } else {\n          if (isTrackingEnabled && elementBox instanceof BookmarkElementBox) {\n            if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n              this.insertRevision(elementBox, 'Deletion');\n            }\n            this.updateLastElementRevision(elementBox);\n          } else {\n            elementBox.line.children.splice(elementBox.indexInOwner, 1);\n          }\n        }\n        return undefined;\n      }\n      var isDelete = false;\n      if (this.owner.editorHistoryModule) {\n        isDelete = !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete';\n      }\n      if (!this.skipTableElements) {\n        this.updateEndRevisionIndex();\n      }\n      if (elementBox.revisions.length > 0) {\n        var revision = this.retrieveRevisionInOder(elementBox);\n        var index = this.owner.revisions.changes.indexOf(revision);\n        if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && !isSkipRecordRevision) {\n          var startValue = isNullOrUndefined(elementIndex) ? indexInInline : 0;\n          var endValue = isNullOrUndefined(elementIndex) ? endOffset === 1 ? 1 : endOffset - indexInInline : elementBox.length;\n          this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(elementBox, startValue, endValue);\n        }\n        if (revision.revisionType === 'Insertion') {\n          if (this.isRevisionMatched(elementBox, undefined)) {\n            // inserted revision same author as delete revision so we can delete\n            if (isNullOrUndefined(elementIndex)) {\n              removedNode = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n              var revision_2 = elementBox.revisions[0];\n              if (!isNullOrUndefined(revision_2)) {\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision_2);\n              }\n            } else {\n              var index_1 = revision.range.indexOf(elementBox);\n              revision.range.splice(index_1, 1);\n              this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n              if (revision.range.length === 0) {\n                this.owner.revisionsInternal.remove(revision);\n              }\n              this.unLinkFieldCharacter(elementBox);\n              elementBox.line.children.splice(elementIndex, 1);\n            }\n            if (elementBox instanceof FootnoteElementBox) {\n              if (elementBox.footnoteType === 'Footnote') {\n                this.removeFootnote(elementBox);\n              } else {\n                this.removeEndnote(elementBox);\n              }\n            }\n          } else {\n            //Insert revision and delete revision (which is to be included) haven't matched\n            if (isNullOrUndefined(elementIndex)) {\n              var text = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n              var revision_3 = elementBox.revisions[0];\n              if (!isNullOrUndefined(revision_3)) {\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision_3);\n              }\n              if (indexInInline === 0) {\n                var prevElement = elementBox.previousElement;\n                this.handleDeletionForInsertRevision(prevElement, elementBox, text, endOffset, indexInInline, true);\n              } else if (elementBox.length !== indexInInline) {\n                for (var i = elementBox.revisions.length - 1; i >= 0; i--) {\n                  var revision_4 = elementBox.revisions[i];\n                  var index_2 = revision_4.range.indexOf(elementBox);\n                  var newElement = new TextElementBox();\n                  newElement.characterFormat.copyFormat(elementBox.characterFormat);\n                  newElement.line = elementBox.line;\n                  newElement.text = elementBox.text.substr(indexInInline);\n                  newElement.revisions.splice(0, 0, revision_4);\n                  revision_4.range.splice(index_2 + 1, 0, newElement);\n                  text.revisions.splice(0, 0, revision_4);\n                  text.line = elementBox.line;\n                  revision_4.range.splice(index_2 + 1, 0, text);\n                  this.owner.trackChangesPane.updateCurrentTrackChanges(revision_4);\n                  elementBox.text = elementBox.text.substr(0, indexInInline);\n                  var indexInOwner = elementBox.indexInOwner;\n                  elementBox.line.children.splice(indexInOwner + 1, 0, newElement);\n                  elementBox.line.children.splice(indexInOwner + 1, 0, text);\n                  this.addRemovedNodes(text.clone());\n                  this.insertRevision(text, 'Deletion');\n                  this.updateLastElementRevision(text);\n                }\n              } else if (elementBox.length === indexInInline) {\n                var nextElement = elementBox.nextElement;\n                this.handleDeletionForInsertRevision(nextElement, elementBox, text, endOffset, indexInInline, false);\n              } else {\n                if (endOffset === 1) {\n                  if (!isDelete) {\n                    this.selection.start.movePreviousPosition();\n                    this.selection.end.setPositionInternal(this.selection.start);\n                  }\n                } else {\n                  this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n                }\n                this.addRemovedNodes(text.clone());\n                this.insertInlineInternal(text, 'Deletion');\n              }\n            } else if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n              this.insertRevision(elementBox, 'Deletion');\n              this.updateLastElementRevision(elementBox);\n            } else {\n              this.updateLastElementRevision(elementBox);\n            }\n          }\n        } else if (revision.revisionType === 'Deletion') {\n          if (index !== -1 && revision.author !== this.owner.currentUser && revision.range.length > 0) {\n            var range = revision.range;\n            var startOff = range[0] instanceof WCharacterFormat ? 0 : range[0].line.getOffset(range[0], 0);\n            var lastEle = range[range.length - 1] instanceof WCharacterFormat ? range[range.length - 2] : range[range.length - 1];\n            var endOff = lastEle.line.getOffset(lastEle, lastEle.length);\n            var isRevisionInserted = false;\n            if (startOff === indexInInline && endOff === endOffset) {\n              range.splice(range.indexOf(elementBox), 1);\n              this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n              elementBox.revisions.splice(elementBox.revisions.indexOf(revision), 1);\n              if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n                this.insertRevision(elementBox, 'Deletion');\n                isRevisionInserted = true;\n                this.updateLastElementRevision(elementBox);\n              } else {\n                this.combineElementRevision(elementBox.revisions, elementBox.revisions);\n              }\n              if (isRevisionInserted && elementBox.line.getOffset(elementBox, 0) === startOff && this.owner.revisions.changes.indexOf(revision) !== -1) {\n                this.owner.revisions.changes.splice(index, 1);\n              }\n            }\n          }\n          if (endOffset === 1) {\n            if (isDelete) {\n              this.selection.start.moveNextPosition();\n              this.selection.end.setPositionInternal(this.selection.start);\n            } else {\n              this.selection.start.movePreviousPosition();\n              this.selection.end.setPositionInternal(this.selection.start);\n            }\n          } else {\n            if (this.isRevisionMatched(elementBox, 'Deletion')) {\n              this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n            } else {\n              var rangeIndex = revision.range.indexOf(elementBox);\n              var endOff = elementBox.line.getOffset(elementBox, elementBox.length);\n              if (endOff >= endOffset && revision.range.length > rangeIndex + 1) {\n                this.updateRevisionForSpittedTextElement(elementBox, revision.range[rangeIndex + 1]);\n                revision.range.splice(revision.range.indexOf(elementBox), 1);\n                this.toCombineOrInsertRevision(elementBox, 'Deletion');\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n              } else if (revision.range.length === 1 || indexInInline === 0) {\n                this.handleDeleteBySplitting(elementBox, indexInInline, endOffset);\n                if (rangeIndex > 0 && revision.range.length !== 1) {\n                  this.updateRevisionForSpittedTextElement(revision.range[rangeIndex - 1], revision.range[rangeIndex]);\n                  revision = this.retrieveRevisionInOder(elementBox);\n                  revision.range.splice(revision.range.indexOf(elementBox), 1);\n                }\n              } else {\n                revision.range.splice(revision.range.indexOf(elementBox), 1);\n                this.toCombineOrInsertRevision(elementBox, 'Deletion');\n              }\n            }\n          }\n          this.updateLastElementRevision(elementBox);\n        }\n      } else {\n        //No revision information in the element\n        if (!isNullOrUndefined(elementIndex)) {\n          if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n            this.insertRevision(elementBox, 'Deletion');\n          }\n          if (!this.skipFootNoteDeleteTracking) {\n            this.updateLastElementRevision(elementBox);\n          }\n        } else {\n          this.handleDeleteBySplitting(elementBox, indexInInline, endOffset);\n        }\n      }\n    } else {\n      removedNode = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n      var revision = elementBox.revisions[0];\n      if (!isNullOrUndefined(revision)) {\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      }\n    }\n    return removedNode;\n  };\n  Editor.prototype.toCombineOrInsertRevision = function (elementBox, type) {\n    if (!this.checkToCombineRevisionsInSides(elementBox, type)) {\n      this.insertRevision(elementBox, type);\n      this.updateLastElementRevision(elementBox);\n    } else {\n      this.combineElementRevision(elementBox.revisions, elementBox.revisions);\n    }\n  };\n  Editor.prototype.updateLastElementRevision = function (elementBox) {\n    if (!this.skipTableElements) {\n      if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.skipReplace && (!isNullOrUndefined(this.owner.searchModule) ? !this.owner.searchModule.isRepalceTracking : true)) {\n        if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.lastElementRevision)) {\n          this.editorHistory.currentBaseHistoryInfo.lastElementRevision = elementBox;\n        }\n        elementBox.isMarkedForRevision = true;\n      }\n    }\n  };\n  Editor.prototype.updateEndRevisionIndex = function () {\n    if (!isNullOrUndefined(this.editorHistory.undoStack) && this.editorHistory.undoStack.length > 0) {\n      var prevHistoryInfo = this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1];\n      if (prevHistoryInfo.lastElementRevision && isNullOrUndefined(prevHistoryInfo.endRevisionLogicalIndex)) {\n        prevHistoryInfo.updateEndRevisionInfo();\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.retrieveRevisionInOder = function (elementBox) {\n    if (elementBox.revisions.length === 1) {\n      return elementBox.revisions[0];\n    }\n    for (var i = 0; i < elementBox.revisions.length; i++) {\n      if (elementBox.revisions[i].revisionType === 'Deletion') {\n        return elementBox.revisions[i];\n      }\n    }\n    return elementBox.revisions[elementBox.revisions.length - 1];\n  };\n  Editor.prototype.handleDeletionForInsertRevision = function (elementToEnsure, currentElement, spittedSpan, endOffset, indexInInline, isBegin) {\n    if (!isNullOrUndefined(elementToEnsure) && currentElement.revisions.length === 0 && this.isRevisionMatched(elementToEnsure, 'Deletion')) {\n      this.addRemovedNodes(spittedSpan.clone());\n      this.insertTextInline(elementToEnsure, this.selection, spittedSpan.text, 0);\n    } else {\n      var revision = currentElement.revisions[currentElement.revisions.length - 1];\n      var index = revision.range.indexOf(currentElement);\n      revision.range.splice(isBegin ? index : index + 1, 0, spittedSpan);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n      spittedSpan.revisions.splice(0, 0, revision);\n      var isDelete = false;\n      if (this.owner.editorHistoryModule) {\n        isDelete = !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete';\n      }\n      if (endOffset === 1 && !isDelete) {\n        this.selection.start.movePreviousPosition();\n        this.selection.end.setPositionInternal(this.selection.start);\n      } else {\n        this.updateCursorForInsertRevision(currentElement, indexInInline, endOffset);\n      }\n      this.addRemovedNodes(spittedSpan.clone());\n      this.insertInlineInternal(spittedSpan, 'Deletion');\n    }\n  };\n  Editor.prototype.handleDeleteBySplitting = function (elementBox, indexInInline, endOffset) {\n    var isDelete = false;\n    if (this.owner.editorHistoryModule) {\n      isDelete = !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete';\n    }\n    //Update cursor position to insert removed content\n    if (endOffset === 1) {\n      var startPosition = elementBox.line.getOffset(elementBox, 0);\n      if (startPosition > 0) {\n        var currentPosition = new TextPosition(this.owner);\n        currentPosition.setPositionForLineWidget(elementBox.line, startPosition + indexInInline);\n        this.selection.start.setPositionInternal(currentPosition);\n        this.selection.end.setPositionInternal(this.selection.start);\n      } else {\n        if (!isDelete) {\n          this.selection.start.movePreviousPosition();\n          this.selection.end.setPositionInternal(this.selection.start);\n        }\n      }\n    } else {\n      this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n    }\n    var spittedElement = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n    var revision = elementBox.revisions[0];\n    if (!isNullOrUndefined(revision)) {\n      this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n    }\n    this.addRemovedNodes(spittedElement.clone());\n    if (spittedElement.text === '') {\n      this.deleteParagraphMark(elementBox.paragraph, this.selection, 0, true);\n    } else {\n      this.insertTextInternal(spittedElement.text, false, 'Deletion');\n    }\n  };\n  Editor.prototype.updateCursorForInsertRevision = function (inline, startOffset, endOffset) {\n    var startPosition = inline.line.getOffset(inline, 0);\n    if (startPosition > 0) {\n      startOffset = startPosition + startOffset;\n      endOffset = startPosition + endOffset;\n    }\n    var currentPosition = new TextPosition(this.owner);\n    currentPosition.setPositionFromLine(inline.line, startOffset);\n    var endPosition = new TextPosition(this.owner);\n    endPosition.setPositionFromLine(inline.line, endOffset);\n    if (!currentPosition.isExistBefore(endPosition)) {\n      this.selection.start.setPositionInternal(endPosition);\n      this.selection.end.setPositionInternal(endPosition);\n    } else {\n      this.selection.end.setPositionInternal(currentPosition);\n      this.selection.start.setPositionInternal(currentPosition);\n    }\n  };\n  Editor.prototype.checkToCombineRevisionsInSides = function (currentElement, revisionType) {\n    var prevElement = currentElement.previousNode;\n    var nextElement = currentElement.nextNode;\n    var isCombined = false;\n    if (!isNullOrUndefined(prevElement)) {\n      if (!(prevElement instanceof BookmarkElementBox)) {\n        prevElement = prevElement.previousValidNodeForTracking;\n      }\n      if (!isNullOrUndefined(prevElement)) {\n        var matchedRevisions = this.getMatchedRevisionsToCombine(prevElement.revisions, revisionType);\n        if (matchedRevisions.length > 0) {\n          this.mapMatchedRevisions(matchedRevisions, prevElement, currentElement, false);\n          isCombined = true;\n        }\n      }\n    }\n    if (!isNullOrUndefined(nextElement)) {\n      if (!(nextElement instanceof BookmarkElementBox)) {\n        nextElement = nextElement.nextValidNodeForTracking;\n      }\n      if (!isNullOrUndefined(nextElement)) {\n        var matchedRevisions = this.getMatchedRevisionsToCombine(nextElement.revisions, revisionType);\n        if (matchedRevisions.length > 0) {\n          if (isCombined) {\n            this.combineElementRevision(currentElement.revisions, nextElement.revisions);\n          } else {\n            this.mapMatchedRevisions(matchedRevisions, nextElement, currentElement, true);\n          }\n          isCombined = true;\n        }\n      }\n    }\n    return isCombined;\n  };\n  /**\n   * Removes the current selected content or one character right of the cursor.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.delete = function () {\n    this.removeEditRange = true;\n    var selection = this.documentHelper.selection;\n    if (selection.bookmarks.length > 0) {\n      this.extendSelectionToBookmarkStart();\n    }\n    if (selection.isEmpty) {\n      this.singleDelete(selection, false);\n    } else {\n      var commentStarts = this.checkAndRemoveComments();\n      this.initHistory('Delete');\n      this.deleteSelectedContentInternal(selection, false, selection.start, selection.end);\n      var textPosition = new TextPosition(selection.owner);\n      this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n      selection.selectContent(textPosition, true);\n      this.reLayout(selection);\n      this.insertSpaceInFormField();\n      if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo) && this.editorHistory.currentHistoryInfo.action === 'RemoveComment') {\n        for (var k = 0; k < commentStarts.length; k++) {\n          this.initInsertInline(commentStarts[k], false);\n        }\n        this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n        this.editorHistory.updateComplexHistory();\n      }\n    }\n    this.removeEditRange = false;\n    this.documentHelper.layout.islayoutFootnote = false;\n    this.updateXmlMappedContentControl();\n  };\n  Editor.prototype.deleteEditElement = function (selection) {\n    this.initHistory('Delete');\n    this.deleteSelectedContentInternal(selection, false, selection.start, selection.end);\n    var textPosition = new TextPosition(selection.owner);\n    this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n    selection.selectContent(textPosition, true);\n    this.reLayout(selection);\n  };\n  Editor.prototype.removeContentControlMark = function (start, end) {\n    if (!start.contentControlProperties.lockContentControl) {\n      this.selection.start.setPositionParagraph(start.line, start.line.getOffset(start, 0));\n      this.selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n      this.deleteEditElement(this.selection);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Remove single character on right of cursor position\n   *\n   * @param {Selection} selection - Specifies the selection\n   * @param {boolean} isRedoing - Specified the is redoing.\n   * @private\n   * @returns {void}\n   */\n  /* eslint-disable  */\n  Editor.prototype.singleDelete = function (selection, isRedoing) {\n    var lineWidget = selection.start.currentWidget;\n    var paragraph = selection.start.paragraph;\n    var offset = selection.start.offset;\n    var indexInInline = 0;\n    var inlineObj = lineWidget.getInline(selection.start.offset, indexInInline);\n    var inline = inlineObj.element;\n    if (this.selection.isInlineFormFillMode()) {\n      if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n        return;\n      }\n      var resultText = this.getFieldResultText();\n      if (!(inline instanceof TextElementBox)) {\n        inline = inline.nextElement;\n      }\n      if (resultText.length === 1 && inline instanceof TextElementBox) {\n        this.selection.selectFieldInternal(this.selection.getCurrentFormField());\n        this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n        this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n        return;\n      } else {\n        if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n          return;\n        }\n      }\n    }\n    indexInInline = inlineObj.index;\n    if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1 && this.documentHelper.isListTextSelected && selection.contextType === 'List') {\n      this.onApplyList(undefined);\n      return;\n    }\n    if (!isNullOrUndefined(inline) && indexInInline === inline.length && !isNullOrUndefined(inline.nextNode)) {\n      inline = inline.nextNode;\n      if (inline instanceof FieldElementBox && inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin.formFieldData)) {\n        return;\n      }\n      if (inline instanceof FootnoteElementBox) {\n        return;\n      }\n      indexInInline = 0;\n    }\n    var updateSelection = inline instanceof CommentCharacterElementBox;\n    //Skip removing comment start/end mark on delete key\n    while (inline instanceof CommentCharacterElementBox) {\n      if (inline.nextNode) {\n        inline = inline.nextNode;\n        indexInInline = 0;\n      } else {\n        indexInInline = 1;\n        break;\n      }\n    }\n    if (updateSelection) {\n      paragraph = inline.line.paragraph;\n      offset = inline.line.getOffset(inline, indexInInline);\n      selection.start.setPositionParagraph(inline.line, offset);\n      selection.end.setPositionParagraph(inline.line, offset);\n    }\n    if (!this.owner.enableTrackChanges && inline instanceof FootnoteElementBox) {\n      if (inline.footnoteType === 'Footnote') {\n        this.removeFootnote(inline);\n      } else {\n        this.removeEndnote(inline);\n      }\n    }\n    if (!isNullOrUndefined(inline)) {\n      var nextRenderedInline = undefined;\n      var nextInline = selection.getNextValidElement(inline);\n      if (nextInline instanceof ElementBox) {\n        nextRenderedInline = nextInline;\n      }\n      if (!isNullOrUndefined(nextRenderedInline) && nextRenderedInline instanceof FieldElementBox && nextRenderedInline.fieldType === 0) {\n        //Selects the entire field.\n        inline = nextRenderedInline.fieldEnd;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, 1);\n        selection.end.setPositionParagraph(inline.line, offset);\n        if (inline.nextNode instanceof BookmarkElementBox) {\n          var end = inline.nextNode;\n          selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 1));\n        }\n        selection.fireSelectionChanged(true);\n        return;\n      } else if (inline !== nextRenderedInline) {\n        //Updates the offset to delete next content.               \n        inline = nextRenderedInline;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, 0);\n        if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n          offset++;\n        }\n      }\n    }\n    if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n      if (inline.nextNode instanceof EditRangeEndElementBox && inline.editRangeEnd === inline.nextNode || inline.previousNode instanceof EditRangeStartElementBox && inline.editRangeStart === inline.previousNode) {\n        return;\n      }\n      if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'ReadOnly') {\n        if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n          return;\n        }\n      } else {\n        if (inline instanceof EditRangeStartElementBox) {\n          inline = inline.nextNode;\n          offset = inline.line.getOffset(inline, 0);\n          paragraph = inline.line.paragraph;\n        } else if (inline instanceof EditRangeEndElementBox) {\n          offset++;\n        }\n      }\n      if (inline.length === 1 && inline.nextNode instanceof EditRangeEndElementBox && inline.previousNode instanceof EditRangeStartElementBox) {\n        var editStart = inline.previousNode;\n        var editEnd = inline.nextNode;\n        selection.start.setPositionParagraph(editStart.line, editStart.line.getOffset(editStart, 0));\n        selection.end.setPositionParagraph(editEnd.line, editEnd.line.getOffset(editEnd, 0) + 1);\n        this.deleteEditElement(selection);\n        return;\n      }\n    }\n    if (inline && (inline instanceof ContentControl || inline.nextNode instanceof ContentControl)) {\n      if (inline instanceof ContentControl && inline.nextNode) {\n        inline = inline.nextNode;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, 0);\n        // Move cursor inbetween content control\n        selection.start.setPositionParagraph(inline.line, offset);\n        selection.end.setPositionParagraph(inline.line, offset);\n        return;\n      }\n      if (inline && inline.length === 1 && inline.nextNode instanceof ContentControl && inline.previousNode instanceof ContentControl) {\n        if (this.removeContentControlMark(inline.previousNode, inline.nextNode)) {\n          return;\n        }\n      }\n      // Remove content if content control is empty\n      if (inline instanceof ContentControl && inline.previousNode instanceof ContentControl && inline.previousNode.reference === inline) {\n        // Remove content control if there is no element presen in between start and end mark.\n        if (this.removeContentControlMark(inline.previousNode, inline)) {\n          return;\n        }\n      }\n    }\n    if (inline && (inline instanceof BookmarkElementBox && inline.bookmarkType === 0 || inline.nextNode instanceof BookmarkElementBox)) {\n      if (inline.nextNode && inline instanceof BookmarkElementBox) {\n        inline = inline.nextNode;\n        paragraph = inline.line.paragraph;\n        offset = inline.line.getOffset(inline, 0);\n        selection.start.setPositionParagraph(inline.line, offset);\n        selection.end.setPositionParagraph(inline.line, offset);\n      }\n      if (inline.length === 1 && inline.nextNode instanceof BookmarkElementBox && inline.previousNode instanceof BookmarkElementBox) {\n        var bookMarkBegin = inline.previousNode;\n        var bookMarkEnd = inline.nextNode;\n        selection.start.setPositionParagraph(bookMarkBegin.line, bookMarkBegin.line.getOffset(bookMarkBegin, 0));\n        selection.end.setPositionParagraph(bookMarkEnd.line, bookMarkEnd.line.getOffset(bookMarkEnd, 0) + 1);\n        this.deleteEditElement(selection);\n        return;\n      }\n      if (inline instanceof BookmarkElementBox) {\n        offset = inline.line.getOffset(inline, 1);\n      }\n    }\n    if (selection.start.currentWidget.isLastLine() && offset === this.documentHelper.selection.getLineLength(selection.start.currentWidget)) {\n      if (paragraph.isInsideTable && isNullOrUndefined(paragraph.nextWidget)) {\n        return;\n      }\n      var previousParagraph = undefined;\n      var newParagraph = undefined;\n      var nextParagraph = selection.getNextParagraphBlock(paragraph);\n      if (isNullOrUndefined(nextParagraph)) {\n        if (offset > 0) {\n          return;\n        } else {\n          if (paragraph.previousWidget instanceof ParagraphWidget) {\n            previousParagraph = paragraph.previousWidget;\n          }\n          if (paragraph.previousWidget instanceof FootNoteWidget) {\n            return;\n          }\n          if (paragraph.previousWidget instanceof TableWidget) {\n            return;\n          }\n          if (isNullOrUndefined(previousParagraph) || paragraph.isEmpty() && previousParagraph.characterFormat.revisions.length > 0) {\n            return;\n            //Adds an empty paragraph, to ensure minimal content.\n          }\n        }\n      }\n      if (!isRedoing) {\n        this.initHistory('Delete');\n      }\n      if (paragraph.isEndsWithPageBreak || paragraph.isEndsWithColumnBreak) {\n        var lastLine = paragraph.lastChild;\n        var lastChild = lastLine.children[lastLine.children.length - 1];\n        this.selection.start.setPositionForSelection(lastLine, lastChild, 0, this.selection.start.location);\n      }\n      var blockInfo = this.selection.getParagraphInfo(selection.start);\n      selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      if (this.checkInsertPosition(selection)) {\n        this.setPositionForHistory(selection.editPosition);\n      }\n      selection.owner.isShiftingEnabled = true;\n      if (paragraph.isEmpty()) {\n        this.removePrevParaMarkRevision(paragraph, true);\n        var nxtParagraph = selection.getNextParagraphBlock(paragraph);\n        if (!isNullOrUndefined(nxtParagraph) && nxtParagraph instanceof ParagraphWidget && nxtParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n          this.deleteSection(selection, paragraph.bodyWidget, nxtParagraph.bodyWidget, 0);\n          this.editorHistory.currentBaseHistoryInfo.type = \"SectionBreak\";\n        }\n        this.removeBlock(paragraph, false, true);\n        this.addRemovedNodes(paragraph);\n        if (isNullOrUndefined(nextParagraph)) {\n          if (isNullOrUndefined(previousParagraph)) {\n            // selection.selectParagraphInternal(newParagraph, true, true);\n            var paraEndOffset = selection.getParagraphLength(newParagraph) + 1;\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n              this.updateHistoryPosition(selection.start, true);\n              this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(newParagraph, paraEndOffset.toString());\n            }\n          } else {\n            selection.selectParagraphInternal(previousParagraph, false);\n            this.setPositionForHistory();\n          }\n        } else {\n          selection.selectParagraphInternal(nextParagraph, true);\n        }\n      } else {\n        if (this.owner.enableTrackChanges && paragraph.nextRenderedWidget instanceof ParagraphWidget) {\n          var nextParagraph_1 = paragraph.nextRenderedWidget;\n          var startingOffset = 0;\n          var nextIndex = nextParagraph_1.childWidgets.length - 1;\n          paragraph = paragraph.combineWidget(this.owner.viewer);\n          var currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, selection.start.currentWidget, selection.start.offset, true);\n          if (paragraph != undefined && paragraph.characterFormat.revisions.length != 0 && paragraph.characterFormat.revisions[0].revisionType == 'Insertion') {\n            this.removePrevParaMarkRevision(paragraph, true);\n            this.deleteParagraphMark(currentParagraph, selection, 0);\n            this.addRemovedNodes(paragraph);\n            this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n            selection.selectContent(selection.start, true);\n          } else {\n            this.removePrevParaMarkRevision(paragraph, true);\n            this.deleteParagraphMark(currentParagraph, selection, 0, true);\n            this.addRemovedNodes(paragraph);\n            this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n            selection.selects(nextParagraph_1.childWidgets[nextIndex], startingOffset, true);\n          }\n        } else {\n          paragraph = paragraph.combineWidget(this.owner.viewer);\n          var currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, selection.start.currentWidget, selection.start.offset, true);\n          this.removePrevParaMarkRevision(paragraph, true);\n          this.deleteParagraphMark(currentParagraph, selection, 0);\n          this.addRemovedNodes(paragraph);\n          this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n          selection.selectContent(selection.start, true);\n        }\n      }\n      // if (!isRedoing) {\n      this.reLayout(selection);\n      // }\n    } else {\n      this.singleDeleteInternal(selection, isRedoing, paragraph);\n    }\n    var line = selection.start.currentWidget;\n    var elementInfo = line.getInline(selection.start.offset + 1, 0);\n    if (elementInfo.element instanceof BookmarkElementBox) {\n      selection.start.offset++;\n      selection.end.offset++;\n    }\n  };\n  Editor.prototype.singleDeleteInternal = function (selection, isRedoing, paragraph) {\n    if (!isRedoing) {\n      selection.owner.isShiftingEnabled = true;\n      this.initHistory('Delete');\n    }\n    if (this.checkInsertPosition(selection)) {\n      this.updateHistoryPosition(selection.start, true);\n      this.editorHistory.currentBaseHistoryInfo.endPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n    }\n    var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n    var lineWidget = selection.start.currentWidget;\n    var removeOffset = selection.start.offset;\n    var lineLength = selection.getLineLength(selection.start.currentWidget);\n    if (removeOffset >= lineLength) {\n      lineWidget = lineWidget.nextLine;\n      removeOffset = removeOffset - lineLength;\n    }\n    this.removeAtOffset(lineWidget, selection, removeOffset);\n    if (this.owner.enableTrackChanges && !isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'Delete' && lineLength !== selection.getLineLength(selection.start.currentWidget)) {\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset, false);\n    } else if (this.owner.enableTrackChanges && !this.skipTracking()) {\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + 1, false);\n    } else {\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset, false);\n    }\n    if (!isRedoing) {\n      this.reLayout(selection);\n    } else {\n      this.fireContentChange();\n    }\n  };\n  Editor.prototype.deleteParagraphMark = function (paragraph, selection, editAction, handleParaMark, isCombineLastBlock, skipHistoryCollection) {\n    if (isNullOrUndefined(paragraph.containerWidget)) {\n      return;\n    }\n    paragraph = paragraph.combineWidget(this.owner.viewer);\n    var nextParagraph = selection.getNextParagraphBlock(paragraph);\n    if (paragraph.isInsideTable && isNullOrUndefined(paragraph.nextWidget) || isNullOrUndefined(nextParagraph)) {\n      return;\n    }\n    //BodyWidget\n    var section = paragraph.containerWidget instanceof BodyWidget ? paragraph.containerWidget : undefined;\n    var table = undefined;\n    if (selection.getNextRenderedBlock(paragraph) instanceof TableWidget) {\n      table = selection.getNextRenderedBlock(paragraph);\n    } else {\n      table = undefined;\n    }\n    if (nextParagraph.isInsideTable && !isNullOrUndefined(table) && table.contains(nextParagraph.associatedCell)) {\n      if (editAction < 4) {\n        // let nextSection: BodyWidget = table.containerWidget instanceof BodyWidget ? table.containerWidget : undefined;\n        // if (section !== nextSection) {\n        //     this.combineSection(section, selection, nextSection);\n        // }                \n        var offset = 0;\n        this.removeBlock(paragraph);\n        this.documentHelper.layout.clearListElementBox(nextParagraph);\n        this.documentHelper.layout.clearListElementBox(paragraph);\n        for (var i = paragraph.childWidgets.length - 1; i >= 0; i--) {\n          var line = paragraph.childWidgets[i];\n          for (var j = line.children.length - 1; j >= 0; j--) {\n            var element = line.children[j];\n            offset += element.length;\n            nextParagraph.firstChild.children.unshift(element);\n            element.line = nextParagraph.firstChild;\n            // this.layoutInlineCollection(false, 0, nextParagraph.inlines, inline);\n          }\n        }\n        this.documentHelper.layout.reLayoutParagraph(nextParagraph, 0, 0);\n        if (offset > 0) {\n          selection.editPosition = this.selection.getHierarchicalIndex(nextParagraph, offset.toString());\n        }\n      }\n    } else {\n      if (editAction < 4) {\n        // let nextSection: WSection = nextParagraph.section instanceof WSection ? nextParagraph.section as WSection : undefined;\n        // if (section !== nextSection) {\n        //     this.combineSection(section, selection, nextSection);\n        // }\n        var prevLength = paragraph.childWidgets.length - 1;\n        var nextPara = nextParagraph.getSplitWidgets();\n        nextParagraph = nextParagraph.combineWidget(this.owner.viewer);\n        this.documentHelper.layout.clearListElementBox(nextParagraph);\n        this.documentHelper.layout.clearListElementBox(paragraph);\n        this.updateEditPositionOnMerge(paragraph, nextParagraph);\n        var canRemoveParaMark = !isNullOrUndefined(handleParaMark) && handleParaMark ? this.handleDeleteParaMark(paragraph, nextPara[0]) : true;\n        if (canRemoveParaMark) {\n          var prevLastLineIndex = paragraph.childWidgets.length - 1;\n          var elementIndex = paragraph.childWidgets[prevLastLineIndex].children.length - 1;\n          for (var i = 0; i < nextParagraph.childWidgets.length; i++) {\n            var inline_1 = nextParagraph.childWidgets[i];\n            if (nextParagraph.characterFormat.revisions.length > 0) {\n              for (var i_2 = 0; i_2 < nextParagraph.characterFormat.revisions.length; i_2++) {\n                for (var j = 0; j < nextParagraph.characterFormat.revisions[i_2].range.length; j++) {\n                  nextParagraph.characterFormat.revisions[i_2].range[j].ownerBase = paragraph;\n                }\n                paragraph.characterFormat.revisions.push(nextParagraph.characterFormat.revisions[i_2]);\n              }\n            }\n            nextParagraph.childWidgets.splice(i, 1);\n            paragraph.childWidgets.push(inline_1);\n            inline_1.paragraph = paragraph;\n            i--;\n          }\n          for (var i = 0; i < nextParagraph.floatingElements.length; i++) {\n            var inline = nextParagraph.floatingElements[i];\n            nextParagraph.floatingElements.splice(i, 1);\n            paragraph.floatingElements.push(inline);\n            i--;\n          }\n          if (nextParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n            this.deleteSection(selection, paragraph.bodyWidget, nextParagraph.bodyWidget, editAction);\n            this.editorHistory.currentBaseHistoryInfo.type = \"SectionBreak\";\n          }\n          if (nextParagraph.childWidgets.length === 0) {\n            nextParagraph.childWidgets.push(new LineWidget(nextParagraph));\n          }\n          this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n          this.removeBlock(nextParagraph);\n          //this.combineRevisionOnDeleteParaMark(paragraph, prevLastLineIndex, elementIndex);\n          if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo.action !== \"Insert\") {\n            // if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentHistoryInfo) && this.editorHistory.currentHistoryInfo.action == 'Accept All') {\n            //     this.removeRevisionForBlock(nextParagraph, undefined, false, true);\n            // }\n            if (!skipHistoryCollection) {\n              this.addRemovedNodes(nextParagraph, isCombineLastBlock);\n            }\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.handleDeleteParaMark = function (currentPara, nextPara) {\n    if (!this.owner.enableTrackChanges && currentPara.characterFormat.revisions.length > 0) {\n      // If tracking disabled and revision exists then remove revision from character format\n      for (var i = 0; i < currentPara.characterFormat.revisions.length; i++) {\n        var currentRevision = currentPara.characterFormat.revisions[i];\n        var rangeIndex = currentRevision.range.indexOf(currentPara.characterFormat);\n        currentRevision.range.splice(rangeIndex, 1);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        if (currentRevision.range.length === 0) {\n          this.owner.revisions.remove(currentRevision);\n        }\n        return true;\n      }\n    }\n    if (this.owner.enableTrackChanges) {\n      var canRemoveParaMark = false;\n      if (currentPara.characterFormat.revisions.length > 0) {\n        var deleteRevision = this.retrieveRevisionByType(currentPara.characterFormat, 'Deletion');\n        if (!isNullOrUndefined(deleteRevision) && this.isRevisionMatched(deleteRevision, 'Deletion')) {\n          var revisionIndex = currentPara.characterFormat.revisions.indexOf(deleteRevision);\n          currentPara.characterFormat.revisions.splice(revisionIndex, 1);\n          deleteRevision.range.splice(deleteRevision.range.indexOf(currentPara.characterFormat), 1);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(deleteRevision);\n          if (deleteRevision.range.length === 0) {\n            this.owner.revisions.remove(deleteRevision);\n          }\n          canRemoveParaMark = true;\n        }\n        var insertRevision = this.retrieveRevisionByType(currentPara.characterFormat, 'Insertion');\n        if (!isNullOrUndefined(insertRevision) && this.isRevisionMatched(currentPara.characterFormat, 'Insertion')) {\n          var rangeIndex = insertRevision.range.indexOf(currentPara.characterFormat);\n          insertRevision.range.splice(rangeIndex, 1);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(insertRevision);\n          if (insertRevision.range.length === 0) {\n            this.owner.revisions.remove(insertRevision);\n          }\n          canRemoveParaMark = true;\n        }\n        if (canRemoveParaMark) {\n          return true;\n        } else {\n          this.applyRevisionForParaMark(currentPara, nextPara.firstChild, 'Deletion', false);\n        }\n        return false;\n      } else {\n        this.applyRevisionForParaMark(currentPara, nextPara.firstChild, 'Deletion', false);\n        return false;\n      }\n    }\n    return true;\n  };\n  Editor.prototype.insertDeleteParaMarkRevision = function (currentPara, nextPara) {\n    var lastLine = currentPara.lastChild;\n    var lastElement = lastLine.children.length > 0 ? lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking : undefined;\n    if (!isNullOrUndefined(lastElement)) {\n      var matchedRevisions = this.getMatchedRevisionsToCombine(lastElement.revisions, 'Deletion');\n      if (matchedRevisions.length > 0) {\n        this.mapMatchedRevisions(matchedRevisions, lastElement, currentPara.characterFormat, false);\n      }\n    }\n    var firstLine = nextPara.firstChild;\n    var firstElement = firstLine.children[0].nextValidNodeForTracking;\n  };\n  Editor.prototype.retrieveRevisionByType = function (item, revisionToRetrieve) {\n    for (var i = 0; i < item.revisions.length; i++) {\n      if (item.revisions[i].revisionType === revisionToRetrieve) {\n        return item.revisions[i];\n      }\n    }\n    return undefined;\n  };\n  Editor.prototype.combineRevisionOnDeleteParaMark = function (paragraph, lineIndex, elementIndex) {\n    var lastLine = paragraph.childWidgets[lineIndex];\n    var lastElement = lastLine.children[elementIndex];\n    var firstElement = lastElement.nextNode;\n    firstElement = firstElement.nextValidNodeForTracking;\n    lastElement = lastElement.nextValidNodeForTracking;\n    if (firstElement.revisions.length > 0 && lastElement.revisions.length > 0) {\n      this.combineElementRevisions(lastElement, firstElement);\n    }\n  };\n  Editor.prototype.updateEditPositionOnMerge = function (currentParagraph, nextParagraph) {\n    if (this.documentHelper.selection.editPosition === this.selection.getHierarchicalIndex(nextParagraph, '0') && nextParagraph.nextRenderedWidget === undefined) {\n      this.documentHelper.selection.editPosition = this.selection.getHierarchicalIndex(currentParagraph, this.documentHelper.selection.getLineLength(currentParagraph.lastChild).toString());\n    }\n  };\n  Editor.prototype.checkEndPosition = function (selection) {\n    return this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.endPosition);\n  };\n  Editor.prototype.checkInsertPosition = function (selection) {\n    return this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition);\n  };\n  Editor.prototype.checkIsNotRedoing = function () {\n    return this.documentHelper.owner.enableHistoryMode && !this.editorHistory.isRedoing;\n  };\n  /**\n   * deleteSelectedContentInternal\n   * @private\n   */\n  Editor.prototype.deleteSelectedContentInternal = function (selection, isBackSpace, startPosition, endPosition, isDeletecell) {\n    var startPos = startPosition;\n    var endPos = endPosition;\n    if (!startPosition.isExistBefore(endPosition)) {\n      startPos = endPosition;\n      endPos = startPosition;\n    }\n    var blockInfo = this.selection.getParagraphInfo(startPos);\n    selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    var skipBackSpace = false;\n    if (isBackSpace && startPos.isInSameParagraph(endPos)) {\n      //Handled specifically to skip removal of contents, if selection is only paragraph mark and next rendered block is table.\n      if (startPos.offset < endPos.offset && startPos.offset === selection.getParagraphLength(endPos.paragraph)) {\n        var nextBlock = selection.getNextRenderedBlock(startPos.paragraph);\n        skipBackSpace = nextBlock instanceof TableWidget;\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && (this.editorHistory.currentBaseHistoryInfo.action === 'Accept All' || this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change')) {\n          skipBackSpace = false;\n        }\n      }\n      //Handled specifically to remove paragraph completely (Delete behavior), if the selected paragraph is empty.\n      if (endPos.offset === 1 && endPos.offset > selection.getParagraphLength(endPos.paragraph) && !(endPos.paragraph.isInsideTable && isNullOrUndefined(endPos.paragraph.nextWidget))) {\n        isBackSpace = false;\n      }\n    }\n    if (!skipBackSpace) {\n      selection.owner.isShiftingEnabled = true;\n      if (this.checkInsertPosition(selection)) {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = selection.editPosition;\n      }\n      var editAction = isBackSpace ? 1 : 0;\n      this.deleteSelectedContent(endPos.paragraph, selection, startPos, endPos, editAction, isDeletecell);\n    }\n    return skipBackSpace;\n  };\n  /**\n   * Init EditorHistory\n   *\n   * @private\n   * @param {Action} action Specified the action.\n   * @returns {void}\n   */\n  Editor.prototype.initHistory = function (action) {\n    if (this.documentHelper.owner.enableHistoryMode) {\n      this.editorHistory.initializeHistory(action);\n    }\n  };\n  /**\n   * Init Complex EditorHistory\n   *\n   * @private\n   * @param {Action} action Specified the action.\n   * @returns {void}\n   */\n  Editor.prototype.initComplexHistory = function (action) {\n    if (this.documentHelper.owner.enableHistoryMode) {\n      this.editorHistory.initComplexHistory(this.documentHelper.selection, action);\n    }\n  };\n  //Insert Picture implementation starts\n  /**\n   * Insert image\n   *\n   * @private\n   * @param {string} base64String Base64 string, web URL or file URL.\n   * @param {number} width Image width\n   * @param {number} height Image height\n   * @param {string} alternateText Image alternateText\n   * @returns {void}\n   */\n  Editor.prototype.insertPicture = function (base64String, width, height, alternateText, isUiInteracted) {\n    var _this = this;\n    var imageElementBox = new ImageElementBox(true);\n    imageElementBox.width = width;\n    imageElementBox.height = height;\n    if (!isNullOrUndefined(alternateText) || alternateText != \"\") {\n      imageElementBox.alternateText = alternateText;\n    }\n    imageElementBox.textWrappingStyle = 'Inline';\n    if (HelperMethods.formatClippedString(base64String).extension === '.svg') {\n      imageElementBox.metaFileImageString = base64String;\n      imageElementBox.isMetaFile = true;\n      this.generateFallBackImage(base64String, width, height, imageElementBox, isUiInteracted);\n      if (!this.owner.enableCollaborativeEditing) {\n        this.documentHelper.addBase64StringInCollection(imageElementBox);\n        imageElementBox.element.src = this.documentHelper.getImageString(imageElementBox);\n        this.insertPictureInternal(imageElementBox, isUiInteracted);\n      }\n    } else {\n      if (!isNullOrUndefined(this.documentHelper)) {\n        imageElementBox.imageString = base64String;\n        imageElementBox.element.crossOrigin = 'Anonymous';\n        this.documentHelper.addBase64StringInCollection(imageElementBox);\n        var imgStr = this.documentHelper.getImageString(imageElementBox);\n        if (!isNullOrUndefined(imgStr) && (HelperMethods.startsWith(imgStr, 'http://') || HelperMethods.startsWith(imgStr, 'https://'))) {\n          imgStr += \"?t=\" + new Date().getTime();\n          // Generate fall back image for URL images.\n          this.viewer.documentHelper.getBase64(base64String, width, height).then(function (imageUrlString) {\n            _this.viewer.documentHelper.images.get(parseInt(imageElementBox.imageString))[1] = imageUrlString;\n          });\n        }\n        imageElementBox.element.src = imgStr;\n        this.insertPictureInternal(imageElementBox, isUiInteracted);\n      }\n    }\n  };\n  Editor.prototype.generateFallBackImage = function (base64String, width, height, imageElementBox, isUiInteracted) {\n    var _this = this;\n    var drawImage = new Image();\n    drawImage.onload = function () {\n      if (_this.isImageInsert && _this.owner.enableCollaborativeEditing) {\n        _this.isRemoteAction = true;\n      }\n      var displayPixelRatio = Math.max(1, window.devicePixelRatio || 1);\n      var draw = document.createElement('canvas');\n      draw.width = width * displayPixelRatio;\n      draw.height = height * displayPixelRatio;\n      var context = draw.getContext('2d');\n      context.scale(displayPixelRatio, displayPixelRatio);\n      context.drawImage(drawImage, 0, 0, width, height);\n      imageElementBox.imageString = draw.toDataURL('image/png', 1);\n      if (_this.owner.enableCollaborativeEditing) {\n        _this.documentHelper.addBase64StringInCollection(imageElementBox);\n        imageElementBox.element.src = _this.documentHelper.getImageString(imageElementBox);\n        _this.insertPictureInternal(imageElementBox, isUiInteracted, _this.isRemoteAction);\n        _this.isImageInsert = false;\n        _this.isRemoteAction = false;\n      }\n    };\n    drawImage.src = base64String;\n    if (this.isRemoteAction) {\n      this.insertInlineInSelection(this.selection, imageElementBox);\n    }\n  };\n  Editor.prototype.insertPictureInternal = function (imageElementBox, isUiInteracted, isElementInserted) {\n    var selection = this.documentHelper.selection;\n    var removedCommentStart = this.checkAndRemoveComments();\n    this.initHistory('InsertInline');\n    if (isUiInteracted) {\n      this.fitImageToPage(selection, imageElementBox);\n    }\n    if (this.owner.enableCollaborativeEditing) {\n      var imageString = void 0;\n      var metaImageString = void 0;\n      if (imageElementBox.isMetaFile) {\n        imageString = this.documentHelper.images.get(parseInt(imageElementBox.imageString))[1].toString();\n        metaImageString = this.documentHelper.images.get(parseInt(imageElementBox.metaFileImageString))[0].toString();\n      } else {\n        imageString = this.documentHelper.images.get(parseInt(imageElementBox.imageString)).toString();\n      }\n      var imageData = {\n        imageString: imageString,\n        height: HelperMethods.convertPixelToPoint(imageElementBox.height),\n        width: HelperMethods.convertPixelToPoint(imageElementBox.width),\n        metaString: metaImageString,\n        alternativeText: imageElementBox.alternateText\n      };\n      this.editorHistory.currentBaseHistoryInfo.insertedData = imageData;\n      this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Image;\n    }\n    if (!isElementInserted) {\n      this.insertInlineInSelection(selection, imageElementBox);\n    }\n    this.reLayout(selection);\n    this.updateHistoryForComments(removedCommentStart);\n  };\n  Editor.prototype.fitImageToPage = function (selection, imageElementBox) {\n    var section = selection.start.paragraph.bodyWidget;\n    var pageHeight = section.sectionFormat.pageHeight - section.sectionFormat.topMargin - section.sectionFormat.topMargin;\n    var width = 0;\n    if (section instanceof BodyWidget && section.sectionFormat.columns.length > 1) {\n      // column width\n      var colIndex = section.columnIndex;\n      width = section.sectionFormat.columns[colIndex].width;\n    } else {\n      // page width\n      width = HelperMethods.convertPointToPixel(section.sectionFormat.pageWidth - section.sectionFormat.leftMargin - section.sectionFormat.rightMargin);\n    }\n    // Resize image based on page width or column width\n    if (imageElementBox.width > width) {\n      imageElementBox.height = imageElementBox.height * width / imageElementBox.width;\n      imageElementBox.width = width;\n    }\n    if (imageElementBox.height > pageHeight) {\n      imageElementBox.width = imageElementBox.width * pageHeight / imageElementBox.height;\n      imageElementBox.height = pageHeight;\n    }\n  };\n  //Insert Picture implementation ends\n  /**\n   * @param {selection} Selection context.\n   * @param {elementBox} Elementbox\n   * @param selection\n   * @param elementBox\n   * @private\n   */\n  Editor.prototype.insertInlineInSelection = function (selection, elementBox) {\n    if (this.checkIsNotRedoing()) {\n      selection.owner.isShiftingEnabled = true;\n    }\n    if (!selection.isEmpty) {\n      this.removeSelectedContents(selection);\n    }\n    // Need to check below case when undo/redo in trackchanges enabled.  \n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.owner.enableCollaborativeEditing) {\n      this.editorHistory.currentBaseHistoryInfo.insertedElement = elementBox;\n      if (elementBox instanceof CommentCharacterElementBox) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = elementBox.commentType == 0 ? CONTROL_CHARACTERS.Marker_Start : CONTROL_CHARACTERS.Marker_End;\n      } else if (elementBox instanceof FootnoteElementBox) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n        this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elementBox));\n      } else if (elementBox instanceof BookmarkElementBox || elementBox instanceof EditRangeStartElementBox || elementBox instanceof EditRangeEndElementBox || elementBox instanceof FieldElementBox || elementBox instanceof TextElementBox && elementBox.removedIds.length == 0) {\n        this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elementBox, this.editorHistory.isUndoing));\n        if (elementBox instanceof FieldElementBox && elementBox.fieldType === 0) {\n          this.editorHistory.currentBaseHistoryInfo.fieldBegin = elementBox;\n        }\n      }\n    }\n    this.updateInsertPosition();\n    this.insertInlineInternal(elementBox);\n    if (this.checkEndPosition(selection)) {\n      this.updateHistoryPosition(selection.start, false);\n    }\n    this.fireContentChange();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onPortrait = function () {\n    var sectionFormat = new WSectionFormat();\n    var width = this.documentHelper.selection.sectionFormat.pageWidth;\n    var height = this.documentHelper.selection.sectionFormat.pageHeight;\n    if (width > height) {\n      sectionFormat.pageWidth = height;\n      sectionFormat.pageHeight = width;\n    }\n    this.onApplySectionFormat(undefined, sectionFormat);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onLandscape = function () {\n    var sectionFormat = new WSectionFormat();\n    var width = this.documentHelper.selection.sectionFormat.pageWidth;\n    var height = this.documentHelper.selection.sectionFormat.pageHeight;\n    if (width < height) {\n      sectionFormat.pageWidth = height;\n      sectionFormat.pageHeight = width;\n    }\n    this.onApplySectionFormat(undefined, sectionFormat);\n  };\n  Editor.prototype.copyValues = function () {\n    var format = new WSectionFormat();\n    format.bottomMargin = this.documentHelper.selection.sectionFormat.bottomMargin;\n    format.topMargin = this.documentHelper.selection.sectionFormat.topMargin;\n    format.leftMargin = this.documentHelper.selection.sectionFormat.leftMargin;\n    format.rightMargin = this.documentHelper.selection.sectionFormat.rightMargin;\n    format.pageHeight = this.documentHelper.selection.sectionFormat.pageHeight;\n    format.pageWidth = this.documentHelper.selection.sectionFormat.pageWidth;\n    format.footerDistance = this.documentHelper.selection.sectionFormat.footerDistance;\n    format.headerDistance = this.documentHelper.selection.sectionFormat.headerDistance;\n    return format;\n  };\n  /**\n   * @param property\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.changeMarginValue = function (property) {\n    var sectionFormat = this.copyValues();\n    if (property === 'lastCustomSetting' || property === 'normal') {\n      sectionFormat.topMargin = 72;\n      sectionFormat.bottomMargin = 72;\n      sectionFormat.leftMargin = 72;\n      sectionFormat.rightMargin = 72;\n    } else if (property === 'narrow') {\n      sectionFormat.topMargin = 36;\n      sectionFormat.bottomMargin = 36;\n      sectionFormat.leftMargin = 36;\n      sectionFormat.rightMargin = 36;\n    } else if (property === 'moderate') {\n      sectionFormat.topMargin = 72;\n      sectionFormat.bottomMargin = 72;\n      sectionFormat.leftMargin = 54;\n      sectionFormat.rightMargin = 54;\n    } else if (property === 'wide') {\n      sectionFormat.topMargin = 72;\n      sectionFormat.bottomMargin = 72;\n      sectionFormat.leftMargin = 144;\n      sectionFormat.rightMargin = 144;\n    } else if (property === 'mirrored') {\n      sectionFormat.topMargin = 72;\n      sectionFormat.bottomMargin = 72;\n      sectionFormat.leftMargin = 90;\n      sectionFormat.rightMargin = 72;\n    } else if (property === 'office2003Default') {\n      sectionFormat.topMargin = 72;\n      sectionFormat.bottomMargin = 72;\n      sectionFormat.leftMargin = 90;\n      sectionFormat.rightMargin = 90;\n    }\n    this.onApplySectionFormat(undefined, sectionFormat);\n  };\n  /**\n   * @param property\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onPaperSize = function (property) {\n    var sectionFormat = this.copyValues();\n    var width = this.documentHelper.selection.sectionFormat.pageWidth;\n    var height = this.documentHelper.selection.sectionFormat.pageHeight;\n    if (property === 'letter') {\n      if (width < height) {\n        sectionFormat.pageWidth = 612;\n        sectionFormat.pageHeight = 792;\n      } else {\n        sectionFormat.pageWidth = 792;\n        sectionFormat.pageHeight = 612;\n      }\n    } else if (property === 'tabloid') {\n      if (width < height) {\n        sectionFormat.pageWidth = 792;\n        sectionFormat.pageHeight = 1224;\n      } else {\n        sectionFormat.pageWidth = 1224;\n        sectionFormat.pageHeight = 792;\n      }\n    } else if (property === 'legal') {\n      if (width < height) {\n        sectionFormat.pageWidth = 612;\n        sectionFormat.pageHeight = 1008;\n      } else {\n        sectionFormat.pageWidth = 1008;\n        sectionFormat.pageHeight = 612;\n      }\n    } else if (property === 'statement') {\n      if (width < height) {\n        sectionFormat.pageWidth = 396;\n        sectionFormat.pageHeight = 612;\n      } else {\n        sectionFormat.pageWidth = 612;\n        sectionFormat.pageHeight = 396;\n      }\n    } else if (property === 'executive') {\n      if (width < height) {\n        sectionFormat.pageWidth = 522;\n        sectionFormat.pageHeight = 756;\n      } else {\n        sectionFormat.pageWidth = 756;\n        sectionFormat.pageHeight = 522;\n      }\n    } else if (property === 'a3') {\n      if (width < height) {\n        sectionFormat.pageWidth = 841.9;\n        sectionFormat.pageHeight = 1190.55;\n      } else {\n        sectionFormat.pageWidth = 1190.55;\n        sectionFormat.pageHeight = 841.9;\n      }\n    } else if (property === 'a4') {\n      if (width < height) {\n        sectionFormat.pageWidth = 595.3;\n        sectionFormat.pageHeight = 841.9;\n      } else {\n        sectionFormat.pageWidth = 841.9;\n        sectionFormat.pageHeight = 595.3;\n      }\n    } else if (property === 'a5') {\n      if (width < height) {\n        sectionFormat.pageWidth = 419.55;\n        sectionFormat.pageHeight = 595.3;\n      } else {\n        sectionFormat.pageWidth = 595.3;\n        sectionFormat.pageHeight = 419.55;\n      }\n    } else if (property === 'b4') {\n      if (width < height) {\n        sectionFormat.pageWidth = 728.5;\n        sectionFormat.pageHeight = 1031.8;\n      } else {\n        sectionFormat.pageWidth = 1031.8;\n        sectionFormat.pageHeight = 728.5;\n      }\n    } else if (property === 'b5') {\n      if (width < height) {\n        sectionFormat.pageWidth = 515.9;\n        sectionFormat.pageHeight = 728.5;\n      } else {\n        sectionFormat.pageWidth = 728.5;\n        sectionFormat.pageHeight = 515.9;\n      }\n    }\n    this.onApplySectionFormat(undefined, sectionFormat);\n  };\n  //Update List Items\n  /**\n   * @param blockAdv\n   * @param updateNextBlockList\n   * @param blockAdv\n   * @param updateNextBlockList\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateListItemsTillEnd = function (blockAdv, updateNextBlockList) {\n    var block = updateNextBlockList ? this.documentHelper.selection.getNextRenderedBlock(blockAdv) : blockAdv;\n    while (!isNullOrUndefined(block) && !this.documentHelper.isTextInput) {\n      //Updates the list value of the rendered paragraph.\n      this.updateRenderedListItems(block);\n      block = block.getSplitWidgets().pop().nextRenderedWidget;\n    }\n  };\n  /**\n   * @param block\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateWholeListItems = function (block, isFindingListParagraph, listID) {\n    this.documentHelper.renderedLists.clear();\n    this.documentHelper.renderedLevelOverrides = [];\n    var sectionIndex = block.bodyWidget.index;\n    var currentBlock;\n    for (var j = 0; j < this.documentHelper.pages.length; j++) {\n      var page = this.documentHelper.pages[j];\n      for (var i = 0; i < page.bodyWidgets.length; i++) {\n        //if (page.bodyWidgets[i].index === sectionIndex) {\n        currentBlock = this.getNextBlockForList(page.bodyWidgets[i].firstChild);\n        if (!isNullOrUndefined(currentBlock)) {\n          break;\n        }\n        //}\n      }\n      if (!isNullOrUndefined(currentBlock)) {\n        break;\n      }\n    }\n    var isListUpdated = false;\n    do {\n      if (!currentBlock) {\n        break;\n      }\n      var listSearchResultInfo = null;\n      if (isFindingListParagraph) {\n        listSearchResultInfo = {\n          paragraph: null,\n          listId: listID\n        };\n      }\n      isListUpdated = this.updateListItems(currentBlock, block, listSearchResultInfo);\n      if (isListUpdated) {\n        if (!isNullOrUndefined(listSearchResultInfo)) {\n          if (listSearchResultInfo.paragraph == block) {\n            return null;\n          } else {\n            return listSearchResultInfo.paragraph;\n          }\n        }\n        break;\n      }\n      currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n      if (!isNullOrUndefined(currentBlock)) {\n        currentBlock = this.getNextBlockForList(currentBlock);\n      }\n    } while (currentBlock);\n    return null;\n  };\n  Editor.prototype.getNextBlockForList = function (currentBlock) {\n    if (currentBlock instanceof ParagraphWidget && this.documentHelper.layout.isFirstElementWithPageBreak(currentBlock)) {\n      var nextBlock = currentBlock.nextRenderedWidget;\n      if (!isNullOrUndefined(nextBlock) && nextBlock.equals(currentBlock)) {\n        return nextBlock;\n      }\n    }\n    return currentBlock;\n  };\n  Editor.prototype.updateListItems = function (blockAdv, block, listSearchResultInfo) {\n    var isListUpdated = false;\n    if (blockAdv instanceof ParagraphWidget) {\n      isListUpdated = this.updateListItemsForPara(blockAdv, block, listSearchResultInfo);\n    } else {\n      isListUpdated = this.updateListItemsForTable(blockAdv, block, listSearchResultInfo);\n    }\n    return isListUpdated;\n  };\n  Editor.prototype.updateListItemsForTable = function (table, block, listSearchResultInfo) {\n    if (isNullOrUndefined(listSearchResultInfo) && block instanceof TableWidget && table.equals(block)) {\n      return true;\n    }\n    var row = table.firstChild;\n    do {\n      var isListUpdated = this.updateListItemsForRow(row, block, listSearchResultInfo);\n      if (isListUpdated) {\n        return true;\n      }\n      row = row.getSplitWidgets().pop().nextRenderedWidget;\n    } while (row);\n    return false;\n  };\n  Editor.prototype.updateListItemsForRow = function (row, block, listSearchResultInfo) {\n    if (isNullOrUndefined(listSearchResultInfo) && block.isInsideTable && row.childWidgets.indexOf(this.documentHelper.selection.getContainerCell(block.associatedCell)) !== -1) {\n      //Returns as list updated, inorder to start list numbering from first list paragraph of this row.\n      return true;\n    }\n    var cell = row.firstChild;\n    do {\n      this.updateListItemsForCell(cell, block, listSearchResultInfo);\n      if (!isNullOrUndefined(listSearchResultInfo) && !isNullOrUndefined(listSearchResultInfo.paragraph)) {\n        return true;\n      }\n      cell = cell.nextRenderedWidget;\n    } while (cell);\n    return false;\n  };\n  Editor.prototype.updateListItemsForCell = function (cell, block, listSearchResultInfo) {\n    if (cell.childWidgets.length === 0) {\n      return;\n    }\n    var currentBlock = cell.firstChild;\n    do {\n      this.updateListItems(currentBlock, block, listSearchResultInfo);\n      if (!isNullOrUndefined(listSearchResultInfo) && !isNullOrUndefined(listSearchResultInfo.paragraph)) {\n        break;\n      }\n      currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n    } while (currentBlock);\n  };\n  // public abstract updateListParagraphs(): void;\n  /**\n   * @param block\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateRenderedListItems = function (block) {\n    if (block instanceof ParagraphWidget) {\n      // if the block is a column break pick the next rendered widget.\n      if (block.isEndsWithColumnBreak) {\n        block = block.nextRenderedWidget;\n      }\n      this.updateRenderedListItemsForPara(block);\n    } else {\n      this.updateRenderedListItemsForTable(block);\n    }\n  };\n  Editor.prototype.updateRenderedListItemsForTable = function (table) {\n    var row = table.firstChild;\n    do {\n      this.updateRenderedListItemsForRow(row);\n      row = row.getSplitWidgets().pop().nextRenderedWidget;\n    } while (row);\n  };\n  Editor.prototype.updateRenderedListItemsForRow = function (row) {\n    var cell = row.firstChild;\n    do {\n      this.updateRenderedListItemsForCell(cell);\n      cell = cell.nextRenderedWidget;\n    } while (cell);\n  };\n  Editor.prototype.updateRenderedListItemsForCell = function (cell) {\n    if (cell.childWidgets.length === 0) {\n      return;\n    }\n    var currentBlock = cell.firstChild;\n    do {\n      this.updateRenderedListItems(currentBlock);\n      currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n    } while (currentBlock);\n  };\n  Editor.prototype.updateListItemsForPara = function (paragraph, block, listSearchResultInfo) {\n    if (paragraph.equals(block)) {\n      if (!isNullOrUndefined(listSearchResultInfo)) {\n        listSearchResultInfo.paragraph = paragraph;\n      }\n      return true;\n    } else {\n      var currentList = undefined;\n      var levelNumber = 0;\n      if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n        if (!isNullOrUndefined(listSearchResultInfo) && paragraph.paragraphFormat.listFormat.listId === listSearchResultInfo.listId) {\n          listSearchResultInfo.paragraph = paragraph;\n          return true;\n        }\n        currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n        levelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n      }\n      if (!isNullOrUndefined(currentList) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId)) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels[levelNumber])) {\n        var currentListLevel = this.documentHelper.layout.getListLevel(currentList, levelNumber);\n        //Updates the list numbering from document start for reLayouting.\n        this.updateListNumber(currentListLevel, paragraph, false);\n      }\n    }\n    return false;\n  };\n  Editor.prototype.updateRenderedListItemsForPara = function (paragraph) {\n    if (!isNullOrUndefined(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId))) {\n      var currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n      var listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n      if (!isNullOrUndefined(currentList) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId)) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels[paragraph.paragraphFormat.listFormat.listLevelNumber])) {\n        var currentListLevel = this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n        //Updates the list numbering from document start for reLayouting.\n        this.updateListNumber(currentListLevel, paragraph, true);\n      }\n    }\n  };\n  Editor.prototype.updateListNumber = function (currentListLevel, paragraph, isUpdate) {\n    var element = undefined;\n    if (paragraph.childWidgets.length > 0) {\n      var lineWidget = paragraph.childWidgets[0];\n      if (lineWidget.children.length > 0) {\n        element = lineWidget.children[0];\n      }\n    }\n    var listWholeWidth;\n    if (!isNullOrUndefined(element) && element.nextElement instanceof ListTextElementBox) {\n      listWholeWidth = element.width + element.nextElement.width;\n    }\n    if (!isNullOrUndefined(element) && element instanceof ListTextElementBox) {\n      var text = this.documentHelper.layout.getListNumber(paragraph.paragraphFormat.listFormat);\n      if (isUpdate) {\n        var prevWidth = element.width;\n        element.text = text;\n        var currentWidth = this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n        if (currentWidth > prevWidth) {\n          element.width = currentWidth;\n        }\n        this.documentHelper.textHelper.updateTextSize(element, paragraph);\n        if (!isNullOrUndefined(listWholeWidth) && element.width < listWholeWidth) {\n          element.nextElement.width = listWholeWidth - element.width;\n        }\n      }\n    }\n  };\n  /**\n   * Get offset value to update in selection\n   *\n   * @param selection\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.getOffsetValue = function (selection) {\n    if (this.startParagraph) {\n      var lineInfo = selection.getLineInfoBasedOnParagraph(this.startParagraph, this.startOffset);\n      selection.start.setPositionFromLine(lineInfo.line, lineInfo.offset);\n    }\n    selection.start.updatePhysicalPosition(true);\n    if (selection.isEmpty) {\n      selection.end.setPositionInternal(selection.start);\n    } else {\n      if (this.endParagraph) {\n        var lineInfo = selection.getLineInfoBasedOnParagraph(this.endParagraph, this.endOffset);\n        selection.end.setPositionFromLine(lineInfo.line, lineInfo.offset);\n      }\n      selection.end.updatePhysicalPosition(true);\n    }\n  };\n  Editor.prototype.setPositionParagraph = function (paragraph, offset, skipSelectionChange) {\n    var selection = this.documentHelper.selection;\n    var lineInfo = selection.getLineInfoBasedOnParagraph(paragraph, offset);\n    selection.start.setPositionFromLine(lineInfo.line, lineInfo.offset);\n    selection.end.setPositionInternal(selection.start);\n    if (!skipSelectionChange) {\n      selection.fireSelectionChanged(true);\n    }\n  };\n  /**\n   * @param textPosition\n   * @param editPosition\n   * @param textPosition\n   * @param editPosition\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.setPositionForCurrentIndex = function (textPosition, editPosition) {\n    var blockInfo = this.selection.getParagraph({\n      index: editPosition\n    });\n    var lineInfo = this.selection.getLineInfoBasedOnParagraph(blockInfo.paragraph, blockInfo.offset);\n    textPosition.setPositionForLineWidget(lineInfo.line, lineInfo.offset);\n  };\n  /**\n   * Inserts the page number in the current cursor position.\n   *\n   * @param {string} numberFormat - Optional switch that overrides the numeral style of the page number.\n   * @returns {void}\n   */\n  Editor.prototype.insertPageNumber = function (numberFormat) {\n    if (isNullOrUndefined(numberFormat)) {\n      numberFormat = '';\n    } else {\n      numberFormat = ' \\\\*' + numberFormat;\n    }\n    var fieldCode = 'PAGE ' + numberFormat + ' \\\\* MERGEFORMAT';\n    this.createFields(fieldCode);\n  };\n  /**\n   * @param numberFormat\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertPageCount = function (numberFormat) {\n    if (isNullOrUndefined(numberFormat)) {\n      numberFormat = '';\n    } else {\n      numberFormat = ' \\*' + numberFormat;\n    }\n    var fieldCode = 'NUMPAGES ' + numberFormat + ' \\* MERGEFORMAT';\n    this.createFields(fieldCode);\n  };\n  Editor.prototype.createFields = function (fieldCode) {\n    var paragraph = new ParagraphWidget();\n    var line = new LineWidget(paragraph);\n    var fieldBegin = new FieldElementBox(0);\n    line.children.push(fieldBegin);\n    var fieldtext = new FieldTextElementBox();\n    fieldtext.fieldBegin = fieldBegin;\n    fieldtext.text = '1';\n    var text = new TextElementBox();\n    text.text = fieldCode;\n    line.children.push(text);\n    var fieldSeparator = new FieldElementBox(2);\n    fieldSeparator.fieldBegin = fieldBegin;\n    fieldBegin.fieldSeparator = fieldSeparator;\n    line.children.push(fieldSeparator);\n    line.children.push(fieldtext);\n    var fieldEnd = new FieldElementBox(1);\n    fieldEnd.fieldBegin = fieldBegin;\n    fieldEnd.fieldSeparator = fieldSeparator;\n    fieldSeparator.fieldEnd = fieldEnd;\n    fieldBegin.fieldEnd = fieldEnd;\n    line.children.push(fieldEnd);\n    fieldBegin.line = line;\n    paragraph.childWidgets.push(line);\n    this.documentHelper.fields.push(fieldBegin);\n    var bodyWidget = new BodyWidget();\n    bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n    bodyWidget.childWidgets.push(paragraph);\n    paragraph.isCreatedUsingHtmlSpanTag = true;\n    this.pasteContentsInternal([bodyWidget], false);\n  };\n  /**\n   * Inserts the specified bookmark at the current selection range.\n   *\n   * @param {string} name Specify the name of bookmark to be inserted.\n   * @returns {void}\n   */\n  Editor.prototype.insertBookmark = function (name) {\n    var isHistoryInitiated = false;\n    if (this.documentHelper.bookmarks.containsKey(name)) {\n      var existingBookmark = this.documentHelper.bookmarks.get(name);\n      // existingBookmark.line.children.splice(existingBookmark.line.children.indexOf(existingBookmark), 1);\n      // /* eslint-disable-next-line max-len */\n      // existingBookmark.reference.line.children.splice(existingBookmark.reference.line.children.indexOf(existingBookmark.reference), 1);\n      // this.documentHelper.bookmarks.remove(name);\n      isHistoryInitiated = true;\n      this.initComplexHistory('InsertBookmark');\n      this.documentHelper.owner.editorModule.isRemoteAction = true;\n      this.deleteBookmark(name);\n      this.documentHelper.owner.editorModule.isRemoteAction = false;\n      if (!isNullOrUndefined(existingBookmark.reference) && !isNullOrUndefined(existingBookmark.reference.paragraph.associatedCell)) {\n        var row = existingBookmark.reference.paragraph.associatedCell.ownerRow;\n        if (row.isRenderBookmarkEnd) {\n          row.isRenderBookmarkEnd = false;\n        }\n        if (!isNullOrUndefined(existingBookmark.properties)) {\n          var columnFirst = parseInt(existingBookmark.properties[\"columnFirst\"]);\n          var row_1 = existingBookmark.paragraph.associatedCell.ownerRow;\n          var cell = row_1.getCellUsingColumnIndex(row_1.rowIndex, columnFirst);\n          if (!isNullOrUndefined(cell)) {\n            cell.isRenderBookmarkStart = false;\n          }\n          var columnLast = parseInt(existingBookmark.properties[\"columnLast\"]);\n          var endRow = existingBookmark.reference.paragraph.associatedCell.ownerRow;\n          var endCell = undefined;\n          var cellIndex = columnLast;\n          while (isNullOrUndefined(endCell) && cellIndex > -1) {\n            endCell = endRow.getCell(endRow.rowIndex, cellIndex);\n            if (isNullOrUndefined(endCell)) {\n              cellIndex--;\n            }\n          }\n          if (endCell.isRenderBookmarkEnd) {\n            endCell.isRenderBookmarkEnd = false;\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(existingBookmark.properties)) {\n          var columnFirst = parseInt(existingBookmark.properties[\"columnFirst\"]);\n          var row = existingBookmark.paragraph.associatedCell.ownerRow;\n          var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n          if (!isNullOrUndefined(cell) && cell.isRenderBookmarkStart) {\n            cell.isRenderBookmarkStart = false;\n          }\n        }\n      }\n    }\n    var bookmarks = this.createBookmarkElements(name);\n    var bookmark = bookmarks[0];\n    var bookmarkEnd = bookmarks[1];\n    bookmark.properties = this.selection.getBookmarkProperties(bookmark);\n    bookmarkEnd.properties = this.selection.getBookmarkProperties(bookmarkEnd);\n    this.owner.isShiftingEnabled = true;\n    if (!isHistoryInitiated) {\n      this.initComplexHistory('InsertBookmark');\n    }\n    this.insertElements([bookmarkEnd], [bookmark], true);\n    if (this.editorHistory) {\n      this.editorHistory.updateComplexHistoryInternal();\n    }\n    if (this.documentHelper.owner.enableHeaderAndFooter) {\n      this.updateHeaderFooterWidget();\n    }\n    this.documentHelper.bookmarks.add(name, bookmark);\n    if (!isNullOrUndefined(bookmark.properties)) {\n      this.selection.selectBookmarkInTable(bookmark);\n      this.documentHelper.owner.isShiftingEnabled = false;\n    } else {\n      this.selection.start.setPositionForSelection(bookmark.line, bookmark, 1, this.selection.start.location);\n      var endOffset = 0;\n      if (!isNullOrUndefined(bookmarkEnd.properties)) {\n        if (bookmarkEnd.properties['isAfterParagraphMark']) {\n          endOffset = 2;\n        }\n      }\n      this.selection.end.setPositionForSelection(bookmarkEnd.line, bookmarkEnd, endOffset, this.selection.end.location);\n      var block = this.documentHelper.blockToShift;\n      if (!isNullOrUndefined(block) && this.viewer instanceof PageLayoutViewer && block.bodyWidget.sectionFormat.columns.length > 1) {\n        var lastbody = this.documentHelper.layout.getBodyWidget(block.bodyWidget, false);\n        if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && lastbody.page === lastbody.nextRenderedWidget.page) {\n          this.reLayout(this.selection);\n        }\n      }\n      this.owner.isShiftingEnabled = false;\n      this.selection.fireSelectionChanged(true);\n    }\n    if (this.owner.documentEditorSettings.showBookmarks == true) {\n      this.viewer.updateScrollBars();\n    }\n    this.fireContentChange();\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.createBookmarkElements = function (name) {\n    var bookmark = new BookmarkElementBox(0);\n    bookmark.name = name;\n    var bookmarkEnd = new BookmarkElementBox(1);\n    bookmarkEnd.name = name;\n    bookmark.reference = bookmarkEnd;\n    bookmarkEnd.reference = bookmark;\n    return [bookmark, bookmarkEnd];\n  };\n  /**\n   * Deletes the specified bookmark in the current document.\n   *\n   * @param {string} bookmarkName Specify the name of bookmark to be deleted.\n   * @returns {void}\n   */\n  Editor.prototype.deleteBookmark = function (bookmarkName) {\n    var bookmarks = this.documentHelper.bookmarks;\n    var bookmark = bookmarks.get(bookmarkName);\n    if (bookmark instanceof BookmarkElementBox) {\n      var bookmarkEnd = bookmark.reference;\n      // History for inserting bookmark with existing bookmark name was changed as a complex history as per MS word behavior and added the below lines for getting existing bookmarks offset in history  \n      var start = this.selection.start.clone();\n      var end = this.selection.end.clone();\n      this.selection.start.setPositionParagraph(bookmark.line, bookmark.line.getOffset(bookmark, bookmark.length));\n      this.selection.end.setPositionParagraph(bookmarkEnd.line, bookmarkEnd.line.getOffset(bookmarkEnd, bookmarkEnd.length) - 1);\n      this.initHistory('DeleteBookmark');\n      this.selection.selectPosition(start, end);\n      if (this.editorHistory) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n        this.editorHistory.currentBaseHistoryInfo.markerData.push({\n          bookmarkName: bookmarkName\n        });\n        this.editorHistory.currentBaseHistoryInfo.setBookmarkInfo(bookmark);\n        this.editorHistory.updateHistory();\n      }\n      this.deleteBookmarkInternal(bookmark);\n    }\n    this.fireContentChange();\n    if (this.owner.documentEditorSettings.showBookmarks == true) {\n      this.viewer.updateScrollBars();\n    }\n  };\n  /**\n   * @param bookmark\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.deleteBookmarkInternal = function (bookmark) {\n    var previousNode = bookmark.previousNode;\n    if (previousNode instanceof FieldElementBox && previousNode.fieldType === 0 && !isNullOrUndefined(previousNode.formFieldData)) {\n      previousNode.formFieldData.name = '';\n    }\n    if (!isNullOrUndefined(bookmark.properties)) {\n      var columnFirst = parseInt(bookmark.properties[\"columnFirst\"]);\n      var row = bookmark.paragraph.associatedCell.ownerRow;\n      var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n      if (!isNullOrUndefined(cell)) {\n        cell.isRenderBookmarkStart = false;\n      }\n      var columnLast = parseInt(bookmark.properties[\"columnLast\"]);\n      if (!isNullOrUndefined(bookmark.reference) && !isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n        var endRow = bookmark.reference.paragraph.associatedCell.ownerRow;\n        var endCell = undefined;\n        var cellIndex = columnLast;\n        while (isNullOrUndefined(endCell) && cellIndex > -1) {\n          endCell = endRow.getCell(endRow.rowIndex, cellIndex);\n          if (isNullOrUndefined(endCell)) {\n            cellIndex--;\n          }\n        }\n        if (endCell.isRenderBookmarkEnd) {\n          endCell.isRenderBookmarkEnd = false;\n        }\n      }\n    } else {\n      if (this.documentHelper.selection.isRenderBookmarkAtEnd(bookmark)) {\n        if (!isNullOrUndefined(bookmark.reference) && !isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n          var row = bookmark.reference.paragraph.associatedCell.ownerRow;\n          if (row.isRenderBookmarkEnd) {\n            row.isRenderBookmarkEnd = false;\n          }\n        }\n      }\n    }\n    this.documentHelper.bookmarks.remove(bookmark.name);\n    bookmark.line.children.splice(bookmark.indexInOwner, 1);\n    if (!isNullOrUndefined(bookmark.reference)) {\n      bookmark.reference.line.children.splice(bookmark.reference.indexInOwner, 1);\n    }\n    // Remove bookmark from header footer collections\n    var paragraph = bookmark.line.paragraph;\n    if (bookmark.line.paragraph.isInHeaderFooter) {\n      var headerFooterWidget = undefined;\n      if (paragraph.containerWidget instanceof TableCellWidget) {\n        headerFooterWidget = paragraph.containerWidget.getContainerTable().containerWidget;\n      } else if (paragraph.containerWidget instanceof HeaderFooterWidget) {\n        headerFooterWidget = paragraph.containerWidget;\n      }\n      this.updateHeaderFooterWidget(headerFooterWidget);\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getSelectionInfo = function (isBookmark) {\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.selection.isForward) {\n      start = this.selection.end;\n      end = this.selection.start;\n    }\n    if (!(end.offset === this.selection.getLineLength(end.currentWidget) + 1 && this.selection.isParagraphLastLine(end.currentWidget)) && !this.owner.documentHelper.isDragging) {\n      end.offset += 1;\n    }\n    var blockInfo = this.selection.getParagraphInfo(start);\n    var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    blockInfo = this.selection.getParagraphInfo(end);\n    var endIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    var selectedWidgets = this.selection.selectedWidgets.keys;\n    if (!isNullOrUndefined(isBookmark) && isBookmark == true && !this.selection.hasMergedCells()) {\n      if (start.paragraph.isInsideTable) {\n        var startCell_1 = this.selection.getCellFromSelection(0);\n        if (!isNullOrUndefined(startCell_1) && startCell_1 instanceof TableCellWidget) {\n          startIndex = this.selection.getActualOffset(startCell_1, 0);\n        }\n      }\n      if (end.paragraph.isInsideTable) {\n        var endCell_1 = this.selection.getCellFromSelection(1);\n        if (!isNullOrUndefined(endCell_1) && endCell_1 instanceof TableCellWidget) {\n          endIndex = this.selection.getActualOffset(endCell_1, 1);\n        }\n      }\n    } else {\n      if (selectedWidgets[0] instanceof TableCellWidget) {\n        if (start.paragraph.isInsideTable) {\n          var startCell = this.selection.getCellFromSelectionInTable(0);\n          if (!isNullOrUndefined(startCell) && startCell instanceof TableCellWidget) {\n            startIndex = this.selection.getActualOffset(startCell, 0);\n          }\n        }\n      }\n      if (selectedWidgets[selectedWidgets.length - 1] instanceof TableCellWidget) {\n        if (end.paragraph.isInsideTable) {\n          var endCell = this.selection.getCellFromSelectionInTable(1);\n          if (!isNullOrUndefined(endCell) && endCell instanceof TableCellWidget) {\n            endIndex = this.selection.getActualOffset(endCell, 1);\n          }\n        }\n      }\n    }\n    return {\n      'start': startIndex,\n      'end': endIndex\n    };\n  };\n  Editor.prototype.insertElements = function (endElements, startElements, isBookmark) {\n    var info = this.getSelectionInfo(isBookmark);\n    if (isBookmark) {\n      if (!isNullOrUndefined(startElements[0].properties) && startElements[0].bookmarkType == 0) {\n        info = this.owner.selection.updateSelectionInfo(info);\n      }\n    }\n    if (!isNullOrUndefined(startElements)) {\n      this.insertElementsInternal(this.selection.getTextPosBasedOnLogicalIndex(info.start), startElements);\n    }\n    if (!isNullOrUndefined(endElements)) {\n      this.insertElementsInternal(this.selection.getTextPosBasedOnLogicalIndex(info.end), endElements);\n    }\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertElementsInternal = function (position, elements, isRelayout) {\n    this.selection.selectPosition(position, position);\n    this.initHistory('InsertElements');\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && (elements[0] instanceof BookmarkElementBox && this.editorHistory || elements[0] instanceof EditRangeStartElementBox || elements[0] instanceof EditRangeEndElementBox)) {\n      this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elements[0]));\n    }\n    this.updateInsertPosition();\n    var indexInInline = 0;\n    var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n    if (this.selection.start.paragraph.isEmpty()) {\n      var paragraph = this.selection.start.paragraph;\n      paragraph.childWidgets[0].children.push(elements[0]);\n      elements[0].line = paragraph.childWidgets[0];\n      elements[0].linkFieldCharacter(this.documentHelper);\n      this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n      this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n      position.setPositionForSelection(elements[0].line, elements[0], elements[0].length, this.selection.start.location);\n      this.selection.selectPosition(position, position);\n    } else {\n      var inlineObj = this.selection.start.currentWidget.getInline(this.documentHelper.selection.start.offset, indexInInline);\n      var curInline = inlineObj.element;\n      indexInInline = inlineObj.index;\n      var firstElement = elements[0];\n      this.insertElementInternal(curInline, firstElement, indexInInline, undefined, true);\n      var index = firstElement.indexInOwner;\n      var lastElement = firstElement;\n      for (var i = 1; i < elements.length; i++) {\n        lastElement = elements[i];\n        firstElement.line.children.splice(index + i, 0, lastElement);\n      }\n      position.setPositionForSelection(lastElement.line, lastElement, lastElement.length, this.selection.start.location);\n      this.selection.selectPosition(position, position);\n    }\n    if (this.editorHistory) {\n      if (this.checkEndPosition()) {\n        this.updateHistoryPosition(this.selection.start, false);\n      }\n      this.editorHistory.updateHistory();\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getMarkerData = function (element, skip, revision, isAcceptOrReject) {\n    var markerData = {};\n    if (this.editorHistory.currentBaseHistoryInfo || this.editorHistory.isUndoing || this.editorHistory.isRedoing) {\n      if (element instanceof BookmarkElementBox) {\n        var columnFirst = '';\n        var columnLast = '';\n        var isAfterParagraphMark = void 0;\n        var isAfterTableMark = void 0;\n        var isAfterRowMark = void 0;\n        var isAfterCellMark = void 0;\n        if (element.bookmarkType == 0) {\n          if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n          }\n          if (!isNullOrUndefined(element.properties)) {\n            columnFirst = element.properties['columnFirst'];\n            columnLast = element.properties['columnLast'];\n          }\n        } else {\n          if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n          }\n          if (!isNullOrUndefined(element.properties)) {\n            isAfterParagraphMark = element.properties['isAfterParagraphMark'];\n            isAfterTableMark = element.properties['isAfterTableMark'];\n            isAfterRowMark = element.properties['isAfterRowMark'];\n            isAfterCellMark = element.properties['isAfterCellMark'];\n          }\n        }\n        markerData = {\n          bookmarkName: element.name,\n          type: \"Bookmark\",\n          skipOperation: skip,\n          columnFirst: columnFirst,\n          columnLast: columnLast,\n          isAfterParagraphMark: isAfterParagraphMark,\n          isAfterTableMark: isAfterTableMark,\n          isAfterRowMark: isAfterRowMark,\n          isAfterCellMark: isAfterCellMark\n        };\n      } else if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n        var elementBox = void 0;\n        if (element instanceof EditRangeStartElementBox) {\n          elementBox = element;\n          if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n          }\n        } else {\n          elementBox = element.editRangeStart;\n          if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n          }\n        }\n        var user = elementBox.user === '' ? elementBox.group : elementBox.user;\n        markerData = {\n          'user': user,\n          'type': \"EditRange\",\n          'editRangeId': elementBox.editRangeId,\n          'skipOperation': skip,\n          'columnFirst': isNullOrUndefined(elementBox.columnFirst) ? undefined : elementBox.columnFirst.toString(),\n          'columnLast': isNullOrUndefined(elementBox.columnLast) ? undefined : elementBox.columnLast.toString()\n        };\n      } else if (element instanceof FieldElementBox) {\n        if (element.fieldType == 0) {\n          this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n        } else if (element.fieldType == 2) {\n          this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Field_Separator;\n        } else {\n          this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n        }\n        markerData = {\n          'type': \"Field\"\n        };\n      } else if (element instanceof FootnoteElementBox) {\n        markerData = {\n          type: element.footnoteType\n        };\n      } else if (element instanceof TextElementBox) {\n        this.editorHistory.currentBaseHistoryInfo.insertedText = element.text;\n      }\n    }\n    if (this.owner.enableTrackChanges && !isNullOrUndefined(revision)) {\n      markerData = this.getRevisionMarkerData(markerData, revision, skip, isAcceptOrReject);\n    }\n    return markerData;\n  };\n  /**\n   * @private\n   * @returns {any}\n   */\n  Editor.prototype.getRevisionMarkerData = function (markerData, revision, skip, isAcceptOrReject) {\n    if (isNullOrUndefined(markerData)) {\n      markerData = {};\n    }\n    markerData.revisionId = revision.revisionID;\n    markerData.revisionType = revision.revisionType;\n    markerData.author = revision.author;\n    markerData.date = revision.date;\n    markerData.skipOperation = skip;\n    markerData.isAcceptOrReject = isAcceptOrReject;\n    return markerData;\n  };\n  /**\n   * @param index\n   * @private\n   * @returns {CommentElementBox}\n   */\n  Editor.prototype.getCommentElementBox = function (index) {\n    var position = index.split(';');\n    var comment = this.documentHelper.comments[parseInt(position[1], 10)];\n    if (position.length > 2 && position[2] !== '') {\n      return comment.replyComments[parseInt(position[2], 10)];\n    }\n    return comment;\n  };\n  /**\n   * @param position\n   * @private\n   * @returns {BlockInfo}\n   */\n  Editor.prototype.getBlock = function (position) {\n    var bodyWidget = this.selection.getBodyWidget(position);\n    return this.getBlockInternal(bodyWidget, position);\n  };\n  Editor.prototype.getBlockInternal = function (widget, position) {\n    if (position.index === '' || isNullOrUndefined(position)) {\n      return undefined;\n    }\n    var index = position.index.indexOf(';');\n    var value = position.index.substring(0, index);\n    position.index = position.index.substring(index).replace(';', '');\n    var node = widget;\n    // if (node instanceof WSection && value === 'HF') {\n    //     //Gets the block in Header footers.\n    //     let blockObj: BlockInfo = this.getBlock((node as WSection).headerFooters, position);\n    //     return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n    // }\n    index = parseInt(value, 10);\n    var childWidget = this.selection.getBlockByIndex(widget, index);\n    if (childWidget) {\n      var child = childWidget;\n      if (position.index.indexOf(';') >= 0) {\n        if (child instanceof ParagraphWidget) {\n          if (position.index.indexOf(';') >= 0) {\n            position.index = '0';\n          }\n          return {\n            'node': child,\n            'position': position\n          };\n        }\n        if (child instanceof Widget) {\n          var blockObj = this.getBlockInternal(child, position);\n          return {\n            'node': !isNullOrUndefined(blockObj) ? blockObj.node : undefined,\n            'position': !isNullOrUndefined(blockObj) ? blockObj.position : undefined\n          };\n        }\n      } else {\n        return {\n          'node': child,\n          'position': position\n        };\n      }\n    } else {\n      return {\n        'node': node,\n        'position': position\n      };\n    }\n    return {\n      'node': node,\n      'position': position\n    };\n  };\n  /**\n   * @param position\n   * @param isInsertPosition\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateHistoryPosition = function (position, isInsertPosition) {\n    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      var hierarchicalIndex = void 0;\n      if (position instanceof TextPosition) {\n        var blockInfo = this.selection.getParagraphInfo(position);\n        hierarchicalIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n      } else {\n        hierarchicalIndex = position;\n      }\n      if (isInsertPosition) {\n        this.editorHistory.currentBaseHistoryInfo.insertPosition = hierarchicalIndex;\n      } else {\n        this.editorHistory.currentBaseHistoryInfo.endPosition = hierarchicalIndex;\n      }\n    }\n  };\n  /**\n   * Applies the borders based on given settings.\n   *\n   * @param {BorderSettings} settings Specify the border settings to be applied.\n   * @returns {void}\n   */\n  Editor.prototype.applyBorders = function (settings) {\n    this.initHistory('Borders');\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    var table = startPos.paragraph.associatedCell.ownerTable;\n    table = table.combineWidget(this.owner.viewer);\n    if (this.editorHistory) {\n      var clonedTable = this.cloneTableToHistoryInfo(table);\n    }\n    var startCell = startPos.paragraph.associatedCell;\n    var endCell = endPos.paragraph.associatedCell;\n    var cells;\n    var border = this.getBorder(settings.borderColor, settings.lineWidth, settings.borderStyle);\n    if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = startPos.paragraph.associatedCell.cellFormat.borders;\n    }\n    if (this.selection.isEmpty) {\n      //Apply borders for current selected cell initially.\n      if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' || settings.type === 'LeftBorder') {\n        endCell.cellFormat.borders.left.copyFormat(border);\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' || settings.type === 'TopBorder') {\n        endCell.cellFormat.borders.top.copyFormat(border);\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' || settings.type === 'RightBorder') {\n        endCell.cellFormat.borders.right.copyFormat(border);\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' || settings.type === 'BottomBorder') {\n        endCell.cellFormat.borders.bottom.copyFormat(border);\n      }\n      if (settings.type === 'AllBorders' || settings.type === 'InsideBorders' || settings.type === 'InsideVerticalBorder') {\n        endCell.cellFormat.borders.vertical.copyFormat(border);\n      }\n      if (settings.type === 'AllBorders' || settings.type === 'InsideBorders' || settings.type === 'InsideHorizontalBorder') {\n        endCell.cellFormat.borders.horizontal.copyFormat(border);\n      }\n      if (settings.type === 'NoBorder') {\n        this.clearAllBorderValues(endCell.cellFormat.borders);\n      }\n    } else {\n      if (settings.type === 'OutsideBorders' || settings.type === 'TopBorder') {\n        var selectedCell = this.getTopBorderCellsOnSelection();\n        for (var i = 0; i < selectedCell.length; i++) {\n          selectedCell[i].cellFormat.borders.top.copyFormat(border);\n        }\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'LeftBorder') {\n        var selectedCell = this.getLeftBorderCellsOnSelection();\n        for (var i = 0; i < selectedCell.length; i++) {\n          selectedCell[i].cellFormat.borders.left.copyFormat(border);\n        }\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'RightBorder') {\n        var selectedCell = this.getRightBorderCellsOnSelection();\n        for (var i = 0; i < selectedCell.length; i++) {\n          selectedCell[i].cellFormat.borders.right.copyFormat(border);\n        }\n      }\n      if (settings.type === 'OutsideBorders' || settings.type === 'BottomBorder') {\n        var selectedCell = this.getBottomBorderCellsOnSelection();\n        for (var i = 0; i < selectedCell.length; i++) {\n          selectedCell[i].cellFormat.borders.bottom.copyFormat(border);\n        }\n      }\n    }\n    //Apply Only borders property to selected cells\n    if (settings.type === 'BottomBorder' || settings.type === 'AllBorders' || settings.type === 'OutsideBorders' || settings.type === 'NoBorder') {\n      cells = this.getAdjacentCellToApplyBottomBorder();\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (settings.type === 'NoBorder') {\n          cell.cellFormat.borders.top.copyFormat(this.clearBorder());\n        } else {\n          cell.cellFormat.borders.top.copyFormat(border);\n        }\n      }\n    }\n    if (settings.type === 'AllBorders' || settings.type === 'OutsideBorders' || settings.type === 'RightBorder' || settings.type === 'NoBorder') {\n      cells = this.getAdjacentCellToApplyRightBorder();\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (settings.type === 'NoBorder') {\n          cell.cellFormat.borders.left.copyFormat(this.clearBorder());\n        } else {\n          cell.cellFormat.borders.left.copyFormat(border);\n        }\n      }\n    }\n    if (settings.type === 'AllBorders' || settings.type === 'NoBorder') {\n      this.applyAllBorders(border, settings.type);\n    }\n    if (settings.type === 'InsideBorders' || settings.type === 'InsideVerticalBorder' || settings.type === 'InsideHorizontalBorder' || settings.type === 'NoBorder') {\n      this.applyInsideBorders(border, settings.type, table);\n    }\n    this.updateGridForTableDialog(table, false);\n    this.reLayout(this.selection, false);\n    this.editorHistory.updateHistory();\n  };\n  Editor.prototype.applyAllBorders = function (border, borderType) {\n    var cells = this.selection.getSelectedCells();\n    for (var i = 0; i < cells.length; i++) {\n      if (borderType === 'NoBorder') {\n        cells[i].cellFormat.borders.left.copyFormat(this.clearBorder());\n        cells[i].cellFormat.borders.right.copyFormat(this.clearBorder());\n        cells[i].cellFormat.borders.top.copyFormat(this.clearBorder());\n        cells[i].cellFormat.borders.bottom.copyFormat(this.clearBorder());\n      } else {\n        cells[i].cellFormat.borders.left.copyFormat(border);\n        cells[i].cellFormat.borders.right.copyFormat(border);\n        cells[i].cellFormat.borders.top.copyFormat(border);\n        cells[i].cellFormat.borders.bottom.copyFormat(border);\n      }\n    }\n  };\n  Editor.prototype.applyInsideBorders = function (border, borderType, table) {\n    var cells = this.selection.getSelectedCells();\n    for (var i = 0; i < cells.length; i++) {\n      var cell = cells[i];\n      var isLastSelectedRow = cell.ownerRow === cells[cells.length - 1].ownerRow;\n      var isLastRightCell = cell.columnIndex + cell.cellFormat.columnSpan - 1 === cells[cells.length - 1].columnIndex;\n      if (borderType === 'NoBorder') {\n        cell.cellFormat.borders.right.copyFormat(this.clearBorder());\n        cell.cellFormat.borders.bottom.copyFormat(this.clearBorder());\n      } else {\n        if (!isLastRightCell && borderType !== 'InsideHorizontalBorder') {\n          cell.cellFormat.borders.right.copyFormat(border);\n        }\n        if (!isLastSelectedRow && borderType !== 'InsideVerticalBorder') {\n          cell.cellFormat.borders.bottom.copyFormat(border);\n        }\n      }\n      if (!isLastSelectedRow && borderType !== 'InsideVerticalBorder') {\n        // Apply adjacent bottom borders.\n        var nextRowIndex = cell.ownerRow.rowIndex + cell.cellFormat.rowSpan;\n        var nextRow = table.childWidgets[nextRowIndex];\n        if (nextRow) {\n          var selectedCells = this.getAdjacentBottomBorderOnEmptyCells(nextRow, cell, true);\n          for (var j = 0; j < selectedCells.length; j++) {\n            if (borderType === 'NoBorder') {\n              selectedCells[j].cellFormat.borders.top.copyFormat(this.clearBorder());\n            } else {\n              selectedCells[j].cellFormat.borders.top.copyFormat(border);\n            }\n          }\n        }\n      }\n      if (!isLastRightCell && borderType !== 'InsideHorizontalBorder') {\n        // Apply adjacent right borders.\n        var rightBorderCells = this.getSelectedCellsNextWidgets(cell, table);\n        for (var k = 0; k < rightBorderCells.length; k++) {\n          if (borderType === 'NoBorder') {\n            rightBorderCells[k].cellFormat.borders.left.copyFormat(this.clearBorder());\n          } else {\n            rightBorderCells[k].cellFormat.borders.left.copyFormat(border);\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.getTopBorderCellsOnSelection = function () {\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var startCell = startPos.paragraph.associatedCell;\n    var topBorderCells = [];\n    var cells = this.selection.getSelectedCells();\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].ownerRow === startCell.ownerRow) {\n        topBorderCells.push(cells[i]);\n      }\n    }\n    return topBorderCells;\n  };\n  Editor.prototype.getLeftBorderCellsOnSelection = function () {\n    var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var startCell = startPos.paragraph.associatedCell;\n    var cells = this.selection.getSelectedCells();\n    var leftBorderCells = [];\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].columnIndex === startCell.columnIndex) {\n        leftBorderCells.push(cells[i]);\n      }\n    }\n    return leftBorderCells;\n  };\n  Editor.prototype.getRightBorderCellsOnSelection = function () {\n    var cells = this.selection.getSelectedCells();\n    var rightBorderCells = [];\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].columnIndex + cells[i].cellFormat.columnSpan - 1 === cells[cells.length - 1].columnIndex) {\n        rightBorderCells.push(cells[i]);\n      }\n    }\n    return rightBorderCells;\n  };\n  Editor.prototype.getBottomBorderCellsOnSelection = function () {\n    var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    var endCell = endPos.paragraph.associatedCell;\n    var cells = this.selection.getSelectedCells();\n    var bottomBorderCells = [];\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].ownerRow === endCell.ownerRow) {\n        bottomBorderCells.push(cells[i]);\n      }\n    }\n    return bottomBorderCells;\n  };\n  Editor.prototype.clearAllBorderValues = function (borders) {\n    var border = this.clearBorder();\n    borders.bottom.copyFormat(border);\n    borders.left.copyFormat(border);\n    borders.right.copyFormat(border);\n    borders.top.copyFormat(border);\n    borders.vertical.copyFormat(border);\n    borders.horizontal.copyFormat(border);\n  };\n  Editor.prototype.clearBorder = function () {\n    var border = new WBorder();\n    border.lineStyle = 'Cleared';\n    return border;\n  };\n  Editor.prototype.getAdjacentCellToApplyBottomBorder = function () {\n    var cells = [];\n    var startPos = this.selection.start;\n    var endPos = this.selection.end;\n    if (!this.selection.isForward) {\n      startPos = this.selection.end;\n      endPos = this.selection.start;\n    }\n    var table = startPos.paragraph.associatedCell.ownerTable;\n    table = table.combineWidget(this.owner.viewer);\n    var startCell = startPos.paragraph.associatedCell;\n    var endCell = endPos.paragraph.associatedCell;\n    var nextRowIndex = endCell.ownerRow.rowIndex + endCell.cellFormat.rowSpan;\n    var nextRow = table.childWidgets[nextRowIndex];\n    if (nextRow) {\n      if (endCell.cellFormat.columnSpan > 1) {\n        for (var i = endCell.columnIndex; i < endCell.columnIndex + endCell.cellFormat.columnSpan; i++) {\n          cells.push(nextRow.childWidgets[i]);\n        }\n      } else {\n        cells = this.getAdjacentBottomBorderOnEmptyCells(nextRow, endCell);\n        if (!this.selection.isEmpty) {\n          for (var i = 0; i < nextRow.childWidgets.length; i++) {\n            var nextCellColIndex = nextRow.childWidgets[i].columnIndex;\n            if (nextCellColIndex >= startCell.columnIndex && nextCellColIndex <= endCell.columnIndex) {\n              cells.push(nextRow.childWidgets[i]);\n            }\n          }\n        }\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getAdjacentBottomBorderOnEmptyCells = function (nextRow, cell, isSingleCell) {\n    var cells = [];\n    if (cell.cellFormat.columnSpan > 1) {\n      for (var i = cell.columnIndex; i < cell.columnIndex; i++) {\n        cells.push(nextRow.childWidgets[i]);\n      }\n    } else {\n      if (this.selection.isEmpty || isSingleCell) {\n        for (var i = 0; i < nextRow.childWidgets.length; i++) {\n          if (nextRow.childWidgets[i].columnIndex === cell.columnIndex) {\n            cells.push(nextRow.childWidgets[i]);\n          }\n        }\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getAdjacentCellToApplyRightBorder = function () {\n    var cells = [];\n    var startPosIn = this.selection.start;\n    var endPosIn = this.selection.end;\n    if (!this.selection.isForward) {\n      startPosIn = this.selection.end;\n      endPosIn = this.selection.start;\n    }\n    var table = startPosIn.paragraph.associatedCell.ownerTable;\n    table = table.combineWidget(this.owner.viewer);\n    var startCell = startPosIn.paragraph.associatedCell;\n    var endCell = endPosIn.paragraph.associatedCell;\n    if (this.selection.isEmpty) {\n      var selectedCell = startPosIn.paragraph.associatedCell;\n      cells = this.getSelectedCellsNextWidgets(selectedCell, table);\n    } else {\n      var selectedCells = this.getRightBorderCellsOnSelection();\n      for (var i = 0; i < selectedCells.length; i++) {\n        var cell = selectedCells[i];\n        cells = cells.concat(this.getSelectedCellsNextWidgets(cell, table));\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getSelectedCellsNextWidgets = function (selectedCell, table) {\n    var cells = [];\n    if (!isNullOrUndefined(selectedCell.nextWidget)) {\n      cells.push(selectedCell.nextWidget);\n      if (selectedCell.cellFormat.rowSpan > 1) {\n        var nextRowIndex = selectedCell.ownerRow.rowIndex + selectedCell.cellFormat.rowSpan;\n        for (var i = selectedCell.ownerRow.rowIndex + 1; i < nextRowIndex; i++) {\n          var nextRow = table.childWidgets[i];\n          if (nextRow) {\n            for (var j = 0; j < nextRow.childWidgets.length; j++) {\n              if (nextRow.childWidgets[j].columnIndex === selectedCell.nextWidget.columnIndex) {\n                cells.push(nextRow.childWidgets[j]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getBorder = function (borderColor, lineWidth, borderStyle) {\n    var border = new WBorder();\n    border.color = borderColor || '#000000';\n    border.lineWidth = lineWidth || 1;\n    border.lineStyle = borderStyle || 'Single';\n    return border;\n  };\n  /**\n   * Applies borders\n   *\n   * @param {WBorders} sourceBorders\n   * @param {WBorders} applyBorders\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyBordersInternal = function (sourceBorders, applyBorders) {\n    if (!isNullOrUndefined(sourceBorders) && !isNullOrUndefined(sourceBorders)) {\n      if (!isNullOrUndefined(sourceBorders.top)) {\n        this.applyBorder(sourceBorders.top, applyBorders.top);\n      }\n      if (!isNullOrUndefined(sourceBorders.bottom)) {\n        this.applyBorder(sourceBorders.bottom, applyBorders.bottom);\n      }\n      if (!isNullOrUndefined(sourceBorders.left)) {\n        this.applyBorder(sourceBorders.left, applyBorders.left);\n      }\n      if (!isNullOrUndefined(sourceBorders.right)) {\n        this.applyBorder(sourceBorders.right, applyBorders.right);\n      }\n      if (!isNullOrUndefined(sourceBorders.horizontal)) {\n        this.applyBorder(sourceBorders.horizontal, applyBorders.horizontal);\n      }\n      if (!isNullOrUndefined(sourceBorders.vertical)) {\n        this.applyBorder(sourceBorders.vertical, applyBorders.vertical);\n      }\n      if (!isNullOrUndefined(sourceBorders.diagonalUp)) {\n        this.applyBorder(sourceBorders.diagonalUp, applyBorders.diagonalUp);\n      }\n      if (!isNullOrUndefined(sourceBorders.diagonalDown)) {\n        this.applyBorder(sourceBorders.diagonalDown, applyBorders.diagonalDown);\n      }\n    }\n  };\n  /**\n   * Apply shading to table\n   *\n   * @param {WShading} sourceShading\n   * @param {WShading} applyShading\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyShading = function (sourceShading, applyShading) {\n    if (!isNullOrUndefined(applyShading) && !isNullOrUndefined(sourceShading)) {\n      if (!isNullOrUndefined(applyShading.backgroundColor) && sourceShading.backgroundColor !== applyShading.backgroundColor) {\n        sourceShading.backgroundColor = applyShading.backgroundColor;\n      }\n      if (!isNullOrUndefined(applyShading.foregroundColor) && sourceShading.foregroundColor !== applyShading.foregroundColor) {\n        sourceShading.foregroundColor = applyShading.foregroundColor;\n      }\n      if (!isNullOrUndefined(applyShading.textureStyle) && sourceShading.textureStyle !== applyShading.textureStyle) {\n        sourceShading.textureStyle = applyShading.textureStyle;\n      }\n    }\n  };\n  Editor.prototype.applyBorder = function (sourceBorder, applyBorder) {\n    if (!isNullOrUndefined(sourceBorder) && !isNullOrUndefined(applyBorder)) {\n      if (!isNullOrUndefined(applyBorder.color) && sourceBorder.color !== applyBorder.color) {\n        sourceBorder.color = applyBorder.color;\n      }\n      if (!isNullOrUndefined(applyBorder.lineStyle) && sourceBorder.lineStyle !== applyBorder.lineStyle) {\n        sourceBorder.lineStyle = applyBorder.lineStyle;\n      }\n      if (!isNullOrUndefined(applyBorder.lineWidth) && sourceBorder.lineWidth !== applyBorder.lineWidth) {\n        sourceBorder.lineWidth = applyBorder.lineWidth;\n      }\n      if (!isNullOrUndefined(applyBorder.shadow) && sourceBorder.shadow !== applyBorder.shadow) {\n        sourceBorder.shadow = applyBorder.shadow;\n      }\n      if (!isNullOrUndefined(applyBorder.space) && sourceBorder.space !== applyBorder.space) {\n        sourceBorder.space = applyBorder.space;\n      }\n    }\n  };\n  /**\n   * Apply Table Format changes\n   *\n   * @param {WTableFormat} format Specifies table format\n   * @param {boolean} isShading Specifies shading.\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onTableFormat = function (format, isShading, table) {\n    if (!isNullOrUndefined(this.selection.tableFormat)) {\n      if (isNullOrUndefined(isShading)) {\n        isShading = false;\n      }\n      this.documentHelper.owner.isShiftingEnabled = true;\n      this.editorHistory.initializeHistory('TableFormat');\n      if (isNullOrUndefined(table)) {\n        table = this.selection.start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n      }\n      if (isShading) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n          var rowWidget = table.childWidgets[i];\n          for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n            var cellWidget = rowWidget.childWidgets[j];\n            cellWidget.cellFormat.shading.copyFormat(format.shading);\n          }\n        }\n      }\n      // if (!isNullOrUndefined(isShading) && !this.isCellFormatApplied && !isNullOrUndefined(format.borders)) {\n      //     for (let i: number = 0; i < table.childWidgets.length; i++) {\n      //         const rowWidget: TableRowWidget = table.childWidgets[i] as TableRowWidget;\n      //         rowWidget.rowFormat.borders.copyFormat(format.borders);\n      //         for (let j: number = 0; j < rowWidget.childWidgets.length; j++) {\n      //             const cellWidget: TableCellWidget = rowWidget.childWidgets[j] as TableCellWidget;\n      //             cellWidget.cellFormat.borders.copyFormat(format.borders);\n      //         }\n      //     }\n      // }\n      this.applyTableFormat(table, undefined, format);\n      this.reLayout(this.selection, false);\n    }\n  };\n  Editor.prototype.applyTableFormat = function (table, property, value) {\n    this.applyTablePropertyValue(undefined, value, table);\n  };\n  Editor.prototype.applyTablePropertyValue = function (property, value, table) {\n    var sourceFormat = table.tableFormat;\n    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedTableProperties(sourceFormat, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (value instanceof WTableFormat) {\n      if (isNullOrUndefined(property)) {\n        this.handleTableFormat(sourceFormat, value);\n      }\n      return;\n    }\n    if (property === 'preferredWidth') {\n      sourceFormat.preferredWidth = value;\n    } else if (property === 'leftIndent') {\n      sourceFormat.leftIndent = value;\n    } else if (property === 'tableAlignment') {\n      sourceFormat.tableAlignment = value;\n    } else if (property === 'cellSpacing') {\n      sourceFormat.cellSpacing = value;\n    } else if (property === 'leftMargin') {\n      sourceFormat.leftMargin = value;\n    } else if (property === 'rightMargin') {\n      sourceFormat.rightMargin = value;\n    } else if (property === 'topMargin') {\n      sourceFormat.topMargin = value;\n    } else if (property === 'bottomMargin') {\n      sourceFormat.bottomMargin = value;\n    } else if (property === 'preferredWidthType') {\n      sourceFormat.preferredWidthType = value;\n    } else if (property === 'bidi') {\n      sourceFormat.bidi = value;\n    } else if (property === 'title') {\n      sourceFormat.title = value;\n    } else if (property === 'description') {\n      sourceFormat.description = value;\n    }\n    if (property === 'shading') {\n      sourceFormat.shading = value;\n    } else if (property === 'borders') {\n      sourceFormat.borders = value;\n    }\n    // if (!isNullOrUndefined(table)) {\n    //     this.layoutItemBlock(table, true);\n    // }\n  };\n  Editor.prototype.handleTableFormat = function (tableFormat, applyFormat) {\n    if (this.isBordersAndShadingDialog || this.editorHistory.isUndoing || this.editorHistory.isRedoing) {\n      if (!isNullOrUndefined(tableFormat.borders)) {\n        this.applyBordersInternal(tableFormat.borders, applyFormat.borders);\n      }\n      if (!isNullOrUndefined(tableFormat.shading)) {\n        this.applyShading(tableFormat.shading, applyFormat.shading);\n      }\n    }\n    if (!this.isBordersAndShadingDialog) {\n      if (applyFormat.hasValue('bidi') && applyFormat.bidi !== tableFormat.bidi) {\n        tableFormat.bidi = applyFormat.bidi;\n      }\n      if (applyFormat.hasValue('preferredWidth') && applyFormat.preferredWidth !== tableFormat.preferredWidth) {\n        tableFormat.preferredWidth = applyFormat.preferredWidth;\n      }\n      if (applyFormat.hasValue('preferredWidthType') && applyFormat.preferredWidthType !== tableFormat.preferredWidthType) {\n        tableFormat.preferredWidthType = applyFormat.preferredWidthType;\n      }\n      if (applyFormat.hasValue('tableAlignment') && applyFormat.tableAlignment !== tableFormat.tableAlignment) {\n        tableFormat.tableAlignment = applyFormat.tableAlignment;\n      }\n      if (applyFormat.hasValue('leftIndent') && applyFormat.leftIndent !== tableFormat.leftIndent) {\n        tableFormat.leftIndent = applyFormat.leftIndent;\n      }\n    }\n    this.updateGridForTableDialog(tableFormat.ownerBase, false);\n    if (applyFormat.title !== tableFormat.title) {\n      tableFormat.title = applyFormat.title;\n    }\n    if (applyFormat.description !== tableFormat.description) {\n      tableFormat.description = applyFormat.description;\n    }\n  };\n  Editor.prototype.updateGridForTableDialog = function (table, shiftNextItem) {\n    if (table.tableHolder) {\n      table.updateRowIndex(0);\n      table.isGridUpdated = false;\n    }\n    this.documentHelper.layout.reLayoutTable(table);\n  };\n  /**\n   * Applies Row Format Changes\n   *\n   * @param {WRowFormat} format Specifies row format\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onRowFormat = function (format) {\n    if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n      return;\n    }\n    this.editorHistory.initializeHistory('RowFormat');\n    this.documentHelper.owner.isShiftingEnabled = true;\n    var rowStartPos = this.selection.isForward ? this.selection.start : this.selection.end;\n    var rowEndPos = this.selection.isForward ? this.selection.end : this.selection.start;\n    var table = rowStartPos.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n    this.applyRowFormat(rowStartPos.paragraph.associatedCell.ownerRow, rowStartPos, rowEndPos, undefined, format);\n    this.reLayout(this.selection, false);\n  };\n  Editor.prototype.applyRowFormat = function (row, start, end, property, value) {\n    this.applyRowPropertyValue(this.documentHelper.selection, property, value, row);\n    if (end.paragraph.associatedCell.ownerRow === row) {\n      return;\n    }\n    var newRow = row.nextWidget;\n    if (!isNullOrUndefined(newRow)) {\n      this.applyRowFormat(newRow, start, end, property, value);\n    }\n  };\n  Editor.prototype.applyRowPropertyValue = function (selection, property, value, row) {\n    var applyFormat = row.rowFormat;\n    if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedRowProperties(applyFormat, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (value instanceof WRowFormat) {\n      if (isNullOrUndefined(property)) {\n        this.handleRowFormat(value, applyFormat);\n      }\n      return;\n    }\n    if (property === 'heightType') {\n      applyFormat.heightType = value;\n    } else if (property === 'height') {\n      applyFormat.height = value;\n    } else if (property === 'isHeader') {\n      applyFormat.isHeader = value;\n    } else if (property === 'allowBreakAcrossPages') {\n      applyFormat.allowBreakAcrossPages = value;\n    }\n    if (!isNullOrUndefined(row.ownerTable)) {\n      this.layoutItemBlock(row.ownerTable, true);\n    }\n  };\n  Editor.prototype.handleRowFormat = function (format, applyFormat) {\n    if (format.hasValue('allowBreakAcrossPages') && format.allowBreakAcrossPages !== applyFormat.allowBreakAcrossPages) {\n      applyFormat.allowBreakAcrossPages = format.allowBreakAcrossPages;\n    }\n    if (format.hasValue('isHeader') && format.isHeader !== applyFormat.isHeader) {\n      applyFormat.isHeader = format.isHeader;\n    }\n    if (format.hasValue('heightType') && format.heightType !== applyFormat.heightType) {\n      applyFormat.heightType = format.heightType;\n    }\n    if (format.hasValue('height') && format.height !== applyFormat.height) {\n      applyFormat.height = format.height;\n    }\n    this.updateGridForTableDialog(applyFormat.ownerBase.ownerTable, true);\n  };\n  /**\n   * Applies Cell Format changes\n   *\n   * @param {WCellFormat} format Specifies cell format\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onCellFormat = function (format) {\n    if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n      return;\n    }\n    this.editorHistory.initializeHistory('CellFormat');\n    this.updateFormatForCell(this.selection, undefined, format);\n    this.reLayout(this.selection, false);\n  };\n  /**\n   * Applies Paragraph Format changes\n   *\n   * @param {WParagraphFormat} format Specifies cell format\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onParaFormat = function (format) {\n    if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n      return;\n    }\n    this.editorHistory.initializeHistory('ParagraphFormat');\n    this.updateParagraphFormat(undefined, format, false);\n    this.reLayout(this.selection, false);\n  };\n  /**\n   * @param selection\n   * @param value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateCellMargins = function (selection, value) {\n    var cellStartPosition = selection.start;\n    var cellEndPosition = selection.end;\n    if (!selection.isForward) {\n      cellStartPosition = selection.end;\n      cellEndPosition = selection.start;\n    }\n    this.initHistoryPosition(selection, cellStartPosition);\n    this.documentHelper.owner.cellOptionsDialogModule.applyCellMarginValue(cellStartPosition.paragraph.associatedCell.ownerRow, cellStartPosition, cellEndPosition, value);\n  };\n  Editor.prototype.updateFormatForCell = function (selection, property, value) {\n    var start = selection.start;\n    var end = selection.end;\n    if (!selection.isForward) {\n      start = selection.end;\n      end = selection.start;\n    }\n    var startCell = start.paragraph.associatedCell;\n    var endCell = end.paragraph.associatedCell;\n    var cells;\n    var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n    var appliedFormat;\n    for (var k = startCell.columnIndex; k <= endCell.columnIndex; k++) {\n      cells = this.getSelectedCellInColumn(startCell.ownerTable, startCell.ownerRow.rowIndex, k, endCell.ownerRow.rowIndex);\n      for (var i = 0; i < cells.length; i++) {\n        appliedFormat = this.applyCellPropertyValue(this.documentHelper.selection, property, value, cells[i].cellFormat);\n      }\n    }\n    this.updateGridForTableDialog(table, false);\n  };\n  Editor.prototype.getSelectedCellInColumn = function (table, rowStartIndex, columnIndex, rowEndIndex) {\n    var cells = [];\n    for (var i = rowStartIndex; i <= rowEndIndex; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        if (row.childWidgets[j].columnIndex === columnIndex) {\n          cells.push(row.childWidgets[j]);\n        }\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getColumnCells = function (table, columnIndex, isLeftSideCollection) {\n    var cells = [];\n    for (var k = 0; k < table.childWidgets.length; k++) {\n      var row = table.childWidgets[k];\n      for (var i = 0; i < row.childWidgets.length; i++) {\n        var cell = row.childWidgets[i];\n        if (isLeftSideCollection) {\n          if (cell.columnIndex + cell.cellFormat.columnSpan === columnIndex) {\n            cells.push(cell);\n          }\n        } else {\n          if (cell.columnIndex === columnIndex) {\n            cells.push(cell);\n          }\n        }\n      }\n    }\n    return cells;\n  };\n  Editor.prototype.getTableWidth = function (table) {\n    if (table.tableFormat.preferredWidth !== 0 || table.tableFormat.preferredWidthType === 'Percent') {\n      if (table.tableFormat.preferredWidthType === 'Auto' || table.tableFormat.preferredWidthType === 'Point') {\n        return table.tableFormat.preferredWidth;\n      } else {\n        if (table.tableFormat.preferredWidth === 0) {\n          return 0;\n        } else {\n          return HelperMethods.convertPixelToPoint(this.owner.viewer.clientArea.width) / 100 * table.tableFormat.preferredWidth;\n        }\n      }\n    }\n    return HelperMethods.convertPixelToPoint(this.documentHelper.layout.getTableWidth(table));\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyCellPropertyValue = function (selection, property, value, applyFormat) {\n    if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n      value = this.editorHistory.currentBaseHistoryInfo.addModifiedCellProperties(applyFormat, property, value);\n      this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n    }\n    if (value instanceof WCellFormat) {\n      if (isNullOrUndefined(property)) {\n        this.handleCellFormat(value, applyFormat);\n      }\n      return value;\n    }\n    if (property === 'leftMargin') {\n      applyFormat.leftMargin = value;\n    } else if (property === 'topMargin') {\n      applyFormat.topMargin = value;\n    } else if (property === 'rightMargin') {\n      applyFormat.rightMargin = value;\n    } else if (property === 'bottomMargin') {\n      applyFormat.bottomMargin = value;\n    } else if (property === 'preferredWidth') {\n      applyFormat.preferredWidth = value;\n      applyFormat.cellWidth = value;\n    } else if (property === 'cellWidth') {\n      applyFormat.cellWidth = value;\n    } else if (property === 'columnSpan') {\n      applyFormat.columnSpan = value;\n    } else if (property === 'rowSpan') {\n      applyFormat.rowSpan = value;\n    } else if (property === 'preferredWidthType') {\n      applyFormat.preferredWidthType = value;\n    } else if (property === 'verticalAlignment') {\n      applyFormat.verticalAlignment = value;\n    }\n    if (property === 'shading') {\n      applyFormat.shading = value;\n    } else if (property === 'borders') {\n      applyFormat.borders = value;\n    }\n    return undefined;\n  };\n  Editor.prototype.handleCellFormat = function (cellFormat, applyFormat) {\n    if (!isNullOrUndefined(cellFormat) && !isNullOrUndefined(applyFormat)) {\n      if (this.isBordersAndShadingDialog) {\n        if (!isNullOrUndefined(cellFormat.borders)) {\n          this.applyBordersInternal(applyFormat.borders, cellFormat.borders);\n        }\n        if (!isNullOrUndefined(cellFormat.shading)) {\n          this.applyShading(applyFormat.shading, cellFormat.shading);\n        }\n        // this.layoutRow((applyFormat.ownerBase as TableCellWidget).ownerRow, this.documentHelper, false);\n      } else {\n        if (cellFormat.hasValue('preferredWidth') && applyFormat.preferredWidth !== cellFormat.preferredWidth) {\n          applyFormat.preferredWidth = cellFormat.preferredWidth;\n        }\n        if (cellFormat.hasValue('preferredWidthType') && applyFormat.preferredWidthType !== cellFormat.preferredWidthType) {\n          applyFormat.preferredWidthType = cellFormat.preferredWidthType;\n        }\n        if (cellFormat.hasValue('verticalAlignment') && applyFormat.verticalAlignment !== cellFormat.verticalAlignment) {\n          applyFormat.verticalAlignment = cellFormat.verticalAlignment;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.destroy = function () {\n    if (this.tableResize) {\n      this.tableResize.destroy();\n      this.tableResize = undefined;\n    }\n    if (this.previousCharFormat) {\n      this.previousCharFormat.destroy();\n      this.previousCharFormat = undefined;\n    }\n    if (this.previousParaFormat) {\n      this.previousParaFormat.destroy();\n      this.previousParaFormat = undefined;\n    }\n    if (this.alertDialog) {\n      this.alertDialog.destroy();\n    }\n    this.alertDialog = undefined;\n    if (this.base64) {\n      this.base64.destroy();\n    }\n    this.base64 = undefined;\n    this.endParagraph = undefined;\n    this.copiedData = undefined;\n    this.copiedTextContent = undefined;\n    this.listNumberFormat = undefined;\n    this.nodes = [];\n    this.removedTextNodes = [];\n    this.removedBookmarkElements = [];\n    this.editStartRangeCollection = [];\n    this.documentHelper = undefined;\n    this.editRangeID = undefined;\n    this.isCellFormatApplied = undefined;\n    this.isCopying = undefined;\n  };\n  /**\n   * Updates the table of contents.\n   *\n   * @param tocField\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateToc = function (tocField) {\n    if (isNullOrUndefined(tocField)) {\n      tocField = this.selection.getTocFieldInternal();\n    }\n    if (!this.documentHelper.layout.isTocField(tocField)) {\n      return;\n    }\n    // Decode field code to get parameters\n    var code = this.selection.getFieldCode(tocField);\n    if (code.toLocaleLowerCase().indexOf('toc') !== -1) {\n      this.insertTableOfContents(this.validateTocSettings(this.getTocSettings(code, tocField)));\n    }\n  };\n  Editor.prototype.getTocSettings = function (code, tocField) {\n    var tocSettings = {};\n    tocSettings.includePageNumber = true;\n    tocSettings.rightAlign = true;\n    // Decode field code to get parameters\n    if (code.toLowerCase() === 'toc \\\\mergeformat') {\n      tocSettings.startLevel = 1;\n      tocSettings.endLevel = 3;\n    } else {\n      var swtiches = code.split('\\\\');\n      for (var i = 0; i < swtiches.length; i++) {\n        var swtch = swtiches[i];\n        if (swtch.length === 0) {\n          continue;\n        }\n        switch (swtch[0]) {\n          case 'o':\n            if (!isNullOrUndefined(swtch.match(/\\d+/g))) {\n              var levels = swtch.match(/\\d+/g).map(Number);\n              tocSettings.startLevel = levels[0];\n              tocSettings.endLevel = levels[1];\n            } else {\n              tocSettings.startLevel = 1;\n              tocSettings.endLevel = 9;\n            }\n            break;\n          case 'h':\n            tocSettings.includeHyperlink = true;\n            break;\n          case 'n':\n            tocSettings.includePageNumber = false;\n            break;\n          case 'p':\n            tocSettings.rightAlign = false;\n            break;\n          case 'u':\n            tocSettings.includeOutlineLevels = true;\n            break;\n          case 't':\n            this.decodeTSwitch(tocSettings, swtch);\n            break;\n        }\n      }\n    }\n    //assigns tab leader.\n    var tabs = tocField.paragraph.paragraphFormat.getUpdatedTabs();\n    if (tabs.length > 0) {\n      tocSettings.tabLeader = tabs[tabs.length - 1].tabLeader;\n    }\n    if (tocSettings.rightAlign && isNullOrUndefined(tocSettings.tabLeader)) {\n      tocSettings.tabLeader = 'Dot';\n    }\n    return tocSettings;\n  };\n  Editor.prototype.decodeTSwitch = function (tocSettings, tSwitch) {\n    tocSettings.levelSettings = {};\n    tSwitch = tSwitch.replace('t', '');\n    tSwitch = tSwitch.replace('\"', '');\n    tSwitch = tSwitch.replace('\"', '');\n    tSwitch = tSwitch.trim();\n    var levels = tSwitch.split(',');\n    for (var index = 0; index < levels.length; index++) {\n      tocSettings.levelSettings[levels[index]] = parseInt(levels[index + 1], 10);\n      index++;\n    }\n  };\n  /**\n   * Inserts, modifies or updates the table of contents based on given settings.\n   *\n   * @param {TableOfContentsSettings} tableOfContentsSettings Specify the table of content settings to be inserted.\n   * @returns {void}\n   */\n  Editor.prototype.insertTableOfContents = function (tableOfContentsSettings) {\n    this.isInsertingTOC = true;\n    var removedCommentStart = this.checkAndRemoveComments();\n    this.initComplexHistory('TOC');\n    if (isNullOrUndefined(tableOfContentsSettings)) {\n      //Initializes with default value.\n      tableOfContentsSettings = {};\n      tableOfContentsSettings.startLevel = 1;\n      tableOfContentsSettings.endLevel = 3;\n      tableOfContentsSettings.includeHyperlink = true;\n      tableOfContentsSettings.includeOutlineLevels = true;\n      tableOfContentsSettings.includePageNumber = true;\n      tableOfContentsSettings.rightAlign = true;\n      tableOfContentsSettings.tabLeader = 'Dot';\n    }\n    var tocField = undefined;\n    var code = undefined;\n    if (this.selection.contextType === 'TableOfContents') {\n      tocField = this.selection.getTocFieldInternal();\n    }\n    if (tocField instanceof FieldElementBox) {\n      this.selection.start.setPositionForSelection(tocField.line, tocField, 0, this.selection.start.location);\n      var offset = 2;\n      if (tocField.fieldEnd.paragraph === tocField.fieldEnd.paragraph.bodyWidget.lastChild) {\n        offset--;\n      }\n      this.selection.end.setPositionForSelection(tocField.fieldEnd.line, tocField.fieldEnd, offset, this.selection.end.location);\n      this.delete();\n    }\n    // Build TOC field code based on parameter\n    code = this.constructTocFieldCode(tableOfContentsSettings);\n    var isStartParagraph = this.selection.start.isAtParagraphStart;\n    var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n    var initialStart = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    // Build TOC fields\n    var widgets = this.buildToc(this.validateTocSettings(tableOfContentsSettings), code, true, isStartParagraph);\n    if (widgets.length > 0) {\n      var tocLastPara = new ParagraphWidget();\n      var tocLastLine = new LineWidget(tocLastPara);\n      tocLastPara.childWidgets.push(tocLastLine);\n      var index = 0;\n      if (!isStartParagraph) {\n        index = 1;\n      }\n      var line = widgets[index].childWidgets[0];\n      var fieldBegin = line.children[0];\n      this.appendEndField(fieldBegin, tocLastLine);\n      widgets.push(tocLastPara);\n      this.appendEmptyPara(widgets);\n    } else {\n      var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n      localizeValue.setLocale(this.owner.locale);\n      DialogUtility.alert({\n        title: localizeValue.getConstant('No Headings'),\n        content: localizeValue.getConstant('Add Headings'),\n        showCloseIcon: true,\n        closeOnEscape: true,\n        position: {\n          X: 'center',\n          Y: 'center'\n        },\n        animationSettings: {\n          effect: 'Zoom'\n        }\n      }).enableRtl = this.owner.enableRtl;\n    }\n    this.setPositionForCurrentIndex(this.selection.start, initialStart);\n    this.selection.end.setPositionInternal(this.selection.start);\n    var bodyWidget = new BodyWidget();\n    bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n    bodyWidget.childWidgets = widgets;\n    this.pasteContentsInternal([bodyWidget], false);\n    this.isInsertingTOC = false;\n    this.updatePageRef();\n    if (this.editorHistory) {\n      this.editorHistory.updateComplexHistory();\n      this.updateHistoryForComments(removedCommentStart);\n    }\n    if (widgets.length === 0) {\n      this.owner.editorHistoryModule.undo();\n      this.owner.editorHistoryModule.redoStack.pop();\n    }\n  };\n  Editor.prototype.appendEmptyPara = function (widgets) {\n    var emptyPara = new ParagraphWidget();\n    var emptyLine = new LineWidget(emptyPara);\n    emptyPara.childWidgets.push(emptyLine);\n    widgets.push(emptyPara);\n  };\n  Editor.prototype.constructTocFieldCode = function (tocSettings) {\n    var tocFieldCode = 'TOC';\n    //appends styles level\n    if (!isNullOrUndefined(tocSettings.startLevel) && tocSettings.startLevel !== 0 && !isNullOrUndefined(tocSettings.endLevel) && tocSettings.endLevel !== 0) {\n      tocFieldCode = tocFieldCode + ' \\\\o \"' + tocSettings.startLevel + '-' + tocSettings.endLevel + '\"';\n    }\n    if (tocSettings.includePageNumber && !tocSettings.rightAlign) {\n      tocFieldCode = tocFieldCode + ' \\\\p \" \"';\n    }\n    if (!tocSettings.includePageNumber) {\n      tocFieldCode = tocFieldCode + ' \\\\n';\n    }\n    if (tocSettings.includeHyperlink) {\n      tocFieldCode = tocFieldCode + ' \\\\h \\\\z';\n    }\n    if (tocSettings.includeOutlineLevels) {\n      tocFieldCode = tocFieldCode + ' \\\\u';\n    }\n    var tSwitch = this.constructTSwitch(tocSettings);\n    if (tSwitch.length > 6) {\n      tocFieldCode = tocFieldCode + tSwitch;\n    }\n    return tocFieldCode;\n  };\n  Editor.prototype.constructTSwitch = function (tocSettings) {\n    var tSwitch = '';\n    var prefix = ' \\\\t ';\n    if (!isNullOrUndefined(tocSettings.levelSettings)) {\n      for (var _i = 0, _a = Object.keys(tocSettings.levelSettings); _i < _a.length; _i++) {\n        var key = _a[_i];\n        tSwitch = tSwitch + key + ',' + tocSettings.levelSettings[key].toString() + ',';\n      }\n    }\n    tSwitch = tSwitch.slice(0, -1);\n    tSwitch = prefix + '\"' + tSwitch + '\"';\n    return tSwitch;\n  };\n  Editor.prototype.appendEndField = function (fieldBegin, lineWidget) {\n    var fieldEnd = new FieldElementBox(1);\n    fieldEnd.fieldSeparator = fieldBegin.fieldSeparator;\n    fieldBegin.fieldSeparator.fieldEnd = fieldEnd;\n    fieldEnd.fieldBegin = fieldBegin;\n    fieldEnd.fieldBegin.fieldEnd = fieldEnd;\n    fieldEnd.line = lineWidget;\n    //For TOC we used to append field end at last we need to map that inserted revision to field end.\n    if (fieldBegin.revisions.length > 0) {\n      var currentRevision = fieldBegin.revisions[fieldBegin.revisions.length - 1];\n      currentRevision.range.push(fieldEnd);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n      fieldEnd.revisions.push(currentRevision);\n    }\n    lineWidget.children.push(fieldEnd);\n  };\n  Editor.prototype.validateTocSettings = function (tocSettings) {\n    if (isNullOrUndefined(tocSettings.startLevel) || tocSettings.startLevel < 1) {\n      tocSettings.startLevel = 1;\n    }\n    if (isNullOrUndefined(tocSettings.endLevel) || tocSettings.endLevel < tocSettings.endLevel) {\n      tocSettings.endLevel = tocSettings.startLevel > 3 ? tocSettings.startLevel : 3;\n    }\n    if (isNullOrUndefined(tocSettings.includeHyperlink)) {\n      tocSettings.includeHyperlink = false;\n    }\n    if (isNullOrUndefined(tocSettings.includePageNumber)) {\n      tocSettings.includePageNumber = false;\n    }\n    if (isNullOrUndefined(tocSettings.rightAlign)) {\n      tocSettings.rightAlign = false;\n    }\n    if (isNullOrUndefined(tocSettings.levelSettings)) {\n      tocSettings.levelSettings = {};\n    }\n    return tocSettings;\n  };\n  /**\n   * Builds the TOC\n   *\n   * @private\n   * @returns {ParagraphWidget[]}\n   *\n   */\n  Editor.prototype.buildToc = function (tocSettings, fieldCode, isFirstPara, isStartParagraph, isNavigationPane) {\n    var tocDomBody = this.documentHelper.pages[0].bodyWidgets[0];\n    var widgets = [];\n    this.createHeadingLevels(tocSettings);\n    if (tocSettings.includeOutlineLevels) {\n      this.createOutlineLevels(tocSettings);\n    }\n    var sectionFormat = this.selection.start.paragraph.bodyWidget.sectionFormat;\n    var widget = tocDomBody.childWidgets[0];\n    while (widget !== undefined) {\n      if (widget instanceof ParagraphWidget && (this.isHeadingStyle(widget) || tocSettings.includeOutlineLevels && this.isOutlineLevelStyle(widget))) {\n        var bookmarkName = this.insertTocBookmark(widget);\n        this.createTOCWidgets(widget, widgets, fieldCode, bookmarkName, tocSettings, isFirstPara, isStartParagraph, sectionFormat, isNavigationPane);\n        isFirstPara = false;\n      }\n      widget = this.selection.getNextParagraphBlock(widget.getSplitWidgets().pop());\n    }\n    this.tocStyles = {};\n    return widgets;\n  };\n  Editor.prototype.createOutlineLevels = function (settings) {\n    for (var i = settings.startLevel; i <= settings.endLevel; i++) {\n      var levelStyle = 'Level' + i.toString();\n      if (isNullOrUndefined(this.tocStyles[levelStyle])) {\n        this.tocStyles[levelStyle] = i;\n      }\n    }\n  };\n  Editor.prototype.createHeadingLevels = function (settings) {\n    //let normalStyle: string = 'Normal';\n    for (var i = settings.startLevel; i <= settings.endLevel; i++) {\n      var headingStyle = 'Heading ' + i.toString();\n      if (isNullOrUndefined(this.tocStyles[headingStyle])) {\n        this.tocStyles[headingStyle] = i;\n      }\n    }\n    if (!isNullOrUndefined(settings.levelSettings)) {\n      for (var _i = 0, _a = Object.keys(settings.levelSettings); _i < _a.length; _i++) {\n        var key = _a[_i];\n        this.tocStyles[key] = settings.levelSettings[key];\n      }\n    }\n  };\n  Editor.prototype.isHeadingStyle = function (para) {\n    var style = para.paragraphFormat.baseStyle;\n    if (style !== undefined) {\n      return isNullOrUndefined(this.tocStyles[style.name]) ? false : true;\n    }\n    return false;\n  };\n  Editor.prototype.isOutlineLevelStyle = function (para) {\n    var styleName = para.paragraphFormat.outlineLevel;\n    return isNullOrUndefined(this.tocStyles[styleName]) ? false : true;\n  };\n  Editor.prototype.createTocFieldElement = function (lineWidget, fieldCode, isSkipRevision) {\n    //begin\n    var fieldBegin = new FieldElementBox(0);\n    fieldBegin.hasFieldEnd = true;\n    fieldBegin.line = lineWidget;\n    lineWidget.children.push(fieldBegin);\n    var currentRevision = undefined;\n    //format toc\n    var textElement = new TextElementBox();\n    textElement.text = fieldCode;\n    textElement.line = lineWidget;\n    lineWidget.children.push(textElement);\n    //field separator\n    var fieldSeparator = new FieldElementBox(2);\n    fieldSeparator.fieldBegin = fieldBegin;\n    fieldSeparator.fieldBegin.fieldSeparator = fieldSeparator;\n    fieldSeparator.line = lineWidget;\n    lineWidget.children.push(fieldSeparator);\n    // If revision enabled.\n    return fieldBegin;\n  };\n  Editor.prototype.createTOCWidgets = function (widget, widgets, fieldCode, bookmarkName, tocSettings, isFirstPara, isStartParagraph, sectionFormat, isNavigationPane) {\n    var fieldBegin = undefined;\n    var tocPara = undefined;\n    var tocLine = undefined;\n    var emptyParaAppended = false;\n    if (widgets.length === 1 && widgets[0].childWidgets[0].children.length === 3 && !isNullOrUndefined(isFirstPara) && !isFirstPara) {\n      tocLine = widgets[0].childWidgets[0];\n    } else {\n      tocPara = new ParagraphWidget();\n      var styleName = undefined;\n      //Adds toc syles into paragraph\n      var headingStyleName = widget.paragraphFormat.baseStyle.name;\n      if (tocSettings.includeOutlineLevels && isNullOrUndefined(this.tocStyles[headingStyleName])) {\n        styleName = widget.paragraphFormat.outlineLevel;\n      } else {\n        styleName = headingStyleName;\n      }\n      var tocStyleName = 'TOC ' + this.tocStyles[styleName];\n      var headingPaneStyleName = 'Heading ' + this.tocStyles[styleName];\n      var paraStyle = undefined;\n      if (isNavigationPane) {\n        paraStyle = this.documentHelper.styles.findByName(headingPaneStyleName, 'Paragraph');\n        if (isNullOrUndefined(paraStyle)) {\n          this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(headingPaneStyleName)), this.documentHelper.styles, true);\n          paraStyle = this.documentHelper.styles.findByName(headingPaneStyleName, 'Paragraph');\n        }\n      } else {\n        paraStyle = this.documentHelper.styles.findByName(tocStyleName, 'Paragraph');\n        if (isNullOrUndefined(paraStyle)) {\n          this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(tocStyleName)), this.documentHelper.styles, true);\n          paraStyle = this.documentHelper.styles.findByName(tocStyleName, 'Paragraph');\n        }\n      }\n      tocPara.paragraphFormat.applyStyle(paraStyle);\n      //Creates right tab for page number.\n      if (tocSettings.rightAlign && tocSettings.includePageNumber) {\n        var tabStop = new WTabStop();\n        tabStop.position = sectionFormat.pageWidth - (sectionFormat.leftMargin + sectionFormat.rightMargin);\n        tabStop.tabLeader = tocSettings.tabLeader;\n        tabStop.deletePosition = 0;\n        tabStop.tabJustification = 'Right';\n        tocPara.paragraphFormat.tabs.push(tabStop);\n      }\n      tocLine = new LineWidget(tocPara);\n      tocPara.childWidgets.push(tocLine);\n    }\n    //creates toc field element if it is insert\n    if (isFirstPara !== undefined && isFirstPara) {\n      if (!isNullOrUndefined(isStartParagraph) && !isStartParagraph) {\n        this.appendEmptyPara(widgets);\n        emptyParaAppended = true;\n      }\n      this.createTocFieldElement(tocLine, fieldCode);\n    }\n    var text = '';\n    var isFieldCode = false;\n    var paragraph = widget;\n    while (paragraph instanceof ParagraphWidget) {\n      for (var lineIndex = 0; lineIndex < paragraph.childWidgets.length; lineIndex++) {\n        var lineWidget = paragraph.childWidgets[lineIndex];\n        for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n          var element = lineWidget.children[elementIndex];\n          if (element.isPageBreak || element.isColumnBreak) {\n            continue;\n          }\n          if (element instanceof FieldElementBox || element instanceof BookmarkElementBox || isFieldCode) {\n            if (element instanceof FieldElementBox) {\n              if (element.fieldType === 0) {\n                isFieldCode = true;\n              } else if (element.fieldType === 2) {\n                isFieldCode = false;\n              }\n            }\n          } else if (element instanceof TextElementBox || element instanceof ListTextElementBox) {\n            var temp = element.text;\n            var tabChar = '\\t';\n            if (temp.indexOf(tabChar) !== -1) {\n              temp = temp.replace(new RegExp(tabChar, 'g'), ' ');\n            }\n            text = text + temp;\n          }\n        }\n      }\n      paragraph = paragraph.nextSplitWidget;\n    }\n    if (text !== '') {\n      // inserts hyperlink\n      if (tocSettings.includeHyperlink && bookmarkName !== undefined) {\n        fieldBegin = this.insertTocHyperlink(tocLine, bookmarkName, text, widget);\n      } else {\n        var span = new TextElementBox();\n        span.text = text;\n        span.line = tocLine;\n        tocLine.children.push(span);\n      }\n      //inserts page number\n      if (tocSettings.includePageNumber && bookmarkName !== undefined) {\n        if (tocSettings.rightAlign) {\n          var tabText = new TabElementBox();\n          tabText.text = '\\t';\n          tabText.line = tocLine;\n          tocLine.children.push(tabText);\n        }\n        var pageField = this.insertTocPageNumber(bookmarkName, tocLine, tocSettings.rightAlign, widget);\n        this.appendEndField(pageField, tocLine);\n      }\n      if (tocSettings.includeHyperlink && fieldBegin !== undefined) {\n        this.appendEndField(fieldBegin, tocLine);\n      }\n    }\n    if (!isNullOrUndefined(tocPara) && (text !== '' || isFirstPara)) {\n      widgets.push(tocPara);\n    }\n    if (this.owner.enableTrackChanges && !isNullOrUndefined(tocPara)) {\n      if (widgets.length === 1 || emptyParaAppended) {\n        this.insertRevisionForBlock(tocPara, 'Insertion', true);\n      } else {\n        var revision = this.owner.revisionsInternal.changes[0];\n        this.insertRevisionForBlock(tocPara, 'Insertion', true, revision);\n      }\n    }\n  };\n  Editor.prototype.insertTocHyperlink = function (lineWidget, bookmarkName, text, widget) {\n    var fieldCode = ' HYPERLINK \\\\l \\\"' + bookmarkName + '\\\" ';\n    var fieldBegin = this.createTocFieldElement(lineWidget, fieldCode, true);\n    //text element.\n    var span = new TextElementBox();\n    span.text = text;\n    // retrieve the TOC character format\n    var styleName = widget.paragraphFormat.baseStyle.name;\n    var curBaseSytle = this.documentHelper.styles.findByName(styleName, 'Paragraph');\n    if (curBaseSytle.characterFormat.isEqualTocFormat(widget.characterFormat)) {\n      var noramlStyle = this.documentHelper.styles.findByName('Normal', 'Paragraph');\n      span.characterFormat.copyTocFormat(noramlStyle.characterFormat);\n    } else {\n      span.characterFormat.copyTocFormat(widget.characterFormat);\n    }\n    span.line = lineWidget;\n    lineWidget.children.push(span);\n    return fieldBegin;\n  };\n  Editor.prototype.getPageNumber = function (widget) {\n    var pageNumber;\n    if (widget.bodyWidget.sectionFormat.restartPageNumbering) {\n      pageNumber = widget.bodyWidget.page.currentPageNum;\n    } else {\n      pageNumber = this.documentHelper.pages.indexOf(widget.bodyWidget.page) + 1;\n    }\n    return pageNumber;\n  };\n  Editor.prototype.insertTocPageNumber = function (bookMarkname, lineWidget, isRightAlign, widget) {\n    var fieldCode = ' PAGEREF' + bookMarkname + ' \\\\h ';\n    var fieldBegin = this.createTocFieldElement(lineWidget, fieldCode, true);\n    var text = this.getPageNumber(widget).toString();\n    var span = new FieldTextElementBox();\n    span.fieldBegin = fieldBegin;\n    if (!isRightAlign) {\n      text = ' ' + text;\n    }\n    span.text = text;\n    span.line = lineWidget;\n    lineWidget.children.push(span);\n    this.pageRefFields[bookMarkname] = span;\n    return fieldBegin;\n  };\n  Editor.prototype.updatePageRef = function () {\n    for (var _i = 0, _a = Object.keys(this.pageRefFields); _i < _a.length; _i++) {\n      var key = _a[_i];\n      if (this.documentHelper.bookmarks.containsKey(key)) {\n        var bookmark = this.documentHelper.bookmarks.get(key);\n        var pageRef = this.getPageNumber(bookmark.paragraph).toString();\n        var span = this.pageRefFields[key];\n        if (pageRef !== span.text) {\n          span.text = pageRef;\n          var paragraph = span.paragraph;\n          var lineIndex = paragraph.childWidgets.indexOf(span.line);\n          var elementIndex = span.line.children.indexOf(span);\n          if (!isNullOrUndefined(paragraph.containerWidget)) {\n            this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Inserts toc bookmark.\n   *\n   * @param widget\n   * @returns {string}\n   */\n  Editor.prototype.insertTocBookmark = function (widget) {\n    var bookmarkName = undefined;\n    var lineLength = widget.childWidgets.length;\n    if (lineLength > 0) {\n      var splitParagraph = widget.getSplitWidgets();\n      var firstParagraph = splitParagraph[0];\n      var lastParagraph = splitParagraph.pop();\n      var startLine = firstParagraph.childWidgets[0];\n      var endLine = lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1];\n      if (startLine !== undefined && endLine !== undefined) {\n        var startElement = startLine.children[0];\n        if (startElement instanceof ListTextElementBox || startElement instanceof CommentCharacterElementBox) {\n          do {\n            startElement = startElement.nextNode;\n          } while (startElement instanceof ListTextElementBox || startElement instanceof CommentCharacterElementBox);\n        }\n        //Returns the bookmark if already present for paragraph.\n        if (!isNullOrUndefined(startElement) && startElement instanceof BookmarkElementBox && startElement.bookmarkType === 0 && startElement.name.toLowerCase().match('^_toc')) {\n          return startElement.name;\n        }\n        var endElement = endLine.children[endLine.children.length - 1];\n        if (startElement !== undefined && endElement !== undefined) {\n          this.selection.start.setPositionForSelection(startLine, startElement, 0, this.selection.start.location);\n          this.selection.end.setPositionForSelection(endLine, endElement, endElement.length, this.selection.end.location);\n          bookmarkName = this.generateBookmarkName();\n          this.insertBookmark(bookmarkName);\n        }\n      }\n    }\n    return bookmarkName;\n  };\n  Editor.prototype.generateBookmarkName = function () {\n    var bookmarkName = '';\n    do {\n      this.tocBookmarkId++;\n      var count = 10 - this.tocBookmarkId.toString().length;\n      var formatString = '';\n      while (count - 1 > 0) {\n        formatString = '0' + formatString;\n        count--;\n      }\n      bookmarkName = '_Toc' + formatString + this.tocBookmarkId;\n    } while (this.documentHelper.bookmarks.containsKey(bookmarkName));\n    return bookmarkName;\n  };\n  /**\n   * Change cell content alignment\n   *\n   * @param verticalAlignment\n   * @param textAlignment\n   * @param verticalAlignment\n   * @param textAlignment\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.onCellContentAlignment = function (verticalAlignment, textAlignment) {\n    this.owner.isShiftingEnabled = true;\n    var selection = this.owner.selectionModule;\n    if (selection.isEmpty && selection.start.paragraph.isInsideTable) {\n      if (this.owner.editorHistoryModule) {\n        this.owner.editorHistoryModule.initComplexHistory(selection, 'MultiSelection');\n      }\n      //Selecting the table cell to update the all the paragraph format.\n      selection.selectTableCell();\n      this.initHistory('CellContentVerticalAlignment');\n      var cellFormat = selection.start.paragraph.associatedCell.cellFormat;\n      this.applyCellPropertyValue(selection, 'verticalAlignment', verticalAlignment, cellFormat);\n      this.reLayout(selection, false);\n      this.initHistory('TextAlignment');\n      this.updateParagraphFormat('textAlignment', textAlignment, false);\n      this.reLayout(this.owner.selectionModule, false);\n      if (this.owner.editorHistoryModule) {\n        this.owner.editorHistoryModule.updateComplexHistory();\n      }\n    } else {\n      if (this.owner.editorHistoryModule) {\n        this.owner.editorHistoryModule.initComplexHistory(selection, 'MultiSelection');\n      }\n      if (!isNullOrUndefined(selection.getTable(selection.start, selection.end))) {\n        //Table cell vertical alignment.\n        this.updateSelectionTableFormat(selection, 'CellContentVerticalAlignment', verticalAlignment);\n        this.reLayout(this.owner.selectionModule, false);\n        this.initHistory('TextAlignment');\n        //Paragraph text alignment.\n        this.updateSelectionParagraphFormatting('textAlignment', textAlignment, false);\n        this.reLayout(selection, false);\n      }\n      if (this.owner.editorHistoryModule) {\n        this.owner.editorHistoryModule.updateComplexHistory();\n      }\n    }\n  };\n  //Restrict editing implementation starts\n  /**\n   * @param user\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.insertEditRangeElement = function (user) {\n    if (this.documentHelper.isDocumentProtected || this.documentHelper.selection.isEmpty) {\n      return;\n    }\n    this.initComplexHistory('RestrictEditing');\n    this.selection.skipEditRangeRetrieval = true;\n    var selection = this.documentHelper.selection;\n    var startPos = this.selection.start;\n    var endPos = this.selection.end;\n    if (!this.selection.isForward) {\n      startPos = this.selection.end;\n      endPos = this.selection.start;\n    }\n    if (selection.start.paragraph.isInsideTable && selection.end.paragraph.isInsideTable && selection.start.paragraph.associatedCell.ownerTable.contains(selection.end.paragraph.associatedCell)) {\n      var startCell = this.getOwnerCell(this.selection.isForward);\n      var endCell = this.getOwnerCell(!this.selection.isForward);\n      if (startCell.rowIndex === endCell.rowIndex) {\n        var startIndex = startCell.ownerRow.childWidgets.indexOf(startCell);\n        var endIndex = startCell.ownerRow.childWidgets.indexOf(endCell);\n        var startElement = [];\n        var endElement = [];\n        for (var i = startIndex; i <= endIndex; i++) {\n          var editStart = this.addEditElement(user);\n          if (i == startIndex) {\n            if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n              this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n            }\n          }\n          editStart.columnFirst = i;\n          editStart.columnLast = i;\n          editStart.line = selection.start.currentWidget;\n          var editEnd = editStart.editRangeEnd;\n          editEnd.line = selection.end.currentWidget;\n          startElement.push(editStart);\n          endElement.push(editEnd);\n          this.insertElements(undefined, [editStart]);\n        }\n        //this.insertElements(endElement, startElement);\n        var lastLine = this.selection.getLastParagraph(endCell).lastChild;\n        for (var l = 0; l < endElement.length; l++) {\n          endElement[l].line = lastLine;\n          if (l == 0) {\n            this.selection.start.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n            this.selection.end.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n          }\n          this.insertElements(undefined, [endElement[l]]);\n        }\n        if (this.editorHistory) {\n          this.editorHistory.updateComplexHistoryInternal();\n        }\n        var offset = startElement[0].line.getOffset(startElement[0], 1);\n        this.selection.start.setPositionParagraph(startElement[0].line, offset);\n        offset = endElement[0].line.getOffset(endElement[0], 1);\n        this.selection.end.setPositionParagraph(endElement[0].line, offset);\n        this.selection.fireSelectionChanged(true);\n        this.fireContentChange();\n      } else {\n        this.insertEditRangeInsideTable(startCell, endCell, user);\n        if (this.editorHistory) {\n          this.editorHistory.updateComplexHistoryInternal();\n        }\n        var startLine = this.documentHelper.getFirstParagraphInCell(startCell).childWidgets[0];\n        var endLine = this.selection.getLastParagraph(endCell).childWidgets[0];\n        var offset = startLine.getOffset(startLine.children[0], 1);\n        this.selection.start.setPositionParagraph(startLine, offset);\n        offset = endLine.getOffset(endLine.children[0], 1);\n        this.selection.end.setPositionParagraph(endLine, offset);\n        this.selection.fireSelectionChanged(true);\n        this.fireContentChange();\n      }\n    } else {\n      this.addRestrictEditingForSelectedArea(user);\n    }\n    this.selection.skipEditRangeRetrieval = false;\n  };\n  Editor.prototype.insertEditRangeInsideTable = function (startCell, endCell, user) {\n    var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n    var startLeft = this.selection.getCellLeft(startCell.ownerRow, startCell);\n    var endLeft = startLeft + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    var cellInfo = this.updateSelectedCellsInTable(startLeft, endLeft, endCellLeft, endCellRight);\n    startLeft = cellInfo.start;\n    endLeft = cellInfo.end;\n    var endElement = [];\n    for (var i = rowStartIndex; i <= count; i++) {\n      table = startCell.ownerTable.combineWidget(this.owner.viewer);\n      var row = table.childWidgets[i];\n      var cellSelectionStartIndex = -1;\n      var cellSelectionEndIndex = -1;\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        var cellStart = this.selection.getCellLeft(row, cell);\n        if (this.checkCellWithInSelection(startLeft, endLeft, cellStart)) {\n          if (cellSelectionStartIndex === -1) {\n            cellSelectionStartIndex = j;\n          }\n          cellSelectionEndIndex = j;\n        }\n      }\n      var newEndElement = [];\n      for (var z = cellSelectionStartIndex; z <= cellSelectionEndIndex; z++) {\n        var startCell_2 = void 0;\n        var startParagraph = void 0;\n        var startLine = void 0;\n        if (z >= cellSelectionStartIndex && z <= cellSelectionEndIndex) {\n          startCell_2 = row.childWidgets[cellSelectionStartIndex];\n          startParagraph = this.documentHelper.getFirstParagraphInCell(startCell_2);\n          startLine = startParagraph.childWidgets[0];\n        }\n        var editStart = this.addEditElement(user);\n        if (z === cellSelectionStartIndex) {\n          if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n          }\n          this.selection.start.setPositionParagraph(startLine, this.selection.getStartOffset(startParagraph));\n          this.selection.end.setPositionParagraph(startLine, this.selection.getStartOffset(startParagraph));\n        }\n        editStart.columnFirst = z;\n        editStart.columnLast = z;\n        editStart.line = startLine;\n        this.insertElements(undefined, [editStart]);\n        var editEnd = editStart.editRangeEnd;\n        newEndElement.push(editEnd);\n        if (endElement.length > 0 && z === cellSelectionEndIndex) {\n          for (var l = 0; l < endElement.length; l++) {\n            endElement[l].line = editStart.line;\n            this.insertElements(undefined, [endElement[l]]);\n          }\n          endElement = [];\n        }\n      }\n      endElement = newEndElement;\n      if (i === count && endElement.length > 0) {\n        var cellWidget = row.childWidgets[cellSelectionEndIndex];\n        var lastLine = this.selection.getLastParagraph(cellWidget).lastChild;\n        for (var l = 0; l < endElement.length; l++) {\n          endElement[l].line = lastLine;\n          if (l == 0) {\n            this.selection.start.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n            this.selection.end.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n          }\n          this.insertElements(undefined, [endElement[l]]);\n        }\n      }\n    }\n  };\n  Editor.prototype.addRestrictEditingForSelectedArea = function (user) {\n    var editStart = this.addEditElement(user);\n    var editEnd = editStart.editRangeEnd;\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n    }\n    this.owner.isShiftingEnabled = true;\n    this.insertElements([editEnd], [editStart]);\n    if (this.editorHistory) {\n      this.editorHistory.updateComplexHistoryInternal();\n    }\n    var offset = editStart.line.getOffset(editStart, 1);\n    this.selection.start.setPositionParagraph(editStart.line, offset);\n    offset = editEnd.line.getOffset(editEnd, 1);\n    this.selection.end.setPositionParagraph(editEnd.line, offset);\n    var block = this.documentHelper.blockToShift;\n    if (!isNullOrUndefined(block) && this.viewer instanceof PageLayoutViewer && block.bodyWidget.sectionFormat.columns.length > 1) {\n      var lastbody = this.documentHelper.layout.getBodyWidget(block.bodyWidget, false);\n      if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && lastbody.page === lastbody.nextRenderedWidget.page) {\n        this.reLayout(this.selection);\n      }\n    }\n    this.owner.isShiftingEnabled = false;\n    this.selection.fireSelectionChanged(true);\n    this.fireContentChange();\n  };\n  /**\n   * @param user\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.addEditElement = function (user, id) {\n    var editStart = new EditRangeStartElementBox();\n    if (user.toLocaleLowerCase() === 'everyone') {\n      editStart.group = user;\n    } else {\n      editStart.user = user;\n    }\n    var editEnd = new EditRangeEndElementBox();\n    editEnd.editRangeStart = editStart;\n    editStart.editRangeEnd = editEnd;\n    if (id) {\n      editStart.editRangeId = id;\n      editEnd.editRangeId = id;\n    } else {\n      var editRangeId = this.getEditRangeID(9);\n      editStart.editRangeId = editRangeId;\n      editEnd.editRangeId = editRangeId;\n    }\n    this.editStartRangeCollection.push(editStart);\n    this.addEditCollectionToDocument();\n    this.editStartRangeCollection = [];\n    return editStart;\n  };\n  /**\n   * @param numDigits\n   * @private\n   * @returns {number}\n   */\n  Editor.prototype.getEditRangeID = function (numDigits) {\n    var min = Math.pow(10, numDigits - 1);\n    var max = Math.pow(10, numDigits) - 1;\n    var num = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (this.editRangeID.includes(num)) {\n      // Number is not unique, generate a new one recursively\n      return this.getEditRangeID(numDigits);\n    }\n    this.editRangeID.push(num);\n    return num;\n  };\n  /**\n   * @param protectionType\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.protect = function (protectionType) {\n    this.documentHelper.isDocumentProtected = true;\n    this.documentHelper.protectionType = protectionType;\n    this.selection.highlightEditRegion();\n    if (this.editorHistory) {\n      this.editorHistory.destroy();\n    }\n  };\n  Editor.prototype.addEditCollectionToDocument = function () {\n    for (var i = 0; i < this.editStartRangeCollection.length; i++) {\n      var editStart = this.editStartRangeCollection[i];\n      var user = editStart.user === '' ? editStart.group : editStart.user;\n      if (this.documentHelper.editRanges.length > 0 && this.documentHelper.editRanges.containsKey(user)) {\n        this.documentHelper.editRanges.get(user).push(editStart);\n      } else {\n        var collection = [];\n        collection.push(editStart);\n        this.documentHelper.editRanges.add(user, collection);\n      }\n    }\n    this.selection.updateEditRangeCollection();\n  };\n  /**\n   * @param editStart\n   * @param user\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateRangeCollection = function (editStart, user) {\n    if (this.documentHelper.editRanges.length > 0 && this.documentHelper.editRanges.containsKey(user)) {\n      this.documentHelper.editRanges.get(user).push(editStart);\n    } else {\n      var collection = [];\n      collection.push(editStart);\n      this.documentHelper.editRanges.add(user, collection);\n    }\n  };\n  /**\n   * @param user\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeUserRestrictions = function (user) {\n    if (!this.selection.checkSelectionIsAtEditRegion() && !this.selection.isEditRangeCellSelected()) {\n      return;\n    }\n    this.selection.skipEditRangeRetrieval = true;\n    var editStart = this.selection.getEditRangeStartElement();\n    this.selection.skipEditRangeRetrieval = true;\n    var start = this.selection.start;\n    var end = this.selection.end;\n    if (!this.selection.isForward) {\n      start = this.selection.end;\n      end = this.selection.start;\n    }\n    if (!this.selection.isEmpty && start.paragraph.isInsideTable && end.paragraph.isInsideTable && this.selection.isCellSelected(start.paragraph.associatedCell, start, end)) {\n      var startCell = start.paragraph.associatedCell;\n      var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n      var endCell = end.paragraph.associatedCell;\n      if (table.contains(endCell)) {\n        this.removeEditRangeElementsOnTable(user);\n      }\n    } else {\n      this.removeEditRangeElements(editStart, user);\n    }\n    this.fireContentChange();\n    this.selection.skipEditRangeRetrieval = false;\n  };\n  Editor.prototype.removeEditRangeElements = function (editStart, user) {\n    this.initHistory('RemoveEditRange');\n    if (this.editorHistory) {\n      this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(editStart));\n      this.editorHistory.currentBaseHistoryInfo.setEditRangeInfo(editStart);\n      this.editorHistory.updateHistory();\n    }\n    if (editStart.user === user || editStart.group === user) {\n      this.removeUserRestrictionsInternal(editStart, user);\n    }\n    this.selection.updateEditRangeCollection();\n  };\n  Editor.prototype.removeEditRangeElementsOnTable = function (currentUser) {\n    var selectedWidgets = this.selection.selectedWidgets.keys;\n    if (selectedWidgets) {\n      this.initComplexHistory('RemoveEditRange');\n      for (var i = 0; i < selectedWidgets.length; i++) {\n        if (selectedWidgets[i] instanceof TableCellWidget) {\n          var cell = selectedWidgets[i];\n          var row = cell.containerWidget;\n          var editRangeElements = row.editRangeID.values;\n          if (editRangeElements.length > 0) {\n            var editStart = void 0;\n            for (var _i = 0, editRangeElements_1 = editRangeElements; _i < editRangeElements_1.length; _i++) {\n              var element = editRangeElements_1[_i];\n              if (element.columnFirst == cell.index && element.columnLast == cell.index) {\n                editStart = element;\n              }\n            }\n            if (editStart) {\n              var editRangeEnd = editStart.editRangeEnd;\n              this.selection.start.setPositionParagraph(editStart.line, editStart.line.getOffset(editStart, editStart.length));\n              this.selection.end.setPositionParagraph(editRangeEnd.line, editRangeEnd.line.getOffset(editRangeEnd, editRangeEnd.length) - 1);\n              if (editStart.user === currentUser || editStart.group === currentUser) {\n                this.removeEditRangeElements(editStart, currentUser);\n              }\n            }\n          }\n        }\n      }\n      if (this.editorHistory) {\n        this.editorHistory.updateComplexHistoryInternal();\n      }\n    }\n  };\n  /**\n   * @param editStart\n   * @param currentUser\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeUserRestrictionsInternal = function (editStart, currentUser, notRemoveElement) {\n    var user = currentUser;\n    if (isNullOrUndefined(currentUser)) {\n      user = editStart.user === '' ? editStart.group : editStart.user;\n    }\n    var index = this.documentHelper.editRanges.get(user).indexOf(editStart);\n    this.documentHelper.editRanges.get(user).splice(index, 1);\n    if (this.documentHelper.editRanges.get(user).length === 0) {\n      this.documentHelper.editRanges.remove(user);\n    }\n    if (editStart.columnFirst != -1 && editStart.columnLast != -1) {\n      this.removeEditRangeFromCollection(editStart);\n    }\n    editStart.removeEditRangeMark();\n    if (!notRemoveElement) {\n      editStart.editRangeEnd.line.children.splice(editStart.editRangeEnd.indexInOwner, 1);\n      editStart.line.children.splice(editStart.indexInOwner, 1);\n    }\n  };\n  Editor.prototype.removeEditRangeFromCollection = function (editStart) {\n    var row = editStart.paragraph.associatedCell.ownerRow;\n    if (row.editRangeID.containsKey(editStart.editRangeId)) {\n      var cell = row.getCellUsingColumnIndex(row.rowIndex, editStart.columnFirst);\n      if (!isNullOrUndefined(cell)) {\n        if (cell.isRenderEditRangeStart && cell.isRenderEditRangeEnd) {\n          cell.isRenderEditRangeEnd = false;\n          cell.isRenderEditRangeStart = false;\n          row.editRangeID.remove(editStart.editRangeId);\n        }\n      }\n    } else {\n      var table = editStart.paragraph.associatedCell.ownerTable;\n      for (var i = row.rowIndex - 1; i >= 0; i--) {\n        var previousRow = table.childWidgets[i];\n        if (previousRow.editRangeID.containsKey(editStart.editRangeId)) {\n          var previousCell = previousRow.getCellUsingColumnIndex(previousRow.rowIndex, editStart.columnFirst);\n          if (!isNullOrUndefined(previousCell)) {\n            if (previousCell.isRenderEditRangeStart && previousCell.isRenderEditRangeEnd) {\n              previousCell.isRenderEditRangeEnd = false;\n              previousCell.isRenderEditRangeStart = false;\n              previousRow.editRangeID.remove(editStart.editRangeId);\n              break;\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.removeAllEditRestrictions = function () {\n    this.selection.skipEditRangeRetrieval = true;\n    var startPosition = this.selection.start;\n    var endPosition = this.selection.end;\n    var editStart = [];\n    var keys = this.documentHelper.editRanges.keys;\n    for (var j = 0; j < keys.length; j++) {\n      editStart = this.documentHelper.editRanges.get(keys[j]);\n      for (var i = 0; i < editStart.length; i++) {\n        editStart[i].editRangeEnd.line.children.splice(editStart[i].editRangeEnd.indexInOwner, 1);\n        editStart[i].line.children.splice(editStart[i].indexInOwner, 1);\n      }\n    }\n    this.documentHelper.editRanges.clear();\n    this.selection.updateEditRangeCollection();\n    this.selection.start.setPositionInternal(startPosition);\n    this.selection.end.setPositionInternal(endPosition);\n    this.selection.editRegionHighlighters.clear();\n    this.owner.viewer.updateScrollBars();\n    this.selection.fireSelectionChanged(false);\n    this.selection.skipEditRangeRetrieval = false;\n  };\n  /**\n   * Inserts the specified form field at the current selection.\n   *\n   * @param {FormFieldType} type Specify the Form field type to insert.\n   * @returns {void}\n   */\n  Editor.prototype.insertFormField = function (type) {\n    if (isNullOrUndefined(this.selection.start) || this.owner.enableHeaderAndFooter) {\n      return;\n    }\n    this.initHistory('InsertHyperlink');\n    var isRemoved = true;\n    if (!this.selection.isEmpty) {\n      isRemoved = this.removeSelectedContents(this.selection);\n    }\n    if (isRemoved) {\n      this.insertFormFieldInternal(type);\n    }\n  };\n  Editor.prototype.insertFormFieldInternal = function (type) {\n    this.updateInsertPosition();\n    var element = [];\n    var temp = this.getCharacterFormat(this.selection);\n    var format = new WCharacterFormat(undefined);\n    format.copyFormat(temp);\n    var fieldBegin = new FieldElementBox(0);\n    fieldBegin.formFieldData = this.getFormFieldData(type);\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.formFieldType = type;\n      this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n    }\n    fieldBegin.characterFormat.copyFormat(format);\n    element.push(fieldBegin);\n    var bookmark = new BookmarkElementBox(0);\n    bookmark.characterFormat.copyFormat(format);\n    fieldBegin.formFieldData.name = this.getBookmarkName(type, 'Insert', this.formFieldCounter);\n    bookmark.name = fieldBegin.formFieldData.name;\n    element.push(bookmark);\n    var span = new TextElementBox();\n    span.text = this.getFormFieldCode(type);\n    element.push(span);\n    var fieldSeparator = new FieldElementBox(2);\n    element.push(fieldSeparator);\n    var result = new TextElementBox();\n    result.characterFormat.copyFormat(format);\n    if (type === 'CheckBox') {\n      result.text = String.fromCharCode(9744);\n      this.documentHelper.layout.setCheckBoxFontSize(fieldBegin.formFieldData, result.characterFormat);\n    } else {\n      result.text = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n    }\n    element.push(result);\n    var fieldEnd = new FieldElementBox(1);\n    fieldEnd.characterFormat.copyFormat(format);\n    element.push(fieldEnd);\n    fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n    fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n    fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n    var bookmarkEnd = new BookmarkElementBox(1);\n    bookmarkEnd.characterFormat.copyFormat(format);\n    bookmarkEnd.name = fieldBegin.formFieldData.name;\n    bookmarkEnd.reference = bookmark;\n    bookmark.reference = bookmarkEnd;\n    element.push(bookmarkEnd);\n    this.documentHelper.layout.isInsertFormField = true;\n    this.insertElement(element);\n    this.documentHelper.layout.isInsertFormField = false;\n    var paragraph = this.selection.start.paragraph;\n    fieldEnd.linkFieldCharacter(this.documentHelper);\n    if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n      this.documentHelper.fields.push(fieldBegin);\n    }\n    this.addFormFieldWidget(fieldBegin);\n    var offset = bookmarkEnd.line.getOffset(bookmarkEnd, 1);\n    this.selection.selects(bookmarkEnd.line, offset, true);\n    this.updateEndPosition();\n    this.reLayout(this.selection, true);\n  };\n  Editor.prototype.addFormFieldWidget = function (fieldBegin) {\n    if (this.documentHelper.formFields.indexOf(fieldBegin) === -1) {\n      var isInserted = false;\n      if (this.documentHelper.formFields.length > 0) {\n        var currentStart = this.selection.getElementPosition(fieldBegin).startPosition;\n        for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n          /* eslint-disable-next-line max-len */\n          var paraIndex = this.selection.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n          if (currentStart.isExistBefore(paraIndex)) {\n            isInserted = true;\n            this.documentHelper.formFields.splice(i, 0, fieldBegin);\n            break;\n          }\n        }\n      }\n      if (!isInserted) {\n        this.documentHelper.formFields.push(fieldBegin);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Editor.prototype.getFormFieldData = function (type) {\n    switch (type) {\n      case 'Text':\n        return new TextFormField();\n      case 'CheckBox':\n        return new CheckBoxFormField();\n      case 'DropDown':\n        return new DropDownFormField();\n    }\n  };\n  /**\n   * @param field\n   * @param info\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.setFormField = function (field, info) {\n    var type;\n    var formField;\n    if (!isNullOrUndefined(info.format)) {\n      type = 'Text';\n      formField = new TextFormField();\n    } else if (!isNullOrUndefined(info.sizeType)) {\n      type = 'CheckBox';\n      formField = new CheckBoxFormField();\n    } else if (!isNullOrUndefined(info.dropdownItems)) {\n      type = 'DropDown';\n      formField = new DropDownFormField();\n    }\n    if (!isNullOrUndefined(type) && !isNullOrUndefined(formField)) {\n      formField.name = !isNullOrUndefined(info.name) ? info.name : field.formFieldData.name;\n      formField.copyFieldInfo(info);\n      this.editFormField(type, formField);\n    }\n  };\n  /**\n   * @param type\n   * @param formData\n   * @param type\n   * @param formData\n   * @private\n   * @returns {boolean}\n   */\n  Editor.prototype.editFormField = function (type, formData) {\n    var begin = this.selection.getCurrentFormField();\n    if (isNullOrUndefined(begin) || isNullOrUndefined(begin.formFieldData)) {\n      return false;\n    }\n    this.initComplexHistory('FormField');\n    var bookmarkStart;\n    var bookmarkEnd;\n    if (formData.name !== '') {\n      if (begin.formFieldData.name !== formData.name && this.documentHelper.bookmarks.containsKey(formData.name)) {\n        this.deleteBookmark(formData.name);\n      }\n      bookmarkStart = new BookmarkElementBox(0);\n      bookmarkStart.name = formData.name;\n      bookmarkEnd = new BookmarkElementBox(1);\n      bookmarkEnd.name = formData.name;\n      bookmarkStart.reference = bookmarkEnd;\n      bookmarkEnd.reference = bookmarkStart;\n    }\n    this.initHistory('InsertHyperlink');\n    this.editHyperlinkInternal = isNullOrUndefined(this.editorHistory) || this.editorHistory && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo);\n    // Preserves the character format for hyperlink field.\n    var temp = begin.characterFormat.cloneFormat();\n    var format = new WCharacterFormat();\n    format.copyFormat(temp);\n    var textFormat = begin.fieldSeparator.nextElement.characterFormat.cloneFormat();\n    var currentOffset = begin.line.getOffset(begin, 0);\n    this.selection.start.setPositionParagraph(begin.line, currentOffset);\n    var endElement = begin.fieldEnd;\n    if (begin.nextNode && begin.nextNode instanceof BookmarkElementBox) {\n      endElement = begin.nextNode.reference;\n    }\n    currentOffset = endElement.line.getOffset(endElement, 1);\n    this.selection.end.setPositionParagraph(endElement.line, currentOffset);\n    this.skipFieldDeleteTracking = true;\n    this.deleteSelectedContents(this.selection, false);\n    this.skipFieldDeleteTracking = false;\n    this.updateInsertPosition();\n    var element = [];\n    var fieldBegin = new FieldElementBox(0);\n    fieldBegin.formFieldData = formData;\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.currentBaseHistoryInfo.formFieldType = type;\n      this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n    }\n    element.push(fieldBegin);\n    fieldBegin.characterFormat.copyFormat(format);\n    if (!isNullOrUndefined(bookmarkStart)) {\n      element.push(bookmarkStart);\n    }\n    var span = new TextElementBox();\n    span.text = this.getFormFieldCode(type);\n    element.push(span);\n    var fieldSeparator = new FieldElementBox(2);\n    fieldSeparator.characterFormat.copyFormat(format);\n    element.push(fieldSeparator);\n    span = new TextElementBox();\n    span.characterFormat.copyFormat(textFormat);\n    span.text = this.getDefaultText(formData);\n    if (type === 'CheckBox') {\n      span.characterFormat.copyFormat(fieldBegin.characterFormat);\n      if (formData.sizeType === 'Exactly') {\n        span.characterFormat.fontSize = formData.size;\n      }\n    } else if (formData instanceof TextFormField) {\n      if (formData.defaultValue !== '') {\n        if (formData.type === 'Text') {\n          span.text = HelperMethods.formatText(formData.format, formData.defaultValue);\n        } else if (formData.type === 'Number') {\n          span.text = HelperMethods.formatNumber(formData.format, formData.defaultValue);\n        } else {\n          span.text = HelperMethods.formatDate(formData.format, formData.defaultValue);\n        }\n      }\n    }\n    element.push(span);\n    var fieldEnd = new FieldElementBox(1);\n    fieldEnd.characterFormat.copyFormat(format);\n    element.push(fieldEnd);\n    var lastElement = fieldEnd;\n    if (!isNullOrUndefined(bookmarkEnd)) {\n      lastElement = bookmarkEnd;\n      element.push(bookmarkEnd);\n    }\n    fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n    fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n    fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n    this.documentHelper.layout.isInsertFormField = true;\n    this.insertElement(element);\n    this.documentHelper.layout.isInsertFormField = false;\n    var paragraph = this.selection.start.paragraph;\n    fieldEnd.linkFieldCharacter(this.documentHelper);\n    if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n      this.documentHelper.fields.push(fieldBegin);\n    }\n    this.addFormFieldWidget(fieldBegin);\n    var offset = lastElement.line.getOffset(lastElement, 1);\n    this.selection.selects(lastElement.line, offset, true);\n    this.updateEndPosition();\n    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n      this.editorHistory.updateHistory();\n    }\n    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n      this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n      this.editorHistory.updateComplexHistory();\n      this.isSkipOperationsBuild = false;\n    }\n    this.reLayout(this.selection, true);\n    this.editHyperlinkInternal = false;\n    this.nodes = [];\n    return true;\n  };\n  Editor.prototype.getDefaultText = function (formField) {\n    var defaultText = '';\n    if (formField instanceof CheckBoxFormField) {\n      defaultText = formField.defaultValue ? String.fromCharCode(9745) : String.fromCharCode(9744);\n    } else if (formField instanceof DropDownFormField) {\n      if (formField.dropdownItems.length > 0) {\n        defaultText = formField.dropdownItems[0];\n      } else {\n        defaultText = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n      }\n    } else if (formField instanceof TextFormField) {\n      if (formField.defaultValue !== '') {\n        defaultText = formField.defaultValue;\n      } else {\n        defaultText = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n      }\n    }\n    return defaultText;\n  };\n  Editor.prototype.getFormFieldCode = function (type) {\n    switch (type) {\n      case 'Text':\n        return 'FORMTEXT';\n      case 'CheckBox':\n        return 'FORMCHECKBOX';\n      case 'DropDown':\n        return 'FORMDROPDOWN';\n    }\n  };\n  /**\n   * @param field\n   * @param reset\n   * @param value\n   * @param field\n   * @param reset\n   * @param value\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.toggleCheckBoxFormField = function (field, reset, value) {\n    var formFieldData = field.formFieldData;\n    if (formFieldData instanceof CheckBoxFormField && formFieldData.enabled) {\n      this.initHistory('UpdateFormField');\n      if (this.editorHistory) {\n        var currentValue = void 0;\n        if (formFieldData instanceof CheckBoxFormField) {\n          currentValue = formFieldData.checked;\n        }\n        this.editorHistory.currentBaseHistoryInfo.fieldBegin = field;\n        this.editorHistory.currentBaseHistoryInfo.setFormFieldInfo(field, currentValue);\n        this.editorHistory.updateHistory();\n      }\n      if (reset) {\n        formFieldData.checked = value;\n      } else {\n        formFieldData.checked = !formFieldData.checked;\n      }\n      var separator = field.fieldSeparator;\n      var checkBoxTextElement = separator.nextNode;\n      if (formFieldData.checked) {\n        checkBoxTextElement.text = String.fromCharCode(9745);\n      } else {\n        checkBoxTextElement.text = String.fromCharCode(9744);\n      }\n      this.owner.documentHelper.layout.reLayoutParagraph(field.line.paragraph, 0, 0);\n      this.reLayout(this.selection, false);\n    }\n  };\n  /**\n   * @param field\n   * @param value\n   * @param reset\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.updateFormField = function (field, value, reset) {\n    var formFieldData = field.formFieldData;\n    if (formFieldData) {\n      this.updateFormFieldInternal(field, formFieldData, value, reset);\n    }\n  };\n  Editor.prototype.updateFormFieldInternal = function (field, formFieldData, value, reset) {\n    if (formFieldData instanceof TextFormField) {\n      if (value === '') {\n        if (reset) {\n          value = this.getDefaultText(formFieldData);\n        } else {\n          value = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n        }\n      }\n      var formattedText = value;\n      var type = formFieldData.type;\n      if (type === 'Text' && formFieldData.format !== '') {\n        formattedText = HelperMethods.formatText(formFieldData.format, value);\n      }\n      this.updateFormFieldResult(field, formattedText);\n    } else if (formFieldData instanceof DropDownFormField) {\n      var text = formFieldData.dropdownItems[value];\n      formFieldData.selectedIndex = value;\n      this.updateFormFieldResult(field, text);\n    }\n    var endoffset = field.fieldEnd.line.getOffset(field.fieldEnd, 1);\n    var startPos = new TextPosition(this.owner);\n    startPos.setPositionParagraph(field.fieldEnd.line, endoffset);\n    //selects the field range\n    this.documentHelper.selection.selectRange(startPos, startPos);\n    this.reLayout(this.selection, false);\n  };\n  Editor.prototype.updateFormFieldResult = function (field, value) {\n    //When protection is enabled with type Form Filling below method selects the field result alone.\n    this.selection.selectFieldInternal(field, false, true);\n    this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n    this.insertText(value);\n    this.isSkipOperationsBuild = false;\n  };\n  Editor.prototype.checkBookmarkAvailability = function (name, action) {\n    var bookmarkCol = this.documentHelper.bookmarks;\n    for (var i = 0; i < bookmarkCol.length; i++) {\n      if (bookmarkCol.containsKey(name)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  Editor.prototype.getBookmarkName = function (type, action, count) {\n    var name;\n    var available = false;\n    while (available === false) {\n      name = type + count;\n      available = this.checkBookmarkAvailability(name, action);\n      count = count + 1;\n    }\n    return name;\n  };\n  /**\n   * @param formField\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyFormTextFormat = function (formField) {\n    if (!isNullOrUndefined(formField)) {\n      var text = this.getFieldResultText(formField);\n      var currentValue = text;\n      text = HelperMethods.formatText(formField.formFieldData.format, text);\n      if (formField.fieldSeparator != undefined) {\n        this.applyTextFormatInternal(formField, text);\n      }\n      this.initHistory('FormTextFormat');\n      if (this.editorHistory) {\n        this.editorHistory.currentBaseHistoryInfo.setFormFieldInfo(formField, currentValue);\n        this.editorHistory.updateHistory();\n      }\n    }\n  };\n  // Inserts 5 space on Form Fill inline mode if length is 0\n  Editor.prototype.insertSpaceInFormField = function () {\n    if (this.documentHelper.isInlineFormFillProtectedMode && this.selection.isInlineFormFillMode()) {\n      var resultText = this.getFieldResultText();\n      if (resultText.length === 0 || resultText === '\\r') {\n        this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n        this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n      }\n    }\n  };\n  /**\n   * @param formField\n   * @private\n   * @returns {string}\n   */\n  Editor.prototype.getFieldResultText = function (formField) {\n    if (isNullOrUndefined(formField)) {\n      formField = this.selection.getCurrentFormField();\n    }\n    //Stores the current selection index, to reset after getting the result text\n    var previousStartIndex = this.selection.startOffset;\n    var previousEndIndex = this.selection.endOffset;\n    this.selection.isModifyingSelectionInternally = true;\n    this.selection.selectFieldInternal(formField, false, true);\n    var resultText = this.selection.getText(false);\n    //Resets the selection back to the original index\n    this.selection.select(previousStartIndex, previousEndIndex);\n    this.selection.isModifyingSelectionInternally = false;\n    return resultText;\n  };\n  /**\n   * @param field\n   * @param text\n   * @private\n   * @returns {void}\n   */\n  Editor.prototype.applyTextFormatInternal = function (field, text) {\n    var textElement = field.fieldSeparator.nextElement;\n    var start = 0;\n    text = text.replace(/\\r/g, '');\n    do {\n      if (!isNullOrUndefined(textElement) && textElement instanceof TextElementBox) {\n        textElement.text = text.slice(start, start + textElement.text.length);\n        start = start + textElement.length;\n      }\n      if (isNullOrUndefined(textElement.nextElement)) {\n        if (!isNullOrUndefined(textElement.line.nextLine)) {\n          textElement = textElement.line.nextLine.children[0];\n        } else {\n          this.documentHelper.layout.layoutBodyWidgetCollection(textElement.paragraph.index, textElement.paragraph.bodyWidget, textElement.paragraph, true);\n          var nextBlock = textElement.paragraph.nextRenderedWidget;\n          if (isNullOrUndefined(nextBlock)) {\n            break;\n          }\n          if (nextBlock instanceof TableWidget) {\n            nextBlock = this.documentHelper.getFirstParagraphBlock(nextBlock);\n          }\n          while (nextBlock.isEmpty()) {\n            nextBlock = nextBlock.nextRenderedWidget;\n          }\n          textElement = nextBlock.childWidgets[0].children[0];\n        }\n      } else {\n        textElement = textElement.nextElement;\n      }\n    } while (!(textElement instanceof FieldElementBox && textElement.fieldType === 1 && textElement.fieldBegin.formFieldData instanceof TextFormField));\n    this.documentHelper.layout.layoutBodyWidgetCollection(textElement.paragraph.index, textElement.paragraph.bodyWidget, textElement.paragraph, true);\n    this.selection.isFormatUpdated = true;\n    this.reLayout(this.selection, false);\n    this.selection.isFormatUpdated = false;\n  };\n  Editor.prototype.constructCommentInitial = function (authorName) {\n    var splittedName = authorName.split(' ');\n    var initials = '';\n    for (var i = 0; i < splittedName.length; i++) {\n      if (splittedName[i].length > 0 && splittedName[i] !== '') {\n        initials += splittedName[i][0];\n      }\n    }\n    return initials;\n  };\n  /**\n   * Inserts the footnote at the current selection.\n   *\n   * @returns {void}\n   */\n  Editor.prototype.insertFootnote = function () {\n    if (this.selection.isinFootnote || this.selection.isinEndnote) {\n      return;\n    }\n    this.isFootNoteInsert = true;\n    this.isFootNote = true;\n    var footnote = new FootnoteElementBox();\n    footnote.characterFormat.baselineAlignment = 'Superscript';\n    footnote.footnoteType = 'Footnote';\n    footnote.text = 's';\n    var paragraph = new ParagraphWidget();\n    var lineWidget = new LineWidget(paragraph);\n    var text = new FootnoteEndnoteMarkerElementBox();\n    paragraph.paragraphFormat.afterSpacing = 0;\n    text.characterFormat.baselineAlignment = 'Superscript';\n    text.line = lineWidget;\n    text.text = '?';\n    lineWidget.children.push(text);\n    var text1 = new TextElementBox();\n    text1.text = ' ';\n    text1.line = lineWidget;\n    lineWidget.children.push(text1);\n    paragraph.childWidgets.push(lineWidget);\n    footnote.bodyWidget.childWidgets.push(paragraph);\n    if (!this.selection.isEmpty) {\n      this.selection.handleRightKey();\n    }\n    this.initInsertInline(footnote);\n    // this.documentHelper.layout.isLayoutWhole = true;\n    // this.layoutWholeDocument();\n    // this.documentHelper.layout.isLayoutWhole = false;\n    var footPara;\n    if (footnote.paragraph.bodyWidget.page.footnoteWidget) {\n      for (var i = 0; i < footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n        if (footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference === footnote) {\n          footPara = footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets[i].childWidgets[0];\n        }\n      }\n    }\n    this.selection.start.setPositionForLineWidget(footPara.childWidgets[0], text1.line.getOffset(text1, footnote.text.length));\n    this.selection.end.setPositionInternal(this.selection.start);\n    // this.selection.fireSelectionChanged(true);\n    this.updateFootNoteIndex();\n    this.reLayout(this.selection, false);\n    this.separator('footnote');\n    this.continuationSeparator('footnote');\n    this.isFootNote = false;\n    this.isFootNoteInsert = false;\n  };\n  Editor.prototype.updateFootnoteCollection = function (footnote) {\n    if (this.documentHelper.footnoteCollection.indexOf(footnote) === -1) {\n      var isInserted = false;\n      if (this.documentHelper.footnoteCollection.length > 0) {\n        var currentStart = this.selection.getElementPosition(footnote).startPosition;\n        for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n          var paraIndex = this.selection.getElementPosition(this.documentHelper.footnoteCollection[i]).startPosition;\n          if (currentStart.isExistBefore(paraIndex)) {\n            isInserted = true;\n            this.documentHelper.footnoteCollection.splice(i, 0, footnote);\n            break;\n          }\n        }\n      }\n      if (!isInserted) {\n        this.documentHelper.footnoteCollection.push(footnote);\n      }\n      // this.viewer.updateScrollBars();\n    }\n  };\n  // Footnote implementation ends\n  /**\n   * Inserts the endnote at the current selection\n   *\n   * @returns {void}\n   */\n  Editor.prototype.insertEndnote = function () {\n    if (this.selection.isinFootnote || this.selection.isinEndnote) {\n      return;\n    }\n    this.documentHelper.layout.isEndnoteContentChanged = true;\n    var endnote = new FootnoteElementBox();\n    endnote.characterFormat.baselineAlignment = 'Superscript';\n    endnote.footnoteType = 'Endnote';\n    endnote.text = 's';\n    var paragraph = new ParagraphWidget();\n    var lineWidget = new LineWidget(paragraph);\n    var footText = new FootnoteEndnoteMarkerElementBox();\n    paragraph.paragraphFormat.afterSpacing = 0;\n    footText.characterFormat.baselineAlignment = 'Superscript';\n    footText.line = lineWidget;\n    footText.text = '?';\n    lineWidget.children.push(footText);\n    var followText = new TextElementBox();\n    followText.text = ' ';\n    followText.line = lineWidget;\n    lineWidget.children.push(followText);\n    paragraph.childWidgets.push(lineWidget);\n    endnote.bodyWidget.childWidgets.push(paragraph);\n    if (!this.selection.isEmpty) {\n      this.selection.handleRightKey();\n    }\n    this.initInsertInline(endnote);\n    // this.documentHelper.layout.isLayoutWhole = true;\n    // this.layoutWholeDocument();\n    // this.documentHelper.layout.isLayoutWhole = false;\n    var lastpage = this.documentHelper.pages.length;\n    var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n    var footPara;\n    if (bodyWidget.page.endnoteWidget) {\n      for (var i = 0; i < bodyWidget.page.endnoteWidget.bodyWidgets.length; i++) {\n        if (bodyWidget.page.endnoteWidget.bodyWidgets[i].footNoteReference === endnote) {\n          footPara = bodyWidget.page.endnoteWidget.bodyWidgets[i].childWidgets[0];\n        }\n      }\n    }\n    this.selection.start.setPositionForLineWidget(footPara.childWidgets[0], footText.line.getOffset(followText, endnote.text.length));\n    this.selection.end.setPositionInternal(this.selection.start);\n    this.updateEndNoteIndex();\n    this.documentHelper.layout.isLayoutWhole = true;\n    this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n    this.layoutWholeDocument();\n    this.isSkipOperationsBuild = false;\n    this.documentHelper.layout.isLayoutWhole = false;\n    this.reLayout(this.selection, false);\n    this.owner.documentHelper.blockToShift = undefined;\n    this.separator('endnote');\n    this.continuationSeparator('endnote');\n    this.documentHelper.layout.isEndnoteContentChanged = false;\n  };\n  Editor.prototype.updateEndnoteCollection = function (endnote) {\n    if (this.documentHelper.endnoteCollection.indexOf(endnote) === -1) {\n      var isInserted = false;\n      if (this.documentHelper.endnoteCollection.length > 0) {\n        var currentStart = this.selection.getElementPosition(endnote).startPosition;\n        for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n          var paraIndex = this.selection.getElementPosition(this.documentHelper.endnoteCollection[i]).startPosition;\n          if (currentStart.isExistBefore(paraIndex)) {\n            isInserted = true;\n            this.documentHelper.endnoteCollection.splice(i, 0, endnote);\n            break;\n          }\n        }\n      }\n      if (!isInserted) {\n        this.documentHelper.endnoteCollection.push(endnote);\n      }\n      var lastpage = this.documentHelper.pages.length;\n      if (this.documentHelper.endnoteCollection.length > 0) {\n        var positionchanged = false;\n        // this.documentHelper.layout.isFootnoteContentChanged = true;\n        var foot = void 0;\n        var endnoteWidget = void 0;\n        var footIndex = this.documentHelper.endnoteCollection.indexOf(endnote);\n        var insertIndex = 1;\n        var height = 0;\n        var isCreated = void 0;\n        var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n        if (bodyWidget.page.endnoteWidget) {\n          for (var j = 0; j < bodyWidget.page.endnoteWidget.bodyWidgets.length; j++) {\n            var currentIndex = this.documentHelper.endnoteCollection.indexOf(bodyWidget.page.endnoteWidget.bodyWidgets[j].footNoteReference);\n            if (currentIndex > footIndex) {\n              if (currentIndex - footIndex === 1) {\n                insertIndex = j;\n                positionchanged = true;\n                break;\n              }\n            }\n          }\n        }\n        // endnote.isLayout = true;\n        foot = endnote; //this.documentHelper.endnoteCollection[i];\n        if (bodyWidget.page.endnoteWidget instanceof FootNoteWidget && bodyWidget.page.endnoteWidget.footNoteType === 'Endnote') {\n          endnoteWidget = bodyWidget.page.endnoteWidget;\n        } else {\n          isCreated = true;\n          endnoteWidget = new FootNoteWidget();\n          endnoteWidget.footNoteType = 'Endnote';\n          endnoteWidget.page = bodyWidget.page;\n          var newParagraph = new ParagraphWidget();\n          newParagraph.characterFormat = new WCharacterFormat();\n          newParagraph.paragraphFormat = new WParagraphFormat();\n          newParagraph.index = 0;\n          var lineWidget = new LineWidget(newParagraph);\n          newParagraph.childWidgets.push(lineWidget);\n          //endnoteWidget.childWidgets.push(newParagraph);\n          this.viewer.cutFromTop(this.viewer.clientActiveArea.y + 18);\n        }\n        var body = foot.bodyWidget;\n        for (var j = 0; j < foot.bodyWidget.childWidgets.length; j++) {\n          var block = foot.bodyWidget.childWidgets[j];\n          //body.childWidgets.push(block);\n          if (this.documentHelper.layout.isLayoutWhole) {\n            block.containerWidget = undefined;\n          } else {\n            block.containerWidget = body;\n            body.page = bodyWidget.page;\n            body.sectionFormat = endnoteWidget.sectionFormat;\n            block.containerWidget.containerWidget = endnoteWidget;\n          }\n          // endnoteWidget.bodyWidgets[j].childWidgets.push(block);\n          if (positionchanged) {\n            endnoteWidget.bodyWidgets.splice(insertIndex, 0, body);\n          } else {\n            endnoteWidget.bodyWidgets.push(body);\n          }\n        }\n        insertIndex++;\n        if (isCreated) {\n          bodyWidget.page.endnoteWidget = endnoteWidget;\n        }\n        // endNote.containerWidget = bodyWidget;\n        endnoteWidget.height += height;\n        //         }\n        // this.documentHelper.layout.layoutfootNote(endnoteWidget);\n        //this.layoutfootNote(endNote);\n      }\n      // this.viewer.updateScrollBars();\n    }\n  };\n  Editor.prototype.updateEndNoteIndex = function () {\n    var endNoteCollec = this.documentHelper.endnoteCollection;\n    for (var i = 0; i < endNoteCollec.length; i++) {\n      var text = this.documentHelper.layout.getFootEndNote(endNoteCollec[i].paragraph.bodyWidget.sectionFormat.endnoteNumberFormat, i + 1);\n      if (text != '') {\n        endNoteCollec[i].text = text;\n        var marker = endNoteCollec[i].bodyWidget.childWidgets[0].childWidgets[0].children[0];\n        if (!isNullOrUndefined(marker)) {\n          if (marker instanceof FootnoteEndnoteMarkerElementBox || HelperMethods.checkTextFormat(marker.text)) {\n            marker.text = text;\n            marker.width = endNoteCollec[i].bodyWidget.footNoteReference.width;\n          }\n        }\n      }\n    }\n  };\n  Editor.prototype.separator = function (type) {\n    //let block = new page_1.block;\n    var paragraph = new ParagraphWidget();\n    var lineWidget = new LineWidget(paragraph);\n    var text = new TextElementBox();\n    text.characterFormat.fontColor = '#00000000';\n    text.line = lineWidget;\n    text.text = String.fromCharCode(3);\n    lineWidget.children.push(text);\n    paragraph.childWidgets.push(lineWidget);\n    if (type === 'footnote' && this.documentHelper.footnotes.separator.length < 1) {\n      this.documentHelper.footnotes.separator.push(paragraph);\n    } else if (type === 'endnote' && this.documentHelper.endnotes.separator.length < 1) {\n      this.documentHelper.endnotes.separator.push(paragraph);\n    }\n  };\n  Editor.prototype.continuationSeparator = function (type) {\n    //var block = new page_1.block;\n    var paragraph = new ParagraphWidget();\n    var lineWidget = new LineWidget(paragraph);\n    var text = new TextElementBox();\n    text.characterFormat.fontColor = '#00000000';\n    text.line = lineWidget;\n    text.text = String.fromCharCode(4);\n    lineWidget.children.push(text);\n    paragraph.childWidgets.push(lineWidget);\n    if (type === 'footnote' && this.documentHelper.footnotes.continuationSeparator.length < 1) {\n      this.documentHelper.footnotes.continuationSeparator.push(paragraph);\n    } else if (type === 'endnote' && this.documentHelper.endnotes.continuationSeparator.length < 1) {\n      this.documentHelper.endnotes.continuationSeparator.push(paragraph);\n    }\n  };\n  Editor.prototype.updateFootNoteIndex = function () {\n    var footNoteCollec = this.documentHelper.footnoteCollection;\n    for (var i = 0; i < footNoteCollec.length; i++) {\n      var text = this.documentHelper.layout.getFootEndNote(footNoteCollec[i].paragraph.bodyWidget.sectionFormat.footNoteNumberFormat, i + 1);\n      if (text != '') {\n        footNoteCollec[i].text = text;\n        var marker = footNoteCollec[i].bodyWidget.childWidgets[0].childWidgets[0].children[0];\n        if (!isNullOrUndefined(marker) && marker instanceof FootnoteEndnoteMarkerElementBox) {\n          marker.text = text;\n          marker.width = footNoteCollec[i].bodyWidget.footNoteReference.width;\n        }\n      }\n    }\n  };\n  Editor.prototype.setCharFormatForCollaborativeEditing = function (insertFormat) {\n    if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.owner.enableCollaborativeEditing) {\n      var characterFormat = {};\n      HelperMethods.writeCharacterFormat(characterFormat, true, insertFormat, undefined, true);\n      this.editorHistory.currentBaseHistoryInfo.type = \"CharacterFormat\";\n      this.editorHistory.currentBaseHistoryInfo.format = JSON.stringify(characterFormat);\n    }\n  };\n  /**\n  * @private\n  */\n  Editor.prototype.clear = function () {\n    if (this.pageRefFields) {\n      this.pageRefFields = {};\n    }\n  };\n  return Editor;\n}();\nexport { Editor };","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","TextPosition","ImageSizeInfo","ParagraphWidget","LineWidget","ElementBox","TextElementBox","Margin","ImageElementBox","BlockWidget","BlockContainer","BodyWidget","TableWidget","TableCellWidget","TableRowWidget","Widget","ListTextElementBox","BookmarkElementBox","HeaderFooterWidget","FieldTextElementBox","TabElementBox","EditRangeStartElementBox","EditRangeEndElementBox","CommentElementBox","CommentCharacterElementBox","CheckBoxFormField","DropDownFormField","TextFormField","ShapeElementBox","TextFrame","ContentControl","FootnoteElementBox","FootNoteWidget","ShapeBase","FootnoteEndnoteMarkerElementBox","WCharacterFormat","HelperMethods","Base64","isNullOrUndefined","Browser","classList","L10n","WParagraphFormat","WSectionFormat","WListFormat","WTableFormat","WRowFormat","WCellFormat","WBorder","WBorders","WTabStop","WList","WAbstractList","WListLevel","WLevelOverride","FieldElementBox","protectionTypeChangeEvent","imagesProperty","abstractListIdProperty","SelectionCharacterFormat","PageLayoutViewer","WCharacterStyle","WStyles","HistoryInfo","TableResizer","Dictionary","WParagraphStyle","CONTROL_CHARACTERS","showSpinner","hideSpinner","DialogUtility","Revision","XmlHttpRequestHandler","beforeCommentActionEvent","trackChangeEvent","beforeXmlHttpRequestSend","internalStyleCollectionChange","SectionBreakType","sectionsProperty","commentsProperty","bidiProperty","revisionsProperty","lastParagraphMarkCopiedProperty","sectionFormatProperty","revisionIdProperty","contextualSpacingProperty","keepWithNextProperty","keepLinesTogetherProperty","widowControlProperty","outlineLevelProperty","numberFormatProperty","startAtProperty","paragraphFormatProperty","listsProperty","abstractListsProperty","listIdProperty","listLevelNumberProperty","leftIndentProperty","rightIndentProperty","firstLineIndentProperty","textAlignmentProperty","afterSpacingProperty","beforeSpacingProperty","lineSpacingProperty","lineSpacingTypeProperty","listFormatProperty","cellsProperty","rowsProperty","blocksProperty","listLevelPatternProperty","levelsProperty","stylesProperty","nameProperty","SanitizeHtmlHelper","ChangesSingleView","Editor","documentHelper","_this","nodes","editHyperlinkInternal","startParagraph","undefined","endParagraph","formFieldCounter","skipFieldDeleteTracking","skipFootNoteDeleteTracking","isForHyperlinkFormat","isTrackingFormField","isInsertText","keywordIndex","casingIndex","checkLastLetterSpace","checkLastLetterSpaceDot","pasteFootNoteType","isCopying","isFootnoteElementRemoved","isEndnoteElementRemoved","handledEnter","removeEditRange","isRemoveRevision","isFootNoteInsert","isTableInsert","isFootNote","isHandledComplex","isUserInsert","tableResize","tocStyles","triggerPageSpellCheck","chartType","removedBookmarkElements","removedEditRangeStartElements","removedEditRangeEndElements","tocBookmarkId","copiedData","isPasteContentCheck","pageRefFields","delBlockContinue","delBlock","delSection","isInsertingTOC","editStartRangeCollection","skipReplace","skipTableElements","editRangeID","isImageInsert","isSkipOperationsBuild","isCellFormatApplied","revisionData","splittedRevisions","isSkipComments","isRemoteAction","isIncrementalSave","listNumberFormat","listLevelNumber","isXmlMapped","isAutoList","isLastParaMarkCopied","combineLastBlock","remotePasteRevision","isFieldOperation","copiedContent","copiedTextContent","previousParaFormat","previousCharFormat","previousSectionFormat","pasteTextPosition","isPaste","isPasteListUpdated","isHtmlPaste","isInsertField","isBordersAndShadingDialog","pasteImageIndex","onTextInputInternal","isDevice","nbsp","RegExp","String","fromCharCode","lineFeed","prefix","replace","text","editableDiv","textContent","textBoxText","substring","isCompositionStart","isCompositionUpdated","owner","isReadOnlyMode","isDocumentLoaded","canEditContentControl","selection","isEmpty","start","setPositionForLineWidget","currentWidget","offset","handleTextInput","isCompositionEnd","suffix","retrieveCurrentFormatProperties","handleBackKey","innerText","end","isControlPressed","predictText","indexOf","charAt","toLowerCase","slice","setPositionParagraph","onPaste","event","pasteInternal","preventDefault","base64","Object","defineProperty","prototype","get","isDocumentProtected","restrictFormatting","isSelectionInEditRegion","protectionType","enumerable","configurable","isCommentOnlyMode","checkContentControlLocked","viewer","editorHistoryModule","getModuleName","setFieldInfo","fieldInfo","field","getHyperlinkField","selectField","insertField","code","fieldCode","trimStart","insertPageCount","insertPageNumber","trim","index","paragraph","insertFormat","selectionFormat","copyInsertFormat","line","fieldBegin","characterFormat","mergeFormat","children","fieldCodeSpan","fieldSeparator","fieldResultSpan","fieldEnd","childWidgets","isCreatedUsingHtmlSpanTag","fields","section","sectionFormat","pasteContentsInternal","isLinkedStyle","styleName","styleObj","styles","findByName","link","applyStyle","style","clearDirectFormatting","startPosition","endPosition","initComplexHistory","setOffsetValue","startOffset","endOffset","isSelectionEmpty","enableCollaborativeEditing","clearFormattingInternal","setPositionInternal","type","preservedStartPosition","clone","preservedEndPosition","selectCurrentWord","copyFormat","onApplyCharacterFormat","onApplyParagraphFormat","parser","parseStyle","JSON","parse","getCompleteStyles","preDefinedStyles","editorHistory","currentHistoryInfo","action","updateComplexHistory","cut","copySelectedContent","isCutPerformed","insertEditingRegion","user","insertEditRangeElement","enforceProtection","credential","restrictFormatType","isReadOnly","typeOfProtection","limitToFormatting","isHighlightEditRegion","addProtection","enforceProtectionAsync","_a","getCommentHierarchicalIndex","comment","ownerComment","replyComments","comments","alertBox","localObj","defaultLocale","setLocale","locale","alert","title","getConstant","content","insertComment","enableHeaderAndFooter","enableComment","commentReviewPane","commentPane","isEditMode","insertCommentInternal","layout","allowLayout","isAtSamePosition","isAtParagraphEnd","isParagraphLastLine","getLineLength","paragraphInfo","getParagraphInfo","startIndex","getHierarchicalIndex","toString","endParagraphInfo","endIndex","position","isForward","commentRangeStart","commentRangeEnd","isSameLine","lineIndex","indexInOwner","initInsertInline","endPos","getTextPosBasedOnLogicalIndex","commentAdv","getUtcDate","initHistory","currentBaseHistoryInfo","insertedText","Marker_Start","Marker_End","removedNodes","markerData","author","currentUser","initial","constructCommentInitial","sanitize","commentId","Math","random","updateCommentElement","addCommentWidget","insertPosition","updateHistory","reLayout","postComment","isResolved","isReply","commentStart","commentEnd","deleteAllComments","isLayoutEnabled","historyInfo","deleteCommentInternal","addModifiedAction","selectContent","documentStart","deleteComment","currentSelectedComment","i","deleteCommentWidgetInternal","removeInline","removeCommentMark","deleteCommentWidget","commentIndex","splice","resolveComment","eventArgs","cancel","trigger","resolveOrReopenComment","reopenComment","replyComment","parentComment","mentions","commentWidget","currentCmtStart","currentCmtEnd","replyCmtLength","getOffset","isAtSameLine","addReply","element","updateHistoryPosition","removeSelectedContents","fireContentChange","isNewComment","showComments","selectComment","isInserted","currentStart","getElementPosition","paraIndex","isExistBefore","selectedTab","addComment","reviewTab","selectedItem","selectionModule","addReplyComment","hierarchicalIndex","split","parseInt","password","isAsync","protectDocument","currentProtectionType","enforceProtectionHandler","passwordBase64","encodeString","formObject","saltBase64","spinCount","url","serviceUrl","serverActionSettings","restrictEditing","contentType","onSuccess","enforceProtectionInternal","onFailure","protectionFailureHandler","onError","customHeaders","headers","httprequestEventArgs","serverActionType","timeout","withCredentials","dialog","visible","hide","send","localeValue","name","fireServiceFailure","console","error","statusText","data","enforceProtectionAssign","showHideRulers","saltValue","hashValue","toggleTrackChangesProtection","enabled","enableTrackChanges","isTrackChangesEnabled","getSettingData","protect","restrictPane","restrictEditingPane","display","showStopProtectionPane","loadPaneValue","notify","trackChangesPane","enableDisableButton","stopProtection","unProtectDocument","unProtectDocumentHandler","onUnProtectionSuccess","bind","stopProtectionAsync","validateHashValue","currentHashValue","decodeUserHashValue","decodeString","documentHashValue","defaultHashValue","previousProtectionType","highlightEditRegion","clearHistory","render","commentMarkDictionary","clear","enableLockAndEdit","collaborativeEditingModule","updateLockRegion","onHighlight","highlightFormFields","isViewPasteOptions","showHidePasteOptions","editorModule","isShiftingEnabled","isSpellCheck","editPosition","updateSelectionTextPosition","isSelectionChanged","getOffsetValue","updatePhysicalPosition","upDownSelectionLength","location","x","fireSelectionChanged","isFirstLine","getPrefixAndSuffix","setEditableDivCaretPosition","editor","inlineInfo","getInline","inline","boxInfo","getElementBoxInternal","box","spaceIndex","prefixAdded","getPreviousTextElement","lastIndexOf","previousNode","endInlineInfo","endInline","suffixAdded","nextNode","onKeyDownInternal","ctrl","shift","alt","key","which","keyCode","focusIn","handleCtrlBackKey","handleCtrlDelete","acceptTab","handleTabKey","insertPageBreak","beforeSpacing","paragraphFormat","isInlineFormFillMode","toggleBold","fontDialogModule","showFontDialog","toggleTextAlignment","optionsPaneModule","isReplace","documentEditorSettings","showNavigationPane","showHideOptionsPane","toggleItalic","hyperlinkDialogModule","show","increaseIndent","openBlank","toggleUnderline","enableEditorHistory","redo","undo","toggleBaselineAlignment","blur","handleShiftEnter","changeCase","toggleChangeCase","insertColumnBreak","decreaseIndent","toggleHighlightColor","insertFootnote","insertEndnote","triggerSpellCheck","handleEnterKey","handleDelete","handleSpaceBarKey","textPosition","getDocumentEnd","getDocumentStart","updateFields","updateRefField","checkForCursorVisibility","onBackSpace","delete","onEnter","handleControlShiftLeftKey","previousRenderedWidget","handleLeftKey","handleControlShiftRightKey","selectedText","checkSpace","endsWith","handleShiftLeftKey","animationTimer","clearTimeout","caret","insertText","setTimeout","format","copy","sFormat","bidi","bold","italic","fontSize","fontFamily","highlightColor","baselineAlignment","fontColor","underline","strikethrough","getResultContentControlText","ele","nextRenderedWidget","firstChild","updateXmlMappedContentControl","startInlineEle","getContentControl","contentControlProperties","updateCustomXml","xmlMapping","storeItemId","xPath","itemId","customXmlData","containsKey","xml","DOMParser","xmlDoc","parseFromString","lastText","htmlCollec","getElementsByTagName","childNodes","nodeValue","documentElement","attributes","getNamedItem","newXml","XMLSerializer","xmlString","serializeToString","set","insertTextInternal","revisionType","pasteContents","currentFormField","formFieldData","resultText","getFieldResultText","rex","textHelper","getEnSpaceCharacter","selectFieldInternal","maxLength","isReplaceAll","isRemoved","commentStarts","checkAndRemoveComments","isListTextSelected","isBookmarkInserted","bookmarks","extendSelectionToBookmarkStart","getCurrentFormField","dropDownIndex","selectedIndex","paraFormat","isImageSelected","contextType","isSkipLayouting","skipFormatRetrieval","paragraphLength","getLength","searchModule","isRepalceTracking","updatedParagraphLength","isTextInput","isSpecialChars","containsSpecialCharAlone","updateInsertPosition","span","isBidi","getRtlLanguage","isRtl","isRightToLeft","margin","setCharFormatForCollaborativeEditing","revisions","matchedRevisions","getMatchedRevisionsToCombine","mapMatchedRevisions","checkToCombineRevisionWithPrevPara","insertRevision","textAlignment","listFormat","listId","clientX","hasOwnProperty","splitWordByMaxLength","reLayoutParagraph","indexInInline","inlineObj","ischangeDetected","spellCheckerModule","removeErrorsFromCollection","ignoreOnceItems","canTrigger","insertLangId","id","inlineLangId","isInlineContainsSpecChar","isTextContainsSpecChar","isSameFormat","canInsertRevision","insertTextInline","tempSpan","isRevisionCombined","insertIndex","prevRevisionCount","checkToMapRevisionWithInlineText","checkToMapRevisionWithNextNode","checkToCombineRevisionsinBlocks","checkToMapRevisionWithPreviousNode","splittedSpan","isInField","updateRevisionForSpittedTextElement","copyElementRevision","updateElementInFieldRevision","updateSplittedElementError","isLayouted","updateEndPosition","isList","checkAndConvertList","checkAndConvertToHyperlink","updateHistoryForComments","startPos","bookMark","selectionBookmark","isElementInSelection","reference","bookmarkPargraph","selectionParagraphInfo","equals","elementOffset","bookmarkType","revisionElement","elementToInclude","isEnd","currentRevision","rangeIndex","range","updateCurrentTrackChanges","retrieveFieldResultantText","item","resultantText","fieldType","textElement","previousElement","previousValidNodeForTracking","checkWidget","isCombined","combineRevisionWithNextPara","combineRevisionWithPrevPara","inlinePara","nextElementPara","nextElement","nextValidNodeForTracking","prevElement","newElement","updateLastElementRevision","applyMatchedRevisionInorder","combineElementRevisions","elementToCombine","prevRevision","j","isBegin","revisionsMatched","elementToCopy","isSplitElementMerged","isRevisionAlreadyIn","getMarkerData","insertRevisionForFootnoteWidget","revision","elementRevision","revisionID","isRevisionMatched","decideInlineForTrackChanges","matched","currentElement","insertIMEText","isUpdate","lastComposedText","setPositionForCurrentIndex","selectPosition","insertSectionBreak","sectionBreakType","NewPage","isInHeaderFooter","Continuous","isSectionBreakCont","insertSection","layoutWholeDocument","combineRevisionWithBlocks","elementBox","prevPara","isNew","lastLine","lastChild","lastElement_1","compareElementRevision","lastElementRevision","clearAndUpdateRevisons","remove","lastElement","previousLine","nextPara","firstLine","firstElement","firstEleRevision","checkToCombineRevisionWithNextPara","mappedRevisions","isLastLine","removeRevision","revisionToRemove","elementInfo","clearElementRevision","date","spittedRange","skip","parseRevisionId","revisionId","newRevisionData","currentDate","associatedCell","ownerBase","cellWidget","ownerRow","rowFormat","getRevision","updateRevisionCollection","blocks","bodyWidget","insertRevisionForBlock","isReverse","filter","splitRevisionByElement","splittedRange","splittedRevision","revisionsInternal","keys","compare","insertRevisionAtEnd","insertRevisionAtPosition","prevRevisionLength","insertRevisionAtBegining","splitRevisionForSpittedElement","spittedElement","combineElementRevision","currentElementRevisions","revisionToCombine","rangeLength","k","removeMarkerInfoRevision","markerInfo","combineRevisions","block","endposition","info","getLineInfo","widget","isTOC","skipReLayout","editPostion","clearListElementBox","isLastChild","getLastParaForBodywidgetCollection","nextParagraph","getNextParagraphBlock","isInsideTable","getLastParagraph","sectionIndex","addRemovedNodes","recordInsertRevisionDeletetion","removeContent","lastEle","removeEmptyLine","skipParaMark","elemets","containerWidget","prevWidget","bodywidget","lastPage","pages","lastBodyWidget","bodyWidgets","lastPara","updatePasteRevision","changes","add","currentRange","rowWidget","firstCell","firstPara","getFirstParagraph","updateEditPosition","paraWidget","currentChangeView","changesInfoDiv","insertBefore","createSingleChangesDiv","renderedChanges","appendChild","updateAuthorIdentity","selectFirstBlock","isUndoing","sectionBreakContinuous","sectionBreakNewPage","newSectionFormat","startPara","isEndsWithPageBreak","breakCode","updateNextBlocksIndex","updateSectionIndex","moveToNextParagraph","cloneFormat","lastBlock","firstBlock","table","getParentTable","combineWidget","rowIndex","newParagraph","previousBlock","splitTable","layoutBodyWidgetCollection","getSplitWidgets","selectionStart","splitParagraphInternal","splitBodyWidget","updateRowIndex","getFirstParagraphInFirstCell","selectParagraphInternal","startBlock","newBodyWidget","moveBlocksToNextPage","page","temp_NewBody","startindex","parseSectionFormat","numberOfColumns","updateColumnIndex","insertRemoveHeaderFooter","updateBlockIndex","updateClientArea","insert","headersFooters","blockIndex","startBodyWidget","increaseIndex","currentSectionIndex","columnIndex","isTab","list","getList","convertList","isLeadingZero","tabValue","tabIndex","previousText","numberFormat","previousList","listLevelPattern","getListLevelPattern","checkNumberFormat","checkLeadingZero","checkNextLevelAutoList","previousWidget","deleteSelectedContents","followCharacter","leadingZeroText","listLevel","leftIndent","firstLineIndent","startAt","setList","autoConvertList","currentParagraph","prevParagraph","getPreviousParagraphBlock","levelNumber","isConvertList","getListById","listNumber","getListNumber","prevListText","currentListText","inputString","match","charCodeAt","prevListNumber","getNumber","toUpperCase","currentListNumber","roman","conversion","arr","num","currentValue","nextValue","newList","lists","newAbstractList","abstractLists","abstractListId","abstractList","nsid","generateUniqueId","levels","isBullet","isZero","getPageFromBlockWidget","elementIndex","insertImageText","insertFieldBeginText","insertFieldSeparatorText","insertFieldEndText","insertBookMarkText","spanObj","spanIndex","previousInline","getPreviousTextInline","nextInline","getNextTextInline","temp","getCharacterFormat","image","previousInlineObj","nextInlineObj","onApplyList","isEnter","tabCharIndex","lowerCaseText","containsURL","atIndex","dotIndex","getEndOffset","prevLine","autoFormatHyperlink","blockInfo","createHyperlinkElement","moveNextPosition","updateComplexWithoutHistory","appylingHyperlinkFormat","updateCharacterFormatWithUpdate","begin","insertHyperlinkfield","linkFieldCharacter","isBookmark","separator","unlinkRangeFromRevision","removeCollection","updateTrackChanges","unlinkWholeRangeInRevision","unLinkFieldCharacter","fieldToLayout","fieldEndParagraph","fieldIndex","formFieldIndex","formFields","insertHyperlink","address","displayText","screenTip","startsWith","insertHyperlinkInternal","movePreviousPosition","insertHyperlinkInternalInternal","fieldStartPosition","lineWidget","selects","editHyperlink","isTrackEnabled","insertHyperlinkByFormat","insertElement","isInsertRemovedBookamrk","isSelectionUpdated","insertInlineInSelection","insertElementInCurrentLine","checkIsNotRedoing","checkEndPosition","fieldResult","isNestedField","fieldObj","getHyperlinkDisplayText","newFieldBegin","isEditHyperlink","insertInlineInternal","insertClonedFieldResult","isStarted","node","fieldParagraph","getClonedFieldResultWithSel","getClonedFieldResult","insertParagraph","insertBlock","curParagraph","removeHyperlink","fieldStartString","fieldSeparatorPosition","fieldSeparatorString","updateHyperlinkFormat","pasteWindow","currentPasteOptions","defaultPasteOption","enableLocalPaste","paste","pasteElement","window","htmlContent","rtfContent","clipbordData","clipboardData","getData","sanitizeString","pasteAjax","doc","substringToRemove","doc_1","paragraphs","querySelectorAll","lastPElement","querySelector","outerHTML","currentPasteAction","applyPasteOptions","innerHTML","items","m","kind","pasteImage","getAsFile","files","imgFile","fileReader","FileReader","onload","onPasteImage","readAsDataURL","document","createElement","addEventListener","insertImageInternal","width","height","src","proxy","pasteRequestHandler","viewerContainer","focus","systemClipboard","responseType","pasteFormattedContent","onPasteFailure","getSfdtDocument","isScrollHandler","updateScrollBars","status","updateFocus","sfdt","document_1","getUniqueListOrAbstractListId","sortedList","sort","a","b","sortedAbsList","checkSameLevelFormat","lstLevelNo","listLevelPatternInCollection","isEqualParagraphFormat","source","dest","round","rightIndent","afterSpacing","contextualSpacing","keepWithNext","keepLinesTogether","widowControl","outlineLevel","lineSpacing","lineSpacingType","getBlocksToUpdate","blcks","obj","currentRow","cell","concat","updateListIdForBlocks","idToUpdate","update","existingList","isUpdated","row","toUpdate","updatePasteContent","pasteContent","sectionId","uniqueListId","sortedPasteList","uniqueAbsLstId","sortedPasteAbsList","_loop_1","this_1","lstDup","absListId","listObj","out_k_1","blck","getBlocks","sections","widgets","txt","currentInline","getPreviousValidElement","getNextValidElement","insertParaFormat","copySelectionParagraphFormat","words","addCustomStyles","commentsCollection","commentEnds","parseComments","parseAbstractList","parseList","revisionChanges","revisionCollection","sfdtExportModule","copyWithTrackChange","i_1","revisionCheck","j_1","revision_1","parseRevisions","unshift","parseBody","paragraphWidget","applyMergeFormat","applyParaFormatInternal","applyFormatInternal","k_1","l","insertedParaFormat","spaceAfterAuto","spaceBeforeAuto","tabs","inlineCharacterFormat","fontSizeBidi","fontFamilyBidi","fontFamilyAscii","fontFamilyFarEast","options","isPasteOptionTextOnly","currentFormat","canUndo","redoStack","applyTablePasteOptions","pasteAsNestedTable","pasteAsNewRow","pasteAsNewColumn","pasteOverwriteCell","optimizeSfdt","selectedTextLength","contentlength","images","newImages","img","newIndex","parseImages","layoutComments","destroy","isTablePaste","startCell","endCell","newTable","ownerTable","isCellSelected","commentStartToInsert","defaultPaste","isDragging","removeSelectedContentInternal","documentContent","write","getOwnerCell","clonedTable","cloneTableToHistoryInfo","cloneTable","numberOfRows","cellIndex","newCell","columnCount","rowSpannedCells","addRows","tableUpdate","rowWidget_1","createColumn","prevCell","spannedCell","rowspannedCollection","cellFormat","rowSpan","z","insertSpannedCells","tableReLayout","dataTable","pasteCell","nextRow","newPara","coloumnIndexPaste","rowIndexPaste","newCells","row2","rowSpanIndex","columnSpan","cloneCells","rowWidgetLength","cellIndexSE","rowsToAdd","numberOfColumns_1","cellIterate","rowCount","getRowCountToInsert","columncount","getColumnCountToInsert","rows","pasteRowCount","newRow","insertTableRowsInternal","copyContent","reLayoutTable","isGridUpdated","calculateGrid","buildTableColumns","rowCell","isCellInserted","rowSpannedCell","count","rowPlacement","isInsertRow","column","rowInsertion","isPastingContent","pasteCopiedData","hasFootNoteElement","isBidiReLayout","isSectionEmpty","footerDistance","headerDistance","updatePageBoundingRectangle","boundingRectangle","isConsiderLastBlock","isPara","clientActiveArea","insertedNodes","isTable","generateTableRevision","clientWidth","getContainerWidth","fitCellsToClientArea","insertTableRows","insertBlockInternal","arrangeFootnoteCollection","arrangeEndnoteCollection","endnoteCollection","nextStart","tempElementBox","footnoteCollection","para","previousPage","nextPage","headerFooters","headerFooter","insertTableInternal","moveRows","skipRemoving","constructRevisionsForTable","removeBlock","removeRevisionFromTable","curretBlock","checkAndGetBlock","blockAdvCollection","clearTableWidget","linkFieldInTable","revisionIndex","canConstructRevision","removedIds","constructRevisionFromID","constructRevisionsForBlock","isRedoing","deleteRevision","removeDeletedCellRevision","linIndex","applyRevisionForCurrentPara","startoffset","endoffset","isParaMarkIncluded","skipElement","nextSplitWidget","endElement","lastIndex","tempPara","previousSplitWidget","insertBlockTable","moveInlines","checkInsertPosition","handleCut","removedCommentStart","deleteSelectedContent","isValidNodeForTracking","footnoteType","updateFootnoteCollection","updateEndnoteCollection","curInline","insertElementInternal","isElementHasEndNote","isTrackingEnabled","prevRevisionsCount","updateRevisionForElement","isBreak","updateClientAreaForBlock","isFirstItem","isBeginning","isMiddle","relayout","isEqualFormat","skipTracking","isRTLText","incrementCommentIndex","isHyperlinkField","substr","isRevisionCombined_1","bookmarkCol","contentControlCollection","textWrappingStyle","floatingElements","isLayout","modifiedActions","revisionToInclude","isFieldBeginRedoing","isInsertEnd","currentElementIndex","existingIndex","isSkipEmptyPara","paraStart","isAtParagraphStart","insertNewParagraphWidget","splitParagraph","nextWidget","insertImage","imageString","alternateText","insertImageAsync","isUiInteracted","formField","isFormFillProtectedMode","editor_1","insertPicture","insertTable","columns","maximumColumns","columnAlertPopup","enableRtl","maximumRows","rowAlertPopup","createTable","tableFormat","splitWidthToTableCells","removedComment","prevBlock","startLine","setPosition","lastParagraph","getLastParagraphInLastCell","insertRow","above","isAffectedByRowSpannedCell","isRowSpanEnd","bottomBorderWidth","cellCountInfo","updateRowspan","createRowAndColumn","updateCellFormatForInsertedRow","cellFormats","autoFitTable","fitType","insertAutoFitTable","tableAdv","getTable","parentTable","updateProperties","rowInsertionForCE","cellCount","insertrow","rowData","cellData","paragraphData","characterData","parseRowFormat","parseCellFormat","parseParagraphFormat","parseCharacterFormat","spannedCells","getPreviousRowSpannedCells","isCellIncluded","isRowSpanned","clonedRowIndex","getInsertedTable","isDefaultFormatUpdated","insertColumn","left","columnPlacement","copyCellFormats","cellInsertionForCE","newCellPara","nextCell","nextCellpara","nextCellTextBox","getLastParagraphBlock","getFirstParagraphBlock","isCollaborativePaste","fitChildToClientArea","skipScrollToPosition","preferredWidthType","initializeTableBorders","tableRow","heightType","tableWidget","tableCell","isNewRow","selectedCells","getColumnCellsForSelection","getOwnerRow","isStart","startRow","endRow","getOwnerTable","startTable","endTable","mergeSelectedCellsInTable","canMergeCells","localizeValue","alertDialog","showCloseIcon","okButton","click","confirmCellMerge","closeOnEscape","X","Y","animationSettings","effect","startOwnerCell","endOwnerCell","containerCell","getContainerCellOf","contains","containsCell","getSelectedCell","mergedCell","mergeSelectedCells","firstParagraph","close","getCellLeft","cellWidth","endCellLeft","endCellRight","cellInfo","updateSelectedCellsInTable","rowStartIndex","cellStart","preferredWidth","mergeBorders","newBlock","updateRowBySpannedCells","updateBlockIndexAfterMerge","mergedCellborders","cellBorders","borders","top","getBorderBasedOnPriority","bottom","startCellIndex","canMergeSelectedCellsInTable","startLeft","endLeft","selectionLeft","selectionRight","isRowLeftWithinSel","isRowRightWithinSel","rowLeft","rowRight","checkCellWithInSelection","convertPointToPixel","isPrevCellWithinSel","checkPrevOrNextCellIsWithinSel","isNextCellWithinSel","isNoRowSpan","isCellWithInSel","checkCurrentCell","checkCellWidth","cellLeft","prevCellLeft","isPrev","prevOrNextCell","isPrevCellWithInSel","cellOwner","spannedCellOwner","checkRowSpannedCells","insertAfter","length_1","insertIndex_1","length_2","splittedWidget","endLine","isMoved","moveContent","shapeIndex","updateRevisionForMovedContent","shiftLayoutedItems","updateHeaderFooterWidget","isLayoutChanged","previousBlockToLayout","isComposingIME","isHandledComplexHistory","editRegionHighlighters","blockToShift","removeEmptyPages","updateFieldElements","isRowOrCellResizing","showRevisions","isUpdateTrackChanges","splittedSection","isColumnBreak","isMultiColumnDoc","startInfo","endInfo","footNoteType","isRelayoutFootnote","shiftFootnotePageContent","enableAutoFocus","modifiedProperties","updateSelection","undoStack","isRelayout","headerFooterWidget","updateHeaderFooterWidgetToPage","shiftPageContent","headerFooterType","currentPage","isEvenPage","isFirstPage","differentFirstPage","headerWidgetIn","footerWidgetIn","updateHeaderFooterWidgetToPageInternal","differentOddAndEvenPages","isHeader","headerWidget","footerWidget","hfWidget","clearBlockWidget","parentHeaderFooter","updateHFClientArea","layoutHeaderFooterItems","headerOrFooter","removeFieldInWidget","isContentControl","removeFieldInBlock","wrapTextAround","removeFieldTable","removeField","foot","footnoteWidget","checkAndShiftFromBottom","endnoteWidget","renderedLists","renderedLevelOverrides","pageIndex","isEven","isNotEmpty","top_1","topMargin","max","isEndsWithColumnBreak","cutFromTop","updateContainerWidget","previousSection","allowFormattingInFormFields","property","formFieldSettings","formattingExceptions","contentControlStart","getPosition","cCstart","cCend","isExistAfter","checkPlainTextContentControl","startInline","endInlineEle","selectRange","selectParagraph","allowFormatting","applyCharFormatValue","isInSameParagraph","applyCharacterFormatForListText","updateSelectionCharacterFormatting","values","getListLevel","applyListCharacterFormatByValue","updateListCharacterFormat","updateListTextSelRange","startPositionInternal","endPositionInternal","initHistoryPosition","startSelectionReLayouting","toggleSubscript","toggleSuperscript","defaultTabWidth","clearList","applyBullet","bullet","applyBulletOrNumbering","applyNumbering","baseAlignment","updateProperty","isCompletePara","setPreviousBlockToLayout","moveToParagraphStartInternal","moveToParagraphEndInternal","initializeHistory","updateParagraphFormatInternal","clearFormatting","currentUnderline","script","completeStylesString","_i","name_1","intializeDefaultStyles","existingStyles","getStyleNames","defaultStyleNames","styleNames","val","styleNames_1","name_2","createStyle","styleString","modifyExistingStyle","createStyleIn","inputStyleType","getUniqueStyleName","setStyle","basedOn","basedStyle","getStyle","styleData","charaStyle","newCharStyle","styleFormCollection","getItem","styleLink","linkName","uniqueName","getUniqueName","matchArray","returnName","insertedFormat","updateCharacterFormat","applyCharFormatSelectedContent","applyCharFormatCell","applyCharFormat","applyCharFormatForSelectedPara","splittedLastParagraph","splittedWidets","getNextParagraphForCharacterFormatting","widgetCollection","getNextRenderedBlock","applyCharFormatForTable","getParagraphLength","startLineWidget","endLineWidget","getStartLineOffset","isIncrease","inlineLength","applyCharFormatInline","getCurrentSelectionValue","allCaps","changeSelectedTextCase","removedTextNodes","isRevert","changeTextCase","changeCaseParaFormatInCell","changeCaseParagraph","startOffsetVal","len","endOffsetVal","textCount","isIterationStarted","endElementBox","childIndex","isIncreaseIteration","child","isPreviousTextElementBox","changeCaseInline","endPara","changeCaseNextBlock","changeCaseInlineInternal","addRemovedTextNodes","newText","makeFirstLetterCapital","textToChange","firstLetter","getChangeCaseText","textElementBox","getIndexInInline","preText","getNextBlockForChangeCase","changeCaseForTable","input","oldText","sentencecase","capitalizeFirst","togglecase","capitalizedWords","map","word","specialChars","Boolean","resultArray","resultString","join","sentences","capitalizedSentences","sentence","toggle","char","indexToStart","changeCaseForSelectedCell","containsRow","changeCaseForSelectedPara","changeCaseForSelTable","cellContainer","changeCaseParaForCellInternal","changeCaseParaForRow","changeCaseParaForTableCell","wCell","getContainerCell","cellStartValue","cellEndValue","cellEndLeft","cellEndRight","childBlock","changeCaseParaFormatTableInternal","wRow","toggleAllCaps","casings","getSelectedCharacterFormat","uniqueCharacterFormat","toggleStrikethrough","updateFontSize","fontsizeCollection","formatInline","indexCountForRevision","updateRevisionForFormattedContent","indexCount","getCharacterFormatValueOfCell","applyCharFormatForSelectedCell","applyCharFormatRow","applyCharFormatForTableCell","applyCharFormatForSelTable","startCellLeft","startCellRight","getPropertyValue","applyCharFormatValueInternal","copyInlineCharacterFormat","sourceFormat","destFormat","baseCharStyle","addModifiedProperties","buildCharacterFormatOperation","clearFormat","fontFamilyNonFarEast","updateStyleObject","keyIndex","parseStyles","styleInCollection","styleObject","getStyleObject","updateStyle","onImageFormat","modifiedFormat","Image","insertedData","convertPixelToPoint","alternativeText","imageResizerModule","positionImageResizer","applyParagraphBorders","bordersType","color","lineWidth","lineStyle","shadow","space","applyRulerMarkerValues","initialValue","finalValue","differenceValue","zoomFactor","leftIndentCurrentValue","isSkipPositionCheck","currentPara","isFirstParaForList","clientArea","updateListLevelIndent","updateListLevel","isSkipSelection","isBidiList","getIndentIncrementValue","applyParaFormatProperty","layoutItemBlock","updateSelectionParagraphFormatting","getAbstractListById","level","addModifiedPropertiesForList","previousParagraph","updateWholeListItems","increaseLevel","nextListLevel","onApplyListInternal","updateCaretPosition","incrementFactor","currentParagraphIndent","incrementValue","getIndentIncrementValueInternal","abs","diff","cnt","fPosition","updateParagraphFormat","applyParaFormatSelectedContent","applyParaFormatInCell","applyCharacterStyle","applyParaFormat","hasValue","addModifiedPropertiesForParagraphFormat","copyParagraphFormat","getParagraohFormatOperation","applyBorder","right","horizontal","vertical","clearIndent","updateTabStopCollection","uniqueParagraphFormat","baseStyle","copyFromListLevelParagraphFormat","oldFormat","newFormat","applyContinueNumbering","applyContinueNumberingInternal","numberingInfo","getContinueNumberingInfo","getParagraphFormat","listPattern","changeListId","currentList","revertContinueNumbering","levelNum","listType","baseHistoryInfo","addModifiedPropertiesForContinueNumbering","checkNumberArabic","levelPattern","applyRestartNumbering","restartListAt","restartListAtInternal","changeRestartNumbering","addModifiedPropertiesForRestartNumbering","getNextParagraphForFormatting","isParaSelected","getParaFormatValueInCell","applyParaFormatCellInternal","applyParagraphFormatRow","applyParaFormatTableCell","isNext","applyParagraphFormatTableInternal","startValue","endValue","applyParaFormatTable","onApplyColumnFormat","startPageIndex","endPageIndex","clearContent","startSectionIndex","endSectionIndex","isMultipleSection","applyPropertyValueForSection","onApplySectionFormat","updateSectionFormat","removeInlineHeaderFooterWidget","propertyName","getHeaderFooter","setPositionForHistory","removedHeaderFooters","addModifiedPropertiesForSection","getCurrentHeaderFooter","HeaderFooterWidget_1","updateTextPositionForBlockContainer","updateHeaderFooters","startPage","paraInfo","getFirstChildOfTable","select","isSkip","pageHeight","pageWidth","getBodyWidget","onApplyTableFormat","getTableFormatAction","applyTablePropertyValue","updateSelectionTableFormat","onApplyTableRowFormat","getRowAction","applyRowPropertyValue","onApplyTableCellFormat","getTableCellAction","applyCellPropertyValue","leftMargin","rightMargin","bottomMargin","pageStartingNumber","restartPageNumbering","endnoteNumberFormat","footNoteNumberFormat","restartIndexForEndnotes","restartIndexForFootnotes","initialFootNoteNumber","initialEndNoteNumber","equalWidth","lineBetweenColumns","isInitialLoad","isLayoutWhole","layoutType","isinEndnote","isinFootnote","footnoteReferenceElement","combineSection","layoutItems","nextSection","combineSectionChild","combineFollowingSection","destoryPage","previousBodyWidget","emptyBody","updateTableFormat","updateCellFormat","updateRowFormat","tableStartPosition","tableEndPosition","newStartPosition","newEndPosition","updateFormatForCell","rowStartPosition","rowEndPosition","applyRowFormat","getHierarchicalIndexInternal","reLayoutSelectionOfTable","reLayoutSelection","isEnded","reLayoutSelectionOfBlock","length_3","shiftNextWidget","isMultipleSectionSelected","checkMultipleSectionSelected","removeSelectedContent","getBodyWidgetIndex","hierarchicalPosition","bodyWidgetIndex","editAction","isDeletecell","deleteTableCell","shiftPara","deletePara","deleteSection","deleteBlock","mergeCells","deleteTable","selectTable","considerTrackChanges","getParagraphForSelection","Table","trackRowDeletion","deleteColumn","onDeleteColumnConfirmed","selectColumn","previousCell","deleteCells","onDeleteColumn","updateTable","deleteRow","selectRow","Row","removeRow","canremoveRow","retrieveRevisionInOder","removeRevisionsInRow","trackInnerTable","returnDeleteRevision","skipCombine","paragraphStart","getStartOffset","endParagraphStartOffset","isCombineNextParagraph","lastLinelength","isCombineLastBlock","tempStartOffset","isEndInAdjacentTable","isPageBreak","paraEnd","paraReplace","isStartParagraph","removeInlines","deleteParagraphMark","deletaRevisionIDs","skipHistoryCollection","insertParagraphPaste","removeRevisionForBlock","removedNodeLength","charFormatRev","checkAndInsertBlock","removePrevParaMarkRevision","positionInfo","getPositionInfoForHeaderFooter","headerFooterStart","keyCount","paraLength","headerFooterEnd","combineSectionInternal","currentSection","previousY","lastBlockIndex","layoutHeaderFooter","copyStyle","paragraphAdv","linewid","removeFootnote","removeCommentsInBlock","block_1","removeCommentInPara","removeCommentsInline","commentType","isSkipShifting","skipElementRemoval","blockCollection","isSkipTracking","isPasteRevertAction","tableDelete","currentBlock","isFromDelete","nonEmptyEndPara","lastRange","isParaMark","toCheckForTrack","footNoteReference","updateFootNoteIndex","removeEndnote","lastpage","updateEndNoteIndex","removeAutoShape","floatingElementIndex","collection","isRenderBookmarkStart","isRenderBookmarkEnd","endBookMarkElement","footnote","endnote","getTabsInSelection","oldTabstops","selectedWidgets","paragraphsInSelection","getUpdatedTabs","getParagraphsInSelection","isRemove","para_1","newCollection","itemsToRemove","oldCollection","newTab","oldTab","modifyTabStop","addTabStopToCollection","deletePosition","tabJustification","tabLeader","removeTabStops","tabCollection","tab","isReturnIndex","isInsertBefore","commentMark","deleteTableBlock","cellAdv","deletePreviousBlock","deleteCellsInTable","isCellCleared","deleteCell","deleteContainer","sectionAdv","endCells","isDeleteCells","startColumnIndex","endColumnIndex","startRowIndex","endRowIndex","isRowSelected","isWholeRowSelected","tiltle","onConfirmedTableCellsDeletion","canRemoveRow","onConfirmedCellDeletion","rowToRemove","prevRenderedRow","setActionInternal","cell_1","j_2","removeRevisionForRow","addRemovedRevisionInfo","rowRevision","removeRevisionForCell","removeRevisionForInnerTable","addToRevisionInfo","unlinkRangeByRevision","copyChildToClipboard","totalLength","checkClearCells","paragrapghBookmarkCollection","existingBookmark","bookmark","deleteContent","previousChild","blockAdv","splitEndRow","getIndex","getFirstParagraphInCell","enableHistoryMode","selectionEnd","canHandleDeletion","deleteCommentInSelection","curentBaseHistoryInfo","startText","elementbox","bookmarkName","fieldInline","clearFieldElementRevisions","handleDeleteTracking","columnFirst","columnLast","removeEditRangeFromCollection","layoutedElements","deleteCommentWidgetInline","removeRangeRevisionForItem","removePrevRevisions","cloneListLevel","copyListLevel","destination","restartLevel","cloneLevelOverride","levelOverride","overrideListLevel","updateListParagraphs","listParagraphs","updateListParagraphsInBlock","startListLevel","initialListLevel","isSameList","tempList","isInSameListParagraph","addListLevels","abstractListAdv","listName","bulletCharacters","lastbody","combineMultiColumn","breakType","eleme","hyperlinkField","isSelectionOnHyperlink","fireRequestNavigate","initialStart","breakParagraph","pageBreak","isChangeDetected","isRetrieveFormatting","islayoutFootnote","currentLine","isAddRevToNxtPara","isContainsShapeAlone","checkParaMarkMatchedWithElement","insertParaRevision","isPreviousRevision","checkToMatchEmptyParaMark","container","getParagraphMarkSize","Height","applyRevisionForParaMark","splitRevision","prevRevCount","checkToMatchEmptyParaMarkBack","lineWid","textWid","nextIndex","fromSectionIndex","childWidget","updateIndex","cells","currentCellIndex","nextBlock","increment","getSelectedComments","commentEndInfo","commentStartInfo","startBlockInfo","endBlockInfo","commentToDelete","commentEndMark","commentStartBlockInfo","getParagraphInfoInternal","commentEndBlockInfo","updateStartPosition","replyCommentStart","startLineInfo","getLineInfoBasedOnParagraph","setPositionFromLine","endLineInfo","singleBackspace","skipBackSpace","insertSpaceInFormField","insertRemoveBookMarkElements","isUpdateComplexHistory","bookMarkStart","bookMarkEnd","insertRemovedEditRangeEndElements","editRangeEndElementBox","editRangeStart","editRangeEnd","insertRemovedEditRangeStartElements","editRangeStartElementBox","isBackSpace","deleteSelectedContentInternal","removeWholeElement","history","canRedo","isCommentDelete","currentLineWidget","initComplextHistory","previousOffset","repeatChar","selectTextElementStartOfField","isLinkedFieldCharacter","start_1","lockContentControl","prevInline","start_2","start_3","deleteBookmark","previousIndex","moveToPreviousCharacter","checkCombine","indexcolle","footNoteWidgets","getFootNoteWidgetsOf","layoutfootNote","removeOffset","removeAtOffset","childLength","removeCharacter","isRearrange","skipEditRangeRetrieval","removeUserRestrictionsInternal","updateEditRangeCollection","removeCharacterInLine","removedCount","removeRevisionsInformation","removeElement","isSkipRecordRevision","removedNode","checkToCombineRevisionsInSides","isDelete","updateEndRevisionIndex","revision_2","index_1","revision_3","handleDeletionForInsertRevision","revision_4","index_2","updateCursorForInsertRevision","startOff","endOff","isRevisionInserted","toCombineOrInsertRevision","handleDeleteBySplitting","isMarkedForRevision","prevHistoryInfo","endRevisionLogicalIndex","updateEndRevisionInfo","elementToEnsure","spittedSpan","currentPosition","singleDelete","deleteEditElement","removeContentControlMark","nextRenderedInline","editStart","editEnd","bookMarkBegin","setPositionForSelection","nxtParagraph","paraEndOffset","nextParagraph_1","startingOffset","singleDeleteInternal","lineLength","nextLine","handleParaMark","prevLength","updateEditPositionOnMerge","canRemoveParaMark","handleDeleteParaMark","prevLastLineIndex","inline_1","i_2","retrieveRevisionByType","insertDeleteParaMarkRevision","revisionToRetrieve","combineRevisionOnDeleteParaMark","base64String","imageElementBox","formatClippedString","extension","metaFileImageString","isMetaFile","generateFallBackImage","addBase64StringInCollection","getImageString","insertPictureInternal","crossOrigin","imgStr","Date","getTime","getBase64","imageUrlString","drawImage","displayPixelRatio","devicePixelRatio","draw","context","getContext","scale","toDataURL","isElementInserted","fitImageToPage","metaImageString","imageData","metaString","colIndex","insertedElement","onPortrait","onLandscape","copyValues","changeMarginValue","onPaperSize","updateListItemsTillEnd","updateNextBlockList","updateRenderedListItems","isFindingListParagraph","listID","getNextBlockForList","isListUpdated","listSearchResultInfo","updateListItems","isFirstElementWithPageBreak","updateListItemsForPara","updateListItemsForTable","updateListItemsForRow","updateListItemsForCell","updateRenderedListItemsForPara","updateRenderedListItemsForTable","updateRenderedListItemsForRow","updateRenderedListItemsForCell","currentListLevel","updateListNumber","listWholeWidth","prevWidth","currentWidth","getTextSize","updateTextSize","lineInfo","skipSelectionChange","getParagraph","createFields","fieldtext","insertBookmark","isHistoryInitiated","properties","row_1","getCellUsingColumnIndex","getCell","createBookmarkElements","bookmarkEnd","getBookmarkProperties","insertElements","updateComplexHistoryInternal","selectBookmarkInTable","showBookmarks","setBookmarkInfo","deleteBookmarkInternal","isRenderBookmarkAtEnd","getContainerTable","getSelectionInfo","hasMergedCells","startCell_1","getCellFromSelection","getActualOffset","endCell_1","getCellFromSelectionInTable","endElements","startElements","updateSelectionInfo","insertElementsInternal","elements","isAcceptOrReject","isAfterParagraphMark","isAfterTableMark","isAfterRowMark","isAfterCellMark","skipOperation","group","editRangeId","Field_Separator","getRevisionMarkerData","getCommentElementBox","getBlock","getBlockInternal","getBlockByIndex","blockObj","isInsertPosition","applyBorders","settings","border","getBorder","borderColor","borderStyle","clearAllBorderValues","selectedCell","getTopBorderCellsOnSelection","getLeftBorderCellsOnSelection","getRightBorderCellsOnSelection","getBottomBorderCellsOnSelection","getAdjacentCellToApplyBottomBorder","clearBorder","getAdjacentCellToApplyRightBorder","applyAllBorders","applyInsideBorders","updateGridForTableDialog","borderType","getSelectedCells","isLastSelectedRow","isLastRightCell","nextRowIndex","getAdjacentBottomBorderOnEmptyCells","rightBorderCells","getSelectedCellsNextWidgets","topBorderCells","leftBorderCells","bottomBorderCells","nextCellColIndex","isSingleCell","startPosIn","endPosIn","applyBordersInternal","sourceBorders","diagonalUp","diagonalDown","applyShading","sourceShading","backgroundColor","foregroundColor","textureStyle","sourceBorder","onTableFormat","isShading","shading","applyTableFormat","addModifiedTableProperties","handleTableFormat","tableAlignment","cellSpacing","description","applyFormat","shiftNextItem","tableHolder","onRowFormat","rowStartPos","rowEndPos","addModifiedRowProperties","handleRowFormat","allowBreakAcrossPages","onCellFormat","onParaFormat","updateCellMargins","cellStartPosition","cellEndPosition","cellOptionsDialogModule","applyCellMarginValue","appliedFormat","getSelectedCellInColumn","rowEndIndex","getColumnCells","isLeftSideCollection","getTableWidth","addModifiedCellProperties","handleCellFormat","verticalAlignment","updateToc","tocField","getTocFieldInternal","isTocField","getFieldCode","toLocaleLowerCase","insertTableOfContents","validateTocSettings","getTocSettings","tocSettings","includePageNumber","rightAlign","startLevel","endLevel","swtiches","swtch","Number","includeHyperlink","includeOutlineLevels","decodeTSwitch","tSwitch","levelSettings","tableOfContentsSettings","constructTocFieldCode","buildToc","tocLastPara","tocLastLine","appendEndField","appendEmptyPara","updatePageRef","emptyPara","emptyLine","tocFieldCode","constructTSwitch","isFirstPara","isNavigationPane","tocDomBody","createHeadingLevels","createOutlineLevels","isHeadingStyle","isOutlineLevelStyle","insertTocBookmark","createTOCWidgets","levelStyle","headingStyle","createTocFieldElement","isSkipRevision","hasFieldEnd","tocPara","tocLine","emptyParaAppended","headingStyleName","tocStyleName","headingPaneStyleName","paraStyle","tabStop","isFieldCode","tabChar","insertTocHyperlink","tabText","pageField","insertTocPageNumber","curBaseSytle","isEqualTocFormat","noramlStyle","copyTocFormat","getPageNumber","pageNumber","currentPageNum","bookMarkname","isRightAlign","pageRef","startElement","generateBookmarkName","formatString","onCellContentAlignment","selectTableCell","addEditElement","insertEditRangeInsideTable","addRestrictEditingForSelectedArea","cellSelectionStartIndex","cellSelectionEndIndex","newEndElement","startCell_2","getEditRangeID","addEditCollectionToDocument","numDigits","min","pow","floor","includes","editRanges","updateRangeCollection","removeUserRestrictions","checkSelectionIsAtEditRegion","isEditRangeCellSelected","getEditRangeStartElement","removeEditRangeElementsOnTable","removeEditRangeElements","setEditRangeInfo","editRangeElements","editRangeElements_1","notRemoveElement","removeEditRangeMark","isRenderEditRangeStart","isRenderEditRangeEnd","previousRow","removeAllEditRestrictions","insertFormField","insertFormFieldInternal","getFormFieldData","formFieldType","getBookmarkName","getFormFieldCode","setCheckBoxFontSize","isInsertFormField","addFormFieldWidget","setFormField","sizeType","dropdownItems","copyFieldInfo","editFormField","formData","bookmarkStart","textFormat","currentOffset","getDefaultText","size","defaultValue","formatText","formatNumber","formatDate","defaultText","toggleCheckBoxFormField","reset","checked","setFormFieldInfo","checkBoxTextElement","updateFormField","updateFormFieldInternal","formattedText","updateFormFieldResult","checkBookmarkAvailability","available","applyFormTextFormat","applyTextFormatInternal","isInlineFormFillProtectedMode","previousStartIndex","previousEndIndex","isModifyingSelectionInternally","getText","isFormatUpdated","authorName","splittedName","initials","text1","handleRightKey","footPara","continuationSeparator","isEndnoteContentChanged","footText","followText","positionchanged","footIndex","isCreated","currentIndex","endNoteCollec","getFootEndNote","marker","checkTextFormat","footnotes","endnotes","footNoteCollec","writeCharacterFormat","stringify"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor/editor.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { TextPosition, ImageSizeInfo } from '../selection/selection-helper';\nimport { ParagraphWidget, LineWidget, ElementBox, TextElementBox, Margin, ImageElementBox, BlockWidget, BlockContainer, BodyWidget, TableWidget, TableCellWidget, TableRowWidget, Widget, ListTextElementBox, BookmarkElementBox, HeaderFooterWidget, FieldTextElementBox, TabElementBox, EditRangeStartElementBox, EditRangeEndElementBox, CommentElementBox, CommentCharacterElementBox, CheckBoxFormField, DropDownFormField, TextFormField, ShapeElementBox, TextFrame, ContentControl, FootnoteElementBox, FootNoteWidget, ShapeBase, FootnoteEndnoteMarkerElementBox } from '../viewer/page';\nimport { WCharacterFormat } from '../format/character-format';\nimport { HelperMethods, Base64 } from './editor-helper';\nimport { isNullOrUndefined, Browser, classList, L10n } from '@syncfusion/ej2-base';\nimport { WParagraphFormat, WSectionFormat, WListFormat, WTableFormat, WRowFormat, WCellFormat, WBorder, WBorders, WTabStop } from '../index';\nimport { WList } from '../list/list';\nimport { WAbstractList } from '../list/abstract-list';\nimport { WListLevel } from '../list/list-level';\nimport { WLevelOverride } from '../list/level-override';\nimport { FieldElementBox } from '../viewer/page';\nimport { protectionTypeChangeEvent, imagesProperty, abstractListIdProperty } from '../../base/index';\nimport { SelectionCharacterFormat } from '../index';\nimport { PageLayoutViewer } from '../index';\nimport { WCharacterStyle, WStyles } from '../format/style';\nimport { HistoryInfo } from '../editor-history/index';\nimport { TableResizer } from './table-resizer';\nimport { Dictionary } from '../../base/dictionary';\nimport { WParagraphStyle } from '../format/style';\nimport { CONTROL_CHARACTERS } from '../../base/types';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { Revision } from '../track-changes/track-changes';\nimport { XmlHttpRequestHandler } from '../../base/ajax-helper';\nimport { beforeCommentActionEvent, trackChangeEvent, beforeXmlHttpRequestSend, internalStyleCollectionChange } from '../../base/index';\nimport { SectionBreakType } from '../../base/types';\nimport { sectionsProperty, commentsProperty, bidiProperty, revisionsProperty, lastParagraphMarkCopiedProperty, sectionFormatProperty, revisionIdProperty, contextualSpacingProperty, keepWithNextProperty, keepLinesTogetherProperty, widowControlProperty, outlineLevelProperty, numberFormatProperty, startAtProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, cellsProperty, rowsProperty, blocksProperty, listLevelPatternProperty, levelsProperty, stylesProperty, nameProperty } from '../../index';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { ChangesSingleView } from '../track-changes/track-changes-pane';\n/**\n * Editor module\n */\nvar Editor = /** @class */ (function () {\n    /**\n     * Initialize the editor module\n     *\n     * @param {DocumentHelper} documentHelper - Document helper\n     * @private\n     */\n    function Editor(documentHelper) {\n        var _this = this;\n        this.nodes = [];\n        this.editHyperlinkInternal = false;\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n        this.formFieldCounter = 1;\n        this.skipFieldDeleteTracking = false;\n        this.skipFootNoteDeleteTracking = false;\n        this.isForHyperlinkFormat = false;\n        this.isTrackingFormField = false;\n        this.isInsertText = false;\n        this.keywordIndex = 0;\n        this.casingIndex = -1;\n        this.checkLastLetterSpace = '';\n        this.checkLastLetterSpaceDot = '';\n        this.pasteFootNoteType = '';\n        /**\n        * @private\n        */\n        this.isCopying = false;\n        /**\n        * @private\n        */\n        this.isFootnoteElementRemoved = false;\n        /**\n        * @private\n        */\n        this.isEndnoteElementRemoved = false;\n        /**\n        * @private\n        */\n        this.handledEnter = false;\n        /**\n         * @private\n         */\n        this.removeEditRange = false;\n        /**\n         * @private\n         */\n        this.isRemoveRevision = false;\n        /**\n         * @private\n         */\n        this.isFootNoteInsert = false;\n        /**\n         * @private\n         */\n        this.isTableInsert = false;\n        /**\n         * @private\n         */\n        this.isFootNote = false;\n        /**\n         * @private\n         */\n        this.isHandledComplex = false;\n        /**\n         * @private\n         */\n        this.isUserInsert = false;\n        /**\n         * @private\n         */\n        this.tableResize = undefined;\n        /**\n         * @private\n         */\n        this.tocStyles = {};\n        /**\n         * @private\n         */\n        this.triggerPageSpellCheck = true;\n        /**\n         * @private\n         */\n        this.chartType = false;\n        /**\n         * @private\n         */\n        this.removedBookmarkElements = [];\n        /**\n         * @private\n         */\n        this.removedEditRangeStartElements = [];\n        /**\n         * @private\n         */\n        this.removedEditRangeEndElements = [];\n        /**\n         * @private\n         */\n        this.tocBookmarkId = 0;\n        /**\n         * @private\n         */\n        this.copiedData = undefined;\n        /**\n        * @private\n        */\n        this.isPasteContentCheck = false;\n        this.pageRefFields = {};\n        this.delBlockContinue = false;\n        this.delBlock = undefined;\n        this.delSection = undefined;\n        /**\n         * @private\n         */\n        this.isInsertingTOC = false;\n        this.editStartRangeCollection = [];\n        this.skipReplace = false;\n        this.skipTableElements = false;\n        this.editRangeID = [];\n        /**\n         * @private\n         */\n        this.isImageInsert = false;\n        /**\n         * @private\n         */\n        this.isSkipOperationsBuild = false;\n        /**\n         * @private\n         */\n        this.isCellFormatApplied = false;\n        /**\n         * @private\n         */\n        this.revisionData = undefined;\n        /**\n         * @private\n         */\n        this.splittedRevisions = [];\n        /**\n         * @private\n         */\n        this.isSkipComments = false;\n        /**\n         * @private\n         */\n        this.isRemoteAction = false;\n        /**\n         * @private\n         */\n        this.isIncrementalSave = false;\n        /**\n         * @private\n         */\n        this.listNumberFormat = '';\n        /**\n         * @private\n         */\n        this.listLevelNumber = 0;\n        /**\n         * @private\n         */\n        this.isXmlMapped = false;\n        this.isAutoList = false;\n        this.isLastParaMarkCopied = false;\n        this.combineLastBlock = false;\n        /**\n         * @private\n         */\n        this.remotePasteRevision = [];\n        /**\n         * @private\n         */\n        this.isFieldOperation = false;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        /**\n         * @private\n         */\n        this.copiedContent = '';\n        /**\n         * @private\n         */\n        this.copiedTextContent = '';\n        /**\n         * @private\n         */\n        this.previousParaFormat = undefined;\n        this.previousCharFormat = undefined;\n        this.previousSectionFormat = undefined;\n        this.pasteTextPosition = undefined;\n        //public isSkipHistory: boolean = false;\n        /**\n         * @private\n         */\n        this.isPaste = false;\n        /**\n         * @private\n         */\n        this.isPasteListUpdated = false;\n        /**\n         * @private\n         */\n        this.isHtmlPaste = false;\n        /**\n         * @private\n         */\n        this.isInsertField = false;\n        /**\n         * @private\n         */\n        this.isBordersAndShadingDialog = false;\n        /**\n         * @private\n        */\n        this.pasteImageIndex = undefined;\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onTextInputInternal = function () {\n            if (Browser.isDevice) {\n                var documentHelper = _this.documentHelper;\n                var nbsp = new RegExp(String.fromCharCode(160), 'g');\n                var lineFeed = new RegExp(String.fromCharCode(10), 'g');\n                documentHelper.prefix = documentHelper.prefix.replace(nbsp, ' ').replace(lineFeed, ' ');\n                var text = documentHelper.editableDiv.textContent.replace(nbsp, ' ').replace(lineFeed, ' ');\n                var textBoxText = text.substring(2);\n                if (documentHelper.isCompositionStart && documentHelper.isCompositionUpdated) {\n                    documentHelper.isCompositionUpdated = false;\n                    if (!documentHelper.owner.isReadOnlyMode && documentHelper.owner.isDocumentLoaded && _this.canEditContentControl) {\n                        if (documentHelper.prefix.substring(2) !== textBoxText) {\n                            if (_this.selection.isEmpty) {\n                                /* eslint-disable-next-line max-len */\n                                _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n                                _this.handleTextInput(textBoxText);\n                                documentHelper.prefix = '@' + String.fromCharCode(160) + textBoxText;\n                            }\n                            else {\n                                _this.handleTextInput(textBoxText);\n                                documentHelper.prefix = '@' + String.fromCharCode(160) + textBoxText;\n                            }\n                        }\n                    }\n                    return;\n                }\n                else if (documentHelper.isCompositionStart && documentHelper.isCompositionEnd && documentHelper.suffix === '') {\n                    if (documentHelper.prefix.substring(2) !== textBoxText) {\n                        if (_this.selection.isEmpty && documentHelper.isCompositionStart) {\n                            documentHelper.isCompositionStart = false;\n                            /* eslint-disable-next-line max-len */\n                            _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - documentHelper.prefix.substring(2).length);\n                            _this.selection.retrieveCurrentFormatProperties();\n                            if (documentHelper.suffix === '' || textBoxText === '') {\n                                _this.handleTextInput(textBoxText);\n                            }\n                        }\n                        else if (!_this.selection.isEmpty) {\n                            documentHelper.isCompositionStart = false;\n                            _this.handleTextInput(textBoxText);\n                        }\n                    }\n                    else if (textBoxText === '') {\n                        documentHelper.isCompositionStart = false;\n                        _this.handleBackKey();\n                    }\n                    else if (documentHelper.prefix.substring(2) === textBoxText && documentHelper.suffix === '') {\n                        documentHelper.isCompositionStart = false;\n                        _this.handleTextInput(' ');\n                    }\n                    documentHelper.isCompositionEnd = false;\n                    return;\n                }\n                else if (documentHelper.isCompositionEnd || documentHelper.isCompositionStart && !documentHelper.isCompositionUpdated) {\n                    if (textBoxText.length < documentHelper.prefix.length &&\n                        /* eslint-disable-next-line max-len */\n                        textBoxText === documentHelper.prefix.substring(2, documentHelper.prefix.length - 1) || documentHelper.editableDiv.innerText.length < 2) {\n                        _this.handleBackKey();\n                        return;\n                    }\n                    else if (documentHelper.suffix !== '' &&\n                        documentHelper.editableDiv.innerText[documentHelper.editableDiv.innerText.length - 1] !== String.fromCharCode(160)) {\n                        documentHelper.isCompositionStart = false;\n                        //When cursor is placed in between a word and chosen a word from predicted words.\n                        /* eslint-disable-next-line max-len */\n                        _this.selection.start.setPositionForLineWidget(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n                        /* eslint-disable-next-line max-len */\n                        _this.selection.end.setPositionForLineWidget(documentHelper.selection.end.currentWidget, _this.selection.end.offset + documentHelper.suffix.length);\n                        //Retrieve the character format properties. Since the selection was changed manually.\n                        _this.selection.retrieveCurrentFormatProperties();\n                        _this.handleTextInput(textBoxText);\n                        return;\n                    }\n                }\n                if (text !== '\\r' && text !== '\\b' && text !== String.fromCharCode(27) && !documentHelper.owner.isReadOnlyMode && documentHelper.isControlPressed === false && _this.canEditContentControl) {\n                    if (text === '@' || text[0] !== '@' || text === '' || text.length < documentHelper.prefix.length &&\n                        textBoxText === documentHelper.prefix.substring(2, documentHelper.prefix.length - 1)) {\n                        _this.handleBackKey();\n                        if (documentHelper.editableDiv.innerText.length < 2) {\n                            _this.predictText();\n                        }\n                    }\n                    else if (text.indexOf(documentHelper.prefix) === 0 && text.length > documentHelper.prefix.length) {\n                        _this.handleTextInput(text.substring(documentHelper.prefix.length));\n                    }\n                    else if (text.indexOf(documentHelper.prefix) === -1 && text[text.length - 1] !== String.fromCharCode(160)\n                        && text[text.length - 1] !== ' ') {\n                        if ((textBoxText.charAt(0).toLowerCase() + textBoxText.slice(1)) === documentHelper.prefix.substring(2)) {\n                            /* eslint-disable-next-line max-len */\n                            _this.selection.start.setPositionParagraph(documentHelper.selection.start.currentWidget, _this.selection.start.offset - (documentHelper.prefix.length - 2));\n                        }\n                        _this.handleTextInput(textBoxText);\n                    }\n                    else if (text.length !== 2) {\n                        _this.handleTextInput(' ');\n                    }\n                }\n            }\n            else {\n                var text = _this.documentHelper.editableDiv.innerText;\n                if (text !== String.fromCharCode(160)) {\n                    if (text !== '\\r' && text !== '\\b' && text !== String.fromCharCode(27) && !_this.owner.isReadOnlyMode && _this.documentHelper.isControlPressed === false && _this.canEditContentControl) {\n                        _this.handleTextInput(text);\n                    }\n                }\n                else {\n                    _this.handleTextInput(' ');\n                }\n                _this.documentHelper.editableDiv.innerText = '';\n            }\n        };\n        /**\n         * Fired on paste.\n         *\n         * @param {ClipboardEvent} event - Specfies clipboard event\n         * @private\n         * @returns {void}\n         */\n        this.onPaste = function (event) {\n            if (!_this.owner.isReadOnlyMode && _this.canEditContentControl) {\n                _this.pasteInternal(event);\n            }\n            event.preventDefault();\n        };\n        this.documentHelper = documentHelper;\n        if (!isNullOrUndefined(this.documentHelper)) {\n            this.tableResize = new TableResizer(this.documentHelper.owner);\n        }\n        this.base64 = new Base64();\n    }\n    Object.defineProperty(Editor.prototype, \"restrictFormatting\", {\n        /**\n         * @private\n         * @returns {boolean} - Returns the restrict formatting\n         */\n        get: function () {\n            return this.documentHelper.isDocumentProtected && (this.documentHelper.restrictFormatting\n                || (!this.documentHelper.restrictFormatting && !this.selection.isSelectionInEditRegion()))\n                && this.documentHelper.protectionType !== 'RevisionsOnly';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"restrictEditing\", {\n        /**\n         * @private\n         * @returns {boolean} - Returns the restrict editing\n         */\n        get: function () {\n            return this.documentHelper.isDocumentProtected && ((this.documentHelper.protectionType === 'ReadOnly' || this.documentHelper.isCommentOnlyMode)\n                && !this.selection.isSelectionInEditRegion() || this.documentHelper.protectionType === 'FormFieldsOnly');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"canEditContentControl\", {\n        /**\n         * @private\n         * @returns {boolean} - Returns the can edit content control.\n         */\n        get: function () {\n            if (this.owner.isReadOnlyMode) {\n                return false;\n            }\n            if (this.selection.checkContentControlLocked()) {\n                return false;\n            }\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"viewer\", {\n        get: function () {\n            if (!isNullOrUndefined(this.owner)) {\n                return this.owner.viewer;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"editorHistory\", {\n        get: function () {\n            return this.documentHelper.owner.editorHistoryModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"selection\", {\n        get: function () {\n            if (this.documentHelper) {\n                return this.documentHelper.selection;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"owner\", {\n        get: function () {\n            return this.documentHelper.owner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Editor.prototype.getModuleName = function () {\n        return 'Editor';\n    };\n    /**\n     * Sets the field information for the selected field.\n     *\n     * @param { FieldInfo } fieldInfo – Specifies the field information.\n     * @returns {void}\n     * > Nested field gets replaced completely with the specified field information.\n     */\n    Editor.prototype.setFieldInfo = function (fieldInfo) {\n        var field = this.selection.getHyperlinkField(true);\n        if (!isNullOrUndefined(field)) {\n            this.selection.selectField();\n            this.insertField(fieldInfo.code, fieldInfo.result);\n        }\n    };\n    /**\n     * Inserts the specified field at cursor position.\n     *\n     * @param {string} code Specify the field code.\n     * @param {string} result Specify the field result.\n     * @returns {void}\n     */\n    Editor.prototype.insertField = function (code, result) {\n        this.isInsertField = true;\n        var fieldCode = code;\n        fieldCode = HelperMethods.trimStart(fieldCode);\n        if (fieldCode.substring(0, 8) === 'NUMPAGES') {\n            this.insertPageCount(result);\n        }\n        else if (fieldCode.substring(0, 4) === 'PAGE') {\n            this.insertPageNumber(result);\n        }\n        else {\n            if (isNullOrUndefined(result)) {\n                if (fieldCode.substring(0, 10) === 'MERGEFIELD') {\n                    fieldCode = fieldCode.substring(10).trim();\n                    var index = fieldCode.indexOf('\\\\*');\n                    result = '«' + fieldCode.substring(0, index).trim() + '»';\n                }\n            }\n            var paragraph = new ParagraphWidget();\n            var insertFormat = new WCharacterFormat();\n            var selectionFormat = this.copyInsertFormat(insertFormat, false);\n            var line = new LineWidget(paragraph);\n            var fieldBegin = new FieldElementBox(0);\n            fieldBegin.characterFormat.mergeFormat(selectionFormat);\n            line.children.push(fieldBegin);\n            var fieldCodeSpan = new TextElementBox();\n            fieldCodeSpan.characterFormat.mergeFormat(selectionFormat);\n            fieldCodeSpan.text = code;\n            line.children.push(fieldCodeSpan);\n            var fieldSeparator = new FieldElementBox(2);\n            fieldSeparator.characterFormat.mergeFormat(selectionFormat);\n            fieldSeparator.fieldBegin = fieldBegin;\n            fieldBegin.fieldSeparator = fieldSeparator;\n            line.children.push(fieldSeparator);\n            var fieldResultSpan = new TextElementBox();\n            fieldResultSpan.text = result;\n            fieldResultSpan.characterFormat.mergeFormat(selectionFormat);\n            line.children.push(fieldResultSpan);\n            var fieldEnd = new FieldElementBox(1);\n            fieldEnd.characterFormat.mergeFormat(selectionFormat);\n            fieldEnd.fieldSeparator = fieldSeparator;\n            fieldEnd.fieldBegin = fieldBegin;\n            fieldBegin.fieldEnd = fieldEnd;\n            fieldSeparator.fieldEnd = fieldEnd;\n            line.children.push(fieldEnd);\n            fieldBegin.line = line;\n            paragraph.childWidgets.push(line);\n            paragraph.isCreatedUsingHtmlSpanTag = true;\n            this.documentHelper.fields.push(fieldBegin);\n            var section = new BodyWidget();\n            section.sectionFormat = new WSectionFormat(section);\n            section.childWidgets.push(paragraph);\n            this.pasteContentsInternal([section], false);\n        }\n        this.isInsertField = false;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.isLinkedStyle = function (styleName) {\n        var styleObj = this.documentHelper.styles.findByName(styleName);\n        return !isNullOrUndefined(styleObj.link);\n    };\n    /**\n     * Applies the specified style for paragraph.\n     *\n     * @param {string} style Specify the style name to apply.\n     * @param {boolean} clearDirectFormatting - Removes manual formatting (formatting not applied using a style)\n     * from the selected text, to match the formatting of the applied style. Default value is false.\n     * @returns {void}\n     */\n    Editor.prototype.applyStyle = function (style, clearDirectFormatting) {\n        clearDirectFormatting = isNullOrUndefined(clearDirectFormatting) ? false : clearDirectFormatting;\n        var startPosition = undefined;\n        var endPosition = undefined;\n        if (clearDirectFormatting) {\n            this.initComplexHistory('ApplyStyle');\n            this.setOffsetValue(this.selection);\n            startPosition = this.startOffset;\n            endPosition = this.endOffset;\n            var isSelectionEmpty = this.selection.isEmpty;\n            this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.clearFormattingInternal(!this.isLinkedStyle(style));\n            this.isSkipOperationsBuild = false;\n            if (isSelectionEmpty && !this.selection.isEmpty) {\n                this.selection.end.setPositionInternal(this.selection.start);\n            }\n        }\n        var styleObj = this.documentHelper.styles.findByName(style);\n        if (styleObj !== undefined) {\n            if (styleObj instanceof WCharacterStyle && styleObj.type === 'Character') {\n                if (this.selection.isEmpty) {\n                    var offset = this.selection.start.offset;\n                    var preservedStartPosition = this.selection.start.clone();\n                    var preservedEndPosition = this.selection.end.clone();\n                    this.selection.selectCurrentWord();\n                    if (offset === this.selection.start.offset || offset === this.selection.end.offset - 1) {\n                        this.selection.start = preservedStartPosition;\n                        this.selection.end = preservedEndPosition;\n                        this.selection.characterFormat.copyFormat(styleObj.characterFormat);\n                    }\n                    else {\n                        this.onApplyCharacterFormat('styleName', styleObj, false, true);\n                    }\n                }\n                else {\n                    this.onApplyCharacterFormat('styleName', styleObj, false, true);\n                }\n            }\n            else {\n                this.onApplyParagraphFormat('styleName', styleObj, false, true);\n            }\n        }\n        else {\n            /* eslint-disable-next-line max-len */\n            this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(style)), this.documentHelper.styles);\n            this.applyStyle(style);\n        }\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'ApplyStyle') {\n            this.startOffset = startPosition;\n            this.endOffset = endPosition;\n            this.editorHistory.updateComplexHistory();\n        }\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n    };\n    // Public Implementation Starts\n    /**\n     * Moves the selected content in the document editor control to clipboard.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.cut = function () {\n        if (this.owner.isReadOnlyMode || this.selection.isEmpty || !this.canEditContentControl) {\n            return;\n        }\n        this.selection.copySelectedContent(true);\n        this.documentHelper.owner.parser.isCutPerformed = true;\n    };\n    /**\n     * Inserts the editing region in the current selection range for the specified user.\n     *\n     * @param {string} user Specifies the native rendering\n     * @returns {void}\n     */\n    Editor.prototype.insertEditingRegion = function (user) {\n        this.insertEditRangeElement(user && user !== '' ? user : 'Everyone');\n    };\n    Editor.prototype.enforceProtection = function (credential, restrictFormatType, isReadOnly) {\n        var typeOfProtection;\n        var limitToFormatting;\n        if (typeof (restrictFormatType) === 'boolean') {\n            typeOfProtection = isReadOnly ? 'ReadOnly' : this.documentHelper.protectionType;\n            limitToFormatting = restrictFormatType;\n        }\n        else {\n            typeOfProtection = restrictFormatType;\n        }\n        if (!isNullOrUndefined(limitToFormatting)) {\n            this.documentHelper.restrictFormatting = limitToFormatting;\n        }\n        this.documentHelper.protectionType = typeOfProtection;\n        this.selection.isHighlightEditRegion = true;\n        this.addProtection(credential, this.documentHelper.protectionType, false);\n    };\n    Editor.prototype.enforceProtectionAsync = function (credential, restrictFormatType, isReadOnly) {\n        return __awaiter(this, void 0, void 0, function () {\n            var typeOfProtection, limitToFormatting;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof (restrictFormatType) === 'boolean') {\n                            typeOfProtection = isReadOnly ? 'ReadOnly' : this.documentHelper.protectionType;\n                            limitToFormatting = restrictFormatType;\n                        }\n                        else {\n                            limitToFormatting = true;\n                            typeOfProtection = restrictFormatType;\n                        }\n                        this.documentHelper.restrictFormatting = limitToFormatting;\n                        this.documentHelper.protectionType = typeOfProtection;\n                        this.selection.isHighlightEditRegion = true;\n                        return [4 /*yield*/, this.addProtection(credential, this.documentHelper.protectionType, true)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Editor.prototype.getCommentHierarchicalIndex = function (comment) {\n        var index = '';\n        while (comment.ownerComment) {\n            if (!isNullOrUndefined(comment.ownerComment)) {\n                index = comment.ownerComment.replyComments.indexOf(comment) + ';' + index;\n                comment = comment.ownerComment;\n            }\n            else {\n                index = comment.replyComments.indexOf(comment) + ';' + index;\n                comment = comment;\n            }\n        }\n        index = 'C;' + this.documentHelper.comments.indexOf(comment) + ';' + index;\n        return index;\n    };\n    Editor.prototype.alertBox = function () {\n        var localObj = new L10n('documenteditor', this.owner.defaultLocale);\n        localObj.setLocale(this.owner.locale);\n        DialogUtility.alert({\n            title: localObj.getConstant('Information'),\n            content: localObj.getConstant('Multiple Comment')\n        });\n    };\n    /**\n     * Inserts the comment.\n     *\n     * @param {string} text Specify the comment text to be inserted.\n     * @returns {void}\n     */\n    // Comment implementation starts\n    Editor.prototype.insertComment = function (text) {\n        if (isNullOrUndefined(this.selection.start) || (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) || this.viewer.owner.enableHeaderAndFooter\n            || !this.viewer.owner.enableComment) {\n            return;\n        }\n        if (this.viewer.owner.commentReviewPane.commentPane.isEditMode) {\n            return this.alertBox();\n        }\n        if (isNullOrUndefined(text)) {\n            text = '';\n        }\n        this.insertCommentInternal(text);\n    };\n    Editor.prototype.insertCommentInternal = function (text) {\n        this.documentHelper.layout.allowLayout = false;\n        if (this.selection.isEmpty) {\n            // If selection is at paragraph end, move selection to previous word similar to MS Word\n            if (this.selection.start.isAtSamePosition(this.selection.end) && this.selection.start.isAtParagraphEnd) {\n                var startOffset = this.selection.start.offset;\n                this.selection.start.offset = startOffset - 1 !== -1 ? startOffset - 1 : startOffset;\n            }\n            this.selection.selectCurrentWord();\n        }\n        // If paragraph mark selected, remove paragraph mark selection\n        if (this.selection.isParagraphLastLine(this.selection.end.currentWidget)\n            && this.selection.end.offset === this.selection.getLineLength(this.selection.end.currentWidget) + 1) {\n            this.selection.end.offset -= 1;\n        }\n        var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n        var startIndex = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n        var endParagraphInfo = this.selection.getParagraphInfo(this.selection.end);\n        var endIndex = this.selection.getHierarchicalIndex(endParagraphInfo.paragraph, endParagraphInfo.offset.toString());\n        this.initComplexHistory('InsertComment');\n        var startPosition = this.selection.start;\n        var endPosition = this.selection.end;\n        var position = new TextPosition(this.owner);\n        if (!this.selection.isForward) {\n            startPosition = this.selection.end;\n            endPosition = this.selection.start;\n        }\n        // Clones the end position.\n        position.setPositionInternal(endPosition);\n        var commentRangeStart = new CommentCharacterElementBox(0);\n        var commentRangeEnd = new CommentCharacterElementBox(1);\n        var isSameLine = startPosition.currentWidget === endPosition.currentWidget;\n        // Adds comment start at selection start position.\n        endPosition.setPositionInternal(startPosition);\n        var lineIndex = position.currentWidget.indexInOwner;\n        var paragraph = position.currentWidget.paragraph;\n        this.initInsertInline(commentRangeStart);\n        if (position.currentWidget.indexInOwner === -1) {\n            position.currentWidget = paragraph.childWidgets[lineIndex];\n        }\n        if (isNullOrUndefined(position.paragraph) ||\n            (position.currentWidget && position.currentWidget.children.length === 0 && position.currentWidget.indexInOwner === -1)) {\n            var endPos = this.selection.getTextPosBasedOnLogicalIndex(endIndex);\n            position.setPositionInternal(endPos);\n        }\n        // Updates the cloned position, since comment start is added in the same line.\n        if (isSameLine) {\n            position.setPositionParagraph(position.currentWidget, position.offset + commentRangeStart.length);\n        }\n        // Adds comment end and comment at selection end position.\n        startPosition.setPositionInternal(position);\n        endPosition.setPositionInternal(position);\n        this.initInsertInline(commentRangeEnd);\n        var commentAdv = new CommentElementBox(HelperMethods.getUtcDate());\n        if (this.owner.editorHistoryModule) {\n            this.initHistory('InsertCommentWidget');\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start + CONTROL_CHARACTERS.Marker_End;\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(commentAdv);\n        }\n        var markerData = {\n            author: this.owner.currentUser ? this.owner.currentUser : 'Guest user',\n            initial: this.constructCommentInitial(commentAdv.author),\n            text: SanitizeHtmlHelper.sanitize(text),\n            commentId: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n        };\n        this.updateCommentElement(commentAdv, commentRangeStart, commentRangeEnd, markerData);\n        this.addCommentWidget(commentAdv, true, true, true);\n        if (this.editorHistory) {\n            this.editorHistory.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(commentAdv);\n            this.editorHistory.updateHistory();\n        }\n        // this.selection.selectPosition(this.selection.getTextPosBasedOnLogicalIndex(startIndex), this.selection.getTextPosBasedOnLogicalIndex(endIndex));\n        if (this.editorHistory) {\n            this.editorHistory.updateComplexHistory();\n        }\n        this.reLayout(this.selection, false);\n        this.documentHelper.layout.allowLayout = true;\n        if (!this.isUserInsert) {\n            var comment = this.owner.commentReviewPane.commentPane.comments.get(commentAdv);\n            comment.postComment();\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.updateCommentElement = function (commentAdv, commentRangeStart, commentRangeEnd, markerData) {\n        commentAdv.author = markerData.author;\n        commentAdv.initial = markerData.initial;\n        commentAdv.text = markerData.text;\n        commentAdv.commentId = markerData.commentId;\n        if (!isNullOrUndefined(markerData.done)) {\n            commentAdv.isResolved = markerData.done;\n        }\n        if (!isNullOrUndefined(markerData.isReply)) {\n            commentAdv.isReply = markerData.isReply;\n        }\n        if (!isNullOrUndefined(commentRangeStart) && !isNullOrUndefined(commentRangeEnd)) {\n            commentRangeStart.comment = commentAdv;\n            commentRangeStart.commentId = commentAdv.commentId;\n            commentRangeEnd.comment = commentAdv;\n            commentRangeEnd.commentId = commentAdv.commentId;\n            commentAdv.commentStart = commentRangeStart;\n            commentAdv.commentEnd = commentRangeEnd;\n        }\n        return commentAdv;\n    };\n    /**\n     * Deletes all the comments in the current document.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.deleteAllComments = function () {\n        if (this.documentHelper.comments.length === 0) {\n            return;\n        }\n        // this.documentHelper.clearSearchHighlight();\n        this.initComplexHistory('DeleteAllComments');\n        this.owner.isLayoutEnabled = false;\n        var historyInfo;\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            historyInfo = this.editorHistory.currentHistoryInfo;\n        }\n        while (this.documentHelper.comments.length > 0) {\n            var comment = this.documentHelper.comments[0];\n            this.initComplexHistory('DeleteComment');\n            this.deleteCommentInternal(comment);\n            if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n                historyInfo.addModifiedAction(this.editorHistory.currentHistoryInfo);\n            }\n        }\n        this.selection.selectContent(this.owner.documentStart, true);\n        if (this.editorHistory) {\n            this.editorHistory.currentHistoryInfo = historyInfo;\n            this.editorHistory.updateComplexHistory();\n        }\n    };\n    /**\n     * Deletes the current selected comment.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.deleteComment = function () {\n        if ((this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) || isNullOrUndefined(this.owner) || isNullOrUndefined(this.owner.viewer)\n            || isNullOrUndefined(this.owner.documentHelper.currentSelectedComment) || this.owner.enableHeaderAndFooter\n            || !this.viewer.owner.enableComment) {\n            return;\n        }\n        this.deleteCommentInternal(this.owner.documentHelper.currentSelectedComment);\n    };\n    /**\n     * @param {CommentElementBox} comment - Specified the comment element box\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.deleteCommentInternal = function (comment) {\n        this.initComplexHistory('DeleteComment');\n        if (comment) {\n            if (comment.replyComments.length > 0) {\n                for (var i = comment.replyComments.length - 1; i >= 0; i--) {\n                    this.deleteCommentInternal(comment.replyComments[i]);\n                }\n            }\n            this.deleteCommentWidgetInternal(comment);\n            var commentStart = comment.commentStart;\n            var commentEnd = comment.commentEnd;\n            if (commentEnd.indexInOwner !== -1) {\n                this.removeInline(commentEnd);\n            }\n            if (commentStart.indexInOwner !== -1) {\n                this.removeInline(commentStart);\n            }\n            commentStart.removeCommentMark();\n        }\n        if (this.editorHistory) {\n            this.editorHistory.updateComplexHistory();\n        }\n    };\n    Editor.prototype.deleteCommentWidgetInternal = function (comment) {\n        if (this.owner.editorHistoryModule) {\n            this.initHistory('DeleteCommentWidget');\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(comment);\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(comment);\n        }\n        this.deleteCommentWidget(comment);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n    };\n    /**\n     * @param {CommentElementBox} comment - Specified the comment element box\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.deleteCommentWidget = function (comment) {\n        var commentIndex = this.documentHelper.comments.indexOf(comment);\n        if (commentIndex !== -1) {\n            this.documentHelper.comments.splice(commentIndex, 1);\n        }\n        else if (comment.isReply && comment.ownerComment) {\n            commentIndex = comment.ownerComment.replyComments.indexOf(comment);\n            comment.ownerComment.replyComments.splice(commentIndex, 1);\n        }\n        if (this.owner.commentReviewPane) {\n            this.owner.commentReviewPane.deleteComment(comment);\n            if (this.documentHelper.currentSelectedComment === comment) {\n                this.documentHelper.currentSelectedComment = undefined;\n            }\n        }\n    };\n    /**\n     * @param {CommentElementBox} comment - Specified the comment element box\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.resolveComment = function (comment) {\n        if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n            return;\n        }\n        var eventArgs = { author: comment.author, cancel: false, type: 'Resolve' };\n        this.owner.trigger(beforeCommentActionEvent, eventArgs);\n        if (eventArgs.cancel && eventArgs.type === 'Resolve') {\n            return;\n        }\n        this.initHistory('ResolveComment');\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.removedNodes.push(comment);\n        }\n        this.resolveOrReopenComment(comment, true);\n    };\n    /**\n     * @param {CommentElementBox} comment - Specified the comment element box\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.reopenComment = function (comment) {\n        if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n            return;\n        }\n        var eventArgs = { author: comment.author, cancel: false, type: 'Reopen' };\n        this.owner.trigger(beforeCommentActionEvent, eventArgs);\n        if (eventArgs.cancel && eventArgs.type === 'Reopen') {\n            return;\n        }\n        this.initHistory('ResolveComment');\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.removedNodes.push(comment);\n        }\n        this.resolveOrReopenComment(comment, false);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.resolveOrReopenComment = function (comment, resolve) {\n        comment.isResolved = resolve;\n        for (var i = 0; i < comment.replyComments.length; i++) {\n            comment.replyComments[i].isResolved = resolve;\n        }\n        if (this.owner.commentReviewPane) {\n            if (resolve) {\n                this.owner.commentReviewPane.resolveComment(comment);\n            }\n            else {\n                this.owner.commentReviewPane.reopenComment(comment);\n            }\n        }\n        this.reLayout(this.selection, false, false);\n    };\n    /**\n     * @param {CommentElementBox} parentComment - Specified the parent comment\n     * @param {string} text - Specified the text.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.replyComment = function (parentComment, text, mentions) {\n        if (this.owner.isReadOnlyMode && !this.documentHelper.isCommentOnlyMode) {\n            return;\n        }\n        var commentWidget = parentComment;\n        if (parentComment) {\n            this.initComplexHistory('InsertComment');\n            var currentCmtStart = commentWidget.commentStart;\n            var currentCmtEnd = commentWidget.commentEnd;\n            var replyCmtLength = commentWidget.replyComments.length;\n            var offset = currentCmtStart.line.getOffset(currentCmtStart, replyCmtLength + 1);\n            var startPosition = new TextPosition(this.documentHelper.owner);\n            startPosition.setPositionParagraph(currentCmtStart.line, offset);\n            var endOffset = currentCmtEnd.line.getOffset(currentCmtEnd, replyCmtLength + 1);\n            var endPosition = new TextPosition(this.documentHelper.owner);\n            endPosition.setPositionParagraph(currentCmtEnd.line, endOffset);\n            this.selection.start.setPositionInternal(startPosition);\n            this.selection.end.setPositionInternal(endPosition);\n            startPosition = this.selection.start;\n            endPosition = this.selection.end;\n            var position = new TextPosition(this.owner);\n            // Clones the end position.\n            position.setPositionInternal(endPosition);\n            var commentRangeStart = new CommentCharacterElementBox(0);\n            var commentRangeEnd = new CommentCharacterElementBox(1);\n            var isAtSameLine = startPosition.currentWidget === endPosition.currentWidget;\n            // Adds comment start at selection start position.\n            endPosition.setPositionInternal(startPosition);\n            var lineIndex = position.currentWidget.indexInOwner;\n            this.initInsertInline(commentRangeStart);\n            if (position.currentWidget.indexInOwner === -1) {\n                position.currentWidget = position.currentWidget.paragraph.childWidgets[lineIndex];\n            }\n            // Updates the cloned position, since comment start is added in the same paragraph.\n            if (isAtSameLine) {\n                position.setPositionParagraph(position.currentWidget, position.offset + commentRangeStart.length);\n            }\n            // Adds comment end and comment at selection end position.\n            startPosition.setPositionInternal(position);\n            endPosition.setPositionInternal(position);\n            this.initInsertInline(commentRangeEnd);\n            var replyComment = new CommentElementBox(HelperMethods.getUtcDate());\n            replyComment.author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n            replyComment.text = text ? text : '';\n            replyComment.mentions = mentions ? mentions : [];\n            replyComment.commentId = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n            replyComment.isReply = true;\n            commentWidget.replyComments.push(replyComment);\n            replyComment.ownerComment = commentWidget;\n            if (this.owner.editorHistoryModule) {\n                this.initHistory('InsertCommentWidget');\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.push(replyComment);\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start + CONTROL_CHARACTERS.Marker_End;\n            }\n            commentRangeStart.comment = replyComment;\n            commentRangeStart.commentId = replyComment.commentId;\n            commentRangeEnd.comment = replyComment;\n            commentRangeEnd.commentId = replyComment.commentId;\n            replyComment.commentStart = commentRangeStart;\n            replyComment.commentEnd = commentRangeEnd;\n            if (this.owner.commentReviewPane) {\n                this.owner.commentReviewPane.addReply(replyComment, false, true);\n            }\n            if (this.editorHistory) {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = this.getCommentHierarchicalIndex(replyComment);\n                this.editorHistory.updateHistory();\n            }\n            if (this.editorHistory) {\n                this.editorHistory.updateComplexHistory();\n            }\n            this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.reLayout(this.selection);\n            this.isSkipOperationsBuild = false;\n        }\n    };\n    Editor.prototype.removeInline = function (element) {\n        this.selection.start.setPositionParagraph(element.line, element.line.getOffset(element, 0));\n        this.selection.end.setPositionParagraph(this.selection.start.currentWidget, this.selection.start.offset + element.length);\n        this.initHistory('RemoveInline');\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.updateHistoryPosition(this.selection.start, true);\n        }\n        this.removeSelectedContents(this.documentHelper.selection);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.fireContentChange();\n    };\n    /**\n     * @param {CommentElementBox} commentWidget - Specifies the comment\n     * @param {boolean} isNewComment - Specifies is new comment\n     * @param {boolean} showComments - Specifies show comments\n     * @param {boolean} selectComment - Specified select comment\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.addCommentWidget = function (commentWidget, isNewComment, showComments, selectComment) {\n        if (this.documentHelper.comments.indexOf(commentWidget) === -1) {\n            var isInserted = false;\n            if (this.documentHelper.comments.length > 0) {\n                var currentStart = this.selection.getElementPosition(commentWidget.commentStart).startPosition;\n                for (var i = 0; i < this.documentHelper.comments.length; i++) {\n                    /* eslint-disable-next-line max-len */\n                    var paraIndex = this.selection.getElementPosition(this.documentHelper.comments[i].commentStart).startPosition;\n                    if (currentStart.isExistBefore(paraIndex)) {\n                        isInserted = true;\n                        this.documentHelper.comments.splice(i, 0, commentWidget);\n                        break;\n                    }\n                }\n            }\n            if (!isInserted) {\n                this.documentHelper.comments.push(commentWidget);\n            }\n            if (this.owner.commentReviewPane) {\n                this.owner.showComments = showComments;\n                this.owner.commentReviewPane.selectedTab = 0;\n                this.owner.commentReviewPane.addComment(commentWidget, isNewComment, selectComment);\n                this.owner.commentReviewPane.reviewTab.selectedItem = 0;\n                if (selectComment) {\n                    this.owner.selectionModule.selectComment(commentWidget);\n                }\n            }\n        }\n    };\n    /**\n     * @param {CommentElementBox} comment - Specifies comment element box\n     * @param {string} hierarchicalIndex - Specifies the hierachical index.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.addReplyComment = function (comment, hierarchicalIndex) {\n        var index = hierarchicalIndex.split(';');\n        var ownerComment = this.documentHelper.comments[parseInt(index[1], 10)];\n        if (index[2] !== '') {\n            ownerComment.replyComments.splice(parseInt(index[2], 10), 0, comment);\n            comment.ownerComment = ownerComment;\n        }\n        if (this.owner.commentReviewPane) {\n            this.owner.showComments = true;\n            this.owner.commentReviewPane.addReply(comment, false, true);\n            this.owner.selectionModule.selectComment(comment);\n        }\n    };\n    /**\n     * @param {string} password - Specifies the password\n     * @param {string} protectionType - Specifies the protection type\n     * @param {boolean} isAsync - specifies whether the send method is synchronous or asynchronous\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.addProtection = function (password, protectionType, isAsync) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        isAsync = isNullOrUndefined(isAsync) ? true : isAsync;\n                        if (password === '') {\n                            _this.protectDocument(protectionType);\n                            resolve();\n                        }\n                        else {\n                            _this.currentProtectionType = protectionType;\n                            var enforceProtectionHandler = new XmlHttpRequestHandler();\n                            var passwordBase64 = _this.base64.encodeString(password);\n                            /* eslint-disable @typescript-eslint/no-explicit-any */\n                            var formObject = {\n                                passwordBase64: passwordBase64,\n                                saltBase64: '',\n                                spinCount: 100000\n                            };\n                            /* eslint-enable @typescript-eslint/no-explicit-any */\n                            var url = _this.owner.serviceUrl + _this.owner.serverActionSettings.restrictEditing;\n                            enforceProtectionHandler.url = url;\n                            enforceProtectionHandler.contentType = 'application/json;charset=UTF-8';\n                            enforceProtectionHandler.onSuccess = function (result) {\n                                _this.enforceProtectionInternal(result);\n                                resolve();\n                            };\n                            enforceProtectionHandler.onFailure = function (result) {\n                                _this.protectionFailureHandler(result);\n                                reject();\n                            };\n                            enforceProtectionHandler.onError = function (result) {\n                                _this.protectionFailureHandler(result);\n                                reject();\n                            };\n                            enforceProtectionHandler.customHeaders = _this.owner.headers;\n                            var httprequestEventArgs = { serverActionType: 'RestrictEditing', headers: _this.owner.headers, timeout: 0, cancel: false, withCredentials: false };\n                            _this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n                            if (httprequestEventArgs.cancel) {\n                                if (_this.documentHelper.dialog.visible) {\n                                    _this.documentHelper.dialog.hide();\n                                }\n                            }\n                            else {\n                                enforceProtectionHandler.send(formObject, httprequestEventArgs, isAsync);\n                            }\n                        }\n                    })];\n            });\n        });\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.protectionFailureHandler = function (result) {\n        var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n        localeValue.setLocale(this.documentHelper.owner.locale);\n        if (result.name === 'onError') {\n            DialogUtility.alert(localeValue.getConstant('Error in establishing connection with web server'));\n        }\n        else {\n            this.owner.fireServiceFailure(result);\n            console.error(result.statusText);\n        }\n    };\n    Editor.prototype.enforceProtectionInternal = function (result) {\n        var data = JSON.parse(result.data);\n        this.enforceProtectionAssign(data[0], data[1], this.currentProtectionType);\n        this.owner.showHideRulers();\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.enforceProtectionAssign = function (saltValue, hashValue, protectionType) {\n        this.documentHelper.saltValue = saltValue;\n        this.documentHelper.hashValue = hashValue;\n        this.protectDocument(protectionType);\n    };\n    Editor.prototype.toggleTrackChangesProtection = function (enabled) {\n        this.viewer.owner.enableTrackChanges = enabled;\n        var eventArgs = { isTrackChangesEnabled: enabled };\n        this.owner.trigger(trackChangeEvent, eventArgs);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.protectDocument = function (protectionType) {\n        this.documentHelper.owner.getSettingData(\"protection\", null, this.documentHelper.hashValue, this.documentHelper.saltValue, protectionType);\n        this.protect(protectionType);\n        var restrictPane = this.documentHelper.restrictEditingPane.restrictPane;\n        if (restrictPane && restrictPane.style.display === 'block') {\n            this.documentHelper.restrictEditingPane.showStopProtectionPane(true);\n            this.documentHelper.restrictEditingPane.loadPaneValue();\n            this.documentHelper.dialog.hide();\n        }\n        this.owner.notify(protectionTypeChangeEvent, {});\n        if (protectionType === 'RevisionsOnly') {\n            this.toggleTrackChangesProtection(true);\n        }\n        this.owner.trackChangesPane.enableDisableButton(false);\n    };\n    /**\n     * Stops the document protection.\n     *\n     * @param {string} password Specify the password to stop protection.\n     * @returns {void}\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.stopProtection = function (password) {\n        if (this.documentHelper.isDocumentProtected) {\n            if ((!isNullOrUndefined(this.documentHelper.saltValue) && this.documentHelper.saltValue === '')\n                && (!isNullOrUndefined(this.documentHelper.hashValue) && this.documentHelper.hashValue === '')\n                && (!isNullOrUndefined(password) && password === '')) {\n                this.unProtectDocument();\n                return;\n            }\n            var unProtectDocumentHandler = new XmlHttpRequestHandler();\n            var passwordBase64 = this.base64.encodeString(password);\n            var formObject = {\n                passwordBase64: passwordBase64,\n                saltBase64: this.documentHelper.saltValue,\n                spinCount: 100000\n            };\n            unProtectDocumentHandler.url = this.owner.serviceUrl + this.owner.serverActionSettings.restrictEditing;\n            unProtectDocumentHandler.contentType = 'application/json;charset=UTF-8';\n            unProtectDocumentHandler.customHeaders = this.owner.headers;\n            unProtectDocumentHandler.onSuccess = this.onUnProtectionSuccess.bind(this);\n            unProtectDocumentHandler.onFailure = this.protectionFailureHandler.bind(this);\n            unProtectDocumentHandler.onError = this.protectionFailureHandler.bind(this);\n            var httprequestEventArgs = { serverActionType: 'RestrictEditing', headers: this.owner.headers, timeout: 0, cancel: false, withCredentials: false };\n            this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n            if (httprequestEventArgs.cancel) {\n                if (this.documentHelper.dialog.visible) {\n                    this.documentHelper.dialog.hide();\n                }\n            }\n            else {\n                unProtectDocumentHandler.send(formObject, httprequestEventArgs, false);\n            }\n            if (!this.owner.enableTrackChanges) {\n                this.toggleTrackChangesProtection(false);\n            }\n        }\n    };\n    /**\n     * Stops the document protection.\n     *\n     * @param {string} password Specify the password to stop protection.\n     * @returns {Promise} Returns a Promise which is resolved when protection is stopped, or rejected if for any reason protection cannot be stopped.\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.stopProtectionAsync = function (password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        if (_this.documentHelper.isDocumentProtected) {\n                            if ((!isNullOrUndefined(_this.documentHelper.saltValue) && _this.documentHelper.saltValue === '')\n                                && (!isNullOrUndefined(_this.documentHelper.hashValue) && _this.documentHelper.hashValue === '')\n                                && (!isNullOrUndefined(password) && password === '')) {\n                                _this.unProtectDocument();\n                                resolve();\n                                return;\n                            }\n                            var unProtectDocumentHandler = new XmlHttpRequestHandler();\n                            var passwordBase64 = _this.base64.encodeString(password);\n                            var formObject = {\n                                passwordBase64: passwordBase64,\n                                saltBase64: _this.documentHelper.saltValue,\n                                spinCount: 100000\n                            };\n                            unProtectDocumentHandler.url = _this.owner.serviceUrl + _this.owner.serverActionSettings.restrictEditing;\n                            unProtectDocumentHandler.contentType = 'application/json;charset=UTF-8';\n                            unProtectDocumentHandler.customHeaders = _this.owner.headers;\n                            unProtectDocumentHandler.onSuccess = function (result) {\n                                _this.onUnProtectionSuccess(result);\n                                resolve();\n                            };\n                            unProtectDocumentHandler.onFailure = function (result) {\n                                _this.protectionFailureHandler(result);\n                                reject();\n                            };\n                            unProtectDocumentHandler.onError = function (result) {\n                                _this.protectionFailureHandler(result);\n                                reject();\n                            };\n                            var httprequestEventArgs = { serverActionType: 'RestrictEditing', headers: _this.owner.headers, timeout: 0, cancel: false, withCredentials: false };\n                            _this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n                            if (httprequestEventArgs.cancel) {\n                                if (_this.documentHelper.dialog.visible) {\n                                    _this.documentHelper.dialog.hide();\n                                }\n                            }\n                            else {\n                                unProtectDocumentHandler.send(formObject, httprequestEventArgs);\n                            }\n                            if (!_this.owner.enableTrackChanges) {\n                                _this.toggleTrackChangesProtection(false);\n                            }\n                        }\n                    })];\n            });\n        });\n    };\n    Editor.prototype.onUnProtectionSuccess = function (result) {\n        var encodeString = JSON.parse(result.data);\n        this.validateHashValue(encodeString[1]);\n        this.owner.showHideRulers();\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.validateHashValue = function (currentHashValue) {\n        this.currentHashValue = currentHashValue;\n        var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n        localeValue.setLocale(this.documentHelper.owner.locale);\n        var decodeUserHashValue = this.base64.decodeString(currentHashValue);\n        var documentHashValue = this.documentHelper.hashValue;\n        var defaultHashValue = this.base64.decodeString(documentHashValue);\n        var stopProtection = true;\n        if (decodeUserHashValue.length === defaultHashValue.length) {\n            for (var i = 0; i < decodeUserHashValue.length; i++) {\n                if (decodeUserHashValue[i] !== defaultHashValue[i]) {\n                    stopProtection = false;\n                    break;\n                }\n            }\n        }\n        else {\n            stopProtection = false;\n        }\n        if (stopProtection) {\n            this.unProtectDocument();\n        }\n        else {\n            DialogUtility.alert(localeValue.getConstant('The password is incorrect'));\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.unProtectDocument = function () {\n        this.documentHelper.owner.getSettingData('protection', false, this.currentHashValue);\n        this.currentHashValue = null;\n        var previousProtectionType = this.documentHelper.protectionType;\n        this.documentHelper.isDocumentProtected = false;\n        this.documentHelper.restrictFormatting = false;\n        this.documentHelper.protectionType = 'NoProtection';\n        this.documentHelper.saltValue = '';\n        this.documentHelper.hashValue = '';\n        this.documentHelper.selection.highlightEditRegion();\n        var restrictPane = this.documentHelper.restrictEditingPane.restrictPane;\n        if (restrictPane && restrictPane.style.display === 'block') {\n            this.documentHelper.restrictEditingPane.showStopProtectionPane(false);\n        }\n        if (previousProtectionType === 'RevisionsOnly' && !this.owner.enableTrackChanges) {\n            this.toggleTrackChangesProtection(false);\n        }\n        this.owner.trackChangesPane.enableDisableButton(true);\n        if (!isNullOrUndefined(this.editorHistory)) {\n            this.owner.editorHistoryModule.clearHistory();\n        }\n        this.owner.notify(protectionTypeChangeEvent, {});\n        this.documentHelper.dialog.hide();\n        this.owner.showHideRulers();\n    };\n    /**\n     * Notify content change event\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.fireContentChange = function () {\n        this.owner.documentHelper.render.commentMarkDictionary.clear();\n        if (this.selection.isHighlightEditRegion) {\n            if (this.owner.enableLockAndEdit) {\n                this.owner.collaborativeEditingModule.updateLockRegion();\n            }\n            else {\n                this.selection.onHighlight();\n            }\n        }\n        this.selection.highlightFormFields();\n        if (!this.isPaste) {\n            this.copiedContent = undefined;\n            this.copiedTextContent = '';\n            this.previousSectionFormat = undefined;\n            this.previousParaFormat = undefined;\n            this.previousCharFormat = undefined;\n            this.selection.isViewPasteOptions = false;\n            if (this.isPasteListUpdated) {\n                this.isPasteListUpdated = false;\n            }\n            this.selection.showHidePasteOptions(undefined, undefined);\n        }\n        if (this.documentHelper.owner.isLayoutEnabled && !this.documentHelper.owner.editorModule.isUserInsert && !this.documentHelper.owner.isShiftingEnabled && !this.isSkipOperationsBuild && !this.isRemoteAction) {\n            this.documentHelper.owner.fireContentChange();\n        }\n        if (this.owner.isSpellCheck && !isNullOrUndefined(this.selection.editPosition)) {\n            this.triggerPageSpellCheck = false;\n        }\n    };\n    /**\n     * Update physical location for text position\n     *\n     * @param {boolean} isSelectionChanged - Specifies the selection change\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateSelectionTextPosition = function (isSelectionChanged) {\n        this.getOffsetValue(this.selection);\n        this.selection.start.updatePhysicalPosition(true);\n        if (this.selection.isEmpty) {\n            this.selection.end.setPositionInternal(this.selection.start);\n        }\n        else {\n            this.selection.end.updatePhysicalPosition(true);\n        }\n        this.selection.upDownSelectionLength = this.selection.end.location.x;\n        this.selection.fireSelectionChanged(isSelectionChanged);\n    };\n    /**\n     * Predict text\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.predictText = function () {\n        this.documentHelper.suffix = '';\n        if (this.selection.start.paragraph.isEmpty() || this.selection.start.offset === 0 &&\n            this.selection.start.currentWidget.isFirstLine() || this.selection.end.offset === 0 &&\n            this.selection.end.currentWidget.isFirstLine()) {\n            this.documentHelper.prefix = '';\n        }\n        else {\n            this.getPrefixAndSuffix();\n        }\n        this.documentHelper.prefix = '@' + String.fromCharCode(160) + this.documentHelper.prefix; // &nbsp;\n        this.documentHelper.editableDiv.innerText = this.documentHelper.prefix;\n        this.documentHelper.selection.setEditableDivCaretPosition(this.documentHelper.prefix.length);\n    };\n    /* eslint-disable  */\n    Editor.prototype.getPrefixAndSuffix = function () {\n        //let viewer: LayoutViewer = this.owner.viewer;\n        var editor = this.owner;\n        var documentHelper = editor.documentHelper;\n        if (this.selection.text !== '') {\n            documentHelper.prefix = '';\n            return;\n        }\n        else {\n            var startIndex = 0;\n            var inlineInfo = this.selection.start.currentWidget.getInline(this.selection.start.offset, startIndex);\n            var inline = inlineInfo.element;\n            startIndex = inlineInfo.index;\n            if (inline !== undefined) {\n                var boxInfo = this.selection.getElementBoxInternal(inline, startIndex);\n                var box = boxInfo.element;\n                startIndex = boxInfo.index;\n                var spaceIndex = 0;\n                if (!isNullOrUndefined(box)) {\n                    var prefixAdded = false;\n                    if (box instanceof TextElementBox && startIndex > 0 && box.line.isFirstLine()) {\n                        documentHelper.prefix = '';\n                    }\n                    if (!(inline instanceof TextElementBox)) {\n                        inline = this.selection.getPreviousTextElement(inline);\n                    }\n                    /* eslint-disable no-cond-assign */\n                    while ((spaceIndex = documentHelper.prefix.lastIndexOf(' ')) < 0 && inline instanceof TextElementBox) {\n                        if (inline.previousNode instanceof TextElementBox && documentHelper.prefix.indexOf(' ') === -1) {\n                            if (!prefixAdded) {\n                                documentHelper.prefix = inline.text.substring(0, startIndex);\n                                prefixAdded = true;\n                            }\n                            else {\n                                documentHelper.prefix = inline.text + documentHelper.prefix;\n                            }\n                            inline = inline.previousNode;\n                            // If the line has no elements then break the loop to avoid the exception.\n                            if (inline instanceof ListTextElementBox) {\n                                break;\n                            }\n                            if (!(inline instanceof TextElementBox)) {\n                                inline = this.selection.getPreviousTextElement(inline);\n                            }\n                        }\n                        else if (!(inline.previousNode instanceof TextElementBox)) {\n                            if (!prefixAdded) {\n                                documentHelper.prefix = inline.text.substring(0, startIndex);\n                                prefixAdded = true;\n                            }\n                            else {\n                                documentHelper.prefix = inline.text + documentHelper.prefix;\n                            }\n                            break;\n                        }\n                    }\n                    if (!(documentHelper.prefix.length > 1 && documentHelper.prefix[documentHelper.prefix.length - 1] === ' ' &&\n                        documentHelper.prefix[documentHelper.prefix.length - 2] === '.')) {\n                        spaceIndex = documentHelper.prefix.lastIndexOf(' ');\n                    }\n                    else {\n                        spaceIndex = -1;\n                        documentHelper.prefix = '';\n                    }\n                    documentHelper.prefix = spaceIndex < 0 ? documentHelper.prefix : documentHelper.prefix.substring(spaceIndex);\n                    if (documentHelper.prefix.indexOf(' ') === 0 && documentHelper.prefix.length >= 1) {\n                        documentHelper.prefix = documentHelper.prefix.substring(1);\n                    }\n                    // suffix text prediction\n                    var endIndex = 0;\n                    var endInlineInfo = this.selection.end.currentWidget.getInline(this.selection.end.offset, endIndex);\n                    var endInline = endInlineInfo.element;\n                    endIndex = endInlineInfo.index;\n                    boxInfo = this.selection.getElementBoxInternal(endInline, endIndex);\n                    box = boxInfo.element;\n                    endIndex = boxInfo.index;\n                    if (box) {\n                        var suffixAdded = false;\n                        if (box instanceof TextElementBox && endIndex < box.length) {\n                            documentHelper.suffix = '';\n                        }\n                        // boxIndex = renderedElements.get(endInline).indexOf(box);\n                        while ((spaceIndex = documentHelper.suffix.indexOf(' ')) < 0 && endInline instanceof TextElementBox) {\n                            if (endInline.nextNode instanceof TextElementBox && documentHelper.suffix.indexOf(' ') === -1) {\n                                if (!suffixAdded) {\n                                    documentHelper.suffix = box.text.substring(endIndex);\n                                    suffixAdded = true;\n                                }\n                                else {\n                                    documentHelper.suffix = documentHelper.suffix + endInline.text;\n                                }\n                                endInline = endInline.nextNode;\n                            }\n                            else if (!(endInline.nextNode instanceof TextElementBox)) {\n                                if (!suffixAdded) {\n                                    documentHelper.suffix = box.text.substring(endIndex);\n                                    suffixAdded = true;\n                                }\n                                else {\n                                    documentHelper.suffix = documentHelper.suffix + endInline.text;\n                                }\n                                break;\n                            }\n                        }\n                        spaceIndex = documentHelper.suffix.indexOf(' ');\n                        documentHelper.suffix = spaceIndex < 0 ? documentHelper.suffix : documentHelper.suffix.substring(0, spaceIndex);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * key action\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    Editor.prototype.onKeyDownInternal = function (event, ctrl, shift, alt) {\n        var key = event.which || event.keyCode;\n        this.owner.focusIn();\n        if (ctrl && !shift && !alt) {\n            this.documentHelper.isControlPressed = true;\n            switch (key) {\n                case 8:\n                    event.preventDefault();\n                    this.handleCtrlBackKey();\n                    break;\n                case 46:\n                    event.preventDefault();\n                    this.handleCtrlDelete();\n                    break;\n                case 9:\n                    event.preventDefault();\n                    if (this.owner.acceptTab) {\n                        this.selection.handleTabKey(false, false);\n                    }\n                    break;\n                case 13:\n                    event.preventDefault();\n                    this.insertPageBreak();\n                    break;\n                case 48:\n                    event.preventDefault();\n                    var value = 0;\n                    var beforeSpacing = this.documentHelper.selection.start.paragraph.paragraphFormat.beforeSpacing;\n                    if (beforeSpacing > 12) {\n                        value = 12;\n                    }\n                    else if (beforeSpacing > 0 && beforeSpacing <= 12) {\n                        value = 0;\n                    }\n                    else if (beforeSpacing === 0) {\n                        value = 12;\n                    }\n                    this.onApplyParagraphFormat('beforeSpacing', value, true, false);\n                    break;\n                case 49:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.onApplyParagraphFormat('lineSpacing', 1, false, false);\n                    }\n                    break;\n                case 50:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.onApplyParagraphFormat('lineSpacing', 2, false, false);\n                    }\n                    break;\n                case 53:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.onApplyParagraphFormat('lineSpacing', 1.5, false, false);\n                    }\n                    break;\n                case 66:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleBold();\n                    }\n                    break;\n                case 68:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode && this.owner.fontDialogModule) {\n                        this.owner.fontDialogModule.showFontDialog();\n                    }\n                    break;\n                case 69:\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleTextAlignment('Center');\n                    }\n                    event.preventDefault();\n                    break;\n                case 72:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnly && this.owner.optionsPaneModule) {\n                        this.owner.optionsPaneModule.isReplace = true;\n                        this.owner.documentEditorSettings.showNavigationPane = true;\n                        this.owner.optionsPaneModule.showHideOptionsPane(true);\n                    }\n                    break;\n                case 73:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleItalic();\n                    }\n                    break;\n                case 74:\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleTextAlignment('Justify');\n                    }\n                    event.preventDefault();\n                    break;\n                case 75:\n                    event.preventDefault();\n                    if (this.owner.hyperlinkDialogModule && !this.owner.isReadOnlyMode) {\n                        this.owner.hyperlinkDialogModule.show();\n                    }\n                    break;\n                case 76:\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleTextAlignment('Left');\n                    }\n                    event.preventDefault();\n                    break;\n                case 77:\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.owner.selectionModule.increaseIndent();\n                    }\n                    event.preventDefault();\n                    break;\n                case 78:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        this.owner.openBlank();\n                    }\n                    break;\n                case 82:\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleTextAlignment('Right');\n                    }\n                    event.preventDefault();\n                    break;\n                case 85:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.owner.selectionModule.toggleUnderline('Single');\n                    }\n                    break;\n                case 88:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        this.owner.editorModule.cut();\n                    }\n                    break;\n                case 89:\n                    if (this.owner.enableEditorHistory) {\n                        this.editorHistory.redo();\n                        event.preventDefault();\n                    }\n                    break;\n                case 90:\n                    if (this.owner.enableEditorHistory) {\n                        this.editorHistory.undo();\n                        event.preventDefault();\n                    }\n                    break;\n                case 219:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.onApplyCharacterFormat('fontSize', 'decrement', true);\n                    }\n                    break;\n                case 221:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.onApplyCharacterFormat('fontSize', 'increment', true);\n                    }\n                    break;\n                case 187:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n                        this.toggleBaselineAlignment('Subscript');\n                    }\n                    break;\n            }\n        }\n        else if (shift && !ctrl && !alt) {\n            switch (key) {\n                case 9:\n                    if (this.owner.acceptTab) {\n                        event.preventDefault();\n                        this.selection.handleTabKey(false, true);\n                    }\n                    else {\n                        this.documentHelper.editableDiv.blur();\n                    }\n                    break;\n                case 13:\n                    this.handleShiftEnter();\n                    event.preventDefault();\n                    break;\n                case 114:\n                    event.preventDefault();\n                    this.changeCase(this.toggleChangeCase());\n                    break;\n            }\n        }\n        else if (shift && ctrl && !alt) {\n            switch (key) {\n                case 13:\n                    if (!this.owner.isReadOnlyMode) {\n                        event.preventDefault();\n                        this.insertColumnBreak();\n                    }\n                    break;\n                case 68:\n                    if (!this.owner.isReadOnlyMode) {\n                        this.owner.selectionModule.toggleUnderline('Double');\n                    }\n                    break;\n                case 77:\n                    if (!this.owner.isReadOnlyMode) {\n                        this.owner.selectionModule.decreaseIndent();\n                    }\n                    event.preventDefault();\n                    break;\n                case 188:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        this.onApplyCharacterFormat('fontSize', 'decrement', true);\n                    }\n                    break;\n                case 190:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        this.onApplyCharacterFormat('fontSize', 'increment', true);\n                    }\n                    break;\n                case 187:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        this.toggleBaselineAlignment('Superscript');\n                    }\n                    break;\n                case 69:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode) {\n                        var eventArgs = { isTrackChangesEnabled: !this.owner.enableTrackChanges };\n                        this.owner.trigger(trackChangeEvent, eventArgs);\n                    }\n            }\n        }\n        else if (!shift && ctrl && alt) {\n            switch (key) {\n                case 72:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n                        this.toggleHighlightColor();\n                    }\n                    break;\n                case 70:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n                        this.insertFootnote();\n                    }\n                    break;\n                case 68:\n                    event.preventDefault();\n                    if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded) {\n                        this.insertEndnote();\n                    }\n                    break;\n            }\n        }\n        else {\n            switch (key) {\n                case 8:\n                    event.preventDefault();\n                    this.handleBackKey();\n                    break;\n                case 9:\n                    if (this.owner.acceptTab) {\n                        event.preventDefault();\n                        this.selection.handleTabKey(true, false);\n                    }\n                    else {\n                        this.documentHelper.editableDiv.blur();\n                    }\n                    break;\n                case 13:\n                    event.preventDefault();\n                    if (this.owner.isSpellCheck) {\n                        this.documentHelper.triggerSpellCheck = true;\n                    }\n                    this.handleEnterKey();\n                    if (this.owner.isSpellCheck) {\n                        this.documentHelper.triggerSpellCheck = false;\n                    }\n                    break;\n                case 27:\n                    event.preventDefault();\n                    if (!this.isPaste) {\n                        this.copiedContent = undefined;\n                        this.copiedTextContent = '';\n                        this.previousParaFormat = undefined;\n                        this.previousCharFormat = undefined;\n                        this.previousSectionFormat = undefined;\n                        this.selection.isViewPasteOptions = false;\n                        if (this.isPasteListUpdated) {\n                            this.isPasteListUpdated = false;\n                        }\n                        this.selection.showHidePasteOptions(undefined, undefined);\n                    }\n                    break;\n                case 46:\n                    this.handleDelete();\n                    event.preventDefault();\n                    break;\n                case 32:\n                    this.selection.handleSpaceBarKey();\n                    break;\n                case 120:\n                    var textPosition = this.selection.getDocumentEnd();\n                    textPosition.offset = (this.selection.getDocumentEnd().offset + 1);\n                    if (this.selection.start.isAtSamePosition(this.selection.getDocumentStart()) &&\n                        this.selection.end.isAtSamePosition(textPosition)) {\n                        this.owner.updateFields();\n                    }\n                    else {\n                        this.selection.updateRefField();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleShiftEnter = function () {\n        if (!this.owner.isReadOnlyMode) {\n            this.handleTextInput('\\v');\n        }\n        this.selection.checkForCursorVisibility();\n    };\n    /**\n     * Handles back key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleBackKey = function () {\n        if ((!this.owner.isReadOnlyMode && this.canEditContentControl) || this.selection.isInlineFormFillMode()) {\n            this.owner.editorModule.onBackSpace();\n        }\n        this.selection.checkForCursorVisibility();\n    };\n    /**\n     * Handles delete\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleDelete = function () {\n        if ((!this.owner.isReadOnlyMode && this.canEditContentControl) || this.selection.isInlineFormFillMode()) {\n            this.owner.editorModule.delete();\n        }\n        this.selection.checkForCursorVisibility();\n    };\n    /**\n     * Handles enter key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleEnterKey = function () {\n        if ((!this.owner.isReadOnlyMode && this.canEditContentControl) || this.selection.isInlineFormFillMode()) {\n            if (Browser.isDevice) {\n                this.documentHelper.isCompositionStart = false;\n            }\n            this.owner.editorModule.onEnter();\n        }\n        this.selection.checkForCursorVisibility();\n    };\n    /**\n     * Handles Control back key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleCtrlBackKey = function () {\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            if (!this.selection.isForward) {\n                start = end;\n            }\n            if (this.selection.isEmpty) {\n                this.selection.handleControlShiftLeftKey();\n                this.owner.editorModule.onBackSpace();\n                /* eslint-disable max-len */\n            }\n            else if (((isNullOrUndefined(start.paragraph.previousRenderedWidget) || start.paragraph.previousRenderedWidget instanceof TableWidget)\n                && start.offset === 0)) {\n                return;\n            }\n            else {\n                this.selection.handleLeftKey();\n                this.selection.handleControlShiftLeftKey();\n                this.owner.editorModule.onBackSpace();\n            }\n        }\n    };\n    /**\n     * Handles Ctrl delete\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleCtrlDelete = function () {\n        if ((!this.owner.isReadOnlyMode && this.canEditContentControl) || this.selection.isInlineFormFillMode()) {\n            if (!this.selection.isEmpty) {\n                this.selection.handleLeftKey();\n                this.selection.handleControlShiftRightKey();\n                var selectedText = this.selection.text;\n                var checkSpace = HelperMethods.endsWith(selectedText);\n                if (checkSpace) {\n                    this.selection.handleShiftLeftKey();\n                }\n                this.owner.editorModule.delete();\n            }\n            else {\n                this.selection.handleControlShiftRightKey();\n                this.owner.editorModule.delete();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleTextInput = function (text) {\n        var _this = this;\n        if (!this.owner.isReadOnlyMode && this.canEditContentControl || this.selection.isInlineFormFillMode()) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            classList(this.selection.caret, [], ['e-de-cursor-animation']);\n            this.owner.editorModule.insertText(text);\n            /* eslint-disable @typescript-eslint/indent */\n            this.animationTimer = setTimeout(function () {\n                if (_this.animationTimer) {\n                    clearTimeout(_this.animationTimer);\n                }\n                if (_this.selection && _this.selection.caret) {\n                    classList(_this.selection.caret, ['e-de-cursor-animation'], []);\n                }\n            }, 600);\n        }\n        this.selection.checkForCursorVisibility();\n    };\n    /**\n     * Copies to format.\n     * @param {WCharacterFormat} format\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.copyInsertFormat = function (format, copy) {\n        var insertFormat = new WCharacterFormat();\n        var sFormat = this.selection.characterFormat;\n        if (copy) {\n            insertFormat.copyFormat(format);\n        }\n        if (!isNullOrUndefined(sFormat.bidi) && format.bidi !== sFormat.bidi) {\n            insertFormat.bidi = sFormat.bidi;\n        }\n        if (!isNullOrUndefined(sFormat.bold) && format.bold !== sFormat.bold) {\n            insertFormat.bold = sFormat.bold;\n        }\n        if (!isNullOrUndefined(sFormat.italic) && format.italic !== sFormat.italic) {\n            insertFormat.italic = sFormat.italic;\n        }\n        if (sFormat.fontSize > 0 && format.fontSize !== sFormat.fontSize) {\n            insertFormat.fontSize = sFormat.fontSize;\n        }\n        if (!isNullOrUndefined(sFormat.fontFamily) && format.fontFamily !== sFormat.fontFamily) {\n            insertFormat.fontFamily = sFormat.fontFamily;\n        }\n        if (!isNullOrUndefined(sFormat.highlightColor) && format.highlightColor !== sFormat.highlightColor) {\n            insertFormat.highlightColor = sFormat.highlightColor;\n        }\n        if (!isNullOrUndefined(sFormat.baselineAlignment) && format.baselineAlignment !== sFormat.baselineAlignment) {\n            insertFormat.baselineAlignment = sFormat.baselineAlignment;\n        }\n        if (!isNullOrUndefined(sFormat.fontColor) && format.fontColor !== sFormat.fontColor) {\n            insertFormat.fontColor = sFormat.fontColor;\n        }\n        if (!isNullOrUndefined(sFormat.underline) && format.underline !== sFormat.underline) {\n            insertFormat.underline = sFormat.underline;\n        }\n        if (!isNullOrUndefined(sFormat.strikethrough) && format.strikethrough !== sFormat.strikethrough) {\n            insertFormat.strikethrough = sFormat.strikethrough;\n        }\n        return insertFormat;\n    };\n    Editor.prototype.getResultContentControlText = function (element) {\n        var ele = element.nextNode;\n        var text = '';\n        while (!(ele instanceof ContentControl)) {\n            if (ele instanceof TextElementBox) {\n                text += ele.text;\n            }\n            if (isNullOrUndefined(ele)) {\n                break;\n            }\n            if (isNullOrUndefined(ele.nextNode)) {\n                if (ele.paragraph.nextRenderedWidget) {\n                    ele = ele.paragraph.nextRenderedWidget.firstChild.children[0];\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                ele = ele.nextNode;\n            }\n        }\n        return text;\n    };\n    Editor.prototype.updateXmlMappedContentControl = function () {\n        if (this.isXmlMapped) {\n            var startInlineEle = this.getContentControl();\n            if (startInlineEle && startInlineEle.contentControlProperties) {\n                this.updateCustomXml(startInlineEle.contentControlProperties.xmlMapping.storeItemId, startInlineEle.contentControlProperties.xmlMapping.xPath, this.getResultContentControlText(startInlineEle));\n            }\n        }\n    };\n    Editor.prototype.updateCustomXml = function (itemId, xPath, text) {\n        if (this.documentHelper.customXmlData.containsKey(itemId)) {\n            var xml = this.documentHelper.customXmlData.get(itemId);\n            var parser = new DOMParser();\n            var xmlDoc = parser.parseFromString(xml, 'text/xml');\n            var lastText = xPath.substring(xPath.lastIndexOf('/') + 1);\n            lastText = lastText.split('[')[0];\n            lastText = lastText.substring(lastText.lastIndexOf(':') + 1);\n            lastText = lastText.substring(lastText.lastIndexOf('@') + 1);\n            var htmlCollec = xmlDoc.getElementsByTagName(lastText);\n            if (htmlCollec.length > 0) {\n                htmlCollec[0].childNodes[0].nodeValue = text;\n            }\n            else if (xmlDoc.documentElement.attributes.length > 0 && xmlDoc.documentElement.attributes.getNamedItem(lastText) !== null) {\n                xmlDoc.documentElement.attributes.getNamedItem(lastText).value = text;\n            }\n            else {\n                return;\n            }\n            var newXml = new XMLSerializer();\n            var xmlString = newXml.serializeToString(xmlDoc);\n            this.documentHelper.customXmlData.set(itemId, xmlString);\n        }\n    };\n    /**\n     * Inserts the specified text at cursor position\n     * @param {string} text Specify the text to insert.\n     */\n    Editor.prototype.insertText = function (text) {\n        if (isNullOrUndefined(text) || text === ''\n            || this.owner.isReadOnly\n            || this.documentHelper.protectionType === 'ReadOnly' && !this.selection.isSelectionInEditRegion()\n            || this.documentHelper.protectionType === 'CommentsOnly' && this.owner.isReadOnly) {\n            return;\n        }\n        this.insertTextInternal(text, false);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    Editor.prototype.insertTextInternal = function (text, isReplace, revisionType, allowLayout) {\n        if (text.indexOf('\\r') >= 0 || text.indexOf('\\n') >= 0) {\n            if (text === '\\r' || text === '\\n' || text === '\\r\\n') {\n                this.onEnter();\n            }\n            else {\n                this.isInsertText = true;\n                this.pasteContents(text);\n                this.isInsertText = false;\n            }\n            return;\n        }\n        if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.selection.isInlineFormFillMode()) {\n            var inline = this.selection.currentFormField;\n            if (!inline.formFieldData.enabled) {\n                return;\n            }\n            var resultText = this.getFieldResultText(inline);\n            var rex = new RegExp(this.owner.documentHelper.textHelper.getEnSpaceCharacter(), 'gi');\n            if (resultText.length > 0 && resultText.replace(rex, '') === '') {\n                resultText = '';\n                this.selection.selectFieldInternal(inline);\n            }\n            var maxLength = inline.formFieldData.maxLength;\n            if (maxLength !== 0 && resultText.length >= maxLength) {\n                return;\n            }\n        }\n        if (isReplace) {\n            this.documentHelper.layout.isReplaceAll = !isNullOrUndefined(allowLayout) ? !allowLayout : false;\n        }\n        var selection = this.documentHelper.selection;\n        var insertPosition;\n        var isRemoved = true;\n        revisionType = (this.owner.enableTrackChanges && isNullOrUndefined(revisionType)) ? 'Insertion' : revisionType;\n        var commentStarts = this.checkAndRemoveComments();\n        this.isListTextSelected();\n        if (this.documentHelper.isBookmarkInserted && selection.bookmarks.length > 0) {\n            this.extendSelectionToBookmarkStart();\n        }\n        if (isNullOrUndefined(revisionType) || revisionType === 'Insertion') {\n            this.initHistory('Insert');\n            if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = text;\n                if (this.documentHelper.protectionType === 'FormFieldsOnly') {\n                    var field = this.documentHelper.selection.getCurrentFormField();\n                    if (field && field instanceof FieldElementBox && field.formFieldData && field.formFieldData instanceof DropDownFormField) {\n                        this.editorHistory.currentBaseHistoryInfo.fieldBegin = field;\n                        this.editorHistory.currentBaseHistoryInfo.dropDownIndex = field.formFieldData.selectedIndex;\n                    }\n                }\n            }\n        }\n        var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n        var paraFormat = paragraphInfo.paragraph.paragraphFormat;\n        selection.editPosition = selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n        var bidi = selection.start.paragraph.paragraphFormat.bidi;\n        if ((!selection.isEmpty && !selection.isImageSelected) ||\n            this.documentHelper.isListTextSelected && selection.contextType === 'List') {\n            selection.isSkipLayouting = true;\n            selection.skipFormatRetrieval = true;\n            var endPosition = undefined;\n            var endParagraphInfo = undefined;\n            var endOffset = 0;\n            var paragraphLength = 0;\n            if (this.owner.enableTrackChanges) {\n                if (!this.selection.start.isExistBefore(this.selection.end)) {\n                    endParagraphInfo = this.selection.getParagraphInfo(selection.start);\n                    endPosition = this.selection.start.clone();\n                }\n                else {\n                    endParagraphInfo = this.selection.getParagraphInfo(selection.end);\n                    endPosition = this.selection.end.clone();\n                }\n                paragraphLength = endParagraphInfo.paragraph.getLength();\n                endOffset = endParagraphInfo.offset;\n                this.skipReplace = true;\n            }\n            isRemoved = this.removeSelectedContents(selection);\n            this.skipReplace = false;\n            if (!isNullOrUndefined(endPosition) && this.owner.searchModule && this.owner.searchModule.isRepalceTracking) {\n                this.owner.searchModule.isRepalceTracking = false;\n                this.selection.start.setPositionInternal(this.selection.start);\n                this.selection.end.setPositionInternal(endPosition);\n            }\n            else if (endOffset > 0 && endOffset <= paragraphLength) {\n                var updatedParagraphLength = endParagraphInfo.paragraph.getLength();\n                if (paragraphLength !== updatedParagraphLength) {\n                    endOffset -= paragraphLength - updatedParagraphLength;\n                }\n                this.setPositionParagraph(endParagraphInfo.paragraph, endOffset, true);\n            }\n            selection.skipFormatRetrieval = false;\n            selection.isSkipLayouting = false;\n        }\n        else if (selection.isEmpty && !this.documentHelper.isListTextSelected && !isReplace) {\n            this.documentHelper.isTextInput = true;\n        }\n        paragraphInfo = this.selection.getParagraphInfo(selection.start);\n        paragraphInfo.paragraph.paragraphFormat.copyFormat(paraFormat);\n        var isSpecialChars = this.documentHelper.textHelper.containsSpecialCharAlone(text);\n        if (isRemoved) {\n            selection.owner.isShiftingEnabled = true;\n            this.updateInsertPosition();\n            insertPosition = selection.start;\n            if (insertPosition.paragraph.isEmpty()) {\n                var span = new TextElementBox();\n                var insertFormat = this.copyInsertFormat(insertPosition.paragraph.characterFormat, true);\n                span.characterFormat.copyFormat(insertFormat);\n                span.text = text;\n                var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl || this.selection.characterFormat.bidi;\n                span.characterFormat.bidi = isBidi;\n                insertFormat.bidi = isBidi;\n                span.isRightToLeft = isBidi;\n                span.line = insertPosition.paragraph.childWidgets[0];\n                span.margin = new Margin(0, 0, 0, 0);\n                span.line.children.push(span);\n                this.setCharFormatForCollaborativeEditing(span.characterFormat);\n                if (this.owner.enableTrackChanges) {\n                    if (span.paragraph.characterFormat.revisions.length > 0) {\n                        var matchedRevisions = this.getMatchedRevisionsToCombine(span.paragraph.characterFormat.revisions, revisionType);\n                        if (matchedRevisions.length > 0) {\n                            this.mapMatchedRevisions(matchedRevisions, span.paragraph.characterFormat, span, true);\n                        }\n                    }\n                    else if (!this.checkToCombineRevisionWithPrevPara(span, revisionType)) {\n                        this.insertRevision(span, revisionType);\n                    }\n                }\n                if ((insertPosition.paragraph.paragraphFormat.textAlignment === 'Center'\n                    || insertPosition.paragraph.paragraphFormat.textAlignment === 'Right'\n                    || (insertPosition.paragraph.paragraphFormat.textAlignment === 'Justify'\n                        && insertPosition.paragraph.paragraphFormat.bidi))\n                    && insertPosition.paragraph.paragraphFormat.listFormat.listId === -1) {\n                    insertPosition.paragraph.x = insertPosition.paragraph.clientX;\n                    insertPosition.paragraph.clientX = undefined;\n                    if (insertPosition.paragraph.hasOwnProperty('absoluteXPosition')) {\n                        delete insertPosition.paragraph['absoluteXPosition'];\n                    }\n                }\n                if (span instanceof TextElementBox && span.text.length > 90) {\n                    // Here, the text is split based on the maximum character length of 90.\n                    HelperMethods.splitWordByMaxLength(span, span.line);\n                }\n                this.documentHelper.layout.reLayoutParagraph(insertPosition.paragraph, 0, 0);\n            }\n            else {\n                var indexInInline = 0;\n                var inlineObj = insertPosition.currentWidget.getInline(insertPosition.offset, indexInInline, bidi, (isReplace) ? false : true, this.documentHelper.owner.isSpellCheck);\n                var inline = inlineObj.element;\n                indexInInline = inlineObj.index;\n                inline.ischangeDetected = true;\n                if (inline instanceof TextElementBox && text !== ' ' && this.documentHelper.owner.isSpellCheck) {\n                    this.owner.spellCheckerModule.removeErrorsFromCollection({ 'element': inline, 'text': inline.text });\n                    if (!isReplace) {\n                        inline.ignoreOnceItems = [];\n                    }\n                }\n                if (inline.canTrigger && inline.text.length <= 1) {\n                    inline.canTrigger = false;\n                }\n                // Todo: compare selection format\n                var insertFormat = this.copyInsertFormat(inline.characterFormat, true);\n                var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl || this.selection.characterFormat.bidi;\n                var insertLangId = this.documentHelper.textHelper.getRtlLanguage(text).id;\n                var inlineLangId = 0;\n                var isRtl = false;\n                var isInlineContainsSpecChar = false;\n                var isTextContainsSpecChar = false;\n                if (inline instanceof TextElementBox) {\n                    inlineLangId = this.documentHelper.textHelper.getRtlLanguage(inline.text).id;\n                    isRtl = this.documentHelper.textHelper.getRtlLanguage(inline.text).isRtl;\n                    isTextContainsSpecChar = this.documentHelper.textHelper.containsSpecialCharAlone(text);\n                }\n                if ((!isBidi && inline.characterFormat.bidi && (inlineLangId !== 0 || (isTextContainsSpecChar && isRtl)))\n                    || (text === ' ' && this.selection.characterFormat.bidi)) {\n                    isBidi = true;\n                }\n                if (isBidi || !this.documentHelper.owner.isSpellCheck) {\n                    insertFormat.bidi = isBidi;\n                }\n                this.setCharFormatForCollaborativeEditing(insertFormat);\n                if ((!this.documentHelper.owner.isSpellCheck || (text !== ' ' && inline.text !== ' ')) && insertFormat.isSameFormat(inline.characterFormat) && this.canInsertRevision(inline, revisionType)\n                    || (text.trim() === '' && !isBidi && inline.characterFormat.bidi) || isRtl && insertFormat.isSameFormat(inline.characterFormat) && isSpecialChars) {\n                    this.insertTextInline(inline, selection, text, indexInInline);\n                    this.setCharFormatForCollaborativeEditing(inline.characterFormat);\n                }\n                else {\n                    var tempSpan = new TextElementBox();\n                    tempSpan.text = text;\n                    tempSpan.line = inline.line;\n                    tempSpan.isRightToLeft = isRtl;\n                    tempSpan.characterFormat.copyFormat(insertFormat);\n                    this.setCharFormatForCollaborativeEditing(tempSpan.characterFormat);\n                    if (inline instanceof FootnoteElementBox) {\n                        tempSpan.characterFormat.baselineAlignment = 'Normal';\n                    }\n                    var isRevisionCombined = false;\n                    var insertIndex = inline.indexInOwner;\n                    var prevRevisionCount = tempSpan.revisions.length;\n                    if (indexInInline === inline.length) {\n                        var index = -1;\n                        index = insertIndex + 1;\n                        if (this.owner.enableTrackChanges && !(inline instanceof BookmarkElementBox)) {\n                            isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n                            if (!isRevisionCombined && tempSpan.revisions.length === prevRevisionCount) {\n                                if (inline.nextNode != undefined && inline.nextNode.revisions.length == 1) {\n                                    isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType);\n                                }\n                                else if (inline.paragraph.characterFormat.revisions.length == 1 && inline.paragraph.characterFormat.revisions[0].revisionType == 'Deletion') {\n                                    isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType, inline.paragraph);\n                                }\n                                else {\n                                    isRevisionCombined = this.checkToMapRevisionWithNextNode(inline.nextNode, tempSpan, isBidi, revisionType);\n                                }\n                            }\n                        }\n                        if (!isRevisionCombined) {\n                            inline.line.children.splice(index, 0, tempSpan);\n                            this.checkToCombineRevisionsinBlocks(tempSpan, prevRevisionCount === tempSpan.revisions.length, true, revisionType);\n                        }\n                    }\n                    else if (indexInInline === 0) {\n                        if (this.owner.enableTrackChanges) {\n                            isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n                            if (!isRevisionCombined && tempSpan.revisions.length === 0) {\n                                this.checkToMapRevisionWithPreviousNode(inline.previousNode, tempSpan, isBidi, revisionType);\n                            }\n                        }\n                        if (!isRevisionCombined) {\n                            inline.line.children.splice(insertIndex, 0, tempSpan);\n                            this.checkToCombineRevisionsinBlocks(tempSpan, prevRevisionCount === tempSpan.revisions.length, true, revisionType);\n                        }\n                    }\n                    else {\n                        if (inline instanceof TextElementBox) {\n                            var splittedSpan = new TextElementBox();\n                            splittedSpan.line = inline.line;\n                            splittedSpan.characterFormat.copyFormat(inline.characterFormat);\n                            // Commented because character format is not syncing correctly.\n                            // this.setCharFormatForCollaborativeEditing(splittedSpan.characterFormat);\n                            splittedSpan.text = inline.text.substring(indexInInline);\n                            if (!this.owner.enableTrackChanges && !this.selection.isInField) {\n                                this.updateRevisionForSpittedTextElement(inline, splittedSpan);\n                            }\n                            inline.text = inline.text.slice(0, indexInInline);\n                            if (this.owner.enableTrackChanges) {\n                                isRevisionCombined = this.checkToMapRevisionWithInlineText(inline, indexInInline, tempSpan, isBidi, revisionType);\n                                if (isRevisionCombined || tempSpan.revisions.length > prevRevisionCount) {\n                                    this.copyElementRevision(inline, splittedSpan, true);\n                                }\n                                else if (tempSpan.revisions.length === prevRevisionCount) {\n                                    this.updateRevisionForSpittedTextElement(inline, splittedSpan);\n                                    this.insertRevision(tempSpan, revisionType);\n                                }\n                            }\n                            else if (this.selection.isInField) {\n                                this.copyElementRevision(inline, splittedSpan, false);\n                                this.updateElementInFieldRevision(inline, tempSpan, inline.revisions, true);\n                            }\n                            if (this.owner.isSpellCheck) {\n                                this.owner.spellCheckerModule.updateSplittedElementError(inline, splittedSpan);\n                            }\n                            inline.line.children.splice(insertIndex + 1, 0, splittedSpan);\n                        }\n                        if (!isRevisionCombined) {\n                            inline.line.children.splice(insertIndex + 1, 0, tempSpan);\n                        }\n                    }\n                    if (tempSpan instanceof TextElementBox && tempSpan.text.length > 90) {\n                        // Here, the text is split based on the maximum character length of 90.\n                        HelperMethods.splitWordByMaxLength(tempSpan, tempSpan.line);\n                    }\n                    if (!(!isNullOrUndefined(revisionType) && revisionType === 'Deletion' && !insertPosition.paragraph.isLayouted)) {\n                        this.documentHelper.layout.reLayoutParagraph(insertPosition.paragraph, inline.line.indexInOwner, 0);\n                    }\n                }\n            }\n            this.documentHelper.layout.allowLayout = true;\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + text.length, true);\n            this.updateEndPosition();\n            if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)\n                && (this.editorHistory.currentHistoryInfo.action === 'ListSelect') &&\n                this.documentHelper.isListTextSelected) {\n                this.editorHistory.updateHistory();\n                this.editorHistory.updateComplexHistory();\n            }\n            if ((isNullOrUndefined(revisionType) || revisionType === 'Insertion') && !this.isFieldOperation) {\n                this.reLayout(selection);\n            }\n            this.documentHelper.isTextInput = false;\n        }\n        this.updateXmlMappedContentControl();\n        if (!isReplace && isRemoved && (text === ' ' || text === '\\t' || text === '\\v')) {\n            var isList = false;\n            if (!(text === '\\v') && !this.isRemoteAction) {\n                isList = this.checkAndConvertList(selection, text === '\\t');\n            }\n            if (!isList) {\n                if (!isNullOrUndefined(selection.getHyperlinkField())) {\n                    return;\n                }\n                //Checks if the previous text is URL, then it is auto formatted to hyperlink.\n                this.checkAndConvertToHyperlink(selection, false);\n            }\n        }\n        this.updateHistoryForComments(commentStarts);\n    };\n    Editor.prototype.extendSelectionToBookmarkStart = function () {\n        if (this.documentHelper.bookmarks.length > 0) {\n            var startPos = this.selection.start;\n            var endPos = this.selection.end;\n            if (!this.selection.isForward) {\n                startPos = this.selection.end;\n                endPos = this.selection.start;\n            }\n            var bookMark = void 0;\n            var selectionBookmark = this.selection.bookmarks;\n            for (var i = 0; i < selectionBookmark.length; i++) {\n                bookMark = this.documentHelper.bookmarks.get(selectionBookmark[i]);\n                if (this.selection.isElementInSelection(bookMark.reference, false) &&\n                    !this.selection.isElementInSelection(bookMark, true)) {\n                    var bookmarkPargraph = bookMark.line.paragraph;\n                    var selectionParagraphInfo = this.selection.getParagraphInfo(startPos);\n                    if (bookmarkPargraph.equals(selectionParagraphInfo.paragraph)) {\n                        var elementOffset = bookMark.line.getOffset(bookMark, bookMark.bookmarkType);\n                        if (bookMark.line === startPos.currentWidget && selectionParagraphInfo.offset === elementOffset + 1) {\n                            startPos.offset--;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.updateElementInFieldRevision = function (revisionElement, elementToInclude, revisions, isEnd) {\n        for (var i = 0; i < revisions.length; i++) {\n            var currentRevision = revisions[i];\n            var rangeIndex = currentRevision.range.indexOf(revisionElement);\n            currentRevision.range.splice(isEnd ? rangeIndex + 1 : rangeIndex, 0, elementToInclude);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n    };\n    /**\n     * Retrieves the resultant field text from the specified field element box.\n     * @param item Specify the field element box to retrieve field text.\n     * @returns Returns the resultant field text.\n     */\n    Editor.prototype.retrieveFieldResultantText = function (item) {\n        var resultantText = '';\n        if (item.fieldType === 1) {\n            var textElement = item.previousElement;\n            while (!isNullOrUndefined(textElement) && textElement instanceof TextElementBox) {\n                resultantText = textElement.text + resultantText;\n                textElement = (!isNullOrUndefined(textElement.previousNode)) ? textElement.previousNode.previousValidNodeForTracking : undefined;\n            }\n        }\n        return resultantText;\n    };\n    Editor.prototype.checkToCombineRevisionsinBlocks = function (tempSpan, checkWidget, isEnd, revisionType) {\n        if (!checkWidget || !this.owner.enableTrackChanges) {\n            return;\n        }\n        // if (tempSpan instanceof FieldElementBox && tempSpan.fieldType === 2) {\n        //     return;\n        // }\n        if (tempSpan instanceof BookmarkElementBox || tempSpan instanceof CommentCharacterElementBox || tempSpan instanceof EditRangeStartElementBox || tempSpan instanceof EditRangeEndElementBox) {\n            return;\n        }\n        var isCombined = false;\n        if (isEnd) {\n            isCombined = this.combineRevisionWithNextPara(tempSpan, revisionType);\n        }\n        else {\n            isCombined = this.combineRevisionWithPrevPara(tempSpan, revisionType);\n        }\n        if (!isCombined) {\n            this.insertRevision(tempSpan, revisionType);\n        }\n    };\n    Editor.prototype.checkToMapRevisionWithNextNode = function (inline, tempSpan, isBidi, revisionType, inlinePara) {\n        if (!isNullOrUndefined(inlinePara) && inlinePara.characterFormat.revisions.length == 1) {\n            var nextElementPara = inlinePara.characterFormat;\n            if (!isNullOrUndefined(nextElementPara)) {\n                return this.checkToMapRevisionWithInlineText(undefined, 0, tempSpan, isBidi, revisionType, nextElementPara);\n            }\n            return false;\n        }\n        if (isNullOrUndefined(inline)) {\n            return false;\n        }\n        var nextElement = inline.nextValidNodeForTracking;\n        if (!isNullOrUndefined(nextElement)) {\n            return this.checkToMapRevisionWithInlineText(nextElement, 0, tempSpan, isBidi, revisionType);\n        }\n        return false;\n    };\n    Editor.prototype.checkToMapRevisionWithPreviousNode = function (inline, tempSpan, isBidi, revisionType) {\n        if (isNullOrUndefined(inline)) {\n            return false;\n        }\n        var prevElement = inline.previousValidNodeForTracking;\n        if (!isNullOrUndefined(prevElement)) {\n            return this.checkToMapRevisionWithInlineText(prevElement, prevElement.length, tempSpan, isBidi, revisionType);\n        }\n        return false;\n    };\n    Editor.prototype.checkToMapRevisionWithInlineText = function (inline, indexInInline, newElement, isBidi, revisionType, inlinePara) {\n        if (!isNullOrUndefined(inlinePara)) {\n            if (revisionType === 'Deletion') {\n                this.updateLastElementRevision(newElement);\n            }\n            if (!isNullOrUndefined(inlinePara) && inlinePara.revisions.length > 0) {\n                return this.applyMatchedRevisionInorder(undefined, newElement, indexInInline, true, isBidi, revisionType, inlinePara);\n            }\n        }\n        else if (!isNullOrUndefined(inline)) {\n            if (revisionType === 'Deletion') {\n                this.updateLastElementRevision(newElement);\n            }\n            if (inline.length === indexInInline && inline.previousValidNodeForTracking != undefined) {\n                inline = inline.previousValidNodeForTracking;\n                indexInInline = inline.length;\n                if (inline.revisions.length > 0) {\n                    return this.applyMatchedRevisionInorder(inline, newElement, indexInInline, false, isBidi, revisionType);\n                }\n            }\n            else if (indexInInline === 0) {\n                inline = inline.nextValidNodeForTracking;\n                if (!isNullOrUndefined(inline) && inline.revisions.length > 0) {\n                    return this.applyMatchedRevisionInorder(inline, newElement, indexInInline, true, isBidi, revisionType);\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.combineElementRevisions = function (inline, elementToCombine) {\n        if (inline.revisions.length === 0 || elementToCombine.revisions.length === 0) {\n            return;\n        }\n        for (var i = 0; i < inline.revisions.length; i++) {\n            var prevRevision = inline.revisions[i];\n            for (var j = 0; j < elementToCombine.revisions.length; j++) {\n                var currentRevision = elementToCombine.revisions[i];\n                if (prevRevision.range.indexOf(elementToCombine) === -1 && currentRevision.revisionType === prevRevision.revisionType && currentRevision.author === prevRevision.author) {\n                    elementToCombine.revisions.splice(j, 1);\n                    prevRevision.range.push(elementToCombine);\n                    elementToCombine.revisions.splice(j, 0, prevRevision);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(prevRevision);\n                }\n            }\n        }\n    };\n    Editor.prototype.applyMatchedRevisionInorder = function (inline, newElement, indexInInline, isBegin, isBidi, revisionType, inlinePara) {\n        var revisionsMatched;\n        if (!isNullOrUndefined(inlinePara) && isNullOrUndefined(inline)) {\n            revisionsMatched = this.getMatchedRevisionsToCombine(inlinePara.revisions, revisionType);\n            if (revisionsMatched.length > 0) {\n                this.mapMatchedRevisions(revisionsMatched, inlinePara, newElement, isBegin);\n            }\n            return false;\n        }\n        else {\n            revisionsMatched = this.getMatchedRevisionsToCombine(inline.revisions, revisionType);\n            if (revisionsMatched.length > 0) {\n                this.mapMatchedRevisions(revisionsMatched, inline, newElement, isBegin);\n            }\n            return false;\n        }\n    };\n    Editor.prototype.copyElementRevision = function (elementToCopy, elementToInclude, isSplitElementMerged) {\n        if (!this.isTrackingFormField) {\n            for (var i = 0; i < elementToCopy.revisions.length; i++) {\n                var currentRevision = elementToCopy.revisions[i];\n                var rangeIndex = currentRevision.range.indexOf(elementToCopy);\n                elementToInclude.revisions.splice(0, 0, currentRevision);\n                currentRevision.range.splice(rangeIndex + ((isSplitElementMerged) ? 2 : 1), 0, elementToInclude);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n            }\n        }\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.mapMatchedRevisions = function (revisions, revisionElement, elementToInclude, isBegin) {\n        for (var i = 0; i < revisions.length; i++) {\n            var currentRevision = revisions[i];\n            if (!this.isRevisionAlreadyIn(elementToInclude, currentRevision) || elementToInclude instanceof WCharacterFormat) {\n                elementToInclude.revisions.splice(0, 0, currentRevision);\n                if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.markerData.length === 0) {\n                    this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, currentRevision));\n                }\n                if (elementToInclude instanceof FootnoteElementBox) {\n                    this.insertRevisionForFootnoteWidget(elementToInclude, currentRevision);\n                }\n                var rangeIndex = currentRevision.range.indexOf(revisionElement);\n                currentRevision.range.splice((isBegin) ? rangeIndex : rangeIndex + 1, 0, elementToInclude);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n            }\n        }\n    };\n    Editor.prototype.isRevisionAlreadyIn = function (element, revision) {\n        if (element.revisions.length > 0) {\n            for (var i = 0; i < element.revisions.length; i++) {\n                var elementRevision = element.revisions[i];\n                if (elementRevision.revisionID === revision.revisionID) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.getMatchedRevisionsToCombine = function (revisions, revisionType) {\n        var matchedRevisions = [];\n        for (var i = 0; i < revisions.length; i++) {\n            if (this.isRevisionMatched(revisions[i], revisionType)) {\n                matchedRevisions.push(revisions[i]);\n            }\n        }\n        return matchedRevisions;\n    };\n    Editor.prototype.decideInlineForTrackChanges = function (inline, revisionType) {\n        var matched = false;\n        if (this.owner.enableTrackChanges && !this.canInsertRevision(inline, revisionType)) {\n            var currentElement = inline.nextValidNodeForTracking;\n            if (!isNullOrUndefined(currentElement) && this.canInsertRevision(currentElement, revisionType)) {\n                inline = currentElement;\n                matched = true;\n            }\n        }\n        return { 'element': inline, 'isMatched': matched };\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertIMEText = function (text, isUpdate) {\n        if (this.documentHelper.lastComposedText === text && isUpdate) {\n            return;\n        }\n        // Clone selection start position\n        var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n        var startPosition = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n        // Insert IME text in current selection\n        this.insertText(text);\n        this.documentHelper.lastComposedText = text;\n        // update selection start\n        var start = this.selection.start;\n        this.setPositionForCurrentIndex(start, startPosition);\n        // Update selection end\n        var endPosition = new TextPosition(this.owner);\n        endPosition.setPositionForLineWidget(start.currentWidget, start.offset + text.length);\n        if (this.owner.enableTrackChanges) {\n            if (!isUpdate) {\n                this.selection.start.setPositionInternal(this.selection.end);\n            }\n            this.selection.end.updatePhysicalPosition(true);\n        }\n        else {\n            this.selection.selectPosition(isUpdate ? start : endPosition, endPosition);\n        }\n    };\n    /**\n      * Inserts the section break at cursor position with specified section break type.\n      *\n      * @param {SectionBreakType} sectionBreakType Specifies the section break type.\n      * > If this parameter is not set, it inserts the section break of type new page.\n      * @returns {void}\n      */\n    Editor.prototype.insertSectionBreak = function (sectionBreakType) {\n        if (isNullOrUndefined(sectionBreakType)) {\n            sectionBreakType = SectionBreakType.NewPage;\n        }\n        var selection = this.documentHelper.selection;\n        if (isNullOrUndefined(selection) || this.owner.isReadOnlyMode || selection.start.paragraph.isInHeaderFooter) {\n            return;\n        }\n        if (sectionBreakType === SectionBreakType.Continuous) {\n            this.initHistory('SectionBreakContinuous');\n        }\n        else {\n            this.initHistory('SectionBreak');\n        }\n        if (!selection.isEmpty) {\n            selection.selectContent(selection.isForward ? selection.start : selection.end, true);\n        }\n        this.documentHelper.owner.isShiftingEnabled = true;\n        this.updateInsertPosition();\n        if (sectionBreakType === SectionBreakType.Continuous) {\n            this.documentHelper.layout.isSectionBreakCont = true;\n            this.insertSection(selection, true, undefined, true);\n        }\n        else {\n            this.insertSection(selection, true, undefined, undefined, true);\n        }\n        this.updateEndPosition();\n        this.reLayout(selection, true);\n        //if (this.owner.layoutType === 'Continuous') {\n        this.layoutWholeDocument(true);\n        //} \n        this.documentHelper.layout.isSectionBreakCont = false;\n    };\n    Editor.prototype.combineRevisionWithBlocks = function (elementBox, revisionType) {\n        if (!this.owner.enableTrackChanges || isNullOrUndefined(elementBox)) {\n            return;\n        }\n        while (elementBox instanceof BookmarkElementBox || elementBox instanceof CommentCharacterElementBox || elementBox instanceof ListTextElementBox) {\n            elementBox = elementBox.nextElement;\n        }\n        if (isNullOrUndefined(elementBox)) {\n            return;\n        }\n        var prevPara = (elementBox instanceof ParagraphWidget ? elementBox.previousRenderedWidget : elementBox.paragraph.previousRenderedWidget);\n        if (prevPara instanceof TableWidget) {\n            return;\n        }\n        var isNew = true;\n        var currentElement;\n        if (elementBox instanceof ParagraphWidget) {\n            currentElement = elementBox.characterFormat;\n        }\n        else {\n            currentElement = elementBox;\n        }\n        if (!isNullOrUndefined(prevPara) && prevPara.characterFormat.revisions.length > 0) {\n            var lastLine = prevPara.lastChild;\n            if (isNullOrUndefined(lastLine) || lastLine.children.length === 0) {\n                return;\n            }\n            var lastElement_1 = lastLine.children[lastLine.children.length - 1];\n            while (lastElement_1 instanceof BookmarkElementBox || lastElement_1 instanceof CommentCharacterElementBox || lastElement_1 instanceof ListTextElementBox) {\n                lastElement_1 = lastElement_1.previousElement;\n            }\n            if (prevPara.isEmpty()) {\n                lastElement_1 = prevPara.characterFormat;\n            }\n            if (lastElement_1.revisions.length > 0) {\n                if (this.compareElementRevision(prevPara.characterFormat, currentElement)) {\n                    var currentRevision = currentElement.revisions[currentElement.revisions.length - 1];\n                    if (this.compareElementRevision(lastElement_1, currentElement)) {\n                        var lastElementRevision = lastElement_1.revisions[lastElement_1.revisions.length - 1];\n                        isNew = false;\n                        if (currentRevision !== lastElementRevision) {\n                            this.clearAndUpdateRevisons(currentRevision.range, lastElementRevision, lastElementRevision.range.indexOf(lastElement_1) + 1);\n                            this.owner.revisions.remove(currentRevision);\n                        }\n                    }\n                }\n            }\n        }\n        var lastElement;\n        if (elementBox instanceof ParagraphWidget) {\n            lastElement = elementBox.characterFormat;\n        }\n        else {\n            var lastLine = elementBox.paragraph.lastChild;\n            while (lastLine.children.length == 0 && !isNullOrUndefined(lastLine.previousLine)) {\n                // in case there was a line break and last line doesn't have any children\n                lastLine = lastLine.previousLine;\n            }\n            lastElement = lastLine.children[lastLine.children.length - 1];\n            elementBox = lastElement == undefined ? elementBox : lastElement;\n        }\n        var nextPara = (elementBox instanceof ParagraphWidget ? elementBox.nextRenderedWidget : elementBox.paragraph.nextRenderedWidget);\n        if (nextPara instanceof TableWidget) {\n            return;\n        }\n        if (!isNullOrUndefined(nextPara)) {\n            // let lastLine: LineWidget = elementBox.paragraph.lastChild as LineWidget;\n            // let lastElement: ElementBox = lastLine.children[lastLine.children.length - 1];\n            var firstLine = nextPara.firstChild;\n            var firstElement = firstLine.children[0];\n            while (firstElement instanceof BookmarkElementBox || firstElement instanceof CommentCharacterElementBox || firstElement instanceof ListTextElementBox) {\n                firstElement = firstElement.nextElement;\n            }\n            if (nextPara.isEmpty()) {\n                firstElement = nextPara.characterFormat;\n            }\n            if (isNullOrUndefined(firstElement)) {\n                return;\n            }\n            if (firstElement.revisions.length > 0) {\n                var firstEleRevision = firstElement.revisions[firstElement.revisions.length - 1];\n                if (this.compareElementRevision(currentElement, firstElement)) {\n                    if (this.compareElementRevision(currentElement, firstElement)) {\n                        var lastElementRevision = currentElement.revisions[currentElement.revisions.length - 1];\n                        isNew = false;\n                        if (firstEleRevision !== lastElementRevision) {\n                            this.clearAndUpdateRevisons(lastElementRevision.range, firstEleRevision, 0, true);\n                            this.owner.revisions.remove(lastElementRevision);\n                        }\n                    }\n                }\n            }\n        }\n        if (elementBox instanceof ElementBox && elementBox.revisions.length === 0) {\n            this.insertRevision(elementBox, revisionType);\n        }\n    };\n    Editor.prototype.checkToCombineRevisionWithNextPara = function (elementBox, revisionType) {\n        var nextPara = elementBox.paragraph.nextRenderedWidget;\n        if (nextPara instanceof TableWidget) {\n            return false;\n        }\n        if (!isNullOrUndefined(nextPara) && !nextPara.isEmpty()) {\n            var firstLine = nextPara.firstChild;\n            var firstElement = firstLine.children[0];\n            while (firstElement instanceof BookmarkElementBox || firstElement instanceof CommentCharacterElementBox) {\n                firstElement = firstElement.previousElement;\n            }\n            if (isNullOrUndefined(firstElement)) {\n                return false;\n            }\n            if (firstElement.revisions.length > 0) {\n                var mappedRevisions = this.getMatchedRevisionsToCombine(firstElement.revisions, revisionType);\n                if (mappedRevisions.length > 0) {\n                    this.mapMatchedRevisions(mappedRevisions, firstElement, elementBox, true);\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.checkToCombineRevisionWithPrevPara = function (elementBox, revisionType) {\n        var prevPara = elementBox.paragraph.previousRenderedWidget;\n        if (prevPara instanceof TableWidget) {\n            return false;\n        }\n        if (!isNullOrUndefined(prevPara) && prevPara.characterFormat.revisions.length > 0) {\n            if (!this.isRevisionMatched(prevPara.characterFormat, revisionType)) {\n                return false;\n            }\n            // let firstLine: LineWidget = prevPara.firstChild as LineWidget;\n            // let lastLine: LineWidget = prevPara.lastChild as LineWidget;\n            // if (isNullOrUndefined(lastLine) || lastLine.children.length === 0) {\n            //     return false;\n            // }\n            // let lastElement: ElementBox = lastLine.children[lastLine.children.length - 1];\n            // if (lastElement instanceof BookmarkElementBox || lastElement instanceof CommentCharacterElementBox) {\n            //     lastElement = lastElement.previousValidNodeForTracking;\n            // }\n            // if (isNullOrUndefined(lastElement)) {\n            //     return false;\n            // }\n            // if (lastElement.revisions.length > 0) {\n            var mappedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, revisionType);\n            if (mappedRevisions.length > 0) {\n                this.mapMatchedRevisions(mappedRevisions, prevPara.characterFormat, elementBox, false);\n                return true;\n            }\n            // }\n        }\n        return false;\n    };\n    Editor.prototype.combineRevisionWithNextPara = function (elementBox, revisionType) {\n        var isLastLine = elementBox.line.isLastLine();\n        var nextElement = elementBox.nextNode;\n        if (isLastLine && isNullOrUndefined(nextElement)) {\n            return this.checkToCombineRevisionWithNextPara(elementBox, revisionType);\n        }\n        return false;\n    };\n    Editor.prototype.combineRevisionWithPrevPara = function (elementBox, revisionType) {\n        var isFirstLine = elementBox.line.isFirstLine();\n        var prevElement = elementBox.previousNode;\n        if (isFirstLine && isNullOrUndefined(prevElement)) {\n            return this.checkToCombineRevisionWithPrevPara(elementBox, revisionType);\n        }\n        return false;\n    };\n    /**\n     * Removes the specified revision from the document.\n     *\n     * @param revisionToRemove Specify the revision to be removed.\n     * @returns {void}\n     */\n    Editor.prototype.removeRevision = function (revisionToRemove) {\n        var elementInfo = this.selection.start.currentWidget.getInline(this.selection.start.offset + 1, 0);\n        var elementBox = elementInfo.element;\n        if (elementInfo.element.revisions.length > 0) {\n            for (var i = 0; i < elementBox.revisions.length; i++) {\n                if (elementBox.revisions[i].revisionType === revisionToRemove.revisionType) {\n                    var revision = elementBox.revisions[i];\n                    var startIndex = revision.range.indexOf(elementBox);\n                    for (var j = startIndex; startIndex < revision.range.length; startIndex++) {\n                        revision.range[j].revisions.splice(i, 1);\n                        revision.range.splice(j, 1);\n                        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Clears the specified revision from the document.\n     *\n     * @param revision Specify the revision to clear from the document.\n     * @returns {void}\n     */\n    Editor.prototype.clearElementRevision = function (revision) {\n        if (isNullOrUndefined(revision)) {\n            return;\n        }\n        for (var i = 0; i < revision.range.length; i++) {\n            if (revision.range[i] instanceof ElementBox) {\n                var currentElement = revision.range[i];\n                currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n                revision.range.splice(i, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.insertRevision = function (item, type, author, date, spittedRange, skip, parseRevisionId) {\n        if (this.isRemoteAction && isNullOrUndefined(this.revisionData) && !this.documentHelper.owner.parser.isPaste) {\n            return undefined;\n        }\n        var revisionId;\n        if (!isNullOrUndefined(parseRevisionId)) {\n            revisionId = parseRevisionId;\n        }\n        if (!isNullOrUndefined(this.revisionData) && this.revisionData.length > 0) {\n            var newRevisionData = this.revisionData.pop();\n            author = newRevisionData.author;\n            date = newRevisionData.date;\n            revisionId = newRevisionData.revisionId;\n        }\n        author = !isNullOrUndefined(author) ? author : this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n        var currentDate = !isNullOrUndefined(date) ? date : HelperMethods.getUtcDate();\n        if (item instanceof ElementBox && !isNullOrUndefined(item.line) && item.line.paragraph.associatedCell || (item instanceof WCharacterFormat && item.ownerBase instanceof ParagraphWidget && item.ownerBase.associatedCell)) {\n            var cellWidget = undefined;\n            if (item instanceof ElementBox) {\n                cellWidget = item.line.paragraph.associatedCell;\n            }\n            else if (item instanceof WCharacterFormat) {\n                cellWidget = item.ownerBase.associatedCell;\n            }\n            if (cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n                var rowFormat = cellWidget.ownerRow.rowFormat;\n                var matchedRevisions = this.getMatchedRevisionsToCombine(rowFormat.revisions, type);\n                if (matchedRevisions.length > 0) {\n                    if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.markerData.length === 0) {\n                        this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, matchedRevisions[0]));\n                    }\n                    for (var i = 0; i < matchedRevisions.length; i++) {\n                        item.revisions.splice(0, 0, matchedRevisions[i]);\n                        matchedRevisions[i].range.push(item);\n                    }\n                    return undefined;\n                }\n            }\n        }\n        var revision = new Revision(this.owner, author, currentDate);\n        revision.revisionType = type;\n        if (this.owner.enableCollaborativeEditing && this.isRemoteAction && !isNullOrUndefined(revisionId) && revisionId != '') {\n            revision.revisionID = revisionId;\n        }\n        else {\n            revision.revisionID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n        }\n        if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.getRevision(revision.revisionID))) {\n            revision = this.getRevision(revision.revisionID);\n        }\n        if (!isNullOrUndefined(spittedRange) && spittedRange.length > 0) {\n            this.clearAndUpdateRevisons(spittedRange, revision, spittedRange.indexOf(item));\n        }\n        if (!isNullOrUndefined(item)) {\n            if (item instanceof FootnoteElementBox) {\n                this.insertRevisionForFootnoteWidget(item, revision);\n            }\n            if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && !skip) {\n                this.editorHistory.currentBaseHistoryInfo.markerData.splice(0, 0, this.getMarkerData(item, undefined, revision));\n            }\n            item.revisions.push(revision);\n            revision.range.push(item);\n        }\n        if (this.isRemoteAction && this.documentHelper.owner.parser.isPaste) {\n            this.remotePasteRevision.push(revision);\n        }\n        else {\n            this.updateRevisionCollection(revision);\n        }\n        return revision;\n    };\n    Editor.prototype.insertRevisionForFootnoteWidget = function (element, revision) {\n        var blocks = element.bodyWidget.childWidgets;\n        this.skipFootNoteDeleteTracking = true;\n        for (var j = 0; j < blocks.length; j++) {\n            this.insertRevisionForBlock(blocks[j], revision.revisionType, false, revision);\n        }\n        this.skipFootNoteDeleteTracking = false;\n    };\n    /**\n     * Method help to clear previous revisions and include new revision at specified index\n     *\n     * @param range - range of elements to be cleared\n     * @param revision - revision to be inserted\n     * @param index - index at which to be included in the revision range\n     * @returns {void}\n     */\n    Editor.prototype.clearAndUpdateRevisons = function (range, revision, index, isReverse) {\n        if (revision.range.filter(function (range) { return range instanceof WCharacterFormat; })) {\n            index += 1;\n        }\n        for (var i = 0; i < range.length; i++) {\n            if (range[i] instanceof ElementBox || range[i] instanceof WCharacterFormat) {\n                var currentElement = range[i];\n                currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n                currentElement.revisions.push(revision);\n                revision.range.splice(isReverse ? i : index + i, 0, currentElement);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            }\n        }\n    };\n    Editor.prototype.splitRevisionByElement = function (item, revision) {\n        if (item.revisions.length > 0) {\n            var range = revision.range;\n            var index = range.indexOf(item);\n            revision.range = range.splice(0, index + 1);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            return range;\n        }\n        return undefined;\n    };\n    /**\n     * Method to update revision for the splitted text element\n     * @param inline - Original text element\n     * @param splittedSpan - Splitted element\n     */\n    Editor.prototype.updateRevisionForSpittedTextElement = function (inline, splittedSpan) {\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.splittedRevisions = [];\n        }\n        for (var i = 0; i < inline.revisions.length; i++) {\n            var revision = inline.revisions[i];\n            /* eslint-disable @typescript-eslint/no-explicit-any */\n            var splittedRange = this.splitRevisionByElement(inline, revision);\n            var splittedRevision = this.insertRevision(splittedSpan, revision.revisionType, revision.author, revision.date, splittedRange, true);\n            if (!this.isRemoteAction) {\n                this.editorHistory.currentBaseHistoryInfo.splittedRevisions.push(this.getMarkerData(undefined, undefined, this.getRevision(splittedRevision.revisionID)));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getRevision = function (revisionId) {\n        for (var i = 0; i < this.owner.documentHelper.revisionsInternal.length; i++) {\n            var revision = this.owner.documentHelper.revisionsInternal.keys[i];\n            if (revision === revisionId) {\n                return this.owner.documentHelper.revisionsInternal.get(revision);\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.isRevisionMatched = function (item, type) {\n        var author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n        if (item instanceof Revision) {\n            if ((isNullOrUndefined(type) || type === item.revisionType) && item.author === author) {\n                return true;\n            }\n        }\n        else if (item.revisions.length > 0) {\n            for (var i = 0; i < item.revisions.length; i++) {\n                var elementRevision = item.revisions[i];\n                if ((isNullOrUndefined(type) || type === elementRevision.revisionType) && elementRevision.author === author) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.compareElementRevision = function (element, compare) {\n        if (element.revisions.length === 0 || compare.revisions.length === 0) {\n            return false;\n        }\n        for (var i = 0; i < element.revisions.length; i++) {\n            var currentRevision = element.revisions[i];\n            for (var j = 0; j < compare.revisions.length; j++) {\n                if (currentRevision.author === compare.revisions[j].author && currentRevision.revisionType === compare.revisions[j].revisionType) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.canInsertRevision = function (item, type) {\n        var revisionType = isNullOrUndefined(type) ? 'Insertion' : type;\n        if (revisionType === 'Deletion') {\n            return false;\n        }\n        if (this.owner.enableTrackChanges) {\n            return this.isRevisionMatched(item, revisionType);\n            //if it has revision\n        }\n        else if (item.revisions.length > 0) {\n            return false;\n        }\n        return true;\n    };\n    Editor.prototype.insertRevisionAtEnd = function (item, newElement, revisionType) {\n        if (newElement instanceof BookmarkElementBox || newElement instanceof CommentCharacterElementBox || newElement instanceof EditRangeStartElementBox || newElement instanceof EditRangeEndElementBox) {\n            return false;\n        }\n        item = item.previousValidNodeForTracking;\n        if (isNullOrUndefined(item)) {\n            return false;\n        }\n        return this.insertRevisionAtPosition(item, newElement, true, revisionType);\n    };\n    Editor.prototype.insertRevisionAtPosition = function (item, newElement, isEnd, revisionType) {\n        // if (newElement instanceof FieldElementBox && (newElement as FieldElementBox).fieldType === 2) {\n        //     return false;\n        // }\n        var prevRevisionLength = newElement.revisions.length;\n        var isRevisionCombined = this.checkToMapRevisionWithInlineText(item, (isEnd) ? item.length : 0, newElement, false, revisionType);\n        // Check to combine with previous and next element\n        if (isEnd) {\n            if (!isRevisionCombined && newElement.revisions.length === prevRevisionLength) {\n                isRevisionCombined = this.checkToMapRevisionWithNextNode(item.nextNode, newElement, false, revisionType);\n            }\n        }\n        else {\n            if (!isRevisionCombined && newElement.revisions.length === prevRevisionLength) {\n                isRevisionCombined = this.checkToMapRevisionWithPreviousNode(item.previousNode, newElement, false, revisionType);\n            }\n        }\n        return isRevisionCombined;\n    };\n    Editor.prototype.insertRevisionAtBegining = function (item, newElement, revisionType) {\n        if (newElement instanceof BookmarkElementBox || newElement instanceof CommentCharacterElementBox || newElement instanceof EditRangeStartElementBox || newElement instanceof EditRangeEndElementBox) {\n            return false;\n        }\n        item = item.nextValidNodeForTracking;\n        if (isNullOrUndefined(item)) {\n            return false;\n        }\n        return this.insertRevisionAtPosition(item, newElement, false, revisionType);\n    };\n    Editor.prototype.splitRevisionForSpittedElement = function (element, spittedElement) {\n        for (var i = element.revisions.length - 1; i >= 0; i--) {\n            var revision = element.revisions[i];\n            var splittedRange = this.splitRevisionByElement(element, revision);\n            this.insertRevision(spittedElement, revision.revisionType, revision.author, revision.date, splittedRange);\n        }\n    };\n    /**\n     * Method to combine element revision if not inserts new revision\n     */\n    // private checkToCombineRevision(element: ElementBox, newElement: ElementBox, revisionType: RevisionType): boolean {\n    //     let isCombined: boolean = false;\n    //     if (this.isRevisionMatched(element, revisionType)) {\n    //         isCombined = true;\n    //         this.combineElementRevision(element, newElement, true);\n    //     } else {\n    //         this.insertRevision(newElement, revisionType);\n    //     }\n    //     return isCombined;\n    // }\n    Editor.prototype.combineElementRevision = function (currentElementRevisions, elementToCombine, isReverse) {\n        for (var i = 0; i < currentElementRevisions.length; i++) {\n            for (var j = 0; j < elementToCombine.length; j++) {\n                var currentRevision = currentElementRevisions[i];\n                var revisionToCombine = elementToCombine[j];\n                if (currentRevision.author === revisionToCombine.author && currentRevision.revisionType === revisionToCombine.revisionType) {\n                    var rangeLength = revisionToCombine.range.length;\n                    for (var k = 0; k < rangeLength; k++) {\n                        var item = revisionToCombine.range[0];\n                        item.revisions.splice(item.revisions.indexOf(revisionToCombine), 1);\n                        revisionToCombine.range.splice(0, 1);\n                        this.owner.trackChangesPane.updateCurrentTrackChanges(revisionToCombine);\n                        isReverse ? currentRevision.range.splice(k, 0, item) : currentRevision.range.push(item);\n                        this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                        item.revisions.push(currentRevision);\n                    }\n                    if (revisionToCombine.range.length === 0) {\n                        this.owner.revisions.remove(revisionToCombine);\n                        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                            this.removeMarkerInfoRevision(revisionToCombine.revisionID, this.editorHistory.currentBaseHistoryInfo.markerData);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeMarkerInfoRevision = function (revisionID, markerInfo) {\n        for (var i = 0; i < markerInfo.length; i++) {\n            if (!isNullOrUndefined(markerInfo[i].revisionId) && markerInfo[i].revisionId === revisionID) {\n                markerInfo.splice(markerInfo.indexOf(markerInfo[i]), 1);\n            }\n        }\n    };\n    Editor.prototype.combineRevisions = function (block, startPosition, endposition) {\n        if (!this.owner.enableTrackChanges) {\n            return;\n        }\n        var info = this.selection.getLineInfo(block, startPosition.offset);\n        var elementInfo = info.line.getInline(startPosition.offset, 0);\n        var currentElement = elementInfo.element;\n        if (currentElement.revisions.length > 0) {\n            if (this.isRevisionMatched(currentElement, 'Insertion')) {\n                var nextElement = currentElement.nextElement;\n                if (!isNullOrUndefined(nextElement) && nextElement.revisions.length > 0) {\n                    var revision = currentElement.revisions[currentElement.revisions.length - 1];\n                    var range = nextElement.revisions[nextElement.revisions.length - 1].range;\n                    if (revision !== nextElement.revisions[nextElement.revisions.length - 1]) {\n                        this.clearAndUpdateRevisons(range, revision, revision.range.indexOf(currentElement) + 1);\n                    }\n                }\n            }\n        }\n        // let startOffset: number = startPosition.currentWidget.getOffset(firstElement, 0);\n        // let endOffset: number = endposition.currentWidget.getOffset(lastElement, 0);\n    };\n    /**\n     * Method to update the revision for whole block\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertRevisionForBlock = function (widget, revisionType, isTOC, revision, skipReLayout) {\n        if (widget.childWidgets.length === 0 || !this.owner.enableTrackChanges) {\n            return;\n        }\n        if (revisionType === 'Deletion') {\n            var editPostion = this.selection.editPosition;\n            var start = this.selection.start.clone();\n            var end = this.selection.end.clone();\n            this.documentHelper.layout.clearListElementBox(widget);\n            var isLastChild = (widget == this.getLastParaForBodywidgetCollection(widget));\n            var nextParagraph = this.selection.getNextParagraphBlock(widget);\n            if (widget.isInsideTable && widget == this.selection.getLastParagraph(widget.associatedCell)) {\n                isLastChild = true;\n            }\n            if (!isLastChild && !widget.isInsideTable && !(isNullOrUndefined(nextParagraph) && widget.isEmpty())) {\n                // Added the condition to remove section if current and next para have different section indexes if selection is covered till the end of section.\n                if (!isNullOrUndefined(nextParagraph) && !nextParagraph.isInsideTable && widget.bodyWidget.sectionIndex !== nextParagraph.bodyWidget.sectionIndex) {\n                    this.addRemovedNodes(widget.bodyWidget);\n                }\n                if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo)) {\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(widget);\n                }\n                this.addRemovedNodes(widget.clone());\n                this.insertRevision(widget.characterFormat, revisionType);\n            }\n            else if (!isLastChild && widget.isInsideTable && start.paragraph.isInsideTable && end.paragraph.isInsideTable && end.offset <= end.paragraph.getLength() && end.paragraph.associatedCell.index === start.paragraph.associatedCell.index) {\n                if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo)) {\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(widget);\n                }\n                this.addRemovedNodes(widget.clone());\n                this.insertRevision(widget.characterFormat, revisionType);\n            }\n            for (var i = widget.childWidgets.length - 1; i > -1; i--) {\n                var line = (widget.childWidgets[i]);\n                this.removeContent(line, 0, this.documentHelper.selection.getLineLength(line), undefined, !isLastChild);\n            }\n            var lastLine = widget.lastChild;\n            while (lastLine.children.length == 0 && !isNullOrUndefined(lastLine.previousLine)) {\n                // in case there was a line break and last line doesn't have any children\n                lastLine = lastLine.previousLine;\n            }\n            if (lastLine.children.length > 0) {\n                var lastEle = lastLine.children[lastLine.children.length - 1];\n                this.combineElementRevision(widget.characterFormat.revisions, lastEle.revisions, true);\n            }\n            this.selection.editPosition = editPostion;\n            this.selection.start.setPositionInternal(start);\n            this.selection.end.setPositionInternal(end);\n            // let textPosition: TextPosition = this.selection.getTextPosBasedOnLogicalIndex(editPostion);\n            // this.selection.selectContent(textPosition, true);\n            this.removeEmptyLine(widget);\n            if (!skipReLayout) {\n                this.documentHelper.layout.reLayoutParagraph(widget, 0, 0);\n            }\n        }\n        else {\n            var skipParaMark = false;\n            if (isNullOrUndefined(revision)) {\n                var author = this.owner.currentUser ? this.owner.currentUser : 'Guest user';\n                revision = new Revision(this.owner, author, HelperMethods.getUtcDate());\n                revision.revisionID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n                revision.revisionType = revisionType;\n            }\n            for (var i = 0; i < widget.childWidgets.length; i++) {\n                var elemets = widget.childWidgets[i].children;\n                if (elemets.length === 0) {\n                    var paraIndex = widget.containerWidget.childWidgets.indexOf(widget);\n                    var prevWidget = undefined;\n                    if (paraIndex > 0) {\n                        prevWidget = widget.containerWidget.childWidgets[paraIndex - 1];\n                    }\n                    if (!isNullOrUndefined(prevWidget) && prevWidget instanceof ParagraphWidget && prevWidget.characterFormat.revisions.length > 0) {\n                        if (this.isRevisionMatched(prevWidget.characterFormat, revisionType)) {\n                            var mappedRevisions = this.getMatchedRevisionsToCombine(prevWidget.characterFormat.revisions, revisionType);\n                            if (mappedRevisions.length > 0) {\n                                this.mapMatchedRevisions(mappedRevisions, prevWidget.characterFormat, widget.characterFormat, false);\n                                skipParaMark = true;\n                                revision = undefined;\n                            }\n                        }\n                    }\n                }\n                for (var j = 0; j < elemets.length; j++) {\n                    if (j === 0 && !isTOC) {\n                        var prevRevisionCount = elemets[i].revisions.length;\n                        this.checkToCombineRevisionsinBlocks(elemets[i], true, false, 'Insertion');\n                        if (elemets[i].revisions.length > prevRevisionCount) {\n                            revision = elemets[i].revisions[elemets[i].revisions.length - 1];\n                        }\n                        else {\n                            elemets[j].revisions.push(revision);\n                            revision.range.push(elemets[j]);\n                        }\n                    }\n                    else {\n                        elemets[j].revisions.push(revision);\n                        revision.range.push(elemets[j]);\n                    }\n                }\n            }\n            if (!isTOC && !skipParaMark) {\n                widget.characterFormat.revisions.push(revision);\n                revision.range.push(widget.characterFormat);\n            }\n            if (!isNullOrUndefined(revision)) {\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                this.updateRevisionCollection(revision);\n            }\n        }\n    };\n    /**\n    * @private\n    */\n    Editor.prototype.getLastParaForBodywidgetCollection = function (widget) {\n        var bodywidget = widget.containerWidget;\n        if (bodywidget.containerWidget instanceof FootNoteWidget) {\n            return bodywidget.childWidgets[bodywidget.childWidgets.length - 1];\n        }\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        var lastBodyWidget = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n        var lastPara = lastBodyWidget.childWidgets[lastBodyWidget.childWidgets.length - 1];\n        return lastPara;\n    };\n    Editor.prototype.updatePasteRevision = function () {\n        for (var i = 0; i < this.remotePasteRevision.length; i++) {\n            this.updateRevisionCollection(this.remotePasteRevision[i]);\n        }\n        this.remotePasteRevision = [];\n    };\n    Editor.prototype.updateRevisionCollection = function (revision) {\n        var isInserted = false;\n        var paraIndex = undefined;\n        if (this.owner.revisions.changes.indexOf(revision) < 0) {\n            if (!this.documentHelper.revisionsInternal.containsKey(revision.revisionID)) {\n                this.documentHelper.revisionsInternal.add(revision.revisionID, revision);\n            }\n            if (this.owner.revisions.changes.length > 0) {\n                var currentStart = this.owner.selectionModule.start;\n                for (var i = 0; i < this.owner.revisions.changes.length; i++) {\n                    var currentRange = this.owner.revisions.changes[i].range[0];\n                    if (currentRange instanceof ElementBox && !isNullOrUndefined(currentRange.line) && currentRange.line.paragraph.bodyWidget) {\n                        paraIndex = this.selection.getElementPosition(this.owner.revisions.changes[i].range[0]).startPosition;\n                    }\n                    else if (currentRange instanceof WRowFormat) {\n                        var rowWidget = currentRange.ownerBase;\n                        var firstCell = rowWidget.childWidgets[0];\n                        if (firstCell.childWidgets.length === 0) {\n                            for (var j = 1; j < rowWidget.childWidgets.length; j++) {\n                                if (rowWidget.childWidgets[j].childWidgets.length > 0) {\n                                    firstCell = rowWidget.childWidgets[j];\n                                    break;\n                                }\n                            }\n                        }\n                        var firstPara = this.selection.getFirstParagraph(firstCell);\n                        // Get the currentRange position to check (before or after) to insert table revision in order.\n                        var editPosition = void 0;\n                        if (firstPara.bodyWidget) {\n                            var selection = this.documentHelper.selection;\n                            if (!isNullOrUndefined(selection.editPosition)) {\n                                editPosition = selection.editPosition;\n                            }\n                            this.updateEditPosition(firstCell, selection);\n                            paraIndex = this.selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n                            if (!isNullOrUndefined(editPosition) && !this.selection.start.paragraph.isInsideTable) {\n                                selection.editPosition = editPosition;\n                            }\n                        }\n                    }\n                    else if (currentRange instanceof WCharacterFormat) {\n                        var paraWidget = currentRange.ownerBase;\n                        if (paraWidget.lastChild && paraWidget.lastChild.paragraph.bodyWidget) {\n                            var offset = paraWidget.getLength();\n                            var startPosition = new TextPosition(this.owner);\n                            startPosition.setPositionParagraph(paraWidget.lastChild, offset);\n                            paraIndex = startPosition;\n                        }\n                    }\n                    if (!isNullOrUndefined(paraIndex) && !isNullOrUndefined(currentStart)) {\n                        if (currentStart.isExistBefore(paraIndex) && !(revision.range[0] instanceof WRowFormat)) {\n                            isInserted = true;\n                            this.owner.revisions.changes.splice(i, 0, revision);\n                            var currentChangeView = new ChangesSingleView(this.owner, this.owner.trackChangesPane);\n                            this.owner.trackChangesPane.changesInfoDiv.insertBefore(currentChangeView.createSingleChangesDiv(revision), this.owner.trackChangesPane.changesInfoDiv.children[i + 1]);\n                            this.owner.trackChangesPane.revisions.splice(i, 0, revision);\n                            this.owner.trackChangesPane.changes.add(revision, currentChangeView);\n                            this.owner.trackChangesPane.renderedChanges.add(revision, currentChangeView);\n                            break;\n                        }\n                        else if (revision.range[0] instanceof WRowFormat && currentRange instanceof WRowFormat && revision.range[0].ownerBase.containerWidget === currentRange.ownerBase.containerWidget && revision.range[0].ownerBase.index === currentRange.ownerBase.index) {\n                            isInserted = true;\n                            this.owner.revisions.changes.splice(i - revision.range[0].ownerBase.indexInOwner, 0, revision);\n                            break;\n                        }\n                        else if (!isNullOrUndefined(paraIndex) && !isNullOrUndefined(currentStart) && ((currentStart.isExistBefore(paraIndex)) || currentStart.isAtSamePosition(paraIndex) || (currentStart.paragraph.isInsideTable && paraIndex.paragraph.isInsideTable && currentStart.paragraph.associatedCell === paraIndex.paragraph.associatedCell))) {\n                            // Insert the table revision if getting row is first row of table we insert directly in ith index or insert next index of currentRange.\n                            if (currentRange instanceof WRowFormat && revision.range[0] instanceof WRowFormat && currentRange.ownerBase.containerWidget === revision.range[0].ownerBase.containerWidget) {\n                                this.owner.revisions.changes.splice(i + revision.range[0].ownerBase.indexInOwner, 0, revision);\n                                isInserted = true;\n                                break;\n                            }\n                            else if (revision.range[0] instanceof WRowFormat) {\n                                this.owner.revisions.changes.splice(i, 0, revision);\n                                isInserted = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isInserted) {\n                this.owner.revisions.changes.push(revision);\n                if (!(revision.range[0] instanceof WRowFormat)) {\n                    var currentChangeView = new ChangesSingleView(this.owner, this.owner.trackChangesPane);\n                    this.owner.trackChangesPane.changesInfoDiv.appendChild(currentChangeView.createSingleChangesDiv(revision));\n                    this.owner.trackChangesPane.revisions.push(revision);\n                    this.owner.trackChangesPane.changes.add(revision, currentChangeView);\n                    this.owner.trackChangesPane.renderedChanges.add(revision, currentChangeView);\n                }\n            }\n            this.documentHelper.updateAuthorIdentity();\n        }\n    };\n    /**\n     * @private\n     * @returns {BodyWidget}\n     */\n    Editor.prototype.insertSection = function (selection, selectFirstBlock, isUndoing, sectionBreakContinuous, sectionBreakNewPage, sectionFormat) {\n        var newSectionFormat;\n        var startPara = this.selection.start.paragraph;\n        if (sectionBreakContinuous && !isUndoing && !startPara.isInsideTable && selection.start.offset === 0 && selection.start.currentWidget === startPara.firstChild && !isNullOrUndefined(startPara.previousRenderedWidget) && startPara.previousRenderedWidget instanceof ParagraphWidget && startPara.previousRenderedWidget.isEndsWithPageBreak) {\n            this.selection.start.paragraph.bodyWidget.sectionFormat.breakCode = 'NoBreak';\n            this.selection.start.paragraph.index = 0;\n            this.updateNextBlocksIndex(this.selection.start.paragraph, true);\n            this.updateSectionIndex(this.selection.start.paragraph.bodyWidget.sectionFormat, this.selection.start.paragraph.bodyWidget, true);\n            this.selection.moveToNextParagraph();\n            this.editorHistory.currentBaseHistoryInfo.insertPosition = undefined;\n            this.updateInsertPosition();\n            return undefined;\n        }\n        if (!isNullOrUndefined(sectionFormat)) {\n            newSectionFormat = sectionFormat;\n        }\n        else {\n            newSectionFormat = this.selection.start.paragraph.bodyWidget.sectionFormat.cloneFormat();\n        }\n        var lastBlock;\n        var firstBlock;\n        if (selection.start.paragraph.isInsideTable) {\n            var table = this.documentHelper.layout.getParentTable(selection.start.paragraph);\n            table = table.combineWidget(this.owner.viewer);\n            var insertBefore = false;\n            if (selection.start.paragraph.associatedCell.rowIndex === 0) {\n                insertBefore = true;\n            }\n            var newParagraph = new ParagraphWidget();\n            var previousBlock = table.previousRenderedWidget;\n            if (!insertBefore) {\n                lastBlock = this.splitTable(table, selection.start.paragraph.associatedCell.ownerRow);\n                this.documentHelper.layout.layoutBodyWidgetCollection(lastBlock.index, lastBlock.containerWidget, lastBlock, false);\n                lastBlock = lastBlock.getSplitWidgets().pop();\n            }\n            else {\n                lastBlock = table;\n            }\n            var insertIndex = 0;\n            if ((isNullOrUndefined(previousBlock) || !previousBlock.bodyWidget.equals(lastBlock.bodyWidget)) && insertBefore) {\n                insertIndex = 0;\n                newParagraph.index = 0;\n            }\n            else {\n                insertIndex = lastBlock.indexInOwner + 1;\n                newParagraph.index = lastBlock.index + 1;\n            }\n            lastBlock.containerWidget.childWidgets.splice(insertIndex, 0, newParagraph);\n            newParagraph.containerWidget = lastBlock.containerWidget;\n            this.updateNextBlocksIndex(newParagraph, true);\n            this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, newParagraph.containerWidget, newParagraph, false);\n            lastBlock = newParagraph;\n        }\n        else {\n            var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n            var selectionStart = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n            //Split Paragraph\n            if (!isUndoing) {\n                this.splitParagraphInternal(selection, selection.start.paragraph, selection.start.currentWidget, selection.start.offset);\n            }\n            this.setPositionForCurrentIndex(selection.start, selectionStart);\n            lastBlock = selection.start.paragraph.getSplitWidgets().pop();\n            if (isUndoing && lastBlock.previousRenderedWidget !== undefined) {\n                lastBlock = lastBlock.previousRenderedWidget;\n            }\n        }\n        //Split body widget\n        firstBlock = this.splitBodyWidget(lastBlock.bodyWidget, newSectionFormat, lastBlock, sectionBreakContinuous, sectionBreakNewPage).firstChild;\n        // if (isUndoing) {\n        //     this.layoutWholeDocument(true);\n        // }\n        if (firstBlock instanceof TableWidget) {\n            firstBlock.updateRowIndex(0);\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(firstBlock.index, firstBlock.containerWidget, firstBlock, false);\n        if (firstBlock instanceof TableWidget) {\n            firstBlock = this.documentHelper.getFirstParagraphInFirstCell(firstBlock);\n        }\n        if (selectFirstBlock) {\n            selection.selectParagraphInternal(firstBlock, true);\n        }\n        return firstBlock;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.splitBodyWidget = function (bodyWidget, sectionFormat, startBlock, sectionBreakContinuous, sectionBreakNewPage) {\n        //let sectionIndex: number;\n        //Move blocks after the start block to next body widget\n        var newBodyWidget = this.documentHelper.layout.moveBlocksToNextPage(startBlock, true, undefined, sectionBreakContinuous);\n        if (this.editorHistory.isUndoing) {\n            startBlock.bodyWidget.sectionFormat = sectionFormat;\n        }\n        if (newBodyWidget.page === undefined) {\n            newBodyWidget.page = bodyWidget.page;\n            bodyWidget.page.bodyWidgets.splice(bodyWidget.page.bodyWidgets.indexOf(bodyWidget) + 1, 0, newBodyWidget);\n        }\n        else if (bodyWidget.page.bodyWidgets.length > 1 && newBodyWidget.page !== undefined && !this.editorHistory.isUndoing) {\n            var temp_NewBody = newBodyWidget;\n            while (!isNullOrUndefined(bodyWidget.nextRenderedWidget) && newBodyWidget !== bodyWidget.nextRenderedWidget) {\n                var startindex = bodyWidget.nextRenderedWidget.page.bodyWidgets.indexOf(bodyWidget.nextRenderedWidget);\n                newBodyWidget.page.bodyWidgets.push(bodyWidget.nextRenderedWidget);\n                bodyWidget.nextRenderedWidget.page.bodyWidgets.splice(startindex, 1);\n            }\n            while (!isNullOrUndefined(newBodyWidget.nextRenderedWidget)) {\n                newBodyWidget.nextRenderedWidget.page = newBodyWidget.page;\n                newBodyWidget = newBodyWidget.nextRenderedWidget;\n            }\n            newBodyWidget = temp_NewBody;\n            newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n            this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n            newBodyWidget.sectionFormat.breakCode = 'NewPage';\n        }\n        //Update SectionIndex for splitted body widget\n        if (sectionBreakContinuous) {\n            newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n            this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n            newBodyWidget.sectionFormat.breakCode = 'NoBreak';\n        }\n        if (sectionBreakNewPage) {\n            newBodyWidget.sectionFormat = new WSectionFormat(newBodyWidget);\n            this.viewer.owner.parser.parseSectionFormat(0, bodyWidget.sectionFormat, newBodyWidget.sectionFormat);\n            newBodyWidget.sectionFormat.breakCode = 'NewPage';\n        }\n        this.updateSectionIndex(newBodyWidget.sectionFormat, newBodyWidget, true);\n        if (newBodyWidget.sectionFormat.numberOfColumns > 1) {\n            this.updateColumnIndex(newBodyWidget, false);\n        }\n        // insert New header footer widget in to section index \n        if (this.editorHistory && !this.editorHistory.isUndoing) {\n            this.insertRemoveHeaderFooter(newBodyWidget.sectionIndex, true);\n        }\n        // if (this.documentHelper.viewer instanceof PageLayoutViewer) {\n        //     //update header and footer for splitted widget\n        //     this.documentHelper.layout.layoutHeaderFooter(newBodyWidget, this.owner.viewer as PageLayoutViewer, newBodyWidget.page);\n        // }\n        //Update Child item index from 0 for new Section\n        this.updateBlockIndex(0, newBodyWidget.firstChild);\n        // Start sinfting from first block\n        this.owner.viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n        return newBodyWidget;\n    };\n    Editor.prototype.insertRemoveHeaderFooter = function (sectionIndex, insert) {\n        if (this.documentHelper.headersFooters[sectionIndex]) {\n            // Need to handle further\n            this.documentHelper.headersFooters.splice(sectionIndex, 0, {});\n        }\n        else {\n            this.documentHelper.headersFooters[sectionIndex] = {};\n        }\n    };\n    Editor.prototype.updateBlockIndex = function (blockIndex, block) {\n        var blocks;\n        var sectionIndex = block.bodyWidget.sectionIndex;\n        do {\n            blocks = block.getSplitWidgets();\n            for (var i = 0; i < blocks.length; i++) {\n                blocks[i].index = blockIndex;\n            }\n            blockIndex++;\n            block = blocks.pop().nextRenderedWidget;\n        } while (!isNullOrUndefined(block) && block.bodyWidget.sectionIndex === sectionIndex);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateSectionIndex = function (sectionFormat, startBodyWidget, increaseIndex) {\n        var currentSectionIndex = startBodyWidget.sectionIndex;\n        var blockIndex = 0;\n        var bodyWidget = startBodyWidget;\n        do {\n            if (bodyWidget.index === currentSectionIndex && sectionFormat) {\n                bodyWidget.sectionFormat = sectionFormat;\n            }\n            if (increaseIndex) {\n                bodyWidget.index++;\n            }\n            else {\n                bodyWidget.index--;\n            }\n            bodyWidget = bodyWidget.nextRenderedWidget;\n        } while (bodyWidget);\n    };\n    /**\n    * @private\n    * @returns {void}\n    */\n    Editor.prototype.updateColumnIndex = function (startBodyWidget, increaseIndex) {\n        var bodyWidget = startBodyWidget;\n        do {\n            if (!increaseIndex && bodyWidget.columnIndex === 0) {\n                break;\n            }\n            if (increaseIndex) {\n                bodyWidget.columnIndex++;\n            }\n            else {\n                bodyWidget.columnIndex--;\n            }\n            if (!isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.sectionIndex !== bodyWidget.nextRenderedWidget.sectionIndex) {\n                break;\n            }\n            bodyWidget = bodyWidget.nextRenderedWidget;\n        } while (bodyWidget);\n    };\n    //Auto convert List\n    Editor.prototype.checkAndConvertList = function (selection, isTab) {\n        var list = selection.paragraphFormat.getList();\n        if (!isNullOrUndefined(list) || selection.start.paragraph.containerWidget instanceof FootNoteWidget) {\n            return false;\n        }\n        var convertList = false;\n        var isLeadingZero = false;\n        var indexInInline = 0;\n        var inlineObj = selection.start.currentWidget.getInline(selection.start.offset - 1, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!(inline instanceof TextElementBox)) {\n            return false;\n        }\n        var span = inline;\n        var text = span.text.substring(0, indexInInline);\n        var tabValue = 0;\n        var length = 0;\n        while (!isNullOrUndefined(span.previousNode)) {\n            if (span.previousNode instanceof TextElementBox && (span.previousNode.text === '\\t' || span.previousNode.text.trim().length === 0)) {\n                (span.previousNode.text === '\\t') ? tabValue += 36 : length = span.previousNode.text.length * 2.5;\n                span = span.previousNode;\n                continue;\n            }\n            return false;\n        }\n        span = inline;\n        var index = 0;\n        var tabIndex = text.lastIndexOf('\\t');\n        index = (tabIndex >= 0) ? tabIndex + 1 : text.lastIndexOf(' ') + 1;\n        while (span.previousNode instanceof TextElementBox && index === 0) {\n            span = span.previousNode;\n            var previousText = span.text;\n            tabIndex = previousText.lastIndexOf('\\t');\n            index = (tabIndex >= 0) ? tabIndex + 1 : previousText.lastIndexOf(' ') + 1;\n            text = span.text + text;\n            text = text.substring(index);\n        }\n        text = HelperMethods.trimStart(text);\n        var numberFormat = text.substring(1, 2);\n        var previousList = undefined;\n        var listLevelPattern = this.getListLevelPattern(text.substring(0, 1));\n        if (listLevelPattern !== 'None' && this.checkNumberFormat(numberFormat, listLevelPattern === 'Bullet', text)) {\n            convertList = true;\n        }\n        else if (this.checkLeadingZero(text)) {\n            isLeadingZero = true;\n            convertList = true;\n        }\n        else {\n            previousList = this.checkNextLevelAutoList(text);\n            if (!isNullOrUndefined(previousList)) {\n                convertList = true;\n            }\n        }\n        if (convertList && listLevelPattern === 'Bullet' && inline.text === '- ' && (!isNullOrUndefined(inline.paragraph.previousWidget) && !(inline.paragraph.previousWidget.firstChild.children[0] instanceof ListTextElementBox))) {\n            convertList = false;\n        }\n        if (convertList) {\n            this.initComplexHistory('AutoList');\n            var paragraph = inline.paragraph;\n            selection.start.setPositionParagraph(paragraph.childWidgets[0], paragraph.childWidgets[0].getOffset(inline, indexInInline + 1));\n            selection.end.setPositionParagraph(paragraph.childWidgets[0], 0);\n            this.initHistory('Delete');\n            this.deleteSelectedContents(selection, false);\n            this.reLayout(selection, false);\n            var followCharacter = isTab ? 'Tab' : 'Space';\n            numberFormat = !isLeadingZero ? '%1' + numberFormat : '%1' + text.substring(text.length - 1, text.length);\n            var leadingZeroText = text.substring(text.length - 3, text.length - 1);\n            listLevelPattern = !isLeadingZero ? listLevelPattern : this.getListLevelPattern(leadingZeroText);\n            var listLevel = new WListLevel(undefined);\n            listLevel.listLevelPattern = listLevelPattern;\n            if (listLevelPattern === 'Bullet') {\n                if (text === '*') {\n                    listLevel.numberFormat = String.fromCharCode(61623);\n                    listLevel.characterFormat.fontFamily = 'Symbol';\n                }\n                else if (text === '-') {\n                    listLevel.numberFormat = '-';\n                }\n            }\n            else {\n                listLevel.numberFormat = numberFormat;\n            }\n            listLevel.followCharacter = followCharacter;\n            var leftIndent = selection.paragraphFormat.leftIndent;\n            if (tabValue !== 0 || length !== 0) {\n                listLevel.paragraphFormat.leftIndent = leftIndent + 18 + tabValue + length;\n            }\n            else if (indexInInline > 2) {\n                listLevel.paragraphFormat.leftIndent = leftIndent + (indexInInline - 2) * 2.5 + 18;\n            }\n            else if (leftIndent > 0) {\n                listLevel.paragraphFormat.leftIndent = leftIndent + 18;\n            }\n            else {\n                listLevel.paragraphFormat.leftIndent = 36;\n            }\n            listLevel.paragraphFormat.firstLineIndent = -18;\n            if ((!isLeadingZero && text.substring(0, 1) === '0') || leadingZeroText === '00') {\n                listLevel.startAt = 0;\n            }\n            else {\n                listLevel.startAt = 1;\n            }\n            if (!isNullOrUndefined(previousList)) {\n                selection.paragraphFormat.setList(previousList);\n            }\n            else {\n                this.autoConvertList(selection, listLevel);\n            }\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n                this.editorHistory.updateComplexHistory();\n            }\n            else {\n                this.reLayout(selection);\n            }\n        }\n        return convertList;\n    };\n    Editor.prototype.checkNextLevelAutoList = function (text) {\n        var selection = this.documentHelper.selection;\n        var previousList = undefined;\n        var convertList = false;\n        var currentParagraph = selection.start.paragraph;\n        var prevParagraph = selection.getPreviousParagraphBlock(currentParagraph);\n        while (!isNullOrUndefined(prevParagraph) && prevParagraph instanceof ParagraphWidget) {\n            if (prevParagraph.paragraphFormat.listFormat && prevParagraph.paragraphFormat.listFormat.listId !== -1) {\n                var levelNumber = prevParagraph.paragraphFormat.listFormat.listLevelNumber;\n                convertList = this.isConvertList(text, prevParagraph);\n                if (convertList) {\n                    this.listLevelNumber = levelNumber;\n                    this.isAutoList = true;\n                    break;\n                }\n            }\n            prevParagraph = selection.getPreviousParagraphBlock(prevParagraph, true);\n        }\n        if (convertList) {\n            previousList = this.documentHelper.getListById(prevParagraph.paragraphFormat.listFormat.listId);\n        }\n        return previousList;\n    };\n    Editor.prototype.isConvertList = function (text, paragraph) {\n        var convertList = false;\n        var listNumber = this.documentHelper.layout.getListNumber(paragraph.paragraphFormat.listFormat, true);\n        var prevListText = listNumber.substring(0, listNumber.length - 1);\n        var currentListText = text.substring(0, text.length - 1);\n        //check if numberFormat equal\n        var inputString;\n        if (listNumber.substring(listNumber.length - 1) !== text.substring(text.length - 1)) {\n            convertList = false;\n        }\n        else if (currentListText.match(/^[0-9]+$/) && prevListText.match(/^[0-9]+$/)) {\n            inputString = parseInt(currentListText, 10);\n            if (parseInt(prevListText, 10) === inputString || parseInt(prevListText, 10) + 1 === inputString\n                || parseInt(prevListText, 10) + 2 === inputString) {\n                convertList = true;\n            }\n        }\n        else if (currentListText.match(/^[a-zA-Z]+$/) && prevListText.match(/^[a-zA-Z]+$/)) {\n            if (prevListText.charCodeAt(0) === text.charCodeAt(0) || prevListText.charCodeAt(0) + 1 === text.charCodeAt(0)\n                || prevListText.charCodeAt(0) + 2 === text.charCodeAt(0)) {\n                convertList = true;\n            }\n            else if (currentListText.match(/^[MDCLXVImdclxvi]+$/) && prevListText.match(/^[MDCLXVImdclxvi]+$/)) {\n                var prevListNumber = this.getNumber(prevListText.toUpperCase());\n                var currentListNumber = this.getNumber(currentListText.toUpperCase());\n                if (prevListNumber === currentListNumber || prevListNumber + 1 === currentListNumber\n                    || prevListNumber + 2 === currentListNumber) {\n                    convertList = true;\n                }\n            }\n        }\n        return convertList;\n    };\n    Editor.prototype.getNumber = function (roman) {\n        var conversion = { 'M': 1000, 'D': 500, 'C': 100, 'L': 50, 'X': 10, 'V': 5, 'I': 1 };\n        var arr = roman.split('');\n        var num = 0;\n        for (var i = 0; i < arr.length; i++) {\n            var currentValue = conversion[arr[i]];\n            var nextValue = conversion[arr[i + 1]];\n            if (currentValue < nextValue) {\n                num -= (currentValue);\n            }\n            else {\n                num += (currentValue);\n            }\n        }\n        return num;\n    };\n    Editor.prototype.getListLevelPattern = function (value) {\n        switch (value) {\n            case '0':\n            case '1':\n                return 'Arabic';\n            case 'I':\n                return 'UpRoman';\n            case 'i':\n                return 'LowRoman';\n            case 'A':\n                return 'UpLetter';\n            case 'a':\n                return 'LowLetter';\n            case '*':\n            case '-':\n                return 'Bullet';\n            case '00':\n            case '01':\n                return 'LeadingZero';\n            default:\n                return 'None';\n        }\n    };\n    Editor.prototype.autoConvertList = function (selection, listLevel) {\n        var start = selection.start;\n        if (!selection.isForward) {\n            start = selection.end;\n        }\n        var newList = new WList();\n        if (this.documentHelper.lists.length > 0) {\n            newList.listId = this.documentHelper.lists[this.documentHelper.lists.length - 1].listId + 1;\n        }\n        else {\n            newList.listId = 0;\n        }\n        var newAbstractList = new WAbstractList();\n        var layout = this.documentHelper;\n        if (layout.abstractLists.length > 0) {\n            newAbstractList.abstractListId = layout.abstractLists[layout.abstractLists.length - 1].abstractListId + 1;\n        }\n        else {\n            newAbstractList.abstractListId = 0;\n        }\n        newList.abstractListId = newAbstractList.abstractListId;\n        newList.abstractList = newAbstractList;\n        newList.nsid = newAbstractList.nsid = HelperMethods.generateUniqueId(layout.lists);\n        layout.abstractLists.push(newAbstractList);\n        newAbstractList.levels.push(listLevel);\n        listLevel.ownerBase = newAbstractList;\n        selection.paragraphFormat.setList(newList);\n        selection.paragraphFormat.listLevelNumber = 0;\n    };\n    Editor.prototype.checkNumberFormat = function (numberFormat, isBullet, text) {\n        if (isBullet) {\n            return numberFormat === '';\n        }\n        else {\n            var index = text.indexOf(numberFormat);\n            return (numberFormat === '.' || numberFormat === ')'\n                || numberFormat === '>' || numberFormat === '-') && text.substring(index, text.length - 1) === '';\n        }\n    };\n    Editor.prototype.checkLeadingZero = function (text) {\n        var j;\n        var isZero = false;\n        for (var i = 0; i <= text.length - 1; i++) {\n            if (text.charAt(i) === '0') {\n                isZero = true;\n                continue;\n            }\n            j = i;\n            break;\n        }\n        var numberFormat = undefined;\n        if (text.charAt(j) === '1') {\n            numberFormat = text.charAt(j + 1);\n        }\n        else {\n            numberFormat = text.charAt(j);\n        }\n        return isZero && this.checkNumberFormat(numberFormat, false, text);\n    };\n    Editor.prototype.getPageFromBlockWidget = function (block) {\n        var page = undefined;\n        if (block.containerWidget instanceof BodyWidget) {\n            page = block.containerWidget.page;\n        }\n        else if (block.containerWidget instanceof HeaderFooterWidget) {\n            page = block.containerWidget.page;\n        }\n        else if (block.containerWidget instanceof TableCellWidget) {\n            page = block.containerWidget.bodyWidget.page;\n        }\n        return page;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertTextInline = function (element, selection, text, index, skipReLayout) {\n        if (element instanceof TextElementBox) {\n            element.text = HelperMethods.insert(element.text, index, text);\n            if (this.owner.enableTrackChanges) {\n                var revision = element.revisions[0];\n                if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                    this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(undefined, undefined, revision));\n                }\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            }\n            var paragraph = element.line.paragraph;\n            var lineIndex = paragraph.childWidgets.indexOf(element.line);\n            var elementIndex = element.line.children.indexOf(element);\n            if (element instanceof TextElementBox && element.text.length > 90) {\n                // Here, the text is split based on the maximum character length of 90.\n                HelperMethods.splitWordByMaxLength(element, element.line);\n            }\n            if (isNullOrUndefined(skipReLayout) || !skipReLayout) {\n                this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex, element.line.paragraph.bidi);\n            }\n        }\n        else if (element instanceof ImageElementBox) {\n            this.insertImageText(element, selection, text, index);\n        }\n        else if (element instanceof FieldElementBox) {\n            if (element.fieldType === 0) {\n                this.insertFieldBeginText(element, selection, text, index);\n            }\n            else if (element.fieldType === 2) {\n                this.insertFieldSeparatorText(element, selection, text, index);\n            }\n            else {\n                this.insertFieldEndText(element, selection, text, index);\n            }\n        }\n        else if (element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox\n            || element instanceof EditRangeEndElementBox) {\n            this.insertBookMarkText(element, text);\n        }\n    };\n    Editor.prototype.insertFieldBeginText = function (fieldBegin, selection, text, index) {\n        var spanObj = new TextElementBox();\n        spanObj.text = text;\n        var lineIndex = fieldBegin.line.paragraph.childWidgets.indexOf(fieldBegin.line);\n        var spanIndex = fieldBegin.line.children.indexOf(fieldBegin);\n        if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n            spanIndex++;\n        }\n        spanObj.characterFormat.copyFormat(fieldBegin.characterFormat);\n        fieldBegin.line.children.splice(spanIndex, 0, spanObj);\n        spanObj.line = fieldBegin.line;\n        this.documentHelper.layout.reLayoutParagraph(fieldBegin.line.paragraph, lineIndex, spanIndex);\n    };\n    Editor.prototype.insertBookMarkText = function (element, text) {\n        var spanObj = new TextElementBox();\n        spanObj.text = text;\n        var lineIndex = element.line.paragraph.childWidgets.indexOf(element.line);\n        var spanIndex = element.line.children.indexOf(element);\n        spanObj.characterFormat.copyFormat(element.characterFormat);\n        if (element instanceof EditRangeEndElementBox || element instanceof BookmarkElementBox) {\n            element.line.children.splice(spanIndex, 0, spanObj);\n        }\n        else {\n            element.line.children.splice(spanIndex + 1, 0, spanObj);\n        }\n        spanObj.line = element.line;\n        this.documentHelper.layout.reLayoutParagraph(element.line.paragraph, lineIndex, spanIndex);\n    };\n    Editor.prototype.insertFieldSeparatorText = function (fieldSeparator, selection, text, index) {\n        var previousInline = selection.getPreviousTextInline(fieldSeparator);\n        var nextInline = selection.getNextTextInline(fieldSeparator);\n        var span = new TextElementBox();\n        span.text = text;\n        var spanIndex = fieldSeparator.line.children.indexOf(fieldSeparator);\n        if (index === fieldSeparator.length) {\n            spanIndex++;\n        }\n        if (isNullOrUndefined(previousInline) && isNullOrUndefined(nextInline)) {\n            span.characterFormat.copyFormat(fieldSeparator.line.paragraph.characterFormat);\n        }\n        else if (isNullOrUndefined(previousInline)) {\n            span.characterFormat.copyFormat(nextInline.characterFormat);\n        }\n        else {\n            if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n                var temp = this.getCharacterFormat(this.selection);\n                span.characterFormat.copyFormat(temp);\n            }\n            else {\n                span.characterFormat.copyFormat(previousInline.characterFormat);\n            }\n        }\n        fieldSeparator.line.children.splice(spanIndex, 0, span);\n        span.line = fieldSeparator.line;\n        var lineIndex = fieldSeparator.line.paragraph.childWidgets.indexOf(fieldSeparator.line);\n        this.documentHelper.layout.reLayoutParagraph(fieldSeparator.line.paragraph, lineIndex, spanIndex);\n    };\n    Editor.prototype.insertFieldEndText = function (fieldEnd, selection, text, index) {\n        var span = new TextElementBox();\n        span.text = text;\n        var spanIndex = fieldEnd.line.children.indexOf(fieldEnd);\n        span.characterFormat.copyFormat(fieldEnd.characterFormat);\n        if (selection.isInlineFormFillMode() && index == 0) {\n            // special case to insert text before fieldEnd while filling a text form field.\n            // when spell check enabled the white space and charaters are inserted as saperate text element box and getInline returns fieldEnd with index 0\n            fieldEnd.line.children.splice(spanIndex, 0, span);\n        }\n        else {\n            fieldEnd.line.children.splice(spanIndex + 1, 0, span);\n        }\n        span.line = fieldEnd.line;\n        var lineIndex = fieldEnd.line.paragraph.childWidgets.indexOf(fieldEnd.line);\n        if (this.owner.enableTrackChanges) {\n            var isBidi = this.documentHelper.textHelper.getRtlLanguage(text).isRtl;\n            var revisionType = 'Insertion';\n            var isRevisionCombined = this.checkToMapRevisionWithInlineText(fieldEnd, index, span, isBidi, revisionType);\n            if (!isRevisionCombined && span.revisions.length === 0) {\n                isRevisionCombined = this.checkToMapRevisionWithNextNode(fieldEnd.nextNode, span, isBidi, revisionType);\n            }\n        }\n        this.documentHelper.layout.reLayoutParagraph(fieldEnd.line.paragraph, lineIndex, spanIndex);\n    };\n    Editor.prototype.insertImageText = function (image, selection, text, index) {\n        var previousInlineObj = selection.getPreviousTextInline(image);\n        var nextInlineObj = selection.getNextTextInline(image);\n        var line = image.line;\n        var element = new TextElementBox();\n        var paragraph = line.paragraph;\n        var lineIndex = paragraph.childWidgets.indexOf(line);\n        element.text = text;\n        var spanIndex = line.children.indexOf(image);\n        if (index === image.length) {\n            spanIndex++;\n        }\n        if (isNullOrUndefined(previousInlineObj) && isNullOrUndefined(nextInlineObj)) {\n            element.characterFormat.copyFormat(paragraph.characterFormat);\n        }\n        else if (isNullOrUndefined(previousInlineObj)) {\n            element.characterFormat.copyFormat(nextInlineObj.characterFormat);\n        }\n        else {\n            element.characterFormat.copyFormat(previousInlineObj.characterFormat);\n        }\n        line.children.splice(spanIndex, 0, element);\n        element.line = line;\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, spanIndex);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.isListTextSelected = function () {\n        if (this.documentHelper.isListTextSelected) {\n            this.initComplexHistory('ListSelect');\n            if (this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat && this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat.listId !== -1) {\n                this.onApplyList(undefined);\n            }\n        }\n    };\n    //Auto Format and insert Hyperlink Implementation starts\n    Editor.prototype.checkAndConvertToHyperlink = function (selection, isEnter, paragraph) {\n        var text;\n        var span;\n        if (isEnter) {\n            span = paragraph.lastChild.children[paragraph.lastChild.children.length - 1];\n            text = span.text;\n        }\n        else {\n            var indexInInline = 0;\n            var inlineObj = selection.start.currentWidget.getInline(selection.start.offset - 1, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!(inline instanceof TextElementBox)) {\n                return;\n            }\n            span = inline;\n            text = span.text.substring(0, indexInInline);\n        }\n        var index = 0;\n        var tabCharIndex = text.lastIndexOf('\\t');\n        index = (tabCharIndex >= 0) ? tabCharIndex + 1 : text.lastIndexOf(' ') + 1;\n        while (span.previousElement instanceof TextElementBox && index === 0) {\n            span = span.previousNode;\n            var previousText = span.text;\n            tabCharIndex = previousText.lastIndexOf('\\t');\n            index = (tabCharIndex >= 0) ? tabCharIndex + 1 : previousText.lastIndexOf(' ') + 1;\n            text = span.text + text;\n        }\n        text = text.substring(index);\n        var lowerCaseText = text.toLowerCase();\n        var containsURL = false;\n        if (lowerCaseText.substring(0, 8) === 'file:///'\n            || (lowerCaseText.substring(0, 7) === 'http://' && lowerCaseText.length > 7)\n            || (lowerCaseText.substring(0, 8) === 'https://' && lowerCaseText.length > 8)\n            || (lowerCaseText.substring(0, 4) === 'www.' && lowerCaseText.length > 4)\n            || (lowerCaseText.substring(0, 3) === '\\\\' && lowerCaseText.length > 3)\n            || (lowerCaseText.substring(0, 7) === 'mailto:' && lowerCaseText.length > 7)) {\n            containsURL = true;\n            if (lowerCaseText.substring(0, 4) === 'www.' && lowerCaseText.length > 4) {\n                text = 'http://' + text;\n            }\n        }\n        else {\n            var atIndex = text.indexOf('@');\n            var dotIndex = text.indexOf('.');\n            if (atIndex > 0 && atIndex < dotIndex && dotIndex < text.length - 1) {\n                containsURL = true;\n                text = 'mailto:' + text;\n            }\n        }\n        if (containsURL) {\n            var startPos = new TextPosition(this.documentHelper.owner);\n            startPos.setPositionParagraph(span.line, span.line.getOffset(span, index));\n            var endPos = new TextPosition(this.documentHelper.owner);\n            if (isEnter) {\n                endPos.setPositionParagraph(span.line, span.line.getEndOffset());\n            }\n            else {\n                if (selection.end.currentWidget.children.length === 0 && selection.end.offset === 0) {\n                    var prevLine = selection.end.currentWidget.previousLine;\n                    endPos.setPositionParagraph(prevLine, prevLine.getEndOffset());\n                }\n                else {\n                    endPos.setPositionParagraph(selection.end.currentWidget, selection.end.offset - 1);\n                }\n            }\n            this.autoFormatHyperlink(selection, text, startPos, endPos);\n        }\n    };\n    Editor.prototype.autoFormatHyperlink = function (selection, url, startPosition, endPosition) {\n        if (this.owner.enableCollaborativeEditing && this.isRemoteAction) {\n            return;\n        }\n        this.initComplexHistory('AutoFormatHyperlink');\n        var blockInfo = this.selection.getParagraphInfo(startPosition);\n        var start = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.editorHistory.currentHistoryInfo.insertPosition = start;\n        }\n        // Moves the selection to URL text start and end position.\n        selection.start.setPositionInternal(startPosition);\n        selection.end.setPositionInternal(endPosition);\n        // Preserves the character format for hyperlink field.\n        var temp = this.getCharacterFormat(selection);\n        var format = new WCharacterFormat();\n        format.copyFormat(temp);\n        var fieldEnd = this.createHyperlinkElement(url, startPosition, endPosition, format);\n        // Moves the selection to the end of field end position.\n        selection.start.setPositionParagraph(fieldEnd.line, (fieldEnd.line).getOffset(fieldEnd, 1));\n        // Moves to next text position. (To achieve common behavior for space and enter).\n        selection.start.moveNextPosition();\n        selection.end.setPositionInternal(selection.start);\n        blockInfo = this.selection.getParagraphInfo(selection.end);\n        var end = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.editorHistory.currentHistoryInfo.endPosition = end;\n            this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.editorHistory.updateComplexHistory();\n            this.isSkipOperationsBuild = false;\n            this.reLayout(selection);\n        }\n        else {\n            this.updateComplexWithoutHistory(0, start, end);\n        }\n    };\n    Editor.prototype.appylingHyperlinkFormat = function (selection) {\n        this.initHistory('Underline');\n        this.updateCharacterFormatWithUpdate(selection, 'underline', 'Single', false);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.reLayout(selection, false);\n        // Applies font color for field result.\n        this.initHistory('FontColor');\n        this.isForHyperlinkFormat = true;\n        this.updateCharacterFormatWithUpdate(selection, 'fontColor', '#0563c1', false);\n        this.isForHyperlinkFormat = false;\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.reLayout(selection, false);\n    };\n    Editor.prototype.createHyperlinkElement = function (url, startPosition, endPosition, format) {\n        var selection = this.selection;\n        this.documentHelper.layout.allowLayout = false;\n        this.documentHelper.layout.isReplaceAll = true;\n        this.appylingHyperlinkFormat(selection);\n        //this.documentHelper.layout.allowLayout = true;\n        // Adds the field end at the URL text end position.\n        var fieldEnd = new FieldElementBox(1);\n        fieldEnd.characterFormat.copyFormat(format);\n        fieldEnd.line = selection.end.currentWidget;\n        selection.start.setPositionInternal(selection.end);\n        // this.insertElementInCurrentLine(selection, fieldEnd, true);\n        this.initInsertInline(fieldEnd);\n        // Moves the selection to URL text start position.        \n        selection.start.setPositionInternal(startPosition);\n        selection.end.setPositionInternal(selection.start);\n        // Adds field begin, field code and field separator at the URL text start position.\n        var begin = this.insertHyperlinkfield(selection, format, url);\n        var lineIndex = selection.start.paragraph.childWidgets.indexOf(begin.line);\n        var index = begin.line.children.indexOf(begin);\n        fieldEnd.linkFieldCharacter(this.documentHelper);\n        this.documentHelper.layout.isReplaceAll = false;\n        this.documentHelper.layout.allowLayout = true;\n        this.documentHelper.layout.reLayoutParagraph(selection.start.paragraph, lineIndex, index);\n        return fieldEnd;\n    };\n    Editor.prototype.insertHyperlinkfield = function (selection, format, url, isBookmark) {\n        // Adds field begin, field code and field separator at the URL text start position.\n        var begin = new FieldElementBox(0);\n        begin.characterFormat.copyFormat(format);\n        begin.line = selection.start.currentWidget;\n        this.initInsertInline(begin);\n        var span = new TextElementBox();\n        span.characterFormat.copyFormat(format);\n        if (isBookmark) {\n            span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n        }\n        else {\n            span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n        }\n        span.line = selection.start.currentWidget;\n        this.initInsertInline(span);\n        var separator = new FieldElementBox(2);\n        separator.characterFormat.copyFormat(format);\n        separator.line = selection.start.currentWidget;\n        this.initInsertInline(separator);\n        return begin;\n    };\n    /**\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.unlinkRangeFromRevision = function (inline, removeCollection) {\n        for (var i = 0; i < inline.revisions.length; i++) {\n            var currentRevision = inline.revisions[i];\n            var rangeIndex = currentRevision.range.indexOf(inline);\n            if (rangeIndex >= 0) {\n                currentRevision.range.splice(rangeIndex, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n            }\n            if (currentRevision.range.length === 0 && removeCollection) {\n                this.owner.revisions.remove(currentRevision);\n                if (this.isRemoveRevision && this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n                    this.documentHelper.revisionsInternal.remove(currentRevision.revisionID);\n                    this.owner.trackChangesPane.updateTrackChanges();\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.unlinkWholeRangeInRevision = function (item, revision) {\n        var currentRevision = revision;\n        item.revisions.splice(item.revisions.indexOf(item), 1);\n        var rangeLength = currentRevision.range.length;\n        for (var rangeIndex = 0; rangeIndex < rangeLength; rangeIndex++) {\n            currentRevision.range.splice(0, 1);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n        if (currentRevision.range.length === 0) {\n            this.owner.revisions.remove(currentRevision);\n            if (this.isRemoveRevision && this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n                this.documentHelper.revisionsInternal.remove(currentRevision.revisionID);\n                this.owner.trackChangesPane.updateTrackChanges();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.unLinkFieldCharacter = function (inline) {\n        if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n            if (inline.fieldEnd) {\n                if (this.documentHelper) {\n                    this.documentHelper.fieldToLayout = inline;\n                    this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n                }\n                // inline.line.paragraph.addFieldCharacter(inline.fieldEnd);\n                if (inline.fieldEnd) {\n                    inline.fieldEnd.fieldBegin = undefined;\n                }\n                inline.fieldEnd = undefined;\n            }\n        }\n        if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n            if (!isNullOrUndefined(inline.fieldEnd)) {\n                if (this.documentHelper) {\n                    this.documentHelper.fieldToLayout = inline.fieldBegin;\n                    this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n                }\n                inline.fieldBegin.fieldSeparator = undefined;\n                inline.fieldEnd.fieldSeparator = undefined;\n            }\n        }\n        else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n            if (inline.fieldBegin) {\n                if (!isNullOrUndefined(this.documentHelper)) {\n                    this.documentHelper.fieldToLayout = inline.fieldBegin;\n                    this.documentHelper.fieldEndParagraph = inline.line.paragraph;\n                }\n                var fieldIndex = this.documentHelper.fields.indexOf(inline.fieldBegin);\n                if (fieldIndex !== -1) {\n                    this.documentHelper.fields.splice(fieldIndex, 1);\n                }\n                var formFieldIndex = this.documentHelper.formFields.indexOf(inline.fieldBegin);\n                if (formFieldIndex !== -1) {\n                    this.documentHelper.formFields.splice(formFieldIndex, 1);\n                }\n                inline.fieldBegin.fieldEnd = undefined;\n                inline.fieldBegin = undefined;\n            }\n        }\n    };\n    Editor.prototype.getCharacterFormat = function (selection) {\n        if (selection.start.paragraph.isEmpty()) {\n            return selection.start.paragraph.characterFormat;\n        }\n        else {\n            var info = selection.start.currentWidget.getInline(selection.start.offset + 1, 0);\n            return info.element.characterFormat;\n        }\n    };\n    /**\n     * Inserts the Hyperlink.\n     *\n     * @param {string} address Specify the Hyperlink URL to be inserted.\n     * @param {string} displayText Specify the display text for the hyperlink\n     * @param {string} screenTip Specify the screen tip text.\n     * @returns {void}\n     */\n    Editor.prototype.insertHyperlink = function (address, displayText, screenTip) {\n        if (HelperMethods.startsWith(address, 'http://') || HelperMethods.startsWith(address, 'https://')) {\n            address = address.replace(/\\s/g, \"\");\n        }\n        if (isNullOrUndefined(displayText)) {\n            displayText = address;\n        }\n        if (!isNullOrUndefined(screenTip)) {\n            address = address + '\\\" \\\\o \\\"' + screenTip;\n        }\n        this.insertHyperlinkInternal(address, displayText, this.owner.selectionModule.text !== displayText, false);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.insertHyperlinkInternal = function (url, displayText, remove, isBookmark) {\n        var selection = this.documentHelper.selection;\n        if (selection.start.paragraph.associatedCell !== selection.end.paragraph.associatedCell) {\n            return;\n        }\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        // if selection end is covering paraMark exclude paraMark\n        if (endPosition.offset == endPosition.paragraph.getLength() + 1) {\n            endPosition.movePreviousPosition();\n        }\n        if (remove) {\n            //Empty selection Hyperlink insert\n            this.insertHyperlinkInternalInternal(selection, url, displayText, isBookmark);\n        }\n        else {\n            this.documentHelper.layout.allowLayout = false;\n            //Non-Empty Selection- change the selected text to Field       \n            // this.preservedFontCol = this.getFontColor();\n            var fieldStartPosition = new TextPosition(this.documentHelper.owner);\n            fieldStartPosition.setPositionInternal(startPosition);\n            var temp = this.getCharacterFormat(selection);\n            var format = new WCharacterFormat(undefined);\n            format.copyFormat(temp);\n            this.initComplexHistory('InsertHyperlink');\n            var blockInfo = this.selection.getParagraphInfo(startPosition);\n            var start = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n                this.editorHistory.currentHistoryInfo.insertPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            }\n            this.appylingHyperlinkFormat(selection);\n            startPosition.setPositionInternal(endPosition);\n            // Adds the field end at the URL text end position.\n            var fieldEnd = new FieldElementBox(1);\n            fieldEnd.characterFormat.copyFormat(format);\n            fieldEnd.line = selection.end.currentWidget;\n            startPosition.setPositionInternal(endPosition);\n            // this.insertElementInCurrentLine(selection, fieldEnd, true);\n            this.initInsertInline(fieldEnd);\n            // Moves the selection to URL text start position.        \n            startPosition.setPositionInternal(fieldStartPosition);\n            endPosition.setPositionInternal(startPosition);\n            // Adds field begin, field code and field separator at the URL text start position.\n            var begin = this.insertHyperlinkfield(selection, format, url, isBookmark);\n            fieldEnd.linkFieldCharacter(this.documentHelper);\n            var lineIndex = selection.start.paragraph.childWidgets.indexOf(begin.line);\n            var index = begin.line.children.indexOf(begin);\n            this.documentHelper.layout.allowLayout = true;\n            this.documentHelper.layout.reLayoutParagraph(selection.start.paragraph, lineIndex, index);\n            var lineWidget = fieldEnd.line;\n            selection.selects(lineWidget, lineWidget.getOffset(fieldEnd, fieldEnd.length), true);\n            blockInfo = this.selection.getParagraphInfo(endPosition);\n            var end = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n                this.editorHistory.currentHistoryInfo.endPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n                this.editorHistory.updateComplexHistory();\n            }\n            else {\n                this.updateComplexWithoutHistory(1, start, end);\n            }\n        }\n    };\n    Editor.prototype.insertHyperlinkInternalInternal = function (selection, url, displayText, isBookmark) {\n        if (isNullOrUndefined(selection.start)) {\n            return;\n        }\n        if (this.editHyperlink(selection, url, displayText)) {\n            return;\n        }\n        var commentStarts = this.checkAndRemoveComments();\n        // Preserves the character format for hyperlink field.\n        var temp = this.getCharacterFormat(selection);\n        this.initHistory('InsertHyperlink');\n        var isRemoved = true;\n        if (!selection.isEmpty) {\n            var isTrackEnabled = this.owner.enableTrackChanges;\n            this.owner.enableTrackChanges = false;\n            isRemoved = this.removeSelectedContents(selection);\n            this.owner.enableTrackChanges = isTrackEnabled;\n        }\n        if (isRemoved) {\n            var format = new WCharacterFormat();\n            format.copyFormat(temp);\n            this.insertHyperlinkByFormat(selection, url, displayText, format, isBookmark);\n        }\n        this.updateHistoryForComments(commentStarts);\n    };\n    Editor.prototype.insertHyperlinkByFormat = function (selection, url, displayText, format, isBookmark) {\n        this.updateInsertPosition();\n        selection.owner.isShiftingEnabled = true;\n        var indexInInline = 0;\n        //let initial: number = indexInInline;\n        var element = [];\n        var fieldBegin = new FieldElementBox(0);\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n        }\n        element.push(fieldBegin);\n        var span = new TextElementBox();\n        if (isBookmark) {\n            span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n        }\n        else {\n            span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n        }\n        element.push(span);\n        var fieldSeparator = new FieldElementBox(2);\n        element.push(fieldSeparator);\n        if (!isNullOrUndefined(displayText) && displayText !== '') {\n            span = new TextElementBox();\n            span.characterFormat.copyFormat(format);\n            span.characterFormat.underline = 'Single';\n            span.characterFormat.fontColor = '#0563c1';\n            span.text = displayText;\n            element.push(span);\n        }\n        var fieldEnd = new FieldElementBox(1);\n        element.push(fieldEnd);\n        fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n        fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n        fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n        this.insertElement(element);\n        //let paragraph: ParagraphWidget = selection.start.paragraph;\n        fieldEnd.linkFieldCharacter(this.documentHelper);\n        if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n            this.documentHelper.fields.push(fieldBegin);\n        }\n        //let offset: number = fieldEnd.line.getOffset(fieldEnd, 1);\n        selection.selects(fieldEnd.line, fieldEnd.line.getOffset(fieldEnd, fieldEnd.length), true);\n        this.updateEndPosition();\n        this.reLayout(selection, true);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.initInsertInline = function (element, insertHyperlink, isInsertRemovedBookamrk) {\n        var selection = this.selection;\n        var isSelectionUpdated = false;\n        // if (!this.isInsertingTOC && isInsertRemovedBookamrk && element instanceof BookmarkElementBox) {\n        //     selection.start.offset--;\n        //     selection.end.offset--;\n        //     isSelectionUpdated = true;\n        // }\n        this.initHistory('InsertInline');\n        this.insertInlineInSelection(selection, element);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        // if (isSelectionUpdated) {\n        //     selection.start.offset++;\n        //     selection.end.offset++;\n        // }\n    };\n    Editor.prototype.insertElementInCurrentLine = function (selection, inline) {\n        if (this.checkIsNotRedoing()) {\n            selection.owner.isShiftingEnabled = true;\n        }\n        if (!selection.isEmpty) {\n            this.removeSelectedContents(selection);\n        }\n        this.updateInsertPosition();\n        this.insertElement([inline]);\n        if (this.checkEndPosition(selection)) {\n            this.updateHistoryPosition(selection.start, false);\n        }\n        this.fireContentChange();\n    };\n    /**\n     * Edit Hyperlink\n     * @param {Selection} selection - Specified the selection\n     * @param {string} url - Specifies the url\n     * @param {string} displayText - Specified the display test\n     * @param {boolean} isBookmark - Specifies is bookmark\n     * @private\n     * @returns {boolean} - Return tru of hyperlink is edited.\n     */\n    Editor.prototype.editHyperlink = function (selection, url, displayText, isBookmark) {\n        var fieldBegin = selection.getHyperlinkField();\n        if (isNullOrUndefined(fieldBegin)) {\n            return false;\n        }\n        this.initHistory('InsertHyperlink');\n        this.editHyperlinkInternal = isNullOrUndefined(this.editorHistory)\n            || (this.editorHistory && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo));\n        var fieldResult = '';\n        var isNestedField = false;\n        // Preserves the character format for hyperlink field.\n        var temp = this.getCharacterFormat(selection);\n        var format = new WCharacterFormat();\n        format.copyFormat(temp);\n        var fieldSeparator = undefined;\n        if (!isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            fieldSeparator = fieldBegin.fieldSeparator;\n            var fieldObj = selection.getHyperlinkDisplayText(fieldBegin.fieldSeparator.line.paragraph, fieldBegin.fieldSeparator, fieldBegin.fieldEnd, isNestedField, format);\n            fieldResult = fieldObj.displayText;\n            isNestedField = fieldObj.isNestedField;\n            format = fieldObj.format;\n        }\n        var offset = fieldBegin.line.getOffset(fieldBegin, 0);\n        selection.start.setPositionParagraph(fieldBegin.line, offset);\n        offset = fieldBegin.fieldEnd.line.getOffset(fieldBegin.fieldEnd, 1);\n        selection.end.setPositionParagraph(fieldBegin.fieldEnd.line, offset);\n        this.skipFieldDeleteTracking = true;\n        this.deleteSelectedContents(selection, false);\n        if (!isNestedField && fieldResult !== displayText || isNullOrUndefined(fieldSeparator)) {\n            this.insertHyperlinkByFormat(selection, url, displayText, format, isBookmark);\n            this.skipFieldDeleteTracking = false;\n        }\n        else {\n            //Modify the new hyperlink url. Inserts field begin, url and field separator.\n            this.updateInsertPosition();\n            var newFieldBegin = new FieldElementBox(0);\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.fieldBegin = newFieldBegin;\n                this.editorHistory.currentBaseHistoryInfo.isEditHyperlink = true;\n            }\n            newFieldBegin.characterFormat.copyFormat(fieldBegin.characterFormat);\n            newFieldBegin.line = selection.start.currentWidget;\n            this.insertInlineInternal(newFieldBegin);\n            var span = new TextElementBox();\n            span.characterFormat.copyFormat(fieldBegin.characterFormat);\n            if (isBookmark) {\n                span.text = ' HYPERLINK \\\\l \\\"' + url + '\\\" ';\n            }\n            else {\n                span.text = ' HYPERLINK \\\"' + url + '\\\" ';\n            }\n            span.line = selection.start.currentWidget;\n            this.insertInlineInternal(span);\n            var nodes = this.editorHistory && this.editorHistory.currentBaseHistoryInfo ?\n                this.editorHistory.currentBaseHistoryInfo.removedNodes : this.nodes;\n            this.insertClonedFieldResult(selection, nodes, fieldSeparator);\n            var fieldEnd = selection.end.currentWidget.getInline(selection.end.offset, 0).element;\n            fieldEnd.linkFieldCharacter(this.documentHelper);\n            this.skipFieldDeleteTracking = false;\n            var paragraph = newFieldBegin.line.paragraph;\n            var lineIndex = newFieldBegin.line.paragraph.childWidgets.indexOf(newFieldBegin.line);\n            var elementIndex = newFieldBegin.line.children.indexOf(newFieldBegin);\n            this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n            offset = newFieldBegin.fieldEnd.line.getOffset(newFieldBegin.fieldEnd, 1);\n            selection.selects(newFieldBegin.fieldEnd.line, offset, true);\n            this.updateEndPosition();\n            this.reLayout(selection, true);\n        }\n        this.editHyperlinkInternal = false;\n        this.nodes = [];\n        return true;\n    };\n    Editor.prototype.insertClonedFieldResult = function (selection, nodes, fieldSeparator) {\n        var fieldEnd;\n        var isStarted = false;\n        for (var i = nodes.length - 1; i > -1; i--) {\n            var node = nodes[i];\n            if (!isStarted) {\n                if (fieldSeparator === node) {\n                    isStarted = true;\n                }\n                else {\n                    if (node instanceof ParagraphWidget && node === fieldSeparator.line.paragraph) {\n                        isStarted = true;\n                        var paragraph = undefined;\n                        if (i === nodes.length - 1) {\n                            paragraph = selection.start.paragraph;\n                            var fieldParagraph = fieldSeparator.line.paragraph;\n                            this.getClonedFieldResultWithSel(fieldParagraph, selection, fieldSeparator);\n                        }\n                        else {\n                            paragraph = this.getClonedFieldResult(fieldSeparator.line.paragraph, fieldSeparator);\n                            this.insertParagraph(paragraph, true);\n                        }\n                        selection.selectParagraphInternal(selection.getNextParagraphBlock(paragraph), true);\n                    }\n                    continue;\n                }\n            }\n            if (node instanceof ElementBox) {\n                this.insertInlineInternal(node.clone());\n            }\n            else if (node instanceof BlockWidget) {\n                this.insertBlock(node.clone());\n            }\n            // else if (node instanceof WSection)\n            //     editor.insertSection((node as WSection)._Clone());\n        }\n    };\n    Editor.prototype.getClonedFieldResultWithSel = function (paragraph, selection, fieldSeparator) {\n        var lineIndex = paragraph.childWidgets.indexOf(fieldSeparator.line);\n        var elementIndex = paragraph.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n        for (var j = lineIndex; j < paragraph.childWidgets.length; j++) {\n            var lineWidget = paragraph.childWidgets[j];\n            if (j !== lineIndex) {\n                elementIndex = 0;\n            }\n            for (var i = elementIndex; i < lineWidget.children.length; i++) {\n                this.insertInlineInternal(lineWidget.children[i].clone());\n            }\n        }\n    };\n    Editor.prototype.getClonedFieldResult = function (curParagraph, fieldSeparator) {\n        var paragraph = new ParagraphWidget();\n        paragraph.characterFormat.copyFormat(curParagraph.characterFormat);\n        paragraph.paragraphFormat.copyFormat(curParagraph.paragraphFormat);\n        var lineIndex = curParagraph.childWidgets.indexOf(fieldSeparator.line);\n        var elementIndex = curParagraph.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n        for (var j = lineIndex; j < curParagraph.childWidgets.length; j++) {\n            var lineWidget = curParagraph.childWidgets[j];\n            if (j !== lineIndex) {\n                elementIndex = 0;\n            }\n            for (var i = elementIndex; i < lineWidget.children.length; i++) {\n                paragraph.childWidgets[0].children.push(lineWidget.children[i]);\n            }\n        }\n        return paragraph;\n    };\n    /**\n     * Removes the hyperlink if selection is within hyperlink.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.removeHyperlink = function () {\n        if (this.owner.isReadOnlyMode) {\n            return;\n        }\n        var selection = this.selection;\n        var fieldBegin = selection.getHyperlinkField();\n        if (isNullOrUndefined(fieldBegin)) {\n            return;\n        }\n        var fieldEnd = fieldBegin.fieldEnd;\n        var fieldSeparator = fieldBegin.fieldSeparator;\n        var fieldStartPosition = new TextPosition(selection.owner);\n        fieldStartPosition.setPositionParagraph(fieldBegin.line, (fieldBegin.line).getOffset(fieldBegin, 0));\n        var blockInfo = this.selection.getParagraphInfo(fieldStartPosition);\n        var fieldStartString = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        var fieldSeparatorPosition = new TextPosition(selection.owner);\n        fieldSeparatorPosition.setPositionParagraph(fieldSeparator.line, (fieldSeparator.line).getOffset(fieldSeparator, fieldSeparator.length));\n        blockInfo = this.selection.getParagraphInfo(fieldSeparatorPosition);\n        var fieldSeparatorString = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        this.initComplexHistory('RemoveHyperlink');\n        selection.start.setPositionParagraph(fieldEnd.line, (fieldEnd.line).getOffset(fieldEnd, 0));\n        blockInfo = this.selection.getParagraphInfo(selection.start);\n        var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        selection.end.setPositionParagraph(fieldEnd.line, (fieldEnd.line).getOffset(fieldEnd, 1));\n        this.delete();\n        selection.start.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(fieldSeparatorString));\n        this.initHistory('Underline');\n        this.updateCharacterFormatWithUpdate(selection, 'underline', 'None', false);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        selection.end.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(startIndex));\n        // Applies font color for field result.\n        this.initHistory('FontColor');\n        this.updateCharacterFormatWithUpdate(selection, 'fontColor', undefined, false);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.reLayout(selection, false);\n        selection.end.setPositionInternal(selection.start);\n        selection.start.setPositionInternal(this.selection.getTextPosBasedOnLogicalIndex(fieldStartString));\n        this.initHistory('Delete');\n        this.deleteSelectedContents(selection, false);\n        this.reLayout(selection, true);\n        // Bug 873011: Combined the field begin and field end revisions to preserve single tracking in track changes pane.\n        this.combineElementRevision(fieldSeparator.revisions, fieldEnd.revisions);\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n            this.editorHistory.updateComplexHistory();\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.updateHyperlinkFormat = function (selection) {\n        var fieldBegin = selection.getHyperlinkField();\n        if (isNullOrUndefined(fieldBegin)) {\n            return;\n        }\n        var fieldEnd = fieldBegin.fieldEnd;\n        var fieldSeparator = fieldBegin.fieldSeparator;\n        selection.start.setPositionParagraph(fieldSeparator.line, (fieldSeparator.line).getOffset(fieldSeparator, fieldSeparator.length));\n        selection.end.setPositionParagraph(fieldEnd.line, (fieldEnd.line).getOffset(fieldEnd, 0));\n        this.initHistory('Underline');\n        this.updateCharacterFormatWithUpdate(selection, 'underline', 'Single', false);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.reLayout(selection, false);\n        // Applies font color for field result.\n        this.initHistory('FontColor');\n        this.isForHyperlinkFormat = true;\n        this.updateCharacterFormatWithUpdate(selection, 'fontColor', '#0563c1', false);\n        this.isForHyperlinkFormat = false;\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.reLayout(selection, false);\n    };\n    //Paste Implementation starts\n    /**\n     * Paste copied clipboard content on Paste event\n     * @param {ClipboardEvent} event - Specifies the paste event\n     * @param {any} pasteWindow - Specifies the paste window\n     * @private\n     */\n    Editor.prototype.pasteInternal = function (event, pasteWindow) {\n        this.currentPasteOptions = this.owner.defaultPasteOption;\n        this.isHtmlPaste = false;\n        if (this.documentHelper.owner.enableLocalPaste) {\n            this.paste();\n        }\n        else {\n            this.selection.isViewPasteOptions = true;\n            if (this.selection.pasteElement) {\n                this.selection.pasteElement.style.display = 'none';\n            }\n            if (isNullOrUndefined(pasteWindow)) {\n                pasteWindow = window;\n            }\n            var textContent = '';\n            var htmlContent = '';\n            var rtfContent = '';\n            var clipbordData = pasteWindow.clipboardData ? pasteWindow.clipboardData : event.clipboardData;\n            if (Browser.info.name !== 'msie') {\n                rtfContent = clipbordData.getData('Text/Rtf');\n                htmlContent = clipbordData.getData('Text/Html');\n            }\n            this.copiedTextContent = textContent = HelperMethods.sanitizeString(clipbordData.getData('Text'));\n            this.previousCharFormat = new WCharacterFormat();\n            this.previousCharFormat.copyFormat(this.selection.start.paragraph.characterFormat);\n            this.previousParaFormat = new WParagraphFormat();\n            this.previousParaFormat.copyFormat(this.selection.start.paragraph.paragraphFormat);\n            if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.selection.isInlineFormFillMode()) {\n                htmlContent = '';\n                rtfContent = '';\n            }\n            if (rtfContent !== '') {\n                this.pasteAjax(rtfContent, '.rtf');\n            }\n            else if (htmlContent !== '') {\n                this.isHtmlPaste = true;\n                var doc = new DOMParser().parseFromString(htmlContent, 'text/html');\n                var result = new XMLSerializer().serializeToString(doc);\n                result = result.replace(/<!--StartFragment-->/gi, '');\n                result = result.replace(/<!--EndFragment-->/gi, '');\n                // Removed namesapce which is added when using XMLSerializer.\n                // When copy content from MS Word, the clipboard html content already have same namespace which cause duplicate namespace\n                // Here, removed the duplicate namespace.\n                result = result.replace('xmlns=\"http://www.w3.org/1999/xhtml\"', '');\n                var substringToRemove = 'iscreatedusinghtmlspantag';\n                if (result.indexOf(substringToRemove) !== -1) {\n                    var parser = new DOMParser();\n                    var doc_1 = parser.parseFromString(result, 'text/html');\n                    var paragraphs = doc_1.querySelectorAll('.iscreatedusinghtmlspantag');\n                    var lastPElement = doc_1.querySelector('body > p:last-child');\n                    if (paragraphs.length > 0 && lastPElement && lastPElement === paragraphs[paragraphs.length - 1]) {\n                        paragraphs[paragraphs.length - 1].remove();\n                        result = doc_1.documentElement.outerHTML;\n                    }\n                }\n                this.pasteAjax(result, '.html');\n            }\n            else if (textContent !== null && textContent !== '') {\n                this.selection.currentPasteAction = 'TextOnly';\n                this.pasteContents(textContent);\n                this.applyPasteOptions(this.currentPasteOptions, true);\n                this.copiedContent = undefined;\n                this.documentHelper.editableDiv.innerHTML = '';\n            }\n            else if (Browser.info.name !== 'msie' && clipbordData.items !== undefined && clipbordData.items.length !== 0) {\n                for (var m = 0; m < clipbordData.items.length; m++) {\n                    var item = clipbordData.items[m];\n                    if (item.type === 'image/png' || (item.type === \"image/svg+xml\" && item.kind !== 'string')) {\n                        this.pasteImage(item.getAsFile());\n                    }\n                }\n            }\n            else if (Browser.info.name === 'msie' && clipbordData.files !== undefined && clipbordData.files.length !== 0 &&\n                (clipbordData.files[0].type === 'image/png')) {\n                this.pasteImage(clipbordData.files[0]);\n            }\n            // if (textContent !== '') {\n            //     this.pasteContents(textContent);\n            //     this.documentHelper.editableDiv.innerHTML = '';\n            // }\n        }\n    };\n    Editor.prototype.pasteImage = function (imgFile) {\n        var _this = this;\n        var fileReader = new FileReader();\n        fileReader.onload = function () {\n            _this.onPasteImage(fileReader.result);\n        };\n        fileReader.readAsDataURL(imgFile);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onPasteImage = function (data) {\n        var image = document.createElement('img');\n        var editor = this;\n        image.addEventListener('load', function () {\n            editor.insertImageInternal(data, true, this.width, this.height, this.alt);\n        });\n        image.src = data;\n    };\n    Editor.prototype.pasteAjax = function (content, type) {\n        var proxy = this;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var formObject = {\n            content: content,\n            type: type\n        };\n        var editor = this;\n        this.pasteRequestHandler = new XmlHttpRequestHandler();\n        this.owner.documentHelper.viewerContainer.focus();\n        showSpinner(this.owner.element);\n        this.pasteRequestHandler.url = proxy.owner.serviceUrl + this.owner.serverActionSettings.systemClipboard;\n        this.pasteRequestHandler.responseType = 'json';\n        this.pasteRequestHandler.contentType = 'application/json;charset=UTF-8';\n        this.pasteRequestHandler.customHeaders = proxy.owner.headers;\n        this.pasteRequestHandler.onSuccess = this.pasteFormattedContent.bind(this);\n        this.pasteRequestHandler.onFailure = this.onPasteFailure.bind(this);\n        this.pasteRequestHandler.onError = this.onPasteFailure.bind(this);\n        var httprequestEventArgs = { serverActionType: 'SystemClipboard', headers: this.owner.headers, timeout: 0, cancel: false, withCredentials: false, clipboardData: formObject };\n        this.owner.trigger(beforeXmlHttpRequestSend, httprequestEventArgs);\n        if (httprequestEventArgs.cancel) {\n            hideSpinner(this.owner.element);\n        }\n        else {\n            this.pasteRequestHandler.send(formObject, httprequestEventArgs);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.pasteFormattedContent = function (result) {\n        var _this = this;\n        if (this.isPasteListUpdated) {\n            this.isPasteListUpdated = false;\n        }\n        this.pasteContents(isNullOrUndefined(result.data) ? this.copiedTextContent : HelperMethods.getSfdtDocument(result.data));\n        if (this.currentPasteOptions !== 'KeepSourceFormatting') {\n            this.applyPasteOptions(this.currentPasteOptions);\n        }\n        hideSpinner(this.owner.element);\n        setTimeout(function () {\n            if (!isNullOrUndefined(_this.viewer)) {\n                _this.documentHelper.isScrollHandler = true;\n                _this.isPasteContentCheck = true;\n                _this.viewer.updateScrollBars();\n                _this.documentHelper.isScrollHandler = false;\n                _this.isPasteContentCheck = false;\n            }\n        }, 0);\n    };\n    Editor.prototype.onPasteFailure = function (result) {\n        this.owner.fireServiceFailure(result);\n        console.error(result.status, result.statusText);\n        hideSpinner(this.owner.element);\n        this.documentHelper.updateFocus();\n    };\n    /**\n     * Pastes the provided sfdt content or the data present in local clipboard if any.\n     *\n     * @param {string} sfdt Specifies the sfdt content to paste at current position.\n     * @param {PasteOptions} defaultPasteOption Specifies the paste options.\n     * @returns {void}\n     */\n    Editor.prototype.paste = function (sfdt, defaultPasteOption) {\n        var _this = this;\n        if (isNullOrUndefined(sfdt)) {\n            sfdt = this.owner.enableLocalPaste ? HelperMethods.sanitizeString(this.copiedData) : undefined;\n        }\n        if (!isNullOrUndefined(defaultPasteOption)) {\n            this.currentPasteOptions = defaultPasteOption;\n        }\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        if (sfdt) {\n            var document_1 = HelperMethods.getSfdtDocument(sfdt);\n            this.pasteContents(document_1);\n            this.applyPasteOptions(this.currentPasteOptions);\n            if (this.chartType) {\n                setTimeout(function () {\n                    if (!isNullOrUndefined(_this.viewer)) {\n                        _this.viewer.updateScrollBars();\n                    }\n                }, 30);\n                this.chartType = false;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getUniqueListOrAbstractListId = function (isList) {\n        if (isList && this.documentHelper.lists.length) {\n            var sortedList = this.documentHelper.lists.slice().sort(function (a, b) {\n                return a.listId - b.listId;\n            });\n            return sortedList[sortedList.length - 1].listId + 1;\n        }\n        else if (this.documentHelper.abstractLists.length) {\n            var sortedAbsList = this.documentHelper.abstractLists.slice().sort(function (a, b) {\n                return a.abstractListId - b.abstractListId;\n            });\n            return sortedAbsList[sortedAbsList.length - 1].abstractListId + 1;\n        }\n        return 0;\n    };\n    Editor.prototype.checkSameLevelFormat = function (lstLevelNo, abstractList, list) {\n        return abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][listLevelPatternProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].listLevelPattern\n            && abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][numberFormatProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].numberFormat\n            && (abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][listLevelPatternProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 10 : 'Bullet')\n                || abstractList[levelsProperty[this.keywordIndex]][lstLevelNo][startAtProperty[this.keywordIndex]] === list.abstractList.levels[lstLevelNo].startAt);\n    };\n    Editor.prototype.listLevelPatternInCollection = function (lstLevelNo, listLevel) {\n        var _this = this;\n        return this.documentHelper.lists.filter(function (list) {\n            return list.abstractList.levels[lstLevelNo].listLevelPattern === listLevel[listLevelPatternProperty[_this.keywordIndex]]\n                && list.abstractList.levels[lstLevelNo].numberFormat === listLevel[numberFormatProperty[_this.keywordIndex]]\n                && (listLevel[listLevelPatternProperty[_this.keywordIndex]] === (_this.keywordIndex == 1 ? 10 : 'Bullet') || list.abstractList.levels[lstLevelNo].startAt === listLevel[startAtProperty[_this.keywordIndex]])\n                && _this.isEqualParagraphFormat(list.abstractList.levels[lstLevelNo].paragraphFormat, listLevel[paragraphFormatProperty[_this.keywordIndex]]);\n        })[0];\n    };\n    Editor.prototype.isEqualParagraphFormat = function (source, dest) {\n        if ((isNullOrUndefined(dest[leftIndentProperty[this.keywordIndex]]) && source.leftIndent !== 0)\n            || (!isNullOrUndefined(dest[leftIndentProperty[this.keywordIndex]]) && Math.round(source.leftIndent) !== Math.round(dest[leftIndentProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[rightIndentProperty[this.keywordIndex]]) && source.rightIndent !== 0)\n            || (!isNullOrUndefined(dest[rightIndentProperty[this.keywordIndex]]) && Math.round(source.rightIndent) !== Math.round(dest[rightIndentProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[firstLineIndentProperty[this.keywordIndex]]) && source.firstLineIndent !== 0)\n            || (!isNullOrUndefined(dest[firstLineIndentProperty[this.keywordIndex]]) && Math.round(source.firstLineIndent) !== Math.round(dest[firstLineIndentProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[beforeSpacingProperty[this.keywordIndex]]) && source.beforeSpacing !== 0)\n            || (!isNullOrUndefined(dest[beforeSpacingProperty[this.keywordIndex]]) && Math.round(source.beforeSpacing) !== Math.round(dest[beforeSpacingProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[afterSpacingProperty[this.keywordIndex]]) && source.afterSpacing !== 0)\n            || (!isNullOrUndefined(dest.afterSpacing) && Math.round(source.afterSpacing) !== Math.round(dest[afterSpacingProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[textAlignmentProperty[this.keywordIndex]]) && source.textAlignment !== 'Left')\n            || (!isNullOrUndefined(dest[textAlignmentProperty[this.keywordIndex]]) && source.textAlignment !== dest[textAlignmentProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[bidiProperty[this.keywordIndex]]) && source.bidi !== false)\n            || (!isNullOrUndefined(dest[bidiProperty[this.keywordIndex]]) && source.bidi !== dest[bidiProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[contextualSpacingProperty[this.keywordIndex]]) && source.contextualSpacing !== false)\n            || (!isNullOrUndefined(dest.contextualSpacing) && source.contextualSpacing !== dest[contextualSpacingProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[keepWithNextProperty[this.keywordIndex]]) && source.keepWithNext !== false)\n            || (!isNullOrUndefined(dest[keepWithNextProperty[this.keywordIndex]]) && source.keepWithNext !== dest[keepWithNextProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[keepLinesTogetherProperty[this.keywordIndex]]) && source.keepLinesTogether !== false)\n            || (!isNullOrUndefined(dest[keepLinesTogetherProperty[this.keywordIndex]]) && source.keepLinesTogether !== dest[keepLinesTogetherProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[widowControlProperty[this.keywordIndex]]) && source.widowControl !== false)\n            || (!isNullOrUndefined(dest[widowControlProperty[this.keywordIndex]]) && source.widowControl !== dest[widowControlProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[outlineLevelProperty[this.keywordIndex]]) && source.outlineLevel !== 'BodyText')\n            || (!isNullOrUndefined(dest[outlineLevelProperty[this.keywordIndex]]) && source.outlineLevel !== dest[outlineLevelProperty[this.keywordIndex]])) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[lineSpacingProperty[this.keywordIndex]]) && source.lineSpacing !== 1)\n            || (!isNullOrUndefined(dest[lineSpacingProperty[this.keywordIndex]]) && Math.round(source.lineSpacing) !== Math.round(dest[lineSpacingProperty[this.keywordIndex]]))) {\n            return false;\n        }\n        if ((isNullOrUndefined(dest[lineSpacingTypeProperty[this.keywordIndex]]) && source.lineSpacingType !== 'Multiple')\n            || (!isNullOrUndefined(dest[lineSpacingTypeProperty[this.keywordIndex]]) && source.lineSpacingType !== dest[lineSpacingTypeProperty[this.keywordIndex]])) {\n            return false;\n        }\n        return true;\n    };\n    Editor.prototype.getBlocksToUpdate = function (blocks) {\n        var blcks = [];\n        for (var i = 0; i < blocks.length; i++) {\n            var obj = blocks[i];\n            if (obj[paragraphFormatProperty[this.keywordIndex]] && obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]\n                && Object.keys(obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]).length > 0) {\n                blcks.push(obj);\n            }\n            else if (obj[rowsProperty[this.keywordIndex]]) {\n                for (var j = 0; j < obj[rowsProperty[this.keywordIndex]].length; j++) {\n                    var currentRow = obj[rowsProperty[this.keywordIndex]][j];\n                    for (var k = 0; k < currentRow[cellsProperty[this.keywordIndex]].length; k++) {\n                        var cell = currentRow[cellsProperty[this.keywordIndex]][k];\n                        blcks = blcks.concat(this.getBlocksToUpdate(cell[blocksProperty[this.keywordIndex]]));\n                    }\n                }\n            }\n        }\n        return blcks;\n    };\n    Editor.prototype.updateListIdForBlocks = function (blocks, abstractList, list, id, idToUpdate) {\n        var update = false;\n        for (var i = 0; i < blocks.length; i++) {\n            var obj = blocks[i];\n            if (obj[paragraphFormatProperty[this.keywordIndex]] && obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]\n                && Object.keys(obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]).length > 0) {\n                var format = obj[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]];\n                var existingList = this.listLevelPatternInCollection(format[listLevelNumberProperty[this.keywordIndex]], abstractList[levelsProperty[this.keywordIndex]][format[listLevelNumberProperty[this.keywordIndex]]]);\n                if (format[listIdProperty[this.keywordIndex]] === id) {\n                    if (isNullOrUndefined(existingList) && (!list || (list\n                        && !this.checkSameLevelFormat(format[listLevelNumberProperty[this.keywordIndex]], abstractList, list)))) {\n                        update = true;\n                        format[listIdProperty[this.keywordIndex]] = idToUpdate;\n                    }\n                    else if (!isNullOrUndefined(existingList)\n                        && this.checkSameLevelFormat(format[listLevelNumberProperty[this.keywordIndex]], abstractList, existingList)) {\n                        if (!format.isUpdated) {\n                            format[listIdProperty[this.keywordIndex]] = existingList[listIdProperty[this.keywordIndex]];\n                            format.isUpdated = true;\n                        }\n                        update = false;\n                    }\n                }\n            }\n            else if (obj[rowsProperty[this.keywordIndex]]) {\n                for (var j = 0; j < obj[rowsProperty[this.keywordIndex]].length; j++) {\n                    var row = obj[rowsProperty[this.keywordIndex]][j];\n                    for (var k = 0; k < row[cellsProperty[this.keywordIndex]].length; k++) {\n                        var cell = row[cellsProperty[this.keywordIndex]][k];\n                        var toUpdate = this.updateListIdForBlocks(cell[blocksProperty[this.keywordIndex]], abstractList, list, id, idToUpdate);\n                        if (!update) {\n                            update = toUpdate;\n                        }\n                    }\n                }\n            }\n        }\n        return update;\n    };\n    Editor.prototype.updatePasteContent = function (pasteContent, sectionId) {\n        var _this = this;\n        var uniqueListId = this.getUniqueListOrAbstractListId(true);\n        if (pasteContent[listsProperty[this.keywordIndex]].filter(function (obj) { return obj[listIdProperty[_this.keywordIndex]] === uniqueListId; }).length > 0) {\n            var sortedPasteList = pasteContent[listsProperty[this.keywordIndex]].slice().sort(function (a, b) {\n                return a[listIdProperty[_this.keywordIndex]] - b[listIdProperty[_this.keywordIndex]];\n            });\n            uniqueListId = sortedPasteList[sortedPasteList.length - 1][listIdProperty[this.keywordIndex]] + 1;\n        }\n        var uniqueAbsLstId = this.getUniqueListOrAbstractListId(false);\n        if (pasteContent[abstractListsProperty[this.keywordIndex]].filter(function (obj) {\n            return obj[abstractListIdProperty[_this.keywordIndex]] === uniqueAbsLstId;\n        }).length > 0) {\n            var sortedPasteAbsList = pasteContent[abstractListsProperty[this.keywordIndex]].slice().sort(function (a, b) {\n                return a[abstractListIdProperty[_this.keywordIndex]] - b[abstractListIdProperty[_this.keywordIndex]];\n            });\n            uniqueAbsLstId = sortedPasteAbsList[sortedPasteAbsList.length - 1][abstractListIdProperty[this.keywordIndex]] + 1;\n        }\n        var _loop_1 = function (k) {\n            var list = pasteContent[listsProperty[this_1.keywordIndex]][k];\n            var abstractList = pasteContent[abstractListsProperty[this_1.keywordIndex]].filter(function (obj) {\n                return obj[abstractListIdProperty[_this.keywordIndex]] === list[abstractListIdProperty[_this.keywordIndex]];\n            })[0];\n            var lstDup = this_1.documentHelper.lists.filter(function (obj) {\n                return obj.listId === list[listIdProperty[_this.keywordIndex]];\n            });\n            if (!isNullOrUndefined(abstractList)) {\n                var isUpdate = this_1.updateListIdForBlocks(pasteContent[sectionsProperty[this_1.keywordIndex]][sectionId][blocksProperty[this_1.keywordIndex]], abstractList, lstDup[0], list[listIdProperty[this_1.keywordIndex]], uniqueListId);\n                if (isUpdate) {\n                    var absListId = abstractList[abstractListIdProperty[this_1.keywordIndex]];\n                    // iterate the list object from pasteContent and update the abstractListId with new value.\n                    for (var i = 0; i < pasteContent[listsProperty[this_1.keywordIndex]].length; i++) {\n                        var listObj = pasteContent[listsProperty[this_1.keywordIndex]][i];\n                        if (listObj[abstractListIdProperty[this_1.keywordIndex]] === absListId) {\n                            listObj[abstractListIdProperty[this_1.keywordIndex]] = uniqueAbsLstId;\n                        }\n                    }\n                    abstractList[abstractListIdProperty[this_1.keywordIndex]] = uniqueAbsLstId;\n                    list[listIdProperty[this_1.keywordIndex]] = uniqueListId;\n                    uniqueListId++;\n                    uniqueAbsLstId++;\n                }\n                else {\n                    pasteContent[listsProperty[this_1.keywordIndex]].splice(k, 1);\n                    pasteContent[abstractListsProperty[this_1.keywordIndex]].splice(pasteContent[abstractListsProperty[this_1.keywordIndex]].indexOf(abstractList), 1);\n                    k--;\n                }\n            }\n            out_k_1 = k;\n        };\n        var this_1 = this, out_k_1;\n        for (var k = 0; k < pasteContent[listsProperty[this.keywordIndex]].length; k++) {\n            _loop_1(k);\n            k = out_k_1;\n        }\n        var blocks = this.getBlocksToUpdate(pasteContent[sectionsProperty[this.keywordIndex]][sectionId][blocksProperty[this.keywordIndex]]);\n        for (var i = 0; i < blocks.length; i++) {\n            var blck = blocks[i];\n            delete blck[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]].isUpdated;\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getBlocks = function (pasteContent, isPaste, sections, comments, revision) {\n        var widgets = [];\n        if (typeof (pasteContent) === 'string') {\n            var startParagraph = this.selection.start.paragraph;\n            if (!this.selection.isForward) {\n                startParagraph = this.selection.end.paragraph;\n            }\n            var arr = [];\n            var txt = pasteContent;\n            txt = txt.replace(/\\r?\\n/g, '\\r');\n            arr = txt.split('\\r');\n            var widget = [];\n            var bodyWidget = new BodyWidget();\n            bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n            bodyWidget.childWidgets = widget;\n            for (var i = 0; i < arr.length; i++) {\n                if (i === arr.length - 1 && arr[i].length === 0 && !this.isInsertText) {\n                    continue;\n                }\n                var currentInline = this.selection.start.currentWidget.getInline(this.selection.start.offset, 0);\n                var element = this.selection.getPreviousValidElement(currentInline.element);\n                if (element !== currentInline.element) {\n                    element = this.selection.getNextValidElement(currentInline.element);\n                }\n                var insertFormat = void 0;\n                if (startParagraph.isEmpty()) {\n                    insertFormat = startParagraph.characterFormat;\n                }\n                else if (!isNullOrUndefined(element) && !this.isInsertText) {\n                    insertFormat = element.characterFormat;\n                }\n                else {\n                    this.copyInsertFormat(startParagraph.characterFormat, false);\n                }\n                var insertParaFormat = this.documentHelper.selection.copySelectionParagraphFormat();\n                if (!isNullOrUndefined(this.previousParaFormat)) {\n                    insertParaFormat = this.previousParaFormat;\n                }\n                var paragraph = new ParagraphWidget();\n                paragraph.paragraphFormat.copyFormat(insertParaFormat);\n                var line = new LineWidget(paragraph);\n                if (arr[i].length > 0) {\n                    //Too many character in single line it took time past the content will cause layout performance, so spliting by space.\n                    var words = arr[i].split(/(\\s+)/);\n                    for (var j = 0; j < words.length; j++) {\n                        var textElement = new TextElementBox();\n                        textElement.characterFormat.copyFormat(insertFormat);\n                        textElement.text = words[j];\n                        line.children.push(textElement);\n                        textElement.line = line;\n                    }\n                }\n                paragraph.childWidgets.push(line);\n                paragraph.containerWidget = bodyWidget;\n                widget.push(paragraph);\n            }\n            widgets.push(bodyWidget);\n        }\n        else {\n            var parser = this.documentHelper.owner.parser;\n            parser.keywordIndex = this.keywordIndex;\n            parser.isPaste = isPaste;\n            parser.isHtmlPaste = this.isHtmlPaste;\n            parser.addCustomStyles(pasteContent);\n            if (pasteContent[commentsProperty[this.keywordIndex]] && pasteContent[commentsProperty[this.keywordIndex]].length > 0) {\n                parser.commentsCollection = new Dictionary();\n                parser.commentStarts = new Dictionary();\n                parser.commentEnds = new Dictionary();\n                parser.parseComments(pasteContent, comments ? comments : this.documentHelper.comments);\n            }\n            var bodyWidget = void 0;\n            this.selection.currentPasteAction = 'DefaultPaste';\n            for (var i = 0; i < pasteContent[sectionsProperty[this.keywordIndex]].length; i++) {\n                if (!this.isPasteListUpdated && !isNullOrUndefined(pasteContent[listsProperty[this.keywordIndex]])) {\n                    if (this.documentHelper.lists.length > 0) {\n                        this.updatePasteContent(pasteContent, i);\n                    }\n                    this.isPasteListUpdated = true;\n                    if (!isNullOrUndefined(pasteContent[abstractListsProperty[this.keywordIndex]])) {\n                        parser.parseAbstractList(pasteContent, this.documentHelper.abstractLists);\n                    }\n                    if (!isNullOrUndefined(pasteContent[listsProperty[this.keywordIndex]])) {\n                        parser.parseList(pasteContent, this.documentHelper.lists);\n                    }\n                }\n                if (!isNullOrUndefined(pasteContent[revisionsProperty[this.keywordIndex]])) {\n                    if (isPaste) {\n                        var revisionChanges = this.viewer.owner.revisionsInternal.changes;\n                        if (!isNullOrUndefined(parser.revisionCollection)) {\n                            parser.revisionCollection = undefined;\n                        }\n                        if (this.isRemoteAction) {\n                            parser.revisionCollection = this.documentHelper.revisionsInternal;\n                        }\n                        else {\n                            parser.revisionCollection = new Dictionary();\n                        }\n                        var revisionCollection = parser.revisionCollection;\n                        if (!(this.documentHelper.owner.sfdtExportModule.copyWithTrackChange && parser.isCutPerformed)) {\n                            if (pasteContent[revisionsProperty[this.keywordIndex]].length >= 1) {\n                                for (var i_1 = 0; i_1 < pasteContent[revisionsProperty[this.keywordIndex]].length; i_1++) {\n                                    var revisionCheck = true;\n                                    if (revisionCollection.containsKey(pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]])) {\n                                        if (revisionChanges.length > 0) {\n                                            for (var j_1 = 0; j_1 < revisionChanges.length; j_1++) {\n                                                if (revisionChanges[j_1].revisionID === pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]]) {\n                                                    revisionCheck = false;\n                                                }\n                                            }\n                                        }\n                                        if (revisionCheck && !this.isRemoteAction) {\n                                            var revision_1 = revisionCollection.get(pasteContent[revisionsProperty[this.keywordIndex]][i_1][revisionIdProperty[this.keywordIndex]]);\n                                            revisionChanges.push(revision_1);\n                                        }\n                                    }\n                                    else {\n                                        parser.parseRevisions(pasteContent, revisionChanges);\n                                    }\n                                }\n                            }\n                        }\n                        this.documentHelper.owner.sfdtExportModule.copyWithTrackChange = false;\n                    }\n                    else {\n                        parser.revisionCollection = this.documentHelper.revisionsInternal;\n                        parser.parseRevisions(pasteContent, revision);\n                    }\n                }\n                bodyWidget = new BodyWidget();\n                bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n                if (!isPaste) {\n                    sections.unshift(bodyWidget);\n                }\n                else {\n                    widgets.push(bodyWidget);\n                }\n                if (isPaste && !isNullOrUndefined(pasteContent[stylesProperty[this.keywordIndex]])) {\n                    for (var j = 0; j < pasteContent[stylesProperty[this.keywordIndex]].length; j++) {\n                        var styleName = pasteContent[stylesProperty[this.keywordIndex]][j][nameProperty[this.keywordIndex]];\n                        var style = this.documentHelper.styles.findByName(styleName);\n                        if (isNullOrUndefined(style)) {\n                            parser.parseStyle(pasteContent, pasteContent[stylesProperty[this.keywordIndex]][j], this.documentHelper.styles);\n                        }\n                    }\n                }\n                parser.parseBody(pasteContent[sectionsProperty[this.keywordIndex]][i][blocksProperty[this.keywordIndex]], bodyWidget.childWidgets, undefined, undefined, undefined, pasteContent[stylesProperty[this.keywordIndex]]);\n                if (pasteContent[lastParagraphMarkCopiedProperty[this.keywordIndex]] && this.selection.start.paragraph.isEmpty() && this.documentHelper.pages.length == 1 && this.documentHelper.pages[0].bodyWidgets[0].childWidgets.length == 1) {\n                    parser.parseSectionFormat(this.keywordIndex, pasteContent[sectionsProperty[this.keywordIndex]][i][sectionFormatProperty[this.keywordIndex]], bodyWidget.sectionFormat);\n                }\n                parser.isPaste = false;\n                parser.isHtmlPaste = false;\n            }\n            if (pasteContent[lastParagraphMarkCopiedProperty[this.keywordIndex]]) {\n                this.isLastParaMarkCopied = true;\n                var paragraphWidget = new ParagraphWidget();\n                bodyWidget.childWidgets.push(paragraphWidget);\n            }\n        }\n        if (this.currentPasteOptions === 'MergeWithExistingFormatting') {\n            this.applyMergeFormat(widgets);\n        }\n        return widgets;\n    };\n    Editor.prototype.applyMergeFormat = function (bodyWidgets) {\n        var startParagraph = this.selection.start.paragraph;\n        var currentInline = this.selection.start.currentWidget.getInline(this.selection.start.offset, 0);\n        var element = this.selection.getPreviousValidElement(currentInline.element);\n        var insertFormat = element ? element.characterFormat :\n            this.copyInsertFormat(startParagraph.characterFormat, false);\n        var insertParaFormat = this.documentHelper.selection.paragraphFormat;\n        for (var k = 0; k < bodyWidgets.length; k++) {\n            var widgets = bodyWidgets[k].childWidgets;\n            for (var i = 0; i < widgets.length; i++) {\n                var widget = widgets[i];\n                if (widget instanceof ParagraphWidget) {\n                    this.applyParaFormatInternal(widget.paragraphFormat, insertParaFormat);\n                    this.applyFormatInternal(widget, insertFormat);\n                }\n                else {\n                    for (var j = 0; j < widget.childWidgets.length; j++) {\n                        var row = widget.childWidgets[j];\n                        for (var k_1 = 0; k_1 < row.childWidgets.length; k_1++) {\n                            var cell = row.childWidgets[k_1];\n                            for (var l = 0; l < cell.childWidgets.length; l++) {\n                                this.applyFormatInternal(cell.childWidgets[l], insertFormat);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.applyParaFormatInternal = function (paragraphFormat, insertedParaFormat) {\n        if (!isNullOrUndefined(insertedParaFormat.leftIndent)) {\n            paragraphFormat.leftIndent = insertedParaFormat.leftIndent;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.rightIndent)) {\n            paragraphFormat.rightIndent = insertedParaFormat.rightIndent;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.firstLineIndent)) {\n            paragraphFormat.firstLineIndent = insertedParaFormat.firstLineIndent;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.textAlignment)) {\n            paragraphFormat.textAlignment = insertedParaFormat.textAlignment;\n        }\n        else {\n            paragraphFormat.textAlignment = 'Left';\n        }\n        if (!isNullOrUndefined(insertedParaFormat.outlineLevel)) {\n            paragraphFormat.outlineLevel = insertedParaFormat.outlineLevel;\n        }\n        else {\n            paragraphFormat.outlineLevel = 'BodyText';\n        }\n        if (insertedParaFormat.beforeSpacing === -1) {\n            paragraphFormat.beforeSpacing = 0;\n        }\n        else {\n            paragraphFormat.beforeSpacing = insertedParaFormat.beforeSpacing;\n        }\n        if (insertedParaFormat.afterSpacing === -1) {\n            paragraphFormat.afterSpacing = 0;\n        }\n        else {\n            paragraphFormat.afterSpacing = insertedParaFormat.afterSpacing;\n        }\n        if (insertedParaFormat.lineSpacing === 0) {\n            paragraphFormat.lineSpacing = 1;\n        }\n        else {\n            paragraphFormat.lineSpacing = insertedParaFormat.lineSpacing;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.lineSpacingType)) {\n            paragraphFormat.lineSpacingType = insertedParaFormat.lineSpacingType;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.bidi)) {\n            paragraphFormat.bidi = insertedParaFormat.bidi;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.spaceAfterAuto)) {\n            paragraphFormat.spaceAfterAuto = insertedParaFormat.spaceAfterAuto;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.spaceBeforeAuto)) {\n            paragraphFormat.spaceBeforeAuto = insertedParaFormat.spaceBeforeAuto;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.keepWithNext)) {\n            paragraphFormat.keepWithNext = insertedParaFormat.keepWithNext;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.keepLinesTogether)) {\n            paragraphFormat.keepLinesTogether = insertedParaFormat.keepLinesTogether;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.widowControl)) {\n            paragraphFormat.widowControl = insertedParaFormat.widowControl;\n        }\n        if (!isNullOrUndefined(insertedParaFormat.contextualSpacing)) {\n            paragraphFormat.contextualSpacing = insertedParaFormat.contextualSpacing;\n        }\n        if (paragraphFormat.tabs) {\n            paragraphFormat.tabs = [];\n        }\n    };\n    Editor.prototype.applyFormatInternal = function (widget, insertFormat) {\n        if (widget instanceof ParagraphWidget) {\n            for (var j = 0; j < widget.childWidgets.length; j++) {\n                var lineWidget = widget.childWidgets[j];\n                for (var k = 0; k < lineWidget.children.length; k++) {\n                    var inlineCharacterFormat = lineWidget.children[k].characterFormat;\n                    var characterFormat = inlineCharacterFormat.cloneFormat();\n                    if (characterFormat.bold) {\n                        lineWidget.children[k].characterFormat.bold = characterFormat.bold;\n                    }\n                    if (characterFormat.italic) {\n                        lineWidget.children[k].characterFormat.italic = characterFormat.italic;\n                    }\n                    if (characterFormat.underline !== 'None') {\n                        lineWidget.children[k].characterFormat.underline = characterFormat.underline;\n                    }\n                    if (this.currentPasteOptions === 'MergeWithExistingFormatting' && !isNullOrUndefined(insertFormat)) {\n                        if (insertFormat.bold) {\n                            lineWidget.children[k].characterFormat.bold = insertFormat.bold;\n                        }\n                        if (insertFormat.italic) {\n                            lineWidget.children[k].characterFormat.italic = insertFormat.italic;\n                        }\n                        if (insertFormat.underline !== 'None') {\n                            lineWidget.children[k].characterFormat.underline = insertFormat.underline;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontColor !== insertFormat.fontColor) {\n                            lineWidget.children[k].characterFormat.fontColor = insertFormat.fontColor;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontSize !== insertFormat.fontSize) {\n                            lineWidget.children[k].characterFormat.fontSize = insertFormat.fontSize;\n                            lineWidget.children[k].characterFormat.fontSizeBidi = insertFormat.fontSizeBidi;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontFamily !== insertFormat.fontFamily) {\n                            lineWidget.children[k].characterFormat.fontFamily = insertFormat.fontFamily;\n                            lineWidget.children[k].characterFormat.fontFamilyBidi = insertFormat.fontFamilyBidi;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontFamilyAscii !== insertFormat.fontFamilyAscii) {\n                            lineWidget.children[k].characterFormat.fontFamilyAscii = insertFormat.fontFamilyAscii;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontFamilyFarEast !== insertFormat.fontFamilyFarEast) {\n                            lineWidget.children[k].characterFormat.fontFamilyFarEast = insertFormat.fontFamilyFarEast;\n                        }\n                        if (lineWidget.children[k].characterFormat.fontFamilyAscii !== insertFormat.fontFamilyAscii) {\n                            lineWidget.children[k].characterFormat.fontFamilyAscii = insertFormat.fontFamilyAscii;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < widget.childWidgets.length; j++) {\n                var rowWidget = widget.childWidgets[j];\n                for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n                    var cellWidget = rowWidget.childWidgets[k];\n                    for (var l = 0; l < cellWidget.childWidgets.length; l++) {\n                        this.applyFormatInternal(cellWidget.childWidgets[l], insertFormat);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.applyPasteOptions = function (options, isPasteOptionTextOnly) {\n        if (isNullOrUndefined(this.copiedContent) || this.copiedTextContent === '' || isPasteOptionTextOnly) {\n            return;\n        }\n        //this.isSkipHistory = true;\n        this.currentPasteOptions = options;\n        var start = this.selection.isForward ? this.selection.start : this.selection.end;\n        var currentFormat = start.paragraph.paragraphFormat;\n        var copiedContent = this.copiedContent;\n        var copiedTextContent = this.copiedTextContent;\n        if (this.editorHistory && this.editorHistory.canUndo()) {\n            this.editorHistory.undo();\n            this.editorHistory.redoStack.pop();\n        }\n        this.copiedContent = copiedContent;\n        this.copiedTextContent = copiedTextContent;\n        this.selection.isViewPasteOptions = true;\n        // }\n        switch (options) {\n            case 'KeepSourceFormatting':\n                this.pasteContents(this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent);\n                break;\n            case 'MergeWithExistingFormatting':\n                this.pasteContents(this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent, currentFormat);\n                break;\n            case 'KeepTextOnly':\n                this.pasteContents(this.copiedTextContent);\n                break;\n        }\n        //this.isSkipHistory = false;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.applyTablePasteOptions = function (options) {\n        if (isNullOrUndefined(this.copiedContent) || this.copiedTextContent === '') {\n            return;\n        }\n        this.isPaste = true;\n        var copiedContent = this.copiedContent !== '' ? this.copiedContent : this.copiedTextContent;\n        if (this.editorHistory && this.editorHistory.canUndo()) {\n            // this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.editorHistory.undo();\n            this.editorHistory.redoStack.pop();\n            // this.isSkipOperationsBuild = false;\n        }\n        var widgets = this.getBlocks(copiedContent, true);\n        var currentFormat = this.selection.start.paragraph.paragraphFormat;\n        switch (options) {\n            case 'NestTable':\n                this.pasteAsNestedTable(widgets, currentFormat);\n                break;\n            case 'InsertAsRows':\n                this.pasteAsNewRow(widgets[0].childWidgets[0]);\n                break;\n            case 'InsertAsColumns':\n                this.pasteAsNewColumn(widgets[0].childWidgets[0]);\n                break;\n            case 'OverwriteCells':\n                this.pasteOverwriteCell(widgets[0].childWidgets[0]);\n                break;\n        }\n        this.isPaste = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.pasteContents = function (content, currentFormat) {\n        if (!isNullOrUndefined(content.optimizeSfdt) && content.optimizeSfdt) {\n            this.keywordIndex = 1;\n        }\n        else {\n            this.keywordIndex = 0;\n        }\n        if (typeof (content) !== 'string') {\n            this.copiedContent = content;\n        }\n        if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.selection.isInlineFormFillMode()) {\n            var inline = this.selection.getCurrentFormField();\n            var resultText = this.getFieldResultText();\n            var maxLength = inline.formFieldData.maxLength;\n            var selectedTextLength = this.documentHelper.selection.text.length;\n            if (maxLength > 0) {\n                if (selectedTextLength === 0) {\n                    var contentlength = maxLength - resultText.length;\n                    content = content.substring(0, contentlength);\n                }\n                else if (selectedTextLength > 0) {\n                    content = content.substring(0, selectedTextLength);\n                }\n            }\n        }\n        if (!isNullOrUndefined(content[imagesProperty[this.keywordIndex]])) {\n            var images = content[imagesProperty[this.keywordIndex]];\n            if (this.documentHelper.images.length > 0) {\n                this.pasteImageIndex = new Dictionary();\n                var newImages = {};\n                for (var img in images) {\n                    var newIndex = this.documentHelper.images.length + parseInt(img);\n                    newImages[newIndex] = images[img];\n                    this.pasteImageIndex.add(img, newIndex.toString());\n                }\n                images = newImages;\n            }\n            this.documentHelper.owner.parser.parseImages(images);\n        }\n        this.pasteContentsInternal(this.getBlocks(content, true), true, currentFormat);\n        if (this.isRemoteAction) {\n            this.updatePasteRevision();\n            this.owner.trackChangesPane.updateTrackChanges();\n        }\n        if (content[commentsProperty[this.keywordIndex]] && content[commentsProperty[this.keywordIndex]].length > 0) {\n            this.documentHelper.layout.layoutComments(this.documentHelper.comments);\n        }\n        if (!isNullOrUndefined(this.pasteImageIndex)) {\n            this.pasteImageIndex.destroy();\n        }\n        this.pasteImageIndex = undefined;\n        this.isInsertField = false;\n        this.isPasteListUpdated = false;\n        this.isLastParaMarkCopied = false;\n    };\n    Editor.prototype.pasteContentsInternal = function (widgets, isPaste, currentFormat) {\n        this.isPaste = isPaste;\n        var selection = this.documentHelper.selection;\n        if (selection.start.paragraph.isInsideTable && selection.end.paragraph.isInsideTable) {\n            var isTablePaste = false;\n            if (widgets.length === 1) {\n                var childWidgets = widgets[0].childWidgets;\n                if ((childWidgets.length < 3)) {\n                    if (childWidgets.length === 1 && childWidgets[0] instanceof TableWidget || childWidgets.length === 2 && childWidgets[0] instanceof TableWidget && childWidgets[1].isEmpty()) {\n                        isTablePaste = true;\n                    }\n                }\n            }\n            if (isTablePaste) {\n                var startCell = selection.start.paragraph.associatedCell;\n                var endCell = selection.end.paragraph.associatedCell;\n                var newTable = widgets[0].childWidgets[0];\n                // tslint:disable-next-line:max-line-length\n                if (startCell.ownerTable.equals(endCell.ownerTable)) {\n                    if (selection.start.paragraph.associatedCell.rowIndex === 0 && selection.end.paragraph.associatedCell.rowIndex === 0\n                        && startCell.equals(endCell) && !this.selection.isCellSelected(startCell, selection.start, selection.end)) {\n                        this.selection.currentPasteAction = 'InsertAsColumns';\n                        this.pasteAsNewColumn(newTable);\n                    }\n                    else {\n                        this.selection.currentPasteAction = 'OverwriteCells';\n                        this.pasteOverwriteCell(newTable);\n                    }\n                    this.isPaste = false;\n                    return;\n                }\n            }\n        }\n        var commentStartToInsert;\n        //if (!this.isSkipHistory) {\n        commentStartToInsert = this.checkAndRemoveComments();\n        //}\n        this.defaultPaste(widgets, currentFormat);\n        //if (!this.isSkipHistory) {\n        this.updateHistoryForComments(commentStartToInsert);\n        //}\n    };\n    Editor.prototype.defaultPaste = function (widgets, currentFormat) {\n        var selection = this.documentHelper.selection;\n        var isRemoved = true;\n        var layoutWholeDocument = false;\n        //if (!this.isSkipHistory) {\n        this.initComplexHistory('Paste');\n        //}\n        if (this.documentHelper.isListTextSelected) {\n            var paragraph = selection.start.paragraph;\n            if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n                this.onApplyList(undefined);\n            }\n        }\n        //if (!this.isSkipHistory) {\n        this.initHistory('Paste');\n        //}\n        if ((!selection.isEmpty && (!this.owner.documentHelper.isDragging || !this.owner.selection.isImageSelected)) || this.documentHelper.isListTextSelected) {\n            isRemoved = this.removeSelectedContentInternal(selection, selection.start, selection.end);\n        }\n        if (isRemoved) {\n            layoutWholeDocument = this.pasteContent(widgets, currentFormat);\n        }\n        else if (this.editorHistory) {\n            this.editorHistory.currentBaseHistoryInfo = undefined;\n        }\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            if (this.editorHistory.currentBaseHistoryInfo) {\n                if (this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n                    var start = this.selection.getTextPosBasedOnLogicalIndex(this.editorHistory.currentBaseHistoryInfo.insertPosition);\n                    var end = this.selection.getTextPosBasedOnLogicalIndex(this.editorHistory.currentBaseHistoryInfo.endPosition);\n                    if (!this.isRemoteAction) {\n                        var documentContent = !isNullOrUndefined(this.owner.sfdtExportModule) ? this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), start.currentWidget, start.offset, end.currentWidget, end.offset, false, true) : {};\n                        this.editorHistory.currentBaseHistoryInfo.pasteContent = documentContent;\n                    }\n                }\n            }\n            this.editorHistory.updateHistory();\n            this.editorHistory.updateComplexHistory();\n        }\n        else {\n            this.reLayout(selection, selection.isEmpty);\n        }\n        if (layoutWholeDocument) {\n            if (this.selection.pasteElement) {\n                this.selection.pasteElement.style.display = 'none';\n            }\n            this.layoutWholeDocument(true);\n        }\n        this.isPaste = false;\n    };\n    Editor.prototype.pasteAsNewColumn = function (data) {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        if (this.selection.start.paragraph.isInsideTable) {\n            if (this.checkIsNotRedoing()) {\n                this.initHistory('PasteColumn');\n            }\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n            if (this.editorHistory) {\n                //Clones the entire table to preserve in history.\n                var clonedTable = this.cloneTableToHistoryInfo(table);\n            }\n            this.selection.owner.isLayoutEnabled = false;\n            var cloneTable = data.clone();\n            var rowWidget = cloneTable.childWidgets[0];\n            var numberOfRows = cloneTable.childWidgets.length;\n            var numberOfColumns = rowWidget.childWidgets.length;\n            var cellIndex = startCell.columnIndex;\n            var startParagraph = undefined;\n            var newCell = undefined;\n            var columnCount = numberOfColumns;\n            var rowSpannedCells = [];\n            if (numberOfRows > table.childWidgets.length) {\n                this.addRows(numberOfRows - table.childWidgets.length, table);\n                this.tableUpdate(table);\n            }\n            else if (table.childWidgets.length > numberOfRows) {\n                this.addRows(table.childWidgets.length - numberOfRows, cloneTable, table);\n                this.tableUpdate(table);\n            }\n            for (var i = 0; i < columnCount; i++) {\n                for (var j = 0; j < table.childWidgets.length; j++) {\n                    var row = table.childWidgets[j];\n                    var rowWidget_1 = cloneTable.childWidgets[j];\n                    var cellWidget = rowWidget_1.childWidgets[i];\n                    var cell = row.childWidgets[startCell.columnIndex];\n                    newCell = this.createColumn(this.selection.getLastParagraph(startCell));\n                    newCell.index = j;\n                    newCell.rowIndex = row.index;\n                    newCell.containerWidget = row;\n                    var prevCell = row.previousWidget;\n                    var spannedCell = this.rowspannedCollection(row, rowSpannedCells);\n                    if (cell != null) {\n                        newCell.cellFormat.copyFormat(cell.cellFormat);\n                        newCell.cellFormat.rowSpan = 1;\n                    }\n                    else if (spannedCell.length > 0) {\n                        for (var z = 0; z < spannedCell.length; z++) {\n                            if (prevCell.rowIndex + (spannedCell[z].cellFormat.rowSpan - 1) >= row.rowIndex) {\n                                newCell.cellFormat.copyFormat(spannedCell[z].cellFormat);\n                                newCell.cellFormat.rowSpan = 1;\n                            }\n                        }\n                    }\n                    cellWidget.containerWidget = newCell.containerWidget;\n                    newCell.childWidgets = cellWidget.childWidgets;\n                    if (isNullOrUndefined(startParagraph)) {\n                        startParagraph = this.selection.getFirstParagraph(newCell);\n                    }\n                    if (cellIndex === 0) {\n                        row.childWidgets.splice(i, 0, newCell);\n                    }\n                    else {\n                        this.insertSpannedCells(row, rowSpannedCells, newCell, cellIndex);\n                    }\n                }\n            }\n            this.tableReLayout(table, startParagraph, newCell, true);\n        }\n    };\n    Editor.prototype.pasteAsNestedTable = function (widgets, currentFormat) {\n        var data = widgets[0].childWidgets[0];\n        if (this.selection.start.paragraph.isInsideTable) {\n            if (this.checkIsNotRedoing()) {\n                this.initHistory('PasteNested');\n            }\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n            if (this.editorHistory) {\n                //Clones the entire table to preserve in history.\n                this.cloneTableToHistoryInfo(table);\n            }\n            var startParagraph = undefined;\n            var dataTable = data.clone();\n            var endCell = this.selection.end.paragraph.containerWidget;\n            var pasteCell = void 0;\n            if (startCell != endCell) {\n                var row = startCell.ownerRow;\n                while (row != endCell.ownerRow.nextRow) {\n                    for (var cellIndex = startCell.columnIndex; cellIndex <= endCell.columnIndex; cellIndex++) {\n                        pasteCell = row.childWidgets[cellIndex];\n                        var clonedTable = dataTable.clone();\n                        var newPara = new ParagraphWidget();\n                        pasteCell.childWidgets = [];\n                        pasteCell.childWidgets[0] = clonedTable;\n                        pasteCell.childWidgets[1] = newPara;\n                        newPara.containerWidget = pasteCell;\n                        clonedTable.containerWidget = pasteCell;\n                        clonedTable.index = 0;\n                        newPara.index = 1;\n                        row.childWidgets[cellIndex] = pasteCell;\n                        if (isNullOrUndefined(startParagraph)) {\n                            startParagraph = this.selection.getFirstParagraph(pasteCell);\n                        }\n                    }\n                    row = row.nextRow;\n                }\n                this.tableReLayout(table, startParagraph, pasteCell);\n            }\n            else {\n                this.defaultPaste(widgets, currentFormat);\n            }\n        }\n    };\n    Editor.prototype.pasteOverwriteCell = function (data) {\n        if (this.selection.start.paragraph.isInsideTable) {\n            if (this.checkIsNotRedoing()) {\n                this.initHistory('PasteOverwrite');\n            }\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n            if (this.editorHistory) {\n                //Clones the entire table to preserve in history.\n                this.cloneTableToHistoryInfo(table);\n            }\n            var cloneTable = data.clone();\n            // let rowWidget: TableRowWidget = cloneTable.childWidgets[0] as TableRowWidget;\n            var numberOfRows = cloneTable.childWidgets.length;\n            var endCell = this.getOwnerCell(!this.selection.isForward);\n            // let columnCount: number = numberOfColumns;\n            // let newCell: TableCellWidget = undefined;\n            var coloumnIndexPaste = startCell.columnIndex;\n            var rowIndexPaste = startCell.rowIndex;\n            var startParagraph = undefined;\n            var row = this.selection.start.paragraph.associatedCell.ownerRow;\n            var rowWidget = cloneTable.childWidgets[0];\n            var newCells = void 0; // = rowWidget.childWidgets[0] as TableCellWidget;\n            var numberOfColumns = rowWidget.childWidgets.length;\n            var row2 = startCell.ownerRow;\n            if (startCell != endCell) {\n                var k = 0;\n                var rowSpan = void 0;\n                var rowSpanIndex = void 0;\n                var columnSpan = void 0;\n                var cloneCells = void 0;\n                while (row2 != endCell.ownerRow.nextRow) {\n                    rowWidget = cloneTable.childWidgets[k] || cloneTable.childWidgets[k = 0];\n                    var rowWidgetLength = rowWidget.childWidgets.length;\n                    var cellIndexSE = 0;\n                    for (var cellIndex = startCell.columnIndex; cellIndex <= endCell.columnIndex; cellIndex++) {\n                        rowWidget = cloneTable.childWidgets[k];\n                        if (rowSpan > 1 && rowSpanIndex === cellIndex) {\n                            cellIndex++;\n                            rowSpan--;\n                            rowSpanIndex = null;\n                        }\n                        if (columnSpan > 1 && cellIndexSE >= (rowWidgetLength - (columnSpan - 1))) {\n                            columnSpan = 1;\n                            cellIndex = cellIndex + (columnSpan - 1);\n                            cellIndexSE = 0;\n                        }\n                        newCells = rowWidget.childWidgets[cellIndexSE] || rowWidget.childWidgets[cellIndexSE = 0];\n                        cloneCells = newCells.clone();\n                        var pasteCell = row2.childWidgets[cellIndex];\n                        for (var x = 0; x < cloneCells.childWidgets.length; x++) {\n                            var newPara = cloneCells.childWidgets[x];\n                            newPara.containerWidget = pasteCell;\n                            cloneCells.childWidgets[x] = newPara;\n                        }\n                        pasteCell.childWidgets = cloneCells.childWidgets;\n                        if (newCells.cellFormat.rowSpan > 1) {\n                            rowSpan = newCells.cellFormat.rowSpan;\n                            rowSpanIndex = cellIndex;\n                        }\n                        if (newCells.cellFormat.columnSpan > 1) {\n                            columnSpan = newCells.cellFormat.columnSpan;\n                        }\n                        row2.childWidgets[cellIndex] = pasteCell;\n                        if (isNullOrUndefined(startParagraph)) {\n                            startParagraph = this.selection.getFirstParagraph(cloneCells);\n                        }\n                        cellIndexSE++;\n                    }\n                    row2 = row2.nextRow;\n                    k++;\n                }\n                this.tableReLayout(table, startParagraph, cloneCells);\n            }\n            else {\n                var rowsToAdd = void 0;\n                var rowSpan = void 0;\n                var rowSpanIndex = void 0;\n                var pasteCell = void 0;\n                if (numberOfRows > table.childWidgets.length - rowIndexPaste) {\n                    rowsToAdd = numberOfRows - table.childWidgets.length + rowIndexPaste;\n                    this.addRows(rowsToAdd, table);\n                }\n                for (var i = 0; i < numberOfRows; i++) {\n                    var cellIndex = startCell.columnIndex;\n                    rowWidget = cloneTable.childWidgets[i];\n                    var numberOfColumns_1 = rowWidget.childWidgets.length;\n                    for (var cellIterate = 0; cellIterate < numberOfColumns_1; cellIterate++) {\n                        newCells = rowWidget.childWidgets[cellIterate];\n                        var cloneCells = newCells.clone();\n                        if (rowSpan > 1 && rowSpanIndex === cellIndex) {\n                            cellIndex++;\n                            rowSpan--;\n                            rowSpanIndex = null;\n                        }\n                        pasteCell = row.childWidgets[cellIndex];\n                        if (!pasteCell) {\n                            pasteCell = cloneCells;\n                            pasteCell.containerWidget = row;\n                            pasteCell.index = cellIndex;\n                        }\n                        for (var index = 0; index < cloneCells.childWidgets.length; index++) {\n                            var newPara = cloneCells.childWidgets[index];\n                            newPara.containerWidget = pasteCell;\n                            cloneCells.childWidgets[index] = newPara;\n                        }\n                        pasteCell.childWidgets = cloneCells.childWidgets;\n                        if (newCells.cellFormat.rowSpan > 1) {\n                            rowSpan = newCells.cellFormat.rowSpan; //getting span\n                            rowSpanIndex = cellIndex;\n                        }\n                        row.childWidgets.splice(cellIndex++, 1, pasteCell);\n                        if (isNullOrUndefined(startParagraph)) {\n                            startParagraph = this.selection.getFirstParagraph(pasteCell);\n                        }\n                    }\n                    row = row.nextRow;\n                }\n                this.tableReLayout(table, startParagraph, pasteCell, true);\n            }\n        }\n    };\n    Editor.prototype.pasteAsNewRow = function (data) {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        if (this.checkIsNotRedoing()) {\n            this.initHistory('PasteRow');\n        }\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n        var endCell = this.getOwnerCell(!this.selection.isForward).getSplitWidgets()[0];\n        var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n        var row = endCell.ownerRow;\n        if (this.editorHistory) {\n            this.cloneTableToHistoryInfo(table);\n        }\n        var rowCount = this.getRowCountToInsert();\n        var columncount = this.getColumnCountToInsert();\n        var rows = [];\n        var index = row.rowIndex;\n        index++;\n        var pasteRowCount = data.childWidgets.length;\n        for (var i = 0; i < pasteRowCount; i++) {\n            var newRow = data.childWidgets[i].clone();\n            if (this.owner.enableTrackChanges) {\n                this.insertRevision(newRow.rowFormat, 'Insertion');\n            }\n            rows.push(newRow);\n        }\n        table.insertTableRowsInternal(rows, index, false);\n        var cellWidget = undefined;\n        var paragraphWidget = undefined;\n        if ((table.childWidgets[index] instanceof TableRowWidget)) {\n            cellWidget = table.childWidgets[index].firstChild;\n            paragraphWidget = this.selection.getFirstParagraph(cellWidget);\n        }\n        else {\n            var widget = undefined;\n            while (!(widget instanceof TableWidget)) {\n                widget = table.nextRenderedWidget;\n            }\n            paragraphWidget = this.documentHelper.getFirstParagraphInFirstCell(widget);\n        }\n        this.copyContent(table);\n        this.documentHelper.layout.reLayoutTable(table);\n        this.selection.selectParagraphInternal(paragraphWidget, true);\n        this.reLayout(this.selection, true);\n    };\n    Editor.prototype.tableUpdate = function (table) {\n        table.isGridUpdated = false;\n        table.calculateGrid();\n        table.buildTableColumns();\n        table.isGridUpdated = true;\n    };\n    Editor.prototype.rowspannedCollection = function (row, rowSpannedCells) {\n        for (var j = 0; j < row.childWidgets.length; j++) {\n            var rowCell = row.childWidgets[j];\n            if (rowCell.cellFormat.rowSpan > 1) {\n                rowSpannedCells.push(rowCell);\n            }\n        }\n        return rowSpannedCells;\n    };\n    Editor.prototype.insertSpannedCells = function (row, rowSpannedCells, newCell, cellIndex) {\n        var isCellInserted = false;\n        for (var j = 0; j < row.childWidgets.length; j++) {\n            var rowCell = row.childWidgets[j];\n            // Add the row spanned cells to colection for adding column before / after row spnned cells.\n            if (rowCell.cellFormat.rowSpan > 1) {\n                rowSpannedCells.push(rowCell);\n            }\n            if (rowCell.columnIndex + rowCell.cellFormat.columnSpan === cellIndex) {\n                row.childWidgets.splice(rowCell.cellIndex + 1, 0, newCell);\n                isCellInserted = true;\n            }\n            else if (cellIndex > rowCell.columnIndex && rowCell.columnIndex + rowCell.cellFormat.columnSpan > cellIndex\n                && cellIndex < rowCell.columnIndex + rowCell.cellFormat.columnSpan) {\n                row.childWidgets.splice(rowCell.cellIndex + 1, 0, newCell);\n                isCellInserted = true;\n            }\n            if (isCellInserted) {\n                break;\n            }\n        }\n        // If the cell is not inserted for row, then check for row spanned cells.\n        if (!isCellInserted) {\n            if (rowSpannedCells.length > 0) {\n                for (var k = 0; k < rowSpannedCells.length; k++) {\n                    var rowSpannedCell = rowSpannedCells[k];\n                    if (rowSpannedCell.ownerRow !== row\n                        && row.rowIndex <= rowSpannedCell.ownerRow.rowIndex + rowSpannedCell.cellFormat.rowSpan - 1) {\n                        if (rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan === cellIndex) {\n                            if (rowSpannedCell.cellIndex > row.childWidgets.length) {\n                                row.childWidgets.push(newCell);\n                            }\n                            else {\n                                row.childWidgets.splice(rowSpannedCell.cellIndex + 1, 0, newCell);\n                            }\n                            isCellInserted = true;\n                        }\n                        else if (cellIndex > rowSpannedCell.columnIndex &&\n                            rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan > cellIndex\n                            && cellIndex < rowSpannedCell.columnIndex + rowSpannedCell.cellFormat.columnSpan) {\n                            row.childWidgets.splice(rowSpannedCell.columnIndex, 0, newCell);\n                            isCellInserted = true;\n                        }\n                    }\n                    if (isCellInserted) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.addRows = function (count, table, ownerTable) {\n        var rowPlacement = 'Below';\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        var isInsertRow = false;\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        var rows = table.childWidgets.length;\n        var rowWidget = table.childWidgets[rows - 1];\n        var column = rowWidget.childWidgets.length;\n        var cloneTable = ownerTable ? ownerTable : table;\n        if (startPos.paragraph.isInsideTable) {\n            var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n            var endCell = rowWidget.childWidgets[column - 1];\n            var row = endCell.ownerRow;\n            this.rowInsertion(count, rowPlacement, startCell, endCell, row, table, isInsertRow);\n        }\n        //this.reLayout(this.selection, true);\n    };\n    Editor.prototype.pasteContent = function (widgets, currentFormat) {\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var insertPosition = '';\n        this.updateInsertPosition();\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            insertPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n        }\n        else {\n            var position = this.selection.start;\n            if (!this.selection.isForward) {\n                position = this.selection.end;\n            }\n            var blockInfo = this.selection.getParagraphInfo(position);\n            insertPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        this.documentHelper.owner.isLayoutEnabled = true;\n        this.documentHelper.owner.isPastingContent = true;\n        var layoutWholeDocument = this.pasteCopiedData(widgets, currentFormat);\n        var endPosition = '';\n        this.updateEndPosition();\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            endPosition = this.editorHistory.currentBaseHistoryInfo.endPosition;\n        }\n        else {\n            var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n            endPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        if (this.selection.start.paragraph.isEmpty() && this.selection.start.paragraph.paragraphFormat.bidi) {\n            this.documentHelper.layout.reLayoutParagraph(this.selection.start.paragraph, 0, 0);\n        }\n        var startPosition = new TextPosition(this.documentHelper.owner);\n        this.setPositionForCurrentIndex(startPosition, insertPosition);\n        var end = new TextPosition(this.documentHelper.owner);\n        this.setPositionForCurrentIndex(end, endPosition);\n        this.pasteTextPosition = { startPosition: startPosition, endPosition: end };\n        this.documentHelper.owner.isPastingContent = false;\n        this.documentHelper.selection.fireSelectionChanged(true);\n        return layoutWholeDocument;\n    };\n    Editor.prototype.pasteCopiedData = function (bodyWidget, currentFormat) {\n        var layoutWholeDocument = false;\n        var hasFootNoteElement = false;\n        if (this.documentHelper.layout.isBidiReLayout) {\n            this.documentHelper.layout.isBidiReLayout = false;\n        }\n        if (this.isPaste && this.isSectionEmpty(this.selection) && !this.selection.start.paragraph.isInHeaderFooter) {\n            this.previousSectionFormat = new WSectionFormat();\n            this.previousSectionFormat.copyFormat(this.selection.start.paragraph.bodyWidget.sectionFormat);\n            this.selection.start.paragraph.bodyWidget.sectionFormat.copyFormat(bodyWidget[0].sectionFormat);\n            this.selection.start.paragraph.bodyWidget.sectionFormat.footerDistance = this.previousSectionFormat.footerDistance;\n            this.selection.start.paragraph.bodyWidget.sectionFormat.headerDistance = this.previousSectionFormat.headerDistance;\n            if (this.owner.viewer instanceof PageLayoutViewer) {\n                var page = this.selection.start.paragraph.bodyWidget.page;\n                this.owner.viewer.updatePageBoundingRectangle(this.selection.start.paragraph.bodyWidget, page, page.boundingRectangle.y);\n                this.owner.viewer.updateClientArea(this.selection.start.paragraph.bodyWidget, page);\n            }\n            layoutWholeDocument = true;\n        }\n        for (var k = 0; k < bodyWidget.length; k++) {\n            if (k !== 0) {\n                this.insertSectionBreak(bodyWidget[k].sectionFormat.breakCode);\n            }\n            var widgets = bodyWidget[k].childWidgets;\n            var isConsiderLastBlock = false;\n            for (var j = 0; j < widgets.length; j++) {\n                var widget = widgets[j];\n                if (widget instanceof TableWidget) {\n                    isConsiderLastBlock = true;\n                }\n                if (widget instanceof ParagraphWidget && widget.childWidgets.length === 0) {\n                    widget.childWidgets[0] = new LineWidget(widget);\n                }\n                if (widget instanceof ParagraphWidget && !isNullOrUndefined(currentFormat)) {\n                    widget.paragraphFormat.copyFormat(currentFormat);\n                    var insertFormat = this.copyInsertFormat(this.selection.start.paragraph.characterFormat, false);\n                    widget.characterFormat.mergeFormat(insertFormat);\n                }\n                var isPara = widget instanceof ParagraphWidget && (this.owner.enableLocalPaste ?\n                    isNullOrUndefined(widget.isCreatedUsingHtmlSpanTag) ? false : !widget.isCreatedUsingHtmlSpanTag\n                    : widget.isCreatedUsingHtmlSpanTag);\n                if (widget instanceof ParagraphWidget && (isPara || (j === widgets.length - 1 && (this.isLastParaMarkCopied || this.isInsertField || this.isInsertingTOC || isConsiderLastBlock || this.owner.documentHelper.isDragging || this.isRemoteAction)))\n                    && (!isNullOrUndefined(widget.paragraphFormat.listFormat)\n                        && isNullOrUndefined(widget.paragraphFormat.listFormat.list)\n                        && widget.paragraphFormat.listFormat.listId === -1)) {\n                    var newParagraph = widget;\n                    if (newParagraph.childWidgets.length > 0\n                        && newParagraph.childWidgets[0].children.length > 0) {\n                        var insertPosition = this.selection.start;\n                        if ((insertPosition.paragraph.paragraphFormat.textAlignment === 'Center'\n                            || insertPosition.paragraph.paragraphFormat.textAlignment === 'Right') &&\n                            insertPosition.paragraph.paragraphFormat.listFormat.listId === -1) {\n                            insertPosition.paragraph.x = this.owner.viewer.clientActiveArea.x;\n                        }\n                        if (this.currentPasteOptions === 'KeepTextOnly') {\n                            var paraFormat = new WParagraphFormat(this.selection.start.paragraph);\n                            this.selection.start.paragraph.paragraphFormat = paraFormat;\n                        }\n                        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n                            this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newParagraph.clone());\n                        }\n                        hasFootNoteElement = this.insertElement(newParagraph.childWidgets[0].children, newParagraph.paragraphFormat);\n                    }\n                }\n                else if (widget instanceof BlockWidget) {\n                    var block = widget;\n                    var startParagraph = this.selection.start.paragraph;\n                    var isTable = block instanceof TableWidget;\n                    if (isTable) {\n                        var table = block;\n                        this.generateTableRevision(table);\n                        if (startParagraph.isInsideTable) {\n                            //Handled to resize table based on parent cell width.\n                            var clientWidth = startParagraph.getContainerWidth();\n                            table.fitCellsToClientArea(clientWidth);\n                        }\n                        if (startParagraph.isEmpty() && startParagraph.previousWidget instanceof TableWidget && !this.isPaste) {\n                            this.insertTableRows(table, startParagraph.previousWidget);\n                            return layoutWholeDocument;\n                        }\n                    }\n                    this.insertBlockInternal(block);\n                }\n            }\n        }\n        if (hasFootNoteElement) {\n            layoutWholeDocument = true;\n            if (this.pasteFootNoteType === 'Footnote') {\n                this.arrangeFootnoteCollection();\n            }\n            else if (this.pasteFootNoteType === 'Endnote') {\n                this.arrangeEndnoteCollection();\n            }\n        }\n        return layoutWholeDocument;\n    };\n    Editor.prototype.arrangeEndnoteCollection = function () {\n        for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n            for (var j = 0; j < this.documentHelper.endnoteCollection.length - 1 - i; j++) {\n                var currentStart = this.selection.getElementPosition(this.documentHelper.endnoteCollection[j]).startPosition;\n                var nextStart = this.selection.getElementPosition(this.documentHelper.endnoteCollection[j + 1]).startPosition;\n                if (!currentStart.isExistBefore(nextStart)) {\n                    var tempElementBox = this.documentHelper.endnoteCollection[j];\n                    this.documentHelper.endnoteCollection[j] = this.documentHelper.endnoteCollection[j + 1];\n                    this.documentHelper.endnoteCollection[j + 1] = tempElementBox;\n                }\n            }\n        }\n    };\n    Editor.prototype.arrangeFootnoteCollection = function () {\n        for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n            for (var j = 0; j < this.documentHelper.footnoteCollection.length - 1 - i; j++) {\n                var currentStart = this.selection.getElementPosition(this.documentHelper.footnoteCollection[j]).startPosition;\n                var nextStart = this.selection.getElementPosition(this.documentHelper.footnoteCollection[j + 1]).startPosition;\n                if (!currentStart.isExistBefore(nextStart)) {\n                    var tempElementBox = this.documentHelper.footnoteCollection[j];\n                    this.documentHelper.footnoteCollection[j] = this.documentHelper.footnoteCollection[j + 1];\n                    this.documentHelper.footnoteCollection[j + 1] = tempElementBox;\n                }\n            }\n        }\n    };\n    Editor.prototype.generateTableRevision = function (table) {\n        if (this.owner.enableTrackChanges && !isNullOrUndefined(table)) {\n            for (var i = 0; i < table.childWidgets.length; i++) {\n                var row = table.childWidgets[i];\n                this.insertRevision(row.rowFormat, 'Insertion');\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    for (var k = 0; k < cell.childWidgets.length; k++) {\n                        var para = cell.childWidgets[k];\n                        if (!isNullOrUndefined(para)) {\n                            this.insertRevisionForBlock(para, 'Insertion');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.isSectionEmpty = function (selection) {\n        var startParagraph = selection.start.paragraph;\n        if (startParagraph) {\n            if (startParagraph.isInsideTable || startParagraph.isInHeaderFooter ||\n                startParagraph !== selection.end.paragraph) {\n                return false;\n            }\n            var bodyWidget = startParagraph.bodyWidget;\n            if (bodyWidget) {\n                var page = bodyWidget.page;\n                if (page) {\n                    if ((isNullOrUndefined(page.previousPage) || page.previousPage.sectionIndex !== page.sectionIndex)\n                        && isNullOrUndefined(page.nextPage) && startParagraph.isEmpty() &&\n                        bodyWidget.childWidgets.length === 1) {\n                        var isEmpty = true;\n                        var sectionIndex = selection.start.paragraph.bodyWidget.sectionIndex;\n                        var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n                        if (headerFooters) {\n                            for (var index in headerFooters) {\n                                var headerFooter = headerFooters[index];\n                                if (!isNullOrUndefined(headerFooter)) {\n                                    var widget = headerFooter.childWidgets[0];\n                                    if (widget instanceof TableWidget) {\n                                        isEmpty = false;\n                                    }\n                                    else if ((widget instanceof ParagraphWidget) && !widget.isEmpty()) {\n                                        isEmpty = false;\n                                    }\n                                }\n                                else {\n                                    isEmpty = false;\n                                }\n                                if (!isEmpty) {\n                                    break;\n                                }\n                            }\n                            return isEmpty;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Insert table on undo\n     *\n     * @param {TableWidget} table - Specifies the table\n     * @param {TableWidget} newTable - Speciefies the new table\n     * @param {boolean} moveRows - Specifies the new row\n     * @private\n     * @private {void}\n     */\n    Editor.prototype.insertTableInternal = function (table, newTable, moveRows, skipRemoving) {\n        //Gets the index of current table.\n        var insertIndex = table.index;\n        var owner;\n        var currentParagraph = this.selection.start.paragraph;\n        if (!table.isInsideTable && newTable.isInsideTable) {\n            insertIndex = newTable.index;\n            skipRemoving = true;\n            owner = currentParagraph.containerWidget;\n        }\n        if (moveRows) {\n            //Moves the rows to table.\n            for (var i = 0, index = 0; i < table.childWidgets.length; i++, index++) {\n                var row = table.childWidgets[i];\n                newTable.childWidgets.splice(index, 0, row);\n                row.containerWidget = newTable;\n                table.childWidgets.splice(i, 1);\n                i--;\n            }\n        }\n        if (!currentParagraph.isInsideTable && isNullOrUndefined(owner)) {\n            table.containerWidget = currentParagraph.containerWidget;\n            owner = currentParagraph.containerWidget;\n        }\n        else if (isNullOrUndefined(owner)) {\n            owner = table.containerWidget;\n        }\n        if (table.isInsideTable) {\n            owner = owner.combineWidget(this.owner.viewer);\n        }\n        //remove old table revisions if it is present.\n        this.constructRevisionsForTable(table, false);\n        if (!skipRemoving) {\n            this.removeBlock(table, true);\n        }\n        this.removeRevisionFromTable(table);\n        if (owner instanceof TableCellWidget) {\n            owner = owner.combineWidget(this.owner.viewer);\n        }\n        else {\n            var curretBlock = this.documentHelper.layout.checkAndGetBlock(owner, insertIndex);\n            if (owner.childWidgets.indexOf(curretBlock) !== -1) {\n                insertIndex = owner.childWidgets.indexOf(curretBlock);\n            }\n        }\n        //Inserts table in the current table position.\n        var blockAdvCollection = owner.childWidgets;\n        blockAdvCollection.splice(insertIndex, 0, newTable);\n        if (!skipRemoving) {\n            table.containerWidget = undefined;\n            newTable.index = table.index;\n        }\n        newTable.containerWidget = owner;\n        this.documentHelper.layout.clearTableWidget(newTable, true, true, true);\n        newTable.buildTableColumns();\n        this.constructRevisionsForTable(newTable, true);\n        newTable.isGridUpdated = true;\n        this.updateNextBlocksIndex(newTable, true);\n        this.documentHelper.layout.linkFieldInTable(newTable);\n        this.documentHelper.layout.layoutBodyWidgetCollection(newTable.index, owner, newTable, false);\n    };\n    Editor.prototype.removeRevisionFromTable = function (table) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.rowFormat.revisions.length > 0) {\n                for (var j = 0; j < row.rowFormat.revisions.length; j++) {\n                    if (row.rowFormat.revisions[j].range.length === 0) {\n                        var revisionIndex = row.rowFormat.revisions.indexOf(row.rowFormat.revisions[j]);\n                        row.rowFormat.revisions.splice(revisionIndex, 1);\n                        j--;\n                    }\n                }\n            }\n        }\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.canConstructRevision = function (item) {\n        if ((item.revisions.length > 0 && item.revisions[0].range.length === 0) || item.removedIds.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.constructRevisionsForTable = function (table, canConstructRevision) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var rowWidget = table.childWidgets[i];\n            if (canConstructRevision) {\n                if (this.canConstructRevision(rowWidget.rowFormat)) {\n                    this.constructRevisionFromID(rowWidget.rowFormat, true);\n                }\n                for (var rowIndex = 0; rowIndex < rowWidget.childWidgets.length; rowIndex++) {\n                    var cellWidget = rowWidget.childWidgets[rowIndex];\n                    for (var paraIndex = 0; paraIndex < cellWidget.childWidgets.length; paraIndex++) {\n                        if (cellWidget.childWidgets[paraIndex] instanceof ParagraphWidget) {\n                            this.constructRevisionsForBlock(cellWidget.childWidgets[paraIndex], canConstructRevision);\n                        }\n                        else if (cellWidget.childWidgets[paraIndex] instanceof TableWidget) {\n                            this.constructRevisionsForTable(cellWidget.childWidgets[paraIndex], true);\n                        }\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(this.owner.editorHistoryModule) && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing)) {\n                    this.deleteRevision(rowWidget);\n                }\n                else {\n                    this.removeDeletedCellRevision(rowWidget);\n                }\n            }\n        }\n    };\n    Editor.prototype.deleteRevision = function (row) {\n        if (row.rowFormat.revisions.length > 0) {\n            for (var i = 0; i < row.rowFormat.revisions.length; i++) {\n                var currentRevision = row.rowFormat.revisions[i];\n                for (var j = 0; j < currentRevision.range.length; j++) {\n                    currentRevision.range.splice(j, 1);\n                    j--;\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                }\n                if (currentRevision.range.length === 0) {\n                    this.owner.revisions.remove(currentRevision);\n                }\n            }\n        }\n    };\n    Editor.prototype.constructRevisionsForBlock = function (paragraph, canConstructRevision) {\n        for (var linIndex = 0; linIndex < paragraph.childWidgets.length; linIndex++) {\n            var lineWidget = paragraph.childWidgets[linIndex];\n            for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                if (canConstructRevision) {\n                    if (lineWidget.children[elementIndex] instanceof ElementBox && this.canConstructRevision(lineWidget.children[elementIndex])) {\n                        this.constructRevisionFromID(lineWidget.children[elementIndex], true);\n                    }\n                }\n            }\n        }\n        if (this.canConstructRevision(paragraph.characterFormat)) {\n            this.constructRevisionFromID(paragraph.characterFormat, true);\n        }\n    };\n    /**\n     * @private\n     * @param paraWidget\n     * @param startoffset\n     * @param endoffset\n     * @param revisionId\n     * @param isParaMarkIncluded\n     * @returns {void}\n     */\n    Editor.prototype.applyRevisionForCurrentPara = function (paraWidget, startoffset, endoffset, revisionId, isParaMarkIncluded) {\n        var elementInfo = paraWidget.getInline(startoffset + 1, 0);\n        var currentElement = elementInfo.element;\n        var skipElement = false;\n        if (startoffset === paraWidget.getLength()) {\n            skipElement = true;\n        }\n        // Update the end offset if start and end both are same and both are positioned in the end of previous para of splitted para.\n        if (startoffset === endoffset && paraWidget.nextSplitWidget) {\n            endoffset += currentElement.length;\n        }\n        var endElement = paraWidget.getInline(endoffset, 0).element;\n        // Set false if paraWidget contains nextSplitWidget because we shouldn't include paramark if current para contains nextSplitWidget.\n        if (!isNullOrUndefined(paraWidget.nextSplitWidget)) {\n            isParaMarkIncluded = false;\n        }\n        // Get the total length of previous splitted widgets of current para to include paramark because endoffset point out to the end of current. \n        var lastIndex = 0;\n        var tempPara = paraWidget;\n        while (tempPara) {\n            if (!isNullOrUndefined(tempPara)) {\n                lastIndex += tempPara.getLength();\n            }\n            tempPara = tempPara.previousSplitWidget;\n        }\n        if (!isNullOrUndefined(paraWidget.previousSplitWidget) && lastIndex !== 0 && startoffset !== lastIndex) {\n            skipElement = false;\n        }\n        if (endoffset > lastIndex) {\n            isParaMarkIncluded = true;\n        }\n        if (!isNullOrUndefined(currentElement) && !isNullOrUndefined(endElement)) {\n            if (!skipElement && currentElement === endElement) {\n                currentElement.removedIds.push(revisionId);\n                this.constructRevisionFromID(currentElement, true);\n            }\n            else {\n                while (!isNullOrUndefined(currentElement) && currentElement !== endElement) {\n                    if (!skipElement) {\n                        currentElement.removedIds.push(revisionId);\n                        this.constructRevisionFromID(currentElement, true);\n                    }\n                    if (!isNullOrUndefined(currentElement.nextNode)) {\n                        if (currentElement.nextNode instanceof BookmarkElementBox) {\n                            currentElement = currentElement.nextNode;\n                        }\n                        else {\n                            currentElement = currentElement.nextNode.nextValidNodeForTracking;\n                        }\n                    }\n                    skipElement = false;\n                }\n                if (!isNullOrUndefined(currentElement) && !skipElement) {\n                    currentElement.removedIds.push(revisionId);\n                    this.constructRevisionFromID(currentElement, true);\n                }\n            }\n        }\n        else if (!isNullOrUndefined(currentElement) && !skipElement) {\n            currentElement.removedIds.push(revisionId);\n            this.constructRevisionFromID(currentElement, true);\n        }\n        else if (!isNullOrUndefined(endElement)) {\n            endElement.removedIds.push(revisionId);\n            this.constructRevisionFromID(endElement, true);\n        }\n        if (isParaMarkIncluded) {\n            paraWidget.characterFormat.removedIds.push(revisionId);\n            this.constructRevisionFromID(paraWidget.characterFormat, true);\n        }\n    };\n    /**\n     * Insert table on undo\n     *\n     * @param {Selection} selection - Specified the selection\n     * @param {WBlock} block - Spcifies the block\n     * @param {WTable} table - Specifies the table.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertBlockTable = function (selection, block, table) {\n        var offset = selection.start.offset;\n        var lineIndex = selection.start.paragraph.childWidgets.indexOf(selection.start.currentWidget);\n        if (block instanceof ParagraphWidget && offset > 0) {\n            //Moves the inline items before selection start to the inserted paragraph.\n            this.moveInlines(selection.start.paragraph, block, 0, 0, selection.start.paragraph.firstChild, offset, selection.start.currentWidget);\n            selection.selectParagraphInternal(selection.start.paragraph, true);\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(this.selection.getHierarchicalIndex(block, offset.toString()), true);\n            }\n        }\n        if (offset > 0 && this.checkInsertPosition(selection)) {\n            this.updateHistoryPosition(selection.start, true);\n        }\n        var index = table.indexInOwner;\n        table.containerWidget.childWidgets.splice(index, 0, block);\n        block.containerWidget = table.containerWidget;\n        block.index = table.index;\n        this.updateNextBlocksIndex(block, true);\n        // Insert the revision based on id when perform accept + undo in pagebreak case\n        if (block instanceof ParagraphWidget) {\n            this.constructRevisionsForBlock(block, true);\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(block.index, block.containerWidget, block, false);\n        if (this.checkInsertPosition(selection)) {\n            var paragraph = undefined;\n            if (block instanceof ParagraphWidget) {\n                paragraph = block;\n            }\n            if (block instanceof TableWidget) {\n                paragraph = this.documentHelper.getFirstParagraphInFirstCell(block);\n            }\n            this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n        }\n    };\n    /**\n     * On cut handle selected content remove and relayout\n     *\n     * @param {Selection} selection - Specified the selection\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.handleCut = function (selection) {\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        // this.owner.isShiftingEnabled = true;     \n        var image = undefined;\n        if (startPosition.paragraph === endPosition.paragraph && startPosition.offset + 1 === endPosition.offset) {\n            //Gets selected image and copy image to clipboard.\n            var index = 0;\n            var currentInline = startPosition.paragraph.getInline(endPosition.offset, index);\n            var inline = currentInline.element;\n            image = inline;\n        }\n        var removedCommentStart = this.checkAndRemoveComments();\n        var blockInfo = this.selection.getParagraphInfo(startPosition);\n        selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        this.initHistory('Cut');\n        selection.owner.isShiftingEnabled = true;\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(selection.editPosition, true);\n            }\n        }\n        this.deleteSelectedContent(endPosition.paragraph, selection, startPosition, endPosition, 3);\n        var textPosition = new TextPosition(selection.owner);\n        this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n        selection.selectContent(textPosition, true);\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            if (this.checkEndPosition(selection)) {\n                this.updateHistoryPosition(selection.end, false);\n            }\n        }\n        this.reLayout(selection);\n        this.updateHistoryForComments(removedCommentStart);\n    };\n    Editor.prototype.insertInlineInternal = function (element, revisionType) {\n        var selection = this.selection;\n        var length = element.length;\n        var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n        revisionType = (isNullOrUndefined(revisionType) ? 'Insertion' : revisionType);\n        if (selection.start.paragraph.isEmpty()) {\n            var paragraph = selection.start.paragraph;\n            if ((paragraph.paragraphFormat.textAlignment === 'Center' || paragraph.paragraphFormat.textAlignment === 'Right')\n                && paragraph.paragraphFormat.listFormat.listId === -1) {\n                paragraph.x = this.owner.viewer.clientActiveArea.x;\n            }\n            var isUndoing = !isNullOrUndefined(this.editorHistory) ? (this.editorHistory.isUndoing || this.editorHistory.isRedoing) : false;\n            paragraph.childWidgets[0].children.push(element);\n            element.line = paragraph.childWidgets[0];\n            if (this.owner.enableTrackChanges && element.isValidNodeForTracking && !isUndoing) {\n                this.insertRevision(element, revisionType);\n            }\n            if (element.removedIds.length > 0 || isUndoing) {\n                this.constructRevisionFromID(element, true);\n            }\n            element.linkFieldCharacter(this.documentHelper);\n            if (element instanceof FootnoteElementBox) {\n                if (element.footnoteType === 'Footnote') {\n                    this.updateFootnoteCollection(element);\n                }\n                if (element.footnoteType === 'Endnote') {\n                    this.updateEndnoteCollection(element);\n                }\n            }\n            this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0, undefined, undefined);\n        }\n        else {\n            var indexInInline = 0;\n            var inlineObj = selection.start.currentWidget.getInline(selection.start.offset, indexInInline);\n            var curInline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            this.insertElementInternal(curInline, element, indexInInline, revisionType, true);\n        }\n        var revision = element.revisions[0];\n        if (!isNullOrUndefined(revision)) {\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n        }\n        this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n    };\n    Editor.prototype.insertElement = function (element, paragraphFormat) {\n        var isElementHasEndNote = false;\n        var selection = this.selection;\n        var length = 0;\n        var paragraph = undefined;\n        var lineIndex = -1;\n        var lineWidget = undefined;\n        var insertIndex = 0;\n        var begin = undefined;\n        var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n        var isTrackingEnabled = this.owner.enableTrackChanges;\n        var curInline = undefined;\n        var prevElement = undefined;\n        var indexInInline = 0;\n        if (selection.start.paragraph.isEmpty()) {\n            paragraph = selection.start.paragraph;\n            lineWidget = paragraph.childWidgets[0];\n            lineIndex = 0;\n        }\n        else {\n            var inlineObj = selection.start.currentWidget.getInline(selection.start.offset, indexInInline);\n            curInline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            paragraph = curInline.line.paragraph;\n            lineIndex = paragraph.childWidgets.indexOf(curInline.line);\n            insertIndex = curInline.indexInOwner;\n            lineWidget = curInline.line;\n            if (indexInInline === curInline.length) { // Add new Element in current \n                insertIndex++;\n                begin = false;\n            }\n            else if (indexInInline === 0) {\n                if (isNullOrUndefined(curInline.previousNode)) {\n                    insertIndex = 0;\n                }\n                begin = true;\n            }\n            else {\n                insertIndex++;\n                prevElement = new TextElementBox();\n                prevElement.characterFormat.copyFormat(curInline.characterFormat);\n                prevElement.text = curInline.text.substring(indexInInline);\n                curInline.text = curInline.text.slice(0, indexInInline);\n                if (curInline.revisions.length > 0 && !this.owner.enableTrackChanges) {\n                    this.splitRevisionForSpittedElement(curInline, prevElement);\n                }\n                lineWidget.children.splice(insertIndex, 0, prevElement);\n                prevElement.line = curInline.line;\n            }\n        }\n        for (var i = 0; i < element.length; i++) {\n            length += element[i].length;\n            if (element[i] instanceof TextElementBox && element[i].text.indexOf(' ') >= 0) {\n                this.documentHelper.triggerSpellCheck = true;\n            }\n            var prevRevisionsCount = element[i].revisions.length;\n            element[i].ischangeDetected = true;\n            lineWidget.children.splice(insertIndex, 0, element[i]);\n            element[i].line = lineWidget;\n            element[i].linkFieldCharacter(this.documentHelper);\n            var isRevisionCombined = this.updateRevisionForElement(curInline, element[i], indexInInline, (i === 0) ? true : false, prevElement, begin);\n            //Check to combine elements with previous / next para\n            if (isTrackingEnabled && !isRevisionCombined && element[i].revisions.length === prevRevisionsCount) {\n                //if (!(element[i] instanceof FieldElementBox && (element[i] as FieldElementBox).fieldType === 2)) {\n                this.checkToCombineRevisionsinBlocks(element[i], prevRevisionsCount === element[i].revisions.length, (i > 0 && i === element.length - 1), 'Insertion');\n                //}\n            }\n            curInline = element[i];\n            insertIndex++;\n            if (element[i] instanceof FootnoteElementBox) {\n                this.pasteFootNoteType = element[i].footnoteType;\n                isElementHasEndNote = true;\n            }\n        }\n        if ((!this.isPaste) && paragraphFormat && (isNullOrUndefined(paragraph.paragraphFormat.listFormat.list) ||\n            (!isNullOrUndefined(paragraph.paragraphFormat.listFormat) && paragraph.paragraphFormat.listFormat.listId === -1))) {\n            paragraph.paragraphFormat.copyFormat(paragraphFormat);\n        }\n        if (this.isPaste) {\n            if (this.isRemoteAction) {\n                var revision = paragraphFormat.ownerBase.characterFormat.revisions;\n                var isBreak = false;\n                for (var i = 0; i < revision.length; i++) {\n                    paragraph.characterFormat.revisions.push(revision[i]);\n                    var range = revision[i].range;\n                    for (var j = 0; j < range.length; j++) {\n                        if (range[j] instanceof WCharacterFormat && range[j] == paragraphFormat.ownerBase.characterFormat) {\n                            range.splice(j, 1);\n                            range.push(paragraph.characterFormat);\n                            isBreak = true;\n                            break;\n                        }\n                    }\n                    if (isBreak) {\n                        break;\n                    }\n                }\n            }\n            this.viewer.updateClientAreaForBlock(paragraph, true);\n            paragraph.x = this.viewer.clientActiveArea.x;\n        }\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, 0, this.isInsertField ? undefined : paragraph.paragraphFormat.bidi);\n        this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n        return isElementHasEndNote;\n    };\n    Editor.prototype.updateRevisionForElement = function (currentElement, newElement, indexInInline, isFirstItem, prevElement, isBeginning) {\n        if (!this.owner.enableTrackChanges) {\n            return false;\n        }\n        if (isNullOrUndefined(currentElement) && isNullOrUndefined(prevElement)) {\n            return false;\n        }\n        var isMiddle = isNullOrUndefined(isBeginning) ? true : false;\n        var prevRevisionCount = newElement.revisions.length;\n        if (isFirstItem) {\n            if (isMiddle) {\n                var isRevisionCombined = this.checkToMapRevisionWithInlineText(currentElement, indexInInline, newElement, false, 'Insertion');\n                if (isRevisionCombined || newElement.revisions.length > prevRevisionCount) {\n                    this.copyElementRevision(currentElement, prevElement, true);\n                }\n                else if (newElement.revisions.length === 0) {\n                    this.splitRevisionForSpittedElement(currentElement, prevElement);\n                    this.insertRevision(newElement, 'Insertion');\n                }\n            }\n            else if (isBeginning) {\n                return this.insertRevisionAtBegining(currentElement, newElement, 'Insertion');\n            }\n            else {\n                return this.insertRevisionAtEnd(currentElement, newElement, 'Insertion');\n            }\n        }\n        else {\n            // if (currentElement instanceof FieldElementBox && currentElement.fieldType === 2) {\n            //     currentElement = (currentElement as FieldElementBox).previousElement;\n            // }\n            return this.insertRevisionAtEnd(currentElement, newElement, 'Insertion');\n        }\n        return false;\n    };\n    Editor.prototype.insertElementInternal = function (element, newElement, index, revisionType, relayout) {\n        var line = element.line;\n        var paragraph = line.paragraph;\n        var lineIndex = line.indexInOwner;\n        var insertIndex = element.indexInOwner;\n        var isBidi = paragraph.paragraphFormat.bidi && element.isRightToLeft;\n        var isEqualFormat = false;\n        revisionType = isNullOrUndefined(revisionType) ? 'Insertion' : revisionType;\n        var isUndoing = this.skipTracking();\n        var isTrackingEnabled = this.owner.enableTrackChanges;\n        var isRevisionCombined = false;\n        var prevRevisionCount = newElement.revisions.length;\n        if (this.owner.editorHistoryModule && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing)\n            && newElement instanceof TextElementBox) {\n            isEqualFormat = element.characterFormat.isEqualFormat(newElement.characterFormat)\n                && this.documentHelper.textHelper.isRTLText(newElement.text);\n        }\n        if (!isEqualFormat) {\n            if (index === element.length) {\n                // Add new Element in current \n                insertIndex = this.incrementCommentIndex(isBidi, element, insertIndex);\n                if (newElement.removedIds.length > 0 || isUndoing) {\n                    this.constructRevisionFromID(newElement, true, element);\n                }\n                else if (isTrackingEnabled && !isUndoing && !this.skipFieldDeleteTracking) {\n                    isRevisionCombined = this.insertRevisionAtEnd(element, newElement, revisionType);\n                }\n                line.children.splice(insertIndex, 0, newElement);\n            }\n            else if (index === 0) {\n                if (newElement.removedIds.length > 0) {\n                    this.constructRevisionFromID(newElement, false);\n                }\n                else if (isTrackingEnabled && !isUndoing && !this.skipFieldDeleteTracking) {\n                    isRevisionCombined = this.insertRevisionAtBegining(element, newElement, revisionType);\n                }\n                if (isNullOrUndefined(element.previousNode)) {\n                    element.line.children.splice(0, 0, newElement);\n                    insertIndex = 0;\n                }\n                else {\n                    element.line.children.splice(insertIndex, 0, newElement);\n                }\n            }\n            else if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.isHyperlinkField && newElement instanceof FieldElementBox && newElement.fieldType === 1 && newElement.removedIds.length > 0) {\n                this.constructRevisionFromID(newElement, false);\n                line.children.splice(insertIndex, 0, newElement);\n            }\n            else {\n                insertIndex = this.incrementCommentIndex(isBidi, element, insertIndex);\n                var textElement = new TextElementBox();\n                textElement.characterFormat.copyFormat(element.characterFormat);\n                textElement.text = element.text.substring(index);\n                if (element.revisions.length > 0 && !isTrackingEnabled && !isUndoing && newElement.removedIds.length === 0) {\n                    this.splitRevisionForSpittedElement(element, textElement);\n                }\n                element.text = element.text.substr(0, index);\n                line.children.splice(insertIndex, 0, textElement);\n                textElement.line = element.line;\n                isRevisionCombined = true;\n                this.isTrackingFormField = element.previousElement instanceof FieldElementBox ? true : false;\n                if (newElement.removedIds.length > 0 && !this.isTrackingFormField) {\n                    this.constructRevisionFromID(newElement, false);\n                    this.copyElementRevision(element, textElement, true);\n                }\n                else if (this.owner.enableTrackChanges) {\n                    if (!(newElement instanceof BookmarkElementBox) && !(newElement instanceof CommentCharacterElementBox) && !(newElement instanceof EditRangeStartElementBox) && !(newElement instanceof EditRangeEndElementBox)) {\n                        var isRevisionCombined_1 = this.checkToMapRevisionWithInlineText(element, index, newElement, isBidi, revisionType);\n                        if (isRevisionCombined_1 || newElement.revisions.length > prevRevisionCount) {\n                            this.copyElementRevision(element, textElement, true);\n                        }\n                        else if (newElement.revisions.length === prevRevisionCount) {\n                            this.splitRevisionForSpittedElement(element, textElement);\n                            this.insertRevision(newElement, revisionType);\n                        }\n                    }\n                    else {\n                        this.copyElementRevision(element, textElement, false);\n                    }\n                }\n                //Inserts the new inline.\n                line.children.splice(insertIndex, 0, newElement);\n                insertIndex -= 1;\n            }\n        }\n        else {\n            element.text = element.text.substring(0, index) + newElement.text + element.text.substring(index);\n        }\n        newElement.line = element.line;\n        if (newElement instanceof BookmarkElementBox) {\n            var bookmarkCol = this.documentHelper.bookmarks;\n            if (newElement.reference) {\n                newElement.reference.reference = newElement;\n            }\n            if (!bookmarkCol.containsKey(newElement.name)) {\n                bookmarkCol.add(newElement.name, newElement);\n            }\n        }\n        if (!isNullOrUndefined(newElement.line.paragraph.containerWidget) && !isNullOrUndefined(newElement.line.paragraph.containerWidget.containerWidget) && newElement.line.paragraph.containerWidget.containerWidget instanceof FootNoteWidget) {\n            newElement.line.paragraph.containerWidget.containerWidget.height += newElement.height;\n        }\n        newElement.linkFieldCharacter(this.documentHelper);\n        if (newElement instanceof ContentControl && newElement.type === 0) {\n            this.documentHelper.contentControlCollection.push(newElement);\n        }\n        if ((newElement instanceof ImageElementBox && newElement.textWrappingStyle !== 'Inline') || newElement instanceof ShapeElementBox) {\n            if (paragraph.floatingElements.indexOf(newElement) === -1) {\n                paragraph.floatingElements.push(newElement);\n            }\n            if (paragraph.bodyWidget.floatingElements.indexOf(newElement) === -1 && newElement.textWrappingStyle !== 'Inline') {\n                paragraph.bodyWidget.floatingElements.push(newElement);\n            }\n        }\n        if (isTrackingEnabled && !isRevisionCombined && !isUndoing && !this.skipFieldDeleteTracking) {\n            this.checkToCombineRevisionsinBlocks(newElement, prevRevisionCount === newElement.revisions.length, (index === element.length), revisionType);\n        }\n        if (newElement instanceof FootnoteElementBox) {\n            if (isUndoing) {\n                // this.documentHelper.layout.isLayoutWhole = true;\n                newElement.isLayout = false;\n            }\n            if (newElement.footnoteType === 'Footnote') {\n                this.updateFootnoteCollection(newElement);\n            }\n            if (newElement.footnoteType === 'Endnote') {\n                this.updateEndnoteCollection(newElement);\n            }\n        }\n        if (relayout) {\n            this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, insertIndex, undefined, undefined);\n        }\n    };\n    Editor.prototype.incrementCommentIndex = function (isBidi, element, insertIndex) {\n        if (!this.owner.editorHistoryModule || !(this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentHistoryInfo) || (this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentHistoryInfo\n            && (this.owner.editorHistoryModule.currentHistoryInfo.action !== \"SkipCommentInline\" ||\n                this.owner.editorHistoryModule.currentHistoryInfo.action === \"SkipCommentInline\" &&\n                    (this.owner.editorHistoryModule.currentHistoryInfo.modifiedActions[0] === this.editorHistory.currentBaseHistoryInfo\n                        || (this.owner.editorHistoryModule.currentHistoryInfo.modifiedActions[0] !== this.editorHistory.currentBaseHistoryInfo\n                            && !(element instanceof CommentCharacterElementBox)))))) {\n            insertIndex++;\n        }\n        return insertIndex;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Editor.prototype.constructRevisionFromID = function (insertElement, isEnd, prevElement) {\n        if (insertElement.removedIds.length > 0) {\n            for (var i = 0; i < insertElement.removedIds.length; i++) {\n                var revisionToInclude = undefined;\n                if (this.documentHelper.revisionsInternal.containsKey(insertElement.removedIds[i])) {\n                    revisionToInclude = this.documentHelper.revisionsInternal.get(insertElement.removedIds[i]);\n                    insertElement.revisions.push(revisionToInclude);\n                    if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                        // Handle collab editing for track changes.\n                        this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(insertElement, undefined, revisionToInclude));\n                    }\n                    var isFieldBeginRedoing = insertElement instanceof FieldElementBox && insertElement.fieldType === 0;\n                    isEnd = isEnd ? true : (!isFieldBeginRedoing && this.skipTracking());\n                    var isInsertEnd = false;\n                    // Bug 873011: Handled the revision update for Accept Change action on undoing.\n                    if (this.editorHistory.isUndoing && this.owner.editorHistoryModule.currentBaseHistoryInfo\n                        && this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField\n                        && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Accept Change'\n                        && insertElement instanceof FieldElementBox && insertElement.fieldType === 1) {\n                        isInsertEnd = true;\n                    }\n                    if (isEnd) {\n                        if (this.editorHistory.isRedoing && this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'BackSpace' && this.selection.isTOC()) {\n                            isEnd = false;\n                        }\n                        // Bug 873011: Handled the revision update for Remove Hyperlink action on redoing.\n                        if (this.editorHistory.isRedoing && this.owner.editorHistoryModule.currentHistoryInfo && this.owner.editorHistoryModule.currentHistoryInfo.action === 'RemoveHyperlink'\n                            && insertElement instanceof FieldElementBox && insertElement.fieldType === 0) {\n                            isEnd = false;\n                        }\n                    }\n                    if (!isNullOrUndefined(prevElement)) {\n                        var rangeIndex = revisionToInclude.range.indexOf(prevElement);\n                        if (rangeIndex === -1 && isInsertEnd && revisionToInclude.range.length > 0) {\n                            rangeIndex = revisionToInclude.range.indexOf(revisionToInclude.range[revisionToInclude.range.length - 1]);\n                        }\n                        if (rangeIndex >= 0) {\n                            revisionToInclude.range.splice(rangeIndex + ((isEnd) ? 1 : 0), 0, insertElement);\n                        }\n                        else {\n                            revisionToInclude.range.splice(0, 0, insertElement);\n                        }\n                    }\n                    else {\n                        var insertIndex = void 0;\n                        if (!isNullOrUndefined(this.owner.editorHistory) && (this.owner.editorHistory.isUndoing || this.owner.editorHistory.isRedoing) && !(insertElement instanceof WRowFormat)) {\n                            var currentElementIndex = this.owner.selectionModule.start.paragraph.index;\n                            var isInsideTable = this.owner.selectionModule.start.paragraph.isInsideTable;\n                            var existingIndex = 0;\n                            if (!isInsideTable) {\n                                for (var j = 0; j < revisionToInclude.range.length; j++) {\n                                    if (revisionToInclude.range[j] instanceof TextElementBox) {\n                                        existingIndex = revisionToInclude.range[j].paragraph.index;\n                                    }\n                                    else if (revisionToInclude.range[j] instanceof WCharacterFormat) {\n                                        existingIndex = revisionToInclude.range[j].ownerBase.index;\n                                    }\n                                    if (currentElementIndex < existingIndex) {\n                                        insertIndex = j;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        if (isNullOrUndefined(insertIndex)) {\n                            if (isEnd) {\n                                insertIndex = revisionToInclude.range.length;\n                            }\n                            else {\n                                insertIndex = 0;\n                            }\n                        }\n                        revisionToInclude.range.splice(insertIndex, 0, insertElement);\n                    }\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(revisionToInclude);\n                    this.updateRevisionCollection(revisionToInclude);\n                }\n            }\n            insertElement.removedIds = [];\n        }\n        else {\n            // on undoing revisions will be cloned , so need to update range information.\n            for (var i = 0; i < insertElement.revisions.length; i++) {\n                var currentRevision = insertElement.revisions[i];\n                if (this.documentHelper.revisionsInternal.containsKey(currentRevision.revisionID)) {\n                    currentRevision = this.documentHelper.revisionsInternal.get(currentRevision.revisionID);\n                    currentRevision.range.splice(isEnd ? currentRevision.range.length : 0, 0, insertElement);\n                    this.updateRevisionCollection(currentRevision);\n                }\n            }\n        }\n    };\n    /**\n     * Insert block on undo\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {WBlock} block - Specifes the block\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertBlock = function (block) {\n        var isRemoved = true;\n        var isSkipEmptyPara = false;\n        var selection = this.selection;\n        if (!selection.isEmpty) {\n            isRemoved = this.removeSelectedContents(selection);\n            isSkipEmptyPara = true;\n        }\n        if (!isRemoved) {\n            selection.selectContent(selection.start, false);\n        }\n        this.insertBlockInternal(block, isSkipEmptyPara);\n        if (this.checkInsertPosition(selection)) {\n            var paragraph = undefined;\n            if (block instanceof ParagraphWidget) {\n                paragraph = block;\n            }\n            else {\n                paragraph = this.documentHelper.getFirstParagraphInFirstCell(block);\n            }\n            this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n        }\n        this.fireContentChange();\n    };\n    Editor.prototype.insertBlockInternal = function (block, isRemoved) {\n        var selection = this.selection;\n        var startPara = this.selection.start.paragraph;\n        var paraStart = this.selection.start.isAtParagraphStart;\n        if (!selection.start.isAtParagraphStart) {\n            if (block instanceof ParagraphWidget) {\n                if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking()) {\n                    this.insertRevisionForBlock(block, 'Insertion');\n                }\n                var startPosition = selection.start.clone();\n                //let prevBlock: ParagraphWidget = (block as ParagraphWidget).clone()\n                if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking()) {\n                    this.insertRevisionForBlock(block, 'Insertion');\n                }\n                if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n                    if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(block.clone());\n                    }\n                }\n                this.insertNewParagraphWidget(block, false);\n                if (!this.isInsertingTOC) {\n                    this.combineRevisions(block, startPosition, this.selection.end);\n                }\n                return;\n            }\n            this.updateInsertPosition();\n            startPara = startPara.combineWidget(this.owner.viewer);\n            if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n                if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                    this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(startPara);\n                }\n            }\n            this.splitParagraph(startPara, startPara.firstChild, 0, selection.start.currentWidget, selection.start.offset, false);\n            selection.selectParagraphInternal(this.selection.start.paragraph, true);\n        }\n        var bodyWidget = selection.start.paragraph.containerWidget;\n        var blockIndex = selection.start.paragraph.index;\n        if (!isNullOrUndefined(bodyWidget)) {\n            if (!isNullOrUndefined(this.editorHistory)) {\n                if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && !this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                    this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(block.clone());\n                }\n                // Added the condition to skip adding an empty paragraph when performing a redo if the document has an empty case.\n                if (this.editorHistory.isRedoing && isRemoved && bodyWidget.firstChild instanceof ParagraphWidget && bodyWidget.firstChild.isEmpty() && bodyWidget.firstChild === bodyWidget.lastChild && block instanceof ParagraphWidget && block.isEmpty()) {\n                    return;\n                }\n            }\n            var insertIndex = bodyWidget.childWidgets.indexOf(selection.start.paragraph);\n            bodyWidget.childWidgets.splice(insertIndex, 0, block);\n            block.containerWidget = bodyWidget;\n            block.index = blockIndex;\n            block.height = 0;\n            if (block instanceof TableWidget) {\n                block.isGridUpdated = false;\n                block.buildTableColumns();\n                block.isGridUpdated = true;\n            }\n            this.updateNextBlocksIndex(block, true);\n            if (!this.isInsertingTOC && this.owner.enableTrackChanges && !this.skipTracking() && block instanceof ParagraphWidget) {\n                this.insertRevisionForBlock(block, 'Insertion');\n            }\n            else if (block instanceof ParagraphWidget) {\n                this.constructRevisionsForBlock(block, true);\n            }\n            else if (block instanceof TableWidget) {\n                this.constructRevisionsForTable(block, true);\n            }\n            if (this.documentHelper.owner.editorModule.isRemoteAction && !paraStart && block instanceof TableWidget) {\n                this.updateNextBlocksIndex(block.nextWidget, false);\n                bodyWidget.childWidgets.splice(block.indexInOwner + 1, 1);\n            }\n            this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, bodyWidget, block, false);\n        }\n    };\n    /**\n     * Inserts the image with specified size at cursor position in the document editor.\n     *\n\n     *\n     * @param {string} imageString  Base64 string, web URL or file URL.\n     * @param {number} width Specify the image width.\n     * @param {number} height Specify the image height.\n     * @param {string} alternateText Specify the image alternateText.\n     * @returns {void}\n     */\n    Editor.prototype.insertImage = function (imageString, width, height, alternateText) {\n        this.insertImageInternal(imageString, false, width, height, alternateText);\n    };\n    /**\n     * Inserts an image with a specified size at the cursor position in the DocumentEditor component.\n     *\n     * @param {string} imageString - The Base64 string, web URL, or file URL of the image to be inserted.\n     * @param {number} width - The width of the image. Optional parameter, if not specified, the original width of the image will be used.\n     * @param {number} height - The height of the image. Optional parameter, if not specified, the original height of the image will be used.\n     * @param {string} alternateText - The alternate text of the image. Optional parameter, if specified, this text will be displayed when the image is not available or when images are disabled in the document.\n     * @returns {Promise<void>} - A Promise that is resolved when the image has been inserted successfully, or rejected if the image could not be inserted for any reason.\n     */\n    Editor.prototype.insertImageAsync = function (imageString, width, height, alternateText) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.insertImageInternal(imageString, false, width, height, alternateText)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Inserts the image with specified size at cursor position in the document editor.\n     *\n     * @private\n     * @param {string} imageString Base64 string, web URL or file URL.\n     * @param {boolean} isUiInteracted Is image instered from UI interaction.\n     * @param {number} width? Image width\n     * @param {number} height? Image height\n     * @param {string} alternateText? Image alternateText\n     * @returns {void}\n     */\n    Editor.prototype.insertImageInternal = function (imageString, isUiInteracted, width, height, alternateText) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var formField = _this.selection.getCurrentFormField();\n                        var isFormFillProtectedMode = _this.documentHelper.protectionType === 'FormFieldsOnly' && !isNullOrUndefined(formField) && formField.formFieldData instanceof TextFormField;\n                        if ((_this.owner.isReadOnlyMode || !_this.canEditContentControl) && !isFormFillProtectedMode) {\n                            resolve();\n                            return;\n                        }\n                        if (isNullOrUndefined(width) && isNullOrUndefined(height)) {\n                            var image = document.createElement('img');\n                            var editor_1 = _this;\n                            image.addEventListener('load', function () {\n                                editor_1.insertPicture(imageString, this.width, this.height, this.alt, true);\n                                resolve();\n                            });\n                            image.src = imageString;\n                        }\n                        else {\n                            _this.insertPicture(imageString, width, height, alternateText, isUiInteracted);\n                            resolve();\n                        }\n                        setTimeout(function () {\n                            if (!isNullOrUndefined(_this.documentHelper)) {\n                                _this.viewer.updateScrollBars();\n                            }\n                        }, 30);\n                    })];\n            });\n        });\n    };\n    /**\n     * Inserts a table of specified size at cursor position in the document editor.\n     *\n     * @param {number} rows Default value of ‘rows’ parameter is 1.\n     * @param {number} columns Default value of ‘columns’ parameter is 1.\n     * @returns {void}\n     */\n    Editor.prototype.insertTable = function (rows, columns) {\n        var startPos = this.selection.start;\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        rows = rows || 1;\n        columns = columns || 1;\n        var localeValue = new L10n('documenteditor', this.owner.defaultLocale);\n        localeValue.setLocale(this.documentHelper.owner.locale);\n        if (columns < 1 || columns > this.documentHelper.owner.documentEditorSettings.maximumColumns) {\n            var columnAlertPopup = localeValue.getConstant('Number of columns must be between') + ' 1 ' + localeValue.getConstant('and') + ' ' + this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n            DialogUtility.alert(columnAlertPopup).enableRtl = this.documentHelper.owner.enableRtl;\n            return;\n        }\n        if (rows < 1 || rows > this.documentHelper.owner.documentEditorSettings.maximumRows) {\n            var rowAlertPopup = localeValue.getConstant('Number of rows must be between') + ' 1 ' + localeValue.getConstant('and') + ' ' + this.documentHelper.owner.documentEditorSettings.maximumColumns.toString();\n            localeValue.getConstant('Number of rows must be between 1 and 32767.').replace(\"32767\", this.documentHelper.owner.documentEditorSettings.maximumRows.toString());\n            DialogUtility.alert(rowAlertPopup).enableRtl = this.documentHelper.owner.enableRtl;\n            return;\n        }\n        var table = this.createTable(rows, columns);\n        var clientWidth = startPos.paragraph.getContainerWidth() - table.tableFormat.leftIndent;\n        table.splitWidthToTableCells(clientWidth);\n        var removedComment;\n        var prevBlock = startPos.paragraph.previousWidget;\n        if (startPos.currentWidget.isFirstLine() && startPos.offset === 0 && prevBlock instanceof TableWidget) {\n            this.insertTableRows(table, prevBlock);\n            table.destroy();\n            return;\n        }\n        else {\n            removedComment = this.checkAndRemoveComments();\n            this.initHistory('InsertTable');\n            this.documentHelper.owner.isShiftingEnabled = true;\n            this.insertBlock(table);\n            if (!isNullOrUndefined(table.containerWidget) && !isNullOrUndefined(table.containerWidget.containerWidget) && table.containerWidget.containerWidget instanceof FootNoteWidget) {\n                table.containerWidget.containerWidget.height += table.height;\n                this.isTableInsert = true;\n            }\n        }\n        var startLine = this.documentHelper.getFirstParagraphInFirstCell(table).childWidgets[0];\n        startPos.setPosition(startLine, true);\n        this.selection.end.setPositionInternal(startPos);\n        var lastParagraph = this.documentHelper.getLastParagraphInLastCell(table.getSplitWidgets().pop());\n        var endOffset = lastParagraph.getLength() + 1;\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(lastParagraph, endOffset.toString());\n        }\n        this.reLayout(this.selection);\n        this.isTableInsert = false;\n        this.updateHistoryForComments(removedComment);\n    };\n    /**\n     * Inserts the specified number of rows to the table above or below to the row at cursor position.\n     *\n     * @param {boolean} above The above parameter is optional and if omitted,\n     * it takes the value as false and inserts below the row at cursor position.\n     * @param {number} count The count parameter is optional and if omitted, it takes the value as 1.\n     * @returns {void}\n     */\n    Editor.prototype.insertRow = function (above, count) {\n        var rowPlacement = above ? 'Above' : 'Below';\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        var isInsertRow = true;\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        if (startPos.paragraph.isInsideTable) {\n            if (this.checkIsNotRedoing()) {\n                this.initHistory(rowPlacement === 'Above' ? 'InsertRowAbove' : 'InsertRowBelow');\n            }\n            this.documentHelper.owner.isShiftingEnabled = true;\n            var startCell = this.getOwnerCell(this.selection.isForward).getSplitWidgets()[0];\n            var endCell = this.getOwnerCell(!this.selection.isForward).getSplitWidgets()[0];\n            var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n            var row = rowPlacement === 'Below' ? endCell.ownerRow : startCell.ownerRow;\n            if (this.editorHistory) {\n                var clonedTable = this.cloneTableToHistoryInfo(table);\n            }\n            this.rowInsertion(count, rowPlacement, startCell, endCell, row, table, isInsertRow);\n        }\n        this.reLayout(this.selection, true);\n    };\n    Editor.prototype.rowInsertion = function (count, rowPlacement, startCell, endCell, row, table, isInsertRow) {\n        var rowCount = count ? count : this.getRowCountToInsert();\n        var rows = [];\n        var index = row.rowIndex;\n        if (rowPlacement === 'Below') {\n            index++;\n            var isAffectedByRowSpannedCell = isNullOrUndefined(endCell.previousWidget)\n                || endCell.columnIndex === endCell.previousWidget.columnIndex + 1;\n            var isRowSpanEnd = endCell.cellIndex !== endCell.columnIndex && isAffectedByRowSpannedCell\n                && row.rowIndex + startCell.cellFormat.rowSpan - 1 === endCell.ownerRow.rowIndex;\n            if (!isRowSpanEnd) {\n                if (endCell.cellFormat.rowSpan > 1) {\n                    if (!isNullOrUndefined(row.nextWidget) && row.nextWidget instanceof TableRowWidget) {\n                        endCell.cellFormat.rowSpan += rowCount;\n                        row = row.nextWidget;\n                    }\n                }\n            }\n            row.bottomBorderWidth = 0;\n        }\n        for (var i = 0; i < rowCount; i++) {\n            var cellCountInfo = this.updateRowspan(row, rowPlacement === 'Below' ? endCell : startCell, rowPlacement);\n            var newRow = this.createRowAndColumn(cellCountInfo.count, i, index, table);\n            newRow.rowFormat = row.rowFormat.cloneFormat();\n            newRow.rowFormat.ownerBase = newRow;\n            if (this.owner.enableTrackChanges) {\n                this.insertRevision(newRow.rowFormat, 'Insertion');\n            }\n            this.updateCellFormatForInsertedRow(newRow, cellCountInfo.cellFormats);\n            if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n                this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newRow);\n            }\n            rows.push(newRow);\n        }\n        table.insertTableRowsInternal(rows, index, isInsertRow);\n        var cell = undefined;\n        var paragraph = undefined;\n        if ((table.childWidgets[index] instanceof TableRowWidget)) {\n            cell = table.childWidgets[index].firstChild;\n            paragraph = this.selection.getFirstParagraph(cell);\n        }\n        else {\n            var widget = undefined;\n            while (!(widget instanceof TableWidget)) {\n                widget = table.nextRenderedWidget;\n            }\n            paragraph = this.documentHelper.getFirstParagraphInFirstCell(widget);\n        }\n        if (isInsertRow) {\n            this.documentHelper.layout.reLayoutTable(table);\n        }\n        this.selection.selectParagraphInternal(paragraph, true);\n    };\n    /**\n     * Fits the table based on AutoFitType.\n     *\n     * @param {AutoFitType} fitType Specify the auto fit type.\n     * @returns {void}\n     */\n    Editor.prototype.autoFitTable = function (fitType) {\n        if (this.documentHelper.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        this.insertAutoFitTable(fitType);\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertAutoFitTable = function (fitType, tableAdv) {\n        if (isNullOrUndefined(tableAdv)) {\n            var startPosition = this.selection.start;\n            var endPosition = this.selection.end;\n            if (!this.selection.isForward) {\n                startPosition = this.selection.end;\n                endPosition = this.selection.start;\n            }\n            tableAdv = this.selection.getTable(startPosition, endPosition);\n            tableAdv = tableAdv.getSplitWidgets()[0];\n        }\n        var parentTable = this.documentHelper.layout.getParentTable(tableAdv);\n        if (!isNullOrUndefined(parentTable)) {\n            this.setOffsetValue(this.selection);\n            parentTable = parentTable.combineWidget(this.owner.viewer);\n            this.initHistory(fitType === 'FitToContents' ? 'TableAutoFitToContents' : fitType === 'FitToWindow' ? 'TableAutoFitToWindow' : 'TableFixedColumnWidth');\n            if (this.documentHelper.owner.editorHistoryModule) {\n                this.cloneTableToHistoryInfo(parentTable);\n            }\n            parentTable.updateProperties(true, tableAdv, fitType);\n            this.documentHelper.owner.isShiftingEnabled = true;\n            //Layouts the table.\n            this.documentHelper.layout.reLayoutTable(tableAdv);\n            this.reLayout(this.selection, true);\n        }\n    };\n    /**\n     * Inserting the row for collaborative editing.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.rowInsertionForCE = function (index, cellCount, insertrow, table, rowData, cellData, paragraphData, characterData) {\n        var rows = [];\n        for (var i = 0; i < insertrow; i++) {\n            var newRow = this.createRowAndColumn(cellCount, i, index, table);\n            this.documentHelper.owner.parser.parseRowFormat(rowData, newRow.rowFormat, 0);\n            for (var j = 0; j < cellCount; j++) {\n                var cellWidget = newRow.childWidgets[j];\n                this.documentHelper.owner.parser.parseCellFormat(cellData[j], cellWidget.cellFormat, 0);\n                this.documentHelper.owner.parser.parseParagraphFormat(0, paragraphData[j], cellWidget.childWidgets[0].paragraphFormat);\n                this.documentHelper.owner.parser.parseCharacterFormat(0, characterData[j], cellWidget.childWidgets[0].characterFormat);\n            }\n            if (this.owner.enableTrackChanges) {\n                this.insertRevision(newRow.rowFormat, 'Insertion');\n            }\n            rows.push(newRow);\n        }\n        table.insertTableRowsInternal(rows, index, true);\n        var cell = undefined;\n        var paragraph = undefined;\n        if ((table.childWidgets[index] instanceof TableRowWidget)) {\n            cell = table.childWidgets[index].firstChild;\n            paragraph = this.selection.getFirstParagraph(cell);\n        }\n        else {\n            var widget = undefined;\n            while (!(widget instanceof TableWidget)) {\n                widget = table.nextRenderedWidget;\n            }\n            paragraph = this.documentHelper.getFirstParagraphInFirstCell(widget);\n        }\n        this.documentHelper.layout.reLayoutTable(table);\n        this.selection.selectParagraphInternal(paragraph, true);\n        this.reLayout(this.selection, true);\n    };\n    Editor.prototype.updateCellFormatForInsertedRow = function (newRow, cellFormats) {\n        for (var i = 0; i < newRow.childWidgets.length; i++) {\n            newRow.childWidgets[i].cellFormat.copyFormat(cellFormats[i]);\n            newRow.childWidgets[i].cellFormat.rowSpan = 1;\n        }\n    };\n    Editor.prototype.updateRowspan = function (row, startCell, rowPlacement) {\n        var spannedCells = row.getPreviousRowSpannedCells(true);\n        var count = 0;\n        var cellFormats = [];\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            var isCellIncluded = false;\n            // Need to check with all the row spanned cells. if the start cell contains rowspan greater than 1, \n            // and when inserting below, need to increment rowspan for all row spanned cells by 1 except\n            // if the spanned cells is placed in the same column or cell to be cloned has the same row index of cloned cell row index.\n            // and when inserting above, if cloned cell placed in the same row of start cell or\n            // if the cloned cell has equal column index, need to skip updating rowspan value of cloned cell.\n            // else update row span value for spanned cell except \n            // if the spanned cells is placed in the same column or cell to be cloned has the same row index of cloned cell row index.\n            var isRowSpanned = (isNullOrUndefined(cell.previousWidget)\n                || cell.columnIndex !== cell.previousWidget.columnIndex + 1);\n            for (var j = 0; j < spannedCells.length; j++) {\n                if (isRowSpanned) {\n                    var spannedCell = spannedCells[j];\n                    var clonedRowIndex = spannedCell.ownerRow.rowIndex + spannedCell.cellFormat.rowSpan - 1;\n                    if (cell.columnIndex < spannedCell.columnIndex && cell.cellIndex !== cell.columnIndex) {\n                        isCellIncluded = true;\n                        count++;\n                        cellFormats.push(cell.cellFormat);\n                    }\n                    if (startCell.cellFormat.rowSpan === 1) {\n                        // Need to check whether cell is affected by a row spanned cell. if cell is placed on the row where it is affected \n                        // by row spanned cell, then if we are inserting row below, need to add new cell with spanned cell width\n                        // or if we are inserting above, need to update row span value of the spanned cell.\n                        // if cell is placed inbetween the spanned cell , \n                        // then if we are inserting below, need to update row span value of spanned cell or\n                        // if we are inserting above, need to skip updating row span value except\n                        // if start cell is placed on the same row of spanned cell or if start cell placed in the same column.\n                        if (clonedRowIndex > cell.ownerRow.rowIndex) {\n                            if (rowPlacement === 'Above'\n                                && spannedCell.ownerRow === startCell.ownerRow) {\n                                continue;\n                            }\n                            else {\n                                spannedCell.cellFormat.rowSpan += 1;\n                                spannedCells.splice(j, 1);\n                                j--;\n                            }\n                        }\n                        else if (cell.cellIndex !== cell.columnIndex && isRowSpanned && clonedRowIndex === cell.ownerRow.rowIndex) {\n                            if (rowPlacement === 'Above') {\n                                spannedCell.cellFormat.rowSpan += 1;\n                                spannedCells.splice(j, 1);\n                                j--;\n                            }\n                            else {\n                                count++;\n                                cellFormats.push(spannedCell.cellFormat);\n                                spannedCells.splice(j, 1);\n                                j--;\n                            }\n                        }\n                    }\n                    else {\n                        if (spannedCell !== startCell) {\n                            if (rowPlacement === 'Above'\n                                && (spannedCell.ownerRow === startCell.ownerRow || spannedCell.columnIndex === startCell.columnIndex)) {\n                                continue;\n                            }\n                            else {\n                                if (spannedCell.columnIndex !== startCell.columnIndex\n                                    && spannedCell.ownerRow.rowIndex !== cell.ownerRow.rowIndex\n                                    && (clonedRowIndex > startCell.ownerRow.rowIndex\n                                        || (rowPlacement === 'Above' && clonedRowIndex === startCell.ownerRow.rowIndex))) {\n                                    spannedCell.cellFormat.rowSpan += 1;\n                                    spannedCells.splice(j, 1);\n                                    j--;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (spannedCells.indexOf(cell) === -1 && cell.cellFormat.rowSpan > 1) {\n                isCellIncluded = true;\n            }\n            if (!isCellIncluded) {\n                count++;\n                cellFormats.push(cell.cellFormat);\n            }\n        }\n        return { count: count, cellFormats: cellFormats };\n    };\n    Editor.prototype.getInsertedTable = function (table, index) {\n        if (table.childWidgets && table.childWidgets.length > 0) {\n            table.childWidgets.splice(0, index);\n            this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(table);\n        }\n    };\n    Editor.prototype.insertTableRows = function (table, prevBlock) {\n        this.initHistory('InsertTableBelow');\n        table.containerWidget = prevBlock.containerWidget;\n        prevBlock = prevBlock.combineWidget(this.owner.viewer);\n        // if (this.editorHistory) {\n        //     let clonedTable: TableWidget = this.cloneTableToHistoryInfo(prevBlock);\n        // }\n        var row = prevBlock.childWidgets[prevBlock.childWidgets.length - 1];\n        var index = prevBlock.childWidgets.length;\n        prevBlock.insertTableRowsInternal(table.childWidgets, index, true);\n        var cloneTable = prevBlock.clone();\n        this.getInsertedTable(cloneTable, index);\n        var paragraph = this.selection.getFirstParagraph(row.nextWidget.childWidgets[0]);\n        prevBlock.isDefaultFormatUpdated = false;\n        this.documentHelper.layout.reLayoutTable(prevBlock);\n        if (this.checkInsertPosition(this.selection)) {\n            this.updateHistoryPosition(this.selection.getHierarchicalIndex(paragraph, '0'), true);\n        }\n        this.selection.start.setPosition(paragraph.firstChild, true);\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.updateHistoryPosition(this.selection.end, false);\n        }\n        this.selection.end.setPosition(paragraph.firstChild, true);\n        this.reLayout(this.selection);\n    };\n    /**\n     * Inserts the specified number of columns to the table left or right to the column at cursor position.\n     *\n     * @param {number} left The left parameter is optional and if omitted, it takes the value as false and\n     * inserts to the right of column at cursor position.\n     * @param {number} count The count parameter is optional and if omitted, it takes the value as 1.\n     * @returns {void}\n     */\n    Editor.prototype.insertColumn = function (left, count) {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        var columnPlacement = left ? 'Left' : 'Right';\n        if (this.selection.start.paragraph.isInsideTable) {\n            if (this.checkIsNotRedoing()) {\n                this.initHistory(columnPlacement === 'Left' ? 'InsertColumnLeft' : 'InsertColumnRight');\n            }\n            this.selection.owner.isShiftingEnabled = true;\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var endCell = this.getOwnerCell(!this.selection.isForward);\n            var table = startCell.ownerRow.ownerTable.combineWidget(this.owner.viewer);\n            if (this.editorHistory) {\n                //Clones the entire table to preserve in history.\n                this.cloneTableToHistoryInfo(table);\n            }\n            this.selection.owner.isLayoutEnabled = false;\n            var cellIndex = startCell.columnIndex;\n            if (columnPlacement === 'Right') {\n                cellIndex = endCell.columnIndex + endCell.cellFormat.columnSpan;\n            }\n            var startParagraph = undefined;\n            var newCell = undefined;\n            var columnCount = count ? count : this.getColumnCountToInsert();\n            var rowSpannedCells = [];\n            //let rowSpanCellIndex: number = cellIndex;\n            for (var i = 0; i < columnCount; i++) {\n                for (var j = 0; j < table.childWidgets.length; j++) {\n                    var row = table.childWidgets[j];\n                    newCell = this.createColumn(this.selection.getLastParagraph(startCell));\n                    newCell.index = j;\n                    newCell.rowIndex = row.rowIndex;\n                    newCell.containerWidget = row;\n                    newCell.cellFormat.copyFormat(startCell.cellFormat);\n                    newCell.cellFormat.rowSpan = 1;\n                    if (isNullOrUndefined(startParagraph)) {\n                        startParagraph = this.selection.getFirstParagraph(newCell);\n                    }\n                    if (cellIndex === 0) {\n                        row.childWidgets.splice(cellIndex, 0, newCell);\n                    }\n                    else {\n                        this.insertSpannedCells(row, rowSpannedCells, newCell, cellIndex);\n                    }\n                    this.copyCellFormats(row, cellIndex);\n                    this.editorHistory.currentBaseHistoryInfo.insertedNodes.push(newCell);\n                }\n            }\n            this.tableReLayout(table, startParagraph, newCell);\n        }\n    };\n    /**\n     * Inserting the cell for collaborative editing.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.cellInsertionForCE = function (index, row, cellData, paragraphData, characterData) {\n        var startParagraph = undefined;\n        var newCell = undefined;\n        newCell = this.createColumn(undefined);\n        var line = new LineWidget(newCell.childWidgets[0]);\n        newCell.childWidgets[0].childWidgets.push(line);\n        newCell.index = row.index;\n        newCell.rowIndex = row.rowIndex;\n        newCell.containerWidget = row;\n        this.documentHelper.owner.parser.parseCellFormat(cellData, newCell.cellFormat, 0);\n        this.documentHelper.owner.parser.parseParagraphFormat(0, paragraphData, newCell.childWidgets[0].paragraphFormat);\n        this.documentHelper.owner.parser.parseCharacterFormat(0, characterData, newCell.childWidgets[0].characterFormat);\n        newCell.cellFormat.rowSpan = 1;\n        row.childWidgets.splice(index, 0, newCell);\n    };\n    Editor.prototype.copyCellFormats = function (row, index) {\n        var newCell = row.childWidgets[index];\n        if (!isNullOrUndefined(newCell)) {\n            var newCellPara = newCell.childWidgets[0];\n            (index == (row.childWidgets.length - 1)) ? --index : ++index;\n            var nextCell = row.childWidgets[index];\n            var widget = nextCell.childWidgets[0];\n            while (widget instanceof TableWidget) {\n                widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n            }\n            var nextCellpara = nextCell.childWidgets[0];\n            var line = void 0;\n            var nextCellTextBox = void 0;\n            if (nextCellpara.childWidgets.length > 0) {\n                line = nextCellpara.childWidgets[0];\n                if (line.children.length > 0) {\n                    nextCellTextBox = line.children[0];\n                }\n            }\n            newCellPara.paragraphFormat.copyFormat(nextCellpara.paragraphFormat);\n            if (!isNullOrUndefined(nextCellTextBox)) {\n                newCellPara.characterFormat.copyFormat(nextCellTextBox.characterFormat);\n            }\n            else {\n                newCellPara.characterFormat.copyFormat(nextCellpara.characterFormat);\n            }\n        }\n    };\n    Editor.prototype.copyContent = function (table) {\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.owner.enableCollaborativeEditing) {\n            var lastPara = this.documentHelper.getLastParagraphBlock(table);\n            var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n            if (firstPara.childWidgets.length === 0) {\n                firstPara.childWidgets[0] = new LineWidget(firstPara);\n            }\n            if (lastPara.childWidgets.length === 0) {\n                lastPara.childWidgets[0] = new LineWidget(lastPara);\n            }\n            var startLine = firstPara.firstChild;\n            var lastLine = lastPara.lastChild;\n            var endoffset = lastPara.lastChild.getEndOffset();\n            var documentContent = !isNullOrUndefined(this.owner.sfdtExportModule) ? this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), startLine, 0, lastLine, endoffset, false, true) : {};\n            this.editorHistory.currentBaseHistoryInfo.pasteContent = documentContent;\n        }\n    };\n    Editor.prototype.tableReLayout = function (table, startParagraph, newCell, isCollaborativePaste) {\n        table.updateRowIndex(0);\n        var parentTable = this.documentHelper.layout.getParentTable(table);\n        if (parentTable) {\n            parentTable.fitChildToClientArea();\n        }\n        else {\n            table.fitChildToClientArea();\n        }\n        this.selection.owner.isLayoutEnabled = true;\n        table.isGridUpdated = false;\n        table.buildTableColumns();\n        table.isGridUpdated = true;\n        this.documentHelper.skipScrollToPosition = true;\n        if (isCollaborativePaste) {\n            this.copyContent(table);\n        }\n        this.documentHelper.layout.reLayoutTable(table);\n        this.selection.start.setPosition(startParagraph.firstChild, true);\n        this.selection.end.setPosition(this.selection.getLastParagraph(newCell).firstChild, false);\n        if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n            this.reLayout(this.selection);\n        }\n    };\n    /**\n     * Creates table with specified rows and columns.\n     * @private\n     *\n     * @returns {TableWidget}\n     */\n    Editor.prototype.createTable = function (rows, columns) {\n        var startPara = this.selection.start.paragraph;\n        var table = new TableWidget();\n        table.tableFormat.preferredWidthType = 'Auto';\n        table.tableFormat.leftIndent = this.selection.start.paragraph.leftIndent;\n        table.tableFormat.initializeTableBorders();\n        var index = 0;\n        while (index < rows) {\n            var tableRow = this.createRowAndColumn(columns, index);\n            tableRow.rowFormat.heightType = 'Auto';\n            if (this.owner.enableTrackChanges) {\n                this.insertRevision(tableRow.rowFormat, 'Insertion');\n            }\n            tableRow.containerWidget = table;\n            table.childWidgets.push(tableRow);\n            index++;\n        }\n        return table;\n    };\n    Editor.prototype.createRowAndColumn = function (columns, rowIndex, index, table) {\n        var tableWidget = table;\n        var startPara = this.selection.start.paragraph;\n        var tableRow = new TableRowWidget();\n        tableRow.rowFormat = new WRowFormat(tableRow);\n        tableRow.index = rowIndex;\n        for (var i = 0; i < columns; i++) {\n            if (!isNullOrUndefined(index) && !isNullOrUndefined(tableWidget)) {\n                if (index && index > 0 && tableWidget.childWidgets[index - 1] && tableWidget.childWidgets[index - 1].childWidgets[i]) {\n                    var widget = tableWidget.childWidgets[index - 1].childWidgets[i].childWidgets[0];\n                    while (widget instanceof TableWidget) {\n                        widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n                    }\n                    startPara = widget;\n                }\n                else if (index == 0) {\n                    var widget = tableWidget.childWidgets[index].childWidgets[i].childWidgets[0];\n                    while (widget instanceof TableWidget) {\n                        widget = widget.childWidgets[0].childWidgets[0].childWidgets[0];\n                    }\n                    startPara = widget;\n                }\n            }\n            var tableCell = this.createColumn(startPara, true);\n            tableCell.index = i;\n            tableCell.rowIndex = rowIndex;\n            tableCell.containerWidget = tableRow;\n            tableRow.childWidgets.push(tableCell);\n        }\n        return tableRow;\n    };\n    Editor.prototype.createColumn = function (paragraph, isNewRow) {\n        var tableCell = new TableCellWidget();\n        var para = new ParagraphWidget();\n        // let line: LineWidget = new LineWidget(para);\n        // para.childWidgets.push(line);\n        if (isNewRow) {\n            para.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n            para.paragraphFormat.leftIndent = 0;\n            para.paragraphFormat.firstLineIndent = 0;\n            var elementBox = void 0;\n            if (!isNullOrUndefined(paragraph.childWidgets[0])) {\n                elementBox = paragraph.childWidgets[0].children[0];\n            }\n            if (!isNullOrUndefined(elementBox)) {\n                para.characterFormat.copyFormat(elementBox.characterFormat);\n            }\n            else {\n                para.characterFormat.copyFormat(paragraph.characterFormat);\n            }\n        }\n        para.containerWidget = tableCell;\n        tableCell.childWidgets.push(para);\n        tableCell.cellFormat = new WCellFormat(tableCell);\n        return tableCell;\n    };\n    Editor.prototype.getColumnCountToInsert = function () {\n        var count = 1;\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.selection.isForward) {\n            start = this.selection.end;\n            end = this.selection.start;\n        }\n        if (start && end && this.selection.getTable(start, end)) {\n            if (start.paragraph.associatedCell === end.paragraph.associatedCell) {\n                return count = 1;\n            }\n            if (start.paragraph.associatedCell.ownerRow === end.paragraph.associatedCell.ownerRow) {\n                return count = count + end.paragraph.associatedCell.cellIndex - start.paragraph.associatedCell.cellIndex;\n            }\n            else {\n                count = 0;\n                var selectedCells = start.paragraph.associatedCell.ownerTable.getColumnCellsForSelection(start.paragraph.associatedCell, end.paragraph.associatedCell);\n                for (var i = 0; i < selectedCells.length; i++) {\n                    if (start.paragraph.associatedCell.ownerRow === selectedCells[i].ownerRow) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count === 0 ? 1 : count;\n    };\n    Editor.prototype.getRowCountToInsert = function () {\n        var count = 1;\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.selection.isForward) {\n            start = this.selection.end;\n            end = this.selection.start;\n        }\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.selection.getTable(start, end))) {\n            if (start.paragraph.associatedCell === end.paragraph.associatedCell ||\n                start.paragraph.associatedCell.ownerRow === end.paragraph.associatedCell.ownerRow) {\n                return count = 1;\n            }\n            else {\n                return count = count +\n                    this.getOwnerRow(!this.selection.isForward).rowIndex - this.getOwnerRow(this.selection.isForward).rowIndex;\n            }\n        }\n        return count === 0 ? 1 : count;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getOwnerCell = function (isStart) {\n        var cell = undefined;\n        var startCell = isStart ? this.selection.start.paragraph.associatedCell\n            : this.selection.end.paragraph.associatedCell;\n        var endCell = isStart ? this.selection.end.paragraph.associatedCell\n            : this.selection.start.paragraph.associatedCell;\n        cell = startCell;\n        var owner = cell.ownerTable;\n        while (!isNullOrUndefined(owner) && owner.containerWidget instanceof TableCellWidget && owner !== endCell.ownerTable) {\n            cell = owner.containerWidget;\n            owner = cell.ownerTable;\n        }\n        return cell;\n    };\n    Editor.prototype.getOwnerRow = function (isStart) {\n        var row;\n        var startRow = isStart ? this.selection.start.paragraph.associatedCell.ownerRow\n            : this.selection.end.paragraph.associatedCell.ownerRow;\n        var endRow = isStart ? this.selection.end.paragraph.associatedCell.ownerRow\n            : this.selection.start.paragraph.associatedCell.ownerRow;\n        row = startRow;\n        var owner = row.ownerTable;\n        while (!isNullOrUndefined(owner) && owner.containerWidget instanceof TableCellWidget && owner !== endRow.ownerTable) {\n            row = owner.containerWidget.ownerRow;\n            owner = row.ownerTable;\n        }\n        return row;\n    };\n    Editor.prototype.getOwnerTable = function (isStart) {\n        var table = undefined;\n        var startTable = this.selection.start.paragraph.associatedCell.ownerTable;\n        var endTable = this.selection.end.paragraph.associatedCell.ownerTable;\n        table = isStart ? startTable : endTable;\n        while (table.containerWidget instanceof TableCellWidget && table !== (isStart ? endTable : startTable)) {\n            table = table.containerWidget.ownerTable;\n        }\n        return table;\n    };\n    /**\n     * Merge Selected cells\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.mergeSelectedCellsInTable = function () {\n        if (!this.canMergeCells()) {\n            return;\n        }\n        if (this.owner.enableTrackChanges) {\n            var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n            localizeValue.setLocale(this.owner.locale);\n            this.alertDialog = DialogUtility.alert({\n                title: localizeValue.getConstant('UnTrack'),\n                content: localizeValue.getConstant('Merge Track'),\n                showCloseIcon: true,\n                okButton: {\n                    text: 'Ok', click: this.confirmCellMerge.bind(this)\n                },\n                closeOnEscape: true,\n                position: { X: 'center', Y: 'center' },\n                animationSettings: { effect: 'Zoom' }\n            });\n            this.alertDialog.enableRtl = this.owner.enableRtl;\n        }\n        else {\n            this.confirmCellMerge();\n        }\n    };\n    Editor.prototype.confirmCellMerge = function () {\n        if (this.checkIsNotRedoing()) {\n            this.initHistory('MergeCells');\n        }\n        this.selection.owner.isShiftingEnabled = true;\n        var startPosition = this.selection.start;\n        var endPosition = this.selection.end;\n        if (!this.selection.isForward) {\n            startPosition = this.selection.end;\n            endPosition = this.selection.start;\n        }\n        var startOwnerCell = this.getOwnerCell(this.selection.isForward);\n        var endOwnerCell = this.getOwnerCell(!this.selection.isForward);\n        var containerCell = this.selection.getContainerCellOf(startOwnerCell, endOwnerCell);\n        if (containerCell.ownerTable.contains(endOwnerCell)) {\n            if (!this.selection.containsCell(containerCell, endOwnerCell)) {\n                //Start and End are in different cells.               \n                var table = startOwnerCell.ownerTable.combineWidget(this.owner.viewer);\n                startOwnerCell = this.selection.getSelectedCell(startOwnerCell, containerCell);\n                endOwnerCell = this.selection.getSelectedCell(endOwnerCell, containerCell);\n                //Merges the selected cells.               \n                var mergedCell = this.mergeSelectedCells(table, startOwnerCell, endOwnerCell);\n                var firstParagraph = this.selection.getFirstParagraph(mergedCell);\n                startPosition.setPosition(firstParagraph.firstChild, true);\n                var lastParagraph = this.selection.getLastParagraph(mergedCell);\n                endPosition.setPosition(lastParagraph.lastChild, false);\n                this.selection.fireSelectionChanged(false);\n            }\n        }\n        if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n            this.reLayout(this.selection, false);\n        }\n        if (!isNullOrUndefined(this.alertDialog)) {\n            this.alertDialog.close();\n            this.alertDialog = undefined;\n        }\n    };\n    Editor.prototype.mergeSelectedCells = function (table, startCell, endCell) {\n        //Clones the entire table to preserve in history.\n        var clonedTable = this.cloneTableToHistoryInfo(table);\n        this.selection.owner.isLayoutEnabled = false;\n        //Merges the selected cells.\n        var start = this.selection.getCellLeft(startCell.ownerRow, startCell);\n        var end = start + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(start, end, endCellLeft, endCellRight);\n        start = cellInfo.start;\n        end = cellInfo.end;\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n        var mergedCell = undefined;\n        var firstBlock;\n        for (var i = rowStartIndex; i <= count; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                var cellStart = this.selection.getCellLeft(row, cell);\n                if (HelperMethods.round(start, 2) <= HelperMethods.round(cellStart, 2)\n                    && HelperMethods.round(cellStart, 2) < HelperMethods.round(end, 2)) {\n                    var lastBlock = cell.lastChild;\n                    if (lastBlock instanceof ParagraphWidget && lastBlock.isEmpty()) {\n                        cell.childWidgets.pop();\n                    }\n                    if (isNullOrUndefined(mergedCell)) {\n                        mergedCell = cell;\n                        firstBlock = lastBlock;\n                    }\n                    else {\n                        if (i === rowStartIndex) {\n                            mergedCell.cellFormat.preferredWidth += cell.cellFormat.preferredWidth;\n                            mergedCell.cellFormat.columnSpan += cell.cellFormat.columnSpan;\n                            this.mergeBorders(mergedCell, cell);\n                        }\n                        for (var k = 0; k < cell.childWidgets.length; k++) {\n                            var block = cell.childWidgets[k];\n                            var newBlock = block.clone();\n                            newBlock.containerWidget = mergedCell;\n                            mergedCell.childWidgets.push(newBlock);\n                        }\n                        row.childWidgets.splice(j, 1);\n                        cell.destroy();\n                        j--;\n                        for (var l = this.documentHelper.contentControlCollection.length - 1; l > -1; l--) {\n                            var content = this.documentHelper.contentControlCollection[l];\n                            if (isNullOrUndefined(content.contentControlProperties)) {\n                                this.documentHelper.contentControlCollection.splice(l);\n                            }\n                        }\n                    }\n                }\n            }\n            //To Ensure minimul content. \n            if ((mergedCell.childWidgets.length === 0 || mergedCell.childWidgets.length === 1 && mergedCell.childWidgets[0] instanceof TableWidget) && firstBlock) {\n                var newBlock = firstBlock.clone();\n                mergedCell.childWidgets.push(newBlock);\n                newBlock.containerWidget = mergedCell;\n            }\n            if (row.childWidgets.length === 0) {\n                var rowIndex = table.childWidgets.indexOf(row);\n                row.updateRowBySpannedCells();\n                table.childWidgets.splice(rowIndex, 1);\n                row.destroy();\n                count--;\n                i--;\n            }\n        }\n        if (!isNullOrUndefined(mergedCell) && rowStartIndex < count) {\n            mergedCell.cellFormat.rowSpan = count - rowStartIndex + 1;\n        }\n        this.updateBlockIndexAfterMerge(mergedCell);\n        table.updateRowIndex(0);\n        table.calculateGrid();\n        table.isGridUpdated = false;\n        table.buildTableColumns();\n        table.isGridUpdated = true;\n        this.documentHelper.layout.reLayoutTable(table);\n        //Layouts the table after merging cells.\n        this.selection.owner.isLayoutEnabled = true;\n        return mergedCell;\n    };\n    Editor.prototype.mergeBorders = function (mergedCell, tableCell) {\n        var mergedCellborders = undefined;\n        var cellBorders = null;\n        if (!isNullOrUndefined(mergedCell.cellFormat.borders)) {\n            mergedCellborders = mergedCell.cellFormat.borders;\n        }\n        if (!isNullOrUndefined(tableCell.cellFormat.borders)) {\n            cellBorders = tableCell.cellFormat.borders;\n        }\n        if (isNullOrUndefined(mergedCellborders) && isNullOrUndefined(cellBorders)) {\n            return;\n        }\n        if (isNullOrUndefined(mergedCellborders)) {\n            mergedCellborders = new WBorders(mergedCell.cellFormat);\n            mergedCellborders.copyFormat(cellBorders);\n        }\n        else if (isNullOrUndefined(cellBorders)) {\n            return;\n        }\n        else {\n            if (mergedCell.ownerRow.rowIndex === tableCell.ownerRow.rowIndex) {\n                mergedCellborders.top = mergedCell.getBorderBasedOnPriority(mergedCellborders.top, cellBorders.bottom);\n                mergedCellborders.bottom = mergedCell.getBorderBasedOnPriority(mergedCellborders.bottom, cellBorders.bottom);\n            }\n        }\n    };\n    Editor.prototype.updateBlockIndexAfterMerge = function (cell) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            cell.childWidgets[i].index = i;\n        }\n    };\n    /**\n     * Determines whether the merge cell operation can be done.\n     *\n     * @returns {boolean} Returns true if to merge cells; Otherwise, false.\n     */\n    Editor.prototype.canMergeCells = function () {\n        if (this.selection.isEmpty || !this.selection.start.paragraph.isInsideTable || !this.selection.end.paragraph.isInsideTable) {\n            return false;\n        }\n        var startPos = this.selection.start;\n        var endPos = this.selection.end;\n        if (!this.selection.isForward) {\n            startPos = this.selection.end;\n            endPos = this.selection.start;\n        }\n        var startCell = this.getOwnerCell(this.selection.isForward);\n        var endCell = this.getOwnerCell(!this.selection.isForward);\n        var containerCell = this.selection.getContainerCellOf(startCell, endCell);\n        if (containerCell.ownerTable.contains(endCell)) {\n            if (!this.selection.containsCell(containerCell, endCell)) {\n                startCell = this.selection.getSelectedCell(startCell, containerCell);\n                endCell = this.selection.getSelectedCell(endCell, containerCell);\n                var rowSpan = 1;\n                if (startCell.ownerRow === endCell.ownerRow) {\n                    var startCellIndex = startCell.ownerRow.childWidgets.indexOf(startCell);\n                    for (var i = startCellIndex; i <= startCell.ownerRow.childWidgets.indexOf(endCell); i++) {\n                        var cell = startCell.ownerRow.childWidgets[i];\n                        var prevCell = cell.previousWidget;\n                        if (i !== startCellIndex) {\n                            if (cell.cellFormat.rowSpan !== rowSpan) {\n                                return false;\n                            }\n                            if (!isNullOrUndefined(prevCell)\n                                && cell.columnIndex !== (prevCell.cellFormat.columnSpan + prevCell.columnIndex)) {\n                                return false;\n                            }\n                        }\n                        rowSpan = cell.cellFormat.rowSpan;\n                    }\n                    return true;\n                }\n                return this.canMergeSelectedCellsInTable(startCell.ownerTable, startCell, endCell);\n            }\n        }\n        return false;\n    };\n    Editor.prototype.canMergeSelectedCellsInTable = function (table, startCell, endCell) {\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n        var startLeft = this.selection.getCellLeft(startCell.ownerRow, startCell);\n        var endLeft = startLeft + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(startLeft, endLeft, endCellLeft, endCellRight);\n        startLeft = cellInfo.start;\n        endLeft = cellInfo.end;\n        var selectionLeft = 0;\n        var selectionRight = 0;\n        var isRowLeftWithinSel = false;\n        var isRowRightWithinSel = false;\n        var rowSpannedCells = [];\n        for (var i = rowStartIndex; i <= count; i++) {\n            var row = table.childWidgets[i];\n            var rowLeft = 0;\n            var rowRight = 0;\n            var isStarted = false;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                var cellStart = this.selection.getCellLeft(row, cell);\n                if (this.checkCellWithInSelection(startLeft, endLeft, cellStart)) {\n                    isRowLeftWithinSel = false;\n                    isRowRightWithinSel = false;\n                    if (cell.cellFormat.rowSpan > 1) {\n                        rowSpannedCells.push(cell);\n                    }\n                    if (!isStarted) {\n                        rowLeft = cellStart;\n                        rowRight = cellStart;\n                        isStarted = true;\n                    }\n                    var prevCell = cell.previousWidget;\n                    if (rowRight !== 0 && HelperMethods.round(rowRight, 0) !== HelperMethods.round(cellStart, 0)) {\n                        rowRight = cellStart;\n                    }\n                    rowRight += HelperMethods.convertPointToPixel(cell.cellFormat.cellWidth);\n                    var isPrevCellWithinSel = this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, true);\n                    var isNextCellWithinSel = this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, false);\n                    // When selected cell not having row spanned cells and column index is not having immediate cell index value,\n                    // then returned false.\n                    var isNoRowSpan = rowSpannedCells.length === 0 || rowSpannedCells.length === 1 && rowSpannedCells[0] === cell;\n                    // checks whether current cell is with in selection.\n                    var isCellWithInSel = this.checkCurrentCell(rowSpannedCells, cell, isPrevCellWithinSel, isNextCellWithinSel);\n                    // when last selected row not having equal row span then returned false.\n                    if (i === count && !isNullOrUndefined(prevCell) && cell.cellFormat.rowSpan > prevCell.cellFormat.rowSpan\n                        && !isCellWithInSel) {\n                        return false;\n                    }\n                    if (i !== rowStartIndex) {\n                        for (var m = 0; m < rowSpannedCells.length; m++) {\n                            {\n                                var rowSpan = (rowSpannedCells[m].ownerRow.rowIndex + rowSpannedCells[m].cellFormat.rowSpan) - 1;\n                                if (rowSpan >= row.rowIndex) {\n                                    if (rowSpannedCells[m].columnIndex > cell.columnIndex) {\n                                        isRowRightWithinSel = true;\n                                    }\n                                    else {\n                                        isRowLeftWithinSel = true;\n                                    }\n                                    if (i === count && rowSpannedCells[m] !== cell\n                                        && rowSpan > (cell.ownerRow.rowIndex + cell.cellFormat.rowSpan - 1)) {\n                                        return false;\n                                    }\n                                    if (rowSpan === row.rowIndex && !this.checkPrevOrNextCellIsWithinSel(startLeft, endLeft, cell, false)) {\n                                        rowSpannedCells.splice(rowSpannedCells.indexOf(rowSpannedCells[m]), 1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (isPrevCellWithinSel && !isNullOrUndefined(prevCell)\n                        && isNoRowSpan\n                        && (cell.columnIndex !== prevCell.columnIndex + 1 && this.checkCellWidth(cell))) {\n                        return false;\n                    }\n                }\n            }\n            if (i === rowStartIndex) {\n                selectionLeft = rowLeft;\n                selectionRight = rowRight;\n            }\n            else {\n                if (rowRight > 0 && rowLeft > 0) {\n                    if (!((isRowLeftWithinSel || Math.round(selectionLeft) === Math.round(rowLeft))\n                        && (isRowRightWithinSel || Math.round(selectionRight) === Math.round(rowRight)))) {\n                        return false;\n                    }\n                }\n                if (i === count) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.checkCellWidth = function (cell) {\n        var prevCell = cell.previousWidget;\n        var cellLeft = this.documentHelper.selection.getCellLeft(cell.ownerRow, cell);\n        var prevCellLeft = this.documentHelper.selection.getCellLeft(cell.ownerRow, prevCell);\n        var left = prevCellLeft + HelperMethods.convertPointToPixel(prevCell.cellFormat.cellWidth);\n        if (HelperMethods.round(left, 2) !== HelperMethods.round(cellLeft, 2)) {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.checkCellWithInSelection = function (startLeft, endLeft, cellStart) {\n        if (HelperMethods.round(startLeft, 2) <= HelperMethods.round(cellStart, 2)\n            && HelperMethods.round(cellStart, 2) < HelperMethods.round(endLeft, 2)) {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.checkPrevOrNextCellIsWithinSel = function (startLeft, endLeft, cell, isPrev) {\n        var prevOrNextCell = isPrev ? cell.previousWidget : cell.nextWidget;\n        var cellStart = 0;\n        if (isNullOrUndefined(prevOrNextCell)) {\n            return false;\n        }\n        cellStart = this.documentHelper.selection.getCellLeft(prevOrNextCell.ownerRow, prevOrNextCell);\n        return this.checkCellWithInSelection(startLeft, endLeft, cellStart);\n    };\n    Editor.prototype.checkCurrentCell = function (rowSpannedCells, cell, isPrevCellWithInSel, isNextCellWithinSel) {\n        var cellOwner = cell.ownerRow;\n        if (rowSpannedCells.length > 0) {\n            for (var i = 0; i < rowSpannedCells.length; i++) {\n                var spannedCellOwner = rowSpannedCells[i].ownerRow;\n                var rowSpan = (spannedCellOwner.rowIndex + rowSpannedCells[i].cellFormat.rowSpan) - 1;\n                if (rowSpannedCells[i] === cell && (rowSpannedCells.length === 1 || this.checkRowSpannedCells(rowSpannedCells, cell))\n                    && !(isNextCellWithinSel || isPrevCellWithInSel)) {\n                    return true;\n                }\n                if (rowSpannedCells[i] !== cell && spannedCellOwner.rowIndex < cellOwner.rowIndex\n                    && rowSpan === (cellOwner.rowIndex + cell.cellFormat.rowSpan - 1)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.checkRowSpannedCells = function (rowSpannedCells, cell) {\n        for (var i = 0; i < rowSpannedCells.length; i++) {\n            if (rowSpannedCells[i] !== cell && rowSpannedCells[i].columnIndex === cell.columnIndex) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertNewParagraphWidget = function (newParagraph, insertAfter) {\n        this.updateInsertPosition();\n        this.insertParagraph(newParagraph, insertAfter);\n        if (!insertAfter) {\n            var nextParagraph = void 0;\n            var currentParagraph = newParagraph;\n            do {\n                nextParagraph = this.selection.getNextParagraphBlock(currentParagraph);\n                currentParagraph = nextParagraph;\n            } while (nextParagraph && nextParagraph.equals(newParagraph));\n            if (!isNullOrUndefined(nextParagraph)) {\n                this.selection.selectParagraphInternal(nextParagraph, true);\n            }\n            else {\n                this.selection.selectParagraphInternal(newParagraph, true);\n            }\n        }\n        this.fireContentChange();\n    };\n    Editor.prototype.insertParagraph = function (newParagraph, insertAfter) {\n        var lineWidget = this.selection.start.currentWidget;\n        var offset = this.selection.start.offset;\n        if (this.editorHistory && this.editorHistory.isUndoing && this.editorHistory.currentBaseHistoryInfo &&\n            this.editorHistory.currentBaseHistoryInfo.action === 'InsertTextParaReplace') {\n            offset = 0;\n        }\n        var currentParagraph = this.selection.start.paragraph;\n        currentParagraph = currentParagraph.combineWidget(this.owner.viewer);\n        if (insertAfter) {\n            var length_1 = this.selection.getLineLength(currentParagraph.lastChild);\n            var insertIndex_1 = newParagraph.firstChild ? newParagraph.firstChild.children.length : 0;\n            this.moveInlines(currentParagraph, newParagraph, insertIndex_1, offset, lineWidget, length_1, currentParagraph.lastChild);\n        }\n        else if (offset > 0) {\n            var length_2 = currentParagraph.getLength();\n            this.moveInlines(currentParagraph, newParagraph, 0, 0, currentParagraph.firstChild, offset, lineWidget);\n            if (length_2 === offset && currentParagraph.characterFormat.revisions.length > 0) {\n                while (currentParagraph.characterFormat.revisions.length > 0) {\n                    newParagraph.characterFormat.revisions.push(currentParagraph.characterFormat.revisions.shift());\n                }\n            }\n        }\n        var splittedWidget = currentParagraph.getSplitWidgets();\n        currentParagraph = insertAfter ? splittedWidget[splittedWidget.length - 1] : splittedWidget[0];\n        var insertIndex = currentParagraph.containerWidget.childWidgets.indexOf(currentParagraph);\n        if (insertAfter) {\n            insertIndex++;\n        }\n        var bodyWidget = currentParagraph.containerWidget;\n        newParagraph.index = currentParagraph.index;\n        newParagraph.containerWidget = bodyWidget;\n        bodyWidget.childWidgets.splice(insertIndex, 0, newParagraph);\n        this.constructRevisionsForBlock(newParagraph, true);\n        this.updateNextBlocksIndex(insertAfter ? currentParagraph : newParagraph, true);\n        newParagraph.height = 0;\n        this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, bodyWidget, newParagraph, false);\n    };\n    Editor.prototype.moveInlines = function (currentParagraph, newParagraph, insertIndex, startOffset, startLine, endOffset, endLine, removeBlock) {\n        if (newParagraph.childWidgets.length === 0) {\n            var line = new LineWidget(newParagraph);\n            newParagraph.childWidgets.push(line);\n        }\n        var isMoved = false;\n        this.documentHelper.layout.clearListElementBox(currentParagraph);\n        this.documentHelper.layout.clearListElementBox(newParagraph);\n        for (var j = 0; j < currentParagraph.childWidgets.length; j++) {\n            var lineWidget = currentParagraph.childWidgets[j];\n            if (startLine === lineWidget && endLine === lineWidget) {\n                insertIndex = this.moveContent(lineWidget, startOffset, endOffset, insertIndex, newParagraph);\n                break;\n            }\n            if (endLine === lineWidget) {\n                insertIndex = this.moveContent(lineWidget, 0, endOffset, insertIndex, newParagraph);\n                break;\n            }\n            else if (startLine === lineWidget) {\n                isMoved = true;\n                insertIndex = this.moveContent(lineWidget, startOffset, this.documentHelper.selection.getLineLength(lineWidget), insertIndex, newParagraph);\n            }\n            else if (isMoved) {\n                insertIndex = this.moveContent(lineWidget, 0, this.documentHelper.selection.getLineLength(lineWidget), insertIndex, newParagraph);\n            }\n        }\n        this.removeEmptyLine(currentParagraph);\n        if (!currentParagraph.isInsideTable && !removeBlock) {\n            this.viewer.updateClientArea(currentParagraph.bodyWidget, currentParagraph.bodyWidget.page);\n            this.documentHelper.layout.reLayoutParagraph(currentParagraph, 0, 0);\n        }\n    };\n    Editor.prototype.moveContent = function (lineWidget, startOffset, endOffset, insertIndex, paragraph) {\n        var count = 0;\n        //let lineIndex: number = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            var inline = lineWidget.children[i];\n            if (startOffset >= count + inline.length || inline instanceof ListTextElementBox) {\n                if (!(inline instanceof ListTextElementBox)) {\n                    count += inline.length;\n                }\n                continue;\n            }\n            var startIndex = 0;\n            if (startOffset > count) {\n                startIndex = startOffset - count;\n            }\n            var endIndex = endOffset - count;\n            if (endIndex > inline.length) {\n                endIndex = inline.length;\n            }\n            if (startIndex > 0) {\n                count += startIndex;\n            }\n            if (startIndex === 0 && endIndex === inline.length) {\n                if (inline instanceof ShapeBase) {\n                    var shapeIndex = lineWidget.paragraph.floatingElements.indexOf(inline);\n                    if (shapeIndex !== -1) {\n                        lineWidget.paragraph.floatingElements.splice(shapeIndex, 1);\n                    }\n                }\n                paragraph.firstChild.children.splice(insertIndex, 0, inline);\n                inline.line = paragraph.firstChild;\n                insertIndex++;\n                // if (editAction < 4) {\n                // this.unLinkFieldCharacter(inline);\n                lineWidget.children.splice(i, 1);\n                i--;\n                // }\n            }\n            else if (inline instanceof TextElementBox) {\n                // if (editAction < 4) {\n                var span = new TextElementBox();\n                span.characterFormat.copyFormat(inline.characterFormat);\n                span.text = inline.text.substr(startIndex, endIndex - startIndex);\n                inline.ischangeDetected = true;\n                span.ischangeDetected = true;\n                paragraph.firstChild.children.splice(insertIndex, 0, span);\n                span.line = paragraph.firstChild;\n                insertIndex++;\n                this.updateRevisionForMovedContent(inline, span);\n                inline.text = inline.text.slice(0, startIndex) + inline.text.slice(endIndex);\n                inline.ischangeDetected = true;\n            }\n            if (endOffset <= count + endIndex - startIndex) {\n                break;\n            }\n            count += endIndex - startIndex;\n        }\n        return insertIndex;\n    };\n    Editor.prototype.updateRevisionForMovedContent = function (inline, tempSpan) {\n        for (var i = 0; i < inline.revisions.length; i++) {\n            var currentRevision = inline.revisions[i];\n            var rangeIndex = currentRevision.range.indexOf(inline);\n            tempSpan.revisions.splice(0, 0, currentRevision);\n            currentRevision.range.splice(rangeIndex, 0, tempSpan);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n    };\n    /**\n     * update complex changes when history is not preserved\n     *\n     * @param {number} action - Specifies the action\n     * @param {string} start - Specifies the selection start\n     * @param {string} end - Specified the selection end\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateComplexWithoutHistory = function (action, start, end) {\n        var selection = this.documentHelper.selection;\n        if (action === 0) {\n            var startPosition = new TextPosition(selection.owner);\n            this.setPositionForCurrentIndex(startPosition, start);\n            this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n            this.setPositionForCurrentIndex(selection.start, end);\n            this.setPositionForCurrentIndex(selection.end, end);\n        }\n        if (action === 1) {\n            var startPosition = new TextPosition(selection.owner);\n            this.setPositionForCurrentIndex(startPosition, start);\n            var endPosition = new TextPosition(selection.owner);\n            this.setPositionForCurrentIndex(endPosition, end);\n            this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n            if (endPosition.paragraph !== startPosition.paragraph) {\n                this.documentHelper.layout.reLayoutParagraph(endPosition.paragraph, 0, 0);\n            }\n        }\n        if (selection.owner.isShiftingEnabled) {\n            this.documentHelper.layout.shiftLayoutedItems(false);\n            if (this.documentHelper.owner.enableHeaderAndFooter) {\n                this.updateHeaderFooterWidget();\n            }\n        }\n        selection.owner.isShiftingEnabled = false;\n        selection.start.updatePhysicalPosition(true);\n        if (selection.isEmpty) {\n            selection.end.setPositionInternal(selection.start);\n        }\n        else {\n            selection.end.updatePhysicalPosition(true);\n        }\n        selection.upDownSelectionLength = selection.end.location.x;\n        selection.fireSelectionChanged(true);\n        this.documentHelper.updateFocus();\n        this.owner.viewer.updateScrollBars();\n        this.fireContentChange();\n        this.isHandledComplex = true;\n    };\n    /**\n     * Re-layout content.\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param isSelectionChanged - Specifies the selection changed\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.reLayout = function (selection, isSelectionChanged, isLayoutChanged) {\n        if (!isNullOrUndefined(this.previousBlockToLayout)) {\n            // Layout content for previous page to fix content based on KeepWithNext format.\n            var previousBlock = this.previousBlockToLayout;\n            this.documentHelper.layout.layoutBodyWidgetCollection(previousBlock.index, previousBlock.bodyWidget, previousBlock, false, false);\n            this.previousBlockToLayout = undefined;\n        }\n        if (!this.documentHelper.isComposingIME && this.editorHistory && this.editorHistory.isHandledComplexHistory()) {\n            if (this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action !== 'ClearFormat') {\n                if (this.editorHistory.currentHistoryInfo.action !== 'ApplyStyle') {\n                    if (this.editorHistory.currentHistoryInfo.action === 'DragAndDropContent') {\n                        this.documentHelper.layout.shiftLayoutedItems(true);\n                    }\n                    this.startParagraph = undefined;\n                    this.endParagraph = undefined;\n                }\n            }\n            this.isHandledComplex = false;\n            if (this.editorHistory.currentHistoryInfo && (this.editorHistory.currentHistoryInfo.action === 'ColumnBreak'\n                || this.editorHistory.currentHistoryInfo.action === 'PageBreak')) {\n            }\n            else {\n                return;\n            }\n        }\n        if (!isNullOrUndefined(selection.editRegionHighlighters)) {\n            selection.editRegionHighlighters.clear();\n        }\n        if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n            this.documentHelper.removeEmptyPages();\n            this.documentHelper.layout.updateFieldElements();\n            /*  if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.footnoteWidget)) {\n                  let foot: FootNoteWidget = selection.start.paragraph.bodyWidget.page.footnoteWidget;\n                  //this.documentHelper.layout.layoutfootNote(foot);\n              }\n              if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.endnoteWidget)) {\n                  let foot: FootNoteWidget = selection.start.paragraph.bodyWidget.page.endnoteWidget;\n                  //this.documentHelper.layout.layoutfootNote(foot);\n              }*/\n            this.owner.viewer.updateScrollBars();\n            if (!selection.owner.isShiftingEnabled || this.documentHelper.isRowOrCellResizing) {\n                selection.fireSelectionChanged(true);\n                this.startParagraph = undefined;\n                this.endParagraph = undefined;\n            }\n        }\n        if (isNullOrUndefined(isSelectionChanged)) {\n            isSelectionChanged = selection.isEmpty;\n        }\n        if (this.owner.showRevisions && this.owner.trackChangesPane.isUpdateTrackChanges(this.owner.revisions.length)) {\n            this.owner.trackChangesPane.updateTrackChanges();\n        }\n        if (selection.owner.isShiftingEnabled) {\n            selection.owner.isShiftingEnabled = false;\n            selection.owner.isLayoutEnabled = true;\n            var bodyWidget = selection.start.paragraph.bodyWidget;\n            var splittedSection = bodyWidget.getSplitWidgets();\n            bodyWidget = splittedSection[splittedSection.length - 1];\n            var isColumnBreak = (this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'ColumnBreak' && this.documentHelper.layout.isMultiColumnDoc) ? true : false;\n            if (((!isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && this.documentHelper.layout.isMultiColumnDoc) || (bodyWidget.sectionFormat.breakCode === 'NoBreak' && (bodyWidget.sectionIndex === bodyWidget.page.bodyWidgets[0].sectionIndex) && bodyWidget.sectionFormat.numberOfColumns > 1) || isColumnBreak) && !(bodyWidget instanceof HeaderFooterWidget) && !(!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget)) {\n                var startPosition = this.documentHelper.selection.start;\n                var endPosition = this.documentHelper.selection.end;\n                var startInfo = this.selection.getParagraphInfo(startPosition);\n                var endInfo = this.selection.getParagraphInfo(endPosition);\n                var startIndex = this.selection.getHierarchicalIndex(startInfo.paragraph, startInfo.offset.toString());\n                var endIndex = this.selection.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n                this.documentHelper.layout.shiftLayoutedItems(true);\n                this.setPositionForCurrentIndex(startPosition, startIndex);\n                this.setPositionForCurrentIndex(endPosition, endIndex);\n                this.documentHelper.selection.selectPosition(startPosition, endPosition);\n                this.owner.viewer.updateScrollBars();\n            }\n            else {\n                this.documentHelper.layout.shiftLayoutedItems(true);\n            }\n            if (this.documentHelper.owner.enableHeaderAndFooter) {\n                this.updateHeaderFooterWidget();\n            }\n            if (!this.documentHelper.isRowOrCellResizing) {\n                if (!isNullOrUndefined(selection.start.paragraph)) {\n                    if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.containerWidget) && selection.start.paragraph.bodyWidget.containerWidget instanceof FootNoteWidget) {\n                        if (selection.start.paragraph.bodyWidget.containerWidget.footNoteType === 'Footnote') {\n                            this.documentHelper.layout.isRelayoutFootnote = true;\n                            this.shiftFootnotePageContent(selection.start.paragraph.bodyWidget.containerWidget);\n                            //this.documentHelper.layout.layoutfootNote(selection.start.paragraph.bodyWidget.containerWidget);\n                        }\n                        else {\n                            this.documentHelper.layout.isRelayoutFootnote = false;\n                            this.shiftFootnotePageContent();\n                        }\n                    }\n                }\n                this.getOffsetValue(selection);\n                selection.upDownSelectionLength = selection.end.location.x;\n                selection.fireSelectionChanged(true);\n                if (this.owner.enableAutoFocus) {\n                    this.documentHelper.updateFocus();\n                }\n                this.startParagraph = undefined;\n                this.endParagraph = undefined;\n                //this.documentHelper.layout.allowLayout = true;\n            }\n        }\n        else if (this.documentHelper.owner.enableHeaderAndFooter) {\n            this.updateHeaderFooterWidget();\n        }\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo &&\n            ((this.editorHistory.currentBaseHistoryInfo.action !== 'RowResizing'\n                && this.editorHistory.currentBaseHistoryInfo.action !== 'CellResizing')\n                || (this.editorHistory.isUndoing || this.editorHistory.isRedoing))) {\n            if (this.editorHistory.currentBaseHistoryInfo.modifiedProperties.length > 0) {\n                this.editorHistory.currentBaseHistoryInfo.updateSelection();\n            }\n            if (!(this.editorHistory.undoStack && this.editorHistory.undoStack.length > 0 && this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1] instanceof HistoryInfo &&\n                this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions &&\n                this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions[this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].modifiedActions.length - 1] === this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.updateHistory();\n            }\n            else {\n                this.editorHistory.currentBaseHistoryInfo = undefined;\n            }\n        }\n        if (isLayoutChanged) {\n            return;\n        }\n        this.fireContentChange();\n        if (this.owner.enableLockAndEdit) {\n            // Editable region border get updated in content changes event.\n            // So, handled rerendering content after applying border.\n            this.owner.viewer.updateScrollBars();\n        }\n        this.owner.documentHelper.layout.isRelayout = false;\n        this.isFootnoteElementRemoved = false;\n        this.isEndnoteElementRemoved = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateHeaderFooterWidget = function (headerFooterWidget) {\n        if (isNullOrUndefined(headerFooterWidget)) {\n            headerFooterWidget = this.selection.start.paragraph.bodyWidget;\n        }\n        this.updateHeaderFooterWidgetToPage(headerFooterWidget);\n        this.shiftPageContent(headerFooterWidget.headerFooterType, headerFooterWidget.sectionFormat);\n    };\n    Editor.prototype.updateHeaderFooterWidgetToPage = function (node) {\n        var currentPage = node.page;\n        //node = this.documentHelper.layout.updateHeaderFooterToParent(node);\n        var isEvenPage = (node.headerFooterType === 'EvenHeader' || node.headerFooterType === 'EvenFooter');\n        var isFirstPage = (node.headerFooterType === 'FirstPageHeader' || node.headerFooterType === 'FirstPageFooter');\n        for (var i = 0; i < this.documentHelper.pages.length; i++) {\n            var page = this.documentHelper.pages[i];\n            if (page.bodyWidgets[0].sectionFormat.differentFirstPage && isFirstPage\n                && (page.headerWidgetIn.headerFooterType == node.headerFooterType || page.footerWidgetIn.headerFooterType == node.headerFooterType)) {\n                this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n                continue;\n            }\n            if (page.bodyWidgets[0].sectionFormat.differentFirstPage &&\n                (isFirstPage || (!isFirstPage && page.index == 0 || page.sectionIndex != page.previousPage.sectionIndex))) {\n                continue;\n            }\n            //if (currentPage !== page) {\n            if (page.bodyWidgets[0].sectionFormat.differentOddAndEvenPages) {\n                if (isEvenPage && (i + 1) % 2 === 0) {\n                    this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n                }\n                else if ((!isEvenPage && (i + 1) % 2 !== 0)) {\n                    if (i > 0 || !(page.bodyWidgets[0].sectionFormat.differentFirstPage)) {\n                        this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n                    }\n                }\n            }\n            else {\n                this.updateHeaderFooterWidgetToPageInternal(page, node, node.headerFooterType.indexOf('Header') !== -1);\n            }\n            //}\n        }\n    };\n    Editor.prototype.updateHeaderFooterWidgetToPageInternal = function (page, widget, isHeader) {\n        var update = false;\n        if (isHeader) {\n            update = widget != page.headerWidgetIn && widget.page.headerWidget == page.headerWidget;\n        }\n        else {\n            update = widget != page.footerWidgetIn && widget.page.footerWidget == page.footerWidget;\n        }\n        if (update) {\n            var hfWidget = widget.clone();\n            this.documentHelper.layout.clearBlockWidget(hfWidget.childWidgets, true, true, true);\n            hfWidget.page = page;\n            hfWidget.parentHeaderFooter = widget;\n            this.owner.viewer.updateHFClientArea(hfWidget.sectionFormat, isHeader);\n            hfWidget = this.documentHelper.layout.layoutHeaderFooterItems(this.owner.viewer, hfWidget);\n            var headerOrFooter = void 0;\n            if (isHeader) {\n                headerOrFooter = page.headerWidgetIn;\n                page.headerWidget = hfWidget;\n            }\n            else {\n                headerOrFooter = page.footerWidgetIn;\n                page.footerWidget = hfWidget;\n            }\n            this.removeFieldInWidget(headerOrFooter);\n            this.removeFieldInWidget(headerOrFooter, undefined, true);\n            headerOrFooter.destroy();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeFieldInWidget = function (widget, isBookmark, isContentControl) {\n        if (isNullOrUndefined(isBookmark)) {\n            isBookmark = false;\n        }\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            this.removeFieldInBlock(widget.childWidgets[i], isBookmark, isContentControl);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeFieldInBlock = function (block, isBookmark, isContentControl) {\n        if (block instanceof TableWidget) {\n            if (block.wrapTextAround && !isNullOrUndefined(block.bodyWidget)) {\n                var index = block.bodyWidget.floatingElements.indexOf(block);\n                if (index !== -1) {\n                    block.bodyWidget.floatingElements.splice(index, 1);\n                }\n            }\n            this.removeFieldTable(block, isBookmark, isContentControl);\n        }\n        else if (block instanceof TableRowWidget) {\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                this.removeFieldInWidget(block.childWidgets[i], isBookmark, isContentControl);\n            }\n        }\n        else {\n            this.removeField(block, isBookmark, isContentControl);\n        }\n    };\n    Editor.prototype.removeFieldTable = function (table, isBookmark, isContentControl) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.removeFieldInWidget(row.childWidgets[j], isBookmark, isContentControl);\n            }\n        }\n    };\n    Editor.prototype.shiftFootnotePageContent = function (foot) {\n        var section = this.documentHelper.pages[0].bodyWidgets[0];\n        if (!isNullOrUndefined(foot)) {\n            var index = this.documentHelper.pages.indexOf(foot.page);\n            section = this.documentHelper.pages[index].bodyWidgets[0];\n        }\n        if (!isNullOrUndefined(section.page.footnoteWidget)) {\n            this.checkAndShiftFromBottom(section.page, section.page.footnoteWidget);\n        }\n        if (!isNullOrUndefined(section.page.endnoteWidget)) {\n            //this.checkAndShiftFromBottom(section.page, section.page.endnoteWidget);\n        }\n        if (this.documentHelper.blockToShift) {\n            this.documentHelper.renderedLists.clear();\n            this.documentHelper.renderedLevelOverrides = [];\n            this.documentHelper.layout.shiftLayoutedItems(false);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.shiftPageContent = function (type, sectionFormat) {\n        // let type: HeaderFooterType = headerFooter.headerFooterType;\n        var pageIndex;\n        if (type.indexOf('First') !== -1) {\n            pageIndex = 0;\n        }\n        else if (sectionFormat.differentOddAndEvenPages) {\n            var isEven = type.indexOf('Even') !== -1;\n            if (sectionFormat.differentFirstPage) {\n                pageIndex = isEven ? 1 : 2;\n            }\n            else {\n                pageIndex = !isEven ? 0 : 1;\n            }\n        }\n        else {\n            pageIndex = sectionFormat.differentFirstPage ? 1 : 0;\n            if (pageIndex === 1 && this.documentHelper.pages.length === 1) {\n                pageIndex = 0;\n            }\n        }\n        var section = this.documentHelper.pages[pageIndex].bodyWidgets[0];\n        do {\n            if (type.indexOf('Header') !== -1) {\n                var widget = section.page.headerWidget;\n                var isNotEmpty = !widget.isEmpty || widget.isEmpty && this.owner.enableHeaderAndFooter;\n                var firstBlock = section.firstChild;\n                var top_1 = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n                var headerDistance = HelperMethods.convertPointToPixel(sectionFormat.headerDistance);\n                if (isNotEmpty) {\n                    top_1 = Math.max(headerDistance + section.page.headerWidget.height, top_1);\n                }\n                if (firstBlock.y !== top_1 && section.sectionFormat.breakCode !== \"NoBreak\") {\n                    this.owner.viewer.updateClientArea(section, section.page);\n                    firstBlock = firstBlock.combineWidget(this.owner.viewer);\n                    var prevWidget = firstBlock.previousRenderedWidget;\n                    if (prevWidget) {\n                        if (firstBlock.containerWidget.equals(prevWidget.containerWidget) && !(prevWidget.containerWidget.lastChild instanceof ParagraphWidget && (prevWidget.containerWidget.lastChild.isEndsWithPageBreak || prevWidget.containerWidget.lastChild.isEndsWithColumnBreak))) {\n                            this.owner.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                            this.documentHelper.layout.updateContainerWidget(firstBlock, prevWidget.containerWidget, prevWidget.indexInOwner + 1, false);\n                        }\n                    }\n                    this.documentHelper.blockToShift = firstBlock;\n                }\n            }\n            else {\n                this.checkAndShiftFromBottom(section.page, section.page.footerWidget);\n            }\n            if (this.documentHelper.blockToShift) {\n                this.documentHelper.renderedLists.clear();\n                this.documentHelper.renderedLevelOverrides = [];\n                this.documentHelper.layout.shiftLayoutedItems(false);\n            }\n            while (section) {\n                var previousSection = section;\n                do {\n                    //To skip section continuous, since it already shifted in `shiftLayoutedItems` method.\n                    var splittedSection = section.getSplitWidgets();\n                    section = splittedSection[splittedSection.length - 1].nextRenderedWidget;\n                } while (section && previousSection.page === section.page);\n                if (section) {\n                    if (pageIndex === 0) {\n                        break;\n                    }\n                    else {\n                        if (section.page.index + 1 % 2 === 0 && pageIndex === 1 ||\n                            (section.page.index + 1 % 2 !== 0 && pageIndex === 2)) {\n                            break;\n                        }\n                        var nextPage = section.page.nextPage;\n                        if (!isNullOrUndefined(nextPage) && nextPage.bodyWidgets[0].equals(section)) {\n                            section = nextPage.bodyWidgets[0];\n                            break;\n                        }\n                    }\n                }\n            }\n        } while (section);\n    };\n    Editor.prototype.checkAndShiftFromBottom = function (page, footerWidget) {\n        var bodyWidget = page.bodyWidgets[0];\n        var blockToShift;\n        if (bodyWidget.childWidgets.length > 1) {\n            for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n                var block = bodyWidget.childWidgets[i];\n                if (block.y + block.height > footerWidget.y) {\n                    blockToShift = block;\n                    break;\n                }\n                if (!(footerWidget instanceof FootNoteWidget)) {\n                    if (bodyWidget.childWidgets.length - 1 === i && block.y + block.height < footerWidget.y) {\n                        blockToShift = block;\n                        break;\n                    }\n                }\n            }\n            if (!isNullOrUndefined(blockToShift)) {\n                this.owner.viewer.updateClientArea(bodyWidget, page, true);\n                this.owner.viewer.cutFromTop(blockToShift.y);\n                this.documentHelper.blockToShift = blockToShift;\n            }\n        }\n    };\n    Editor.prototype.allowFormattingInFormFields = function (property) {\n        if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.selection.isInlineFormFillMode() &&\n            !isNullOrUndefined(this.owner.documentEditorSettings.formFieldSettings.formattingExceptions)) {\n            for (var j = 0; j < this.owner.documentEditorSettings.formFieldSettings.formattingExceptions.length; j++) {\n                if (property.toLowerCase() === this.owner.documentEditorSettings.formFieldSettings.formattingExceptions[j].toLowerCase()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.getContentControl = function () {\n        for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n            var contentControlStart = this.documentHelper.contentControlCollection[i];\n            var position = this.selection.getPosition(contentControlStart);\n            var cCstart = position.startPosition;\n            var cCend = position.endPosition;\n            var start = this.selection.start;\n            var end = this.selection.end;\n            if (!this.selection.isForward) {\n                start = this.selection.end;\n                end = this.selection.start;\n            }\n            if ((start.isExistAfter(cCstart) || start.isAtSamePosition(cCstart))\n                && (end.isExistBefore(cCend) || end.isAtSamePosition(cCend))) {\n                return contentControlStart;\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.checkPlainTextContentControl = function () {\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.selection.isForward) {\n            end = this.selection.start;\n            start = this.selection.end;\n        }\n        var startIndex = 0;\n        var endIndex = 0;\n        var startInline = start.currentWidget.getInline(start.offset, startIndex);\n        var endInline = end.currentWidget.getInline(end.offset, endIndex);\n        startIndex = startInline.index;\n        endIndex = endInline.index;\n        var startInlineEle = startInline.element;\n        var endInlineEle = endInline.element;\n        var startPosition;\n        var endPosition;\n        if ((startInlineEle && startInlineEle.contentControlProperties && startInlineEle.contentControlProperties.type === 'Text')\n            || (endInlineEle && endInlineEle.contentControlProperties && endInlineEle.contentControlProperties.type === 'Text')) {\n            startInlineEle = this.getContentControl();\n            if (startInlineEle.contentControlProperties && !isNullOrUndefined(startInlineEle)) {\n                var offset = startInlineEle.line.getOffset(startInlineEle, 1);\n                startPosition = new TextPosition(this.owner);\n                startPosition.setPositionParagraph(startInlineEle.line, offset);\n            }\n            else {\n                startPosition = start;\n            }\n            if (endInlineEle.contentControlProperties && startInlineEle.reference) {\n                endInlineEle = startInlineEle.reference;\n                var endoffset = endInlineEle.line.getOffset(endInlineEle, endInlineEle.length);\n                endPosition = new TextPosition(this.owner);\n                endPosition.setPositionParagraph(endInlineEle.line, endoffset);\n            }\n            else {\n                endPosition = end;\n            }\n            this.selection.selectRange(startPosition, endPosition);\n        }\n        else if (start.paragraph.contentControlProperties\n            && start.paragraph.contentControlProperties.type === 'Text') {\n            this.selection.selectParagraph();\n        }\n    };\n    //Paste Implementation ends\n    //Character Format apply implementation starts\n    /**\n     * Applies character format for selection.\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @param {boolean} update - Spcifies the update\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyCharacterFormat = function (property, value, update, applyStyle) {\n        var allowFormatting = this.documentHelper.isFormFillProtectedMode\n            && this.documentHelper.selection.isInlineFormFillMode() && this.allowFormattingInFormFields(property);\n        if ((this.restrictFormatting && !allowFormatting) || this.selection.checkContentControlLocked(true)) {\n            return;\n        }\n        this.documentHelper.layout.isBidiReLayout = true;\n        var selection = this.documentHelper.selection;\n        if ((selection.owner.isReadOnlyMode && !allowFormatting) || !selection.owner.isDocumentLoaded) {\n            return;\n        }\n        update = isNullOrUndefined(update) ? false : update;\n        applyStyle = isNullOrUndefined(applyStyle) ? false : applyStyle;\n        var action = (property[0].toUpperCase() + property.slice(1));\n        var paragraph = selection.start.paragraph;\n        var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n        this.checkPlainTextContentControl();\n        if (selection.isEmpty && selection.contextType !== 'List' && !applyStyle) {\n            selection.skipFormatRetrieval = true;\n            if (selection.end.isAtParagraphEnd) {\n                this.initHistory(action);\n                this.documentHelper.owner.isShiftingEnabled = true;\n                this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n                this.reLayout(this.documentHelper.selection);\n                this.documentHelper.updateFocus();\n            }\n            else {\n                selection.fireSelectionChanged(true);\n            }\n            selection.skipFormatRetrieval = false;\n            return;\n        }\n        //Skip consider highlightcolor if paragraph mark alone is selected similar to Microsoft Word behaviour\n        if (property === 'highlightColor' && selection.start.isInSameParagraph(selection.end)) {\n            var start = selection.start;\n            var end = selection.end;\n            if (!this.selection.isForward) {\n                end = selection.start;\n                start = selection.end;\n            }\n            if (end.offset === selection.getLineLength(end.currentWidget) + 1 && end.offset - 1 === start.offset) {\n                return;\n            }\n        }\n        this.setOffsetValue(selection);\n        this.initHistory(action);\n        // Todo: Complete Microsoft Word behavior on apply formatting in empty selection\n        // if (selection.isEmpty) {\n        //     this.documentHelper.owner.isShiftingEnabled = true;\n        //     this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n        //     this.reLayout(this.documentHelper.selection);\n        //     this.documentHelper.updateFocus();\n        //     return;\n        // }\n        if (selection.contextType === 'List') {\n            // this.updateCharacterFormatForListText(selection, action, value, update);\n            this.applyCharacterFormatForListText(selection, property, value, update);\n        }\n        else {\n            //Iterate and update format.\n            this.updateSelectionCharacterFormatting(property, value, update);\n        }\n        this.documentHelper.layout.isBidiReLayout = false;\n    };\n    Editor.prototype.applyCharacterFormatForListText = function (selection, property, values, update) {\n        var listLevel = selection.getListLevel(selection.start.paragraph);\n        if (isNullOrUndefined(listLevel)) {\n            return;\n        }\n        var characterFormat = listLevel.characterFormat;\n        switch (property) {\n            case 'bold':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'bold', !(characterFormat.bold));\n                break;\n            case 'italic':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'italic', !(characterFormat.italic));\n                break;\n            case 'fontColor':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'fontColor', values);\n                break;\n            case 'fontFamily':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'fontFamily', values);\n                break;\n            case 'fontSize':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'fontSize', values);\n                break;\n            case 'highlightColor':\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'highlightColor', values);\n                break;\n            case 'baselineAlignment':\n                if (characterFormat.baselineAlignment === values) {\n                    values = 'Normal';\n                }\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'baselineAlignment', values);\n                break;\n            case 'strikethrough':\n                if (characterFormat.strikethrough === values) {\n                    values = 'None';\n                }\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'strikethrough', values);\n                break;\n            case 'underline':\n                if (characterFormat.underline === values) {\n                    values = 'None';\n                }\n                this.applyListCharacterFormatByValue(selection, characterFormat, 'underline', values);\n                break;\n            case 'characterFormat':\n                this.applyListCharacterFormatByValue(selection, characterFormat, undefined, values);\n                break;\n        }\n    };\n    Editor.prototype.applyListCharacterFormatByValue = function (selection, format, property, value) {\n        this.initHistory('ListCharacterFormat');\n        this.applyCharFormatValue(format, property, value, false);\n        this.editorHistory.updateHistory();\n        this.reLayout(selection);\n        this.fireContentChange();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListCharacterFormat = function (selection, property, value) {\n        this.updateListTextSelRange(selection, property, value, false);\n    };\n    Editor.prototype.updateListTextSelRange = function (selection, property, value, update) {\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var startPositionInternal = selection.start;\n        var endPositionInternal = selection.end;\n        if (!selection.isForward) {\n            startPositionInternal = selection.end;\n            endPositionInternal = selection.start;\n        }\n        this.initHistoryPosition(selection, startPositionInternal);\n        var listLevel = selection.getListLevel(selection.start.paragraph);\n        this.applyCharFormatValue(listLevel.characterFormat, property, value, update);\n        this.startSelectionReLayouting(startPositionInternal.paragraph, selection, startPositionInternal, endPositionInternal);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateInsertPosition = function () {\n        var selection = this.documentHelper.selection;\n        var position = selection.start;\n        if (!selection.isForward) {\n            position = selection.end;\n        }\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)\n            && !isNullOrUndefined(position)) {\n            if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n                this.updateHistoryPosition(position, true);\n            }\n        }\n    };\n    /**\n     * Preserve paragraph and offset value for selection\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.setOffsetValue = function (selection) {\n        var info = this.selection.getParagraphInfo(selection.start);\n        this.startParagraph = info.paragraph;\n        this.startOffset = info.offset;\n        info = this.selection.getParagraphInfo(selection.end);\n        this.endParagraph = info.paragraph;\n        this.endOffset = info.offset;\n    };\n    /**\n     * Toggles the highlight color property of selected contents.\n     *\n     * @param {HighlightColor} highlightColor Specify the highlight color to be applied (default: Yellow).\n     * @returns {void}\n     */\n    Editor.prototype.toggleHighlightColor = function (highlightColor) {\n        var selection = this.documentHelper.selection;\n        if (isNullOrUndefined(highlightColor) || highlightColor === 'NoColor') {\n            highlightColor = 'Yellow';\n        }\n        //In Ms Word the highlight color is took from the ribbon. So we Have given yellow as constant.\n        if (selection.characterFormat.highlightColor === highlightColor) {\n            highlightColor = 'NoColor';\n        }\n        this.selection.characterFormat.highlightColor = highlightColor;\n    };\n    /**\n     * Toggles the subscript formatting of selected contents.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.toggleSubscript = function () {\n        if (this.owner.isReadOnlyMode || this.restrictFormatting) {\n            return;\n        }\n        var value = this.selection.characterFormat.baselineAlignment === 'Subscript' ? 'Normal' : 'Subscript';\n        this.selection.characterFormat.baselineAlignment = value;\n    };\n    /**\n     * Toggles the superscript formatting of selected contents.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.toggleSuperscript = function () {\n        if (this.owner.isReadOnlyMode || this.restrictFormatting) {\n            return;\n        }\n        var value = this.selection.characterFormat.baselineAlignment === 'Superscript' ? 'Normal' : 'Superscript';\n        this.selection.characterFormat.baselineAlignment = value;\n    };\n    /**\n     * Increases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.increaseIndent = function () {\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyParagraphFormat('leftIndent', this.documentHelper.defaultTabWidth, true, false);\n        }\n    };\n    /**\n     * Decreases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.decreaseIndent = function () {\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.onApplyParagraphFormat('leftIndent', -this.documentHelper.defaultTabWidth, true, false);\n        }\n    };\n    /**\n     * Clears the list format for selected paragraphs.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.clearList = function () {\n        this.selection.owner.editorModule.onApplyList(undefined);\n    };\n    /**\n     * Applies the bullet list to selected paragraphs.\n     *\n     * @param {string} bullet Specify the bullet character to be applied.\n     * @param {string} fontFamily Specify the bullet font family name.\n     * @returns {void}\n     */\n    Editor.prototype.applyBullet = function (bullet, fontFamily) {\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.applyBulletOrNumbering(bullet, 'Bullet', fontFamily);\n        }\n    };\n    /**\n     * Applies the numbering list to selected paragraphs.\n     *\n     * @param {string} numberFormat  “%n” representations in ‘numberFormat’ parameter will be replaced by respective list level’s value.\n     * `“%1)” will be displayed as “1)” `\n     * @param {ListLevelPattern} listLevelPattern  Default value of ‘listLevelPattern’ parameter is ListLevelPattern.Arabic\n     * @returns {void}\n     */\n    Editor.prototype.applyNumbering = function (numberFormat, listLevelPattern) {\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            this.applyBulletOrNumbering(numberFormat, listLevelPattern, 'Verdana');\n        }\n    };\n    /**\n     * Toggles the baseline alignment property of selected contents.\n     *\n     * @param {BaselineAlignment} baseAlignment Specifies the baseline alignment.\n     * @returns {void}\n     */\n    Editor.prototype.toggleBaselineAlignment = function (baseAlignment) {\n        this.updateProperty(2, baseAlignment);\n    };\n    Editor.prototype.clearFormattingInternal = function (isCompletePara) {\n        var selection = this.documentHelper.selection;\n        this.setPreviousBlockToLayout();\n        this.initComplexHistory('ClearFormat');\n        // let startIndex: string = selection.start.getHierarchicalIndexInternal();\n        // let endIndex: string = selection.end.getHierarchicalIndexInternal();\n        if (selection.isEmpty || (!isNullOrUndefined(isCompletePara) && isCompletePara)) {\n            selection.start.moveToParagraphStartInternal(selection, false);\n            selection.end.moveToParagraphEndInternal(selection, false);\n        }\n        this.setOffsetValue(selection);\n        if (this.editorHistory) {\n            this.editorHistory.initializeHistory('ClearCharacterFormat');\n        }\n        this.updateSelectionCharacterFormatting('ClearCharacterFormat', undefined, false);\n        this.getOffsetValue(selection);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.setOffsetValue(selection);\n        if (this.editorHistory) {\n            this.editorHistory.initializeHistory('ClearParagraphFormat');\n        }\n        this.updateParagraphFormatInternal('ClearParagraphFormat', undefined, false);\n        if (this.editorHistory) {\n            this.editorHistory.updateHistory();\n        }\n        this.getOffsetValue(selection);\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n            this.editorHistory.updateComplexHistory();\n        }\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n        // else {\n        //     this.checkAndUpdatedSelection(startIndex, endIndex);\n        // }\n    };\n    /**\n     * Clears the formatting.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.clearFormatting = function () {\n        this.clearFormattingInternal();\n    };\n    Editor.prototype.updateProperty = function (type, value) {\n        var selection = this.selection;\n        if (((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) || !selection.owner.isDocumentLoaded) {\n            return;\n        }\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        var indexInInline = 0;\n        var inlineObj = startPosition.currentWidget.getInline(startPosition.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        var paragraph = startPosition.paragraph;\n        if (!isNullOrUndefined(inline) && inline.length === indexInInline && !this.selection.isEmpty) {\n            inline = inline.nextNode;\n        }\n        if (type === 1) {\n            var currentUnderline = 'None';\n            if (!isNullOrUndefined(inline)) {\n                currentUnderline = inline.characterFormat.underline;\n            }\n            else if (!isNullOrUndefined(paragraph)) {\n                currentUnderline = paragraph.characterFormat.underline;\n            }\n            this.selection.characterFormat.underline = value === currentUnderline ? 'None' : value;\n        }\n        else {\n            var script = 'Normal';\n            if (!isNullOrUndefined(inline)) {\n                script = inline.characterFormat.baselineAlignment;\n            }\n            else if (!isNullOrUndefined(paragraph)) {\n                script = paragraph.characterFormat.baselineAlignment;\n            }\n            if (script === value) {\n                value = 'Normal';\n            }\n            this.selection.characterFormat.baselineAlignment = value;\n        }\n    };\n    Editor.prototype.getCompleteStyles = function () {\n        var completeStylesString = '{\"styles\":[';\n        for (var _i = 0, _a = this.documentHelper.preDefinedStyles.keys; _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            completeStylesString += (this.documentHelper.preDefinedStyles.get(name_1) + ',');\n        }\n        return completeStylesString.slice(0, -1) + ']}';\n    };\n    /**\n     * Initialize default styles\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.intializeDefaultStyles = function () {\n        var existingStyles = this.owner.getStyleNames('Paragraph');\n        var defaultStyleNames = ['Normal', 'Heading 1', 'Heading 2', 'Heading 3', 'Heading 4', 'Heading 5', 'Heading 6', 'Heading 7', 'Heading 8', 'Heading 9', 'Header', 'Footer'];\n        var styleNames = defaultStyleNames.filter(function (val) {\n            return existingStyles.indexOf(val) === -1;\n        });\n        for (var _i = 0, styleNames_1 = styleNames; _i < styleNames_1.length; _i++) {\n            var name_2 = styleNames_1[_i];\n            this.createStyle(this.documentHelper.preDefinedStyles.get(name_2));\n        }\n    };\n    /**\n     * Creates a new style or modifies an existing style with the specified style properties.\n     *\n     * > If modifyExistingStyle parameter is set to true and a style already exists with same name, it modifies the specified properties in the existing style.\n     * > If modifyExistingStyle parameter is set to false and a style already exists with same name, it creates a new style with unique name by appending ‘_1’. Hence, the newly style will not have the specified name.\n     * > If no style exists with same name, it creates a new style.\n     *\n     * @param {string} styleString The style properties.\n     * @param {boolean} modifyExistingStyle The Boolean value denotes whether to modify the properties in the existing style or create a new style.\n     *\n     * @returns {string} Returns the name of the created style.\n     */\n    Editor.prototype.createStyle = function (styleString, modifyExistingStyle) {\n        return this.createStyleIn(styleString, modifyExistingStyle).name;\n    };\n    /**\n     * @private\n     * Adds a new style to the document or updates an existing style.\n     *\n     * @param {string} styleString - The style to be added or updated.\n     * @param {boolean} modifyExistingStyle - Whether to modify an existing style.\n     * @returns {Object} - The style that was added or updated.\n     */\n    Editor.prototype.createStyleIn = function (styleString, modifyExistingStyle) {\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var style = JSON.parse(styleString);\n        var styleObj = this.documentHelper.styles.findByName(style.name);\n        var inputStyleType = style.type;\n        if (isNullOrUndefined(styleObj) || isNullOrUndefined(modifyExistingStyle) || !modifyExistingStyle) {\n            if (styleObj !== undefined) {\n                // Create a new style with new name and add it to collection.\n                style.name = this.getUniqueStyleName(style.name);\n            }\n            this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), style, this.documentHelper.styles, true);\n        }\n        else {\n            if (inputStyleType === styleObj.type) {\n                // Update the existing style with the newly received style information(Json)\n                this.setStyle(styleObj, style);\n            }\n            else {\n                // Create a new style with new name and add it to collection.\n                style.name = this.getUniqueStyleName(style.name);\n                this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), style, this.documentHelper.styles, true);\n            }\n        }\n        this.owner.notify(internalStyleCollectionChange, {});\n        return this.documentHelper.styles.findByName(style.name);\n    };\n    /**\n     * Modify the Style\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.setStyle = function (styleObj, style) {\n        // based on Style\n        if (!isNullOrUndefined(style.basedOn)) {\n            var basedOn = this.documentHelper.styles.findByName(style.basedOn);\n            if (!isNullOrUndefined(basedOn)) {\n                if (basedOn.type === style.type) {\n                    styleObj.basedOn = basedOn;\n                }\n            }\n            else {\n                var basedStyle = this.getStyle(style.basedOn, JSON.parse(this.getCompleteStyles()));\n                var styleData = void 0;\n                if (!isNullOrUndefined(basedStyle) && basedStyle.type === style.type) {\n                    styleData = basedStyle;\n                }\n                else {\n                    if (style.type === 'Paragraph') {\n                        styleData = JSON.parse('{\"type\":\"Paragraph\",\"name\":\"Normal\",\"next\":\"Normal\"}');\n                    }\n                    else {\n                        styleData = JSON.parse('{\"type\": \"Character\",\"name\": \"Default Paragraph Font\"}');\n                    }\n                }\n                styleObj.basedOn = this.documentHelper.styles.findByName(styleData.name);\n            }\n        }\n        // next style\n        if (!isNullOrUndefined(style.next)) {\n            if (style.type === \"Paragraph\") {\n                if (style.next === style.name) {\n                    styleObj.next = styleObj;\n                }\n                else {\n                    var next = this.documentHelper.styles.findByName(style.next);\n                    if (!isNullOrUndefined(next) && next.type === styleObj.type) {\n                        styleObj.next = next;\n                    }\n                    else {\n                        styleObj.next = styleObj;\n                    }\n                }\n            }\n        }\n        // link style\n        if (!isNullOrUndefined(style.link)) {\n            var link = this.documentHelper.styles.findByName(style.link);\n            var styleString = void 0;\n            if (!isNullOrUndefined(link) && (link.type === \"Character\")) {\n                this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, link.characterFormat);\n                styleObj.link = link;\n            }\n            else {\n                //Construct the CharacterStyle string\n                var charaStyle = {};\n                charaStyle.characterFormat = style.characterFormat;\n                var newCharStyle = this.documentHelper.styles.findByName(style.name + ' Char');\n                if (newCharStyle.name !== undefined) {\n                    charaStyle.name = this.getUniqueStyleName(style.name) + ' Char';\n                }\n                else {\n                    charaStyle.name = style.name + ' Char';\n                }\n                charaStyle.type = 'Character';\n                charaStyle.basedOn = 'Default Paragraph Font';\n                styleString = charaStyle;\n                this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), styleString, this.documentHelper.styles);\n                styleObj.link = this.documentHelper.styles.findByName(styleString.name);\n            }\n            if (style.type == 'Character') {\n                for (var i = 0; i < this.documentHelper.styles.length; i++) {\n                    var styleFormCollection = this.documentHelper.styles.getItem(i);\n                    var styleLink = styleFormCollection.link;\n                    var linkName = styleLink === undefined ? \"\" : styleLink.name;\n                    if (styleFormCollection.type === 'Paragraph' && linkName === style.link) {\n                        if (!isNullOrUndefined(styleFormCollection.characterFormat)) {\n                            this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, styleFormCollection.characterFormat);\n                        }\n                    }\n                }\n            }\n        }\n        //update the new paragraph style \n        if (!isNullOrUndefined(style.paragraphFormat)) {\n            this.documentHelper.owner.parser.parseParagraphFormat(0, style.paragraphFormat, styleObj.paragraphFormat);\n        }\n        //update the new character style \n        if (!isNullOrUndefined(style.characterFormat)) {\n            this.documentHelper.owner.parser.parseCharacterFormat(0, style.characterFormat, styleObj.characterFormat);\n        }\n    };\n    Editor.prototype.getStyle = function (name, data) {\n        for (var i = 0; i < data.styles.length; i++) {\n            if (data.styles[i].name === name) {\n                return data.styles[i];\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.getUniqueStyleName = function (name) {\n        var uniqueName = this.getUniqueName(name);\n        var style = this.documentHelper.styles.findByName(uniqueName);\n        while (!isNullOrUndefined(style)) {\n            uniqueName = this.getUniqueStyleName(style.name);\n            style = this.documentHelper.styles.findByName(uniqueName);\n        }\n        return uniqueName;\n    };\n    Editor.prototype.getUniqueName = function (name) {\n        var matchArray = name.match(/\\d+$/);\n        var returnName;\n        if (!isNullOrUndefined(matchArray) && matchArray.length > 0) {\n            return name.replace(matchArray[0], (parseInt(matchArray[0], 10) + 1).toString());\n        }\n        else {\n            return name + '_1';\n        }\n    };\n    /**\n     * Update Character format for selection\n     * @private\n     */\n    Editor.prototype.updateSelectionCharacterFormatting = function (property, values, update) {\n        if (isNullOrUndefined(property)) {\n            property = 'CharacterFormat';\n        }\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = values;\n        }\n        switch (property) {\n            case 'bold':\n                this.updateCharacterFormat('bold', values);\n                break;\n            case 'italic':\n                this.updateCharacterFormat('italic', values);\n                break;\n            case 'fontColor':\n                this.updateCharacterFormat('fontColor', values);\n                break;\n            case 'fontFamily':\n                this.updateCharacterFormat('fontFamily', values);\n                break;\n            case 'fontSize':\n                this.documentHelper.layout.isBidiReLayout = false;\n                this.updateCharacterFormatWithUpdate(this.documentHelper.selection, 'fontSize', values, update);\n                break;\n            case 'highlightColor':\n                this.updateCharacterFormat('highlightColor', values);\n                break;\n            case 'baselineAlignment':\n                this.updateCharacterFormat('baselineAlignment', values);\n                break;\n            case 'strikethrough':\n                this.updateCharacterFormat('strikethrough', values);\n                break;\n            case 'underline':\n                this.updateCharacterFormat('underline', values);\n                break;\n            case 'styleName':\n                this.updateCharacterFormatWithUpdate(this.documentHelper.selection, 'styleName', values, true, true);\n                break;\n            case 'CharacterFormat':\n                this.updateCharacterFormat(undefined, values);\n                break;\n            case 'ClearCharacterFormat':\n                this.updateCharacterFormat(undefined, values);\n                break;\n            case 'allCaps':\n                this.updateCharacterFormat('allCaps', values);\n                break;\n        }\n        this.reLayout(this.documentHelper.selection);\n    };\n    Editor.prototype.updateCharacterFormat = function (property, value) {\n        this.updateCharacterFormatWithUpdate(this.documentHelper.selection, property, value, false);\n    };\n    Editor.prototype.updateCharacterFormatWithUpdate = function (selection, property, value, update, styleName) {\n        styleName = isNullOrUndefined(styleName) ? false : styleName;\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isEmpty && !selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        if (selection.isEmpty && styleName) {\n            var offset = startPosition.offset;\n            var preservedStartPosition = startPosition.clone();\n            var preservedEndPosition = endPosition.clone();\n            this.selection.selectCurrentWord();\n            if (offset === this.selection.start.offset || offset === this.selection.end.offset - 1) {\n                this.selection.start = preservedStartPosition;\n                this.selection.end = preservedEndPosition;\n            }\n        }\n        this.applyCharFormatSelectedContent(startPosition.paragraph, selection, startPosition, endPosition, property, value, update);\n    };\n    Editor.prototype.applyCharFormatSelectedContent = function (paragraph, selection, start, end, property, value, update) {\n        //Selection start in cell.\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || start.paragraph.associatedCell !== end.paragraph.associatedCell\n            || selection.isCellSelected(start.paragraph.associatedCell, start, end))) {\n            var cell = void 0;\n            start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(start, true);\n            }\n            cell = start.paragraph.associatedCell;\n            this.applyCharFormatCell(cell, selection, start, end, property, value, update);\n            var table = cell.ownerTable;\n            this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        }\n        else {\n            this.applyCharFormat(paragraph, selection, start, end, property, value, update);\n        }\n    };\n    Editor.prototype.applyCharFormatForSelectedPara = function (paragraph, selection, property, value, update) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var j = 0; j < line.children.length; j++) {\n                var element = line.children[j];\n                this.applyCharFormatValue(element.characterFormat, property, value, update);\n            }\n        }\n        this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n    };\n    Editor.prototype.splittedLastParagraph = function (paragraph) {\n        var splittedWidets = paragraph.getSplitWidgets();\n        return splittedWidets[splittedWidets.length - 1];\n    };\n    Editor.prototype.getNextParagraphForCharacterFormatting = function (block, start, end, property, value, update) {\n        var widgetCollection = block.getSplitWidgets();\n        block = widgetCollection[widgetCollection.length - 1];\n        block = this.documentHelper.selection.getNextRenderedBlock(block);\n        if (!isNullOrUndefined(block)) { //Goto the next block.\n            if (block instanceof ParagraphWidget) {\n                this.applyCharFormat(block, this.documentHelper.selection, start, end, property, value, update);\n            }\n            else {\n                this.applyCharFormatForTable(0, block, this.documentHelper.selection, start, end, property, value, update);\n            }\n        }\n    };\n    Editor.prototype.applyCharFormat = function (paragraph, selection, start, end, property, value, update) {\n        paragraph = paragraph.combineWidget(this.owner.viewer);\n        var startOffset = 0;\n        var length = selection.getParagraphLength(paragraph);\n        var startLineWidget = paragraph.childWidgets.indexOf(start.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(start.currentWidget) : 0;\n        var endOffset = end.offset;\n        var endLineWidget = paragraph.childWidgets.indexOf(end.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(end.currentWidget) : paragraph.childWidgets.length - 1;\n        if (!isNullOrUndefined(selection)) {\n            if (paragraph === start.paragraph) {\n                startOffset = start.offset;\n            }\n        }\n        if (!paragraph.equals(end.paragraph)) {\n            var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n            //Skip consider highlightcolor if paragraph mark alone is selected similar to Microsoft Word behaviour\n            if (!(property === 'highlightColor' && selection.isParagraphLastLine(lastLine)\n                && start.currentWidget === lastLine && start.offset === selection.getLineLength(lastLine))) {\n                this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n            }\n            endOffset = length;\n        }\n        else {\n            var lastLine = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n            if (selection.isParagraphLastLine(lastLine) && end.currentWidget === lastLine\n                && ((endOffset === selection.getLineLength(lastLine) + 1) || (selection.isEmpty && selection.end.isAtParagraphEnd))) {\n                this.applyCharFormatValue(paragraph.characterFormat, property, value, update);\n            }\n        }\n        // let count: number = 0;\n        for (var i = startLineWidget; i <= endLineWidget; i++) {\n            var line = paragraph.childWidgets[i];\n            if (i !== startLineWidget) {\n                startOffset = selection.getStartLineOffset(line);\n            }\n            if (line === end.currentWidget) {\n                endOffset = end.offset;\n            }\n            else {\n                endOffset = selection.getLineLength(line);\n            }\n            var count = 0;\n            var isStarted = true;\n            var endElement = undefined;\n            var indexOf = -1;\n            var isIncrease = true;\n            for (var j = 0; j < line.children.length; isIncrease ? j++ : j--) {\n                var inlineObj = line.children[j];\n                isStarted = false;\n                if (inlineObj instanceof ListTextElementBox) {\n                    continue;\n                }\n                if (endElement === inlineObj) {\n                    endElement = undefined;\n                    j = indexOf;\n                    indexOf = -1;\n                    isIncrease = true;\n                }\n                if (startOffset >= count + inlineObj.length) {\n                    count += inlineObj.length;\n                    continue;\n                }\n                var startIndex = 0;\n                if (startOffset > count) {\n                    startIndex = startOffset - count;\n                }\n                var endIndex = endOffset - count;\n                var inlineLength = inlineObj.length;\n                if (endIndex > inlineLength) {\n                    endIndex = inlineLength;\n                }\n                var index = this.applyCharFormatInline(inlineObj, selection, startIndex, endIndex, property, value, update);\n                j += index;\n                if (endOffset <= count + inlineLength) {\n                    break;\n                }\n                count += inlineLength;\n            }\n        }\n        var endParagraph = end.paragraph;\n        this.documentHelper.layout.reLayoutParagraph(paragraph, startLineWidget, 0);\n        if (paragraph.equals(endParagraph)) {\n            return;\n        }\n        this.getNextParagraphForCharacterFormatting(paragraph, start, end, property, value, update);\n    };\n    /**\n     * Toggles the bold property of selected contents.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.toggleBold = function () {\n        if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n            return;\n        }\n        var value = this.getCurrentSelectionValue('bold');\n        this.selection.characterFormat.bold = value;\n    };\n    /**\n     * Toggles the bold property of selected contents.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.toggleItalic = function () {\n        if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n            return;\n        }\n        var value = this.getCurrentSelectionValue('italic');\n        this.selection.characterFormat.italic = value;\n    };\n    /**\n     * Change the selected text to uppercase.\n     * @private\n     */\n    Editor.prototype.changeCase = function (property) {\n        if (this.selection.isEmpty || ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode())) {\n            return;\n        }\n        this.selection.characterFormat.allCaps = (property === \"Uppercase\") ? true : false;\n        this.initHistory(property);\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var selection = this.selection;\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        this.changeSelectedTextCase(selection, startPosition, endPosition, property);\n        this.reLayout(selection);\n    };\n    /**\n     * Change the selected text case.\n     * @private\n     */\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeSelectedTextCase = function (selection, startPosition, endPosition, property, removedTextNodes) {\n        var blockInfo = this.selection.getParagraphInfo(startPosition);\n        selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(startPosition, true);\n            }\n        }\n        var isRevert = this.editorHistory.isUndoing;\n        if (isRevert && !isNullOrUndefined(removedTextNodes) && removedTextNodes.length > 0) {\n            this.removedTextNodes = removedTextNodes;\n        }\n        var endPos = endPosition.selection.endOffset;\n        this.changeTextCase(startPosition.paragraph, selection, startPosition, endPosition, property, isRevert);\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            if (endPosition.selection.endOffset !== endPos) {\n                endPosition = selection.getTextPosBasedOnLogicalIndex(endPos);\n            }\n            if (this.checkEndPosition(selection)) {\n                this.updateHistoryPosition(endPosition, false);\n            }\n            selection.selectPosition(startPosition, endPosition);\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeTextCase = function (para, selection, startPosition, endPosition, property, isRevert) {\n        if (startPosition.paragraph.isInsideTable && (!endPosition.paragraph.isInsideTable\n            || startPosition.paragraph.associatedCell !== endPosition.paragraph.associatedCell\n            || selection.isCellSelected(startPosition.paragraph.associatedCell, startPosition, endPosition))) {\n            var tableCell = void 0;\n            startPosition.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(startPosition, true);\n            }\n            tableCell = startPosition.paragraph.associatedCell;\n            this.changeCaseParaFormatInCell(tableCell, startPosition, endPosition, property, isRevert);\n            var table = tableCell.ownerTable;\n            this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        }\n        else {\n            this.changeCaseParagraph(para, selection, startPosition, endPosition, property, isRevert);\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParagraph = function (para, selection, startPos, endPos, property, isRevert) {\n        para = para.combineWidget(this.owner.viewer);\n        var startOffsetVal = 0;\n        var len = selection.getParagraphLength(para);\n        var startLine = para.childWidgets.indexOf(startPos.currentWidget) !== -1 ?\n            para.childWidgets.indexOf(startPos.currentWidget) : 0;\n        var endOffsetVal = endPos.offset;\n        var endLine = para.childWidgets.indexOf(endPos.currentWidget) !== -1 ?\n            para.childWidgets.indexOf(endPos.currentWidget) : para.childWidgets.length - 1;\n        if (!isNullOrUndefined(selection)) {\n            if (para === startPos.paragraph) {\n                startOffsetVal = startPos.offset;\n            }\n        }\n        if (!para.equals(endPos.paragraph)) {\n            endOffsetVal = len;\n        }\n        // let count: number = 0;\n        for (var i = startLine; i <= endLine; i++) {\n            this.checkLastLetterSpaceDot = '';\n            this.checkLastLetterSpace = '';\n            var line = para.childWidgets[i];\n            if (i !== startLine) {\n                startOffsetVal = selection.getStartLineOffset(line);\n            }\n            if (line === endPos.currentWidget) {\n                endOffsetVal = endPos.offset;\n            }\n            else {\n                endOffsetVal = selection.getLineLength(line);\n            }\n            var textCount = 0;\n            var isIterationStarted = true;\n            var endElementBox = undefined;\n            var childIndex = -1;\n            var isIncreaseIteration = true;\n            /* eslint-disable-next-line max-len */\n            for (var j = 0; j < line.children.length; isIncreaseIteration ? j++ : j--) {\n                var child = line.children[j];\n                var isPreviousTextElementBox = false;\n                if (j === 0 || j > 0 && line.children[j - 1] instanceof TextElementBox) {\n                    isPreviousTextElementBox = true;\n                    if (j > 0) {\n                        var textElement = line.children[j - 1];\n                        this.checkLastLetterSpace = textElement.text.substr(-1);\n                        this.checkLastLetterSpaceDot = textElement.text.substr(-2);\n                    }\n                }\n                isIterationStarted = false;\n                if (child instanceof ListTextElementBox) {\n                    continue;\n                }\n                if (endElementBox === child) {\n                    endElementBox = undefined;\n                    j = childIndex;\n                    childIndex = -1;\n                    isIncreaseIteration = true;\n                }\n                if (startOffsetVal >= textCount + child.length) {\n                    textCount += child.length;\n                    continue;\n                }\n                var startIndex = 0;\n                if (startOffsetVal > textCount) {\n                    startIndex = startOffsetVal - textCount;\n                }\n                var endIndex = endOffsetVal - textCount;\n                var inlineLength = child.length;\n                if (endIndex > inlineLength) {\n                    endIndex = inlineLength;\n                }\n                var index = this.changeCaseInline(child, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n                j += index;\n                if (endOffsetVal <= textCount + inlineLength) {\n                    break;\n                }\n                textCount += inlineLength;\n            }\n        }\n        var endPara = endPos.paragraph;\n        this.documentHelper.layout.reLayoutParagraph(para, startLine, 0);\n        if (para.equals(endPara)) {\n            return;\n        }\n        this.changeCaseNextBlock(para, startPos, endPos, property, isRevert);\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseInline = function (inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox) {\n        if (inline instanceof TextElementBox) {\n            if (startIndex === 0 && endIndex === inline.length) {\n                this.changeCaseInlineInternal(inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n            }\n            else {\n                return this.changeCaseInlineInternal(inline, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox);\n            }\n        }\n        return 0;\n    };\n    Editor.prototype.addRemovedTextNodes = function (inline, newText) {\n        if (inline instanceof TextElementBox) {\n            if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                var span = this.editorHistory.currentBaseHistoryInfo.removedNodes[0];\n                if (isNullOrUndefined(span)) {\n                    span = new TextElementBox();\n                    span.text = '';\n                    this.editorHistory.currentBaseHistoryInfo.removedNodes.push(span);\n                }\n                span.text += newText;\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseInlineInternal = function (inlineObj, selection, startIndex, endIndex, property, isRevert, isPreviousTextElementBox) {\n        var x = 0;\n        var makeFirstLetterCapital = false;\n        var index = inlineObj.line.children.indexOf(inlineObj);\n        var paragraph = inlineObj.paragraph;\n        var lineIndex = paragraph.childWidgets.indexOf(inlineObj.line);\n        var textElement;\n        if (startIndex > 0) {\n            var textToChange = inlineObj.text.substr(startIndex, endIndex - startIndex);\n            this.addRemovedTextNodes(inlineObj, textToChange);\n            textElement = new TextElementBox();\n            textElement.characterFormat.copyFormat(inlineObj.characterFormat);\n            textElement.line = inlineObj.line;\n            //Change the text case\n            if (property === 'CapitalizeEachWord') {\n                var firstLetter = inlineObj.text.substr(startIndex - 1, 1);\n                makeFirstLetterCapital = firstLetter === ' ';\n            }\n            if (property === 'SentenceCase') {\n                var firstLetter = inlineObj.text.substr(startIndex - 2, 2);\n                makeFirstLetterCapital = firstLetter === '. ';\n            }\n            textElement.text = this.getChangeCaseText(textToChange, property, isRevert, makeFirstLetterCapital);\n            textElement.isRightToLeft = inlineObj.isRightToLeft;\n            index++;\n            inlineObj.line.children.splice(index, 0, textElement);\n            x++;\n        }\n        if (endIndex < inlineObj.length) {\n            textElement = new TextElementBox();\n            textElement.characterFormat.copyFormat(inlineObj.characterFormat);\n            textElement.text = inlineObj.text.substring(endIndex);\n            textElement.line = inlineObj.line;\n            textElement.isRightToLeft = inlineObj.isRightToLeft;\n            index++;\n            inlineObj.line.children.splice(index, 0, textElement);\n            x++;\n        }\n        var textElementBox = inlineObj;\n        if (startIndex === 0) {\n            var newText = textElementBox.text.substr(0, endIndex);\n            this.addRemovedTextNodes(inlineObj, newText);\n            //Change the text case\n            if (property === 'SentenceCase') {\n                if (this.checkLastLetterSpaceDot === '. ') {\n                    makeFirstLetterCapital = true;\n                }\n                else if (lineIndex === 0 && this.checkLastLetterSpaceDot === '') {\n                    if (isPreviousTextElementBox) {\n                        var line = paragraph.childWidgets[0];\n                        var element = line.children[0];\n                        makeFirstLetterCapital = element === textElementBox;\n                    }\n                    else {\n                        makeFirstLetterCapital = true;\n                    }\n                }\n                this.checkLastLetterSpaceDot = textElementBox.text.substr(-2);\n            }\n            else if (property == 'CapitalizeEachWord') {\n                if (isPreviousTextElementBox) {\n                    makeFirstLetterCapital = selection.getIndexInInline(inlineObj) === 0 || this.checkLastLetterSpace === ' ';\n                }\n                else {\n                    makeFirstLetterCapital = true;\n                }\n                this.checkLastLetterSpace = textElementBox.text.charAt(textElementBox.length - 1);\n            }\n            textElementBox.text = this.getChangeCaseText(newText, property, isRevert, makeFirstLetterCapital);\n        }\n        else {\n            var preText = textElementBox.text.substr(0, startIndex);\n            textElementBox.text = preText;\n        }\n        return x;\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseNextBlock = function (block, start, end, property, isRevert) {\n        block = this.getNextBlockForChangeCase(block, start, end, property, isRevert);\n        if (!isNullOrUndefined(block)) { //Goto the next block.\n            if (block instanceof ParagraphWidget) {\n                this.changeCaseParagraph(block, this.documentHelper.selection, start, end, property, isRevert);\n            }\n            else {\n                this.changeCaseForTable(0, block, this.documentHelper.selection, start, end, property, isRevert);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.getNextBlockForChangeCase = function (block, start, end, property, isRevert) {\n        var widgetCollection = block.getSplitWidgets();\n        block = widgetCollection[widgetCollection.length - 1];\n        block = this.documentHelper.selection.getNextRenderedBlock(block);\n        return block;\n    };\n    Editor.prototype.getChangeCaseText = function (input, property, isRevert, makeFirstLetterCapital) {\n        if (isRevert) {\n            if (!isNullOrUndefined(this.removedTextNodes) && this.removedTextNodes.length > 0) {\n                var textElement = this.removedTextNodes[0];\n                var oldText = textElement.text.substr(0, input.length);\n                textElement.text = textElement.text.substr(oldText.length, textElement.length - oldText.length);\n                input = oldText;\n                if (textElement.text === '') {\n                    this.removedTextNodes.splice(0, 1);\n                }\n            }\n        }\n        else {\n            switch (property) {\n                case 'SentenceCase':\n                    input = this.sentencecase(input, makeFirstLetterCapital);\n                    break;\n                case 'Uppercase':\n                    input = input.toUpperCase();\n                    break;\n                case 'Lowercase':\n                    input = input.toLowerCase();\n                    break;\n                case 'CapitalizeEachWord':\n                    input = this.capitalizeFirst(input, makeFirstLetterCapital);\n                    break;\n                case 'ToggleCase':\n                    input = this.togglecase(input);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return input;\n    };\n    //Change text into capitalize each word\n    Editor.prototype.capitalizeFirst = function (inputString, makeFirstLetterCapital) {\n        var words = inputString.split(/[^\\w]+/g);\n        var capitalizedWords = words.map(function (word, index) {\n            if (index === 0) {\n                return makeFirstLetterCapital ? word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : word.toLowerCase();\n            }\n            return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n        });\n        var specialChars = inputString.split(/\\w+/).filter(Boolean);\n        var resultArray = [];\n        for (var i = 0; i < Math.max(capitalizedWords.length, specialChars.length); i++) {\n            if (capitalizedWords[i]) {\n                resultArray.push(capitalizedWords[i]);\n            }\n            if (specialChars[i]) {\n                resultArray.push(specialChars[i]);\n            }\n        }\n        var resultString = resultArray.join('');\n        return resultString;\n    };\n    //change text to sentence case\n    Editor.prototype.sentencecase = function (value, makeFirstLetterCapital) {\n        var sentences = value.split('. ');\n        var capitalizedSentences = sentences.map(function (sentence, index) {\n            if (index === 0) {\n                return makeFirstLetterCapital ? sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase() : sentence.toLowerCase();\n            }\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n        });\n        var resultString = capitalizedSentences.join('. ');\n        return resultString;\n    };\n    //Change text to toggle case\n    Editor.prototype.togglecase = function (value) {\n        var text = '';\n        var toggle = value.split('').map(function (char) {\n            if (char === char.toLowerCase()) {\n                return char.toUpperCase();\n            }\n            else {\n                return char.toLowerCase();\n            }\n        });\n        text = toggle.join('');\n        return text;\n    };\n    // Table\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseForTable = function (indexToStart, tableWidget, selection, startPos, endPos, property, isRevert) {\n        tableWidget = tableWidget.combineWidget(this.owner.viewer);\n        for (var i = indexToStart; i < tableWidget.childWidgets.length; i++) {\n            var row = tableWidget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.changeCaseForSelectedCell(row.childWidgets[j], selection, property, isRevert);\n            }\n            if (endPos.paragraph.isInsideTable && selection.containsRow(row, endPos.paragraph.associatedCell)) {\n                this.documentHelper.layout.layoutBodyWidgetCollection(tableWidget.index, tableWidget.containerWidget, tableWidget, false);\n                return;\n            }\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(tableWidget.index, tableWidget.containerWidget, tableWidget, false);\n        this.changeCaseNextBlock(tableWidget, startPos, endPos, property, isRevert);\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseForSelectedCell = function (cell, selection, property, isRevert) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            if (block instanceof ParagraphWidget) {\n                this.changeCaseForSelectedPara(block, selection, property, isRevert);\n            }\n            else {\n                this.changeCaseForSelTable(block, selection, property, isRevert);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseForSelectedPara = function (paragraph, selection, property, isRevert) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            var firstLetter = '';\n            for (var j = 0; j < line.children.length; j++) {\n                var element = line.children[j];\n                var makeFirstLetterCapital = false;\n                if (!isNullOrUndefined(element) && element instanceof TextElementBox) {\n                    this.addRemovedTextNodes(element, element.text);\n                    if (property === 'CapitalizeEachWord') {\n                        makeFirstLetterCapital = j === 0 || firstLetter === ' ';\n                        firstLetter = element.text.substr(element.length - 1, 1);\n                    }\n                    else if (property === 'SentenceCase') {\n                        makeFirstLetterCapital = (element.text.substr(element.length - 2, 2) === '. ') || j === 0;\n                    }\n                    element.text = this.getChangeCaseText(element.text, property, isRevert, makeFirstLetterCapital);\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseForSelTable = function (tableWidget, selection, property, isRevert) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var row = tableWidget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.changeCaseForSelectedCell(row.childWidgets[j], selection, property, isRevert);\n            }\n        }\n    };\n    // Cell\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParaFormatInCell = function (tableCell, startPos, endPos, property, isRevert) {\n        var selection = this.documentHelper.selection;\n        if (endPos.paragraph.isInsideTable) {\n            var cellContainer = selection.getContainerCellOf(tableCell, endPos.paragraph.associatedCell);\n            if (cellContainer.ownerTable.contains(endPos.paragraph.associatedCell)) {\n                var startCell = selection.getSelectedCell(tableCell, cellContainer);\n                var endCell = selection.getSelectedCell(endPos.paragraph.associatedCell, cellContainer);\n                if (selection.containsCell(cellContainer, endPos.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (selection.isCellSelected(cellContainer, startPos, endPos)) {\n                        this.changeCaseParaForCellInternal(cellContainer, selection, property, isRevert);\n                    }\n                    else {\n                        if (startCell === cellContainer) {\n                            this.changeCaseParagraph(startPos.paragraph, selection, startPos, endPos, property, isRevert);\n                        }\n                        else {\n                            this.changeCaseParaForRow(startCell.ownerRow, selection, startPos, endPos, property, isRevert);\n                        }\n                    }\n                }\n                else {\n                    //Change case of other selected cells in the current table.\n                    this.changeCaseParaForTableCell(cellContainer.ownerTable, cellContainer, endCell, property, isRevert);\n                }\n            }\n            else {\n                this.changeCaseParaForRow(cellContainer.ownerRow, selection, startPos, endPos, property, isRevert);\n            }\n        }\n        else {\n            var wCell = selection.getContainerCell(tableCell);\n            this.changeCaseParaForRow(wCell.ownerRow, selection, startPos, endPos, property, isRevert);\n        }\n    };\n    // Table\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParaForTableCell = function (tableWidget, startCell, endCell, property, isRevert) {\n        var selection = this.documentHelper.selection;\n        var cellStartValue = selection.getCellLeft(startCell.ownerRow, startCell);\n        var cellEndValue = cellStartValue + startCell.cellFormat.cellWidth;\n        var cellEndLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n        var cellEndRight = cellEndLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(cellStartValue, cellEndValue, cellEndLeft, cellEndRight);\n        cellStartValue = cellInfo.start;\n        cellEndValue = cellInfo.end;\n        var count = tableWidget.childWidgets.indexOf(endCell.ownerRow);\n        for (var m = tableWidget.childWidgets.indexOf(startCell.ownerRow); m <= count; m++) {\n            var row = tableWidget.childWidgets[m];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var left = selection.getCellLeft(row, row.childWidgets[j]);\n                if (Math.round(cellStartValue) <= Math.round(left) && Math.round(left) < Math.round(cellEndValue)) {\n                    this.changeCaseParaForCellInternal(row.childWidgets[j], selection, property, isRevert);\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParaForCellInternal = function (tableCell, selection, property, isRevert) {\n        for (var i = 0; i < tableCell.childWidgets.length; i++) {\n            var childBlock = tableCell.childWidgets[i];\n            if (childBlock instanceof ParagraphWidget) {\n                this.changeCaseForSelectedPara(childBlock, selection, property, isRevert);\n            }\n            else {\n                this.changeCaseParaFormatTableInternal(childBlock, selection, property, isRevert);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParaFormatTableInternal = function (table, selection, property, isRevert) {\n        for (var x = 0; x < table.childWidgets.length; x++) {\n            var row = table.childWidgets[x];\n            for (var y = 0; y < row.childWidgets.length; y++) {\n                this.changeCaseParaForCellInternal(row.childWidgets[y], selection, property, isRevert);\n            }\n        }\n    };\n    // Row\n    /* eslint-disable-next-line max-len */\n    Editor.prototype.changeCaseParaForRow = function (wRow, selection, start, end, property, isRevert) {\n        for (var i = wRow.rowIndex; i < wRow.ownerTable.childWidgets.length; i++) {\n            var row = wRow.ownerTable.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.changeCaseParaForCellInternal(row.childWidgets[j], selection, property, isRevert);\n            }\n            if (end.paragraph.isInsideTable && this.documentHelper.selection.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        this.changeCaseNextBlock(wRow.ownerTable, start, end, property, isRevert);\n    };\n    /**\n     * Toggles the all Caps formatting for the selected content.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.toggleAllCaps = function () {\n        if (this.documentHelper.owner.isReadOnlyMode && !this.selection.isInlineFormFillMode()) {\n            return;\n        }\n        var value = this.getCurrentSelectionValue('allCaps');\n        this.selection.characterFormat.allCaps = value;\n    };\n    Editor.prototype.toggleChangeCase = function () {\n        var casings = ['Uppercase', 'Lowercase', 'CapitalizeEachWord'];\n        this.casingIndex++;\n        if (this.casingIndex >= casings.length) {\n            this.casingIndex = 0;\n        }\n        return casings[this.casingIndex];\n    };\n    Editor.prototype.getCurrentSelectionValue = function (property) {\n        var value = false;\n        if ((property === 'bold' || property === 'italic')) {\n            var characterFormat = this.getSelectedCharacterFormat();\n            if (property === 'bold') {\n                value = !(characterFormat.bold);\n            }\n            if (property === 'italic') {\n                value = !(characterFormat.italic);\n            }\n        }\n        return value;\n    };\n    Editor.prototype.getSelectedCharacterFormat = function () {\n        var index = 0;\n        var start = this.selection.start;\n        if (!this.selection.isForward) {\n            start = this.selection.end;\n        }\n        var lineWidget = start.currentWidget;\n        var inlineObj = lineWidget.getInline(start.offset, index);\n        var inline = inlineObj.element;\n        // inline.ownerBase\n        index = inlineObj.index;\n        var characterFormat = lineWidget.paragraph.characterFormat;\n        if (!isNullOrUndefined(inline)) {\n            if (this.selection.isEmpty && this.selection.contextType === 'List') {\n                var listLevel = this.selection.getListLevel(this.selection.start.paragraph);\n                if (listLevel.characterFormat.uniqueCharacterFormat) {\n                    characterFormat = listLevel.characterFormat;\n                }\n            }\n            else if (!this.selection.isEmpty && index === inline.length) {\n                characterFormat = isNullOrUndefined(inline.nextNode) ? lineWidget.paragraph.characterFormat\n                    : inline.nextNode.characterFormat;\n            }\n            else {\n                characterFormat = inline.characterFormat;\n            }\n        }\n        return characterFormat;\n    };\n    /**\n     * Toggles the underline property of selected contents.\n     *\n     * @param underline Specify the underline to be toggled (default: Single).\n     * @returns {void}\n     */\n    Editor.prototype.toggleUnderline = function (underline) {\n        if ((this.owner.isReadOnlyMode || this.restrictFormatting) && !this.selection.isInlineFormFillMode()) {\n            return;\n        }\n        this.updateProperty(1, underline);\n    };\n    /**\n     * Toggles the strike through property of selected contents.\n     *\n     * @param {Strikethrough} strikethrough Specify the strike through to be toggled (default: SingleStrike).\n     * @returns {void}\n     */\n    Editor.prototype.toggleStrikethrough = function (strikethrough) {\n        if (!this.owner.isReadOnlyMode || this.selection.isInlineFormFillMode()) {\n            var value = void 0;\n            if (isNullOrUndefined(strikethrough)) {\n                value = this.selection.characterFormat.strikethrough === 'SingleStrike' ? 'None' : 'SingleStrike';\n            }\n            else {\n                value = strikethrough;\n            }\n            this.selection.characterFormat.strikethrough = value;\n        }\n    };\n    Editor.prototype.updateFontSize = function (format, value) {\n        if (typeof (value) === 'number' && !(value < 0 && format.fontSize === 1)) {\n            return format.fontSize + value;\n        }\n        var fontsizeCollection = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72];\n        if (typeof (value) === 'string' && value === 'increment') {\n            if (format.fontSize < 8) {\n                return format.fontSize + 1;\n            }\n            else if (format.fontSize >= 72 && format.fontSize < 80) {\n                return 80;\n            }\n            else if (format.fontSize >= 80) {\n                return format.fontSize + 10;\n            }\n            else {\n                for (var i = 0; i < fontsizeCollection.length; i++) {\n                    if (format.fontSize < fontsizeCollection[i]) {\n                        return fontsizeCollection[i];\n                    }\n                }\n            }\n        }\n        else if (typeof (value) === 'string' && value === 'decrement' && format.fontSize > 1) {\n            if (format.fontSize <= 8) {\n                return format.fontSize - 1;\n            }\n            else if (format.fontSize > 72 && format.fontSize <= 80) {\n                return 72;\n            }\n            else if (format.fontSize > 80) {\n                return format.fontSize - 10;\n            }\n            else {\n                for (var i = 0; i < fontsizeCollection.length; i++) {\n                    if (format.fontSize <= fontsizeCollection[i]) {\n                        return fontsizeCollection[i - 1];\n                    }\n                }\n            }\n        }\n        return format.fontSize;\n    };\n    // Inline\n    Editor.prototype.applyCharFormatInline = function (inline, selection, startIndex, endIndex, property, value, update) {\n        if (startIndex === 0 && endIndex === inline.length) {\n            this.applyCharFormatValue(inline.characterFormat, property, value, update);\n            return 0;\n        }\n        else if (inline instanceof TextElementBox) {\n            return this.formatInline(inline, selection, startIndex, endIndex, property, value, update);\n        }\n        return 0;\n    };\n    Editor.prototype.formatInline = function (inline, selection, startIndex, endIndex, property, value, update) {\n        var x = 0;\n        var node = inline;\n        var index = inline.line.children.indexOf(node);\n        var paragraph = inline.paragraph;\n        var textElement;\n        var indexCountForRevision = 0;\n        if (startIndex > 0) {\n            indexCountForRevision += 1;\n            textElement = new TextElementBox();\n            textElement.characterFormat.copyFormat(inline.characterFormat);\n            textElement.line = inline.line;\n            textElement.text = inline.text.substr(startIndex, endIndex - startIndex);\n            textElement.isRightToLeft = inline.isRightToLeft;\n            this.applyCharFormatValue(textElement.characterFormat, property, value, update);\n            index++;\n            node.line.children.splice(index, 0, textElement);\n            x++;\n            this.updateRevisionForFormattedContent(inline, textElement, indexCountForRevision);\n            // this.addToLinkedFields(span);                      \n        }\n        if (endIndex < node.length) {\n            indexCountForRevision += 1;\n            textElement = new TextElementBox();\n            textElement.characterFormat.copyFormat(inline.characterFormat);\n            textElement.text = node.text.substring(endIndex);\n            textElement.line = inline.line;\n            textElement.isRightToLeft = inline.isRightToLeft;\n            index++;\n            node.line.children.splice(index, 0, textElement);\n            x++;\n            this.updateRevisionForFormattedContent(inline, textElement, indexCountForRevision);\n            // this.addToLinkedFields(span);                       \n        }\n        if (startIndex === 0) {\n            inline.text = inline.text.substr(0, endIndex);\n            this.applyCharFormatValue(inline.characterFormat, property, value, update);\n        }\n        else {\n            inline.text = inline.text.substr(0, startIndex);\n        }\n        return x;\n    };\n    Editor.prototype.updateRevisionForFormattedContent = function (inline, tempSpan, indexCount) {\n        for (var i = 0; i < inline.revisions.length; i++) {\n            var currentRevision = inline.revisions[i];\n            var rangeIndex = currentRevision.range.indexOf(inline) + indexCount;\n            tempSpan.revisions.splice(0, 0, currentRevision);\n            currentRevision.range.splice(rangeIndex, 0, tempSpan);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n        }\n    };\n    // Cell\n    Editor.prototype.applyCharFormatCell = function (cell, selection, start, end, property, value, update) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = selection.getContainerCellOf(cell, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = selection.getSelectedCell(cell, containerCell);\n                var endCell = selection.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (selection.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (selection.isCellSelected(containerCell, start, end)) {\n                        value = this.getCharacterFormatValueOfCell(cell, selection, value, property);\n                        this.applyCharFormatForSelectedCell(containerCell, selection, property, value, update);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.applyCharFormat(start.paragraph, selection, start, end, property, value, update);\n                        }\n                        else {\n                            this.applyCharFormatRow(startCell.ownerRow, selection, start, end, property, value, update);\n                        }\n                    }\n                }\n                else { //Format other selected cells in current table.\n                    this.applyCharFormatForTableCell(containerCell.ownerTable, selection, containerCell, endCell, property, value, update);\n                }\n            }\n            else {\n                this.applyCharFormatRow(containerCell.ownerRow, selection, start, end, property, value, update);\n            }\n        }\n        else {\n            var tableCell = selection.getContainerCell(cell);\n            this.applyCharFormatRow(tableCell.ownerRow, selection, start, end, property, value, update);\n        }\n    };\n    Editor.prototype.applyCharFormatForSelectedCell = function (cell, selection, property, value, update) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            if (block instanceof ParagraphWidget) {\n                this.applyCharFormatForSelectedPara(block, selection, property, value, update);\n            }\n            else {\n                this.applyCharFormatForSelTable(block, selection, property, value, update);\n            }\n        }\n    };\n    // Row\n    Editor.prototype.applyCharFormatRow = function (row, selection, start, end, property, value, update) {\n        value = this.getCharacterFormatValueOfCell(row.childWidgets[0], selection, value, property);\n        this.applyCharFormatForTable(row.rowIndex, row.ownerTable, selection, start, end, property, value, update);\n    };\n    // Table\n    Editor.prototype.applyCharFormatForTable = function (index, table, selection, start, end, property, value, update) {\n        table = table.combineWidget(this.owner.viewer);\n        for (var i = index; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n            }\n            if (end.paragraph.isInsideTable && selection.containsRow(row, end.paragraph.associatedCell)) {\n                this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n                return;\n            }\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        this.getNextParagraphForCharacterFormatting(table, start, end, property, value, update);\n    };\n    Editor.prototype.applyCharFormatForSelTable = function (tableWidget, selection, property, value, update) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var row = tableWidget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n            }\n        }\n    };\n    Editor.prototype.applyCharFormatForTableCell = function (table, selection, startCell, endCell, property, value, update) {\n        var startCellLeft = selection.getCellLeft(startCell.ownerRow, startCell);\n        var startCellRight = startCellLeft + startCell.cellFormat.cellWidth;\n        var endCellLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(startCellLeft, startCellRight, endCellLeft, endCellRight);\n        startCellLeft = cellInfo.start;\n        startCellRight = cellInfo.end;\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        var isStarted = false;\n        for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var left = selection.getCellLeft(row, row.childWidgets[j]);\n                if (HelperMethods.round(startCellLeft, 2) <= HelperMethods.round(left, 2) &&\n                    HelperMethods.round(left, 2) < HelperMethods.round(startCellRight, 2)) {\n                    if (!isStarted) {\n                        value = this.getCharacterFormatValueOfCell(row.childWidgets[j], selection, value, property);\n                        isStarted = true;\n                    }\n                    this.applyCharFormatForSelectedCell(row.childWidgets[j], selection, property, value, update);\n                }\n            }\n        }\n    };\n    /**\n     * private\n     * @returns {CellInfo}\n     */\n    Editor.prototype.updateSelectedCellsInTable = function (start, end, endCellLeft, endCellRight) {\n        var selection = this.documentHelper.selection;\n        if (start > endCellLeft) {\n            start = endCellLeft;\n        }\n        if (end < endCellRight) {\n            end = endCellRight;\n        }\n        if (start > selection.upDownSelectionLength) {\n            start = selection.upDownSelectionLength;\n        }\n        if (end < selection.upDownSelectionLength) {\n            end = selection.upDownSelectionLength;\n        }\n        return { start: start, end: end };\n    };\n    Editor.prototype.getCharacterFormatValueOfCell = function (cell, selection, value, property) {\n        if (typeof (value) === 'boolean' || (value === undefined && (property === 'bold' || property === 'italic'))) {\n            var firstParagraph = selection.getFirstParagraph(cell);\n            var format = firstParagraph.characterFormat;\n            if (firstParagraph.childWidgets.length > 0 && firstParagraph.childWidgets[0].children.length > 0) {\n                format = firstParagraph.childWidgets[0].children[0].characterFormat;\n            }\n            value = !format.getPropertyValue(property);\n        }\n        return value;\n    };\n    /**\n     * Apply Character format for selection\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyCharFormatValueInternal = function (selection, format, property, value) {\n        this.applyCharFormatValue(format, property, value, false);\n    };\n    Editor.prototype.copyInlineCharacterFormat = function (sourceFormat, destFormat) {\n        destFormat.uniqueCharacterFormat = sourceFormat.uniqueCharacterFormat;\n        destFormat.baseCharStyle = sourceFormat.baseCharStyle;\n    };\n    Editor.prototype.applyCharFormatValue = function (format, property, value, update) {\n        if (update && property === 'fontSize') {\n            value = this.updateFontSize(format, value);\n        }\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedProperties(format, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (value instanceof WCharacterFormat) {\n            if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                this.copyInlineCharacterFormat(value, format);\n                if (this.owner.enableCollaborativeEditing && format.ownerBase instanceof ElementBox) {\n                    this.editorHistory.currentBaseHistoryInfo.buildCharacterFormatOperation(format.ownerBase, format);\n                }\n            }\n            else {\n                format.copyFormat(value);\n            }\n            return;\n        }\n        if (this.isForHyperlinkFormat && this.owner.enableTrackChanges && format.ownerBase instanceof ElementBox) {\n            var currentElement = format.ownerBase;\n            var prevElement = currentElement.previousNode;\n            if (isNullOrUndefined(prevElement)) {\n                var paraWidget = currentElement.paragraph.previousWidget;\n                if (!isNullOrUndefined(paraWidget) && !paraWidget.isEmpty()) {\n                    var lineWidget = paraWidget.lastChild;\n                    prevElement = lineWidget.children[lineWidget.children.length - 1];\n                }\n            }\n            while (!isNullOrUndefined(prevElement) && !(prevElement instanceof TextElementBox)) {\n                prevElement = prevElement.previousNode;\n            }\n            if (!isNullOrUndefined(prevElement) && prevElement.revisions.length > 0) {\n                var currentRevision = prevElement.revisions[prevElement.revisions.length - 1];\n                if (!this.isRevisionAlreadyIn(currentElement, currentRevision)) {\n                    currentElement.revisions.push(currentRevision);\n                    currentRevision.range.push(currentElement);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                }\n            }\n            else {\n                var currentRevision = currentElement.revisions[currentElement.revisions.length - 1];\n                if (!isNullOrUndefined(currentRevision) && currentRevision.range.length > 0) {\n                    currentElement.revisions.splice(currentElement.revisions.length - 1, 1);\n                    var rangeIndex = currentRevision.range.indexOf(currentElement);\n                    currentRevision.range.splice(rangeIndex, 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                }\n                this.insertRevision(currentElement, 'Insertion');\n            }\n        }\n        if (isNullOrUndefined(value) && isNullOrUndefined(property)) {\n            format.clearFormat();\n            if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.insertedFormat = format[property];\n            }\n            return;\n        }\n        if (property === 'bold') {\n            format.bold = value;\n        }\n        else if (property === 'italic') {\n            format.italic = value;\n        }\n        else if (property === 'fontColor') {\n            format.fontColor = value;\n        }\n        else if (property === 'fontFamily') {\n            format.fontFamily = value;\n            format.fontFamilyAscii = value;\n            format.fontFamilyFarEast = value;\n            format.fontFamilyNonFarEast = value;\n            format.fontFamilyBidi = value;\n        }\n        else if (property === 'fontSize') {\n            format.fontSize = value;\n        }\n        else if (property === 'highlightColor') {\n            format.highlightColor = value;\n        }\n        else if (property === 'baselineAlignment') {\n            format.baselineAlignment = value;\n        }\n        else if (property === 'strikethrough') {\n            format.strikethrough = value;\n        }\n        else if (property === 'underline') {\n            format.underline = value;\n        }\n        else if (property === 'styleName') {\n            format.baseCharStyle = value;\n        }\n        else if (property === 'allCaps') {\n            format.allCaps = value;\n        }\n        if (property === 'fontColor') {\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.insertedFormat = format.fontColor;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.updateStyleObject = function (styleData) {\n        var styles = new WStyles();\n        var keyIndex = this.owner.parser.keywordIndex;\n        this.owner.parser.keywordIndex = 1;\n        var isRemoteAction = this.owner.editor.isRemoteAction;\n        this.owner.editor.isRemoteAction = true;\n        this.owner.parser.parseStyles(styleData, styles);\n        for (var i = 0; i < styles.length; i++) {\n            var style = styles.getItem(i);\n            var styleInCollection = this.owner.documentHelper.styles.findByName(style.name);\n            if (!isNullOrUndefined(styleData[abstractListsProperty[1]])) {\n                this.owner.parser.parseAbstractList(styleData, this.owner.documentHelper.abstractLists);\n                if (!isNullOrUndefined(styleData[listsProperty[1]])) {\n                    this.owner.parser.parseList(styleData, this.owner.documentHelper.lists);\n                }\n            }\n            if (!isNullOrUndefined(styleInCollection)) {\n                if (this.owner.editorHistoryModule && (this.owner.editorHistoryModule.isUndoing || this.owner.editorHistoryModule.isRedoing) && i === 0) {\n                    if (this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'ModifyStyle') {\n                        var listId = styleInCollection instanceof WParagraphStyle ? styleInCollection.paragraphFormat.listFormat.listId : -1;\n                        var styleObject = this.owner.getStyleObject(styleInCollection, listId);\n                        if (!isNullOrUndefined(styleData['isNew'])) {\n                            styleObject['isNew'] = styleData['isNew'];\n                        }\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.modifiedProperties.push(styleObject);\n                    }\n                }\n                if (styleData['isNew'] && this.owner.editorHistoryModule.isUndoing) {\n                    this.owner.documentHelper.styles.remove(styleInCollection);\n                }\n                else {\n                    this.owner.updateStyle(styleInCollection, style);\n                }\n            }\n            else {\n                if (this.owner.editorHistory.isRedoing) {\n                    var listId = style instanceof WParagraphStyle ? style.paragraphFormat.listFormat.listId : -1;\n                    var styleObject = this.documentHelper.owner.getStyleObject(style, listId);\n                    styleObject[\"isNew\"] = true;\n                    this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.modifiedProperties.push(styleObject);\n                }\n                this.owner.documentHelper.styles.push(style);\n            }\n        }\n        this.owner.editor.isRemoteAction = isRemoteAction;\n        if (styles.length > 0) {\n            this.owner.isShiftingEnabled = true;\n            this.owner.editorModule.layoutWholeDocument();\n            this.owner.isShiftingEnabled = false;\n        }\n        this.owner.parser.keywordIndex = keyIndex;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onImageFormat = function (elementBox, width, height, alternateText) {\n        var modifiedFormat = new ImageSizeInfo(elementBox);\n        if (this.editorHistory) {\n            this.editorHistory.initializeHistory('ImageResizing');\n            this.editorHistory.currentBaseHistoryInfo.modifiedProperties.push(modifiedFormat);\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Image;\n            this.editorHistory.currentBaseHistoryInfo.insertedData = { width: HelperMethods.convertPixelToPoint(width), height: HelperMethods.convertPixelToPoint(height), alternativeText: alternateText };\n        }\n        this.setOffsetValue(this.selection);\n        elementBox.width = width;\n        elementBox.height = height;\n        elementBox.alternateText = alternateText;\n        this.documentHelper.layout.reLayoutParagraph(elementBox.line.paragraph, elementBox.line.indexInOwner, 0);\n        this.reLayout(this.selection, false);\n        if (this.documentHelper.owner.imageResizerModule && !this.isRemoteAction) {\n            this.documentHelper.owner.imageResizerModule.positionImageResizer(elementBox);\n        }\n    };\n    /**\n     * Toggles the text alignment of selected paragraphs.\n     *\n     * @param {TextAlignment} textAlignment Specifies the text alignment.\n     * @returns {void}\n     */\n    Editor.prototype.toggleTextAlignment = function (textAlignment) {\n        if ((this.documentHelper.owner.isReadOnlyMode && !this.selection.isInlineFormFillMode()) || !this.documentHelper.owner.isDocumentLoaded) {\n            return;\n        }\n        // Toggle performed based on current selection format similar to MS word behavior.\n        if (!isNullOrUndefined(this.documentHelper.selection.paragraphFormat.textAlignment) && this.documentHelper.selection.paragraphFormat.textAlignment === textAlignment) {\n            if (textAlignment === 'Left') {\n                this.onApplyParagraphFormat('textAlignment', 'Justify', false, true);\n            }\n            else {\n                this.onApplyParagraphFormat('textAlignment', 'Left', false, true);\n            }\n        }\n        else {\n            this.onApplyParagraphFormat('textAlignment', textAlignment, false, true);\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.setPreviousBlockToLayout = function () {\n        var startPosition = this.documentHelper.selection.start;\n        if (!this.documentHelper.selection.isForward) {\n            startPosition = this.documentHelper.selection.end;\n        }\n        var startParagraph = startPosition.paragraph;\n        if (startParagraph.paragraphFormat.keepWithNext) {\n            var bodyWidget = startParagraph.bodyWidget;\n            if (!isNullOrUndefined(bodyWidget) && bodyWidget instanceof BodyWidget && bodyWidget.page) {\n                var previousPage = bodyWidget.page.previousPage;\n                if (previousPage) {\n                    this.previousBlockToLayout = previousPage.bodyWidgets[0].lastChild;\n                }\n            }\n        }\n    };\n    /**\n     * Apply borders for selected paragraph borders\n     * @private\n     */\n    Editor.prototype.applyParagraphBorders = function (property, bordersType, value) {\n        var borders = new WBorder();\n        switch (property) {\n            case 'color':\n                borders.color = value;\n                break;\n            case 'lineWidth':\n                borders.lineWidth = value;\n                break;\n            case 'lineStyle':\n                borders.lineStyle = value;\n                break;\n            case 'shadow':\n                borders.shadow = value;\n                break;\n            case 'space':\n                borders.space = value;\n                break;\n        }\n        this.onApplyParagraphFormat(bordersType, borders, false, false);\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.applyRulerMarkerValues = function (type, initialValue, finalValue) {\n        var differenceValue = HelperMethods.convertPixelToPoint(finalValue - initialValue) / this.owner.zoomFactor;\n        if (type === 'firstLineIndent') {\n            var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.firstLineIndent;\n            this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n        }\n        else if (type === 'hangingIndent') {\n            var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.firstLineIndent;\n            this.onApplyParagraphFormat('firstLineIndent', currentValue - differenceValue, false, false);\n            var leftIndentCurrentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.leftIndent + currentValue;\n            currentValue = currentValue - differenceValue;\n            this.onApplyParagraphFormat('leftIndent', leftIndentCurrentValue - currentValue, false, false, true);\n        }\n        else if (type === 'leftIndent') {\n            var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.leftIndent;\n            this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n        }\n        else if (type === 'rightIndent') {\n            var currentValue = this.owner.selectionModule.start.paragraph.paragraphFormat.rightIndent;\n            this.onApplyParagraphFormat(type, currentValue + differenceValue, false, false);\n        }\n    };\n    /**\n     * Applies paragraph format for the selection ranges.\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @param {boolean} update - Specifies the update\n     * @param {boolean} isSelectionChanged - Specifies the selection change.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyParagraphFormat = function (property, value, update, isSelectionChanged, isSkipPositionCheck) {\n        var allowFormatting = this.documentHelper.isFormFillProtectedMode\n            && this.documentHelper.selection.isInlineFormFillMode() && this.allowFormattingInFormFields(property);\n        if (this.restrictFormatting && !allowFormatting) {\n            return;\n        }\n        this.setPreviousBlockToLayout();\n        var action = property === 'bidi' ? 'ParagraphBidi' : (property[0].toUpperCase() + property.slice(1));\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var selection = this.documentHelper.selection;\n        var currentPara = selection.start.paragraph;\n        var isFirstParaForList = false;\n        if (!selection.isForward) {\n            currentPara = selection.end.paragraph;\n        }\n        if (property == 'leftIndent') {\n            isFirstParaForList = this.isFirstParaForList(selection, currentPara);\n        }\n        // To stop the indentation when the paragraph x position is at the clientArea's x position\n        if (value <= 0 && property == 'leftIndent' && !isSkipPositionCheck) {\n            var x = HelperMethods.convertPointToPixel(value);\n            if ((currentPara.x + x) < this.viewer.clientArea.x && !currentPara.paragraphFormat.bidi) {\n                this.documentHelper.owner.isShiftingEnabled = false;\n                return;\n            }\n        }\n        this.initHistory(action);\n        if ((this.owner.isReadOnlyMode && !allowFormatting) || !this.owner.isDocumentLoaded) {\n            return;\n        }\n        if (property === 'leftIndent') {\n            if (!isNullOrUndefined(selection.paragraphFormat.listId) && selection.paragraphFormat.listId !== -1 && update) {\n                if (isFirstParaForList) {\n                    this.updateListLevelIndent(value, currentPara);\n                }\n                else {\n                    this.updateListLevel(value > 0);\n                }\n                return;\n            }\n        }\n        var isSkipSelection = !((value instanceof WCharacterStyle) && property == 'styleName' && selection.isEmpty);\n        if (isSkipSelection && selection.isEmpty) {\n            this.setOffsetValue(selection);\n            var isBidiList = selection.paragraphFormat.bidi &&\n                (property === 'listFormat' || selection.paragraphFormat.listId !== -1);\n            if (!isBidiList) {\n                this.documentHelper.layout.isBidiReLayout = true;\n            }\n            if (update && property === 'leftIndent') {\n                value = this.getIndentIncrementValue(selection.start.paragraph, value);\n            }\n            var para = selection.start.paragraph;\n            var layout = this.documentHelper.layout;\n            // let footNoteWidgetsInfo: FootNoteWidgetsInfo = layout.getFootNodeWidgetsToShiftToPage(para);\n            para = para.combineWidget(this.owner.viewer);\n            this.applyParaFormatProperty(para, property, value, update);\n            this.layoutItemBlock(para, false);\n            // if (footNoteWidgetsInfo.footNoteWidgets.length > 0) {\n            //     layout.moveFootNotesToPage(footNoteWidgetsInfo.footNoteWidgets, footNoteWidgetsInfo.fromBodyWidget, footNoteWidgetsInfo.toBodyWidget);\n            //     layout.layoutfootNote(footNoteWidgetsInfo.toBodyWidget.page.footnoteWidget);\n            // }\n        }\n        else {\n            //Iterate and update formatting's.      \n            if (action !== 'ParagraphBidi') {\n                this.setOffsetValue(selection);\n            }\n            this.updateSelectionParagraphFormatting(property, value, update);\n        }\n        this.reLayout(selection);\n    };\n    /**\n     * Updates the indent value in the ListLevel\n     * @param {Object} value - Specifies the value\n     * @param {ParagraphWidget} currentPara - Specifies the selected paragraph\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListLevelIndent = function (value, currentPara) {\n        var _a;\n        var list = this.documentHelper.getListById(currentPara.paragraphFormat.listFormat.listId);\n        var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n        var level;\n        var property = undefined;\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            property = this.editorHistory.currentBaseHistoryInfo.action;\n        }\n        this.initHistory('List');\n        if (value < 0) {\n            if ((abstractList.levels[0].paragraphFormat.leftIndent + value) <= 0) {\n                value = 18 - abstractList.levels[0].paragraphFormat.leftIndent;\n            }\n        }\n        if (value == 0) {\n            return;\n        }\n        for (var i = 0; i < abstractList.levels.length; i++) {\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForList(abstractList.levels[i]);\n            }\n            level = abstractList.levels[i];\n            level.paragraphFormat.leftIndent += value;\n        }\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && !isNullOrUndefined(property)) {\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = (_a = {}, _a[property.toString().charAt(0).toLowerCase() + property.toString().slice(1)] = value, _a[\"isFirstParaForList\"] = true, _a);\n        }\n        //To Do, Implement relayouting logic for this listStyle applied paragraphs alone.\n        //And shift remaining elements without layouting again.\n        //It will improve the performance in large size documents.\n        //The same can be reused in style modifications.\n        this.documentHelper.owner.isShiftingEnabled = true;\n        this.layoutWholeDocument();\n        this.documentHelper.owner.isShiftingEnabled = false;\n    };\n    /**\n     * To check the current selection is first paragraph for list\n     * @param {Selection} selection - Specifies the selection\n     * @param {ParagraphWidget} currentPara - Specifies the current paragraph\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.isFirstParaForList = function (selection, currentPara) {\n        var isFirstParaForList = false;\n        if (!isNullOrUndefined(selection.paragraphFormat.listId) && selection.paragraphFormat.listId !== -1 && currentPara.paragraphFormat.listFormat.listLevelNumber === 0) {\n            //Getting the previous paragraph with same listId\n            var previousParagraph = this.updateWholeListItems(currentPara, true, selection.paragraphFormat.listId);\n            if (isNullOrUndefined(previousParagraph)) {\n                isFirstParaForList = true;\n            }\n        }\n        return isFirstParaForList;\n    };\n    /**\n     * Update the list level\n     *\n     * @param {boolean} increaseLevel - Specifies the increase level\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListLevel = function (increaseLevel) {\n        // Increment or Decrement list level for Multilevel lists.\n        var documentHelper = this.documentHelper;\n        var listFormat = this.documentHelper.selection.start.paragraph.paragraphFormat.listFormat;\n        var paragraphFormat = this.documentHelper.selection.start.paragraph.paragraphFormat;\n        var list = documentHelper.getListById(paragraphFormat.listFormat.listId);\n        var listLevel = documentHelper.layout.getListLevel(list, paragraphFormat.listFormat.listLevelNumber);\n        var levelNumber;\n        if (increaseLevel) {\n            levelNumber = paragraphFormat.listFormat.listLevelNumber + 1;\n        }\n        else {\n            levelNumber = paragraphFormat.listFormat.listLevelNumber - 1;\n        }\n        var nextListLevel = documentHelper.layout.getListLevel(list, levelNumber);\n        if (!isNullOrUndefined(nextListLevel)) {\n            this.onApplyListInternal(list, levelNumber);\n            documentHelper.selection.start.updatePhysicalPosition(true);\n            documentHelper.selection.end.updatePhysicalPosition(true);\n            documentHelper.selection.updateCaretPosition();\n        }\n    };\n    /**\n     * Applies list\n     *\n     * @param {WList} list - Specified the list\n     * @param {number} listLevelNumber - Specified the list level number\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyListInternal = function (list, listLevelNumber) {\n        //let selection: Selection = this.documentHelper.selection;\n        var listFormat = new WListFormat();\n        if (!isNullOrUndefined(list) && listLevelNumber >= 0 && listLevelNumber < 9) {\n            listFormat.listId = list.listId;\n            listFormat.listLevelNumber = listLevelNumber;\n        }\n        this.onApplyParagraphFormat('listFormat', listFormat, false, false);\n    };\n    /**\n     * Apply paragraph format to selection range\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @param {boolean} update - Specifies the update\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateSelectionParagraphFormatting = function (property, value, update) {\n        var selection = this.documentHelper.selection;\n        if (property === 'leftIndent' && update) {\n            if (!isNullOrUndefined(selection.start) && selection.start.isExistBefore(selection.end)) {\n                value = this.getIndentIncrementValue(selection.start.paragraph, value);\n            }\n            else {\n                value = this.getIndentIncrementValue(selection.end.paragraph, value);\n            }\n        }\n        this.updateParagraphFormatInternal(property, value, update);\n    };\n    Editor.prototype.getIndentIncrementValue = function (currentParagraph, incrementFactor) {\n        var currentParagraphIndent = currentParagraph.paragraphFormat.leftIndent;\n        if (currentParagraphIndent < 0) {\n            // In MS Word, if the current paragraph left indent is lesser that or equal to 0\n            // then performing decrement indent will set left indent to 0. \n            if (incrementFactor < 0 || currentParagraphIndent + incrementFactor >= 0) {\n                return -currentParagraphIndent;\n            }\n            else {\n                var incrementValue = -this.getIndentIncrementValueInternal(-currentParagraphIndent, -incrementFactor);\n                return incrementValue % incrementFactor === 0 ? incrementValue : incrementValue + incrementFactor;\n            }\n        }\n        else {\n            return this.getIndentIncrementValueInternal(currentParagraphIndent, incrementFactor);\n        }\n    };\n    Editor.prototype.getIndentIncrementValueInternal = function (position, incrementFactor) {\n        var tabValue = Math.abs(incrementFactor);\n        if (position === 0 || tabValue === 0) {\n            return incrementFactor > 0 ? tabValue : 0;\n        }\n        else {\n            var diff = ((Math.round(position) * 100) % (Math.round(tabValue) * 100)) / 100;\n            var cnt = (Math.round(position) - diff) / Math.round(tabValue);\n            var fPosition = cnt * tabValue;\n            if (incrementFactor > 0) {\n                fPosition += tabValue;\n            }\n            return (fPosition - position) === 0 ? incrementFactor : fPosition - position;\n        }\n    };\n    Editor.prototype.updateParagraphFormatInternal = function (property, value, update) {\n        if (isNullOrUndefined(property)) {\n            property = 'ParagraphFormat';\n        }\n        switch (property) {\n            case 'afterSpacing':\n                this.updateParagraphFormat('afterSpacing', value, false);\n                break;\n            case 'beforeSpacing':\n                this.updateParagraphFormat('beforeSpacing', value, false);\n                break;\n            case 'spaceAfterAuto':\n                this.updateParagraphFormat('spaceAfterAuto', value, false);\n                break;\n            case 'spaceBeforeAuto':\n                this.updateParagraphFormat('spaceBeforeAuto', value, false);\n                break;\n            case 'rightIndent':\n                this.updateParagraphFormat('rightIndent', value, false);\n                break;\n            case 'leftIndent':\n                this.updateParagraphFormat('leftIndent', value, update);\n                break;\n            case 'firstLineIndent':\n                this.updateParagraphFormat('firstLineIndent', value, false);\n                break;\n            case 'lineSpacing':\n                this.updateParagraphFormat('lineSpacing', value, false);\n                break;\n            case 'lineSpacingType':\n                this.updateParagraphFormat('lineSpacingType', value, false);\n                break;\n            case 'textAlignment':\n                this.updateParagraphFormat('textAlignment', value, false);\n                break;\n            case 'borders':\n            case 'topBorder':\n            case 'bottomBorder':\n            case 'leftBorder':\n            case 'rightBorder':\n            case 'horizontalBorder':\n            case 'verticalBorder':\n                this.updateParagraphFormat(property, value, false);\n                break;\n            case 'listFormat':\n                this.updateParagraphFormat('listFormat', value, false);\n                break;\n            case 'ParagraphFormat':\n                this.updateParagraphFormat(undefined, value, false);\n                break;\n            case 'styleName':\n                this.updateParagraphFormat('styleName', value, false);\n                break;\n            case 'ClearParagraphFormat':\n                // this.initializeHistory('ClearParagraphFormat', selectionRange);\n                this.updateParagraphFormat(undefined, value, false);\n                break;\n            case 'bidi':\n                var isBidiList = this.selection.paragraphFormat.listId !== -1;\n                if (!isBidiList) {\n                    this.documentHelper.layout.isBidiReLayout = true;\n                }\n                this.updateParagraphFormat('bidi', value, false);\n                if (!isBidiList) {\n                    this.documentHelper.layout.isBidiReLayout = false;\n                }\n                break;\n            case 'contextualSpacing':\n                this.updateParagraphFormat('contextualSpacing', value, false);\n                break;\n            case 'tabStop':\n                this.updateParagraphFormat('tabStop', value, false);\n                break;\n        }\n    };\n    /**\n     * Update paragraph format on undo\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @param {boolean} update - Specifies the update\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateParagraphFormat = function (property, value, update) {\n        var selection = this.documentHelper.selection;\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        // this.updateInsertPosition(selection, startPosition);\n        this.applyParaFormatSelectedContent(startPosition, endPosition, property, value, update);\n        // this.startSelectionReLayouting(startPosition.paragraph, selection, startPosition, endPosition);\n    };\n    Editor.prototype.applyParaFormatSelectedContent = function (start, end, property, value, update) {\n        var selection = this.documentHelper.selection;\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || start.paragraph.associatedCell !== end.paragraph.associatedCell\n            || selection.isCellSelected(start.paragraph.associatedCell, start, end))) {\n            var cell = void 0;\n            start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n            if (this.checkInsertPosition(selection)) {\n                this.updateHistoryPosition(start, true);\n            }\n            cell = start.paragraph.associatedCell;\n            this.applyParaFormatInCell(cell, start, end, property, value, update);\n            var table = cell.ownerTable;\n            this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        }\n        else {\n            if (!isNullOrUndefined(value) && !this.selection.isEmpty && property === 'styleName' && this.applyCharacterStyle(start.paragraph, start, end, property, value, update)) {\n                return;\n            }\n            else {\n                this.applyParaFormat(start.paragraph, start, end, property, value, update);\n            }\n        }\n    };\n    /**\n     * Apply Paragraph format\n     *\n     * @param {ParagraphWidget} paragraph - Specifies the selection\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @param {boolean} update - Specifies the update\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyParaFormatProperty = function (paragraph, property, value, update) {\n        var format = paragraph.paragraphFormat;\n        if (update && property === 'leftIndent') {\n            value = format.leftIndent + value;\n        }\n        if (property === 'listFormat' && value instanceof WListFormat) {\n            var listFormat = value;\n            if (!listFormat.hasValue('listLevelNumber')) {\n                if (this.isAutoList) {\n                    listFormat.listLevelNumber = this.listLevelNumber;\n                    // reset the list level number to 0.\n                    this.listLevelNumber = 0;\n                    this.isAutoList = false;\n                }\n                else {\n                    listFormat.listLevelNumber = format.listFormat.listLevelNumber;\n                }\n            }\n        }\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForParagraphFormat(format, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (value instanceof WParagraphFormat) {\n            if (isNullOrUndefined(property)) {\n                if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                    this.copyParagraphFormat(value, format);\n                }\n                else if (this.isRemoteAction) {\n                    this.copyParagraphFormat(value, format);\n                }\n                else {\n                    format.copyFormat(value);\n                }\n            }\n            else if (property === 'listFormat') {\n                format.listFormat = value.listFormat;\n                format.listFormat.ownerBase = format;\n                // this.handleListFormat(format, value as WParagraphFormat);\n            }\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                if (this.owner.enableCollaborativeEditing && this.editorHistory.isUndoing) {\n                    this.editorHistory.currentBaseHistoryInfo.getParagraohFormatOperation(paragraph, format);\n                }\n            }\n        }\n        if (isNullOrUndefined(value)) {\n            format.clearFormat();\n            this.documentHelper.layout.reLayoutParagraph(format.ownerBase, 0, 0);\n            return;\n        }\n        if (property === 'afterSpacing') {\n            format.afterSpacing = value;\n        }\n        else if (property === 'beforeSpacing') {\n            format.beforeSpacing = value;\n        }\n        else if (property === 'leftIndent') {\n            format.leftIndent = value;\n        }\n        else if (property === 'lineSpacingType') {\n            format.lineSpacingType = value;\n        }\n        else if (property === 'lineSpacing') {\n            format.lineSpacing = value;\n        }\n        else if (property === 'rightIndent') {\n            format.rightIndent = value;\n        }\n        else if (property === 'firstLineIndent') {\n            format.firstLineIndent = value;\n        }\n        else if (property === 'textAlignment') {\n            var textAlignment = value;\n            if (format.bidi && !(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                if (textAlignment === 'Left') {\n                    textAlignment = 'Right';\n                }\n                else if (textAlignment === 'Right') {\n                    textAlignment = 'Left';\n                }\n            }\n            format.textAlignment = textAlignment;\n            //this.documentHelper.layout.allowLayout = false;\n        }\n        else if (property === 'outlineLevel') {\n            format.outlineLevel = value;\n        }\n        else if (property === 'topBorder') {\n            this.applyBorder(format.borders.top, value);\n        }\n        else if (property === 'bottomBorder') {\n            this.applyBorder(format.borders.bottom, value);\n        }\n        else if (property === 'leftBorder') {\n            this.applyBorder(format.borders.left, value);\n        }\n        else if (property === 'rightBorder') {\n            this.applyBorder(format.borders.right, value);\n        }\n        else if (property === 'horizontalBorder') {\n            this.applyBorder(format.borders.horizontal, value);\n        }\n        else if (property === 'verticalBorder') {\n            this.applyBorder(format.borders.vertical, value);\n        }\n        else if (property === 'borders') {\n            format.borders.copyFormat(value);\n        }\n        else if (property === 'styleName') {\n            if (typeof (value) === 'string') {\n                value = this.documentHelper.styles.findByName(value);\n            }\n            format.applyStyle(value);\n        }\n        else if (property === 'listFormat') {\n            if (value instanceof WParagraphFormat) {\n                value = value.listFormat;\n            }\n            format.listFormat.copyFormat(value);\n            this.documentHelper.layout.clearListElementBox(format.ownerBase);\n            if (format.listFormat.listId >= 0) {\n                format.clearIndent();\n            }\n            this.layoutItemBlock(format.ownerBase, false);\n            return;\n        }\n        else if (property === 'bidi') {\n            format.bidi = value;\n        }\n        else if (property === 'keepWithNext') {\n            format.keepWithNext = value;\n        }\n        else if (property === 'keepLinesTogether') {\n            format.keepLinesTogether = value;\n        }\n        else if (property === 'widowControl') {\n            format.widowControl = value;\n        }\n        else if (property === 'contextualSpacing') {\n            format.contextualSpacing = value;\n        }\n        else if (property === 'spaceAfterAuto') {\n            format.spaceAfterAuto = value;\n        }\n        else if (property === 'spaceBeforeAuto') {\n            format.spaceBeforeAuto = value;\n        }\n        else if (property === 'tabStop') {\n            var isReplace = this.editorHistory.isUndoing || this.editorHistory.isRedoing;\n            this.updateTabStopCollection(paragraph, value, isReplace);\n        }\n    };\n    Editor.prototype.copyParagraphFormat = function (sourceFormat, destFormat) {\n        destFormat.uniqueParagraphFormat = sourceFormat.uniqueParagraphFormat;\n        destFormat.listFormat = sourceFormat.listFormat;\n        destFormat.listFormat.ownerBase = destFormat;\n        destFormat.baseStyle = sourceFormat.baseStyle;\n        //destFormat.borders = sourceFormat.borders;\n    };\n    /**\n     * Copies list level paragraph format\n     *\n     * @param {WParagraphFormat} oldFormat - Specifies the old format\n     * @param {WParagraphFormat} newFormat - Specifies the new format\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.copyFromListLevelParagraphFormat = function (oldFormat, newFormat) {\n        if (!isNullOrUndefined(newFormat.leftIndent)) {\n            oldFormat.leftIndent = newFormat.leftIndent;\n        }\n        if (!isNullOrUndefined(newFormat.firstLineIndent)) {\n            oldFormat.firstLineIndent = newFormat.firstLineIndent;\n        }\n    };\n    /**\n     * Applies the continue numbering from the previous list.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.applyContinueNumbering = function () {\n        var selection = this.selection;\n        if (this.editorHistory) {\n            this.editorHistory.initializeHistory('ContinueNumbering');\n        }\n        this.applyContinueNumberingInternal(selection);\n    };\n    /**\n     * @private\n     * @param selection\n     * @param paraFormat\n     */\n    Editor.prototype.applyContinueNumberingInternal = function (selection, paraFormat) {\n        var paragraph = selection.start.paragraph;\n        var numberingInfo = this.getContinueNumberingInfo(paragraph);\n        if (isNullOrUndefined(paraFormat)) {\n            paraFormat = this.getParagraphFormat(paragraph, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n        }\n        paraFormat = !isNullOrUndefined(paraFormat) ? paraFormat : paragraph.paragraphFormat;\n        this.changeListId(numberingInfo.currentList, paragraph, paraFormat, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n        this.reLayout(selection, false);\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n    };\n    Editor.prototype.getContinueNumberingInfo = function (paragraph) {\n        var currentList = undefined;\n        var listLevelNumber = 0;\n        var listPattern = 'None';\n        if (!isNullOrUndefined(paragraph.paragraphFormat)\n            && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n            currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n            listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n        }\n        var documentHelper = this.documentHelper;\n        if (listLevelNumber !== 0 && !isNullOrUndefined(currentList) &&\n            !isNullOrUndefined(documentHelper.getAbstractListById(currentList.abstractListId))\n            && !isNullOrUndefined(documentHelper.getAbstractListById(currentList.abstractListId).levels[listLevelNumber])) {\n            var listLevel = this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n            if (!isNullOrUndefined(listLevel)) {\n                listPattern = listLevel.listLevelPattern;\n            }\n        }\n        return {\n            currentList: currentList,\n            listLevelNumber: listLevelNumber,\n            listPattern: listPattern\n        };\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.revertContinueNumbering = function (selection, format) {\n        var paragraph = selection.start.paragraph;\n        var numberingInfo = this.getContinueNumberingInfo(paragraph);\n        this.changeListId(numberingInfo.currentList, paragraph, format, numberingInfo.listLevelNumber, numberingInfo.listPattern);\n        this.reLayout(selection, false);\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.editorHistory.updateHistory();\n        }\n    };\n    Editor.prototype.changeListId = function (list, block, format, levelNum, listType) {\n        if (isNullOrUndefined(block)) {\n            return;\n        }\n        if (block instanceof ParagraphWidget) {\n            if (list.listId === block.paragraphFormat.listFormat.listId) {\n                if (this.editorHistory) {\n                    var baseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n                    if (!isNullOrUndefined(baseHistoryInfo)) {\n                        format = baseHistoryInfo.addModifiedPropertiesForContinueNumbering(block.paragraphFormat, format);\n                        baseHistoryInfo.insertedFormat = format;\n                    }\n                }\n                if (levelNum === block.paragraphFormat.listFormat.listLevelNumber) {\n                    block.paragraphFormat.copyFormat(format);\n                }\n                else {\n                    block.paragraphFormat.listFormat.listId = format.listFormat.listId;\n                }\n                this.documentHelper.layout.reLayoutParagraph(block, 0, 0);\n            }\n        }\n        return this.changeListId(list, block.nextRenderedWidget, format, levelNum, listType);\n    };\n    Editor.prototype.getParagraphFormat = function (paragraph, levelNumber, listType) {\n        if (!isNullOrUndefined(paragraph.previousRenderedWidget)) {\n            if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n                if (!isNullOrUndefined(paragraph.previousRenderedWidget.paragraphFormat.listFormat)\n                    && paragraph.previousRenderedWidget.paragraphFormat.listFormat.listId !== -1) {\n                    // let listLevel: WListLevel = this.selection.getListLevel(paragraph.previousRenderedWidget);\n                    if (levelNumber === paragraph.previousRenderedWidget.paragraphFormat.listFormat.listLevelNumber) {\n                        return paragraph.previousRenderedWidget.paragraphFormat;\n                    }\n                    else {\n                        return this.getParagraphFormat(paragraph.previousRenderedWidget, levelNumber, listType);\n                    }\n                }\n                else {\n                    return this.getParagraphFormat(paragraph.previousRenderedWidget, levelNumber, listType);\n                }\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.checkNumberArabic = function (listType, levelPattern) {\n        if ((listType === 'Number' && levelPattern === 'Arabic')\n            || (levelPattern === 'Number' && listType === 'Arabic')) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyRestartNumbering = function (selection) {\n        if (this.editorHistory) {\n            this.editorHistory.initializeHistory('RestartNumbering');\n        }\n        this.restartListAt(selection);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.restartListAt = function (selection) {\n        var currentList = selection.paragraphFormat.getList();\n        var list = currentList.clone();\n        list.listId = this.documentHelper.lists[(this.documentHelper.lists.length - 1)].listId + 1;\n        var nsid = HelperMethods.generateUniqueId(this.documentHelper.lists);\n        this.documentHelper.lists.push(list);\n        var abstractList = currentList.abstractList.clone();\n        abstractList.abstractListId = this.documentHelper.abstractLists[(this.documentHelper.abstractLists.length - 1)].abstractListId + 1;\n        list.abstractListId = abstractList.abstractListId;\n        list.nsid = abstractList.nsid = nsid;\n        list.abstractList = abstractList;\n        this.documentHelper.abstractLists.push(abstractList);\n        this.restartListAtInternal(selection, list.listId, list.nsid);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.restartListAtInternal = function (selection, listId, nsid) {\n        var numberingInfo = this.getContinueNumberingInfo(selection.start.paragraph);\n        this.changeRestartNumbering(numberingInfo.currentList, selection.start.paragraph, listId, nsid);\n        this.reLayout(selection, false);\n        this.documentHelper.updateFocus();\n    };\n    Editor.prototype.changeRestartNumbering = function (list, block, listId, nsid) {\n        if (isNullOrUndefined(block)) {\n            return;\n        }\n        if (block instanceof ParagraphWidget) {\n            if (list.listId === block.paragraphFormat.listFormat.listId) {\n                if (this.editorHistory) {\n                    var baseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n                    if (!isNullOrUndefined(baseHistoryInfo)) {\n                        listId = baseHistoryInfo.addModifiedPropertiesForRestartNumbering(block.paragraphFormat.listFormat, listId);\n                        baseHistoryInfo.insertedFormat = {\n                            listId: listId,\n                            nsid: nsid\n                        };\n                    }\n                }\n                block.paragraphFormat.listFormat.listId = listId;\n                this.documentHelper.layout.reLayoutParagraph(block, 0, 0);\n            }\n        }\n        return this.changeRestartNumbering(list, block.nextRenderedWidget, listId, nsid);\n    };\n    Editor.prototype.applyParaFormat = function (paragraph, start, end, property, value, update) {\n        this.setOffsetValue(this.selection);\n        paragraph = paragraph.combineWidget(this.owner.viewer);\n        //Apply Paragraph Format for spitted paragraph\n        this.applyParaFormatProperty(paragraph, property, value, update);\n        this.layoutItemBlock(paragraph, false);\n        this.getOffsetValue(this.selection);\n        if (paragraph.equals(end.paragraph)) {\n            return;\n        }\n        this.getNextParagraphForFormatting(paragraph, start, end, property, value, update);\n    };\n    Editor.prototype.applyCharacterStyle = function (paragraph, start, end, property, value, update) {\n        var paragraphWidget = paragraph.getSplitWidgets();\n        var selection = end.owner.selectionModule;\n        var lastLine = end.currentWidget;\n        var isParaSelected = start.offset === 0 && (selection.isParagraphLastLine(lastLine) && end.currentWidget === lastLine\n            && end.offset === selection.getLineLength(lastLine) + 1 || end.isAtParagraphEnd);\n        if (!isParaSelected && (end.paragraph === paragraph || paragraphWidget.indexOf(end.paragraph) !== -1)) {\n            if (((value.type === 'Paragraph') && ((value.link) instanceof WCharacterStyle)) || (value.type === 'Character')) {\n                var obj = (value.type === 'Character') ? value : value.link;\n                this.updateSelectionCharacterFormatting(property, obj, update);\n                return true;\n            }\n        }\n        return false;\n    };\n    // Cell\n    Editor.prototype.applyParaFormatInCell = function (cell, start, end, property, value, update) {\n        var selection = this.documentHelper.selection;\n        if (end.paragraph.isInsideTable) {\n            var cellContainer = selection.getContainerCellOf(cell, end.paragraph.associatedCell);\n            if (cellContainer.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = selection.getSelectedCell(cell, cellContainer);\n                var endCell = selection.getSelectedCell(end.paragraph.associatedCell, cellContainer);\n                if (selection.containsCell(cellContainer, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (selection.isCellSelected(cellContainer, start, end)) {\n                        value = this.getParaFormatValueInCell(cellContainer, property, value);\n                        this.applyParaFormatCellInternal(cellContainer, property, value, update);\n                    }\n                    else {\n                        if (startCell === cellContainer) {\n                            this.applyParaFormat(start.paragraph, start, end, property, value, update);\n                        }\n                        else {\n                            this.applyParagraphFormatRow(startCell.ownerRow, start, end, property, value, update);\n                        }\n                    }\n                }\n                else {\n                    //Format other selected cells in current table.\n                    this.applyParaFormatTableCell(cellContainer.ownerTable, cellContainer, endCell, property, value, update);\n                }\n            }\n            else {\n                this.applyParagraphFormatRow(cellContainer.ownerRow, start, end, property, value, update);\n            }\n        }\n        else {\n            var wCell = selection.getContainerCell(cell);\n            this.applyParagraphFormatRow(wCell.ownerRow, start, end, property, value, update);\n        }\n    };\n    Editor.prototype.applyParaFormatCellInternal = function (cell, property, value, update, isNext) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            if (block instanceof ParagraphWidget) {\n                if (property === 'listFormat' && value instanceof WListFormat && isNext && block.paragraphFormat.listFormat.hasValue(\"listLevelNumber\") && value[\"listLevelNumber\"] < block.paragraphFormat.listFormat.listLevelNumber) {\n                    value[\"listLevelNumber\"] = block.paragraphFormat.listFormat.listLevelNumber;\n                }\n                this.applyParaFormatProperty(block, property, value, update);\n            }\n            else {\n                this.applyParagraphFormatTableInternal(block, property, value, update, isNext);\n            }\n        }\n    };\n    Editor.prototype.getParaFormatValueInCell = function (cell, property, value) {\n        if (typeof value === 'boolean') {\n            var firstPara = this.documentHelper.selection.getFirstParagraph(cell);\n            value = !firstPara.paragraphFormat.getPropertyValue(property);\n        }\n        return value;\n    };\n    // Row\n    Editor.prototype.applyParagraphFormatRow = function (wRow, start, end, property, value, update) {\n        value = this.getParaFormatValueInCell(wRow.childWidgets[0], property, value);\n        for (var i = wRow.rowIndex; i < wRow.ownerTable.childWidgets.length; i++) {\n            var row = wRow.ownerTable.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.applyParaFormatCellInternal(row.childWidgets[j], property, value, update);\n            }\n            if (end.paragraph.isInsideTable && this.documentHelper.selection.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        this.getNextParagraphForFormatting(wRow.ownerTable, start, end, property, value, update);\n    };\n    // Table\n    Editor.prototype.applyParaFormatTableCell = function (table, startCell, endCell, property, value, update) {\n        var selection = this.documentHelper.selection;\n        var startValue = selection.getCellLeft(startCell.ownerRow, startCell);\n        var endValue = startValue + startCell.cellFormat.cellWidth;\n        var endCellLeft = selection.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(startValue, endValue, endCellLeft, endCellRight);\n        startValue = cellInfo.start;\n        endValue = cellInfo.end;\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        var isStarted = false;\n        for (var m = table.childWidgets.indexOf(startCell.ownerRow); m <= count; m++) {\n            var row = table.childWidgets[m];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var left = selection.getCellLeft(row, row.childWidgets[j]);\n                if (Math.round(startValue) <= Math.round(left) && Math.round(left) < Math.round(endValue)) {\n                    if (!isStarted) {\n                        value = this.getParaFormatValueInCell(row.childWidgets[j], property, value);\n                        isStarted = true;\n                    }\n                    this.applyParaFormatCellInternal(row.childWidgets[j], property, value, update);\n                }\n            }\n        }\n    };\n    Editor.prototype.applyParaFormatTable = function (table, start, end, property, value, update, isNext) {\n        table = table.combineWidget(this.owner.viewer);\n        var selection = this.documentHelper.selection;\n        for (var m = 0; m < table.childWidgets.length; m++) {\n            var tableRow = table.childWidgets[m];\n            for (var k = 0; k < tableRow.childWidgets.length; k++) {\n                this.applyParaFormatCellInternal(tableRow.childWidgets[k], property, value, update, isNext);\n            }\n            if (end.paragraph.isInsideTable && selection.containsRow(tableRow, end.paragraph.associatedCell)) {\n                this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n                return;\n            }\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        this.getNextParagraphForFormatting(table, start, end, property, value, update);\n    };\n    Editor.prototype.getNextParagraphForFormatting = function (block, start, end, property, value, update) {\n        var widgetCollection = block.getSplitWidgets();\n        block = widgetCollection[widgetCollection.length - 1];\n        block = this.documentHelper.selection.getNextRenderedBlock(block);\n        if (!isNullOrUndefined(block)) { //Goto the next block.\n            if (block instanceof ParagraphWidget) {\n                if (property === 'listFormat' && value instanceof WListFormat && block.paragraphFormat.listFormat.hasValue(\"listLevelNumber\") && value[\"listLevelNumber\"] < block.paragraphFormat.listFormat.listLevelNumber) {\n                    value[\"listLevelNumber\"] = block.paragraphFormat.listFormat.listLevelNumber;\n                }\n                this.applyParaFormat(block, start, end, property, value, update);\n            }\n            else {\n                this.applyParaFormatTable(block, start, end, property, value, update, true);\n            }\n        }\n    };\n    Editor.prototype.applyParagraphFormatTableInternal = function (table, property, value, update, isNext) {\n        for (var x = 0; x < table.childWidgets.length; x++) {\n            var row = table.childWidgets[x];\n            for (var y = 0; y < row.childWidgets.length; y++) {\n                this.applyParaFormatCellInternal(row.childWidgets[y], property, value, update, isNext);\n            }\n        }\n    };\n    /**\n     * Apply column format changes\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyColumnFormat = function (property, value) {\n        if (this.restrictFormatting) {\n            return;\n        }\n        this.initHistory('SectionFormat');\n        var selection = this.documentHelper.selection;\n        selection.owner.isShiftingEnabled = true;\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        var startPageIndex;\n        var endPageIndex;\n        this.documentHelper.clearContent();\n        var startSectionIndex = startPosition.paragraph.bodyWidget.sectionIndex;\n        var endSectionIndex = endPosition.paragraph.bodyWidget.sectionIndex;\n        var isMultipleSection = false;\n        for (var i = 0; i < this.documentHelper.pages.length; i++) {\n            if (this.documentHelper.pages[i].bodyWidgets[0].index === startSectionIndex) {\n                startPageIndex = i;\n            }\n            else {\n                isMultipleSection = true;\n            }\n        }\n        for (var i = startPageIndex; i < this.documentHelper.pages.length; i++) {\n            var bodyWidget = this.documentHelper.pages[i].bodyWidgets[0];\n            endPageIndex = i;\n            if ((bodyWidget.index === startSectionIndex)) {\n                continue;\n            }\n            else if ((bodyWidget.index >= startSectionIndex) && bodyWidget.index <= endSectionIndex) {\n                continue;\n            }\n            else {\n                endPageIndex = i - 1;\n                break;\n            }\n        }\n        if (isMultipleSection && property == \"differentOddAndEvenPages\" && startPosition.paragraph.isInHeaderFooter) {\n            startPageIndex = 0;\n            endPageIndex = this.documentHelper.pages.length - 1;\n        }\n        // let startPageIndex: number = this.documentHelper.pages.indexOf((selection.start.paragraph.containerWidget as BodyWidget).page);\n        // let endPageIndex: number = this.documentHelper.pages.indexOf((selection.end.paragraph.containerWidget as BodyWidget).page);\n        var update = true;\n        var index = 0;\n        for (var i = startPageIndex; i <= endPageIndex; i++) {\n            if (index !== this.documentHelper.pages[i].bodyWidgets[0].index && !update) {\n                update = true;\n            }\n            this.applyPropertyValueForSection(this.documentHelper.pages[i].bodyWidgets[0].sectionFormat, property, value, update);\n            index = this.documentHelper.pages[i].bodyWidgets[0].index;\n            update = false;\n        }\n        this.layoutWholeDocument();\n        this.fireContentChange();\n    };\n    //Paragraph Format apply implementation Ends\n    // Apply Selection Section Format Option Implementation Starts\n    /**\n     * Apply section format selection changes\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplySectionFormat = function (property, value) {\n        if (this.restrictFormatting) {\n            return;\n        }\n        if (!isNullOrUndefined(property)) {\n            var action = (property[0].toUpperCase() + property.slice(1));\n            this.initHistory(action);\n        }\n        else {\n            this.initHistory('SectionFormat');\n        }\n        this.updateSectionFormat(property, value);\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeInlineHeaderFooterWidget = function (sectionIndex, headerFooterType, propertyName, value) {\n        if (sectionIndex != 0) {\n            var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n            var index = this.viewer.getHeaderFooter(headerFooterType);\n            var sectionFormat = this.selection.start.paragraph.containerWidget.sectionFormat.cloneFormat();\n            if (!isNullOrUndefined(value)) {\n                if (!isNullOrUndefined(propertyName)) {\n                    var action = (propertyName[0].toUpperCase() + propertyName.slice(1));\n                    this.initHistory(action);\n                    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n                    }\n                    var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n                    this.selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n                    if (this.checkInsertPosition(this.selection)) {\n                        this.setPositionForHistory(this.selection.editPosition);\n                    }\n                }\n                if (value) {\n                    if (headerFooters && !isNullOrUndefined(headerFooters[index])) {\n                        sectionFormat.removedHeaderFooters.push(headerFooters[index]);\n                        this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, propertyName, value);\n                        delete headerFooters[index];\n                    }\n                }\n                else {\n                    var parentHeaderFooter = this.viewer.getCurrentHeaderFooter(headerFooterType, sectionIndex);\n                    if (!isNullOrUndefined(parentHeaderFooter) && isNullOrUndefined(headerFooters[index])) {\n                        var HeaderFooterWidget_1 = parentHeaderFooter.clone();\n                        headerFooters[index] = HeaderFooterWidget_1;\n                        sectionFormat.removedHeaderFooters.push(HeaderFooterWidget_1);\n                        this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, propertyName, value);\n                    }\n                }\n                this.selection.updateTextPositionForBlockContainer(this.selection.start.paragraph.containerWidget);\n                this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n                this.layoutWholeDocument();\n                this.isSkipOperationsBuild = false;\n                this.fireContentChange();\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateHeaderFooters = function (propertyName, value, sectionIndex, widget) {\n        var headerFooters = this.documentHelper.headersFooters[sectionIndex];\n        var index = this.viewer.getHeaderFooter(widget.headerFooterType);\n        var headerFooter = headerFooters[index];\n        if (this.editorHistory.isUndoing || this.editorHistory.isRedoing) {\n            if (isNullOrUndefined(headerFooter)) {\n                this.documentHelper.headersFooters[sectionIndex][index] = widget;\n            }\n            else if (!isNullOrUndefined(headerFooter)) {\n                delete headerFooters[index];\n            }\n        }\n        this.selection.updateTextPositionForBlockContainer(this.selection.start.paragraph.containerWidget);\n        this.layoutWholeDocument();\n    };\n    /**\n     * Update section format\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateSectionFormat = function (property, value) {\n        if (this.documentHelper.selection.startPage === 1 && property === \"differentFirstPage\") {\n            var paraInfo = void 0;\n            if (this.documentHelper.selection.start.paragraph.containerWidget instanceof TableCellWidget) {\n                paraInfo = this.getFirstChildOfTable(this.documentHelper.selection.start.paragraph.containerWidget);\n            }\n            else {\n                paraInfo = this.documentHelper.selection.start.paragraph.containerWidget.childWidgets[0];\n            }\n            var startIndex = this.selection.getHierarchicalIndex(paraInfo, \"0\");\n            this.documentHelper.selection.select(startIndex, startIndex);\n        }\n        var selection = this.documentHelper.selection;\n        selection.owner.isShiftingEnabled = true;\n        var startPosition = selection.start;\n        var endPosition = selection.end;\n        if (!selection.isForward) {\n            startPosition = selection.end;\n            endPosition = selection.start;\n        }\n        var startPageIndex;\n        var endPageIndex;\n        this.documentHelper.clearContent();\n        var startSectionIndex = startPosition.paragraph.bodyWidget.sectionIndex;\n        var endSectionIndex = endPosition.paragraph.bodyWidget.sectionIndex;\n        var isMultipleSection = false;\n        var isSkip = false;\n        for (var i = 0; i < this.documentHelper.pages.length; i++) {\n            for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n                if (this.documentHelper.pages[i].bodyWidgets[j].index === startSectionIndex) {\n                    startPageIndex = i;\n                    if (selection.isForward) {\n                        isSkip = true;\n                        break;\n                    }\n                }\n                else {\n                    isMultipleSection = true;\n                }\n            }\n            if (isSkip) {\n                break;\n            }\n        }\n        for (var i = startPageIndex; i < this.documentHelper.pages.length; i++) {\n            for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n                var bodyWidget = this.documentHelper.pages[i].bodyWidgets[j];\n                if ((bodyWidget.index === startSectionIndex)) {\n                    endPageIndex = i;\n                    continue;\n                }\n                else if ((bodyWidget.index >= startSectionIndex) && bodyWidget.index <= endSectionIndex) {\n                    endPageIndex = i;\n                    continue;\n                }\n            }\n        }\n        if (isMultipleSection && property == \"differentOddAndEvenPages\" && startPosition.paragraph.isInHeaderFooter) {\n            startPageIndex = 0;\n            endPageIndex = this.documentHelper.pages.length - 1;\n        }\n        // let startPageIndex: number = this.documentHelper.pages.indexOf((selection.start.paragraph.containerWidget as BodyWidget).page);\n        // let endPageIndex: number = this.documentHelper.pages.indexOf((selection.end.paragraph.containerWidget as BodyWidget).page);\n        var update = true;\n        var index = 0;\n        for (var i = startPageIndex; i <= endPageIndex; i++) {\n            for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n                if ((this.documentHelper.pages[i].bodyWidgets[j].index >= startSectionIndex && this.documentHelper.pages[i].bodyWidgets[j].index <= endSectionIndex) ||\n                    (!selection.isForward && this.documentHelper.pages[i].bodyWidgets[j].index <= startSectionIndex && this.documentHelper.pages[i].bodyWidgets[j].index >= endSectionIndex)) {\n                    if (index !== this.documentHelper.pages[i].bodyWidgets[j].index && !update) {\n                        update = true;\n                    }\n                    this.applyPropertyValueForSection(this.documentHelper.pages[i].bodyWidgets[j].sectionFormat, property, value, update);\n                    index = this.documentHelper.pages[i].bodyWidgets[j].index;\n                    update = false;\n                    var body = this.documentHelper.pages[i].bodyWidgets[j];\n                    if (!isNullOrUndefined(body.nextWidget) && (body.sectionFormat.pageHeight !== body.nextWidget.sectionFormat.pageHeight || body.sectionFormat.pageWidth !== body.nextWidget.sectionFormat.pageWidth) && body.nextWidget.sectionFormat.breakCode === 'NoBreak') {\n                        body.nextWidget.sectionFormat.breakCode = 'NewPage';\n                        body = this.documentHelper.layout.getBodyWidget(body.nextWidget, false);\n                        if (!isNullOrUndefined(body.nextWidget)) {\n                            body.nextWidget.sectionFormat.breakCode = 'NewPage';\n                        }\n                    }\n                }\n            }\n        }\n        this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.layoutWholeDocument();\n        this.isSkipOperationsBuild = false;\n        this.fireContentChange();\n    };\n    Editor.prototype.getFirstChildOfTable = function (cellWidget) {\n        var ownerTable = cellWidget.ownerTable;\n        return ownerTable.childWidgets[0].childWidgets[0].childWidgets[0];\n    };\n    //Apply Selection Table Format option implementation starts\n    /**\n     * Apply table format property changes\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyTableFormat = function (property, value, table) {\n        if (this.restrictFormatting) {\n            return;\n        }\n        var action = this.getTableFormatAction(property);\n        this.viewer.owner.isShiftingEnabled = true;\n        var selection = this.documentHelper.selection;\n        if (isNullOrUndefined(table)) {\n            table = selection.start.paragraph.associatedCell.ownerTable;\n        }\n        table = table.combineWidget(this.owner.viewer);\n        if (selection.isEmpty) {\n            this.initHistory(action);\n            this.applyTablePropertyValue(property, value, table);\n        }\n        else {\n            this.updateSelectionTableFormat(this.selection, action, value);\n        }\n        table.calculateGrid();\n        this.selection.owner.isLayoutEnabled = true;\n        this.documentHelper.layout.reLayoutTable(table);\n        this.reLayout(selection, false);\n    };\n    Editor.prototype.getTableFormatAction = function (property) {\n        switch (property) {\n            case 'tableAlignment':\n                return 'TableAlignment';\n            case 'leftIndent':\n                return 'TableLeftIndent';\n            case 'leftMargin':\n                return 'DefaultCellLeftMargin';\n            case 'rightMargin':\n                return 'DefaultCellRightMargin';\n            case 'bottomMargin':\n                return 'DefaultCellBottomMargin';\n            case 'topMargin':\n                return 'DefaultCellTopMargin';\n            case 'preferredWidth':\n                return 'TablePreferredWidth';\n            case 'preferredWidthType':\n                return 'TablePreferredWidthType';\n            case 'shading':\n                return 'Shading';\n            case 'bidi':\n                return 'TableBidi';\n            case 'title':\n                return 'TableTitle';\n            case 'description':\n                return 'TableDescription';\n            default:\n                return 'DefaultCellSpacing';\n        }\n    };\n    // Apply Selection Row Format Option Implementation Starts\n    /**\n     * Apply table row format property changes\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyTableRowFormat = function (property, value) {\n        if (this.restrictFormatting) {\n            return;\n        }\n        var action = this.getRowAction(property);\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var selection = this.documentHelper.selection;\n        if (selection.isEmpty) {\n            this.initHistory(action);\n            var table = selection.start.paragraph.associatedCell.ownerRow.ownerTable;\n            this.applyRowPropertyValue(selection, property, value, selection.start.paragraph.associatedCell.ownerRow);\n        }\n        else {\n            this.updateSelectionTableFormat(this.selection, action, value);\n        }\n        this.reLayout(selection, false);\n    };\n    Editor.prototype.getRowAction = function (property) {\n        switch (property) {\n            case 'height':\n                return 'RowHeight';\n            case 'heightType':\n                return 'RowHeightType';\n            case 'isHeader':\n                return 'RowHeader';\n            default:\n                return 'AllowBreakAcrossPages';\n        }\n    };\n    /**\n     * Apply table cell property changes\n     *\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyTableCellFormat = function (property, value) {\n        if (this.restrictFormatting) {\n            return;\n        }\n        var action = this.getTableCellAction(property);\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var selection = this.documentHelper.selection;\n        var table = selection.start.paragraph.associatedCell.ownerTable;\n        table = table.combineWidget(this.owner.viewer);\n        if (selection.isEmpty) {\n            this.initHistory(action);\n            this.applyCellPropertyValue(selection, property, value, selection.start.paragraph.associatedCell.cellFormat);\n            table.calculateGrid();\n            this.selection.owner.isLayoutEnabled = true;\n            this.documentHelper.layout.reLayoutTable(table);\n        }\n        else {\n            this.updateSelectionTableFormat(this.selection, action, value);\n        }\n        this.reLayout(selection, false);\n    };\n    Editor.prototype.getTableCellAction = function (property) {\n        switch (property) {\n            case 'verticalAlignment':\n                return 'CellContentVerticalAlignment';\n            case 'leftMargin':\n                return 'CellLeftMargin';\n            case 'rightMargin':\n                return 'CellRightMargin';\n            case 'bottomMargin':\n                return 'CellBottomMargin';\n            case 'topMargin':\n                return 'CellTopMargin';\n            case 'preferredWidth':\n                return 'CellPreferredWidth';\n            case 'shading':\n                return 'Shading';\n            default:\n                return 'CellPreferredWidthType';\n        }\n    };\n    Editor.prototype.applyPropertyValueForSection = function (sectionFormat, property, value, update) {\n        //let selection: Selection = this.documentHelper.selection;\n        if (update && this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            if (property === 'columns') {\n                sectionFormat.numberOfColumns = value.length;\n            }\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedPropertiesForSection(sectionFormat, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (isNullOrUndefined(value)) {\n            return;\n        }\n        if (value instanceof WSectionFormat) {\n            if (isNullOrUndefined(property)) {\n                sectionFormat.copyFormat(value, this.editorHistory);\n            }\n            return;\n        }\n        if (property === 'pageHeight') {\n            sectionFormat.pageHeight = value;\n        }\n        else if (property === 'pageWidth') {\n            sectionFormat.pageWidth = value;\n        }\n        else if (property === 'leftMargin') {\n            sectionFormat.leftMargin = value;\n        }\n        else if (property === 'rightMargin') {\n            sectionFormat.rightMargin = value;\n        }\n        else if (property === 'topMargin') {\n            sectionFormat.topMargin = value;\n        }\n        else if (property === 'bottomMargin') {\n            sectionFormat.bottomMargin = value;\n        }\n        else if (property === 'differentFirstPage') {\n            sectionFormat.differentFirstPage = value;\n        }\n        else if (property === 'differentOddAndEvenPages') {\n            sectionFormat.differentOddAndEvenPages = value;\n        }\n        else if (property === 'headerDistance') {\n            sectionFormat.headerDistance = value;\n        }\n        else if (property === 'footerDistance') {\n            sectionFormat.footerDistance = value;\n        }\n        else if (property === 'pageStartingNumber') {\n            sectionFormat.pageStartingNumber = value;\n        }\n        else if (property === 'restartPageNumbering') {\n            sectionFormat.restartPageNumbering = value;\n        }\n        else if (property === 'endnoteNumberFormat') {\n            sectionFormat.endnoteNumberFormat = value;\n        }\n        else if (property === 'footNoteNumberFormat') {\n            sectionFormat.footNoteNumberFormat = value;\n        }\n        else if (property === 'restartIndexForEndnotes') {\n            sectionFormat.restartIndexForEndnotes = value;\n        }\n        else if (property === 'restartIndexForFootnotes') {\n            sectionFormat.restartIndexForFootnotes = value;\n        }\n        else if (property === 'initialFootNoteNumber') {\n            sectionFormat.initialFootNoteNumber = value;\n        }\n        else if (property === 'initialEndNoteNumber') {\n            sectionFormat.initialEndNoteNumber = value;\n        }\n        else if (property == 'numberOfColumns') {\n            sectionFormat.numberOfColumns = value;\n        }\n        else if (property == 'equalWidth') {\n            sectionFormat.equalWidth = value;\n        }\n        else if (property == 'lineBetweenColumns') {\n            sectionFormat.lineBetweenColumns = value;\n        }\n        else if (property == 'columns') {\n            sectionFormat.columns = value;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.layoutWholeDocument = function (isLayoutChanged) {\n        this.documentHelper.layout.isInitialLoad = true;\n        this.documentHelper.layout.isLayoutWhole = true;\n        var startPosition = this.documentHelper.selection.start;\n        var endPosition = this.documentHelper.selection.end;\n        if (startPosition.isExistAfter(endPosition)) {\n            startPosition = this.documentHelper.selection.end;\n            endPosition = this.documentHelper.selection.start;\n        }\n        if (this.owner.layoutType == 'Continuous' && (this.documentHelper.selection.isinEndnote || this.documentHelper.selection.isinFootnote)) {\n            this.documentHelper.selection.footnoteReferenceElement(startPosition, endPosition);\n            startPosition = endPosition;\n        }\n        var startInfo = this.selection.getParagraphInfo(startPosition);\n        var endInfo = this.selection.getParagraphInfo(endPosition);\n        var startIndex = this.selection.getHierarchicalIndex(startInfo.paragraph, startInfo.offset.toString());\n        var endIndex = this.selection.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n        this.documentHelper.renderedLists.clear();\n        this.documentHelper.renderedLevelOverrides = [];\n        // this.viewer.owner.isLayoutEnabled = true;\n        var sections = this.combineSection();\n        this.documentHelper.clearContent();\n        // this.documentHelper.layout.isRelayout = false;\n        this.documentHelper.layout.layoutItems(sections, true);\n        // this.documentHelper.layout.isRelayout = true;\n        this.documentHelper.owner.isShiftingEnabled = false;\n        this.setPositionForCurrentIndex(startPosition, startIndex);\n        this.setPositionForCurrentIndex(endPosition, endIndex);\n        this.documentHelper.selection.selectPosition(startPosition, endPosition);\n        this.reLayout(this.documentHelper.selection, undefined, isLayoutChanged);\n        this.documentHelper.layout.isLayoutWhole = false;\n        this.documentHelper.layout.isInitialLoad = false;\n    };\n    Editor.prototype.combineSection = function () {\n        var sections = [];\n        var nextSection = this.documentHelper.pages[0].bodyWidgets[0];\n        do {\n            nextSection = this.combineSectionChild(nextSection, sections, false);\n        } while (nextSection);\n        for (var j = 0; j < this.documentHelper.pages.length; j++) {\n            this.documentHelper.pages[j].destroy();\n            j--;\n        }\n        return sections;\n    };\n    Editor.prototype.combineFollowingSection = function () {\n        var sections = [];\n        var nextSection = this.documentHelper.selection.start.paragraph.bodyWidget.getSplitWidgets()[0];\n        if (nextSection.childWidgets[0] instanceof ParagraphWidget) {\n            this.updateWholeListItems(nextSection.childWidgets[0]);\n        }\n        else {\n            var block = this.documentHelper.getFirstParagraphInFirstCell(nextSection.childWidgets[0]);\n            this.viewer.owner.editorModule.updateWholeListItems(block);\n        }\n        var pageIndex = this.documentHelper.pages.indexOf(nextSection.page);\n        var startIndex = nextSection.indexInOwner === 0 ? pageIndex : pageIndex + 1;\n        do {\n            nextSection = this.combineSectionChild(nextSection, sections, false);\n        } while (nextSection);\n        for (var i = startIndex; i < this.documentHelper.pages.length; i++) {\n            this.documentHelper.pages[i].destroy();\n            i--;\n        }\n        for (var j = pageIndex; j < this.documentHelper.pages.length; j++) {\n            for (var k = 0; k < this.documentHelper.pages[j].bodyWidgets.length; k++) {\n                if (this.documentHelper.pages[j].bodyWidgets[k].childWidgets.length === 0) {\n                    this.documentHelper.pages[j].bodyWidgets.splice(k, 1);\n                    k--;\n                }\n            }\n        }\n        return sections;\n    };\n    Editor.prototype.combineSectionChild = function (bodyWidget, sections, destoryPage) {\n        var previousBodyWidget = bodyWidget;\n        var temp = new BodyWidget();\n        var emptyBody = false;\n        temp.sectionFormat = bodyWidget.sectionFormat;\n        temp.index = previousBodyWidget.index;\n        do {\n            emptyBody = false;\n            previousBodyWidget = bodyWidget;\n            if (bodyWidget.lastChild) {\n                bodyWidget.lastChild.combineWidget(this.owner.viewer);\n            }\n            bodyWidget = bodyWidget.nextRenderedWidget;\n            for (var j = 0; j < previousBodyWidget.childWidgets.length; j++) {\n                var block = previousBodyWidget.childWidgets[j];\n                if (block instanceof TableWidget) {\n                    this.documentHelper.layout.clearTableWidget(block, true, true, true);\n                }\n                else {\n                    block.x = 0;\n                    block.y = 0;\n                    block.width = 0;\n                    block.height = 0;\n                }\n                temp.childWidgets.push(block);\n                previousBodyWidget.childWidgets.splice(j, 1);\n                j--;\n                block.containerWidget = temp;\n            }\n            for (var i = 0; i < previousBodyWidget.page.bodyWidgets.length; i++) {\n                if (previousBodyWidget.page.bodyWidgets[i].childWidgets.length === 0) {\n                    emptyBody = true;\n                }\n                else {\n                    emptyBody = false;\n                    break;\n                }\n            }\n            if (emptyBody && destoryPage) {\n                previousBodyWidget.page.destroy();\n            }\n            // this.documentHelper.pages.splice(previousBodyWidget.page.index, 1);\n        } while (bodyWidget && previousBodyWidget.index === bodyWidget.index);\n        sections.push(temp);\n        return bodyWidget;\n    };\n    Editor.prototype.updateSelectionTableFormat = function (selection, action, value) {\n        switch (action) {\n            case 'TableAlignment':\n                this.editorHistory.initializeHistory('TableAlignment');\n                this.updateTableFormat(selection, 'tableAlignment', value);\n                break;\n            case 'TableLeftIndent':\n                this.editorHistory.initializeHistory('TableLeftIndent');\n                this.updateTableFormat(selection, 'leftIndent', value);\n                break;\n            case 'DefaultCellSpacing':\n                this.editorHistory.initializeHistory('DefaultCellSpacing');\n                this.updateTableFormat(selection, 'cellSpacing', value);\n                break;\n            case 'DefaultCellLeftMargin':\n                this.editorHistory.initializeHistory('DefaultCellLeftMargin');\n                this.updateTableFormat(selection, 'leftMargin', value);\n                break;\n            case 'DefaultCellRightMargin':\n                this.editorHistory.initializeHistory('DefaultCellRightMargin');\n                this.updateTableFormat(selection, 'rightMargin', value);\n                break;\n            case 'DefaultCellTopMargin':\n                this.editorHistory.initializeHistory('DefaultCellTopMargin');\n                this.updateTableFormat(selection, 'topMargin', value);\n                break;\n            case 'TablePreferredWidth':\n                this.editorHistory.initializeHistory('TablePreferredWidth');\n                this.updateTableFormat(selection, 'preferredWidth', value);\n                break;\n            case 'TablePreferredWidthType':\n                this.editorHistory.initializeHistory('TablePreferredWidthType');\n                this.updateTableFormat(selection, 'preferredWidthType', value);\n                break;\n            case 'DefaultCellBottomMargin':\n                this.editorHistory.initializeHistory('DefaultCellBottomMargin');\n                this.updateTableFormat(selection, 'bottomMargin', value);\n                break;\n            case 'CellContentVerticalAlignment':\n                this.editorHistory.initializeHistory('CellContentVerticalAlignment');\n                this.updateCellFormat(selection, 'verticalAlignment', value);\n                break;\n            case 'CellLeftMargin':\n                this.editorHistory.initializeHistory('CellLeftMargin');\n                this.updateCellFormat(selection, 'leftMargin', value);\n                break;\n            case 'CellRightMargin':\n                this.editorHistory.initializeHistory('CellRightMargin');\n                this.updateCellFormat(selection, 'rightMargin', value);\n                break;\n            case 'CellTopMargin':\n                this.editorHistory.initializeHistory('CellTopMargin');\n                this.updateCellFormat(selection, 'topMargin', value);\n                break;\n            case 'CellBottomMargin':\n                this.editorHistory.initializeHistory('CellBottomMargin');\n                this.updateCellFormat(selection, 'bottomMargin', value);\n                break;\n            case 'CellPreferredWidth':\n                this.editorHistory.initializeHistory('CellPreferredWidth');\n                this.updateCellFormat(selection, 'preferredWidth', value);\n                break;\n            case 'CellPreferredWidthType':\n                this.editorHistory.initializeHistory('CellPreferredWidthType');\n                this.updateCellFormat(selection, 'preferredWidthType', value);\n                break;\n            case 'Shading':\n                this.editorHistory.initializeHistory('Shading');\n                this.updateCellFormat(selection, 'shading', value);\n                break;\n            case 'RowHeight':\n                this.editorHistory.initializeHistory('RowHeight');\n                this.updateRowFormat(selection, 'height', value);\n                break;\n            case 'RowHeightType':\n                this.editorHistory.initializeHistory('RowHeightType');\n                this.updateRowFormat(selection, 'heightType', value);\n                break;\n            case 'RowHeader':\n                this.editorHistory.initializeHistory('RowHeader');\n                this.updateRowFormat(selection, 'isHeader', value);\n                break;\n            case 'AllowBreakAcrossPages':\n                this.editorHistory.initializeHistory('AllowBreakAcrossPages');\n                this.updateRowFormat(selection, 'allowBreakAcrossPages', value);\n                break;\n            case 'TableBidi':\n                this.editorHistory.initializeHistory(action);\n                this.updateTableFormat(selection, 'bidi', value);\n                break;\n            case 'TableTitle':\n                this.editorHistory.initializeHistory(action);\n                this.updateTableFormat(selection, 'title', value);\n                break;\n            case 'TableDescription':\n                this.editorHistory.initializeHistory(action);\n                this.updateTableFormat(selection, 'description', value);\n                break;\n        }\n    };\n    // Update Table Properties\n    /**\n     * Update Table Format on undo\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateTableFormat = function (selection, property, value) {\n        var tableStartPosition = selection.start;\n        var tableEndPosition = selection.end;\n        if (!selection.isForward) {\n            tableStartPosition = selection.end;\n            tableEndPosition = selection.start;\n        }\n        this.initHistoryPosition(selection, tableStartPosition);\n        this.applyTablePropertyValue(property, value, tableStartPosition.paragraph.associatedCell.ownerTable);\n        if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n            this.documentHelper.layout.reLayoutTable(tableStartPosition.paragraph.associatedCell.ownerTable);\n        }\n    };\n    /**\n     * update cell format on undo\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateCellFormat = function (selection, property, value) {\n        selection.owner.isShiftingEnabled = true;\n        var newStartPosition = selection.start;\n        var newEndPosition = selection.end;\n        if (!selection.isForward) {\n            newStartPosition = selection.end;\n            newEndPosition = selection.start;\n        }\n        this.initHistoryPosition(selection, newStartPosition);\n        this.updateFormatForCell(selection, property, value);\n    };\n    /**\n     * Update row format on undo\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {string} property - Specifies the property\n     * @param {Object} value - Specifies the value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateRowFormat = function (selection, property, value) {\n        var rowStartPosition = selection.start;\n        var rowEndPosition = selection.end;\n        if (!selection.isForward) {\n            rowStartPosition = selection.end;\n            rowEndPosition = selection.start;\n        }\n        this.initHistoryPosition(selection, rowStartPosition);\n        this.applyRowFormat(rowStartPosition.paragraph.associatedCell.ownerRow, rowStartPosition, rowEndPosition, property, value);\n    };\n    Editor.prototype.initHistoryPosition = function (selection, position) {\n        if (this.documentHelper.owner.editorHistoryModule && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            if (!isNullOrUndefined(position)) {\n                if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n                    this.editorHistory.currentBaseHistoryInfo.insertPosition = position.getHierarchicalIndexInternal();\n                }\n            }\n            else if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition)) {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = selection.start.getHierarchicalIndexInternal();\n            }\n        }\n    };\n    Editor.prototype.startSelectionReLayouting = function (paragraph, selection, start, end) {\n        selection.owner.isLayoutEnabled = true;\n        if (start.paragraph.isInsideTable) {\n            var table = start.paragraph.associatedCell.ownerTable;\n            while (table.isInsideTable) {\n                table = table.associatedCell.ownerTable;\n            }\n            this.reLayoutSelectionOfTable(table, selection, start, end);\n        }\n        else {\n            this.reLayoutSelection(paragraph, selection, start, end);\n        }\n    };\n    Editor.prototype.reLayoutSelectionOfTable = function (table, selection, start, end) {\n        var isEnded = false;\n        this.documentHelper.layout.layoutBodyWidgetCollection(table.index, table.containerWidget, table, false);\n        // If the selection ends in the current table, need to stop relayouting.\n        if (!isNullOrUndefined(end.paragraph.associatedCell) && table.contains(end.paragraph.associatedCell)) {\n            return true;\n        }\n        var block = selection.getNextRenderedBlock(table);\n        // Relayout the next block.\n        if (!isNullOrUndefined(block)) {\n            isEnded = this.reLayoutSelectionOfBlock(block, selection, start, end);\n        }\n        return isEnded;\n    };\n    Editor.prototype.reLayoutSelection = function (paragraph, selection, start, end) {\n        if (start.paragraph === paragraph) {\n            var startOffset = start.offset;\n            var length_3 = selection.getParagraphLength(paragraph);\n            var indexInInline = 0;\n            var index = 0;\n            var inlineObj = paragraph.getInline(start.offset, indexInInline);\n            var inline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            if (!isNullOrUndefined(inline)) {\n                if (indexInInline === inline.length && !isNullOrUndefined(inline.nextNode)) {\n                    inline = inline.nextNode;\n                }\n                index = inline.line.children.indexOf(inline);\n            }\n            var lineIndex = 0;\n            if (start.currentWidget.paragraph === paragraph) {\n                lineIndex = paragraph.childWidgets.indexOf(start.currentWidget);\n                index = start.currentWidget.children.indexOf(inline);\n            }\n            // If selection start inline is at new inline, need to relayout from the previous inline.\n            if (inline instanceof TextElementBox && !inline.line && index > 0) {\n                this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, index - 1);\n            }\n            else {\n                this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, index);\n            }\n        }\n        else {\n            this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n        }\n        // If the selection ends at the current paragraph, need to stop relayouting.\n        if (end.paragraph === paragraph) {\n            return true;\n        }\n        // _Relayout the next block.\n        var block = selection.getNextRenderedBlock(paragraph);\n        if (!isNullOrUndefined(block)) {\n            return this.reLayoutSelectionOfBlock(block, selection, start, end);\n        }\n        return false;\n    };\n    //Relayouting Start    \n    Editor.prototype.reLayoutSelectionOfBlock = function (block, selection, start, end) {\n        if (block instanceof ParagraphWidget) {\n            return this.reLayoutSelection(block, selection, start, end);\n        }\n        else {\n            return undefined;\n            // return this.reLayoutSelectionOfTable(block as TableWidget, selection, start, end);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.layoutItemBlock = function (block, shiftNextWidget) {\n        var section = undefined;\n        if (block.containerWidget instanceof BlockContainer || block.containerWidget instanceof TextFrame) {\n            // let index: number = section.childWidgets.indexOf(block);\n            if (!isNullOrUndefined(this.documentHelper.owner)\n                && this.documentHelper.owner.isLayoutEnabled) {\n                block = block.combineWidget(this.viewer);\n                section = block.containerWidget;\n                this.documentHelper.layout.layoutBodyWidgetCollection(block.index, section, block, false);\n            }\n        }\n        else if (block.containerWidget instanceof TableCellWidget) {\n            var cell = block.containerWidget;\n            cell = this.documentHelper.selection.getContainerCell(cell);\n            if (!isNullOrUndefined(this.documentHelper.owner)\n                && this.documentHelper.owner.isLayoutEnabled) {\n                this.documentHelper.layout.reLayoutTable(block);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.removeSelectedContents = function (selection) {\n        return this.removeSelectedContentInternal(selection, selection.start, selection.end);\n    };\n    Editor.prototype.removeSelectedContentInternal = function (selection, startPosition, endPosition) {\n        var startPos = startPosition;\n        var endPos = endPosition;\n        if (!startPosition.isExistBefore(endPosition)) {\n            startPos = endPosition;\n            endPos = startPosition;\n        }\n        if (startPos.paragraph === endPos.paragraph && startPos.paragraph.childWidgets.indexOf(startPos.currentWidget) === startPos.paragraph.childWidgets.length - 1 &&\n            startPos.offset === selection.getParagraphLength(startPos.paragraph) && startPos.offset + 1 === endPos.offset) {\n            selection.owner.isShiftingEnabled = true;\n            selection.selectContent(startPos, true);\n            return true;\n        }\n        var paragraphInfo = this.selection.getParagraphInfo(startPos);\n        selection.editPosition = this.selection.getHierarchicalIndex(paragraphInfo.paragraph, paragraphInfo.offset.toString());\n        var start = startPos.clone();\n        var body = start.paragraph.containerWidget;\n        var isFirstLine = start.currentWidget.isFirstLine();\n        var isMultipleSectionSelected = this.checkMultipleSectionSelected(start, endPos);\n        var isRemoved = this.removeSelectedContent(endPos.paragraph, selection, startPos, endPos);\n        var textPosition = new TextPosition(selection.owner);\n        if (isMultipleSectionSelected && this.selection.currentPasteAction == \"DefaultPaste\" && isFirstLine && start.offset < 1) {\n            var currentParagraph = start.paragraph;\n            var paragraph = new ParagraphWidget();\n            var line = new LineWidget(paragraph);\n            line.paragraph = paragraph;\n            paragraph.containerWidget = body;\n            paragraph.childWidgets.push(line);\n            body.childWidgets.push(paragraph);\n            paragraph.index = currentParagraph.index;\n            paragraph.x = start.location.x;\n            paragraph.y = start.location.y;\n        }\n        this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n        selection.selectContent(textPosition, true);\n        return isRemoved;\n    };\n    Editor.prototype.checkMultipleSectionSelected = function (start, end) {\n        var startSectionIndex = this.getBodyWidgetIndex(start);\n        var endSectionIndex = this.getBodyWidgetIndex(end);\n        if (startSectionIndex == endSectionIndex) {\n            return false;\n        }\n        return true;\n    };\n    Editor.prototype.getBodyWidgetIndex = function (textPosition) {\n        var position = textPosition.hierarchicalPosition;\n        var index = position.indexOf(';');\n        var value = position.substring(0, index);\n        position = position.substring(index).replace(';', '');\n        index = position.indexOf(';');\n        value = position.substring(0, index);\n        var bodyWidgetIndex = parseInt(value, 10);\n        return bodyWidgetIndex;\n    };\n    Editor.prototype.removeSelectedContent = function (paragraph, selection, start, end) {\n        //If end is not table end and start is outside the table, then skip removing the contents and move caret to start position.\n        if (end.paragraph.isInsideTable\n            && end.paragraph !== this.documentHelper.getLastParagraphInLastCell(end.paragraph.associatedCell.ownerTable)\n            && (!start.paragraph.isInsideTable\n                || start.paragraph.associatedCell.ownerTable.index !== end.paragraph.associatedCell.ownerTable.index)) {\n            return false;\n        }\n        selection.owner.isShiftingEnabled = true;\n        this.deleteSelectedContent(paragraph, selection, start, end, 2);\n        return true;\n    };\n    Editor.prototype.deleteSelectedContent = function (paragraph, selection, start, end, editAction, isDeletecell) {\n        var indexInInline = 0;\n        var inlineObj = start.currentWidget.getInline(start.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        // if (!isNullOrUndefined(inline)) {\n        //     inline = selection.getNextRenderedInline(inline, indexInInline);\n        // }\n        // if (inline instanceof WFieldBegin && !isNullOrUndefined((inline as WFieldBegin).fieldEnd)) {\n        //     let fieldEndOffset: number = ((inline as WFieldBegin).fieldEnd.owner as WParagraph).getOffset((inline as WFieldBegin).fieldEnd, 1);\n        //     let fieldEndIndex: string = WordDocument.getHierarchicalIndexOf((inline as WFieldBegin).fieldEnd.owner as WParagraph, fieldEndOffset.toString());\n        //     let selectionEndIndex: string = end.getHierarchicalIndexInternal();\n        //     if (!TextPosition.isForwardSelection(fieldEndIndex, selectionEndIndex)) {\n        //         //If selection end is after field begin, moves selection start to field separator.\n        //         start.moveToInline((inline as WFieldBegin).fieldSeparator, 1);\n        //         selection.editPosition = start.getHierarchicalIndexInternal();\n        //         if (!isNullOrUndefined(selection.currentBaseHistoryInfo)) {\n        //             selection.currentBaseHistoryInfo.insertPosition = selection.editPosition;\n        //         }\n        //     }\n        // }\n        indexInInline = 0;\n        inlineObj = end.currentWidget.getInline(end.offset, indexInInline);\n        inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        // if (!isNullOrUndefined(inline)) {\n        //     inline = selection.getNextRenderedInline(inline, indexInInline);\n        // }\n        // if (inline instanceof WFieldEnd && !isNullOrUndefined((inline as WFieldEnd).fieldBegin)) {\n        //     let fieldBeginOffset: number = ((inline as WFieldEnd).fieldBegin.owner as WParagraph).getOffset((inline as WFieldEnd).fieldBegin, 0);\n        //     let fieldBeginIndex: string = WordDocument.getHierarchicalIndexOf((inline as WFieldEnd).fieldBegin.owner as WParagraph, fieldBeginOffset.toString());\n        //     let selectionStartIndex: string = start.getHierarchicalIndexInternal();\n        //     if (!TextPosition.isForwardSelection(selectionStartIndex, fieldBeginIndex)) {\n        //         //If field begin is before selection start, move selection end to inline item before field end.\n        //         let prevInline: WInline = selection.getPreviousTextInline(inline);\n        //         if (isNullOrUndefined(prevInline)) {\n        //             end.moveBackward();\n        //         } else {\n        //             end.moveToInline(prevInline, prevInline.length);\n        //         }\n        //     }\n        // }\n        // if (inline instanceof FootnoteElementBox) {\n        //     this.removeFootnote(inline);\n        // }\n        if (end.paragraph !== paragraph) {\n            this.deleteSelectedContent(end.paragraph, selection, start, end, editAction);\n            return;\n        }\n        //  Selection start in cell.\n        if (end.paragraph.isInsideTable && (!start.paragraph.isInsideTable\n            || start.paragraph.associatedCell !== end.paragraph.associatedCell\n            || (selection.isCellSelected(end.paragraph.associatedCell, start, end) && isDeletecell))) {\n            end.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n            this.deleteTableCell(end.paragraph.associatedCell, selection, start, end, editAction, isDeletecell);\n        }\n        else {\n            var shiftPara = undefined;\n            if (this.owner.viewer instanceof PageLayoutViewer && paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && paragraph === paragraph.bodyWidget.lastChild && !isNullOrUndefined(paragraph.bodyWidget.nextRenderedWidget) && paragraph.bodyWidget.index !== paragraph.bodyWidget.nextRenderedWidget.index && paragraph.bodyWidget.page === paragraph.bodyWidget.nextRenderedWidget.page) {\n                shiftPara = paragraph.nextRenderedWidget;\n            }\n            this.deletePara(paragraph, start, end, editAction);\n            if (this.delBlockContinue && this.delBlock) {\n                if (this.delSection) {\n                    var bodyWidget = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n                    this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n                    this.delSection = undefined;\n                }\n                this.deleteBlock(this.delBlock, selection, start, end, editAction);\n                this.delBlockContinue = false;\n                this.delBlock = undefined;\n            }\n            if (this.owner.viewer instanceof PageLayoutViewer && shiftPara !== undefined) {\n                this.documentHelper.blockToShift = shiftPara;\n            }\n        }\n    };\n    /**\n     * Merges the selected cells.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.mergeCells = function () {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl || !this.owner.isDocumentLoaded) {\n            return;\n        }\n        if (!isNullOrUndefined(this.documentHelper) && !this.selection.isEmpty) {\n            this.mergeSelectedCellsInTable();\n        }\n    };\n    /**\n     * Deletes the entire table at selection.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.deleteTable = function () {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        if (startPos.paragraph.isInsideTable) {\n            var table = this.getOwnerTable(this.selection.isForward).combineWidget(this.owner.viewer);\n            this.selection.selectTable();\n            var commentStart = [];\n            this.selection.owner.isShiftingEnabled = true;\n            if (this.checkIsNotRedoing()) {\n                commentStart = this.checkAndRemoveComments();\n                this.initHistory('DeleteTable');\n                //Sets the insert position in history info as current table.    \n                this.updateHistoryPosition(startPos, true);\n            }\n            var considerTrackChanges = true;\n            if (!this.skipTracking()) {\n                var count = 0;\n                for (var i = 0; i < table.childWidgets.length; i++) {\n                    var row = table.childWidgets[i];\n                    if (row.rowFormat.revisions.length === 1 && row.rowFormat.revisions[0].revisionType === 'Insertion'\n                        && row.rowFormat.revisions[0].author === (this.owner.currentUser === '' ? 'Guest user' : this.owner.currentUser)) {\n                        this.isRemoveRevision = true;\n                        this.unlinkRangeFromRevision(row.rowFormat, true);\n                        this.isRemoveRevision = false;\n                        if (row.rowFormat.revisions[0].range.length === 0) {\n                            row.rowFormat.revisions.splice(0, 1);\n                        }\n                        count++;\n                    }\n                }\n                if (count === table.childWidgets.length) {\n                    considerTrackChanges = false;\n                }\n            }\n            var paragraph = this.getParagraphForSelection(table);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Table;\n                this.editorHistory.currentBaseHistoryInfo.removedNodes.push(table.clone());\n            }\n            if (this.owner.enableTrackChanges && considerTrackChanges) {\n                for (var i = 0; i < table.childWidgets.length; i++) {\n                    if (i === 0) {\n                        var nextCell = table.childWidgets[0];\n                        paragraph = this.selection.getFirstParagraph(nextCell);\n                    }\n                    this.trackRowDeletion(table.childWidgets[i]);\n                }\n            }\n            else {\n                this.removeBlock(table);\n            }\n            this.selection.selectParagraphInternal(paragraph, true);\n            if (this.checkIsNotRedoing() || isNullOrUndefined(this.editorHistory)) {\n                this.reLayout(this.selection);\n                this.updateHistoryForComments(commentStart);\n            }\n        }\n    };\n    /**\n     * Deletes the selected column(s).\n     *\n     * @returns {void}\n     */\n    Editor.prototype.deleteColumn = function () {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        if (this.owner.enableTrackChanges) {\n            var locale = new L10n('documenteditor', this.owner.defaultLocale);\n            locale.setLocale(this.owner.locale);\n            this.alertDialog = DialogUtility.alert({\n                title: locale.getConstant('UnTrack'),\n                content: locale.getConstant('Merge Track'),\n                showCloseIcon: true,\n                okButton: {\n                    text: 'Ok', click: this.onDeleteColumnConfirmed.bind(this)\n                },\n                closeOnEscape: true,\n                position: { X: 'center', Y: 'center' },\n                animationSettings: { effect: 'Zoom' }\n            });\n            this.alertDialog.enableRtl = this.owner.enableRtl;\n        }\n        else {\n            this.onDeleteColumnConfirmed();\n        }\n    };\n    Editor.prototype.onDeleteColumnConfirmed = function () {\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        if (startPos.paragraph.isInsideTable) {\n            this.selection.selectColumn();\n            var commentStart = [];\n            this.selection.owner.isShiftingEnabled = true;\n            if (this.checkIsNotRedoing()) {\n                commentStart = this.checkAndRemoveComments();\n                this.initHistory('DeleteColumn');\n            }\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var endCell = this.getOwnerCell(!this.selection.isForward);\n            var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                this.cloneTableToHistoryInfo(table);\n            }\n            var paragraph = undefined;\n            if (endCell.nextWidget) {\n                var nextCell = endCell.nextWidget;\n                paragraph = this.selection.getFirstParagraph(nextCell);\n            }\n            else if (startCell.previousWidget) {\n                var previousCell = startCell.previousWidget;\n                paragraph = this.selection.getFirstParagraph(previousCell);\n            }\n            if (isNullOrUndefined(paragraph)) {\n                paragraph = this.getParagraphForSelection(table);\n            }\n            //retrieve the cell collection based on start and end cell to remove. \n            var deleteCells = table.getColumnCellsForSelection(startCell, endCell);\n            this.onDeleteColumn(table, deleteCells);\n            if (table.childWidgets.length === 0) {\n                // Before disposing table reset the paragrph.\n                paragraph = this.getParagraphForSelection(table);\n                this.removeBlock(table);\n                if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                    this.editorHistory.currentBaseHistoryInfo.action = 'DeleteTable';\n                }\n                table.destroy();\n            }\n            else {\n                this.updateTable(table);\n            }\n            this.selection.selectParagraphInternal(paragraph, true);\n            if (isNullOrUndefined(this.editorHistory) || this.checkIsNotRedoing()) {\n                this.reLayout(this.selection, true);\n                this.updateHistoryForComments(commentStart);\n            }\n            if (!isNullOrUndefined(this.alertDialog)) {\n                this.alertDialog.close();\n                this.alertDialog = undefined;\n            }\n        }\n    };\n    /**\n     * Delete the column for collaborative editing.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onDeleteColumn = function (table, deleteCells) {\n        var length = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.childWidgets.length === 1) {\n                if (deleteCells.indexOf(row.childWidgets[0]) >= 0) {\n                    this.removeFieldInWidget(row.childWidgets[0], true);\n                    table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n                    row.destroy();\n                    length += 1;\n                    i--;\n                }\n            }\n            else {\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var tableCell = row.childWidgets[j];\n                    if (deleteCells.indexOf(tableCell) >= 0) {\n                        this.removeFieldInWidget(tableCell, true);\n                        row.childWidgets.splice(j, 1);\n                        tableCell.destroy();\n                        j--;\n                    }\n                }\n                if (row.childWidgets.length === 0) {\n                    table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n                    row.destroy();\n                    length += 1;\n                    i--;\n                }\n            }\n        }\n        return length;\n    };\n    /**\n     * Deletes the selected row(s).\n     *\n     * @returns {void}\n     */\n    Editor.prototype.deleteRow = function () {\n        if (this.owner.isReadOnlyMode || !this.canEditContentControl) {\n            return;\n        }\n        var startPos = !this.selection.isForward ? this.selection.end : this.selection.start;\n        var endPos = !this.selection.isForward ? this.selection.start : this.selection.end;\n        var blockInfo = this.selection.getParagraphInfo(startPos);\n        var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        if (startPos.paragraph.isInsideTable) {\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var endCell = this.getOwnerCell(!this.selection.isForward);\n            this.selection.selectRow();\n            var commentStart = [];\n            if (this.checkIsNotRedoing()) {\n                commentStart = this.checkAndRemoveComments();\n                this.initHistory('DeleteRow');\n            }\n            this.selection.owner.isShiftingEnabled = true;\n            var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n            var row = this.getOwnerRow(true);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                this.cloneTableToHistoryInfo(table);\n            }\n            var paragraph = undefined;\n            if (row.nextWidget) {\n                var nextCell = row.nextWidget.childWidgets[0];\n                paragraph = this.selection.getFirstParagraph(nextCell);\n            }\n            if (isNullOrUndefined(paragraph)) {\n                paragraph = this.getParagraphForSelection(table);\n            }\n            startPos = startPos.clone();\n            if (!this.selection.isEmpty) {\n                var containerCell = this.selection.getContainerCellOf(startCell, endCell);\n                if (containerCell.ownerTable.contains(endCell)) {\n                    startCell = this.selection.getSelectedCell(startCell, containerCell);\n                    endCell = this.selection.getSelectedCell(endCell, containerCell);\n                    if (this.selection.containsCell(containerCell, endCell)) {\n                        row = startCell.ownerRow;\n                        if (this.owner.enableTrackChanges) {\n                            if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                                this.editorHistory.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n                                this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Row;\n                            }\n                            this.trackRowDeletion(row, true, false);\n                        }\n                        else {\n                            this.removeRow(row);\n                        }\n                    }\n                    else {\n                        row = startCell.ownerRow;\n                        var endRow = endCell.ownerRow;\n                        //Update the selection paragraph.\n                        paragraph = undefined;\n                        if (endRow.nextWidget) {\n                            var nextCell = endRow.nextWidget.childWidgets[0];\n                            paragraph = this.selection.getFirstParagraph(nextCell);\n                        }\n                        if (isNullOrUndefined(paragraph)) {\n                            paragraph = this.getParagraphForSelection(table);\n                        }\n                        for (var i = 0; i < table.childWidgets.length; i++) {\n                            var tableRow = table.childWidgets[i];\n                            if (tableRow.rowIndex >= row.rowIndex && tableRow.rowIndex <= endRow.rowIndex) {\n                                if (this.owner.enableTrackChanges && this.checkIsNotRedoing()) {\n                                    this.trackRowDeletion(tableRow, true, false);\n                                }\n                                else {\n                                    this.removeFieldInBlock(tableRow, true);\n                                    table.childWidgets.splice(i, 1);\n                                    tableRow.destroy();\n                                    i--;\n                                }\n                            }\n                        }\n                        if (table.childWidgets.length === 0) {\n                            this.removeBlock(table);\n                            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                                this.editorHistory.currentBaseHistoryInfo.action = 'DeleteTable';\n                            }\n                            table.destroy();\n                        }\n                        else {\n                            this.updateTable(table);\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.owner.enableTrackChanges) {\n                    this.trackRowDeletion(row, true, false);\n                }\n                else {\n                    this.removeRow(row);\n                }\n            }\n            if (!this.owner.enableTrackChanges || isNullOrUndefined(table.childWidgets)) {\n                this.selection.selectParagraphInternal(paragraph, true);\n            }\n            else {\n                var textPosition = this.selection.getTextPosBasedOnLogicalIndex(startIndex);\n                this.selection.selectContent(textPosition, true);\n                // this.selection.start.setPositionInternal(startPos);\n                // this.selection.end.setPositionInternal(this.selection.start);\n            }\n            if (isNullOrUndefined(this.editorHistory) || this.checkIsNotRedoing()) {\n                this.reLayout(this.selection, true);\n                this.updateHistoryForComments(commentStart);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.trackRowDeletion = function (row, canremoveRow, updateHistory) {\n        var rowFormat = row.rowFormat;\n        if (!isNullOrUndefined(rowFormat)) {\n            var canInsertRevision = true;\n            if (rowFormat.revisions.length > 0) {\n                var revision = this.retrieveRevisionInOder(rowFormat);\n                if (revision.revisionType === 'Insertion') {\n                    if (this.isRevisionMatched(rowFormat, undefined)) {\n                        if (isNullOrUndefined(canremoveRow) || canremoveRow) {\n                            this.removeRow(row);\n                        }\n                        else {\n                            this.removeRevisionsInRow(row);\n                        }\n                        return true;\n                    }\n                }\n                else if (revision.revisionType === 'Deletion') {\n                    this.unlinkWholeRangeInRevision(rowFormat, revision);\n                    canInsertRevision = false;\n                }\n            }\n            if (canInsertRevision) {\n                if ((isNullOrUndefined(updateHistory) || updateHistory) && this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                    this.editorHistory.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n                }\n                this.insertRevision(rowFormat, 'Deletion');\n            }\n            for (var i = 0; i < row.childWidgets.length; i++) {\n                var cellWidget = row.childWidgets[i];\n                for (var j = 0; j < cellWidget.childWidgets.length; j++) {\n                    if (cellWidget.childWidgets[j] instanceof TableWidget) {\n                        this.trackInnerTable(cellWidget.childWidgets[j], canremoveRow, updateHistory);\n                    }\n                    else {\n                        var paraWidget = cellWidget.childWidgets[j];\n                        // We used this boolean since for table tracking we should add removed nodes only for entire table not for every elements in the table\n                        this.skipTableElements = true;\n                        if (canInsertRevision) {\n                            this.insertRevisionForBlock(paraWidget, 'Deletion', undefined, undefined, true);\n                        }\n                        this.skipTableElements = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    Editor.prototype.trackInnerTable = function (tableWidget, canremoveRow, updateHistory) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            this.trackRowDeletion(tableWidget.childWidgets[i], canremoveRow, updateHistory);\n        }\n    };\n    Editor.prototype.returnDeleteRevision = function (revisions) {\n        for (var i = 0; i < revisions.length; i++) {\n            if (revisions[i].revisionType === 'Deletion') {\n                return revisions[i];\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.removeRow = function (row) {\n        var table = row.ownerTable;\n        if (row.rowFormat.revisions.length > 0) {\n            this.removeRevisionsInRow(row);\n        }\n        if (table.childWidgets.length === 1) {\n            this.removeBlock(table);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                this.editorHistory.currentBaseHistoryInfo.action = 'Delete';\n            }\n            table.destroy();\n        }\n        else {\n            this.removeFieldInBlock(row, true);\n            table.childWidgets.splice(table.childWidgets.indexOf(row), 1);\n            row.destroy();\n            this.updateTable(table);\n        }\n    };\n    /**\n     * @private\n     * @param {TableWidget} table Specifies the table widget\n     * @returns {void}\n     */\n    Editor.prototype.updateTable = function (table, skipCombine) {\n        if (!skipCombine) {\n            table = table.combineWidget(this.viewer);\n        }\n        table.updateRowIndex(0);\n        table.isGridUpdated = false;\n        table.buildTableColumns();\n        table.isGridUpdated = true;\n        this.documentHelper.layout.reLayoutTable(table);\n    };\n    /**\n     * @private\n     * @param {TableWidget} table Specifies the table widget\n     * @returns { ParagraphWidget }\n     */\n    Editor.prototype.getParagraphForSelection = function (table) {\n        var paragraph = undefined;\n        var nextWidget = table.nextWidget ? table.nextWidget : table.nextRenderedWidget;\n        var previousWidget = table.previousWidget ? table.previousWidget : table.previousRenderedWidget;\n        if (nextWidget) {\n            paragraph = nextWidget instanceof ParagraphWidget ? nextWidget\n                : this.documentHelper.getFirstParagraphInFirstCell(nextWidget);\n        }\n        else if (previousWidget) {\n            paragraph = previousWidget instanceof ParagraphWidget ? previousWidget\n                : this.documentHelper.getLastParagraphInLastCell(previousWidget);\n        }\n        return paragraph;\n    };\n    Editor.prototype.deletePara = function (paragraph, start, end, editAction) {\n        paragraph = paragraph.combineWidget(this.owner.viewer);\n        var selection = this.documentHelper.selection;\n        var paragraphStart = selection.getStartOffset(paragraph);\n        var endParagraphStartOffset = selection.getStartOffset(end.paragraph);\n        var startOffset = paragraphStart;\n        var endOffset = 0;\n        var isCombineNextParagraph = false;\n        var lastLinelength = this.selection.getLineLength(paragraph.lastChild);\n        var currentParagraph = paragraph;\n        var section = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n        var startLine = undefined;\n        var endLineWidget = undefined;\n        var isCombineLastBlock = this.combineLastBlock;\n        var tempStartOffset;\n        if (paragraph === start.paragraph) {\n            startOffset = start.offset;\n            startLine = start.currentWidget;\n            tempStartOffset = startOffset;\n            if ((startOffset + 1 === this.documentHelper.selection.getLineLength(paragraph.lastChild))) {\n                startOffset++;\n            }\n            if (end.paragraph.isInsideTable && (!this.owner.enableTrackChanges || this.skipTracking())) {\n                isCombineNextParagraph = this.isEndInAdjacentTable(paragraph, end.paragraph);\n            }\n            if (!isCombineNextParagraph) {\n                isCombineNextParagraph = this.combineLastBlock;\n            }\n            this.combineLastBlock = false;\n        }\n        else {\n            startLine = paragraph.firstChild;\n        }\n        if (paragraph !== start.paragraph && selection.isSkipLayouting) {\n            selection.isSkipLayouting = false;\n        }\n        if (paragraph === end.paragraph) {\n            endLineWidget = end.currentWidget;\n            endOffset = end.offset;\n        }\n        else {\n            endLineWidget = paragraph.lastChild;\n            endOffset = this.documentHelper.selection.getLineLength(paragraph.lastChild);\n        }\n        // If previous widget is splitted paragraph, combine paragraph widget.\n        var block = (!isNullOrUndefined(paragraph.previousRenderedWidget) && start.paragraph !== paragraph) ?\n            paragraph.previousRenderedWidget.combineWidget(this.documentHelper.viewer) : undefined;\n        if (this.owner.enableTrackChanges && !isNullOrUndefined(block) && block instanceof TableWidget && paragraph.isEmpty() && isNullOrUndefined(paragraph.nextRenderedWidget)) {\n            this.delBlockContinue = true;\n            this.delBlock = block;\n            return;\n        }\n        if (startOffset > paragraphStart && start.currentWidget === paragraph.lastChild &&\n            startOffset === lastLinelength && (paragraph === end.paragraph && end.offset === startOffset + 1 ||\n            paragraph.nextRenderedWidget === end.paragraph && end.offset === endParagraphStartOffset) ||\n            (this.editorHistory && this.editorHistory.isUndoing && this.editorHistory.currentHistoryInfo &&\n                this.editorHistory.currentHistoryInfo.action === 'PageBreak' && block && block.isPageBreak()\n                && (startOffset === 0 && !start.currentWidget.isFirstLine || startOffset > 0)) ||\n            start.paragraph !== end.paragraph && editAction === 2 && start.paragraph === paragraph && start.paragraph.nextWidget === end.paragraph || !(paragraph.nextRenderedWidget instanceof TableWidget) && !isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && ((this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' && start.paragraph === paragraph && end.paragraph != paragraph && startOffset >= paragraphStart) || (this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change' && start.currentWidget.isLastLine() && ((start.currentWidget == end.currentWidget && start.offset + 1 >= end.paragraph.getLength()) || (start.currentWidget !== end.currentWidget && start.paragraph === paragraph))))) {\n            isCombineNextParagraph = true;\n        }\n        if ((tempStartOffset + 1 === this.documentHelper.selection.getLineLength(paragraph.lastChild))) {\n            startOffset--;\n        }\n        var paraEnd = end.clone();\n        paraEnd.offset = paraEnd.offset - 1;\n        var paraReplace = (start.paragraph === paragraph && start.isAtParagraphStart && paraEnd.isAtParagraphEnd &&\n            this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)\n            && this.editorHistory.currentBaseHistoryInfo.action === 'Insert');\n        if (paraReplace) {\n            this.editorHistory.currentBaseHistoryInfo.action = 'InsertTextParaReplace';\n        }\n        var isStartParagraph = start.paragraph === paragraph;\n        if (end.paragraph === paragraph && end.currentWidget !== paragraph.lastChild ||\n            (end.currentWidget === paragraph.lastChild && end.offset <= selection.getLineLength(paragraph.lastChild)) || paraReplace) {\n            if (end.currentWidget.isFirstLine() && end.offset > paragraphStart || !end.currentWidget.isFirstLine() || paraReplace) {\n                //If selection end with this paragraph and selection doesnot include paragraph mark.               \n                this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n                //Removes the splitted paragraph.\n            }\n            if (!isNullOrUndefined(block) && !isStartParagraph && !paraReplace) {\n                this.delBlockContinue = true;\n                this.delBlock = block;\n                var nextSection = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n                if (nextSection && !section.equals(nextSection) && section.index !== nextSection.index) {\n                    this.delSection = nextSection;\n                }\n                else {\n                    this.delSection = undefined;\n                }\n            }\n            else {\n                this.delBlockContinue = false;\n                this.delBlock = undefined;\n            }\n        }\n        else if (start.paragraph === paragraph && (start.currentWidget !== paragraph.firstChild ||\n            (start.currentWidget === paragraph.firstChild && startOffset > paragraphStart))) {\n            // If selection start is after paragraph start\n            //And selection does not end with this paragraph Or selection include paragraph mark.\n            this.delBlockContinue = false;\n            this.delBlock = undefined;\n            if (editAction === 4) {\n                return;\n            }\n            else {\n                if (this.skipTracking() && this.editorHistory.currentBaseHistoryInfo.action === 'ParaMarkTrack') {\n                    this.addRemovedNodes(paragraph.characterFormat.cloneFormat());\n                    if (paragraph.characterFormat.revisions.length > 0) {\n                        this.unlinkRangeFromRevision(paragraph.characterFormat, true);\n                    }\n                    paragraph.characterFormat.revisions = [];\n                }\n                else {\n                    if (this.owner.enableTrackChanges && !this.skipTracking() && this.editorHistory.currentBaseHistoryInfo.action !== 'TOC' && this.editorHistory.currentBaseHistoryInfo.action !== 'Reject Change') {\n                        if (isCombineNextParagraph) {\n                            currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, startLine, startOffset, true);\n                            this.deleteParagraphMark(currentParagraph, selection, editAction, true);\n                            this.addRemovedNodes(paragraph);\n                        }\n                        else {\n                            if (start.paragraph !== end.paragraph && startOffset !== paragraph.getLength()) {\n                                var para = new ParagraphWidget();\n                                para.childWidgets = undefined;\n                                this.addRemovedNodes(para);\n                                this.insertRevision(paragraph.characterFormat, 'Deletion');\n                            }\n                            this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n                            if (startOffset !== paragraph.getLength()) {\n                                var lastLine = paragraph.lastChild;\n                                if (lastLine.children.length > 0) {\n                                    var lastEle = lastLine.children[lastLine.children.length - 1];\n                                    this.combineElementRevision(lastEle.revisions, paragraph.characterFormat.revisions);\n                                }\n                                if (paragraph.isEmpty()) {\n                                    this.combineRevisionWithBlocks(paragraph);\n                                }\n                                else {\n                                    this.combineRevisionWithBlocks(paragraph.lastChild.children[paragraph.lastChild.children.length - 1]);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (!start.currentWidget.isFirstLine() && paragraph.lastChild === end.currentWidget && !isCombineNextParagraph) {\n                            this.removeInlines(paragraph, startLine, startOffset, endLineWidget, endOffset, editAction);\n                        }\n                        else {\n                            if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' && start.paragraph === paragraph && end.paragraph != paragraph && startOffset >= paragraphStart && isCombineNextParagraph) {\n                                isCombineLastBlock = true;\n                            }\n                            currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, startLine, startOffset, true);\n                            if (!isNullOrUndefined(currentParagraph) && !isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                                this.deletaRevisionIDs(currentParagraph.characterFormat);\n                            }\n                            var skipHistoryCollection = false;\n                            if (!end.paragraph.isEmpty() && isCombineNextParagraph && !(this.editorHistory && this.editorHistory.currentHistoryInfo && this.editorHistory.currentHistoryInfo.action === 'PageBreak')) {\n                                skipHistoryCollection = true;\n                            }\n                            this.insertParagraphPaste(paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock, skipHistoryCollection);\n                            this.removeRevisionForBlock(paragraph, undefined, false, true);\n                            this.addRemovedNodes(paragraph);\n                            isCombineLastBlock = false;\n                        }\n                    }\n                }\n                return;\n            }\n        }\n        else {\n            if (end.paragraph === paragraph && end.paragraph.isInsideTable && (start.currentWidget.isFirstLine() && start.offset > selection.getStartOffset(start.paragraph) || !start.currentWidget.isFirstLine()) &&\n                end.offset >= selection.getLineLength(end.paragraph.lastChild) && end.paragraph.nextRenderedWidget) {\n                this.combineLastBlock = true;\n            }\n            var newParagraph = undefined;\n            var previousBlock = paragraph.previousWidget;\n            var prevParagraph = (previousBlock instanceof ParagraphWidget) ? previousBlock : undefined;\n            var nextWidget = paragraph.nextRenderedWidget;\n            if (editAction < 4) {\n                //Checks whether this is last paragraph of owner text body and previousBlock is not paragraph.\n                if (this.owner.enableTrackChanges && !this.skipTracking() && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action !== 'TOC') {\n                    var removedNodeLength = -1;\n                    if (this.editorHistory.currentBaseHistoryInfo) {\n                        removedNodeLength = this.editorHistory.currentBaseHistoryInfo.removedNodes.length;\n                    }\n                    this.insertRevisionForBlock(paragraph, 'Deletion');\n                    var charFormatRev = paragraph.characterFormat.revisions;\n                    if (!(end.paragraph.previousRenderedWidget instanceof TableWidget)\n                        && charFormatRev.length > 1\n                        && charFormatRev[charFormatRev.length - 2].revisionType == 'Insertion') {\n                        if (paragraph.isEmpty()) {\n                            newParagraph = this.checkAndInsertBlock(paragraph, start, end, editAction, prevParagraph);\n                            this.removeBlock(paragraph);\n                            if (removedNodeLength === -1) {\n                                this.addRemovedNodes(paragraph);\n                            }\n                            else {\n                                this.editorHistory.currentBaseHistoryInfo.removedNodes.splice(removedNodeLength, 0, paragraph);\n                            }\n                            this.removeRevisionForBlock(paragraph, undefined, false, true);\n                        }\n                        else {\n                            while (paragraph.characterFormat.revisions.length !== 0) {\n                                this.removePrevParaMarkRevision(paragraph, true);\n                            }\n                            this.deleteParagraphMark(paragraph, selection, editAction, false);\n                            nextWidget = paragraph.nextRenderedWidget;\n                        }\n                    }\n                    else {\n                        if (paragraph.isEmpty()) {\n                            this.combineRevisionWithBlocks(paragraph);\n                        }\n                        else {\n                            // On deleting para, para items may be added with delete revisions so we need to ensure whether it can be combined with prev/ next para.\n                            this.combineRevisionWithBlocks(paragraph.firstChild.children[0]);\n                        }\n                    }\n                    if (this.editorHistory.currentBaseHistoryInfo.action === 'Delete' && !this.isInsertingTOC) {\n                        // Changed the condition to update editposition if current para contains revision (deletion) and previous para contain revision (insertion) and both are selected case.\n                        if ((paragraph === end.paragraph && paragraph.containerWidget && !paragraph.isEmpty()) || (isNullOrUndefined(start.paragraph.containerWidget) && !isNullOrUndefined(end.paragraph.containerWidget) && !end.paragraph.isEmpty())) {\n                            var paraInfo = this.selection.getParagraphInfo(end);\n                            this.selection.editPosition = this.selection.getHierarchicalIndex(paraInfo.paragraph, paraInfo.offset.toString());\n                        }\n                    }\n                    if (start.paragraph !== paragraph && !isNullOrUndefined(block)) {\n                        this.delBlockContinue = true;\n                        this.delBlock = block;\n                        return;\n                    }\n                }\n                else {\n                    //this.documentHelper.comments;\n                    var foot = void 0;\n                    /*  if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.footnoteWidget)) {\n                          foot = selection.start.paragraph.bodyWidget.page.footnoteWidget;\n                      }else if (!isNullOrUndefined(selection.start.paragraph.bodyWidget.page.endnoteWidget)) {\n                          foot = selection.start.paragraph.bodyWidget.page.endnoteWidget;\n                      }*/\n                    newParagraph = this.checkAndInsertBlock(paragraph, start, end, editAction, prevParagraph);\n                    this.removeRevisionForBlock(paragraph, undefined, false, true);\n                    // Added the condition to skip to add entair paragraph (with para mark) into history if the current widget has the last widget. \n                    var isLastChild = (paragraph == this.getLastParaForBodywidgetCollection(paragraph));\n                    if (this.owner.enableTrackChanges && isLastChild) {\n                        for (var i = paragraph.childWidgets.length - 1; i > -1; i--) {\n                            var line = (paragraph.childWidgets[i]);\n                            this.removeContent(line, 0, this.documentHelper.selection.getLineLength(line), undefined, false);\n                        }\n                    }\n                    else {\n                        // Added the condition to remove section if current and next para have different section indexes if selection is covered till the end of first section.\n                        var nextParagraph = this.selection.getNextParagraphBlock(paragraph);\n                        if (!isLastChild && !paragraph.isInsideTable && !isNullOrUndefined(nextParagraph) && !nextParagraph.isInsideTable && paragraph.bodyWidget.sectionIndex !== nextParagraph.bodyWidget.sectionIndex) {\n                            this.deleteSection(selection, paragraph.bodyWidget, nextParagraph.bodyWidget, editAction);\n                            isStartParagraph = true;\n                        }\n                        this.addRemovedNodes(paragraph);\n                    }\n                    if (!isNullOrUndefined(block) && !isStartParagraph && !paraReplace) {\n                        this.delBlock = block;\n                        var nextSection = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n                        if (nextSection && section.index !== nextSection.index) {\n                            var bodyWidget = paragraph.bodyWidget instanceof BodyWidget ? paragraph.bodyWidget : undefined;\n                            this.deleteSection(selection, nextSection, bodyWidget, editAction);\n                        }\n                    }\n                    this.removeBlock(paragraph);\n                    /* let widget: IWidget;\n                     for(let i:number =0;i< foot.childWidgets.length; i++) {\n                     widget = foot.childWidgets[i];\n                     if (widget instanceof ParagraphWidget) {\n \n                     let para: ParagraphWidget = widget;\n                     if (!isNullOrUndefined(para)) {\n                         this.removeBlock(para);\n                     }}}*/\n                }\n                if (this.documentHelper.blockToShift === paragraph) {\n                    this.documentHelper.blockToShift = undefined;\n                }\n                if (!isNullOrUndefined(newParagraph)) {\n                    selection.editPosition = this.selection.getHierarchicalIndex(newParagraph, '0');\n                    var offset = selection.getParagraphLength(newParagraph) + 1;\n                    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                        this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(newParagraph, offset.toString());\n                    }\n                }\n                else if (paragraph === start.paragraph && (isNullOrUndefined(nextWidget) || (!isNullOrUndefined(nextWidget) && !isNullOrUndefined(section) && section.index !== nextWidget.bodyWidget.index)) && !isNullOrUndefined(prevParagraph)) {\n                    var offset = this.selection.getParagraphLength(prevParagraph);\n                    // if (isNullOrUndefined(block)) {\n                    selection.editPosition = this.selection.getHierarchicalIndex(prevParagraph, offset.toString());\n                    if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                        this.updateHistoryPosition(selection.editPosition, true);\n                        this.editorHistory.currentBaseHistoryInfo.endPosition = selection.editPosition;\n                    }\n                    // } else {\n                    //     let offset: number = selection.getParagraphLength(paragraph) + 1;\n                    //     if (block instanceof ParagraphWidget) {\n                    //         prevParagraph = block as ParagraphWidget;\n                    //     }\n                    //     // if (block instanceof WTable) {\n                    //     //     prevParagraph = (block as WTable).getFirstParagraphInFirstCell();\n                    //     // }\n                    //     selection.editPosition = prevLineWidget.getHierarchicalIndex('0');\n                    // }\n                }\n            }\n            if (start.paragraph !== paragraph && !isNullOrUndefined(block)) {\n                this.delBlockContinue = true;\n                this.delBlock = block;\n            }\n            else {\n                this.delBlockContinue = false;\n                this.delBlock = undefined;\n            }\n        }\n        this.insertParagraphPaste(paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock);\n    };\n    Editor.prototype.deletaRevisionIDs = function (format) {\n        if (format.removedIds.length > 0) {\n            while (format.removedIds.length > 0) {\n                format.removedIds.splice(0, 1);\n            }\n        }\n    };\n    Editor.prototype.deleteSection = function (selection, section, nextSection, editAction) {\n        if (editAction < 4) {\n            if (this.owner.enableCollaborativeEditing) {\n                var paragraphInfo = void 0;\n                var positionInfo = void 0;\n                // Find the start linear index of deleted HeadersFooters\n                var headerFooterWidget = this.owner.documentHelper.headersFooters[section.sectionIndex]['0'];\n                if (!isNullOrUndefined(headerFooterWidget)) {\n                    paragraphInfo = { 'paragraph': headerFooterWidget.firstChild, 'offset': 0 };\n                    positionInfo = this.owner.selectionModule.getPositionInfoForHeaderFooter(paragraphInfo, { position: 0, done: false });\n                    this.editorHistory.currentBaseHistoryInfo.headerFooterStart = positionInfo.position;\n                }\n                // Find the end linear index of deleted HeadersFooters\n                var keyCount = Object.keys(this.owner.documentHelper.headersFooters[section.sectionIndex]).length;\n                if (keyCount > 0) {\n                    headerFooterWidget = this.owner.documentHelper.headersFooters[section.sectionIndex][(keyCount - 1).toString()];\n                    if (!isNullOrUndefined(headerFooterWidget)) {\n                        var paraLength = this.owner.selectionModule.getParagraphLength(headerFooterWidget.lastChild);\n                        paragraphInfo = { 'paragraph': headerFooterWidget.lastChild, 'offset': paraLength + 1 };\n                        positionInfo = this.owner.selectionModule.getPositionInfoForHeaderFooter(paragraphInfo, { position: 0, done: false });\n                        this.editorHistory.currentBaseHistoryInfo.headerFooterEnd = positionInfo.position;\n                    }\n                }\n            }\n            this.combineSectionInternal(selection, section, nextSection);\n        }\n        //Copies the section properties, if this is last paragraph of section.\n        if (editAction > 2) {\n            section.sectionFormat.copyFormat(nextSection.sectionFormat);\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Editor.prototype.combineSectionInternal = function (selection, section, nextSection) {\n        // if (section.sectionFormat.isEqualFormat(nextSection.sectionFormat)) {\n        // } else {\n        var bodyWidget = section.getSplitWidgets()[0];\n        var currentSection = [];\n        var previousY = bodyWidget.y;\n        this.combineSectionChild(bodyWidget, currentSection, true);\n        bodyWidget = currentSection[0];\n        var lastBlockIndex = bodyWidget.lastChild.index;\n        this.updateBlockIndex(lastBlockIndex + 1, nextSection.firstChild);\n        var insertIndex = 0;\n        var containerWidget = nextSection;\n        containerWidget.y = previousY;\n        for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n            var block = bodyWidget.childWidgets.splice(i, 1)[0];\n            containerWidget.childWidgets.splice(insertIndex, 0, block);\n            block.containerWidget = containerWidget;\n            this.documentHelper.layout.layoutBodyWidgetCollection(block.index, block.bodyWidget, block, false);\n            block = block.getSplitWidgets().pop();\n            containerWidget = block.containerWidget;\n            insertIndex = block.indexInOwner + 1;\n            i--;\n        }\n        if (bodyWidget.sectionIndex > 0 && this.documentHelper.headersFooters[bodyWidget.sectionIndex]) {\n            bodyWidget.removedHeaderFooters = [];\n            var headerFooters = this.documentHelper.headersFooters.splice(bodyWidget.sectionIndex, 1)[0];\n            var keys = Object.keys(headerFooters);\n            for (var i = 0; i < keys.length; i++) {\n                var headerWidgetIn = headerFooters[keys[i]];\n                //if (headerWidgetIn.page) {\n                this.removeFieldInWidget(headerWidgetIn);\n                // Remove content control\n                this.removeFieldInWidget(headerWidgetIn, false, true);\n                //}\n                headerWidgetIn.page = undefined;\n            }\n            bodyWidget.removedHeaderFooters.push(headerFooters);\n        }\n        this.updateSectionIndex(undefined, nextSection, false);\n        this.addRemovedNodes(bodyWidget);\n        this.documentHelper.removeEmptyPages();\n        if (this.editorHistory && this.editorHistory.isUndoing) {\n            nextSection.sectionFormat = section.sectionFormat;\n        }\n        var page = nextSection.page;\n        do {\n            this.documentHelper.layout.layoutHeaderFooter(page.bodyWidgets[0], this.viewer, page);\n            page = page.nextPage;\n        } while (page);\n        // }\n    };\n    /* eslint-disable max-len */\n    Editor.prototype.checkAndInsertBlock = function (block, start, end, editAction, previousParagraph) {\n        if (block instanceof ParagraphWidget && block === start.paragraph || block instanceof TableWidget) {\n            var newParagraph = void 0; //Adds an empty paragraph, to ensure minimal content.\n            if (isNullOrUndefined(block.nextRenderedWidget) && (isNullOrUndefined(previousParagraph) || previousParagraph.nextRenderedWidget instanceof TableWidget)) {\n                newParagraph = new ParagraphWidget();\n                if (editAction === 1 && block instanceof ParagraphWidget && !isNullOrUndefined(block.paragraphFormat.baseStyle) && block.paragraphFormat.baseStyle.name === 'Normal') {\n                    newParagraph.characterFormat.copyFormat(block.characterFormat);\n                    // Added the condition to remove removedIds when document contain single empty paragraph\n                    if (isNullOrUndefined(block.previousRenderedWidget) && newParagraph.characterFormat.removedIds.length !== 0) {\n                        while (newParagraph.characterFormat.removedIds.length > 0) {\n                            newParagraph.characterFormat.removedIds.splice(0, 1);\n                        }\n                    }\n                    newParagraph.paragraphFormat.copyFormat(block.paragraphFormat);\n                }\n                newParagraph.index = block.index + 1;\n                newParagraph.containerWidget = block.containerWidget;\n                if (block instanceof ParagraphWidget) {\n                    newParagraph.paragraphFormat.lineSpacing = block.paragraphFormat.lineSpacing;\n                    newParagraph.paragraphFormat.lineSpacingType = block.paragraphFormat.lineSpacingType;\n                    var style = this.documentHelper.styles.findByName('Normal');\n                    if (!isNullOrUndefined(style)) {\n                        newParagraph.paragraphFormat.baseStyle = new WParagraphStyle();\n                        newParagraph.paragraphFormat.baseStyle.copyStyle(style);\n                    }\n                }\n                this.documentHelper.layout.layoutBodyWidgetCollection(newParagraph.index, newParagraph.bodyWidget, newParagraph, false);\n                if (block.containerWidget instanceof Widget) {\n                    block.containerWidget.childWidgets.push(newParagraph);\n                }\n            }\n            return newParagraph;\n        }\n        return undefined;\n    };\n    Editor.prototype.splitParagraph = function (paragraphAdv, startLine, startOffset, endLine, endOffset, removeBlock) {\n        var paragraph = new ParagraphWidget();\n        paragraph.paragraphFormat = new WParagraphFormat(paragraph);\n        paragraph.characterFormat = new WCharacterFormat(paragraph);\n        paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n        paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n        var lineWidget = new LineWidget(paragraph);\n        paragraph.childWidgets.push(lineWidget);\n        var blockIndex = paragraphAdv.index;\n        var insertIndex = paragraphAdv.indexInOwner;\n        this.moveInlines(paragraphAdv, paragraph, 0, startOffset, startLine, endOffset, endLine, removeBlock);\n        if (paragraphAdv.containerWidget.childWidgets[insertIndex]) {\n            var line = (paragraphAdv.containerWidget.childWidgets[insertIndex]);\n            for (var i = 0; i < line.childWidgets.length; i++) {\n                var linewid = line.childWidgets[i];\n                for (var j = 0; j < linewid.children.length; j++) {\n                    var inline = linewid.children[j];\n                    if (inline instanceof FootnoteElementBox) {\n                        this.removeFootnote(inline);\n                    }\n                }\n            }\n        }\n        //Inserts new paragraph in the current text position.\n        paragraphAdv.containerWidget.childWidgets.splice(insertIndex, 0, paragraph);\n        paragraph.index = blockIndex;\n        paragraph.containerWidget = paragraphAdv.containerWidget;\n        this.updateNextBlocksIndex(paragraph, true);\n        if (removeBlock) {\n            this.removeBlock(paragraphAdv);\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, paragraph.containerWidget, paragraph, false);\n        return paragraph;\n    };\n    Editor.prototype.removeCommentsInBlock = function (block) {\n        if (block instanceof TableWidget) {\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                var row = block.childWidgets[i];\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    for (var k = 0; k < cell.childWidgets.length; k++) {\n                        var block_1 = cell.childWidgets[k];\n                        this.removeCommentsInBlock(block_1);\n                    }\n                }\n            }\n        }\n        else {\n            this.removeCommentInPara(block);\n        }\n    };\n    Editor.prototype.removeCommentInPara = function (block) {\n        for (var i = 0; i < block.childWidgets.length; i++) {\n            var lineWidget = block.childWidgets[i];\n            //Iterate through each line widgets.\n            for (var j = 0; j < lineWidget.children.length; j++) {\n                this.removeCommentsInline(lineWidget.children[j]);\n            }\n        }\n    };\n    Editor.prototype.removeCommentsInline = function (inline) {\n        if (inline instanceof CommentCharacterElementBox) {\n            if (inline.commentType === 1) {\n                // if (!inline.comment.isReply) {\n                //     for (let i: number = 0; i < inline.comment.replyComments.length; i++) {\n                //         this.removeCommentsInline(inline.comment.replyComments[i].commentEnd);\n                //     }\n                // }\n                // if (inline.comment.commentStart && inline.comment.commentStart.commentMark) {\n                //     inline.comment.commentStart.removeCommentMark();\n                // }\n                // if (!inline.comment.isReply && this.documentHelper.comments.indexOf(inline.comment) >= 0\n                //     || inline.comment.isReply && this.documentHelper.comments.indexOf(inline.comment.ownerComment) >= 0) {\n                //     this.deleteCommentWidget(inline.comment);\n                // }\n            }\n            else {\n                inline.removeCommentMark();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeBlock = function (block, isSkipShifting, skipElementRemoval) {\n        var index;\n        var blockCollection;\n        var containerWidget;\n        if (!skipElementRemoval) {\n            this.removeFieldInBlock(block);\n            this.removeFieldInBlock(block, true);\n            this.removeFieldInBlock(block, undefined, true);\n            this.removeCommentsInBlock(block);\n        }\n        if (block.isInsideTable) {\n            containerWidget = block.associatedCell;\n            index = block.associatedCell.childWidgets.indexOf(block);\n            blockCollection = block.associatedCell.childWidgets;\n            this.updateNextBlocksIndex(block, false);\n            block.associatedCell.childWidgets.splice(index, 1);\n            block.containerWidget = undefined;\n            this.documentHelper.layout.layoutBodyWidgetCollection(block.index, containerWidget, block, false);\n        }\n        else {\n            containerWidget = block.containerWidget;\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                var isSkipTracking = void 0;\n                if (!this.isPasteRevertAction()) {\n                    isSkipTracking = this.skipTracking();\n                }\n                if (block.childWidgets[i] instanceof TableRowWidget && !isSkipTracking) {\n                    var tableDelete = block.childWidgets[i];\n                    this.removeDeletedCellRevision(tableDelete);\n                }\n                if (block.childWidgets[i] instanceof LineWidget) {\n                    var line = block.childWidgets[i];\n                    for (var j = 0; j < line.children.length; j++) {\n                        var element = line.children[j];\n                        if (element instanceof FootnoteElementBox && !this.selection.isEmpty) {\n                            this.removeFootnote(element);\n                        }\n                    }\n                }\n            }\n            index = containerWidget.childWidgets.indexOf(block);\n            blockCollection = containerWidget.childWidgets;\n            this.updateNextBlocksIndex(block, false);\n            containerWidget.childWidgets.splice(index, 1);\n            block.containerWidget = undefined;\n            containerWidget.height -= block.height;\n            if (!isNullOrUndefined(containerWidget.containerWidget) && containerWidget.containerWidget instanceof FootNoteWidget) {\n                containerWidget.containerWidget.height -= block.height;\n            }\n            this.documentHelper.layout.layoutBodyWidgetCollection(block.index, containerWidget, block, false, isSkipShifting);\n        }\n    };\n    Editor.prototype.removePrevParaMarkRevision = function (currentBlock, isFromDelete) {\n        isFromDelete = isNullOrUndefined(isFromDelete) ? false : isFromDelete;\n        if (this.owner.enableTrackChanges || currentBlock.characterFormat.revisions.length != 0) {\n            var currentPara = currentBlock;\n            var rangeIndex = -1;\n            var revision = void 0;\n            var nonEmptyEndPara = currentPara;\n            if (!isFromDelete && !isNullOrUndefined(nonEmptyEndPara.previousRenderedWidget)) {\n                nonEmptyEndPara = nonEmptyEndPara.previousRenderedWidget;\n            }\n            if (nonEmptyEndPara.characterFormat.revisions.length > 0) {\n                revision = nonEmptyEndPara.characterFormat.revisions[nonEmptyEndPara.characterFormat.revisions.length - 1];\n                rangeIndex = revision.range.indexOf(nonEmptyEndPara.characterFormat);\n            }\n            if (rangeIndex >= 0 && !isNullOrUndefined(revision)) {\n                var lastRange = revision.range[rangeIndex];\n                var isParaMark = lastRange instanceof WCharacterFormat;\n                if (isParaMark) {\n                    revision.range.splice(rangeIndex, 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                    if (nonEmptyEndPara.characterFormat && nonEmptyEndPara.characterFormat.revisions.indexOf(revision) > -1) {\n                        nonEmptyEndPara.characterFormat.revisions.splice(nonEmptyEndPara.characterFormat.revisions.indexOf(revision), 1);\n                    }\n                    if (revision.range.length == 0) {\n                        this.owner.revisionsInternal.remove(revision);\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.isPasteRevertAction = function () {\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.toCheckForTrack = function (block) {\n        if (this.owner.enableTrackChanges && !this.skipTracking()) {\n            if (block instanceof TableWidget && block.childWidgets.length > 0) {\n                var rowFormat = block.childWidgets[0].rowFormat;\n                if ((rowFormat.revisions.length > 0 && rowFormat.revisions[0].revisionType !== 'Insertion'\n                    && rowFormat.revisions[0].author === (this.owner.currentUser === '' ? 'Guest user' : this.owner.currentUser))\n                    || (rowFormat.revisions.length === 0)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeFootnote = function (element, paragraph) {\n        if (element.paragraph.bodyWidget.page.footnoteWidget) {\n            var footnoteWidget = element.paragraph.bodyWidget.page.footnoteWidget;\n            for (var j = 0; j < footnoteWidget.bodyWidgets.length; j++) {\n                if (element === (footnoteWidget.bodyWidgets[j]).footNoteReference) {\n                    footnoteWidget.height -= footnoteWidget.bodyWidgets[j].childWidgets[0].height;\n                    if (this.owner.enableTrackChanges) {\n                        for (var i = 0; i < footnoteWidget.bodyWidgets[j].childWidgets.length; i++) {\n                            this.removeRevisionForBlock(footnoteWidget.bodyWidgets[j].childWidgets[i], undefined, false, true);\n                        }\n                    }\n                    footnoteWidget.bodyWidgets.splice(j, 1);\n                    j--;\n                    this.isFootnoteElementRemoved = true;\n                }\n            }\n            if (footnoteWidget.bodyWidgets.length === 0) {\n                element.paragraph.bodyWidget.page.footnoteWidget = undefined;\n            }\n        }\n        this.documentHelper.footnoteCollection.splice(this.documentHelper.footnoteCollection.indexOf(element), 1);\n        this.updateFootNoteIndex();\n    };\n    Editor.prototype.removeEndnote = function (element, paragraph) {\n        var lastpage = this.documentHelper.pages.length;\n        var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n        if (bodyWidget.page.endnoteWidget) {\n            var endnoteWidget = bodyWidget.page.endnoteWidget;\n            for (var j = 0; j < endnoteWidget.bodyWidgets.length; j++) {\n                if (element === (endnoteWidget.bodyWidgets[j]).footNoteReference) {\n                    endnoteWidget.height -= endnoteWidget.bodyWidgets[j].childWidgets[0].height;\n                    endnoteWidget.bodyWidgets.splice(j, 1);\n                    this.isEndnoteElementRemoved = true;\n                    j--;\n                }\n            }\n            if (endnoteWidget.bodyWidgets.length === 0) {\n                bodyWidget.page.endnoteWidget = undefined;\n            }\n        }\n        this.documentHelper.endnoteCollection.splice(this.documentHelper.endnoteCollection.indexOf(element), 1);\n        this.updateEndNoteIndex();\n    };\n    Editor.prototype.removeAutoShape = function (inline) {\n        var shapeIndex = inline.line.paragraph.floatingElements.indexOf(inline);\n        var floatingElementIndex = inline.line.paragraph.bodyWidget.floatingElements.indexOf(inline);\n        if (floatingElementIndex > -1) {\n            inline.line.paragraph.bodyWidget.floatingElements.splice(floatingElementIndex, 1);\n        }\n        inline.line.paragraph.floatingElements.splice(shapeIndex, 1);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeField = function (block, isBookmark, isContentControl) {\n        var collection = this.documentHelper.fields;\n        if (isBookmark) {\n            collection = this.documentHelper.bookmarks.keys;\n        }\n        else if (isContentControl) {\n            collection = this.documentHelper.contentControlCollection;\n        }\n        if (block.floatingElements.length > 0) {\n            for (var z = 0; z < block.floatingElements.length; z++) {\n                var inline = block.floatingElements[z];\n                this.removeAutoShape(inline);\n                z--;\n            }\n        }\n        for (var i = 0; i < collection.length; i++) {\n            var element = isBookmark ?\n                this.documentHelper.bookmarks.get(collection[i]) : collection[i];\n            if (element.line.paragraph === block || (element instanceof BookmarkElementBox && !isNullOrUndefined(element.reference) && element.reference.line.paragraph === block)) {\n                if (isBookmark) {\n                    this.documentHelper.bookmarks.remove(collection[i]);\n                    element.line.children.splice(element.indexInOwner, 1);\n                    if (!isNullOrUndefined(element.line.paragraph.associatedCell)) {\n                        var cell = element.line.paragraph.associatedCell;\n                        cell.isRenderBookmarkStart ? cell.isRenderBookmarkStart = false : cell.isRenderBookmarkEnd = false;\n                    }\n                    var endBookMarkElement = element.reference;\n                    if (endBookMarkElement) {\n                        endBookMarkElement.line.children.splice(endBookMarkElement.indexInOwner, 1);\n                    }\n                    if (endBookMarkElement && !isNullOrUndefined(endBookMarkElement.line.paragraph.associatedCell)) {\n                        var cell = endBookMarkElement.line.paragraph.associatedCell;\n                        cell.isRenderBookmarkStart ? cell.isRenderBookmarkStart = false : cell.isRenderBookmarkEnd = false;\n                    }\n                }\n                else if (isContentControl) {\n                    this.documentHelper.contentControlCollection.splice(i, 1);\n                }\n                else {\n                    this.documentHelper.fields.splice(i, 1);\n                    if (this.documentHelper.formFields.indexOf(element) !== -1) {\n                        this.documentHelper.formFields.splice(this.documentHelper.formFields.indexOf(element), 1);\n                    }\n                }\n                i--;\n            }\n        }\n        if (this.documentHelper.footnoteCollection.length > 0) {\n            for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n                var element = this.documentHelper.footnoteCollection[i];\n                if (element.line.paragraph === block) {\n                    if (element.paragraph.bodyWidget.page.footnoteWidget) {\n                        var footnote = element.paragraph.bodyWidget.page.footnoteWidget;\n                        for (var j = 0; j < footnote.bodyWidgets.length; j++) {\n                            if (element === (footnote.bodyWidgets[j]).footNoteReference) {\n                                footnote.height -= (footnote.bodyWidgets[j]).height;\n                                footnote.bodyWidgets.splice(j, 1);\n                                j--;\n                            }\n                        }\n                        if (footnote.bodyWidgets.length === 0) {\n                            element.paragraph.bodyWidget.page.footnoteWidget = undefined;\n                        }\n                    }\n                    this.documentHelper.footnoteCollection.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        if (this.documentHelper.endnoteCollection.length > 0) {\n            for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n                var element = this.documentHelper.endnoteCollection[i];\n                if (element.line.paragraph === block) {\n                    if (element.paragraph.bodyWidget.page.endnoteWidget) {\n                        var endnote = element.paragraph.bodyWidget.page.endnoteWidget;\n                        for (var j = 0; j < endnote.bodyWidgets.length; j++) {\n                            if (element === (endnote.bodyWidgets[j]).footNoteReference) {\n                                endnote.height -= (endnote.bodyWidgets[j]).height;\n                                endnote.bodyWidgets.splice(j, 1);\n                                j--;\n                            }\n                        }\n                        if (endnote.bodyWidgets.length === 0) {\n                            element.paragraph.bodyWidget.page.endnoteWidget = undefined;\n                        }\n                    }\n                    this.documentHelper.endnoteCollection.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getTabsInSelection = function () {\n        var oldTabstops = [];\n        var selection = this.owner.selectionModule;\n        var selectedWidgets = selection.selectedWidgets.keys;\n        var paragraphsInSelection = [];\n        if (selectedWidgets.length === 0) {\n            return selection.start.paragraph.paragraphFormat.getUpdatedTabs();\n        }\n        else if (selection.start.paragraph === selection.end.paragraph) {\n            return selection.start.paragraph.paragraphFormat.getUpdatedTabs();\n        }\n        else if (selection.start.paragraph !== selection.end.paragraph) {\n            paragraphsInSelection = this.owner.selectionModule.getParagraphsInSelection();\n        }\n        var para = paragraphsInSelection.length > 0 ? paragraphsInSelection[0] : undefined;\n        var tabs = !isNullOrUndefined(para) ? para.paragraphFormat.getUpdatedTabs() : [];\n        var isRemove = true;\n        for (var j = 0; j < tabs.length; j++) {\n            oldTabstops.push(tabs[j]);\n        }\n        for (var i = 1; i < paragraphsInSelection.length; i++) {\n            var para_1 = paragraphsInSelection[i];\n            var newCollection = para_1.paragraphFormat.getUpdatedTabs();\n            var itemsToRemove = [];\n            isRemove = true;\n            for (var k = 0; k < oldTabstops.length; k++) {\n                for (var j = 0; j < newCollection.length; j++) {\n                    if (newCollection[j].equals(oldTabstops[k])) {\n                        isRemove = false;\n                        break;\n                    }\n                }\n                if (isRemove) {\n                    itemsToRemove.push(oldTabstops[k]);\n                }\n            }\n            for (var k = 0; k < itemsToRemove.length; k++) {\n                oldTabstops.splice(oldTabstops.indexOf(itemsToRemove[k]), 1);\n            }\n        }\n        return oldTabstops;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.updateTabStopCollection = function (paragraph, newCollection, isReplace) {\n        var oldCollection = paragraph.paragraphFormat.tabs;\n        if (isReplace) {\n            paragraph.paragraphFormat.tabs = [];\n            for (var i = 0; i < newCollection.length; i++) {\n                paragraph.paragraphFormat.tabs.push(newCollection[i]);\n            }\n            return;\n        }\n        for (var i = 0; i < newCollection.length; i++) {\n            var newTab = newCollection[i];\n            var index = -1;\n            for (var j = 0; j < oldCollection.length; j++) {\n                var oldTab = oldCollection[j];\n                if (newTab.position === oldTab.position) {\n                    index = j;\n                    break;\n                }\n                else if (newTab.position < oldTab.position) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                this.modifyTabStop(oldCollection[index], newTab);\n            }\n            else {\n                this.addTabStopToCollection(oldCollection, newTab);\n            }\n        }\n    };\n    Editor.prototype.modifyTabStop = function (oldTab, newTab) {\n        oldTab.deletePosition = newTab.deletePosition;\n        oldTab.tabJustification = newTab.tabJustification;\n        oldTab.tabLeader = newTab.tabLeader;\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeTabStops = function (paragraphs, tabs) {\n        for (var k = 0; k < paragraphs.length; k++) {\n            var tabCollection = paragraphs[k].paragraphFormat.tabs;\n            for (var i = 0; i < tabs.length; i++) {\n                var tab = tabs[i];\n                for (var j = 0; j < tabCollection.length; j++) {\n                    if (tabCollection[j].equals(tab)) {\n                        tabCollection.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.addTabStopToCollection = function (collection, tab, isReturnIndex) {\n        var index = -1;\n        for (var i = 0; i < collection.length; i++) {\n            var element = collection[i];\n            if (element.position > tab.position) {\n                index = i;\n                break;\n            }\n        }\n        index = index === -1 ? collection.length : index;\n        if (isReturnIndex) {\n            return index;\n        }\n        collection.splice(index, 0, tab.clone());\n        return index;\n    };\n    /**\n     * @private\n     * @param {IWidget} node Specifies the node.\n     * @returns {void}\n     */\n    Editor.prototype.addRemovedNodes = function (node, isInsertBefore) {\n        if (node instanceof CommentCharacterElementBox && node.commentType === 0 && node.commentMark) {\n            node.removeCommentMark();\n        }\n        if (node instanceof ContentControl && node.type === 0) {\n            this.documentHelper.contentControlCollection.splice(this.documentHelper.contentControlCollection.indexOf(node), 1);\n        }\n        if (node instanceof FieldElementBox && node.fieldType === 0) {\n            if (this.documentHelper.fields.indexOf(node) !== -1) {\n                this.documentHelper.fields.splice(this.documentHelper.fields.indexOf(node), 1);\n            }\n            if (this.documentHelper.formFields.indexOf(node) !== -1) {\n                this.documentHelper.formFields.splice(this.documentHelper.formFields.indexOf(node), 1);\n            }\n        }\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            if (isInsertBefore) {\n                this.editorHistory.currentBaseHistoryInfo.removedNodes.splice(0, 0, node);\n            }\n            else {\n                this.editorHistory.currentBaseHistoryInfo.removedNodes.push(node);\n            }\n        }\n        else if (this.editHyperlinkInternal) {\n            this.nodes.push(node);\n        }\n    };\n    Editor.prototype.deleteBlock = function (block, selection, start, end, editAction) {\n        if (block instanceof ParagraphWidget) {\n            this.deletePara(block, start, end, editAction);\n            if (this.delBlockContinue && this.delBlock) {\n                if (this.delSection) {\n                    var bodyWidget = block.bodyWidget instanceof BodyWidget ? block.bodyWidget : undefined;\n                    this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n                    this.delSection = undefined;\n                }\n                if (this.delBlock.indexInOwner !== -1) {\n                    this.deleteBlock(this.delBlock, selection, start, end, editAction);\n                }\n                this.delBlockContinue = false;\n                this.delBlock = undefined;\n            }\n        }\n        else {\n            this.deleteTableBlock(block, selection, start, end, editAction);\n            if (this.owner.enableTrackChanges && !this.skipTracking()) {\n                this.documentHelper.layout.reLayoutTable(block);\n            }\n        }\n    };\n    Editor.prototype.deleteTableCell = function (cellAdv, selection, start, end, editAction, isDeletecell) {\n        var deletePreviousBlock = !(start.paragraph.isInsideTable && cellAdv.ownerTable.contains(start.paragraph.associatedCell));\n        var previousBlock = cellAdv.ownerTable.previousRenderedWidget;\n        if (start.paragraph.isInsideTable) {\n            var containerCell = selection.getContainerCellOf(cellAdv, start.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(start.paragraph.associatedCell)) {\n                var startCell = selection.getSelectedCell(cellAdv, containerCell);\n                var endCell = selection.getSelectedCell(start.paragraph.associatedCell, containerCell);\n                if (selection.containsCell(containerCell, start.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (selection.isCellSelected(containerCell, start, end)) {\n                        //Container cell is completely selected.\n                        this.updateEditPosition(containerCell, selection);\n                        if (editAction === 1 || isDeletecell) {\n                            //Specifically handled for backspace. Delete selected cell in current table.\n                            this.deleteCellsInTable(cellAdv.ownerRow.ownerTable, selection, start, end, editAction);\n                        }\n                        else {\n                            //Delete contents within table cell or Copy contents within table cell to clipboard.\n                            var isCellCleared = this.deleteCell(containerCell, selection, editAction, true);\n                            if (!isCellCleared && editAction !== 2 && this.editorHistory) {\n                                this.editorHistory.currentBaseHistoryInfo = undefined;\n                            }\n                            else if (isCellCleared) {\n                                this.documentHelper.layout.reLayoutTable(containerCell.ownerRow.ownerTable);\n                            }\n                        }\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.deletePara(end.paragraph, start, end, editAction);\n                            if (this.delBlockContinue && this.delBlock) {\n                                if (this.delSection) {\n                                    var para = end.paragraph;\n                                    var bodyWidget = para.bodyWidget instanceof BodyWidget ? para.bodyWidget : undefined;\n                                    this.deleteSection(selection, this.delSection, bodyWidget, editAction);\n                                    this.delSection = undefined;\n                                }\n                                this.deleteBlock(this.delBlock, selection, start, end, editAction);\n                                this.delBlockContinue = false;\n                                this.delBlock = undefined;\n                            }\n                        }\n                        else {\n                            this.deleteContainer(startCell, selection, start, end, editAction);\n                        }\n                    }\n                }\n                else {\n                    if (editAction === 2) {\n                        //Delete contents within table cell.\n                        this.deleteCell(cellAdv, selection, 2, false);\n                    }\n                    else {\n                        //Delete other selected cells in current table.\n                        this.deleteCellsInTable(containerCell.ownerTable, selection, start, end, editAction);\n                    }\n                }\n            }\n            else {\n                //Selection end is different table.\n                this.deleteContainer(containerCell, selection, start, end, editAction);\n            }\n        }\n        else {\n            //Selection end is outside table.\n            var cell = selection.getContainerCell(cellAdv);\n            //Added the condition to remove the entire table when the selection contains a table with the above paragraph.\n            if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                this.deleteTableBlock(cell.ownerTable, selection, start, end, editAction);\n                deletePreviousBlock = false;\n            }\n            else {\n                this.deleteContainer(cell, selection, start, end, editAction);\n            }\n        }\n        if (deletePreviousBlock) {\n            var sectionAdv = previousBlock.bodyWidget instanceof BodyWidget ? previousBlock.bodyWidget : undefined;\n            // this.deleteContent(cellAdv.ownerTable, selection, editAction);\n            if (!isNullOrUndefined(previousBlock)) {\n                // let nextSection: WSection = blockAdv.section instanceof WSection ? blockAdv.section as WSection : undefined;\n                // if (sectionAdv !== nextSection) {\n                //     this.deleteSection(selection, sectionAdv, nextSection, editAction);\n                // }\n                //Goto the next block.\n                this.deleteBlock(previousBlock, selection, start, end, editAction);\n            }\n        }\n    };\n    Editor.prototype.deleteCellsInTable = function (table, selection, start, end, editAction, endCells) {\n        var clonedTable = undefined;\n        var action = 'Delete';\n        var isDeleteCells = false;\n        var startCell = start.paragraph.associatedCell;\n        var endCell = end.paragraph.associatedCell;\n        if (!isNullOrUndefined(endCells)) {\n            endCell = endCells;\n        }\n        var startColumnIndex = startCell.columnIndex;\n        var endColumnIndex = endCell.columnIndex + endCell.cellFormat.columnSpan - 1;\n        var startRowIndex = startCell.rowIndex;\n        var endRowIndex = endCell.rowIndex;\n        var isRowSelected = this.isWholeRowSelected(startCell.ownerRow, startColumnIndex, endColumnIndex);\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            action = this.editorHistory.currentBaseHistoryInfo.action;\n            isDeleteCells = this.editorHistory.currentBaseHistoryInfo.action === 'BackSpace' || this.editorHistory.currentBaseHistoryInfo.action === 'DeleteCells'\n                || this.editorHistory.currentBaseHistoryInfo.action === 'InsertTable' || this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack' || (isNullOrUndefined(startCell.ownerRow.previousWidget)\n                && isNullOrUndefined(endCell.ownerRow.nextWidget) && this.editorHistory.currentBaseHistoryInfo.action === 'Cut');\n            clonedTable = this.cloneTableToHistoryInfo(table);\n            if (this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack') {\n                for (var i = 0; i < table.childWidgets.length; i++) {\n                    var row = table.childWidgets[i];\n                    if (row.index >= startRowIndex && row.index <= endRowIndex) {\n                        if (isRowSelected) {\n                            this.trackRowDeletion(row, false);\n                        }\n                    }\n                }\n            }\n            if (this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack') {\n                return;\n            }\n            this.editorHistory.currentBaseHistoryInfo.action = isDeleteCells ? 'DeleteCells' : 'ClearCells';\n            selection.owner.isLayoutEnabled = false;\n        }\n        //let cells: TableCellWidget[] = [];\n        if (this.owner.enableTrackChanges && !this.skipTracking()) {\n            if (!isRowSelected) {\n                var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n                var tiltle = localizeValue.getConstant('UnTrack');\n                var content = localizeValue.getConstant('Merge Track');\n                localizeValue.setLocale(this.owner.locale);\n                this.alertDialog = DialogUtility.alert({\n                    title: tiltle,\n                    content: content,\n                    showCloseIcon: true,\n                    okButton: {\n                        text: 'Ok', click: this.onConfirmedTableCellsDeletion.bind(this, table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action)\n                    },\n                    closeOnEscape: true, position: { X: 'center', Y: 'center' },\n                    animationSettings: { effect: 'Zoom' }\n                });\n                this.alertDialog.enableRtl = this.owner.enableRtl;\n            }\n            else {\n                this.onConfirmedTableCellsDeletion(table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action);\n            }\n        }\n        else {\n            this.onConfirmedTableCellsDeletion(table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action);\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeDeletedCellRevision = function (row) {\n        if (row.rowFormat.revisions.length > 0) {\n            this.unlinkRangeFromRevision(row.rowFormat, true);\n        }\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            for (var j = 0; j < cellWidget.childWidgets.length; j++) {\n                var paraWidget = cellWidget.childWidgets[j];\n                if (!isNullOrUndefined(paraWidget) && paraWidget instanceof ParagraphWidget) {\n                    for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                        var lineWidget = paraWidget.childWidgets[lineIndex];\n                        if (!isNullOrUndefined(lineWidget.children)) {\n                            for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                                var element = lineWidget.children[elementIndex];\n                                if (element.revisions.length > 0) {\n                                    this.unlinkRangeFromRevision(element, true);\n                                }\n                            }\n                        }\n                    }\n                    this.unlinkRangeFromRevision(paraWidget.characterFormat, true);\n                }\n                else if (!isNullOrUndefined(paraWidget) && paraWidget instanceof TableWidget) {\n                    for (var k = 0; k < paraWidget.childWidgets.length; k++) {\n                        var tableRow = paraWidget.childWidgets[k];\n                        this.removeDeletedCellRevision(tableRow);\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.onConfirmedTableCellsDeletion = function (table, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction, isRowSelected, action) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            var canRemoveRow = false;\n            if (row.index >= startRowIndex && row.index <= endRowIndex) {\n                if (this.owner.enableTrackChanges && !this.skipTracking()) {\n                    if (isRowSelected) {\n                        canRemoveRow = this.trackRowDeletion(row, false);\n                        if (canRemoveRow) {\n                            this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n                        }\n                    }\n                    else {\n                        this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n                    }\n                }\n                else {\n                    this.onConfirmedCellDeletion(row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction);\n                }\n            }\n            if (!canRemoveRow && row.childWidgets.length === 0) {\n                var rowToRemove = table.childWidgets[i];\n                var prevRenderedRow = rowToRemove.previousRenderedWidget;\n                while (!isNullOrUndefined(prevRenderedRow)) {\n                    for (var k = 0; k < prevRenderedRow.childWidgets.length; k++) {\n                        var cell = prevRenderedRow.childWidgets[k];\n                        if (rowToRemove.rowIndex < cell.ownerRow.rowIndex + cell.cellFormat.rowSpan) {\n                            cell.cellFormat.rowSpan--;\n                        }\n                    }\n                    prevRenderedRow = prevRenderedRow.previousRenderedWidget;\n                }\n                this.updateNextBlocksIndex(rowToRemove, false);\n                table.childWidgets.splice(i, 1);\n                i--;\n                endRowIndex--;\n            }\n        }\n        //Layouts the table after delete cells.\n        selection.owner.isLayoutEnabled = true;\n        if (table.childWidgets.length === 0) {\n            selection.editPosition = this.selection.getHierarchicalIndex(table, '0');\n            this.setActionInternal(selection, action);\n            this.removeBlock(table);\n        }\n        else {\n            // Before lay outing need to update table grid.\n            table.isGridUpdated = false;\n            table.buildTableColumns();\n            table.isGridUpdated = true;\n            this.documentHelper.layout.reLayoutTable(table);\n        }\n        if (!isNullOrUndefined(this.alertDialog)) {\n            var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n            selection.selectContent(textPosition, true);\n            this.reLayout(selection);\n            this.alertDialog.close();\n            this.alertDialog = undefined;\n        }\n    };\n    Editor.prototype.onConfirmedCellDeletion = function (row, selection, startRowIndex, endRowIndex, startColumnIndex, endColumnIndex, isDeleteCells, editAction) {\n        var isStarted = false;\n        var isCellCleared = false;\n        this.removeDeletedCellRevision(row);\n        for (var j = 0; j < row.childWidgets.length; j++) {\n            var cell = row.childWidgets[j];\n            //this.removeRevisionForCell(cell, true);\n            if (cell.columnIndex >= startColumnIndex && cell.columnIndex <= endColumnIndex) {\n                if (!isStarted) {\n                    this.updateEditPosition(cell, selection);\n                    isStarted = true;\n                }\n                if (isDeleteCells) {\n                    //Specific for Backspace and Cut if selection includes all rows.\n                    var cell_1 = row.childWidgets[j];\n                    this.updateNextBlocksIndex(cell_1, false);\n                    for (var k = 0; k < cell_1.childWidgets.length; k++) {\n                        var para = cell_1.childWidgets[k];\n                        for (var l = 0; l < para.childWidgets.length; l++) {\n                            var block = para.childWidgets[l];\n                            if (block instanceof LineWidget) {\n                                var line = block;\n                                for (var j_2 = 0; j_2 < line.children.length; j_2++) {\n                                    var element = line.children[j_2];\n                                    if (element instanceof FootnoteElementBox) {\n                                        this.removeFootnote(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    row.childWidgets.splice(j, 1);\n                    j--;\n                }\n                else if (editAction < 4) {\n                    isCellCleared = this.deleteCell(cell, selection, editAction, false);\n                }\n            }\n        }\n    };\n    Editor.prototype.removeRevisionForRow = function (rowWidget) {\n        if (rowWidget.rowFormat.revisions.length > 0 && this.skipTracking()) {\n            this.unlinkRangeFromRevision(rowWidget.rowFormat, true);\n            this.addRemovedRevisionInfo(rowWidget.rowFormat, undefined);\n        }\n    };\n    Editor.prototype.removeRevisionsInRow = function (rowWidget) {\n        if (rowWidget.rowFormat.revisions.length > 0) {\n            for (var i = 0; i < rowWidget.rowFormat.revisions.length; i++) {\n                var rowRevision = rowWidget.rowFormat.revisions[i];\n                this.unlinkWholeRangeInRevision(rowWidget.rowFormat, rowRevision);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeRevisionForCell = function (cellWidget, removeCollection) {\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n                var paraWidget = cellWidget.childWidgets[i];\n                for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                    var lineWidget = paraWidget.childWidgets[lineIndex];\n                    for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                        var currentElement = lineWidget.children[elementIndex];\n                        if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n                            this.unlinkRangeFromRevision(currentElement, removeCollection);\n                            this.addRemovedRevisionInfo(currentElement, undefined);\n                        }\n                    }\n                }\n            }\n            else if (cellWidget.childWidgets[i] instanceof TableWidget) {\n                this.removeRevisionForInnerTable(cellWidget.childWidgets[i]);\n            }\n        }\n    };\n    Editor.prototype.removeRevisionForInnerTable = function (tableWidget) {\n        if (tableWidget.childWidgets.length > 0) {\n            for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n                var row = tableWidget.childWidgets[i];\n                if (!isNullOrUndefined(row)) {\n                    this.removeRevisionForRow(row);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeRevisionForBlock = function (paraWidget, revision, skipParaMark, addToRevisionInfo) {\n        if (paraWidget.characterFormat.revisions.length > 0 && !skipParaMark) {\n            if (addToRevisionInfo) {\n                this.addRemovedRevisionInfo(paraWidget.characterFormat, undefined, false);\n            }\n            if (isNullOrUndefined(revision)) {\n                this.unlinkRangeFromRevision(paraWidget.characterFormat, true);\n            }\n            else {\n                this.unlinkRangeByRevision(paraWidget.characterFormat, revision);\n            }\n            paraWidget.characterFormat.revisions = [];\n        }\n        if (!isNullOrUndefined(paraWidget)) {\n            for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                var lineWidget = paraWidget.childWidgets[lineIndex];\n                for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                    var currentElement = lineWidget.children[elementIndex];\n                    if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n                        if (addToRevisionInfo) {\n                            this.addRemovedRevisionInfo(currentElement, undefined, false);\n                        }\n                        if (isNullOrUndefined(revision)) {\n                            this.unlinkRangeFromRevision(currentElement, true);\n                        }\n                        else {\n                            this.unlinkRangeByRevision(currentElement, revision);\n                        }\n                        currentElement.revisions = [];\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.unlinkRangeByRevision = function (item, revision) {\n        for (var i = 0; i < item.revisions.length; i++) {\n            var currentRevision = item.revisions[i];\n            if (currentRevision.author === revision.author && currentRevision.revisionType === revision.revisionType) {\n                item.revisions.splice(item.revisions.indexOf(revision), 1);\n                var rangeIndex = revision.range.indexOf(item);\n                revision.range.splice(rangeIndex, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            }\n        }\n    };\n    Editor.prototype.isWholeRowSelected = function (ownerRow, startColumnIndex, endColumnIndex) {\n        var columnCount = startColumnIndex + endColumnIndex;\n        if (startColumnIndex === 0 && ownerRow.childWidgets.length - 1 === columnCount) {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.deleteCell = function (cell, selection, editAction, copyChildToClipboard) {\n        //Checks whether this is last paragraph of owner textbody.\n        var block = cell.childWidgets[0];\n        if (cell.childWidgets.length === 1 && block instanceof ParagraphWidget && block.isEmpty()) {\n            return false;\n        }\n        var totalLength = cell.childWidgets.length - 1;\n        for (var i = cell.childWidgets.length - 1; i > -1; i--) {\n            block = cell.childWidgets[i];\n            if (editAction < 4) {\n                //Checks whether this is last paragraph of owner textbody.\n                if (block instanceof ParagraphWidget && i === totalLength) {\n                    //Preserves empty paragraph, to ensure minimal content.\n                    var paragraph = block;\n                    //Removes all the inlines in the paragraph.\n                    if (!this.checkClearCells(selection)) {\n                        for (var j = paragraph.childWidgets.length - 1; j >= 0; j--) {\n                            var inline = paragraph.childWidgets[j];\n                            for (var k = inline.children.length - 1; k >= 0; k--) {\n                                var element = inline.children[k];\n                                if (element instanceof FootnoteElementBox) {\n                                    this.removeFootnote(element);\n                                }\n                                else if (element instanceof BookmarkElementBox && element.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                                    this.documentHelper.bookmarks.remove(element.name);\n                                }\n                                this.unLinkFieldCharacter(element);\n                                inline.children.splice(k, 1);\n                            }\n                            if (paragraph.childWidgets.length > 1) {\n                                paragraph.childWidgets.splice(j, 1);\n                            }\n                        }\n                    }\n                    else if (!paragraph.isEmpty()) {\n                        this.removeInlines(paragraph, paragraph.firstChild, 0, paragraph.lastChild, paragraph.lastChild.getEndOffset(), editAction);\n                    }\n                    continue;\n                }\n                this.removeBlock(block);\n                if (this.checkClearCells(selection)) {\n                    this.addRemovedNodes(block);\n                    if (cell.childWidgets.length === 1) {\n                        //Add Index for line Widget\n                        selection.editPosition = this.selection.getHierarchicalIndex(cell.childWidgets[0], '0');\n                        this.updateHistoryPosition(selection.editPosition, true);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    Editor.prototype.paragrapghBookmarkCollection = function (block, existingBookmark) {\n        var bookmarkCol = this.documentHelper.bookmarks;\n        for (var i = 0; i < bookmarkCol.length; i++) {\n            var bookmark = this.documentHelper.bookmarks.get(bookmarkCol.keys[i]);\n            if (bookmark.paragraph === block) {\n                existingBookmark.push(bookmark);\n            }\n        }\n        return existingBookmark;\n    };\n    Editor.prototype.deleteContainer = function (cell, selection, start, end, editAction) {\n        var ownerTable = cell.ownerTable;\n        if (selection.containsRow(ownerTable.lastChild, end.paragraph.associatedCell) && !this.owner.enableTrackChanges) {\n            this.deleteContent(ownerTable, selection, editAction);\n        }\n        else {\n            if (this.toCheckForTrack(ownerTable)) {\n                this.cloneTableToHistoryInfo(ownerTable);\n                for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n                    var inline = ownerTable.childWidgets[i];\n                    this.trackRowDeletion(inline);\n                    if (end.paragraph.isInsideTable && selection.containsRow(inline, end.paragraph.associatedCell)) {\n                        this.documentHelper.layout.reLayoutTable(ownerTable);\n                        return;\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n                    var row = ownerTable.childWidgets[i];\n                    if (editAction < 4) {\n                        this.updateNextBlocksIndex(row, false);\n                        ownerTable.childWidgets.splice(i, 1);\n                        this.addRemovedNodes(row);\n                        i--;\n                    }\n                    if (end.paragraph.isInsideTable && selection.containsRow(row, end.paragraph.associatedCell)) {\n                        this.documentHelper.layout.reLayoutTable(ownerTable);\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.deleteTableBlock = function (table, selection, start, end, editAction) {\n        table = table.combineWidget(this.owner.viewer);\n        if (start.paragraph.isInsideTable && table.contains(start.paragraph.associatedCell)) {\n            var block = table.previousRenderedWidget;\n            var previousBlock = this.checkAndInsertBlock(table, start, end, editAction, block instanceof ParagraphWidget ? block : undefined);\n            if (selection.containsRow(table.firstChild, start.paragraph.associatedCell)) {\n                if (this.owner.enableTrackChanges) {\n                    this.cloneTableToHistoryInfo(table);\n                    for (var i = 0; i < table.childWidgets.length; i++) {\n                        this.trackRowDeletion(table.childWidgets[i]);\n                    }\n                    // Added the condition to remove the entire table when the selection contains a table with the below paragraph.\n                    if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                        this.removeBlock(table);\n                    }\n                }\n                else {\n                    this.deleteContent(table, selection, editAction);\n                }\n            }\n            else {\n                if (this.owner.enableTrackChanges) {\n                    if (isNullOrUndefined(end.paragraph.associatedCell) && !end.paragraph.isInsideTable) {\n                        var previousChild = end.paragraph.previousRenderedWidget.lastChild;\n                        var endCells = previousChild.lastChild;\n                        this.deleteCellsInTable(table, selection, start, end, editAction, endCells);\n                    }\n                }\n                else {\n                    var newTable = this.splitTable(table, start.paragraph.associatedCell.ownerRow);\n                    this.deleteContent(table, selection, editAction);\n                    this.documentHelper.layout.layoutBodyWidgetCollection(newTable.index, newTable.containerWidget, newTable, false);\n                }\n            }\n            if (!isNullOrUndefined(previousBlock)) {\n                selection.editPosition = this.selection.getHierarchicalIndex(previousBlock, '0');\n                if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                    this.editorHistory.currentBaseHistoryInfo.endPosition = selection.editPosition;\n                }\n            }\n        }\n        else {\n            var blockAdv = table.previousRenderedWidget;\n            var sectionAdv = table.bodyWidget instanceof BodyWidget ? table.bodyWidget : undefined;\n            if (this.owner.enableTrackChanges) {\n                this.cloneTableToHistoryInfo(table);\n                for (var i = 0; i < table.childWidgets.length; i++) {\n                    this.trackRowDeletion(table.childWidgets[i]);\n                }\n                if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                    this.removeBlock(table);\n                }\n            }\n            else {\n                this.deleteContent(table, selection, editAction);\n            }\n            if (!isNullOrUndefined(blockAdv)) {\n                // let nextSection: WSection = blockAdv.section instanceof WSection ? blockAdv.section as WSection : undefined;\n                // if (sectionAdv !== nextSection) {\n                //     this.deleteSection(selection, sectionAdv, nextSection, editAction);\n                // }\n                //Goto the next block.\n                this.deleteBlock(blockAdv, selection, start, end, editAction);\n            }\n        }\n    };\n    Editor.prototype.splitTable = function (table, splitEndRow) {\n        var newTable = new TableWidget();\n        newTable.tableFormat.copyFormat(table.tableFormat);\n        newTable.index = table.index;\n        //Moves the rows to new table.\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row === splitEndRow) {\n                break;\n            }\n            newTable.childWidgets.push(row);\n            row.containerWidget = newTable;\n            table.childWidgets.splice(i, 1);\n            i--;\n        }\n        //Inserts new table in the current text position.\n        var insertIndex = table.getIndex();\n        table.containerWidget.childWidgets.splice(insertIndex, 0, newTable);\n        newTable.containerWidget = table.containerWidget;\n        this.updateNextBlocksIndex(newTable, true);\n        return newTable;\n    };\n    Editor.prototype.updateEditPosition = function (cell, selection) {\n        var firstParagraph = this.documentHelper.getFirstParagraphInCell(cell);\n        selection.editPosition = this.selection.getHierarchicalIndex(firstParagraph, '0');\n    };\n    Editor.prototype.deleteContent = function (table, selection, editAction) {\n        if (editAction < 4) {\n            this.removeBlock(table);\n            this.addRemovedNodes(table);\n        }\n    };\n    Editor.prototype.setActionInternal = function (selection, action) {\n        if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.editorHistory.currentBaseHistoryInfo.action = action;\n        }\n    };\n    Editor.prototype.checkClearCells = function (selection) {\n        return this.editorHistory && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action !== 'ClearCells';\n    };\n    Editor.prototype.isEndInAdjacentTable = function (paragraph, endParagraph) {\n        var start = this.selection.getHierarchicalIndex(paragraph, '');\n        var end = this.selection.getHierarchicalIndex(endParagraph, '');\n        var selectionStart = start.split(';');\n        var selectionEnd = end.split(';');\n        return selectionStart.length < selectionEnd.length;\n    };\n    /**\n     * @private\n     * @param table\n     * @returns {TableWidget}\n     */\n    Editor.prototype.cloneTableToHistoryInfo = function (table) {\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            //Clones the entire table to preserve in history.\n            var clonedTable = table.clone();\n            clonedTable.index = table.index;\n            //Preserves the cloned table in history info, for future undo operation.\n            this.editorHistory.currentBaseHistoryInfo.removedNodes.push(clonedTable);\n            //Sets the insert position in history info as current table.\n            if (this.documentHelper.selection.start.paragraph.isInsideTable &&\n                this.documentHelper.selection.start.paragraph.associatedCell.ownerTable === table) {\n                this.updateHistoryPosition(this.selection.getHierarchicalIndex(table, '0'), true);\n            }\n            return clonedTable;\n        }\n        return undefined;\n    };\n    Editor.prototype.insertParagraphPaste = function (paragraph, currentParagraph, start, end, isCombineNextParagraph, editAction, isCombineLastBlock, skipHistoryCollection) {\n        if (this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n            var nextParagraph = this.selection.getNextParagraphBlock(currentParagraph);\n            if (nextParagraph) {\n                if (start.offset > 0 && nextParagraph === end.paragraph && paragraph === start.paragraph\n                    && this.editorHistory.currentBaseHistoryInfo.action === 'Paste') {\n                    //Combines the current paragraph with end paragraph specific for undo/redo paste action.\n                    var insertIndex = 0;\n                    this.removeBlock(currentParagraph);\n                    this.documentHelper.layout.clearListElementBox(nextParagraph);\n                    this.documentHelper.layout.clearListElementBox(currentParagraph);\n                    for (var i = 0; i < currentParagraph.childWidgets.length; i++) {\n                        var line = currentParagraph.childWidgets[i];\n                        nextParagraph.childWidgets.splice(insertIndex, 0, line);\n                        currentParagraph.childWidgets.splice(i, 1);\n                        i--;\n                        insertIndex++;\n                        line.paragraph = nextParagraph;\n                    }\n                    this.documentHelper.layout.reLayoutParagraph(nextParagraph, 0, 0);\n                    isCombineNextParagraph = false;\n                    var offset = this.selection.editPosition.substring(this.selection.editPosition.lastIndexOf(';') + 1);\n                    this.selection.editPosition = this.selection.getHierarchicalIndex(nextParagraph, offset);\n                }\n            }\n        }\n        if (isCombineNextParagraph) {\n            this.deleteParagraphMark(currentParagraph, this.selection, editAction, false, isCombineLastBlock, skipHistoryCollection);\n        }\n    };\n    Editor.prototype.removeInlines = function (paragraph, startLine, startOffset, endLine, endOffset, editAction) {\n        var isRemoved = false;\n        this.documentHelper.layout.clearListElementBox(paragraph);\n        var startIndex = paragraph.childWidgets.indexOf(startLine);\n        var startPosition = this.selection.start.clone();\n        var endPosition = this.selection.end.clone();\n        var editPosition = this.selection.editPosition;\n        for (var i = paragraph.childWidgets.length - 1; i >= 0; i--) {\n            var lineWidget = paragraph.childWidgets[i];\n            if (startLine === lineWidget && endLine === lineWidget) {\n                this.removeContent(lineWidget, startOffset, endOffset, editAction);\n                isRemoved = true;\n                break;\n            }\n            if (endLine === lineWidget) {\n                paragraph.isLayouted = false;\n                isRemoved = true;\n                this.removeContent(lineWidget, 0, endOffset, editAction);\n            }\n            else if (startLine === lineWidget) {\n                this.removeContent(lineWidget, startOffset, this.documentHelper.selection.getLineLength(lineWidget), editAction);\n                break;\n            }\n            else if (isRemoved) {\n                this.removeContent(lineWidget, 0, this.documentHelper.selection.getLineLength(lineWidget), editAction);\n            }\n        }\n        if (this.owner.enableTrackChanges && !this.skipTracking()) {\n            this.selection.start.setPositionInternal(startPosition);\n            this.selection.end.setPositionInternal(endPosition);\n            if (this.skipReplace) {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = undefined;\n                this.updateInsertPosition();\n            }\n            this.selection.editPosition = editPosition;\n        }\n        if (isRemoved) {\n            paragraph.isLayouted = true;\n            this.removeEmptyLine(paragraph);\n            this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n        }\n    };\n    Editor.prototype.skipTracking = function () {\n        if (!isNullOrUndefined(this.editorHistory) && (this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n            return true;\n        }\n        else if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && (this.editorHistory.currentBaseHistoryInfo.action === 'Reject Change' || this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change')) {\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.canHandleDeletion = function () {\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && (this.editorHistory.currentBaseHistoryInfo.action === 'DeleteRow')) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     *\n     * @param comment\n     * Deletes comment start and end markers along with its comment widgets.\n     */\n    Editor.prototype.deleteCommentInSelection = function (comment) {\n        //if comment end mark is in selection, both comment start and end markers will get deleted along with its comment widgets.\n        var curentBaseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.editorHistory.currentHistoryInfo\n            && !(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n            this.initComplexHistory('DeleteCommentInline');\n        }\n        this.deleteCommentInternal(comment);\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            if (!(this.editorHistory.isUndoing || this.editorHistory.isRedoing)) {\n                this.editorHistory.currentHistoryInfo.addModifiedAction(curentBaseHistoryInfo);\n            }\n            this.selection.editPosition = curentBaseHistoryInfo.insertPosition;\n            this.editorHistory.currentHistoryInfo.insertPosition = this.selection.editPosition;\n            this.editorHistory.currentBaseHistoryInfo = curentBaseHistoryInfo;\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.removeContent = function (lineWidget, startOffset, endOffset, editAction, skipHistoryCollection) {\n        var count = this.selection.getLineLength(lineWidget);\n        var startText = undefined;\n        var textCount = 0;\n        var lastText = undefined;\n        for (var i = lineWidget.children.length - 1; i >= 0; i--) {\n            var inline = lineWidget.children[i];\n            if (isNullOrUndefined(editAction) || (editAction !== 2 && editAction !== 1)) {\n                for (var k = 0; k < lineWidget.children.length; k++) {\n                    var elementbox = lineWidget.children[k];\n                    if (elementbox instanceof TextElementBox) {\n                        var text = elementbox.text;\n                        if (text.length + textCount > startOffset && !(textCount > startOffset)) {\n                            startText = text[startOffset - textCount - 1];\n                            if (isNullOrUndefined(startText) && (startOffset - textCount) === 0) {\n                                startText = lastText;\n                            }\n                        }\n                        // tslint:disable-next-line:max-line-length\n                        if (text.length + textCount > endOffset) {\n                            if ((text[endOffset - textCount] === ' ' && startOffset === 0) || (startText === ' ' && text[endOffset - textCount] === ' ')) {\n                                endOffset += 1;\n                            }\n                        }\n                        lastText = text[text.length - 1];\n                    }\n                    textCount += elementbox.length;\n                }\n            }\n            if (endOffset <= count - inline.length) {\n                count -= inline.length;\n                continue;\n            }\n            var endIndex = inline.length;\n            if (count > endOffset && (count - endIndex < endOffset)) {\n                endIndex = endOffset - (count - inline.length);\n            }\n            var startIndex = 0;\n            if (count - inline.length < startOffset) {\n                startIndex = startOffset - (count - inline.length);\n            }\n            if (count > endOffset) {\n                count -= (inline.length - endIndex);\n            }\n            if (startIndex === 0 && endIndex === inline.length) {\n                if (!this.owner.enableTrackChanges || this.owner.enableTrackChanges && this.skipTracking()) {\n                    if (!(this.editorHistory && (this.editorHistory.isUndoing || this.editorHistory.isRedoing))) {\n                        if (inline instanceof BookmarkElementBox) {\n                            this.removedBookmarkElements.push(inline);\n                        }\n                    }\n                    if (inline instanceof BookmarkElementBox) {\n                        if (this.documentHelper.bookmarks.containsKey(inline.name)) {\n                            if (this.owner.enableCollaborativeEditing && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                                this.editorHistory.currentBaseHistoryInfo.markerData.push({ bookmarkName: inline.name });\n                            }\n                            this.documentHelper.bookmarks.remove(inline.name);\n                        }\n                    }\n                }\n                if ((inline instanceof ImageElementBox && inline.textWrappingStyle !== 'Inline') || inline instanceof ShapeElementBox) {\n                    this.removeAutoShape(inline);\n                }\n                //clear form field revisions if it is intentionally deleted.\n                if (this.skipFieldDeleteTracking && inline.revisions.length > 0) {\n                    var fieldInline = inline;\n                    if (fieldInline instanceof FieldElementBox) {\n                        if (fieldInline.fieldType === 1 || fieldInline.fieldType === 2) {\n                            fieldInline = fieldInline.fieldBegin;\n                        }\n                        this.clearFieldElementRevisions(fieldInline, inline.revisions);\n                    }\n                }\n                if (this.canHandleDeletion() || (this.owner.enableTrackChanges && (!this.skipTracking() || (inline.paragraph.isInsideTable && !isNullOrUndefined(this.editorHistory) && this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === \"RemoveRowTrack\")) && !this.skipFieldDeleteTracking && !this.isInsertingTOC)) {\n                    if (!this.skipTableElements && !this.skipFootNoteDeleteTracking && !skipHistoryCollection) {\n                        this.addRemovedNodes(inline.clone());\n                    }\n                    this.handleDeleteTracking(inline, startOffset, endOffset, i, skipHistoryCollection);\n                }\n                else {\n                    // if (editAction < 4) {\n                    if (inline instanceof FootnoteElementBox) {\n                        inline.isLayout = false;\n                    }\n                    this.unLinkFieldCharacter(inline);\n                    this.unlinkRangeFromRevision(inline, true);\n                    this.addRemovedRevisionInfo(inline, undefined);\n                    // Added the condition to skip adding inner elements of the table to separate collection of history if the entire table is selected.\n                    if (!(!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'RemoveRowTrack' && inline.paragraph.isInsideTable)) {\n                        this.addRemovedNodes(inline);\n                    }\n                    if (inline instanceof EditRangeStartElementBox) {\n                        this.removedEditRangeStartElements.push(inline);\n                        if (inline.columnFirst != -1 && inline.columnLast != -1) {\n                            this.removeEditRangeFromCollection(inline);\n                        }\n                    }\n                    else if (inline instanceof EditRangeEndElementBox) {\n                        this.removedEditRangeEndElements.push(inline);\n                    }\n                    lineWidget.children.splice(i, 1);\n                    if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n                        lineWidget.layoutedElements.splice(i, 1);\n                    }\n                }\n            }\n            else if (inline instanceof TextElementBox) {\n                var span = this.handleDeleteTracking(inline, startIndex, endIndex);\n                //if (editAction < 4) {\n                // let span: TextElementBox = new TextElementBox();\n                // span.characterFormat.copyFormat(inline.characterFormat);\n                // span.text = inline.text.substr(startIndex, endIndex - startIndex);\n                // for (let i = inline.revisions.length - 1; i >= 0; i--) {\n                //     let revision: Revision = inline.revisions[i];\n                //     let splittedRange: object[] = this.splitRevisionByElement(inline, revision);\n                //     this.insertRevision(span, revision.revisionType, revision.author, revision.date, splittedRange);\n                // }\n                // inline.text = inline.text.slice(0, startIndex) + inline.text.slice(endIndex);\n                if (!isNullOrUndefined(span)) {\n                    if (!this.skipTableElements) {\n                        if (inline.revisions.length > 0) {\n                            this.addRemovedRevisionInfo(inline, span);\n                        }\n                        this.addRemovedNodes(span);\n                    }\n                }\n                // else {\n                //     this.insertTextInternal(span.text, false, 'Deletion');\n                //     this.editorHistory.currentBaseHistoryInfo.revisionToRemove = inline.revisions[inline.revisions.length - 1];\n                //     // let info: ElementInfo = this.selection.start.currentWidget.getInline(startOffset +1, 0);\n                //     // let element: ElementBox = info.element.clone();\n                //     //this.addRemovedNodes(span);\n                // }\n            }\n            if ((!this.owner.enableTrackChanges || this.editorHistory.isUndoing) && inline instanceof FootnoteElementBox) {\n                if (inline.footnoteType === 'Footnote') {\n                    this.removeFootnote(inline);\n                }\n                else {\n                    this.removeEndnote(inline);\n                }\n            }\n            if (startOffset >= count - (endIndex - startIndex)) {\n                break;\n            }\n            count -= (endIndex - startIndex);\n            this.documentHelper.layout.clearListElementBox(lineWidget.paragraph);\n        }\n    };\n    /**\n     * Deletes comment widgets from comment pane along with history preservation.\n     */\n    Editor.prototype.deleteCommentWidgetInline = function (inline) {\n        // let curentBaseHistoryInfo: BaseHistoryInfo = this.editorHistory.currentBaseHistoryInfo;\n        // if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.editorHistory.currentHistoryInfo) {\n        //     this.initComplexHistory('DeleteCommentInline');\n        // }\n        // // if (!this.selection.isElementInSelection(inline.comment.commentStart, true)) {\n        // //     this.removeCommentCharacters.push(inline.comment.commentStart);\n        // // }\n        // this.deleteCommentWidgetInternal(inline.comment);\n        // if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n        //     // let index = this.editorHistory.currentHistoryInfo.modifiedActions.indexOf(curentHistoryInfo);\n        //     // this.editorHistory.currentHistoryInfo.modifiedActions.push(this.editorHistory.currentHistoryInfo.modifiedActions.splice(index, 1)[0]);\n        //     let lstActionHistoryInfo: HistoryInfo = this.editorHistory.currentHistoryInfo;\n        //     let frstAction: BaseHistoryInfo = lstActionHistoryInfo.modifiedActions[0];\n        //     // if (frstAction.action === \"DeleteCommentWidget\" && frstAction.removedNodes[0] instanceof CommentElementBox\n        //     //     && !(frstAction.removedNodes[0] as CommentElementBox).isReply && (lstActionHistoryInfo.modifiedActions[1].action === \"DeleteCommentWidget\")) {\n        //     //     // index = this.editorHistory.currentHistoryInfo.modifiedActions.indexOf(curentHistoryInfo);\n        //     //     // this.editorHistory.currentHistoryInfo.modifiedActions.splice(index - 1, 0, this.editorHistory.currentHistoryInfo.modifiedActions.splice(0, 1)[0]);\n        //     // }\n        // }\n        // this.editorHistory.currentHistoryInfo.addModifiedAction(curentBaseHistoryInfo);\n        // this.editorHistory.currentBaseHistoryInfo = curentBaseHistoryInfo;\n        // this.selection.editPosition = curentBaseHistoryInfo.insertPosition;        \n        // this.editorHistory.currentHistoryInfo.insertPosition = curentBaseHistoryInfo.insertPosition;\n        // this.editorHistory.currentHistoryInfo.endPosition = curentBaseHistoryInfo.insertPosition;\n        // this.editorHistory.currentHistoryInfo.selectionStart = curentBaseHistoryInfo.selectionStart;\n        // this.editorHistory.currentHistoryInfo.selectionEnd = curentBaseHistoryInfo.selectionEnd;\n    };\n    Editor.prototype.clearFieldElementRevisions = function (inline, revision) {\n        var revisions = revision;\n        for (var i = 0; i < revisions.length; i++) {\n            var currentRevision = revisions[i];\n            for (var j = 0; j < currentRevision.range.length; j++) {\n                if (currentRevision.range[j] === inline) {\n                    for (var k = j; k < currentRevision.range.length; k) {\n                        if (currentRevision.range[j] instanceof FieldElementBox && currentRevision.range[j].fieldType === 1 && currentRevision.range[j].fieldBegin === inline) {\n                            currentRevision.removeRangeRevisionForItem(currentRevision.range[j]);\n                            if (currentRevision.range.length === 0) {\n                                this.owner.revisions.remove(currentRevision);\n                            }\n                            break;\n                        }\n                        currentRevision.removeRangeRevisionForItem(currentRevision.range[j]);\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.addRemovedRevisionInfo = function (currentElement, spittedElement, removePrevRevisions) {\n        for (var i = 0; i < currentElement.revisions.length; i++) {\n            var revisionId = currentElement.revisions[i].revisionID;\n            if (!isNullOrUndefined(spittedElement)) {\n                spittedElement.removedIds.push(revisionId);\n            }\n            else {\n                currentElement.removedIds.push(revisionId);\n            }\n        }\n        if (isNullOrUndefined(spittedElement) && (isNullOrUndefined(removePrevRevisions) || removePrevRevisions)) {\n            currentElement.revisions = [];\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeEmptyLine = function (paragraph) {\n        if (paragraph.childWidgets.length > 1) {\n            for (var i = 0; i < paragraph.childWidgets.length; i++) {\n                var lineWidget = paragraph.childWidgets[i];\n                if (lineWidget.children.length === 0 && paragraph.childWidgets.length > 1) {\n                    paragraph.childWidgets.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    //#endregion\n    /**\n     * Clone the list level\n     *\n     * @param {WListLevel} source - Specifies the source\n     * @private\n     * @returns {WListLevel} - Returns the list level\n     */\n    Editor.prototype.cloneListLevel = function (source) {\n        var listLevel = new WListLevel(undefined);\n        this.copyListLevel(listLevel, source);\n        return listLevel;\n    };\n    /**\n     * Copies the list level\n     *\n     * @param {WListLevel} destination - Specifies the destination\n     * @param {WListLevel} listLevel - Specifies the list level\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.copyListLevel = function (destination, listLevel) {\n        if (!isNullOrUndefined(listLevel.paragraphFormat)) {\n            destination.paragraphFormat = new WParagraphFormat(destination);\n            destination.paragraphFormat.copyFormat(listLevel.paragraphFormat);\n        }\n        if (!isNullOrUndefined(listLevel.characterFormat)) {\n            destination.characterFormat = new WCharacterFormat(destination);\n            destination.characterFormat.copyFormat(listLevel.characterFormat);\n        }\n        if (!isNullOrUndefined(listLevel.followCharacter)) {\n            destination.followCharacter = listLevel.followCharacter;\n        }\n        if (!isNullOrUndefined(listLevel.listLevelPattern)) {\n            destination.listLevelPattern = listLevel.listLevelPattern;\n        }\n        if (!isNullOrUndefined(listLevel.numberFormat)) {\n            destination.numberFormat = listLevel.numberFormat;\n        }\n        if (!isNullOrUndefined(listLevel.restartLevel)) {\n            destination.restartLevel = listLevel.restartLevel;\n        }\n        if (!isNullOrUndefined(listLevel.startAt)) {\n            destination.startAt = listLevel.startAt;\n        }\n    };\n    /**\n     * Clone level override\n     *\n     * @param {WLevelOverride} source  @returns {void} - Specifies the level override\n     * @private\n     * @returns {WLevelOverride} - Returns the level overeide\n     */\n    Editor.prototype.cloneLevelOverride = function (source) {\n        var levelOverride = new WLevelOverride();\n        if (!isNullOrUndefined(source.startAt)) {\n            levelOverride.startAt = source.startAt;\n        }\n        if (!isNullOrUndefined(source.overrideListLevel)) {\n            levelOverride.overrideListLevel = source.overrideListLevel;\n        }\n        if (!isNullOrUndefined(source.levelNumber)) {\n            levelOverride.levelNumber = source.levelNumber;\n        }\n        return levelOverride;\n    };\n    /**\n     * Update List Paragraph\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListParagraphs = function () {\n        this.documentHelper.listParagraphs = [];\n        for (var j = 0; j < this.documentHelper.pages.length; j++) {\n            var bodyWidget = this.documentHelper.pages[j].bodyWidgets[0];\n            for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n                this.updateListParagraphsInBlock(bodyWidget.childWidgets[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListParagraphsInBlock = function (block) {\n        if (block instanceof ParagraphWidget) {\n            if (!isNullOrUndefined(block.paragraphFormat)\n                && !isNullOrUndefined(block.paragraphFormat.listFormat)\n                && !isNullOrUndefined(block.paragraphFormat.listFormat.listId)) {\n                if (block.paragraphFormat.listFormat.listId >= 0) {\n                    block.paragraphFormat.clearIndent();\n                }\n                if (isNullOrUndefined(this.documentHelper.listParagraphs)) {\n                    this.documentHelper.listParagraphs = [];\n                }\n                this.documentHelper.listParagraphs.push(block);\n            }\n        }\n        else if (block instanceof TableWidget) {\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                for (var j = 0; j < block.childWidgets[i].childWidgets.length; j++) {\n                    var cell = block.childWidgets[i].childWidgets[j];\n                    for (var k = 0; k < cell.childWidgets.length; k++) {\n                        this.updateListParagraphsInBlock(cell.childWidgets[k]);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Applies list format\n     *\n     * @param {WList} list - Specifies the list.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onApplyList = function (list) {\n        var selection = this.documentHelper.selection;\n        this.setOffsetValue(this.documentHelper.selection);\n        this.initHistory('ListFormat');\n        var format = new WListFormat();\n        if (!isNullOrUndefined(list)) {\n            format.listId = list.listId;\n            format.nsid = list.nsid;\n        }\n        this.documentHelper.owner.isShiftingEnabled = true;\n        if (selection.isEmpty) {\n            this.applyParaFormatProperty(selection.start.paragraph, 'listFormat', format, false);\n            this.layoutItemBlock(selection.start.paragraph, false);\n        }\n        else {\n            this.updateSelectionParagraphFormatting('listFormat', format, false);\n        }\n        this.documentHelper.owner.isShiftingEnabled = true;\n        this.layoutWholeDocument();\n        this.documentHelper.owner.isShiftingEnabled = false;\n        this.startParagraph = undefined;\n        this.endParagraph = undefined;\n    };\n    /**\n     * Applies bullets or numbering list\n     *\n     * @param {string} format - Specifies the format\n     * @param {ListLevelPattern} listLevelPattern - Specifies the list level patterns\n     * @param {string} fontFamily - Specifies the font family.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyBulletOrNumbering = function (format, listLevelPattern, fontFamily) {\n        var selection = this.documentHelper.selection;\n        var list = selection.paragraphFormat.getList();\n        var isUpdate = false;\n        var start = selection.start;\n        if (!selection.isForward) {\n            start = selection.end;\n        }\n        var currentParagraph = start.paragraph;\n        if (isNullOrUndefined(list)) {\n            while (!isNullOrUndefined(currentParagraph.previousWidget) && currentParagraph.previousWidget instanceof ParagraphWidget\n                && currentParagraph.previousWidget.isEmpty() && currentParagraph.previousWidget.paragraphFormat.listFormat.listId === -1) {\n                currentParagraph = currentParagraph.previousWidget;\n            }\n            if (currentParagraph.previousWidget && currentParagraph.previousWidget instanceof ParagraphWidget\n                && currentParagraph.previousWidget.paragraphFormat.listFormat.listId !== -1) {\n                var isUpdated = false;\n                while (!isNullOrUndefined(currentParagraph.previousWidget) && currentParagraph.previousWidget instanceof ParagraphWidget\n                    && currentParagraph.previousWidget.paragraphFormat.listFormat.listId !== -1 && start.paragraph.paragraphFormat.firstLineIndent < Math.abs(currentParagraph.previousWidget.paragraphFormat.firstLineIndent)) {\n                    currentParagraph = currentParagraph.previousWidget;\n                    isUpdated = true;\n                }\n                if (!isUpdated) {\n                    currentParagraph = currentParagraph.previousWidget;\n                }\n                list = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n                isUpdate = true;\n            }\n            if (!isUpdate) {\n                while (!isNullOrUndefined(currentParagraph.nextWidget) && currentParagraph.nextWidget instanceof ParagraphWidget\n                    && currentParagraph.nextWidget.isEmpty() && currentParagraph.nextWidget.paragraphFormat.listFormat.listId === -1) {\n                    currentParagraph = currentParagraph.nextWidget;\n                }\n                if (currentParagraph.nextWidget && currentParagraph.nextWidget instanceof ParagraphWidget\n                    && currentParagraph.nextWidget.paragraphFormat.listFormat.listId !== -1) {\n                    currentParagraph = currentParagraph.nextWidget;\n                    list = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n                    isUpdate = true;\n                }\n            }\n        }\n        var startListLevel = undefined;\n        var levelNumber = -1;\n        var initialListLevel = undefined;\n        var isSameList = false;\n        if (currentParagraph.paragraphFormat.listFormat.listId !== -1 && !isNullOrUndefined(currentParagraph.paragraphFormat.listFormat.listLevel)) {\n            this.listNumberFormat = currentParagraph.paragraphFormat.listFormat.listLevel.numberFormat;\n            this.listLevelPattern = currentParagraph.paragraphFormat.listFormat.listLevel.listLevelPattern;\n            this.listLevelNumber = currentParagraph.paragraphFormat.listFormat.listLevelNumber;\n        }\n        if (!isNullOrUndefined(list)) {\n            levelNumber = currentParagraph.paragraphFormat.listFormat.listLevelNumber;\n            var tempList = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n            startListLevel = this.documentHelper.layout.getListLevel(tempList, levelNumber);\n            if (levelNumber > 0) {\n                initialListLevel = this.documentHelper.layout.getListLevel(tempList, 0);\n                isSameList = !isNullOrUndefined(initialListLevel) && levelNumber > 0 && selection.start.isInSameListParagraph(selection.end);\n            }\n            var abstractList = tempList.abstractList;\n            if (!abstractList) {\n                abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n            }\n            if (abstractList.levels.length === 0) {\n                startListLevel = this.documentHelper.layout.getListLevel(tempList, currentParagraph.paragraphFormat.listFormat.listLevelNumber);\n            }\n            if (isUpdate) {\n                if (listLevelPattern !== 'Bullet' && startListLevel.listLevelPattern === listLevelPattern\n                    && (startListLevel.numberFormat === format || startListLevel.numberFormat.indexOf(format) !== -1)) {\n                    selection.paragraphFormat.listId = list.listId;\n                    selection.paragraphFormat.listLevelNumber = levelNumber;\n                    selection.paragraphFormat.setList(list);\n                    return;\n                }\n                else {\n                    startListLevel = abstractList.levels[0];\n                }\n            }\n        }\n        if (isNullOrUndefined(list) || (!isNullOrUndefined(list) && levelNumber === 0\n            && ((startListLevel.listLevelPattern !== listLevelPattern) || startListLevel.numberFormat !== format\n                || (startListLevel.characterFormat.fontFamily !== fontFamily && startListLevel.listLevelPattern === 'Bullet')))) {\n            isUpdate = false;\n            list = new WList();\n            if (this.documentHelper.lists.length > 0) {\n                list.listId = this.documentHelper.lists[this.documentHelper.lists.length - 1].listId + 1;\n            }\n            else {\n                list.listId = 0;\n            }\n            var abstractList = new WAbstractList();\n            if (this.documentHelper.abstractLists.length > 0) {\n                abstractList.abstractListId = this.documentHelper.abstractLists[this.documentHelper.abstractLists.length - 1].abstractListId + 1;\n            }\n            else {\n                abstractList.abstractListId = 0;\n            }\n            list.nsid = abstractList.nsid = HelperMethods.generateUniqueId(this.owner.documentHelper.lists);\n            list.abstractListId = abstractList.abstractListId;\n            list.abstractList = abstractList;\n            this.documentHelper.abstractLists.push(abstractList);\n            if (format === 'bullet' || format === 'multiLevel' || format === 'numbering') {\n                this.addListLevels(abstractList, format, selection);\n            }\n            else {\n                var listLevel = new WListLevel(abstractList);\n                listLevel.listLevelPattern = listLevelPattern;\n                listLevel.numberFormat = format;\n                if (listLevelPattern !== 'Bullet') {\n                    listLevel.startAt = 1;\n                }\n                else {\n                    listLevel.characterFormat.fontFamily = fontFamily;\n                }\n                listLevel.paragraphFormat.leftIndent = 36;\n                listLevel.paragraphFormat.firstLineIndent = -18;\n                abstractList.levels.push(listLevel);\n                selection.paragraphFormat.listLevelNumber = 0;\n            }\n            selection.paragraphFormat.setList(list);\n        }\n        else if (isSameList && !isNullOrUndefined(list) && !isUpdate) {\n            var tempList = this.documentHelper.getListById(currentParagraph.paragraphFormat.listFormat.listId);\n            var listLevel = this.documentHelper.layout.getListLevel(tempList, levelNumber);\n            if (listLevelPattern === 'Bullet') {\n                listLevel.numberFormat = format;\n                listLevel.characterFormat.fontFamily = fontFamily;\n                listLevel.listLevelPattern = listLevelPattern;\n            }\n            else {\n                listLevel.listLevelPattern = listLevelPattern;\n                listLevel.characterFormat.fontFamily = fontFamily;\n                var currentFormat = listLevel.numberFormat.substring(listLevel.numberFormat.length - 1);\n                if (listLevel.numberFormat.length !== format.length && levelNumber > 0) {\n                    listLevel.numberFormat = format;\n                }\n                else if (format.substring(format.length - 1) !== listLevel.numberFormat.substring(listLevel.numberFormat.length - 1)) {\n                    listLevel.numberFormat = listLevel.numberFormat.replace(currentFormat, format.substring(format.length - 1));\n                }\n            }\n            selection.paragraphFormat.setList(tempList);\n        }\n        else if (!isNullOrUndefined(list) && isUpdate) {\n            selection.paragraphFormat.setList(list);\n        }\n        else {\n            selection.paragraphFormat.setList(undefined);\n        }\n    };\n    Editor.prototype.addListLevels = function (abstractListAdv, listName, selection) {\n        var bulletCharacters = [String.fromCharCode(61558), String.fromCharCode(61656), String.fromCharCode(61607), String.fromCharCode(61623), String.fromCharCode(61608)];\n        for (var i = abstractListAdv.levels.length; i < 9; i++) {\n            var listLevel = new WListLevel(abstractListAdv);\n            if (listName.match('bullet')) {\n                listLevel.listLevelPattern = 'Bullet';\n                listLevel.numberFormat = bulletCharacters[i < 5 ? i % 5 : i % 5 + 1];\n                listLevel.characterFormat.fontFamily = i < 3 || i === 5 ? 'Wingdings' : 'Symbol';\n            }\n            else {\n                if (listName.match('multiLevel')) {\n                    for (var j = 0; j < i + 1; j++) {\n                        listLevel.numberFormat += '%' + (j + 1).toString() + '.';\n                    }\n                    listLevel.listLevelPattern = 'Number';\n                }\n                else {\n                    listLevel.numberFormat = '%' + (i + 1).toString() + ')';\n                    listLevel.listLevelPattern = i % 3 === 0 ? 'Number'\n                        : i % 3 === 1 ? 'LowLetter' : 'LowRoman';\n                }\n                listLevel.startAt = 1;\n                listLevel.restartLevel = i;\n            }\n            if (i === 0) {\n                listLevel.paragraphFormat.leftIndent = 36;\n            }\n            else {\n                listLevel.paragraphFormat.leftIndent = 36 * i;\n            }\n            listLevel.paragraphFormat.firstLineIndent = -18;\n            abstractListAdv.levels.push(listLevel);\n            selection.paragraphFormat.listLevelNumber = i;\n        }\n    };\n    /**\n     * Inserts the page break at the cursor position.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.insertPageBreak = function () {\n        if (!this.owner.isReadOnlyMode) {\n            if (this.documentHelper.selection.start.paragraph.isInsideTable ||\n                this.documentHelper.selection.start.paragraph.isInHeaderFooter) {\n                return;\n            }\n            this.initComplexHistory('PageBreak');\n            this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.onEnter('PageBreak');\n            this.isSkipOperationsBuild = false;\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n                this.editorHistory.updateComplexHistory();\n            }\n            if (this.owner.enableAutoFocus) {\n                this.selection.checkForCursorVisibility();\n            }\n        }\n    };\n    /**\n     * Inserts a column break at cursor position.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.insertColumnBreak = function () {\n        if (!this.owner.isReadOnlyMode) {\n            if (this.documentHelper.selection.start.paragraph.isInsideTable ||\n                this.documentHelper.selection.start.paragraph.isInHeaderFooter) {\n                return;\n            }\n            this.initComplexHistory('ColumnBreak');\n            var para = this.documentHelper.selection.start.paragraph;\n            if (this.viewer instanceof PageLayoutViewer && para.bodyWidget.sectionFormat.columns.length > 1) {\n                var lastbody = this.documentHelper.layout.getBodyWidget(para.bodyWidget, false);\n                if ((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page)) {\n                    this.documentHelper.layout.combineMultiColumn(lastbody);\n                }\n            }\n            this.onEnter('ColumnBreak');\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n                this.editorHistory.updateComplexHistory();\n            }\n            if (this.owner.enableAutoFocus) {\n                this.selection.checkForCursorVisibility();\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onEnter = function (breakType) {\n        this.handledEnter = true;\n        var selection = this.documentHelper.selection;\n        var format;\n        if (isNullOrUndefined(selection.start.paragraph.paragraphFormat.baseStyle) ||\n            selection.start.paragraph.paragraphFormat.baseStyle.name === 'Normal' ||\n            selection.start.paragraph.paragraphFormat.baseStyle.name === 'Normal (Web)') {\n            format = new SelectionCharacterFormat(undefined);\n            format.cloneFormat(this.selection.characterFormat);\n            var eleme = selection.start.paragraph.lastChild.children[selection.start.paragraph.lastChild.children.length - 1];\n            if (eleme instanceof FootnoteElementBox) {\n                format.baselineAlignment = 'Normal';\n            }\n        }\n        if (this.isXmlMapped) {\n            return;\n        }\n        if (selection.isEmpty) {\n            //ToDo: Need to handle the CTRL + Enter (Page Break) and SHIFT + Enter (Line Break) behavior.\n            var hyperlinkField = selection.getHyperlinkField();\n            var isSelectionOnHyperlink = !isNullOrUndefined(hyperlinkField);\n            if (isSelectionOnHyperlink) {\n                selection.fireRequestNavigate(hyperlinkField);\n                return;\n            }\n            var paragraph = selection.start.paragraph;\n            if (paragraph.isEmpty() && paragraph.paragraphFormat.listFormat.listId !== -1) {\n                this.onApplyListInternal(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId), paragraph.paragraphFormat.listFormat.listLevelNumber - 1);\n                return;\n            }\n        }\n        var commentStartToInsert = this.checkAndRemoveComments();\n        this.initHistory('Enter');\n        var isRemoved = true;\n        if (!selection.isEmpty && !selection.isImageSelected) {\n            // this.initHistoryWithSelection(selection, 'Enter');\n            isRemoved = this.removeSelectedContents(selection);\n        }\n        if (isRemoved) {\n            if (selection.isImageSelected && !selection.isForward) {\n                var start = selection.start;\n                selection.start = selection.end;\n                selection.end = start;\n            }\n            selection.owner.isShiftingEnabled = true;\n            this.updateInsertPosition();\n            var blockInfo = this.selection.getParagraphInfo(selection.start);\n            var initialStart = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            this.splitParagraphInternal(selection, selection.start.paragraph, selection.start.currentWidget, selection.start.offset);\n            this.setPositionForCurrentIndex(selection.start, initialStart);\n            if (!isNullOrUndefined(breakType) && (breakType === 'PageBreak' || breakType === 'ColumnBreak')) {\n                var currentParagraph = selection.start.paragraph;\n                var breakParagraph = new ParagraphWidget();\n                breakParagraph.characterFormat.copyFormat(currentParagraph.characterFormat);\n                breakParagraph.paragraphFormat.copyFormat(currentParagraph.paragraphFormat);\n                var pageBreak = new TextElementBox();\n                switch (breakType) {\n                    case 'PageBreak':\n                        pageBreak.text = '\\f';\n                        break;\n                    case 'ColumnBreak':\n                        pageBreak.text = String.fromCharCode(14);\n                        break;\n                }\n                var line = new LineWidget(breakParagraph);\n                line.children.push(pageBreak);\n                pageBreak.line = line;\n                breakParagraph.childWidgets.push(line);\n                if (this.owner.enableTrackChanges && currentParagraph.characterFormat.revisions.length > 0) {\n                    var currentRevision = this.retrieveRevisionInOder(currentParagraph.characterFormat);\n                    currentRevision.range.push(breakParagraph.characterFormat);\n                    breakParagraph.characterFormat.revisions.push(currentRevision);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                    breakParagraph.characterFormat.removedIds = [];\n                }\n                this.insertParagraph(breakParagraph, true);\n                selection.selectParagraphInternal(breakParagraph, true);\n            }\n            var nextNode = selection.start.paragraph.nextWidget;\n            if (isNullOrUndefined(nextNode)) {\n                nextNode = selection.getNextRenderedBlock(selection.start.paragraph);\n            }\n            selection.selectParagraphInternal(nextNode, true);\n            this.updateEndPosition();\n            if (!isNullOrUndefined(breakType) && this.editorHistory) {\n                this.owner.editorHistoryModule.updateHistory();\n            }\n            // if (!isNullOrUndefined(selection.currentHistoryInfo)) {\n            //     this.updateComplexHistory();\n            // } else {\n            this.reLayout(selection);\n            var currentPara = this.selection.start.paragraph.containerWidget.firstChild;\n            if (!isNullOrUndefined(currentPara)) {\n                currentPara.isChangeDetected = false;\n                var nextPara = currentPara.nextRenderedWidget;\n                while (this.owner.isSpellCheck && !isNullOrUndefined(nextPara)) {\n                    currentPara = nextPara;\n                    currentPara.isChangeDetected = false;\n                    nextPara = currentPara.nextRenderedWidget;\n                }\n            }\n            // }\n            var paragraph = selection.start.paragraph.previousWidget;\n            if (!isNullOrUndefined(paragraph) && !paragraph.isEmpty() &&\n                paragraph.lastChild.children[paragraph.lastChild.children.length - 1] instanceof TextElementBox) {\n                this.checkAndConvertToHyperlink(selection, true, paragraph);\n            }\n        }\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(selection.start.paragraph) && selection.start.paragraph.isEmpty()) {\n            this.selection.isRetrieveFormatting = true;\n            this.selection.characterFormat.cloneFormat(format);\n            this.selection.isRetrieveFormatting = false;\n        }\n        this.documentHelper.layout.islayoutFootnote = false;\n        this.updateHistoryForComments(commentStartToInsert);\n        this.handledEnter = false;\n    };\n    Editor.prototype.splitParagraphInternal = function (selection, paragraphAdv, currentLine, offset) {\n        var insertIndex = 0;\n        var blockIndex = paragraphAdv.index;\n        var currentPara = paragraphAdv;\n        var isAddRevToNxtPara = false;\n        currentPara.isChangeDetected = (offset === 0) ? true : false;\n        while (this.owner.isSpellCheck && !isNullOrUndefined(currentPara.nextRenderedWidget)) {\n            currentPara = currentPara.nextRenderedWidget;\n            currentPara.isChangeDetected = true;\n        }\n        var paragraph = new ParagraphWidget();\n        var lineWidget = new LineWidget(paragraph);\n        paragraph.childWidgets.push(lineWidget);\n        //Cop ies the format to new paragraph.\n        paragraph.paragraphFormat.ownerBase = paragraph;\n        if (currentLine === paragraphAdv.lastChild && offset === selection.getLineLength(currentLine) && !paragraphAdv.isContainsShapeAlone()) {\n            if (paragraphAdv.paragraphFormat.baseStyle\n                && paragraphAdv.paragraphFormat.baseStyle.name !== 'Normal' && paragraphAdv.paragraphFormat.baseStyle.next instanceof WParagraphStyle) {\n                if (paragraphAdv.paragraphFormat.baseStyle.name === paragraphAdv.paragraphFormat.baseStyle.next.name) {\n                    paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n                    paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n                }\n                else {\n                    paragraph.paragraphFormat.baseStyle = paragraphAdv.paragraphFormat.baseStyle.next;\n                }\n                this.selection.skipFormatRetrieval = false;\n            }\n            else {\n                paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n                paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n            }\n            if (paragraphAdv.lastChild.children.length > 0) {\n                paragraphAdv.characterFormat.copyFormat(paragraphAdv.lastChild.children[paragraphAdv.lastChild.children.length - 1].characterFormat);\n            }\n            // let revisions: Revision[] = [];\n            // if (paragraphAdv.characterFormat.revisions.length > 0) {\n            //     revisions = paragraphAdv.characterFormat.revisions;\n            // } else {\n            if (this.handledEnter && this.selection.isEmpty && this.selection.start.isAtParagraphEnd && paragraphAdv.characterFormat.revisions.length > 0) {\n                isAddRevToNxtPara = true;\n            }\n            if (this.owner.enableTrackChanges) {\n                var lastLine = paragraphAdv.lastChild;\n                if (!isNullOrUndefined(lastLine) && lastLine.children.length > 0) {\n                    var lastElement = lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n                    if (lastElement.revisions.length !== 0) {\n                        isAddRevToNxtPara = false;\n                    }\n                    //ensure whether para mark can be combined with element revision\n                    if (!isNullOrUndefined(lastElement) && !this.checkParaMarkMatchedWithElement(lastElement, paragraphAdv.characterFormat, false, 'Insertion')) {\n                        if (isAddRevToNxtPara) {\n                            this.insertParaRevision(paragraph);\n                        }\n                        else {\n                            this.insertParaRevision(paragraphAdv);\n                        }\n                    }\n                }\n            }\n            //}\n            //ToDo in future: Need to skip copying formattings to new paragraph, if the style for following paragraph is same style.\n            insertIndex++;\n            blockIndex++;\n        }\n        else {\n            paragraph.paragraphFormat.copyFormat(paragraphAdv.paragraphFormat);\n            paragraph.characterFormat.copyFormat(paragraphAdv.characterFormat);\n            if ((offset > 0 || !currentLine.isFirstLine()) && !paragraphAdv.isContainsShapeAlone()) {\n                paragraphAdv = paragraphAdv.combineWidget(this.owner.viewer);\n                this.moveInlines(paragraphAdv, paragraph, 0, 0, paragraphAdv.firstChild, offset, currentLine);\n                if (this.owner.enableTrackChanges) {\n                    this.insertParaRevision(paragraph, paragraphAdv.firstChild);\n                }\n            }\n            else {\n                var paragraphWidget = paragraphAdv.previousRenderedWidget;\n                var isPreviousRevision = false;\n                if (!isNullOrUndefined(paragraphWidget) && paragraphWidget instanceof ParagraphWidget) {\n                    isPreviousRevision = paragraphWidget.characterFormat.revisions.length > 0 ? true : false;\n                }\n                if (this.owner.enableTrackChanges) {\n                    if (!isPreviousRevision) {\n                        var firstLine = paragraphAdv.firstChild;\n                        var firstElement = firstLine.children[0].previousValidNodeForTracking;\n                        //ensure whether para mark can be combined with element revision\n                        if (!isNullOrUndefined(firstElement) && !this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, true, 'Insertion')) {\n                            this.insertParaRevision(paragraph);\n                        }\n                        else if (isNullOrUndefined(firstElement)) {\n                            insertIndex++;\n                            blockIndex++;\n                        }\n                    }\n                    else {\n                        if (!this.checkToMatchEmptyParaMark(paragraphAdv, paragraph)) {\n                            this.insertParaRevision(paragraphAdv);\n                        }\n                    }\n                }\n            }\n            paragraphAdv = paragraphAdv.getSplitWidgets()[0];\n        }\n        insertIndex += paragraphAdv.getIndex();\n        var container = paragraphAdv.containerWidget;\n        var childNodes = container.childWidgets;\n        childNodes.splice(insertIndex, 0, paragraph);\n        paragraph.containerWidget = container;\n        paragraph.index = blockIndex;\n        this.updateNextBlocksIndex(paragraph, true);\n        if ((!isNullOrUndefined(container.containerWidget) && container.containerWidget instanceof FootNoteWidget) || (container instanceof TableCellWidget && !isNullOrUndefined(container.bodyWidget) && container.bodyWidget.containerWidget instanceof FootNoteWidget)) {\n            var height = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Height;\n            if (container instanceof TableCellWidget) {\n                container.bodyWidget.height += height;\n                container.bodyWidget.containerWidget.height += height;\n            }\n            else {\n                container.containerWidget.height += height;\n                container.height += height;\n            }\n        }\n        if (this.owner.enableTrackChanges && (paragraph.characterFormat.revisions.length === 0)) {\n            var para = undefined;\n            if (paragraphAdv.characterFormat.revisions.length === 0) {\n                para = paragraphAdv;\n            }\n            else if (isAddRevToNxtPara) {\n                para = paragraph;\n            }\n            if (!isNullOrUndefined(para) && !this.checkToMatchEmptyParaMark(para)) {\n                this.insertParaRevision(para);\n            }\n        }\n        this.documentHelper.layout.layoutBodyWidgetCollection(blockIndex, container, paragraph, false);\n    };\n    Editor.prototype.insertParaRevision = function (paragraph, firstChild) {\n        if (this.owner.enableTrackChanges && isNullOrUndefined(firstChild) && !this.isRevisionMatched(paragraph.characterFormat, 'Insertion')) {\n            paragraph.characterFormat.revisions = [];\n            this.insertRevision(paragraph.characterFormat, 'Insertion');\n        }\n        //If it is spitted para, we need to ensure whether first element of the spitted para matches with inserted revision\n        if (!isNullOrUndefined(firstChild)) {\n            if (firstChild.paragraph.isInsideTable) {\n                this.insertRevision(paragraph.characterFormat, 'Insertion');\n                return;\n            }\n            this.applyRevisionForParaMark(paragraph, firstChild, 'Insertion', true);\n            // let firstElement: ElementBox = firstChild.children[0];\n            // firstElement = firstElement.nextValidNodeForTracking;\n            // let lastLine: LineWidget = paragraph.lastChild as LineWidget;\n            // let lastElement: ElementBox = lastLine.children.length === 0 ? undefined : lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n            // let isCombined: boolean = false;\n            // //Ensure revision matched with inserted para mark\n            // if (!isNullOrUndefined(lastElement)) {\n            //     isCombined = this.checkParaMarkMatchedWithElement(lastElement, paragraph.characterFormat, true);\n            // }\n            // if (!isNullOrUndefined(firstElement)) {\n            //     if (paragraph.characterFormat.revisions.length > 0) {\n            //         if (this.isRevisionMatched(firstElement, 'Insertion')) {\n            //             let revisionToInclude: Revision = paragraph.characterFormat.revisions[0];\n            //             let matchedRevisions: Revision[] = this.getMatchedRevisionsToCombine(firstElement.revisions, 'Insertion');\n            //             for (let i: number = 0; i < matchedRevisions.length; i++) {\n            //                 isCombined = true;\n            //                 this.clearAndUpdateRevisons(matchedRevisions[i].range, revisionToInclude, revisionToInclude.range.indexOf(paragraph.characterFormat) + 1);\n            //             }\n            //         }\n            //     } else {\n            //         isCombined = this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, false);\n            //     }\n            // }\n            // if (!isCombined) {\n            //     this.insertRevision(paragraph.characterFormat, 'Insertion');\n            // }\n        }\n    };\n    Editor.prototype.applyRevisionForParaMark = function (paragraph, firstChild, revisionType, splitRevision) {\n        var firstElement = firstChild.children[0];\n        if (isNullOrUndefined(firstElement)) {\n            return;\n        }\n        firstElement = firstElement.nextValidNodeForTracking;\n        var lastLine = paragraph.lastChild;\n        var lastElement = lastLine.children.length === 0 ? undefined : lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking;\n        var isCombined = false;\n        var prevRevCount = paragraph.characterFormat.revisions.length;\n        //Ensure revision matched with inserted para mark\n        if (!isNullOrUndefined(lastElement)) {\n            isCombined = this.checkParaMarkMatchedWithElement(lastElement, paragraph.characterFormat, false, revisionType);\n        }\n        if (!isNullOrUndefined(firstElement)) {\n            //Ensure previous inserted para mark revision matched with first element of the next paragraph.\n            if (paragraph.characterFormat.revisions.length > prevRevCount) {\n                if (this.isRevisionMatched(firstElement, revisionType)) {\n                    var revisionToInclude = paragraph.characterFormat.revisions[0];\n                    var matchedRevisions = this.getMatchedRevisionsToCombine(firstElement.revisions, revisionType);\n                    for (var i = 0; i < matchedRevisions.length; i++) {\n                        if (matchedRevisions[i] !== revisionToInclude) {\n                            isCombined = true;\n                            this.clearAndUpdateRevisons(matchedRevisions[i].range, revisionToInclude, revisionToInclude.range.indexOf(paragraph.characterFormat) + 1);\n                        }\n                    }\n                }\n            }\n            else {\n                isCombined = this.checkParaMarkMatchedWithElement(firstElement, paragraph.characterFormat, true, revisionType);\n            }\n        }\n        if (!isCombined && (this.owner.enableTrackChanges || firstChild.paragraph.characterFormat.revisions.length > 0)) {\n            this.insertRevision(paragraph.characterFormat, revisionType);\n            // for spitted paragraph on moving content we maintain same revision, so if it not matched with inserted paragraph then we need to spit it.\n            if (splitRevision && lastElement.revisions.length > 0 && firstElement.revisions.length > 0) {\n                this.updateRevisionForSpittedTextElement(lastElement, firstElement);\n            }\n        }\n    };\n    //Combines para mark with element revision\n    Editor.prototype.checkParaMarkMatchedWithElement = function (lastElement, characterFormat, isBegin, revisionType) {\n        var matchedRevisions = this.getMatchedRevisionsToCombine(lastElement.revisions, revisionType);\n        if (matchedRevisions.length > 0) {\n            this.mapMatchedRevisions(matchedRevisions, lastElement, characterFormat, isBegin);\n            return true;\n        }\n        return false;\n    };\n    Editor.prototype.checkToMatchEmptyParaMark = function (paraWidget, paragraphAdv) {\n        var prevPara = paraWidget.previousRenderedWidget;\n        if (!isNullOrUndefined(prevPara) && prevPara instanceof ParagraphWidget && prevPara.characterFormat.revisions.length > 0) {\n            var matchedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, 'Insertion');\n            if (matchedRevisions.length > 0) {\n                if (!isNullOrUndefined(paragraphAdv)) {\n                    this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paragraphAdv.characterFormat, false);\n                }\n                else {\n                    this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paraWidget.characterFormat, false);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    Editor.prototype.checkToMatchEmptyParaMarkBack = function (paraWidget) {\n        var prevPara = paraWidget.nextRenderedWidget;\n        var lineWid = prevPara.childWidgets[0];\n        var textWid = lineWid.children[0];\n        if (!isNullOrUndefined(prevPara) && prevPara instanceof ParagraphWidget && prevPara.characterFormat.revisions.length > 0) {\n            var matchedRevisions = this.getMatchedRevisionsToCombine(prevPara.characterFormat.revisions, 'Deletion');\n            if (matchedRevisions.length > 0) {\n                if (prevPara != undefined && lineWid != undefined && textWid != undefined && textWid.revisions.length == 1) {\n                    this.mapMatchedRevisions(matchedRevisions, textWid, paraWidget.characterFormat, true);\n                    return true;\n                }\n                else {\n                    this.mapMatchedRevisions(matchedRevisions, prevPara.characterFormat, paraWidget.characterFormat, true);\n                    return true;\n                }\n            }\n        }\n        else if (textWid != undefined && textWid.revisions.length == 1) {\n            var matchedRevisions = this.getMatchedRevisionsToCombine(textWid.revisions, 'Deletion');\n            if (matchedRevisions.length > 0) {\n                this.mapMatchedRevisions(matchedRevisions, textWid, paraWidget.characterFormat, true);\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateNextBlocksIndex = function (block, increaseIndex) {\n        if (isNullOrUndefined(block.nextRenderedWidget) || block.nextRenderedWidget instanceof ParagraphWidget && block.bodyWidget.index !== block.nextRenderedWidget.bodyWidget.index) {\n            return;\n        }\n        var nextIndex = block.containerWidget.childWidgets.indexOf(block) + 1;\n        if (block.containerWidget instanceof BodyWidget && !(block.containerWidget.containerWidget instanceof FootNoteWidget)) {\n            // let startSel = this.selection.startOffset.substring(0,1);\n            // let endSel = this.selection.endOffset.substring(0,1);\n            if (block.containerWidget.page.bodyWidgets.length > 1 && block.containerWidget.sectionFormat.numberOfColumns > 1) {\n                var fromSectionIndex = block.containerWidget.indexInOwner;\n                for (var i = this.documentHelper.pages.indexOf(block.containerWidget.page); i < this.documentHelper.pages.length; i++) {\n                    var page = this.documentHelper.pages[i];\n                    for (var j = 0; j < page.bodyWidgets.length; j++) {\n                        if (page.bodyWidgets[j].indexInOwner === fromSectionIndex) {\n                            for (var k = nextIndex; k < page.bodyWidgets[j].childWidgets.length; k++) {\n                                var childWidget = page.bodyWidgets[j].childWidgets[k];\n                                this.updateIndex(childWidget, increaseIndex);\n                            }\n                            nextIndex = 0;\n                            if (!isNullOrUndefined(page.bodyWidgets[j].nextRenderedWidget) && page.bodyWidgets[j].nextRenderedWidget.sectionIndex === page.bodyWidgets[j].sectionIndex) {\n                                fromSectionIndex++;\n                            }\n                        }\n                    }\n                    if (fromSectionIndex !== block.containerWidget.indexInOwner && !isNullOrUndefined(page.bodyWidgets[page.bodyWidgets.length - 1].nextRenderedWidget) && page.bodyWidgets[page.bodyWidgets.length - 1].nextRenderedWidget.sectionFormat.columns.length > 1) {\n                        fromSectionIndex = 0;\n                    }\n                }\n            }\n            else if (block.containerWidget.page.bodyWidgets.length > 1) {\n                var currentSectionIndex = block.containerWidget.index;\n                for (var i = this.documentHelper.pages.indexOf(block.containerWidget.page); i < this.documentHelper.pages.length; i++) {\n                    var page = this.documentHelper.pages[i];\n                    for (var j = 0; j < page.bodyWidgets.length; j++) {\n                        if (page.bodyWidgets[j].index === currentSectionIndex) {\n                            for (var k = nextIndex; k < page.bodyWidgets[j].childWidgets.length; k++) {\n                                var childWidget = page.bodyWidgets[j].childWidgets[k];\n                                this.updateIndex(childWidget, increaseIndex);\n                            }\n                            nextIndex = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                var currentSectionIndex = block.containerWidget.index;\n                for (var j = this.documentHelper.pages.indexOf(block.containerWidget.page); j < this.documentHelper.pages.length; j++) {\n                    var page = this.documentHelper.pages[j];\n                    if (page.bodyWidgets[0].index === currentSectionIndex) {\n                        for (var k = nextIndex; k < page.bodyWidgets[0].childWidgets.length; k++) {\n                            var childWidget = page.bodyWidgets[0].childWidgets[k];\n                            this.updateIndex(childWidget, increaseIndex);\n                        }\n                        nextIndex = 0;\n                    }\n                    else {\n                        return;\n                    }\n                }\n            }\n        }\n        else if (block.containerWidget instanceof TableCellWidget) {\n            var cells = block.containerWidget.getSplitWidgets();\n            var currentCellIndex = cells.indexOf(block.containerWidget);\n            for (var x = currentCellIndex; x < cells.length; x++) {\n                var blocks = cells[x].childWidgets;\n                for (var y = nextIndex; y < blocks.length; y++) {\n                    this.updateIndex(blocks[y], increaseIndex);\n                }\n                currentCellIndex = 0;\n                nextIndex = 0;\n            }\n        }\n        else if (block.containerWidget instanceof TableRowWidget) {\n            for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n                var cell = block.containerWidget.childWidgets[i];\n                if (cell.rowIndex === block.containerWidget.index) {\n                    this.updateIndex(cell, increaseIndex);\n                }\n            }\n        }\n        else if (block.containerWidget instanceof TableWidget) {\n            for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n                var row = block.containerWidget.childWidgets[i];\n                this.updateIndex(row, increaseIndex);\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    row.childWidgets[j].rowIndex = row.index;\n                }\n            }\n            //update Row index of all the cell\n        }\n        else if (block.containerWidget instanceof HeaderFooterWidget || block.containerWidget instanceof TextFrame\n            || (!isNullOrUndefined(block.containerWidget) && block.containerWidget.containerWidget instanceof FootNoteWidget)) {\n            for (var i = nextIndex; i < block.containerWidget.childWidgets.length; i++) {\n                var nextBlock = block.containerWidget.childWidgets[i];\n                this.updateIndex(nextBlock, increaseIndex);\n            }\n        }\n    };\n    Editor.prototype.updateIndex = function (widget, increment) {\n        if (increment) {\n            widget.index++;\n        }\n        else {\n            widget.index--;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateEndPosition = function () {\n        var selection = this.documentHelper.selection;\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.updateHistoryPosition(selection.start, false);\n        }\n    };\n    /**\n     * @private\n     * @returns { CommentCharacterElementBox[] }\n     */\n    Editor.prototype.checkAndRemoveComments = function () {\n        var selection = this.selection;\n        if (selection.isEmpty || this.owner.enableTrackChanges) {\n            return [];\n        }\n        var initComplexHistory = false;\n        var comments = this.getSelectedComments();\n        if (comments.commentEndInfo.length > 0 || comments.commentStartInfo.length > 0) {\n            if (!initComplexHistory) {\n                initComplexHistory = true;\n                this.initComplexHistory('RemoveComment');\n            }\n            var startPosition = this.selection.start;\n            var endPosition = this.selection.end;\n            if (!this.selection.isForward) {\n                startPosition = this.selection.end;\n                endPosition = this.selection.start;\n            }\n            //Get start and end position in order.\n            var startBlockInfo = this.selection.getParagraphInfo(startPosition);\n            var endBlockInfo = this.selection.getParagraphInfo(endPosition);\n            for (var j = 0; j < comments.commentEndInfo.length; j++) {\n                var commentToDelete = comments.commentEndInfo[j].comment;\n                var commentStart = commentToDelete.commentStart;\n                var commentEndMark = commentToDelete.commentEnd;\n                var commentStartBlockInfo = this.selection.getParagraphInfoInternal(commentStart.line, commentStart.line.getOffset(commentStart, 0));\n                var commentEndBlockInfo = this.selection.getParagraphInfoInternal(commentEndMark.line, commentEndMark.line.getOffset(commentEndMark, 0));\n                if (endBlockInfo.paragraph === commentEndBlockInfo.paragraph) {\n                    if (commentToDelete.replyComments.length > 0) {\n                        for (var m = 0; m < commentToDelete.replyComments.length; m++) {\n                            var replyComment = commentToDelete.replyComments[m];\n                            if (!isNullOrUndefined(replyComment.commentEnd)) {\n                                endBlockInfo.offset--;\n                            }\n                        }\n                    }\n                    endBlockInfo.offset--;\n                }\n                if (startBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n                    var updateStartPosition = commentStartBlockInfo.offset < startBlockInfo.offset;\n                    if (commentToDelete.replyComments.length > 0) {\n                        for (var m = 0; m < commentToDelete.replyComments.length; m++) {\n                            var replyComment = commentToDelete.replyComments[m];\n                            if (!isNullOrUndefined(replyComment.commentStart)) {\n                                var replyCommentStart = this.selection.getParagraphInfoInternal(replyComment.commentStart.line, replyComment.commentStart.line.getOffset(replyComment.commentStart, 0));\n                                if (replyCommentStart.offset < startBlockInfo.offset) {\n                                    startBlockInfo.offset--;\n                                }\n                                if (endBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n                                    endBlockInfo.offset--;\n                                }\n                            }\n                        }\n                    }\n                    if (updateStartPosition) {\n                        startBlockInfo.offset--;\n                    }\n                    if (endBlockInfo.paragraph === commentStartBlockInfo.paragraph) {\n                        endBlockInfo.offset--;\n                    }\n                }\n                this.deleteCommentInternal(commentToDelete);\n            }\n            if (comments.commentStartInfo.length > 0) {\n                for (var k = 0; k < comments.commentStartInfo.length; k++) {\n                    if (comments.commentStartInfo[k].line.paragraph.equals(endBlockInfo.paragraph)) {\n                        endBlockInfo.offset--;\n                    }\n                    this.removeInline(comments.commentStartInfo[k]);\n                }\n            }\n            var startLineInfo = selection.getLineInfoBasedOnParagraph(startBlockInfo.paragraph, startBlockInfo.offset);\n            selection.start.setPositionFromLine(startLineInfo.line, startLineInfo.offset);\n            var endLineInfo = selection.getLineInfoBasedOnParagraph(endBlockInfo.paragraph, endBlockInfo.offset);\n            selection.end.setPositionFromLine(endLineInfo.line, endLineInfo.offset);\n        }\n        return comments.commentStartInfo;\n    };\n    Editor.prototype.updateHistoryForComments = function (removedCommentStart) {\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)\n            && this.editorHistory.currentHistoryInfo.action === 'RemoveComment') {\n            if (!isNullOrUndefined(removedCommentStart)) {\n                for (var i = 0; i < removedCommentStart.length; i++) {\n                    this.initInsertInline(removedCommentStart[i], false);\n                }\n            }\n            this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n            this.editorHistory.updateComplexHistory();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onBackSpace = function () {\n        this.removeEditRange = true;\n        var selection = this.documentHelper.selection;\n        this.documentHelper.triggerSpellCheck = true;\n        if (selection.bookmarks.length > 0) {\n            this.extendSelectionToBookmarkStart();\n        }\n        if (selection.isEmpty) {\n            this.singleBackspace(selection, false);\n        }\n        else {\n            var comments = this.checkAndRemoveComments();\n            this.initHistory('BackSpace');\n            var skipBackSpace = this.deleteSelectedContents(selection, true);\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n                if (skipBackSpace) {\n                    this.editorHistory.currentBaseHistoryInfo = undefined;\n                }\n                else {\n                    if (this.checkEndPosition(selection)) {\n                        this.updateHistoryPosition(selection.end, false);\n                    }\n                    this.isSkipOperationsBuild = !isNullOrUndefined(this.alertDialog);\n                    this.reLayout(selection);\n                    this.isSkipOperationsBuild = false;\n                    this.insertSpaceInFormField();\n                }\n            }\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)) {\n                for (var k = 0; k < comments.length; k++) {\n                    this.initInsertInline(comments[k], false);\n                }\n                this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n                this.editorHistory.updateComplexHistory();\n            }\n            if (this.owner.isSpellCheck) {\n                this.documentHelper.triggerSpellCheck = false;\n            }\n        }\n        this.removeEditRange = false;\n        this.documentHelper.layout.islayoutFootnote = false;\n        this.updateXmlMappedContentControl();\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.insertRemoveBookMarkElements = function (isUpdateComplexHistory) {\n        var isHandledComplexHistory = false;\n        for (var i = 0; i < this.removedBookmarkElements.length; i++) {\n            var bookMark = this.removedBookmarkElements[i];\n            if (bookMark.bookmarkType === 0) {\n                var bookMarkStart = bookMark;\n                if (bookMarkStart && bookMarkStart.reference && this.removedBookmarkElements.indexOf(bookMarkStart.reference) !== -1) {\n                    var endIndex = this.removedBookmarkElements.indexOf(bookMarkStart.reference);\n                    var startIndex = this.removedBookmarkElements.indexOf(bookMarkStart);\n                    this.removedBookmarkElements.splice(endIndex, 1);\n                    this.removedBookmarkElements.splice(startIndex, 1);\n                    i--;\n                }\n                else {\n                    if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n                        this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n                        this.editorHistory.updateHistory();\n                    }\n                    this.initInsertInline(bookMarkStart.clone(), undefined, true);\n                    if (this.editorHistory.currentHistoryInfo && i === this.removedBookmarkElements.length - 1 && this.removedEditRangeStartElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n                        this.editorHistory.updateComplexHistory();\n                        isHandledComplexHistory = true;\n                    }\n                }\n            }\n            else {\n                var bookMarkEnd = bookMark;\n                if (bookMarkEnd && bookMarkEnd.reference && this.removedBookmarkElements.indexOf(bookMarkEnd.reference) !== -1) {\n                    var endIndex = this.removedBookmarkElements.indexOf(bookMarkEnd.reference);\n                    var startIndex = this.removedBookmarkElements.indexOf(bookMarkEnd);\n                    this.removedBookmarkElements.splice(endIndex, 1);\n                    this.removedBookmarkElements.splice(startIndex, 1);\n                    i--;\n                }\n                else {\n                    if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n                        this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n                        this.editorHistory.updateHistory();\n                    }\n                    this.initInsertInline(bookMarkEnd.clone(), undefined, true);\n                    if (this.editorHistory.currentHistoryInfo && i === this.removedBookmarkElements.length - 1 && this.removedEditRangeStartElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n                        this.editorHistory.updateComplexHistory();\n                        isHandledComplexHistory = true;\n                    }\n                }\n            }\n        }\n        this.removedBookmarkElements = [];\n        return isHandledComplexHistory;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.insertRemovedEditRangeEndElements = function (isUpdateComplexHistory) {\n        var isHandledComplexHistory = false;\n        for (var i = this.removedEditRangeEndElements.length - 1; i >= 0; i--) {\n            var editRangeEndElementBox = this.removedEditRangeEndElements[i];\n            if (editRangeEndElementBox && this.removedEditRangeStartElements.indexOf(editRangeEndElementBox.editRangeStart) !== -1) {\n                var endIndex = this.removedEditRangeEndElements.indexOf(editRangeEndElementBox);\n                var startIndex = this.removedEditRangeStartElements.indexOf(editRangeEndElementBox.editRangeStart);\n                this.removedEditRangeEndElements.splice(endIndex, 1);\n                this.removedEditRangeStartElements.splice(startIndex, 1);\n                i--;\n            }\n            else {\n                if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n                    this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n                    this.editorHistory.updateHistory();\n                }\n                this.initInsertInline(editRangeEndElementBox.clone(), undefined, true);\n                var inlineObj = this.selection.start.paragraph.getInline(this.selection.start.offset, 0);\n                inlineObj.element.editRangeStart.editRangeEnd = inlineObj.element;\n                if (this.editorHistory.currentHistoryInfo && i === 0 && this.removedEditRangeStartElements.length === 0 && this.removedBookmarkElements.length === 0) {\n                    this.editorHistory.updateComplexHistory();\n                    isHandledComplexHistory = true;\n                }\n            }\n        }\n        this.removedEditRangeEndElements = [];\n        return isHandledComplexHistory;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.insertRemovedEditRangeStartElements = function (isUpdateComplexHistory) {\n        var isHandledComplexHistory = false;\n        for (var i = 0; i < this.removedEditRangeStartElements.length; i++) {\n            var editRangeStartElementBox = this.removedEditRangeStartElements[i];\n            if (editRangeStartElementBox && this.removedEditRangeEndElements.indexOf(editRangeStartElementBox.editRangeEnd) !== -1) {\n                var endIndex = this.removedEditRangeEndElements.indexOf(editRangeStartElementBox.editRangeEnd);\n                var startIndex = this.removedEditRangeStartElements.indexOf(editRangeStartElementBox);\n                this.removedEditRangeEndElements.splice(endIndex, 1);\n                this.removedEditRangeStartElements.splice(startIndex, 1);\n                i--;\n            }\n            else {\n                if (this.editorHistory.currentBaseHistoryInfo && !isUpdateComplexHistory) {\n                    this.initComplexHistory(this.editorHistory.currentBaseHistoryInfo.action);\n                    this.editorHistory.updateHistory();\n                }\n                this.initInsertInline(editRangeStartElementBox.clone(), undefined, true);\n                var inlineObj = this.selection.start.paragraph.getInline(this.selection.start.offset, 0);\n                inlineObj.element.editRangeEnd.editRangeStart = inlineObj.element;\n                if (this.editorHistory.currentHistoryInfo && i === this.removedEditRangeStartElements.length - 1 && this.removedBookmarkElements.length === 0 && this.removedEditRangeEndElements.length === 0) {\n                    this.editorHistory.updateComplexHistory();\n                    isHandledComplexHistory = true;\n                }\n            }\n        }\n        this.removedEditRangeStartElements = [];\n        return isHandledComplexHistory;\n    };\n    /**\n     * @private\n     * @param {Selection} selection - Specifies the selection\n     * @param {boolean} isBackSpace - Specifies is backspace.\n     * @returns {boolean}\n     */\n    Editor.prototype.deleteSelectedContents = function (selection, isBackSpace, isDeletecell) {\n        var skipBackSpace = this.deleteSelectedContentInternal(selection, isBackSpace, selection.start, selection.end, isDeletecell);\n        var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n        selection.selectContent(textPosition, true);\n        return skipBackSpace;\n    };\n    Editor.prototype.removeWholeElement = function (selection) {\n        this.initHistory('BackSpace');\n        this.deleteSelectedContents(selection, true);\n        if (this.checkEndPosition(selection)) {\n            this.updateHistoryPosition(selection.end, false);\n        }\n        this.reLayout(selection);\n    };\n    Editor.prototype.getSelectedComments = function () {\n        var comments = this.documentHelper.comments;\n        var commentEnds = [];\n        var commentStarts = [];\n        for (var i = 0; i < comments.length; i++) {\n            var comment = comments[i];\n            var commentEnd = comment.commentEnd;\n            var commentStart = comment.commentStart;\n            if (!isNullOrUndefined(commentEnd) && this.selection.isElementInSelection(commentEnd, true)) {\n                commentEnds.push(commentEnd);\n            }\n            else if (!isNullOrUndefined(commentStart) && this.selection.isElementInSelection(commentStart, true)) {\n                commentStarts.push(commentStart);\n                for (var j = 0; j < comment.replyComments.length; j++) {\n                    if (comment.replyComments[j].commentStart) {\n                        commentStarts.push(comment.replyComments[j].commentStart);\n                    }\n                }\n            }\n        }\n        return { commentStartInfo: commentStarts, commentEndInfo: commentEnds };\n    };\n    /**\n     * Remove single character on left of cursor position\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {boolean} isRedoing - Specified the is redoing.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.singleBackspace = function (selection, isRedoing) {\n        var history = this.editorHistory;\n        // If backspace is pressed after auto format to hyperlink is done, need to undo auto format.\n        if (history && !isRedoing && !history.canRedo() && history.canUndo()) {\n            var historyInfo = history.undoStack[history.undoStack.length - 1];\n            var startBlockInfo = this.selection.getParagraphInfo(selection.start);\n            var endBlockInfo = this.selection.getParagraphInfo(selection.end);\n            if (historyInfo.action === 'AutoFormatHyperlink' && historyInfo.insertPosition === this.selection.getHierarchicalIndex(startBlockInfo.paragraph, startBlockInfo.offset.toString()) &&\n                historyInfo.endPosition === this.selection.getHierarchicalIndex(endBlockInfo.paragraph, endBlockInfo.offset.toString())) {\n                history.undo();\n                return;\n            }\n        }\n        var isCommentDelete = false;\n        var paragraph = selection.start.paragraph;\n        var currentLineWidget = selection.start.currentWidget;\n        var offset = selection.start.offset;\n        var indexInInline = 0;\n        var inlineObj = currentLineWidget.getInline(offset, indexInInline);\n        var inline = inlineObj.element;\n        var initComplextHistory = false;\n        var previousOffset = offset;\n        var updateSelection = false;\n        var previousNode;\n        while (inline instanceof CommentCharacterElementBox) {\n            var commentMark = inline;\n            inline = inline.previousNode;\n            if (isNullOrUndefined(inline)) {\n                inline = previousNode;\n            }\n            if (!isNullOrUndefined(inline) && inline.commentType == 0) {\n                previousNode = inline.previousNode;\n            }\n            if (inline) {\n                previousOffset = inline.length;\n            }\n            if (commentMark.commentType === 0 && (isNullOrUndefined(inline) || !(inline instanceof CommentCharacterElementBox))) {\n                if (isNullOrUndefined(inline)) {\n                    inline = commentMark;\n                    previousOffset = 0;\n                }\n                else {\n                    previousOffset = inline.length;\n                }\n                updateSelection = true;\n                break;\n            }\n            else if (commentMark.commentType === 1) {\n                if (!initComplextHistory) {\n                    this.initComplexHistory('RemoveComment');\n                    initComplextHistory = true;\n                }\n                this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n                this.deleteCommentInternal(commentMark.comment);\n                this.isSkipOperationsBuild = false;\n                updateSelection = true;\n            }\n        }\n        if (updateSelection) {\n            //When paragraph has only comment end mark, there will be no previous inline and comment end mark will be delete\n            //And paragraph will become empty paragraph.\n            //So handled special case to update selection.\n            if (isNullOrUndefined(inline)) {\n                var lineWidget = paragraph.childWidgets[0];\n                selection.start.setPositionParagraph(lineWidget, 0);\n                selection.end.setPositionParagraph(lineWidget, 0);\n            }\n            else {\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, previousOffset);\n                selection.start.setPositionParagraph(inline.line, offset);\n                selection.end.setPositionParagraph(inline.line, offset);\n            }\n        }\n        if (this.selection.isInlineFormFillMode()) {\n            if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n                return;\n            }\n            var resultText = this.getFieldResultText();\n            if (resultText.length === 1) {\n                this.selection.selectFieldInternal(this.selection.getCurrentFormField());\n                this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n                this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n                return;\n            }\n        }\n        indexInInline = inlineObj.index;\n        if (inline instanceof TextElementBox) {\n            inline.ignoreOnceItems = [];\n        }\n        if (inline instanceof TextElementBox) {\n            inline.ignoreOnceItems = [];\n        }\n        var previousInline = inline;\n        if (inline instanceof FieldElementBox && inline.fieldType === 2) {\n            if (HelperMethods.isLinkedFieldCharacter(inline)) {\n                var begin = inline.fieldBegin;\n                var end = inline.fieldEnd;\n                if (begin.nextNode instanceof BookmarkElementBox && begin.nextNode.reference) {\n                    end = begin.nextNode.reference;\n                }\n                selection.start.setPositionParagraph(begin.line, begin.line.getOffset(begin, 0));\n                selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n                selection.fireSelectionChanged(true);\n                return;\n            }\n        }\n        if (!this.owner.enableTrackChanges && inline instanceof FootnoteElementBox) {\n            if (inline.footnoteType === 'Footnote') {\n                this.removeFootnote(inline);\n            }\n            else {\n                this.removeEndnote(inline);\n            }\n        }\n        if (inline && (inline instanceof ContentControl || inline.previousNode instanceof ContentControl)) {\n            if (inline instanceof ContentControl && inline.previousNode && !(inline.previousElement instanceof ListTextElementBox)) {\n                inline = inline.previousNode;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, inline.length);\n            }\n            if (inline && inline.length === 1 && inline.nextNode instanceof ContentControl\n                && inline.previousNode instanceof ContentControl) {\n                var start_1 = inline.previousNode;\n                var end = inline.nextNode;\n                if (!start_1.contentControlProperties.lockContentControl) {\n                    selection.start.setPositionParagraph(start_1.line, start_1.line.getOffset(start_1, 0));\n                    selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n                    this.removeWholeElement(selection);\n                    return;\n                }\n            }\n        }\n        // if (inline instanceof CommentCharacterElementBox && inline.commentType === 1) {\n        //     let comment: CommentElementBox = inline.comment;\n        //     if (comment.isReply) {\n        //         comment = comment.ownerComment;\n        //     }\n        //     while (inline instanceof CommentCharacterElementBox) {\n        //         inline = inline.previousNode;\n        //     }\n        //     this.deleteCommentInternal(comment);\n        //     paragraph = inline.line.paragraph;\n        //     offset = inline.line.getOffset(inline, inline.length);\n        //     selection.start.setPositionParagraph(inline.line, offset);\n        //     selection.end.setPositionParagraph(inline.line, offset);\n        //     isCommentDelete = true;\n        // }\n        if (inline instanceof FieldElementBox && inline.fieldType === 1 && !this.selection.isInlineFormFillMode()) {\n            var prevInline = selection.getPreviousValidElement(inline);\n            if (prevInline instanceof FieldElementBox) {\n                inline = prevInline.fieldBegin;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, 0);\n                if (inline.nextNode instanceof BookmarkElementBox && inline.nextNode.reference) {\n                    var start_2 = inline.nextNode.reference;\n                    selection.start.setPositionParagraph(start_2.line, start_2.line.getOffset(start_2, 1));\n                }\n                selection.end.setPositionParagraph(inline.line, offset); //Selects the entire field.\n                selection.fireSelectionChanged(true);\n                return;\n            }\n            else if (prevInline !== inline) {\n                inline = prevInline; //Updates the offset to delete next content.\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, inline.length);\n            }\n        }\n        if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n            if ((inline.nextNode instanceof EditRangeEndElementBox && inline.editRangeEnd === inline.nextNode)\n                || (inline.previousNode instanceof EditRangeStartElementBox\n                    && inline.editRangeStart === inline.previousNode)) {\n                return;\n            }\n            if (inline instanceof EditRangeStartElementBox && !(inline.previousNode instanceof EditRangeEndElementBox)) {\n                return;\n            }\n            if (this.documentHelper.isDocumentProtected &&\n                this.documentHelper.protectionType === 'ReadOnly') {\n                if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n                    return;\n                }\n            }\n            if (inline instanceof EditRangeEndElementBox) {\n                do {\n                    if (!isNullOrUndefined(inline.previousNode)) {\n                        inline = inline.previousNode;\n                        paragraph = inline.line.paragraph;\n                        offset = inline.line.getOffset(inline, inline.length);\n                    }\n                    else {\n                        break;\n                    }\n                } while (inline instanceof EditRangeEndElementBox);\n            }\n            if (inline.length === 1 && inline.nextNode instanceof EditRangeEndElementBox\n                && inline.previousNode instanceof EditRangeStartElementBox) {\n                var start_3 = inline.previousNode;\n                var end = inline.nextNode;\n                selection.start.setPositionParagraph(start_3.line, start_3.line.getOffset(start_3, 0));\n                selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n                this.removeWholeElement(selection);\n                return;\n            }\n        }\n        if (inline && (inline instanceof BookmarkElementBox || inline.previousNode instanceof BookmarkElementBox)) {\n            if (this.documentHelper.isDocumentProtected &&\n                this.documentHelper.protectionType === 'ReadOnly') {\n                if (inline.previousNode && inline.previousNode instanceof EditRangeStartElementBox || inline.previousNode instanceof EditRangeEndElementBox) {\n                    return;\n                }\n            }\n            if (inline instanceof BookmarkElementBox) {\n                if (inline.previousNode) {\n                    inline = inline.previousNode;\n                    if (inline instanceof FieldElementBox && !this.selection.isInlineFormFillMode()) {\n                        inline = inline.fieldBegin;\n                        paragraph = inline.line.paragraph;\n                        offset = inline.line.getOffset(inline, 0);\n                        if (inline.nextNode instanceof BookmarkElementBox && inline.nextNode.reference) {\n                            var start = inline.nextNode.reference;\n                            selection.start.setPositionParagraph(start.line, start.line.getOffset(start, 1));\n                        }\n                        selection.end.setPositionParagraph(inline.line, offset);\n                        selection.fireSelectionChanged(true);\n                        return;\n                    }\n                    paragraph = inline.line.paragraph;\n                    offset = inline.line.getOffset(inline, inline.length);\n                    selection.start.setPositionFromLine(inline.line, offset);\n                    selection.end.setPositionInternal(selection.start);\n                }\n                else {\n                    if (inline.bookmarkType === 1) {\n                        // remove paragraph mark and move bookmark to previous paragraph\n                        if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n                            var prevParagraph = paragraph.previousRenderedWidget;\n                            var line = prevParagraph.lastChild;\n                            selection.start.setPositionParagraph(inline.line, inline.line.getOffset(inline, 0));\n                            selection.end.setPositionParagraph(line, line.getEndOffset());\n                            this.removeWholeElement(selection);\n                            return;\n                        }\n                    }\n                    else {\n                        if (inline.paragraph.previousWidget instanceof ParagraphWidget) {\n                            selection.start.setPositionFromLine(inline.line, 0);\n                            selection.end.setPositionInternal(selection.start);\n                            offset = 0;\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                }\n                // Remove bookmark if selection is in between bookmark start and end element.\n            }\n            else if (inline.nextNode instanceof BookmarkElementBox && inline instanceof BookmarkElementBox &&\n                inline.bookmarkType === 0 && inline.reference === inline.nextNode) {\n                this.deleteBookmark(inline.name);\n                return;\n            }\n            if (inline.length === 1 && inline.nextNode instanceof BookmarkElementBox && inline.previousNode instanceof BookmarkElementBox) {\n                var begin = inline.previousNode;\n                var end = inline.nextNode;\n                selection.start.setPositionParagraph(begin.line, begin.line.getOffset(begin, 0));\n                selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n                this.removeWholeElement(selection);\n                return;\n            }\n        }\n        if (!isRedoing) {\n            this.initHistory('BackSpace');\n        }\n        if (offset === selection.getStartOffset(paragraph) && selection.start.currentWidget.isFirstLine()) {\n            if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n                // BUG_859140 - handled backspace for list as per word desktop behaviour\n                if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.undoStack) && this.editorHistory.undoStack.length > 0 &&\n                    this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1].action === 'ListFormat') {\n                    this.onApplyListInternal(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId), paragraph.paragraphFormat.listFormat.listLevelNumber - 1);\n                }\n                else {\n                    this.onApplyList(undefined);\n                }\n                return;\n            }\n            if (paragraph.paragraphFormat.firstLineIndent !== 0) {\n                this.onApplyParagraphFormat('firstLineIndent', 0, false, false);\n                if (paragraph.paragraphFormat.leftIndent !== 0) {\n                    this.onApplyParagraphFormat('leftIndent', 0, false, false);\n                }\n                return;\n            }\n            if (paragraph.paragraphFormat.leftIndent !== 0) {\n                this.onApplyParagraphFormat('leftIndent', 0, false, false);\n                return;\n            }\n            if (!paragraph.paragraphFormat.bidi && paragraph.paragraphFormat.textAlignment !== 'Left') {\n                this.onApplyParagraphFormat('textAlignment', 'Left', false, true);\n                return;\n            }\n            if (paragraph.previousRenderedWidget instanceof ParagraphWidget) {\n                selection.owner.isShiftingEnabled = true;\n                var previousParagraph = paragraph.previousRenderedWidget;\n                // if (isNullOrUndefined(previousParagraph)) {\n                //     previousParagraph = this.documentHelper.selection.getPreviousBlock(paragraph) as ParagraphWidget;\n                // }\n                if (this.owner.enableTrackChanges && paragraph.previousRenderedWidget != undefined && paragraph.previousRenderedWidget.characterFormat.revisions.length == 0) {\n                    if (!this.checkToMatchEmptyParaMarkBack(previousParagraph)) {\n                        this.insertRevision(previousParagraph.characterFormat, 'Deletion');\n                        var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n                        var previousIndex = previousParagraph.childWidgets.length - 1;\n                        this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n                        selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n                        this.addRemovedNodes(paragraph);\n                    }\n                    else {\n                        var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n                        var previousIndex = previousParagraph.childWidgets.length - 1;\n                        this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n                        selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n                        this.addRemovedNodes(paragraph);\n                    }\n                }\n                else if (previousParagraph.isEmpty() && !this.owner.enableTrackChanges) {\n                    this.removePrevParaMarkRevision(paragraph);\n                    if (!(paragraph === paragraph.bodyWidget.lastChild && previousParagraph.bodyWidget.index !== paragraph.bodyWidget.index)) {\n                        this.removeBlock(previousParagraph);\n                        this.addRemovedNodes(previousParagraph);\n                        var prevParagraph = paragraph.previousRenderedWidget;\n                        if (!isNullOrUndefined(prevParagraph) && prevParagraph instanceof ParagraphWidget && prevParagraph.isEmpty() && prevParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n                            selection.moveToPreviousCharacter();\n                        }\n                    }\n                    else {\n                        var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n                        var previousIndex = previousParagraph.childWidgets.length - 1;\n                        selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n                    }\n                }\n                else if (this.owner.enableTrackChanges && previousParagraph.characterFormat.revisions != undefined && previousParagraph.characterFormat.revisions[0].revisionType == 'Deletion') {\n                    var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n                    var previousIndex = previousParagraph.childWidgets.length - 1;\n                    this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n                    selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n                    this.addRemovedNodes(paragraph);\n                }\n                else {\n                    var checkCombine = false;\n                    if (!(paragraph === paragraph.bodyWidget.lastChild && previousParagraph.bodyWidget.index !== paragraph.bodyWidget.index) && paragraph.bodyWidget.sectionFormat.breakCode !== 'NoBreak') {\n                        this.removePrevParaMarkRevision(paragraph);\n                        this.removeBlock(paragraph, false, true);\n                        checkCombine = true;\n                    }\n                    var endOffset = this.documentHelper.selection.getLineLength(previousParagraph.lastChild);\n                    var previousIndex = previousParagraph.childWidgets.length - 1;\n                    var lineWidget = void 0;\n                    if (!paragraph.isEmpty() && checkCombine) {\n                        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n                            lineWidget = paragraph.childWidgets[i];\n                            previousParagraph.childWidgets.push(lineWidget);\n                            for (var j = 0; j < lineWidget.children.length; j++) {\n                                if (lineWidget.children[j] instanceof FootnoteElementBox) {\n                                    var index = this.documentHelper.footnoteCollection.indexOf(lineWidget.children[j]);\n                                    if (index === -1) {\n                                        lineWidget.children[j].isLayout = false;\n                                        var indexcolle = parseInt(lineWidget.children[j].text);\n                                        this.documentHelper.footnoteCollection.splice(indexcolle - 1, 0, lineWidget.children[j]);\n                                        // this.documentHelper.footnoteCollection.push(lineWidget.children[j] as FootnoteElementBox);\n                                    }\n                                }\n                            }\n                            paragraph.childWidgets.splice(i, 1);\n                            i--;\n                            lineWidget.paragraph = previousParagraph;\n                        }\n                    }\n                    this.documentHelper.layout.reLayoutParagraph(previousParagraph, previousIndex, 0);\n                    selection.selects(previousParagraph.childWidgets[previousIndex], endOffset, true);\n                    if (checkCombine) {\n                        this.addRemovedNodes(paragraph);\n                    }\n                }\n                this.setPositionForHistory();\n                var footNoteWidgets = this.documentHelper.layout.getFootNoteWidgetsOf(paragraph);\n                if (footNoteWidgets.length > 0) {\n                    var layout = this.documentHelper.layout;\n                    var bodyWidget = paragraph.bodyWidget;\n                    layout.layoutfootNote(bodyWidget.page.footnoteWidget);\n                }\n                // if (!isRedoing) {\n                this.reLayout(selection);\n                // }\n            }\n            else {\n                if (this.editorHistory) {\n                    this.editorHistory.currentBaseHistoryInfo = undefined;\n                }\n            }\n        }\n        else {\n            if (!isRedoing) {\n                selection.owner.isShiftingEnabled = true;\n            }\n            var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n            var lineWidget = selection.start.currentWidget;\n            var removeOffset = offset - 1;\n            if (removeOffset < 0) {\n                lineWidget = lineWidget.previousLine;\n                removeOffset = this.documentHelper.selection.getLineLength(lineWidget) + removeOffset;\n            }\n            this.removeAtOffset(lineWidget, selection, removeOffset);\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset - 1, false);\n            this.setPositionForHistory();\n            if (!isRedoing) {\n                this.reLayout(selection);\n                if (isCommentDelete) {\n                    this.owner.editorHistoryModule.undoStack[this.owner.editorHistoryModule.undoStack.length - 2].modifiedActions.push(this.owner.editorHistoryModule.undoStack[this.owner.editorHistoryModule.undoStack.length - 1]);\n                    this.owner.editorHistoryModule.undoStack.splice(this.owner.editorHistoryModule.undoStack.length - 1, 1);\n                    isCommentDelete = false;\n                }\n            }\n            else {\n                this.fireContentChange();\n            }\n        }\n        if (initComplextHistory && this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n            this.editorHistory.updateComplexHistory();\n        }\n    };\n    Editor.prototype.setPositionForHistory = function (editPosition) {\n        var selection = this.documentHelper.selection;\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            if (isNullOrUndefined(editPosition)) {\n                this.updateHistoryPosition(selection.start, true);\n                this.editorHistory.currentBaseHistoryInfo.endPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n            }\n            else {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = editPosition;\n                this.editorHistory.currentBaseHistoryInfo.endPosition = editPosition;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeAtOffset = function (lineWidget, selection, offset) {\n        var count = 0;\n        var lineIndex = lineWidget.paragraph.childWidgets.indexOf(lineWidget);\n        var childLength = lineWidget.children.length;\n        for (var i = 0; i < childLength; i++) {\n            var inline = lineWidget.children[i];\n            if (inline instanceof ListTextElementBox) {\n                continue;\n            }\n            var isBreak = this.removeCharacter(inline, offset, count, lineWidget, lineIndex, i);\n            if (isBreak) {\n                break;\n            }\n            count += inline.length;\n        }\n    };\n    Editor.prototype.removeCharacter = function (inline, offset, count, lineWidget, lineIndex, i, isRearrange) {\n        var isBreak = false;\n        if (inline instanceof BookmarkElementBox && inline.reference && inline.line !== inline.reference.line && !(lineWidget.children[i] instanceof BookmarkElementBox)) {\n            if (!isNullOrUndefined(inline.line.previousLine)) {\n                inline.line.previousLine.children.splice(inline.line.previousLine.children.length, 0, inline);\n                inline.line = inline.line.previousLine;\n            }\n            else if (!isNullOrUndefined(inline.line.paragraph.previousRenderedWidget)) {\n                inline.line.paragraph.previousRenderedWidget.lastChild.children.splice(inline.line.paragraph.previousRenderedWidget.lastChild.children.length, 0, inline);\n                inline.line = inline.line.paragraph.previousRenderedWidget.lastChild;\n            }\n            else if (!isNullOrUndefined(inline.line.paragraph.nextRenderedWidget)) {\n                inline.line.paragraph.nextRenderedWidget.firstChild.children.splice(inline.line.paragraph.nextRenderedWidget.firstChild.children.length, 0, inline);\n                inline.line = inline.line.paragraph.nextRenderedWidget.firstChild;\n            }\n            lineWidget.children.splice(i, 1);\n            if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n                lineWidget.layoutedElements.splice(i, 1);\n            }\n            return true;\n        }\n        if (offset < count + inline.length) {\n            var indexInInline = offset - count;\n            inline.ischangeDetected = true;\n            if (this.owner.isSpellCheck) {\n                // here we are removing errorCollection for next & previous elements for recalculating spellcheck error\n                var nextElement = inline.nextElement;\n                var previousElement = inline.previousElement;\n                this.owner.spellCheckerModule.removeErrorsFromCollection({ 'element': inline, 'text': inline.text });\n                if (!isNullOrUndefined(nextElement) && nextElement instanceof TextElementBox) {\n                    nextElement.ischangeDetected = true;\n                    this.owner.spellCheckerModule.removeErrorsFromCollection({ 'element': nextElement, 'text': nextElement.text });\n                }\n                if (!isNullOrUndefined(previousElement) && previousElement instanceof TextElementBox) {\n                    previousElement.ischangeDetected = true;\n                    this.owner.spellCheckerModule.removeErrorsFromCollection({ 'element': previousElement, 'text': previousElement.text });\n                }\n                if (!inline.canTrigger) {\n                    this.documentHelper.triggerSpellCheck = false;\n                }\n            }\n            if (offset === count && inline.length === 1) {\n                if (this.owner.enableTrackChanges && !this.skipTracking()) {\n                    this.addRemovedNodes(inline.clone());\n                    this.handleDeleteTracking(inline, indexInInline, 1, i);\n                }\n                else {\n                    this.unLinkFieldCharacter(inline);\n                    this.unlinkRangeFromRevision(inline, true);\n                    this.addRemovedRevisionInfo(inline, undefined);\n                    this.addRemovedNodes(inline);\n                    if (this.owner.enableTrackChanges && this.editorHistory.isRedoing && inline instanceof FootnoteElementBox) {\n                        if (inline.footnoteType === 'Footnote') {\n                            this.removeFootnote(inline);\n                        }\n                        else {\n                            this.removeEndnote(inline);\n                        }\n                    }\n                    lineWidget.children.splice(i, 1);\n                    if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n                        lineWidget.layoutedElements.splice(i, 1);\n                    }\n                }\n                this.documentHelper.layout.reLayoutParagraph(lineWidget.paragraph, lineIndex, i, undefined, isRearrange);\n            }\n            else {\n                var span = this.handleDeleteTracking(inline, indexInInline, 1);\n                this.documentHelper.layout.reLayoutParagraph(lineWidget.paragraph, lineIndex, i, undefined, isRearrange);\n                if (!isNullOrUndefined(span)) {\n                    if (inline.revisions.length > 0) {\n                        this.addRemovedRevisionInfo(inline, span);\n                    }\n                    this.addRemovedNodes(span);\n                }\n            }\n            if (inline instanceof EditRangeStartElementBox) {\n                this.selection.skipEditRangeRetrieval = true;\n                this.removeUserRestrictionsInternal(inline, undefined, true);\n                this.selection.updateEditRangeCollection();\n                this.fireContentChange();\n                this.selection.skipEditRangeRetrieval = false;\n            }\n            if (inline instanceof BookmarkElementBox) {\n                if (inline.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(inline.name)) {\n                    this.documentHelper.bookmarks.remove(inline.name);\n                }\n            }\n            isBreak = true;\n        }\n        return isBreak;\n    };\n    Editor.prototype.removeCharacterInLine = function (inline, indexInInline, endOffset) {\n        var span = new TextElementBox();\n        if (inline instanceof TextElementBox) {\n            span.characterFormat.copyFormat(inline.characterFormat);\n            var removedCount = (endOffset === 1) ? 1 : (endOffset - indexInInline);\n            span.text = inline.text.substr(indexInInline, removedCount);\n            var text = inline.text;\n            inline.text = text.substring(0, indexInInline) + text.substring(indexInInline + removedCount, text.length);\n            if (inline.contentControlProperties) {\n                span.contentControlProperties = inline.contentControlProperties.clone();\n            }\n        }\n        return span;\n    };\n    Editor.prototype.removeRevisionsInformation = function (elementBox, indexInInline, endOffset, elementIndex) {\n        var removeElement = elementBox.previousElement;\n        var revision;\n        revision = this.retrieveRevisionInOder(removeElement);\n        if (revision.revisionType === 'Insertion') {\n            if (this.isRevisionMatched(removeElement, undefined)) {\n                elementBox.line.children.splice(elementIndex, 1);\n            }\n        }\n    };\n    Editor.prototype.handleDeleteTracking = function (elementBox, indexInInline, endOffset, elementIndex, isSkipRecordRevision, startIndex, endIndex) {\n        var isTrackingEnabled = this.owner.enableTrackChanges;\n        var isUndoing = isNullOrUndefined(this.editorHistory) ? false : (this.editorHistory.isUndoing || this.editorHistory.isRedoing);\n        var removedNode = undefined;\n        if (this.canHandleDeletion() || (isTrackingEnabled && (!this.skipTracking() || (elementBox.paragraph.isInsideTable && !isNullOrUndefined(this.editorHistory) && this.editorHistory.isRedoing && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === \"RemoveRowTrack\")))) {\n            if (elementBox instanceof BookmarkElementBox || elementBox instanceof CommentCharacterElementBox || elementBox instanceof EditRangeStartElementBox || elementBox instanceof EditRangeEndElementBox) {\n                if (elementBox instanceof BookmarkElementBox && elementBox.previousElement instanceof FieldElementBox && elementBox.previousElement.formFieldData) {\n                    if (elementBox.previousElement.revisions.length > 0) {\n                        this.removeRevisionsInformation(elementBox, indexInInline, endOffset, elementIndex);\n                    }\n                }\n                else {\n                    if (isTrackingEnabled && elementBox instanceof BookmarkElementBox) {\n                        if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n                            this.insertRevision(elementBox, 'Deletion');\n                        }\n                        this.updateLastElementRevision(elementBox);\n                    }\n                    else {\n                        elementBox.line.children.splice(elementBox.indexInOwner, 1);\n                    }\n                }\n                return undefined;\n            }\n            var isDelete = false;\n            if (this.owner.editorHistoryModule) {\n                isDelete = (!isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete');\n            }\n            if (!this.skipTableElements) {\n                this.updateEndRevisionIndex();\n            }\n            if (elementBox.revisions.length > 0) {\n                var revision = this.retrieveRevisionInOder(elementBox);\n                var index = this.owner.revisions.changes.indexOf(revision);\n                if (!isNullOrUndefined(this.owner.editorHistoryModule) && !isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && !isSkipRecordRevision) {\n                    var startValue = isNullOrUndefined(elementIndex) ? indexInInline : 0;\n                    var endValue = isNullOrUndefined(elementIndex) ? ((endOffset === 1) ? 1 : (endOffset - indexInInline)) : elementBox.length;\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.recordInsertRevisionDeletetion(elementBox, startValue, endValue);\n                }\n                if (revision.revisionType === 'Insertion') {\n                    if (this.isRevisionMatched(elementBox, undefined)) {\n                        // inserted revision same author as delete revision so we can delete\n                        if (isNullOrUndefined(elementIndex)) {\n                            removedNode = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n                            var revision_2 = elementBox.revisions[0];\n                            if (!isNullOrUndefined(revision_2)) {\n                                this.owner.trackChangesPane.updateCurrentTrackChanges(revision_2);\n                            }\n                        }\n                        else {\n                            var index_1 = revision.range.indexOf(elementBox);\n                            revision.range.splice(index_1, 1);\n                            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                            if (revision.range.length === 0) {\n                                this.owner.revisionsInternal.remove(revision);\n                            }\n                            this.unLinkFieldCharacter(elementBox);\n                            elementBox.line.children.splice(elementIndex, 1);\n                        }\n                        if (elementBox instanceof FootnoteElementBox) {\n                            if (elementBox.footnoteType === 'Footnote') {\n                                this.removeFootnote(elementBox);\n                            }\n                            else {\n                                this.removeEndnote(elementBox);\n                            }\n                        }\n                    }\n                    else {\n                        //Insert revision and delete revision (which is to be included) haven't matched\n                        if (isNullOrUndefined(elementIndex)) {\n                            var text = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n                            var revision_3 = elementBox.revisions[0];\n                            if (!isNullOrUndefined(revision_3)) {\n                                this.owner.trackChangesPane.updateCurrentTrackChanges(revision_3);\n                            }\n                            if (indexInInline === 0) {\n                                var prevElement = elementBox.previousElement;\n                                this.handleDeletionForInsertRevision(prevElement, elementBox, text, endOffset, indexInInline, true);\n                            }\n                            else if (elementBox.length !== indexInInline) {\n                                for (var i = elementBox.revisions.length - 1; i >= 0; i--) {\n                                    var revision_4 = elementBox.revisions[i];\n                                    var index_2 = revision_4.range.indexOf(elementBox);\n                                    var newElement = new TextElementBox();\n                                    newElement.characterFormat.copyFormat(elementBox.characterFormat);\n                                    newElement.line = elementBox.line;\n                                    newElement.text = elementBox.text.substr(indexInInline);\n                                    newElement.revisions.splice(0, 0, revision_4);\n                                    revision_4.range.splice(index_2 + 1, 0, newElement);\n                                    text.revisions.splice(0, 0, revision_4);\n                                    text.line = elementBox.line;\n                                    revision_4.range.splice(index_2 + 1, 0, text);\n                                    this.owner.trackChangesPane.updateCurrentTrackChanges(revision_4);\n                                    elementBox.text = elementBox.text.substr(0, indexInInline);\n                                    var indexInOwner = elementBox.indexInOwner;\n                                    elementBox.line.children.splice(indexInOwner + 1, 0, newElement);\n                                    elementBox.line.children.splice(indexInOwner + 1, 0, text);\n                                    this.addRemovedNodes(text.clone());\n                                    this.insertRevision(text, 'Deletion');\n                                    this.updateLastElementRevision(text);\n                                }\n                            }\n                            else if (elementBox.length === indexInInline) {\n                                var nextElement = elementBox.nextElement;\n                                this.handleDeletionForInsertRevision(nextElement, elementBox, text, endOffset, indexInInline, false);\n                            }\n                            else {\n                                if (endOffset === 1) {\n                                    if (!isDelete) {\n                                        this.selection.start.movePreviousPosition();\n                                        this.selection.end.setPositionInternal(this.selection.start);\n                                    }\n                                }\n                                else {\n                                    this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n                                }\n                                this.addRemovedNodes(text.clone());\n                                this.insertInlineInternal(text, 'Deletion');\n                            }\n                        }\n                        else if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n                            this.insertRevision(elementBox, 'Deletion');\n                            this.updateLastElementRevision(elementBox);\n                        }\n                        else {\n                            this.updateLastElementRevision(elementBox);\n                        }\n                    }\n                }\n                else if (revision.revisionType === 'Deletion') {\n                    if (index !== -1 && revision.author !== this.owner.currentUser && revision.range.length > 0) {\n                        var range = revision.range;\n                        var startOff = range[0] instanceof WCharacterFormat ? 0 : range[0].line.getOffset(range[0], 0);\n                        var lastEle = range[range.length - 1] instanceof WCharacterFormat ? range[range.length - 2] : range[range.length - 1];\n                        var endOff = lastEle.line.getOffset(lastEle, lastEle.length);\n                        var isRevisionInserted = false;\n                        if (startOff === indexInInline && endOff === endOffset) {\n                            range.splice(range.indexOf(elementBox), 1);\n                            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                            elementBox.revisions.splice(elementBox.revisions.indexOf(revision), 1);\n                            if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n                                this.insertRevision(elementBox, 'Deletion');\n                                isRevisionInserted = true;\n                                this.updateLastElementRevision(elementBox);\n                            }\n                            else {\n                                this.combineElementRevision(elementBox.revisions, elementBox.revisions);\n                            }\n                            if (isRevisionInserted && elementBox.line.getOffset(elementBox, 0) === startOff && this.owner.revisions.changes.indexOf(revision) !== -1) {\n                                this.owner.revisions.changes.splice(index, 1);\n                            }\n                        }\n                    }\n                    if (endOffset === 1) {\n                        if (isDelete) {\n                            this.selection.start.moveNextPosition();\n                            this.selection.end.setPositionInternal(this.selection.start);\n                        }\n                        else {\n                            this.selection.start.movePreviousPosition();\n                            this.selection.end.setPositionInternal(this.selection.start);\n                        }\n                    }\n                    else {\n                        if (this.isRevisionMatched(elementBox, 'Deletion')) {\n                            this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n                        }\n                        else {\n                            var rangeIndex = revision.range.indexOf(elementBox);\n                            var endOff = elementBox.line.getOffset(elementBox, elementBox.length);\n                            if (endOff >= endOffset && (revision.range.length > (rangeIndex + 1))) {\n                                this.updateRevisionForSpittedTextElement(elementBox, revision.range[(rangeIndex + 1)]);\n                                revision.range.splice(revision.range.indexOf(elementBox), 1);\n                                this.toCombineOrInsertRevision(elementBox, 'Deletion');\n                                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                            }\n                            else if (revision.range.length === 1 || indexInInline === 0) {\n                                this.handleDeleteBySplitting(elementBox, indexInInline, endOffset);\n                                if (rangeIndex > 0 && revision.range.length !== 1) {\n                                    this.updateRevisionForSpittedTextElement(revision.range[(rangeIndex - 1)], revision.range[rangeIndex]);\n                                    revision = this.retrieveRevisionInOder(elementBox);\n                                    revision.range.splice(revision.range.indexOf(elementBox), 1);\n                                }\n                            }\n                            else {\n                                revision.range.splice(revision.range.indexOf(elementBox), 1);\n                                this.toCombineOrInsertRevision(elementBox, 'Deletion');\n                            }\n                        }\n                    }\n                    this.updateLastElementRevision(elementBox);\n                }\n            }\n            else {\n                //No revision information in the element\n                if (!isNullOrUndefined(elementIndex)) {\n                    if (!this.checkToCombineRevisionsInSides(elementBox, 'Deletion')) {\n                        this.insertRevision(elementBox, 'Deletion');\n                    }\n                    if (!this.skipFootNoteDeleteTracking) {\n                        this.updateLastElementRevision(elementBox);\n                    }\n                }\n                else {\n                    this.handleDeleteBySplitting(elementBox, indexInInline, endOffset);\n                }\n            }\n        }\n        else {\n            removedNode = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n            var revision = elementBox.revisions[0];\n            if (!isNullOrUndefined(revision)) {\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            }\n        }\n        return removedNode;\n    };\n    Editor.prototype.toCombineOrInsertRevision = function (elementBox, type) {\n        if (!this.checkToCombineRevisionsInSides(elementBox, type)) {\n            this.insertRevision(elementBox, type);\n            this.updateLastElementRevision(elementBox);\n        }\n        else {\n            this.combineElementRevision(elementBox.revisions, elementBox.revisions);\n        }\n    };\n    Editor.prototype.updateLastElementRevision = function (elementBox) {\n        if (!this.skipTableElements) {\n            if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo && !this.skipReplace && (!isNullOrUndefined(this.owner.searchModule) ? !this.owner.searchModule.isRepalceTracking : true)) {\n                if (isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.lastElementRevision)) {\n                    this.editorHistory.currentBaseHistoryInfo.lastElementRevision = elementBox;\n                }\n                elementBox.isMarkedForRevision = true;\n            }\n        }\n    };\n    Editor.prototype.updateEndRevisionIndex = function () {\n        if (!isNullOrUndefined(this.editorHistory.undoStack) && this.editorHistory.undoStack.length > 0) {\n            var prevHistoryInfo = this.editorHistory.undoStack[this.editorHistory.undoStack.length - 1];\n            if (prevHistoryInfo.lastElementRevision && isNullOrUndefined(prevHistoryInfo.endRevisionLogicalIndex)) {\n                prevHistoryInfo.updateEndRevisionInfo();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.retrieveRevisionInOder = function (elementBox) {\n        if (elementBox.revisions.length === 1) {\n            return elementBox.revisions[0];\n        }\n        for (var i = 0; i < elementBox.revisions.length; i++) {\n            if (elementBox.revisions[i].revisionType === 'Deletion') {\n                return elementBox.revisions[i];\n            }\n        }\n        return elementBox.revisions[elementBox.revisions.length - 1];\n    };\n    Editor.prototype.handleDeletionForInsertRevision = function (elementToEnsure, currentElement, spittedSpan, endOffset, indexInInline, isBegin) {\n        if (!isNullOrUndefined(elementToEnsure) && currentElement.revisions.length === 0 && this.isRevisionMatched(elementToEnsure, 'Deletion')) {\n            this.addRemovedNodes(spittedSpan.clone());\n            this.insertTextInline(elementToEnsure, this.selection, spittedSpan.text, 0);\n        }\n        else {\n            var revision = currentElement.revisions[currentElement.revisions.length - 1];\n            var index = revision.range.indexOf(currentElement);\n            revision.range.splice((isBegin) ? index : index + 1, 0, spittedSpan);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n            spittedSpan.revisions.splice(0, 0, revision);\n            var isDelete = false;\n            if (this.owner.editorHistoryModule) {\n                isDelete = (!isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete');\n            }\n            if (endOffset === 1 && !isDelete) {\n                this.selection.start.movePreviousPosition();\n                this.selection.end.setPositionInternal(this.selection.start);\n            }\n            else {\n                this.updateCursorForInsertRevision(currentElement, indexInInline, endOffset);\n            }\n            this.addRemovedNodes(spittedSpan.clone());\n            this.insertInlineInternal(spittedSpan, 'Deletion');\n        }\n    };\n    Editor.prototype.handleDeleteBySplitting = function (elementBox, indexInInline, endOffset) {\n        var isDelete = false;\n        if (this.owner.editorHistoryModule) {\n            isDelete = (!isNullOrUndefined(this.owner.editorHistoryModule.currentBaseHistoryInfo) && this.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'Delete');\n        }\n        //Update cursor position to insert removed content\n        if (endOffset === 1) {\n            var startPosition = elementBox.line.getOffset(elementBox, 0);\n            if (startPosition > 0) {\n                var currentPosition = new TextPosition(this.owner);\n                currentPosition.setPositionForLineWidget(elementBox.line, startPosition + indexInInline);\n                this.selection.start.setPositionInternal(currentPosition);\n                this.selection.end.setPositionInternal(this.selection.start);\n            }\n            else {\n                if (!isDelete) {\n                    this.selection.start.movePreviousPosition();\n                    this.selection.end.setPositionInternal(this.selection.start);\n                }\n            }\n        }\n        else {\n            this.updateCursorForInsertRevision(elementBox, indexInInline, endOffset);\n        }\n        var spittedElement = this.removeCharacterInLine(elementBox, indexInInline, endOffset);\n        var revision = elementBox.revisions[0];\n        if (!isNullOrUndefined(revision)) {\n            this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n        }\n        this.addRemovedNodes(spittedElement.clone());\n        if (spittedElement.text === '') {\n            this.deleteParagraphMark(elementBox.paragraph, this.selection, 0, true);\n        }\n        else {\n            this.insertTextInternal(spittedElement.text, false, 'Deletion');\n        }\n    };\n    Editor.prototype.updateCursorForInsertRevision = function (inline, startOffset, endOffset) {\n        var startPosition = inline.line.getOffset(inline, 0);\n        if (startPosition > 0) {\n            startOffset = startPosition + startOffset;\n            endOffset = startPosition + endOffset;\n        }\n        var currentPosition = new TextPosition(this.owner);\n        currentPosition.setPositionFromLine(inline.line, startOffset);\n        var endPosition = new TextPosition(this.owner);\n        endPosition.setPositionFromLine(inline.line, endOffset);\n        if (!currentPosition.isExistBefore(endPosition)) {\n            this.selection.start.setPositionInternal(endPosition);\n            this.selection.end.setPositionInternal(endPosition);\n        }\n        else {\n            this.selection.end.setPositionInternal(currentPosition);\n            this.selection.start.setPositionInternal(currentPosition);\n        }\n    };\n    Editor.prototype.checkToCombineRevisionsInSides = function (currentElement, revisionType) {\n        var prevElement = currentElement.previousNode;\n        var nextElement = currentElement.nextNode;\n        var isCombined = false;\n        if (!isNullOrUndefined(prevElement)) {\n            if (!(prevElement instanceof BookmarkElementBox)) {\n                prevElement = prevElement.previousValidNodeForTracking;\n            }\n            if (!isNullOrUndefined(prevElement)) {\n                var matchedRevisions = this.getMatchedRevisionsToCombine(prevElement.revisions, revisionType);\n                if (matchedRevisions.length > 0) {\n                    this.mapMatchedRevisions(matchedRevisions, prevElement, currentElement, false);\n                    isCombined = true;\n                }\n            }\n        }\n        if (!isNullOrUndefined(nextElement)) {\n            if (!(nextElement instanceof BookmarkElementBox)) {\n                nextElement = nextElement.nextValidNodeForTracking;\n            }\n            if (!isNullOrUndefined(nextElement)) {\n                var matchedRevisions = this.getMatchedRevisionsToCombine(nextElement.revisions, revisionType);\n                if (matchedRevisions.length > 0) {\n                    if (isCombined) {\n                        this.combineElementRevision(currentElement.revisions, nextElement.revisions);\n                    }\n                    else {\n                        this.mapMatchedRevisions(matchedRevisions, nextElement, currentElement, true);\n                    }\n                    isCombined = true;\n                }\n            }\n        }\n        return isCombined;\n    };\n    /**\n     * Removes the current selected content or one character right of the cursor.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.delete = function () {\n        this.removeEditRange = true;\n        var selection = this.documentHelper.selection;\n        if (selection.bookmarks.length > 0) {\n            this.extendSelectionToBookmarkStart();\n        }\n        if (selection.isEmpty) {\n            this.singleDelete(selection, false);\n        }\n        else {\n            var commentStarts = this.checkAndRemoveComments();\n            this.initHistory('Delete');\n            this.deleteSelectedContentInternal(selection, false, selection.start, selection.end);\n            var textPosition = new TextPosition(selection.owner);\n            this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n            selection.selectContent(textPosition, true);\n            this.reLayout(selection);\n            this.insertSpaceInFormField();\n            if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentHistoryInfo)\n                && this.editorHistory.currentHistoryInfo.action === 'RemoveComment') {\n                for (var k = 0; k < commentStarts.length; k++) {\n                    this.initInsertInline(commentStarts[k], false);\n                }\n                this.editorHistory.currentHistoryInfo.endPosition = this.selection.startOffset;\n                this.editorHistory.updateComplexHistory();\n            }\n        }\n        this.removeEditRange = false;\n        this.documentHelper.layout.islayoutFootnote = false;\n        this.updateXmlMappedContentControl();\n    };\n    Editor.prototype.deleteEditElement = function (selection) {\n        this.initHistory('Delete');\n        this.deleteSelectedContentInternal(selection, false, selection.start, selection.end);\n        var textPosition = new TextPosition(selection.owner);\n        this.setPositionForCurrentIndex(textPosition, selection.editPosition);\n        selection.selectContent(textPosition, true);\n        this.reLayout(selection);\n    };\n    Editor.prototype.removeContentControlMark = function (start, end) {\n        if (!start.contentControlProperties.lockContentControl) {\n            this.selection.start.setPositionParagraph(start.line, start.line.getOffset(start, 0));\n            this.selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 0) + 1);\n            this.deleteEditElement(this.selection);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Remove single character on right of cursor position\n     *\n     * @param {Selection} selection - Specifies the selection\n     * @param {boolean} isRedoing - Specified the is redoing.\n     * @private\n     * @returns {void}\n     */\n    /* eslint-disable  */\n    Editor.prototype.singleDelete = function (selection, isRedoing) {\n        var lineWidget = selection.start.currentWidget;\n        var paragraph = selection.start.paragraph;\n        var offset = selection.start.offset;\n        var indexInInline = 0;\n        var inlineObj = lineWidget.getInline(selection.start.offset, indexInInline);\n        var inline = inlineObj.element;\n        if (this.selection.isInlineFormFillMode()) {\n            if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                return;\n            }\n            var resultText = this.getFieldResultText();\n            if (!(inline instanceof TextElementBox)) {\n                inline = inline.nextElement;\n            }\n            if (resultText.length === 1 && inline instanceof TextElementBox) {\n                this.selection.selectFieldInternal(this.selection.getCurrentFormField());\n                this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n                this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n                return;\n            }\n            else {\n                if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                    return;\n                }\n            }\n        }\n        indexInInline = inlineObj.index;\n        if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1 &&\n            this.documentHelper.isListTextSelected && selection.contextType === 'List') {\n            this.onApplyList(undefined);\n            return;\n        }\n        if (!isNullOrUndefined(inline) && indexInInline === inline.length && !isNullOrUndefined(inline.nextNode)) {\n            inline = inline.nextNode;\n            if (inline instanceof FieldElementBox && inline.fieldType === 1 &&\n                !isNullOrUndefined(inline.fieldBegin.formFieldData)) {\n                return;\n            }\n            if (inline instanceof FootnoteElementBox) {\n                return;\n            }\n            indexInInline = 0;\n        }\n        var updateSelection = inline instanceof CommentCharacterElementBox;\n        //Skip removing comment start/end mark on delete key\n        while (inline instanceof CommentCharacterElementBox) {\n            if (inline.nextNode) {\n                inline = inline.nextNode;\n                indexInInline = 0;\n            }\n            else {\n                indexInInline = 1;\n                break;\n            }\n        }\n        if (updateSelection) {\n            paragraph = inline.line.paragraph;\n            offset = inline.line.getOffset(inline, indexInInline);\n            selection.start.setPositionParagraph(inline.line, offset);\n            selection.end.setPositionParagraph(inline.line, offset);\n        }\n        if (!this.owner.enableTrackChanges && inline instanceof FootnoteElementBox) {\n            if (inline.footnoteType === 'Footnote') {\n                this.removeFootnote(inline);\n            }\n            else {\n                this.removeEndnote(inline);\n            }\n        }\n        if (!isNullOrUndefined(inline)) {\n            var nextRenderedInline = undefined;\n            var nextInline = selection.getNextValidElement(inline);\n            if (nextInline instanceof ElementBox) {\n                nextRenderedInline = nextInline;\n            }\n            if (!isNullOrUndefined(nextRenderedInline) && nextRenderedInline instanceof FieldElementBox\n                && nextRenderedInline.fieldType === 0) { //Selects the entire field.\n                inline = nextRenderedInline.fieldEnd;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, 1);\n                selection.end.setPositionParagraph(inline.line, offset);\n                if (inline.nextNode instanceof BookmarkElementBox) {\n                    var end = inline.nextNode;\n                    selection.end.setPositionParagraph(end.line, end.line.getOffset(end, 1));\n                }\n                selection.fireSelectionChanged(true);\n                return;\n            }\n            else if (inline !== nextRenderedInline) { //Updates the offset to delete next content.               \n                inline = nextRenderedInline;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, 0);\n                if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                    offset++;\n                }\n            }\n        }\n        if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n            if ((inline.nextNode instanceof EditRangeEndElementBox && inline.editRangeEnd === inline.nextNode)\n                || (inline.previousNode instanceof EditRangeStartElementBox\n                    && inline.editRangeStart === inline.previousNode)) {\n                return;\n            }\n            if (this.documentHelper.isDocumentProtected &&\n                this.documentHelper.protectionType === 'ReadOnly') {\n                if (inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox) {\n                    return;\n                }\n            }\n            else {\n                if (inline instanceof EditRangeStartElementBox) {\n                    inline = inline.nextNode;\n                    offset = inline.line.getOffset(inline, 0);\n                    paragraph = inline.line.paragraph;\n                }\n                else if (inline instanceof EditRangeEndElementBox) {\n                    offset++;\n                }\n            }\n            if (inline.length === 1 && inline.nextNode instanceof EditRangeEndElementBox\n                && inline.previousNode instanceof EditRangeStartElementBox) {\n                var editStart = inline.previousNode;\n                var editEnd = inline.nextNode;\n                selection.start.setPositionParagraph(editStart.line, editStart.line.getOffset(editStart, 0));\n                selection.end.setPositionParagraph(editEnd.line, editEnd.line.getOffset(editEnd, 0) + 1);\n                this.deleteEditElement(selection);\n                return;\n            }\n        }\n        if (inline && (inline instanceof ContentControl || inline.nextNode instanceof ContentControl)) {\n            if (inline instanceof ContentControl && inline.nextNode) {\n                inline = inline.nextNode;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, 0);\n                // Move cursor inbetween content control\n                selection.start.setPositionParagraph(inline.line, offset);\n                selection.end.setPositionParagraph(inline.line, offset);\n                return;\n            }\n            if (inline && inline.length === 1 && inline.nextNode instanceof ContentControl\n                && inline.previousNode instanceof ContentControl) {\n                if (this.removeContentControlMark(inline.previousNode, inline.nextNode)) {\n                    return;\n                }\n            }\n            // Remove content if content control is empty\n            if (inline instanceof ContentControl && inline.previousNode instanceof ContentControl\n                && inline.previousNode.reference === inline) {\n                // Remove content control if there is no element presen in between start and end mark.\n                if (this.removeContentControlMark(inline.previousNode, inline)) {\n                    return;\n                }\n            }\n        }\n        if (inline && (inline instanceof BookmarkElementBox && inline.bookmarkType === 0\n            || inline.nextNode instanceof BookmarkElementBox)) {\n            if (inline.nextNode && inline instanceof BookmarkElementBox) {\n                inline = inline.nextNode;\n                paragraph = inline.line.paragraph;\n                offset = inline.line.getOffset(inline, 0);\n                selection.start.setPositionParagraph(inline.line, offset);\n                selection.end.setPositionParagraph(inline.line, offset);\n            }\n            if (inline.length === 1 && inline.nextNode instanceof BookmarkElementBox\n                && inline.previousNode instanceof BookmarkElementBox) {\n                var bookMarkBegin = inline.previousNode;\n                var bookMarkEnd = inline.nextNode;\n                selection.start.setPositionParagraph(bookMarkBegin.line, bookMarkBegin.line.getOffset(bookMarkBegin, 0));\n                selection.end.setPositionParagraph(bookMarkEnd.line, bookMarkEnd.line.getOffset(bookMarkEnd, 0) + 1);\n                this.deleteEditElement(selection);\n                return;\n            }\n            if (inline instanceof BookmarkElementBox) {\n                offset = inline.line.getOffset(inline, 1);\n            }\n        }\n        if (selection.start.currentWidget.isLastLine() && offset === this.documentHelper.selection.getLineLength(selection.start.currentWidget)) {\n            if (paragraph.isInsideTable && isNullOrUndefined(paragraph.nextWidget)) {\n                return;\n            }\n            var previousParagraph = undefined;\n            var newParagraph = undefined;\n            var nextParagraph = selection.getNextParagraphBlock(paragraph);\n            if (isNullOrUndefined(nextParagraph)) {\n                if (offset > 0) {\n                    return;\n                }\n                else {\n                    if (paragraph.previousWidget instanceof ParagraphWidget) {\n                        previousParagraph = paragraph.previousWidget;\n                    }\n                    if (paragraph.previousWidget instanceof FootNoteWidget) {\n                        return;\n                    }\n                    if (paragraph.previousWidget instanceof TableWidget) {\n                        return;\n                    }\n                    if (isNullOrUndefined(previousParagraph) || (paragraph.isEmpty() && previousParagraph.characterFormat.revisions.length > 0)) {\n                        return;\n                        //Adds an empty paragraph, to ensure minimal content.\n                    }\n                }\n            }\n            if (!isRedoing) {\n                this.initHistory('Delete');\n            }\n            if (paragraph.isEndsWithPageBreak || paragraph.isEndsWithColumnBreak) {\n                var lastLine = paragraph.lastChild;\n                var lastChild = lastLine.children[lastLine.children.length - 1];\n                this.selection.start.setPositionForSelection(lastLine, lastChild, 0, this.selection.start.location);\n            }\n            var blockInfo = this.selection.getParagraphInfo(selection.start);\n            selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            if (this.checkInsertPosition(selection)) {\n                this.setPositionForHistory(selection.editPosition);\n            }\n            selection.owner.isShiftingEnabled = true;\n            if (paragraph.isEmpty()) {\n                this.removePrevParaMarkRevision(paragraph, true);\n                var nxtParagraph = selection.getNextParagraphBlock(paragraph);\n                if (!isNullOrUndefined(nxtParagraph) && nxtParagraph instanceof ParagraphWidget && nxtParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n                    this.deleteSection(selection, paragraph.bodyWidget, nxtParagraph.bodyWidget, 0);\n                    this.editorHistory.currentBaseHistoryInfo.type = \"SectionBreak\";\n                }\n                this.removeBlock(paragraph, false, true);\n                this.addRemovedNodes(paragraph);\n                if (isNullOrUndefined(nextParagraph)) {\n                    if (isNullOrUndefined(previousParagraph)) {\n                        // selection.selectParagraphInternal(newParagraph, true, true);\n                        var paraEndOffset = selection.getParagraphLength(newParagraph) + 1;\n                        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n                            this.updateHistoryPosition(selection.start, true);\n                            this.editorHistory.currentBaseHistoryInfo.endPosition = this.selection.getHierarchicalIndex(newParagraph, paraEndOffset.toString());\n                        }\n                    }\n                    else {\n                        selection.selectParagraphInternal(previousParagraph, false);\n                        this.setPositionForHistory();\n                    }\n                }\n                else {\n                    selection.selectParagraphInternal(nextParagraph, true);\n                }\n            }\n            else {\n                if (this.owner.enableTrackChanges && paragraph.nextRenderedWidget instanceof ParagraphWidget) {\n                    var nextParagraph_1 = paragraph.nextRenderedWidget;\n                    var startingOffset = 0;\n                    var nextIndex = nextParagraph_1.childWidgets.length - 1;\n                    paragraph = paragraph.combineWidget(this.owner.viewer);\n                    var currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, selection.start.currentWidget, selection.start.offset, true);\n                    if (paragraph != undefined && paragraph.characterFormat.revisions.length != 0 && paragraph.characterFormat.revisions[0].revisionType == 'Insertion') {\n                        this.removePrevParaMarkRevision(paragraph, true);\n                        this.deleteParagraphMark(currentParagraph, selection, 0);\n                        this.addRemovedNodes(paragraph);\n                        this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n                        selection.selectContent(selection.start, true);\n                    }\n                    else {\n                        this.removePrevParaMarkRevision(paragraph, true);\n                        this.deleteParagraphMark(currentParagraph, selection, 0, true);\n                        this.addRemovedNodes(paragraph);\n                        this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n                        selection.selects(nextParagraph_1.childWidgets[nextIndex], startingOffset, true);\n                    }\n                }\n                else {\n                    paragraph = paragraph.combineWidget(this.owner.viewer);\n                    var currentParagraph = this.splitParagraph(paragraph, paragraph.firstChild, 0, selection.start.currentWidget, selection.start.offset, true);\n                    this.removePrevParaMarkRevision(paragraph, true);\n                    this.deleteParagraphMark(currentParagraph, selection, 0);\n                    this.addRemovedNodes(paragraph);\n                    this.setPositionForCurrentIndex(selection.start, selection.editPosition);\n                    selection.selectContent(selection.start, true);\n                }\n            }\n            // if (!isRedoing) {\n            this.reLayout(selection);\n            // }\n        }\n        else {\n            this.singleDeleteInternal(selection, isRedoing, paragraph);\n        }\n        var line = selection.start.currentWidget;\n        var elementInfo = line.getInline(selection.start.offset + 1, 0);\n        if (elementInfo.element instanceof BookmarkElementBox) {\n            selection.start.offset++;\n            selection.end.offset++;\n        }\n    };\n    Editor.prototype.singleDeleteInternal = function (selection, isRedoing, paragraph) {\n        if (!isRedoing) {\n            selection.owner.isShiftingEnabled = true;\n            this.initHistory('Delete');\n        }\n        if (this.checkInsertPosition(selection)) {\n            this.updateHistoryPosition(selection.start, true);\n            this.editorHistory.currentBaseHistoryInfo.endPosition = this.editorHistory.currentBaseHistoryInfo.insertPosition;\n        }\n        var paragraphInfo = this.selection.getParagraphInfo(selection.start);\n        var lineWidget = selection.start.currentWidget;\n        var removeOffset = selection.start.offset;\n        var lineLength = selection.getLineLength(selection.start.currentWidget);\n        if (removeOffset >= lineLength) {\n            lineWidget = lineWidget.nextLine;\n            removeOffset = removeOffset - lineLength;\n        }\n        this.removeAtOffset(lineWidget, selection, removeOffset);\n        if (this.owner.enableTrackChanges && !isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.editorHistory.currentBaseHistoryInfo.action === 'Delete' && lineLength !== selection.getLineLength(selection.start.currentWidget)) {\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset, false);\n        }\n        else if (this.owner.enableTrackChanges && !this.skipTracking()) {\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + 1, false);\n        }\n        else {\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset, false);\n        }\n        if (!isRedoing) {\n            this.reLayout(selection);\n        }\n        else {\n            this.fireContentChange();\n        }\n    };\n    Editor.prototype.deleteParagraphMark = function (paragraph, selection, editAction, handleParaMark, isCombineLastBlock, skipHistoryCollection) {\n        if (isNullOrUndefined(paragraph.containerWidget)) {\n            return;\n        }\n        paragraph = paragraph.combineWidget(this.owner.viewer);\n        var nextParagraph = selection.getNextParagraphBlock(paragraph);\n        if (paragraph.isInsideTable && isNullOrUndefined(paragraph.nextWidget) || isNullOrUndefined(nextParagraph)) {\n            return;\n        }\n        //BodyWidget\n        var section = paragraph.containerWidget instanceof BodyWidget ? paragraph.containerWidget : undefined;\n        var table = undefined;\n        if (selection.getNextRenderedBlock(paragraph) instanceof TableWidget) {\n            table = selection.getNextRenderedBlock(paragraph);\n        }\n        else {\n            table = undefined;\n        }\n        if (nextParagraph.isInsideTable && !isNullOrUndefined(table) && table.contains(nextParagraph.associatedCell)) {\n            if (editAction < 4) {\n                // let nextSection: BodyWidget = table.containerWidget instanceof BodyWidget ? table.containerWidget : undefined;\n                // if (section !== nextSection) {\n                //     this.combineSection(section, selection, nextSection);\n                // }                \n                var offset = 0;\n                this.removeBlock(paragraph);\n                this.documentHelper.layout.clearListElementBox(nextParagraph);\n                this.documentHelper.layout.clearListElementBox(paragraph);\n                for (var i = paragraph.childWidgets.length - 1; i >= 0; i--) {\n                    var line = paragraph.childWidgets[i];\n                    for (var j = line.children.length - 1; j >= 0; j--) {\n                        var element = line.children[j];\n                        offset += element.length;\n                        nextParagraph.firstChild.children.unshift(element);\n                        element.line = nextParagraph.firstChild;\n                        // this.layoutInlineCollection(false, 0, nextParagraph.inlines, inline);\n                    }\n                }\n                this.documentHelper.layout.reLayoutParagraph(nextParagraph, 0, 0);\n                if (offset > 0) {\n                    selection.editPosition = this.selection.getHierarchicalIndex(nextParagraph, offset.toString());\n                }\n            }\n        }\n        else {\n            if (editAction < 4) {\n                // let nextSection: WSection = nextParagraph.section instanceof WSection ? nextParagraph.section as WSection : undefined;\n                // if (section !== nextSection) {\n                //     this.combineSection(section, selection, nextSection);\n                // }\n                var prevLength = paragraph.childWidgets.length - 1;\n                var nextPara = nextParagraph.getSplitWidgets();\n                nextParagraph = nextParagraph.combineWidget(this.owner.viewer);\n                this.documentHelper.layout.clearListElementBox(nextParagraph);\n                this.documentHelper.layout.clearListElementBox(paragraph);\n                this.updateEditPositionOnMerge(paragraph, nextParagraph);\n                var canRemoveParaMark = (!isNullOrUndefined(handleParaMark) && handleParaMark) ? this.handleDeleteParaMark(paragraph, nextPara[0]) : true;\n                if (canRemoveParaMark) {\n                    var prevLastLineIndex = paragraph.childWidgets.length - 1;\n                    var elementIndex = paragraph.childWidgets[prevLastLineIndex].children.length - 1;\n                    for (var i = 0; i < nextParagraph.childWidgets.length; i++) {\n                        var inline_1 = nextParagraph.childWidgets[i];\n                        if (nextParagraph.characterFormat.revisions.length > 0) {\n                            for (var i_2 = 0; i_2 < nextParagraph.characterFormat.revisions.length; i_2++) {\n                                for (var j = 0; j < nextParagraph.characterFormat.revisions[i_2].range.length; j++) {\n                                    nextParagraph.characterFormat.revisions[i_2].range[j].ownerBase = paragraph;\n                                }\n                                paragraph.characterFormat.revisions.push(nextParagraph.characterFormat.revisions[i_2]);\n                            }\n                        }\n                        nextParagraph.childWidgets.splice(i, 1);\n                        paragraph.childWidgets.push(inline_1);\n                        inline_1.paragraph = paragraph;\n                        i--;\n                    }\n                    for (var i = 0; i < nextParagraph.floatingElements.length; i++) {\n                        var inline = nextParagraph.floatingElements[i];\n                        nextParagraph.floatingElements.splice(i, 1);\n                        paragraph.floatingElements.push(inline);\n                        i--;\n                    }\n                    if (nextParagraph.bodyWidget.index !== paragraph.bodyWidget.index) {\n                        this.deleteSection(selection, paragraph.bodyWidget, nextParagraph.bodyWidget, editAction);\n                        this.editorHistory.currentBaseHistoryInfo.type = \"SectionBreak\";\n                    }\n                    if (nextParagraph.childWidgets.length === 0) {\n                        nextParagraph.childWidgets.push(new LineWidget(nextParagraph));\n                    }\n                    this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n                    this.removeBlock(nextParagraph);\n                    //this.combineRevisionOnDeleteParaMark(paragraph, prevLastLineIndex, elementIndex);\n                    if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo.action !== \"Insert\") {\n                        // if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentHistoryInfo) && this.editorHistory.currentHistoryInfo.action == 'Accept All') {\n                        //     this.removeRevisionForBlock(nextParagraph, undefined, false, true);\n                        // }\n                        if (!skipHistoryCollection) {\n                            this.addRemovedNodes(nextParagraph, isCombineLastBlock);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.handleDeleteParaMark = function (currentPara, nextPara) {\n        if (!this.owner.enableTrackChanges && currentPara.characterFormat.revisions.length > 0) {\n            // If tracking disabled and revision exists then remove revision from character format\n            for (var i = 0; i < currentPara.characterFormat.revisions.length; i++) {\n                var currentRevision = currentPara.characterFormat.revisions[i];\n                var rangeIndex = currentRevision.range.indexOf(currentPara.characterFormat);\n                currentRevision.range.splice(rangeIndex, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n                if (currentRevision.range.length === 0) {\n                    this.owner.revisions.remove(currentRevision);\n                }\n                return true;\n            }\n        }\n        if (this.owner.enableTrackChanges) {\n            var canRemoveParaMark = false;\n            if (currentPara.characterFormat.revisions.length > 0) {\n                var deleteRevision = this.retrieveRevisionByType(currentPara.characterFormat, 'Deletion');\n                if (!isNullOrUndefined(deleteRevision) && this.isRevisionMatched(deleteRevision, 'Deletion')) {\n                    var revisionIndex = currentPara.characterFormat.revisions.indexOf(deleteRevision);\n                    currentPara.characterFormat.revisions.splice(revisionIndex, 1);\n                    deleteRevision.range.splice(deleteRevision.range.indexOf(currentPara.characterFormat), 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(deleteRevision);\n                    if (deleteRevision.range.length === 0) {\n                        this.owner.revisions.remove(deleteRevision);\n                    }\n                    canRemoveParaMark = true;\n                }\n                var insertRevision = this.retrieveRevisionByType(currentPara.characterFormat, 'Insertion');\n                if (!isNullOrUndefined(insertRevision) && this.isRevisionMatched(currentPara.characterFormat, 'Insertion')) {\n                    var rangeIndex = insertRevision.range.indexOf(currentPara.characterFormat);\n                    insertRevision.range.splice(rangeIndex, 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(insertRevision);\n                    if (insertRevision.range.length === 0) {\n                        this.owner.revisions.remove(insertRevision);\n                    }\n                    canRemoveParaMark = true;\n                }\n                if (canRemoveParaMark) {\n                    return true;\n                }\n                else {\n                    this.applyRevisionForParaMark(currentPara, nextPara.firstChild, 'Deletion', false);\n                }\n                return false;\n            }\n            else {\n                this.applyRevisionForParaMark(currentPara, nextPara.firstChild, 'Deletion', false);\n                return false;\n            }\n        }\n        return true;\n    };\n    Editor.prototype.insertDeleteParaMarkRevision = function (currentPara, nextPara) {\n        var lastLine = currentPara.lastChild;\n        var lastElement = lastLine.children.length > 0 ? lastLine.children[lastLine.children.length - 1].previousValidNodeForTracking : undefined;\n        if (!isNullOrUndefined(lastElement)) {\n            var matchedRevisions = this.getMatchedRevisionsToCombine(lastElement.revisions, 'Deletion');\n            if (matchedRevisions.length > 0) {\n                this.mapMatchedRevisions(matchedRevisions, lastElement, currentPara.characterFormat, false);\n            }\n        }\n        var firstLine = nextPara.firstChild;\n        var firstElement = firstLine.children[0].nextValidNodeForTracking;\n    };\n    Editor.prototype.retrieveRevisionByType = function (item, revisionToRetrieve) {\n        for (var i = 0; i < item.revisions.length; i++) {\n            if (item.revisions[i].revisionType === revisionToRetrieve) {\n                return item.revisions[i];\n            }\n        }\n        return undefined;\n    };\n    Editor.prototype.combineRevisionOnDeleteParaMark = function (paragraph, lineIndex, elementIndex) {\n        var lastLine = paragraph.childWidgets[lineIndex];\n        var lastElement = lastLine.children[elementIndex];\n        var firstElement = lastElement.nextNode;\n        firstElement = firstElement.nextValidNodeForTracking;\n        lastElement = lastElement.nextValidNodeForTracking;\n        if (firstElement.revisions.length > 0 && lastElement.revisions.length > 0) {\n            this.combineElementRevisions(lastElement, firstElement);\n        }\n    };\n    Editor.prototype.updateEditPositionOnMerge = function (currentParagraph, nextParagraph) {\n        if (this.documentHelper.selection.editPosition === this.selection.getHierarchicalIndex(nextParagraph, '0') &&\n            nextParagraph.nextRenderedWidget === undefined) {\n            this.documentHelper.selection.editPosition = this.selection.getHierarchicalIndex(currentParagraph, this.documentHelper.selection.getLineLength(currentParagraph.lastChild).toString());\n        }\n    };\n    Editor.prototype.checkEndPosition = function (selection) {\n        return (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)\n            && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.endPosition));\n    };\n    Editor.prototype.checkInsertPosition = function (selection) {\n        return (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)\n            && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo.insertPosition));\n    };\n    Editor.prototype.checkIsNotRedoing = function () {\n        return this.documentHelper.owner.enableHistoryMode && !this.editorHistory.isRedoing;\n    };\n    /**\n     * deleteSelectedContentInternal\n     * @private\n     */\n    Editor.prototype.deleteSelectedContentInternal = function (selection, isBackSpace, startPosition, endPosition, isDeletecell) {\n        var startPos = startPosition;\n        var endPos = endPosition;\n        if (!startPosition.isExistBefore(endPosition)) {\n            startPos = endPosition;\n            endPos = startPosition;\n        }\n        var blockInfo = this.selection.getParagraphInfo(startPos);\n        selection.editPosition = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        var skipBackSpace = false;\n        if (isBackSpace && startPos.isInSameParagraph(endPos)) {\n            //Handled specifically to skip removal of contents, if selection is only paragraph mark and next rendered block is table.\n            if (startPos.offset < endPos.offset && startPos.offset === selection.getParagraphLength(endPos.paragraph)) {\n                var nextBlock = selection.getNextRenderedBlock(startPos.paragraph);\n                skipBackSpace = nextBlock instanceof TableWidget;\n                if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && (this.editorHistory.currentBaseHistoryInfo.action === 'Accept All' || this.editorHistory.currentBaseHistoryInfo.action === 'Accept Change')) {\n                    skipBackSpace = false;\n                }\n            }\n            //Handled specifically to remove paragraph completely (Delete behavior), if the selected paragraph is empty.\n            if (endPos.offset === 1 && endPos.offset > selection.getParagraphLength(endPos.paragraph)\n                && !(endPos.paragraph.isInsideTable && isNullOrUndefined(endPos.paragraph.nextWidget))) {\n                isBackSpace = false;\n            }\n        }\n        if (!skipBackSpace) {\n            selection.owner.isShiftingEnabled = true;\n            if (this.checkInsertPosition(selection)) {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = selection.editPosition;\n            }\n            var editAction = (isBackSpace ? 1 : 0);\n            this.deleteSelectedContent(endPos.paragraph, selection, startPos, endPos, editAction, isDeletecell);\n        }\n        return skipBackSpace;\n    };\n    /**\n     * Init EditorHistory\n     *\n     * @private\n     * @param {Action} action Specified the action.\n     * @returns {void}\n     */\n    Editor.prototype.initHistory = function (action) {\n        if (this.documentHelper.owner.enableHistoryMode) {\n            this.editorHistory.initializeHistory(action);\n        }\n    };\n    /**\n     * Init Complex EditorHistory\n     *\n     * @private\n     * @param {Action} action Specified the action.\n     * @returns {void}\n     */\n    Editor.prototype.initComplexHistory = function (action) {\n        if (this.documentHelper.owner.enableHistoryMode) {\n            this.editorHistory.initComplexHistory(this.documentHelper.selection, action);\n        }\n    };\n    //Insert Picture implementation starts\n    /**\n     * Insert image\n     *\n     * @private\n     * @param {string} base64String Base64 string, web URL or file URL.\n     * @param {number} width Image width\n     * @param {number} height Image height\n     * @param {string} alternateText Image alternateText\n     * @returns {void}\n     */\n    Editor.prototype.insertPicture = function (base64String, width, height, alternateText, isUiInteracted) {\n        var _this = this;\n        var imageElementBox = new ImageElementBox(true);\n        imageElementBox.width = width;\n        imageElementBox.height = height;\n        if (!isNullOrUndefined(alternateText) || alternateText != \"\") {\n            imageElementBox.alternateText = alternateText;\n        }\n        imageElementBox.textWrappingStyle = 'Inline';\n        if (HelperMethods.formatClippedString(base64String).extension === '.svg') {\n            imageElementBox.metaFileImageString = base64String;\n            imageElementBox.isMetaFile = true;\n            this.generateFallBackImage(base64String, width, height, imageElementBox, isUiInteracted);\n            if (!this.owner.enableCollaborativeEditing) {\n                this.documentHelper.addBase64StringInCollection(imageElementBox);\n                imageElementBox.element.src = this.documentHelper.getImageString(imageElementBox);\n                this.insertPictureInternal(imageElementBox, isUiInteracted);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.documentHelper)) {\n                imageElementBox.imageString = base64String;\n                imageElementBox.element.crossOrigin = 'Anonymous';\n                this.documentHelper.addBase64StringInCollection(imageElementBox);\n                var imgStr = this.documentHelper.getImageString(imageElementBox);\n                if (!isNullOrUndefined(imgStr) && (HelperMethods.startsWith(imgStr, 'http://') || HelperMethods.startsWith(imgStr, 'https://'))) {\n                    imgStr += \"?t=\" + new Date().getTime();\n                    // Generate fall back image for URL images.\n                    this.viewer.documentHelper.getBase64(base64String, width, height).then(function (imageUrlString) {\n                        _this.viewer.documentHelper.images.get(parseInt(imageElementBox.imageString))[1] = imageUrlString;\n                    });\n                }\n                imageElementBox.element.src = imgStr;\n                this.insertPictureInternal(imageElementBox, isUiInteracted);\n            }\n        }\n    };\n    Editor.prototype.generateFallBackImage = function (base64String, width, height, imageElementBox, isUiInteracted) {\n        var _this = this;\n        var drawImage = new Image();\n        drawImage.onload = function () {\n            if (_this.isImageInsert && _this.owner.enableCollaborativeEditing) {\n                _this.isRemoteAction = true;\n            }\n            var displayPixelRatio = Math.max(1, window.devicePixelRatio || 1);\n            var draw = document.createElement('canvas');\n            draw.width = width * displayPixelRatio;\n            draw.height = height * displayPixelRatio;\n            var context = draw.getContext('2d');\n            context.scale(displayPixelRatio, displayPixelRatio);\n            context.drawImage(drawImage, 0, 0, width, height);\n            imageElementBox.imageString = draw.toDataURL('image/png', 1);\n            if (_this.owner.enableCollaborativeEditing) {\n                _this.documentHelper.addBase64StringInCollection(imageElementBox);\n                imageElementBox.element.src = _this.documentHelper.getImageString(imageElementBox);\n                _this.insertPictureInternal(imageElementBox, isUiInteracted, _this.isRemoteAction);\n                _this.isImageInsert = false;\n                _this.isRemoteAction = false;\n            }\n        };\n        drawImage.src = base64String;\n        if (this.isRemoteAction) {\n            this.insertInlineInSelection(this.selection, imageElementBox);\n        }\n    };\n    Editor.prototype.insertPictureInternal = function (imageElementBox, isUiInteracted, isElementInserted) {\n        var selection = this.documentHelper.selection;\n        var removedCommentStart = this.checkAndRemoveComments();\n        this.initHistory('InsertInline');\n        if (isUiInteracted) {\n            this.fitImageToPage(selection, imageElementBox);\n        }\n        if (this.owner.enableCollaborativeEditing) {\n            var imageString = void 0;\n            var metaImageString = void 0;\n            if (imageElementBox.isMetaFile) {\n                imageString = this.documentHelper.images.get(parseInt(imageElementBox.imageString))[1].toString();\n                metaImageString = this.documentHelper.images.get(parseInt(imageElementBox.metaFileImageString))[0].toString();\n            }\n            else {\n                imageString = this.documentHelper.images.get(parseInt(imageElementBox.imageString)).toString();\n            }\n            var imageData = {\n                imageString: imageString,\n                height: HelperMethods.convertPixelToPoint(imageElementBox.height),\n                width: HelperMethods.convertPixelToPoint(imageElementBox.width),\n                metaString: metaImageString,\n                alternativeText: imageElementBox.alternateText\n            };\n            this.editorHistory.currentBaseHistoryInfo.insertedData = imageData;\n            this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Image;\n        }\n        if (!isElementInserted) {\n            this.insertInlineInSelection(selection, imageElementBox);\n        }\n        this.reLayout(selection);\n        this.updateHistoryForComments(removedCommentStart);\n    };\n    Editor.prototype.fitImageToPage = function (selection, imageElementBox) {\n        var section = selection.start.paragraph.bodyWidget;\n        var pageHeight = section.sectionFormat.pageHeight - section.sectionFormat.topMargin - section.sectionFormat.topMargin;\n        var width = 0;\n        if (section instanceof BodyWidget && section.sectionFormat.columns.length > 1) {\n            // column width\n            var colIndex = section.columnIndex;\n            width = section.sectionFormat.columns[colIndex].width;\n        }\n        else {\n            // page width\n            width = HelperMethods.convertPointToPixel(section.sectionFormat.pageWidth - section.sectionFormat.leftMargin - section.sectionFormat.rightMargin);\n        }\n        // Resize image based on page width or column width\n        if (imageElementBox.width > width) {\n            imageElementBox.height = imageElementBox.height * width / imageElementBox.width;\n            imageElementBox.width = width;\n        }\n        if (imageElementBox.height > pageHeight) {\n            imageElementBox.width = imageElementBox.width * pageHeight / imageElementBox.height;\n            imageElementBox.height = pageHeight;\n        }\n    };\n    //Insert Picture implementation ends\n    /**\n     * @param {selection} Selection context.\n     * @param {elementBox} Elementbox\n     * @param selection\n     * @param elementBox\n     * @private\n     */\n    Editor.prototype.insertInlineInSelection = function (selection, elementBox) {\n        if (this.checkIsNotRedoing()) {\n            selection.owner.isShiftingEnabled = true;\n        }\n        if (!selection.isEmpty) {\n            this.removeSelectedContents(selection);\n        }\n        // Need to check below case when undo/redo in trackchanges enabled.  \n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo && this.owner.enableCollaborativeEditing) {\n            this.editorHistory.currentBaseHistoryInfo.insertedElement = elementBox;\n            if (elementBox instanceof CommentCharacterElementBox) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = elementBox.commentType == 0 ? CONTROL_CHARACTERS.Marker_Start : CONTROL_CHARACTERS.Marker_End;\n            }\n            else if (elementBox instanceof FootnoteElementBox) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n                this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elementBox));\n            }\n            else if (elementBox instanceof BookmarkElementBox || elementBox instanceof EditRangeStartElementBox || elementBox instanceof EditRangeEndElementBox || elementBox instanceof FieldElementBox || elementBox instanceof TextElementBox && elementBox.removedIds.length == 0) {\n                this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elementBox, this.editorHistory.isUndoing));\n                if (elementBox instanceof FieldElementBox && elementBox.fieldType === 0) {\n                    this.editorHistory.currentBaseHistoryInfo.fieldBegin = elementBox;\n                }\n            }\n        }\n        this.updateInsertPosition();\n        this.insertInlineInternal(elementBox);\n        if (this.checkEndPosition(selection)) {\n            this.updateHistoryPosition(selection.start, false);\n        }\n        this.fireContentChange();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onPortrait = function () {\n        var sectionFormat = new WSectionFormat();\n        var width = this.documentHelper.selection.sectionFormat.pageWidth;\n        var height = this.documentHelper.selection.sectionFormat.pageHeight;\n        if (width > height) {\n            sectionFormat.pageWidth = height;\n            sectionFormat.pageHeight = width;\n        }\n        this.onApplySectionFormat(undefined, sectionFormat);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onLandscape = function () {\n        var sectionFormat = new WSectionFormat();\n        var width = this.documentHelper.selection.sectionFormat.pageWidth;\n        var height = this.documentHelper.selection.sectionFormat.pageHeight;\n        if (width < height) {\n            sectionFormat.pageWidth = height;\n            sectionFormat.pageHeight = width;\n        }\n        this.onApplySectionFormat(undefined, sectionFormat);\n    };\n    Editor.prototype.copyValues = function () {\n        var format = new WSectionFormat();\n        format.bottomMargin = this.documentHelper.selection.sectionFormat.bottomMargin;\n        format.topMargin = this.documentHelper.selection.sectionFormat.topMargin;\n        format.leftMargin = this.documentHelper.selection.sectionFormat.leftMargin;\n        format.rightMargin = this.documentHelper.selection.sectionFormat.rightMargin;\n        format.pageHeight = this.documentHelper.selection.sectionFormat.pageHeight;\n        format.pageWidth = this.documentHelper.selection.sectionFormat.pageWidth;\n        format.footerDistance = this.documentHelper.selection.sectionFormat.footerDistance;\n        format.headerDistance = this.documentHelper.selection.sectionFormat.headerDistance;\n        return format;\n    };\n    /**\n     * @param property\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.changeMarginValue = function (property) {\n        var sectionFormat = this.copyValues();\n        if (property === 'lastCustomSetting' || property === 'normal') {\n            sectionFormat.topMargin = 72;\n            sectionFormat.bottomMargin = 72;\n            sectionFormat.leftMargin = 72;\n            sectionFormat.rightMargin = 72;\n        }\n        else if (property === 'narrow') {\n            sectionFormat.topMargin = 36;\n            sectionFormat.bottomMargin = 36;\n            sectionFormat.leftMargin = 36;\n            sectionFormat.rightMargin = 36;\n        }\n        else if (property === 'moderate') {\n            sectionFormat.topMargin = 72;\n            sectionFormat.bottomMargin = 72;\n            sectionFormat.leftMargin = 54;\n            sectionFormat.rightMargin = 54;\n        }\n        else if (property === 'wide') {\n            sectionFormat.topMargin = 72;\n            sectionFormat.bottomMargin = 72;\n            sectionFormat.leftMargin = 144;\n            sectionFormat.rightMargin = 144;\n        }\n        else if (property === 'mirrored') {\n            sectionFormat.topMargin = 72;\n            sectionFormat.bottomMargin = 72;\n            sectionFormat.leftMargin = 90;\n            sectionFormat.rightMargin = 72;\n        }\n        else if (property === 'office2003Default') {\n            sectionFormat.topMargin = 72;\n            sectionFormat.bottomMargin = 72;\n            sectionFormat.leftMargin = 90;\n            sectionFormat.rightMargin = 90;\n        }\n        this.onApplySectionFormat(undefined, sectionFormat);\n    };\n    /**\n     * @param property\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onPaperSize = function (property) {\n        var sectionFormat = this.copyValues();\n        var width = this.documentHelper.selection.sectionFormat.pageWidth;\n        var height = this.documentHelper.selection.sectionFormat.pageHeight;\n        if (property === 'letter') {\n            if (width < height) {\n                sectionFormat.pageWidth = 612;\n                sectionFormat.pageHeight = 792;\n            }\n            else {\n                sectionFormat.pageWidth = 792;\n                sectionFormat.pageHeight = 612;\n            }\n        }\n        else if (property === 'tabloid') {\n            if (width < height) {\n                sectionFormat.pageWidth = 792;\n                sectionFormat.pageHeight = 1224;\n            }\n            else {\n                sectionFormat.pageWidth = 1224;\n                sectionFormat.pageHeight = 792;\n            }\n        }\n        else if (property === 'legal') {\n            if (width < height) {\n                sectionFormat.pageWidth = 612;\n                sectionFormat.pageHeight = 1008;\n            }\n            else {\n                sectionFormat.pageWidth = 1008;\n                sectionFormat.pageHeight = 612;\n            }\n        }\n        else if (property === 'statement') {\n            if (width < height) {\n                sectionFormat.pageWidth = 396;\n                sectionFormat.pageHeight = 612;\n            }\n            else {\n                sectionFormat.pageWidth = 612;\n                sectionFormat.pageHeight = 396;\n            }\n        }\n        else if (property === 'executive') {\n            if (width < height) {\n                sectionFormat.pageWidth = 522;\n                sectionFormat.pageHeight = 756;\n            }\n            else {\n                sectionFormat.pageWidth = 756;\n                sectionFormat.pageHeight = 522;\n            }\n        }\n        else if (property === 'a3') {\n            if (width < height) {\n                sectionFormat.pageWidth = 841.9;\n                sectionFormat.pageHeight = 1190.55;\n            }\n            else {\n                sectionFormat.pageWidth = 1190.55;\n                sectionFormat.pageHeight = 841.9;\n            }\n        }\n        else if (property === 'a4') {\n            if (width < height) {\n                sectionFormat.pageWidth = 595.3;\n                sectionFormat.pageHeight = 841.9;\n            }\n            else {\n                sectionFormat.pageWidth = 841.9;\n                sectionFormat.pageHeight = 595.3;\n            }\n        }\n        else if (property === 'a5') {\n            if (width < height) {\n                sectionFormat.pageWidth = 419.55;\n                sectionFormat.pageHeight = 595.3;\n            }\n            else {\n                sectionFormat.pageWidth = 595.3;\n                sectionFormat.pageHeight = 419.55;\n            }\n        }\n        else if (property === 'b4') {\n            if (width < height) {\n                sectionFormat.pageWidth = 728.5;\n                sectionFormat.pageHeight = 1031.8;\n            }\n            else {\n                sectionFormat.pageWidth = 1031.8;\n                sectionFormat.pageHeight = 728.5;\n            }\n        }\n        else if (property === 'b5') {\n            if (width < height) {\n                sectionFormat.pageWidth = 515.9;\n                sectionFormat.pageHeight = 728.5;\n            }\n            else {\n                sectionFormat.pageWidth = 728.5;\n                sectionFormat.pageHeight = 515.9;\n            }\n        }\n        this.onApplySectionFormat(undefined, sectionFormat);\n    };\n    //Update List Items\n    /**\n     * @param blockAdv\n     * @param updateNextBlockList\n     * @param blockAdv\n     * @param updateNextBlockList\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateListItemsTillEnd = function (blockAdv, updateNextBlockList) {\n        var block = updateNextBlockList ? this.documentHelper.selection.getNextRenderedBlock(blockAdv) : blockAdv;\n        while (!isNullOrUndefined(block) && !this.documentHelper.isTextInput) {\n            //Updates the list value of the rendered paragraph.\n            this.updateRenderedListItems(block);\n            block = block.getSplitWidgets().pop().nextRenderedWidget;\n        }\n    };\n    /**\n     * @param block\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateWholeListItems = function (block, isFindingListParagraph, listID) {\n        this.documentHelper.renderedLists.clear();\n        this.documentHelper.renderedLevelOverrides = [];\n        var sectionIndex = block.bodyWidget.index;\n        var currentBlock;\n        for (var j = 0; j < this.documentHelper.pages.length; j++) {\n            var page = this.documentHelper.pages[j];\n            for (var i = 0; i < page.bodyWidgets.length; i++) {\n                //if (page.bodyWidgets[i].index === sectionIndex) {\n                currentBlock = this.getNextBlockForList(page.bodyWidgets[i].firstChild);\n                if (!isNullOrUndefined(currentBlock)) {\n                    break;\n                }\n                //}\n            }\n            if (!isNullOrUndefined(currentBlock)) {\n                break;\n            }\n        }\n        var isListUpdated = false;\n        do {\n            if (!currentBlock) {\n                break;\n            }\n            var listSearchResultInfo = null;\n            if (isFindingListParagraph) {\n                listSearchResultInfo = { paragraph: null, listId: listID };\n            }\n            isListUpdated = this.updateListItems(currentBlock, block, listSearchResultInfo);\n            if (isListUpdated) {\n                if (!isNullOrUndefined(listSearchResultInfo)) {\n                    if (listSearchResultInfo.paragraph == block) {\n                        return null;\n                    }\n                    else {\n                        return listSearchResultInfo.paragraph;\n                    }\n                }\n                break;\n            }\n            currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n            if (!isNullOrUndefined(currentBlock)) {\n                currentBlock = this.getNextBlockForList(currentBlock);\n            }\n        } while (currentBlock);\n        return null;\n    };\n    Editor.prototype.getNextBlockForList = function (currentBlock) {\n        if (currentBlock instanceof ParagraphWidget &&\n            this.documentHelper.layout.isFirstElementWithPageBreak(currentBlock)) {\n            var nextBlock = currentBlock.nextRenderedWidget;\n            if (!isNullOrUndefined(nextBlock) && nextBlock.equals(currentBlock)) {\n                return nextBlock;\n            }\n        }\n        return currentBlock;\n    };\n    Editor.prototype.updateListItems = function (blockAdv, block, listSearchResultInfo) {\n        var isListUpdated = false;\n        if (blockAdv instanceof ParagraphWidget) {\n            isListUpdated = this.updateListItemsForPara(blockAdv, block, listSearchResultInfo);\n        }\n        else {\n            isListUpdated = this.updateListItemsForTable(blockAdv, block, listSearchResultInfo);\n        }\n        return isListUpdated;\n    };\n    Editor.prototype.updateListItemsForTable = function (table, block, listSearchResultInfo) {\n        if (isNullOrUndefined(listSearchResultInfo) && block instanceof TableWidget && table.equals(block)) {\n            return true;\n        }\n        var row = table.firstChild;\n        do {\n            var isListUpdated = this.updateListItemsForRow(row, block, listSearchResultInfo);\n            if (isListUpdated) {\n                return true;\n            }\n            row = row.getSplitWidgets().pop().nextRenderedWidget;\n        } while (row);\n        return false;\n    };\n    Editor.prototype.updateListItemsForRow = function (row, block, listSearchResultInfo) {\n        if (isNullOrUndefined(listSearchResultInfo) && block.isInsideTable && row.childWidgets.indexOf(this.documentHelper.selection.getContainerCell(block.associatedCell)) !== -1) {\n            //Returns as list updated, inorder to start list numbering from first list paragraph of this row.\n            return true;\n        }\n        var cell = row.firstChild;\n        do {\n            this.updateListItemsForCell(cell, block, listSearchResultInfo);\n            if (!isNullOrUndefined(listSearchResultInfo) && !isNullOrUndefined(listSearchResultInfo.paragraph)) {\n                return true;\n            }\n            cell = cell.nextRenderedWidget;\n        } while (cell);\n        return false;\n    };\n    Editor.prototype.updateListItemsForCell = function (cell, block, listSearchResultInfo) {\n        if (cell.childWidgets.length === 0) {\n            return;\n        }\n        var currentBlock = cell.firstChild;\n        do {\n            this.updateListItems(currentBlock, block, listSearchResultInfo);\n            if (!isNullOrUndefined(listSearchResultInfo) && !isNullOrUndefined(listSearchResultInfo.paragraph)) {\n                break;\n            }\n            currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n        } while (currentBlock);\n    };\n    // public abstract updateListParagraphs(): void;\n    /**\n     * @param block\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateRenderedListItems = function (block) {\n        if (block instanceof ParagraphWidget) {\n            // if the block is a column break pick the next rendered widget.\n            if (block.isEndsWithColumnBreak) {\n                block = block.nextRenderedWidget;\n            }\n            this.updateRenderedListItemsForPara(block);\n        }\n        else {\n            this.updateRenderedListItemsForTable(block);\n        }\n    };\n    Editor.prototype.updateRenderedListItemsForTable = function (table) {\n        var row = table.firstChild;\n        do {\n            this.updateRenderedListItemsForRow(row);\n            row = row.getSplitWidgets().pop().nextRenderedWidget;\n        } while (row);\n    };\n    Editor.prototype.updateRenderedListItemsForRow = function (row) {\n        var cell = row.firstChild;\n        do {\n            this.updateRenderedListItemsForCell(cell);\n            cell = cell.nextRenderedWidget;\n        } while (cell);\n    };\n    Editor.prototype.updateRenderedListItemsForCell = function (cell) {\n        if (cell.childWidgets.length === 0) {\n            return;\n        }\n        var currentBlock = cell.firstChild;\n        do {\n            this.updateRenderedListItems(currentBlock);\n            currentBlock = currentBlock.getSplitWidgets().pop().nextRenderedWidget;\n        } while (currentBlock);\n    };\n    Editor.prototype.updateListItemsForPara = function (paragraph, block, listSearchResultInfo) {\n        if (paragraph.equals(block)) {\n            if (!isNullOrUndefined(listSearchResultInfo)) {\n                listSearchResultInfo.paragraph = paragraph;\n            }\n            return true;\n        }\n        else {\n            var currentList = undefined;\n            var levelNumber = 0;\n            if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n                if (!isNullOrUndefined(listSearchResultInfo) && paragraph.paragraphFormat.listFormat.listId === listSearchResultInfo.listId) {\n                    listSearchResultInfo.paragraph = paragraph;\n                    return true;\n                }\n                currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n                levelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n            }\n            if (!isNullOrUndefined(currentList) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId))\n                && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels[levelNumber])) {\n                var currentListLevel = this.documentHelper.layout.getListLevel(currentList, levelNumber);\n                //Updates the list numbering from document start for reLayouting.\n                this.updateListNumber(currentListLevel, paragraph, false);\n            }\n        }\n        return false;\n    };\n    Editor.prototype.updateRenderedListItemsForPara = function (paragraph) {\n        if (!isNullOrUndefined(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId))) {\n            var currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n            var listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n            if (!isNullOrUndefined(currentList) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId))\n                && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels[paragraph.paragraphFormat.listFormat.listLevelNumber])) {\n                var currentListLevel = this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n                //Updates the list numbering from document start for reLayouting.\n                this.updateListNumber(currentListLevel, paragraph, true);\n            }\n        }\n    };\n    Editor.prototype.updateListNumber = function (currentListLevel, paragraph, isUpdate) {\n        var element = undefined;\n        if (paragraph.childWidgets.length > 0) {\n            var lineWidget = paragraph.childWidgets[0];\n            if (lineWidget.children.length > 0) {\n                element = lineWidget.children[0];\n            }\n        }\n        var listWholeWidth;\n        if (!isNullOrUndefined(element) && element.nextElement instanceof ListTextElementBox) {\n            listWholeWidth = element.width + element.nextElement.width;\n        }\n        if (!isNullOrUndefined(element) && element instanceof ListTextElementBox) {\n            var text = this.documentHelper.layout.getListNumber(paragraph.paragraphFormat.listFormat);\n            if (isUpdate) {\n                var prevWidth = element.width;\n                element.text = text;\n                var currentWidth = this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n                if (currentWidth > prevWidth) {\n                    element.width = currentWidth;\n                }\n                this.documentHelper.textHelper.updateTextSize(element, paragraph);\n                if (!isNullOrUndefined(listWholeWidth) && element.width < listWholeWidth) {\n                    element.nextElement.width = (listWholeWidth - element.width);\n                }\n            }\n        }\n    };\n    /**\n     * Get offset value to update in selection\n     *\n     * @param selection\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.getOffsetValue = function (selection) {\n        if (this.startParagraph) {\n            var lineInfo = selection.getLineInfoBasedOnParagraph(this.startParagraph, this.startOffset);\n            selection.start.setPositionFromLine(lineInfo.line, lineInfo.offset);\n        }\n        selection.start.updatePhysicalPosition(true);\n        if (selection.isEmpty) {\n            selection.end.setPositionInternal(selection.start);\n        }\n        else {\n            if (this.endParagraph) {\n                var lineInfo = selection.getLineInfoBasedOnParagraph(this.endParagraph, this.endOffset);\n                selection.end.setPositionFromLine(lineInfo.line, lineInfo.offset);\n            }\n            selection.end.updatePhysicalPosition(true);\n        }\n    };\n    Editor.prototype.setPositionParagraph = function (paragraph, offset, skipSelectionChange) {\n        var selection = this.documentHelper.selection;\n        var lineInfo = selection.getLineInfoBasedOnParagraph(paragraph, offset);\n        selection.start.setPositionFromLine(lineInfo.line, lineInfo.offset);\n        selection.end.setPositionInternal(selection.start);\n        if (!skipSelectionChange) {\n            selection.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * @param textPosition\n     * @param editPosition\n     * @param textPosition\n     * @param editPosition\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.setPositionForCurrentIndex = function (textPosition, editPosition) {\n        var blockInfo = this.selection.getParagraph({ index: editPosition });\n        var lineInfo = this.selection.getLineInfoBasedOnParagraph(blockInfo.paragraph, blockInfo.offset);\n        textPosition.setPositionForLineWidget(lineInfo.line, lineInfo.offset);\n    };\n    /**\n     * Inserts the page number in the current cursor position.\n     *\n     * @param {string} numberFormat - Optional switch that overrides the numeral style of the page number.\n     * @returns {void}\n     */\n    Editor.prototype.insertPageNumber = function (numberFormat) {\n        if (isNullOrUndefined(numberFormat)) {\n            numberFormat = '';\n        }\n        else {\n            numberFormat = ' \\\\*' + numberFormat;\n        }\n        var fieldCode = 'PAGE ' + numberFormat + ' \\\\* MERGEFORMAT';\n        this.createFields(fieldCode);\n    };\n    /**\n     * @param numberFormat\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertPageCount = function (numberFormat) {\n        if (isNullOrUndefined(numberFormat)) {\n            numberFormat = '';\n        }\n        else {\n            numberFormat = ' \\*' + numberFormat;\n        }\n        var fieldCode = 'NUMPAGES ' + numberFormat + ' \\* MERGEFORMAT';\n        this.createFields(fieldCode);\n    };\n    Editor.prototype.createFields = function (fieldCode) {\n        var paragraph = new ParagraphWidget();\n        var line = new LineWidget(paragraph);\n        var fieldBegin = new FieldElementBox(0);\n        line.children.push(fieldBegin);\n        var fieldtext = new FieldTextElementBox();\n        fieldtext.fieldBegin = fieldBegin;\n        fieldtext.text = '1';\n        var text = new TextElementBox();\n        text.text = fieldCode;\n        line.children.push(text);\n        var fieldSeparator = new FieldElementBox(2);\n        fieldSeparator.fieldBegin = fieldBegin;\n        fieldBegin.fieldSeparator = fieldSeparator;\n        line.children.push(fieldSeparator);\n        line.children.push(fieldtext);\n        var fieldEnd = new FieldElementBox(1);\n        fieldEnd.fieldBegin = fieldBegin;\n        fieldEnd.fieldSeparator = fieldSeparator;\n        fieldSeparator.fieldEnd = fieldEnd;\n        fieldBegin.fieldEnd = fieldEnd;\n        line.children.push(fieldEnd);\n        fieldBegin.line = line;\n        paragraph.childWidgets.push(line);\n        this.documentHelper.fields.push(fieldBegin);\n        var bodyWidget = new BodyWidget();\n        bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n        bodyWidget.childWidgets.push(paragraph);\n        paragraph.isCreatedUsingHtmlSpanTag = true;\n        this.pasteContentsInternal([bodyWidget], false);\n    };\n    /**\n     * Inserts the specified bookmark at the current selection range.\n     *\n     * @param {string} name Specify the name of bookmark to be inserted.\n     * @returns {void}\n     */\n    Editor.prototype.insertBookmark = function (name) {\n        var isHistoryInitiated = false;\n        if (this.documentHelper.bookmarks.containsKey(name)) {\n            var existingBookmark = this.documentHelper.bookmarks.get(name);\n            // existingBookmark.line.children.splice(existingBookmark.line.children.indexOf(existingBookmark), 1);\n            // /* eslint-disable-next-line max-len */\n            // existingBookmark.reference.line.children.splice(existingBookmark.reference.line.children.indexOf(existingBookmark.reference), 1);\n            // this.documentHelper.bookmarks.remove(name);\n            isHistoryInitiated = true;\n            this.initComplexHistory('InsertBookmark');\n            this.documentHelper.owner.editorModule.isRemoteAction = true;\n            this.deleteBookmark(name);\n            this.documentHelper.owner.editorModule.isRemoteAction = false;\n            if (!isNullOrUndefined(existingBookmark.reference) && !isNullOrUndefined(existingBookmark.reference.paragraph.associatedCell)) {\n                var row = existingBookmark.reference.paragraph.associatedCell.ownerRow;\n                if (row.isRenderBookmarkEnd) {\n                    row.isRenderBookmarkEnd = false;\n                }\n                if (!isNullOrUndefined(existingBookmark.properties)) {\n                    var columnFirst = parseInt(existingBookmark.properties[\"columnFirst\"]);\n                    var row_1 = existingBookmark.paragraph.associatedCell.ownerRow;\n                    var cell = row_1.getCellUsingColumnIndex(row_1.rowIndex, columnFirst);\n                    if (!isNullOrUndefined(cell)) {\n                        cell.isRenderBookmarkStart = false;\n                    }\n                    var columnLast = parseInt(existingBookmark.properties[\"columnLast\"]);\n                    var endRow = existingBookmark.reference.paragraph.associatedCell.ownerRow;\n                    var endCell = undefined;\n                    var cellIndex = columnLast;\n                    while (isNullOrUndefined(endCell) && cellIndex > -1) {\n                        endCell = endRow.getCell(endRow.rowIndex, cellIndex);\n                        if (isNullOrUndefined(endCell)) {\n                            cellIndex--;\n                        }\n                    }\n                    if (endCell.isRenderBookmarkEnd) {\n                        endCell.isRenderBookmarkEnd = false;\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(existingBookmark.properties)) {\n                    var columnFirst = parseInt(existingBookmark.properties[\"columnFirst\"]);\n                    var row = existingBookmark.paragraph.associatedCell.ownerRow;\n                    var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n                    if (!isNullOrUndefined(cell) && cell.isRenderBookmarkStart) {\n                        cell.isRenderBookmarkStart = false;\n                    }\n                }\n            }\n        }\n        var bookmarks = this.createBookmarkElements(name);\n        var bookmark = bookmarks[0];\n        var bookmarkEnd = bookmarks[1];\n        bookmark.properties = this.selection.getBookmarkProperties(bookmark);\n        bookmarkEnd.properties = this.selection.getBookmarkProperties(bookmarkEnd);\n        this.owner.isShiftingEnabled = true;\n        if (!isHistoryInitiated) {\n            this.initComplexHistory('InsertBookmark');\n        }\n        this.insertElements([bookmarkEnd], [bookmark], true);\n        if (this.editorHistory) {\n            this.editorHistory.updateComplexHistoryInternal();\n        }\n        if (this.documentHelper.owner.enableHeaderAndFooter) {\n            this.updateHeaderFooterWidget();\n        }\n        this.documentHelper.bookmarks.add(name, bookmark);\n        if (!isNullOrUndefined(bookmark.properties)) {\n            this.selection.selectBookmarkInTable(bookmark);\n            this.documentHelper.owner.isShiftingEnabled = false;\n        }\n        else {\n            this.selection.start.setPositionForSelection(bookmark.line, bookmark, 1, this.selection.start.location);\n            var endOffset = 0;\n            if (!isNullOrUndefined(bookmarkEnd.properties)) {\n                if (bookmarkEnd.properties['isAfterParagraphMark']) {\n                    endOffset = 2;\n                }\n            }\n            this.selection.end.setPositionForSelection(bookmarkEnd.line, bookmarkEnd, endOffset, this.selection.end.location);\n            var block = this.documentHelper.blockToShift;\n            if (!isNullOrUndefined(block) && this.viewer instanceof PageLayoutViewer && block.bodyWidget.sectionFormat.columns.length > 1) {\n                var lastbody = this.documentHelper.layout.getBodyWidget(block.bodyWidget, false);\n                if ((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && lastbody.page === lastbody.nextRenderedWidget.page)) {\n                    this.reLayout(this.selection);\n                }\n            }\n            this.owner.isShiftingEnabled = false;\n            this.selection.fireSelectionChanged(true);\n        }\n        if (this.owner.documentEditorSettings.showBookmarks == true) {\n            this.viewer.updateScrollBars();\n        }\n        this.fireContentChange();\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.createBookmarkElements = function (name) {\n        var bookmark = new BookmarkElementBox(0);\n        bookmark.name = name;\n        var bookmarkEnd = new BookmarkElementBox(1);\n        bookmarkEnd.name = name;\n        bookmark.reference = bookmarkEnd;\n        bookmarkEnd.reference = bookmark;\n        return [bookmark, bookmarkEnd];\n    };\n    /**\n     * Deletes the specified bookmark in the current document.\n     *\n     * @param {string} bookmarkName Specify the name of bookmark to be deleted.\n     * @returns {void}\n     */\n    Editor.prototype.deleteBookmark = function (bookmarkName) {\n        var bookmarks = this.documentHelper.bookmarks;\n        var bookmark = bookmarks.get(bookmarkName);\n        if (bookmark instanceof BookmarkElementBox) {\n            var bookmarkEnd = bookmark.reference;\n            // History for inserting bookmark with existing bookmark name was changed as a complex history as per MS word behavior and added the below lines for getting existing bookmarks offset in history  \n            var start = this.selection.start.clone();\n            var end = this.selection.end.clone();\n            this.selection.start.setPositionParagraph(bookmark.line, bookmark.line.getOffset(bookmark, bookmark.length));\n            this.selection.end.setPositionParagraph(bookmarkEnd.line, bookmarkEnd.line.getOffset(bookmarkEnd, bookmarkEnd.length) - 1);\n            this.initHistory('DeleteBookmark');\n            this.selection.selectPosition(start, end);\n            if (this.editorHistory) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n                this.editorHistory.currentBaseHistoryInfo.markerData.push({ bookmarkName: bookmarkName });\n                this.editorHistory.currentBaseHistoryInfo.setBookmarkInfo(bookmark);\n                this.editorHistory.updateHistory();\n            }\n            this.deleteBookmarkInternal(bookmark);\n        }\n        this.fireContentChange();\n        if (this.owner.documentEditorSettings.showBookmarks == true) {\n            this.viewer.updateScrollBars();\n        }\n    };\n    /**\n     * @param bookmark\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.deleteBookmarkInternal = function (bookmark) {\n        var previousNode = bookmark.previousNode;\n        if (previousNode instanceof FieldElementBox && previousNode.fieldType === 0\n            && !isNullOrUndefined(previousNode.formFieldData)) {\n            previousNode.formFieldData.name = '';\n        }\n        if (!isNullOrUndefined(bookmark.properties)) {\n            var columnFirst = parseInt(bookmark.properties[\"columnFirst\"]);\n            var row = bookmark.paragraph.associatedCell.ownerRow;\n            var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n            if (!isNullOrUndefined(cell)) {\n                cell.isRenderBookmarkStart = false;\n            }\n            var columnLast = parseInt(bookmark.properties[\"columnLast\"]);\n            if (!isNullOrUndefined(bookmark.reference) && !isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n                var endRow = bookmark.reference.paragraph.associatedCell.ownerRow;\n                var endCell = undefined;\n                var cellIndex = columnLast;\n                while (isNullOrUndefined(endCell) && cellIndex > -1) {\n                    endCell = endRow.getCell(endRow.rowIndex, cellIndex);\n                    if (isNullOrUndefined(endCell)) {\n                        cellIndex--;\n                    }\n                }\n                if (endCell.isRenderBookmarkEnd) {\n                    endCell.isRenderBookmarkEnd = false;\n                }\n            }\n        }\n        else {\n            if (this.documentHelper.selection.isRenderBookmarkAtEnd(bookmark)) {\n                if (!isNullOrUndefined(bookmark.reference) && !isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n                    var row = bookmark.reference.paragraph.associatedCell.ownerRow;\n                    if (row.isRenderBookmarkEnd) {\n                        row.isRenderBookmarkEnd = false;\n                    }\n                }\n            }\n        }\n        this.documentHelper.bookmarks.remove(bookmark.name);\n        bookmark.line.children.splice(bookmark.indexInOwner, 1);\n        if (!isNullOrUndefined(bookmark.reference)) {\n            bookmark.reference.line.children.splice(bookmark.reference.indexInOwner, 1);\n        }\n        // Remove bookmark from header footer collections\n        var paragraph = bookmark.line.paragraph;\n        if (bookmark.line.paragraph.isInHeaderFooter) {\n            var headerFooterWidget = undefined;\n            if (paragraph.containerWidget instanceof TableCellWidget) {\n                headerFooterWidget = paragraph.containerWidget.getContainerTable().containerWidget;\n            }\n            else if (paragraph.containerWidget instanceof HeaderFooterWidget) {\n                headerFooterWidget = paragraph.containerWidget;\n            }\n            this.updateHeaderFooterWidget(headerFooterWidget);\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getSelectionInfo = function (isBookmark) {\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.selection.isForward) {\n            start = this.selection.end;\n            end = this.selection.start;\n        }\n        if (!(end.offset === this.selection.getLineLength(end.currentWidget) + 1\n            && this.selection.isParagraphLastLine(end.currentWidget)) && !this.owner.documentHelper.isDragging) {\n            end.offset += 1;\n        }\n        var blockInfo = this.selection.getParagraphInfo(start);\n        var startIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        blockInfo = this.selection.getParagraphInfo(end);\n        var endIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        var selectedWidgets = this.selection.selectedWidgets.keys;\n        if ((!isNullOrUndefined(isBookmark) && isBookmark == true) && !this.selection.hasMergedCells()) {\n            if (start.paragraph.isInsideTable) {\n                var startCell_1 = this.selection.getCellFromSelection(0);\n                if (!isNullOrUndefined(startCell_1) && startCell_1 instanceof TableCellWidget) {\n                    startIndex = this.selection.getActualOffset(startCell_1, 0);\n                }\n            }\n            if (end.paragraph.isInsideTable) {\n                var endCell_1 = this.selection.getCellFromSelection(1);\n                if (!isNullOrUndefined(endCell_1) && endCell_1 instanceof TableCellWidget) {\n                    endIndex = this.selection.getActualOffset(endCell_1, 1);\n                }\n            }\n        }\n        else {\n            if (selectedWidgets[0] instanceof TableCellWidget) {\n                if (start.paragraph.isInsideTable) {\n                    var startCell = this.selection.getCellFromSelectionInTable(0);\n                    if (!isNullOrUndefined(startCell) && startCell instanceof TableCellWidget) {\n                        startIndex = this.selection.getActualOffset(startCell, 0);\n                    }\n                }\n            }\n            if (selectedWidgets[selectedWidgets.length - 1] instanceof TableCellWidget) {\n                if (end.paragraph.isInsideTable) {\n                    var endCell = this.selection.getCellFromSelectionInTable(1);\n                    if (!isNullOrUndefined(endCell) && endCell instanceof TableCellWidget) {\n                        endIndex = this.selection.getActualOffset(endCell, 1);\n                    }\n                }\n            }\n        }\n        return { 'start': startIndex, 'end': endIndex };\n    };\n    Editor.prototype.insertElements = function (endElements, startElements, isBookmark) {\n        var info = this.getSelectionInfo(isBookmark);\n        if (isBookmark) {\n            if (!isNullOrUndefined(startElements[0].properties) && startElements[0].bookmarkType == 0) {\n                info = this.owner.selection.updateSelectionInfo(info);\n            }\n        }\n        if (!isNullOrUndefined(startElements)) {\n            this.insertElementsInternal(this.selection.getTextPosBasedOnLogicalIndex(info.start), startElements);\n        }\n        if (!isNullOrUndefined(endElements)) {\n            this.insertElementsInternal(this.selection.getTextPosBasedOnLogicalIndex(info.end), endElements);\n        }\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertElementsInternal = function (position, elements, isRelayout) {\n        this.selection.selectPosition(position, position);\n        this.initHistory('InsertElements');\n        if ((!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) && (elements[0] instanceof BookmarkElementBox && this.editorHistory || elements[0] instanceof EditRangeStartElementBox || elements[0] instanceof EditRangeEndElementBox)) {\n            this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(elements[0]));\n        }\n        this.updateInsertPosition();\n        var indexInInline = 0;\n        var paragraphInfo = this.selection.getParagraphInfo(this.selection.start);\n        if (this.selection.start.paragraph.isEmpty()) {\n            var paragraph = this.selection.start.paragraph;\n            paragraph.childWidgets[0].children.push(elements[0]);\n            elements[0].line = paragraph.childWidgets[0];\n            elements[0].linkFieldCharacter(this.documentHelper);\n            this.documentHelper.layout.reLayoutParagraph(paragraph, 0, 0);\n            this.setPositionParagraph(paragraphInfo.paragraph, paragraphInfo.offset + length, true);\n            position.setPositionForSelection(elements[0].line, elements[0], elements[0].length, this.selection.start.location);\n            this.selection.selectPosition(position, position);\n        }\n        else {\n            var inlineObj = this.selection.start.currentWidget.getInline(this.documentHelper.selection.start.offset, indexInInline);\n            var curInline = inlineObj.element;\n            indexInInline = inlineObj.index;\n            var firstElement = elements[0];\n            this.insertElementInternal(curInline, firstElement, indexInInline, undefined, true);\n            var index = firstElement.indexInOwner;\n            var lastElement = firstElement;\n            for (var i = 1; i < elements.length; i++) {\n                lastElement = elements[i];\n                firstElement.line.children.splice(index + i, 0, lastElement);\n            }\n            position.setPositionForSelection(lastElement.line, lastElement, lastElement.length, this.selection.start.location);\n            this.selection.selectPosition(position, position);\n        }\n        if (this.editorHistory) {\n            if (this.checkEndPosition()) {\n                this.updateHistoryPosition(this.selection.start, false);\n            }\n            this.editorHistory.updateHistory();\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getMarkerData = function (element, skip, revision, isAcceptOrReject) {\n        var markerData = {};\n        if (this.editorHistory.currentBaseHistoryInfo || this.editorHistory.isUndoing || this.editorHistory.isRedoing) {\n            if (element instanceof BookmarkElementBox) {\n                var columnFirst = '';\n                var columnLast = '';\n                var isAfterParagraphMark = void 0;\n                var isAfterTableMark = void 0;\n                var isAfterRowMark = void 0;\n                var isAfterCellMark = void 0;\n                if (element.bookmarkType == 0) {\n                    if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n                    }\n                    if (!isNullOrUndefined(element.properties)) {\n                        columnFirst = element.properties['columnFirst'];\n                        columnLast = element.properties['columnLast'];\n                    }\n                }\n                else {\n                    if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n                    }\n                    if (!isNullOrUndefined(element.properties)) {\n                        isAfterParagraphMark = element.properties['isAfterParagraphMark'];\n                        isAfterTableMark = element.properties['isAfterTableMark'];\n                        isAfterRowMark = element.properties['isAfterRowMark'];\n                        isAfterCellMark = element.properties['isAfterCellMark'];\n                    }\n                }\n                markerData = {\n                    bookmarkName: element.name,\n                    type: \"Bookmark\",\n                    skipOperation: skip,\n                    columnFirst: columnFirst,\n                    columnLast: columnLast,\n                    isAfterParagraphMark: isAfterParagraphMark,\n                    isAfterTableMark: isAfterTableMark,\n                    isAfterRowMark: isAfterRowMark,\n                    isAfterCellMark: isAfterCellMark\n                };\n            }\n            else if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n                var elementBox = void 0;\n                if (element instanceof EditRangeStartElementBox) {\n                    elementBox = element;\n                    if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n                    }\n                }\n                else {\n                    elementBox = element.editRangeStart;\n                    if (!this.editorHistory.isUndoing && !this.editorHistory.isRedoing) {\n                        this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n                    }\n                }\n                var user = elementBox.user === '' ? elementBox.group : elementBox.user;\n                markerData = { 'user': user, 'type': \"EditRange\", 'editRangeId': elementBox.editRangeId, 'skipOperation': skip, 'columnFirst': isNullOrUndefined(elementBox.columnFirst) ? undefined : elementBox.columnFirst.toString(), 'columnLast': isNullOrUndefined(elementBox.columnLast) ? undefined : elementBox.columnLast.toString() };\n            }\n            else if (element instanceof FieldElementBox) {\n                if (element.fieldType == 0) {\n                    this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_Start;\n                }\n                else if (element.fieldType == 2) {\n                    this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Field_Separator;\n                }\n                else {\n                    this.editorHistory.currentBaseHistoryInfo.insertedText = CONTROL_CHARACTERS.Marker_End;\n                }\n                markerData = { 'type': \"Field\" };\n            }\n            else if (element instanceof FootnoteElementBox) {\n                markerData =\n                    {\n                        type: element.footnoteType\n                    };\n            }\n            else if (element instanceof TextElementBox) {\n                this.editorHistory.currentBaseHistoryInfo.insertedText = element.text;\n            }\n        }\n        if (this.owner.enableTrackChanges && !isNullOrUndefined(revision)) {\n            markerData = this.getRevisionMarkerData(markerData, revision, skip, isAcceptOrReject);\n        }\n        return markerData;\n    };\n    /**\n     * @private\n     * @returns {any}\n     */\n    Editor.prototype.getRevisionMarkerData = function (markerData, revision, skip, isAcceptOrReject) {\n        if (isNullOrUndefined(markerData)) {\n            markerData = {};\n        }\n        markerData.revisionId = revision.revisionID;\n        markerData.revisionType = revision.revisionType;\n        markerData.author = revision.author;\n        markerData.date = revision.date;\n        markerData.skipOperation = skip;\n        markerData.isAcceptOrReject = isAcceptOrReject;\n        return markerData;\n    };\n    /**\n     * @param index\n     * @private\n     * @returns {CommentElementBox}\n     */\n    Editor.prototype.getCommentElementBox = function (index) {\n        var position = index.split(';');\n        var comment = this.documentHelper.comments[parseInt(position[1], 10)];\n        if (position.length > 2 && position[2] !== '') {\n            return comment.replyComments[parseInt(position[2], 10)];\n        }\n        return comment;\n    };\n    /**\n     * @param position\n     * @private\n     * @returns {BlockInfo}\n     */\n    Editor.prototype.getBlock = function (position) {\n        var bodyWidget = this.selection.getBodyWidget(position);\n        return this.getBlockInternal(bodyWidget, position);\n    };\n    Editor.prototype.getBlockInternal = function (widget, position) {\n        if (position.index === '' || isNullOrUndefined(position)) {\n            return undefined;\n        }\n        var index = position.index.indexOf(';');\n        var value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        var node = widget;\n        // if (node instanceof WSection && value === 'HF') {\n        //     //Gets the block in Header footers.\n        //     let blockObj: BlockInfo = this.getBlock((node as WSection).headerFooters, position);\n        //     return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n        // }\n        index = parseInt(value, 10);\n        var childWidget = this.selection.getBlockByIndex(widget, index);\n        if (childWidget) {\n            var child = childWidget;\n            if (position.index.indexOf(';') >= 0) {\n                if (child instanceof ParagraphWidget) {\n                    if (position.index.indexOf(';') >= 0) {\n                        position.index = '0';\n                    }\n                    return { 'node': child, 'position': position };\n                }\n                if (child instanceof Widget) {\n                    var blockObj = this.getBlockInternal(child, position);\n                    return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n                }\n            }\n            else {\n                return { 'node': child, 'position': position };\n            }\n        }\n        else {\n            return { 'node': node, 'position': position };\n        }\n        return { 'node': node, 'position': position };\n    };\n    /**\n     * @param position\n     * @param isInsertPosition\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateHistoryPosition = function (position, isInsertPosition) {\n        if (this.editorHistory && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            var hierarchicalIndex = void 0;\n            if (position instanceof TextPosition) {\n                var blockInfo = this.selection.getParagraphInfo(position);\n                hierarchicalIndex = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n            }\n            else {\n                hierarchicalIndex = position;\n            }\n            if (isInsertPosition) {\n                this.editorHistory.currentBaseHistoryInfo.insertPosition = hierarchicalIndex;\n            }\n            else {\n                this.editorHistory.currentBaseHistoryInfo.endPosition = hierarchicalIndex;\n            }\n        }\n    };\n    /**\n     * Applies the borders based on given settings.\n     *\n     * @param {BorderSettings} settings Specify the border settings to be applied.\n     * @returns {void}\n     */\n    Editor.prototype.applyBorders = function (settings) {\n        this.initHistory('Borders');\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        var table = startPos.paragraph.associatedCell.ownerTable;\n        table = table.combineWidget(this.owner.viewer);\n        if (this.editorHistory) {\n            var clonedTable = this.cloneTableToHistoryInfo(table);\n        }\n        var startCell = startPos.paragraph.associatedCell;\n        var endCell = endPos.paragraph.associatedCell;\n        var cells;\n        var border = this.getBorder(settings.borderColor, settings.lineWidth, settings.borderStyle);\n        if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = startPos.paragraph.associatedCell.cellFormat.borders;\n        }\n        if (this.selection.isEmpty) {\n            //Apply borders for current selected cell initially.\n            if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' ||\n                settings.type === 'LeftBorder') {\n                endCell.cellFormat.borders.left.copyFormat(border);\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' ||\n                settings.type === 'TopBorder') {\n                endCell.cellFormat.borders.top.copyFormat(border);\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' ||\n                settings.type === 'RightBorder') {\n                endCell.cellFormat.borders.right.copyFormat(border);\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'AllBorders' ||\n                settings.type === 'BottomBorder') {\n                endCell.cellFormat.borders.bottom.copyFormat(border);\n            }\n            if (settings.type === 'AllBorders' || settings.type === 'InsideBorders'\n                || settings.type === 'InsideVerticalBorder') {\n                endCell.cellFormat.borders.vertical.copyFormat(border);\n            }\n            if (settings.type === 'AllBorders' || settings.type === 'InsideBorders'\n                || settings.type === 'InsideHorizontalBorder') {\n                endCell.cellFormat.borders.horizontal.copyFormat(border);\n            }\n            if (settings.type === 'NoBorder') {\n                this.clearAllBorderValues(endCell.cellFormat.borders);\n            }\n        }\n        else {\n            if (settings.type === 'OutsideBorders' || settings.type === 'TopBorder') {\n                var selectedCell = this.getTopBorderCellsOnSelection();\n                for (var i = 0; i < selectedCell.length; i++) {\n                    selectedCell[i].cellFormat.borders.top.copyFormat(border);\n                }\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'LeftBorder') {\n                var selectedCell = this.getLeftBorderCellsOnSelection();\n                for (var i = 0; i < selectedCell.length; i++) {\n                    selectedCell[i].cellFormat.borders.left.copyFormat(border);\n                }\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'RightBorder') {\n                var selectedCell = this.getRightBorderCellsOnSelection();\n                for (var i = 0; i < selectedCell.length; i++) {\n                    selectedCell[i].cellFormat.borders.right.copyFormat(border);\n                }\n            }\n            if (settings.type === 'OutsideBorders' || settings.type === 'BottomBorder') {\n                var selectedCell = this.getBottomBorderCellsOnSelection();\n                for (var i = 0; i < selectedCell.length; i++) {\n                    selectedCell[i].cellFormat.borders.bottom.copyFormat(border);\n                }\n            }\n        }\n        //Apply Only borders property to selected cells\n        if (settings.type === 'BottomBorder' || settings.type === 'AllBorders' || settings.type === 'OutsideBorders'\n            || settings.type === 'NoBorder') {\n            cells = this.getAdjacentCellToApplyBottomBorder();\n            for (var i = 0; i < cells.length; i++) {\n                var cell = cells[i];\n                if (settings.type === 'NoBorder') {\n                    cell.cellFormat.borders.top.copyFormat(this.clearBorder());\n                }\n                else {\n                    cell.cellFormat.borders.top.copyFormat(border);\n                }\n            }\n        }\n        if (settings.type === 'AllBorders' || settings.type === 'OutsideBorders' || settings.type === 'RightBorder'\n            || settings.type === 'NoBorder') {\n            cells = this.getAdjacentCellToApplyRightBorder();\n            for (var i = 0; i < cells.length; i++) {\n                var cell = cells[i];\n                if (settings.type === 'NoBorder') {\n                    cell.cellFormat.borders.left.copyFormat(this.clearBorder());\n                }\n                else {\n                    cell.cellFormat.borders.left.copyFormat(border);\n                }\n            }\n        }\n        if (settings.type === 'AllBorders' || settings.type === 'NoBorder') {\n            this.applyAllBorders(border, settings.type);\n        }\n        if (settings.type === 'InsideBorders' || settings.type === 'InsideVerticalBorder'\n            || settings.type === 'InsideHorizontalBorder' || settings.type === 'NoBorder') {\n            this.applyInsideBorders(border, settings.type, table);\n        }\n        this.updateGridForTableDialog(table, false);\n        this.reLayout(this.selection, false);\n        this.editorHistory.updateHistory();\n    };\n    Editor.prototype.applyAllBorders = function (border, borderType) {\n        var cells = this.selection.getSelectedCells();\n        for (var i = 0; i < cells.length; i++) {\n            if (borderType === 'NoBorder') {\n                cells[i].cellFormat.borders.left.copyFormat(this.clearBorder());\n                cells[i].cellFormat.borders.right.copyFormat(this.clearBorder());\n                cells[i].cellFormat.borders.top.copyFormat(this.clearBorder());\n                cells[i].cellFormat.borders.bottom.copyFormat(this.clearBorder());\n            }\n            else {\n                cells[i].cellFormat.borders.left.copyFormat(border);\n                cells[i].cellFormat.borders.right.copyFormat(border);\n                cells[i].cellFormat.borders.top.copyFormat(border);\n                cells[i].cellFormat.borders.bottom.copyFormat(border);\n            }\n        }\n    };\n    Editor.prototype.applyInsideBorders = function (border, borderType, table) {\n        var cells = this.selection.getSelectedCells();\n        for (var i = 0; i < cells.length; i++) {\n            var cell = cells[i];\n            var isLastSelectedRow = cell.ownerRow === cells[cells.length - 1].ownerRow;\n            var isLastRightCell = (cell.columnIndex + cell.cellFormat.columnSpan - 1) === cells[cells.length - 1].columnIndex;\n            if (borderType === 'NoBorder') {\n                cell.cellFormat.borders.right.copyFormat(this.clearBorder());\n                cell.cellFormat.borders.bottom.copyFormat(this.clearBorder());\n            }\n            else {\n                if (!isLastRightCell && borderType !== 'InsideHorizontalBorder') {\n                    cell.cellFormat.borders.right.copyFormat(border);\n                }\n                if (!isLastSelectedRow && borderType !== 'InsideVerticalBorder') {\n                    cell.cellFormat.borders.bottom.copyFormat(border);\n                }\n            }\n            if (!isLastSelectedRow && borderType !== 'InsideVerticalBorder') {\n                // Apply adjacent bottom borders.\n                var nextRowIndex = cell.ownerRow.rowIndex + cell.cellFormat.rowSpan;\n                var nextRow = table.childWidgets[nextRowIndex];\n                if (nextRow) {\n                    var selectedCells = this.getAdjacentBottomBorderOnEmptyCells(nextRow, cell, true);\n                    for (var j = 0; j < selectedCells.length; j++) {\n                        if (borderType === 'NoBorder') {\n                            selectedCells[j].cellFormat.borders.top.copyFormat(this.clearBorder());\n                        }\n                        else {\n                            selectedCells[j].cellFormat.borders.top.copyFormat(border);\n                        }\n                    }\n                }\n            }\n            if (!isLastRightCell && borderType !== 'InsideHorizontalBorder') {\n                // Apply adjacent right borders.\n                var rightBorderCells = this.getSelectedCellsNextWidgets(cell, table);\n                for (var k = 0; k < rightBorderCells.length; k++) {\n                    if (borderType === 'NoBorder') {\n                        rightBorderCells[k].cellFormat.borders.left.copyFormat(this.clearBorder());\n                    }\n                    else {\n                        rightBorderCells[k].cellFormat.borders.left.copyFormat(border);\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.getTopBorderCellsOnSelection = function () {\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var startCell = startPos.paragraph.associatedCell;\n        var topBorderCells = [];\n        var cells = this.selection.getSelectedCells();\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].ownerRow === startCell.ownerRow) {\n                topBorderCells.push(cells[i]);\n            }\n        }\n        return topBorderCells;\n    };\n    Editor.prototype.getLeftBorderCellsOnSelection = function () {\n        var startPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var startCell = startPos.paragraph.associatedCell;\n        var cells = this.selection.getSelectedCells();\n        var leftBorderCells = [];\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].columnIndex === startCell.columnIndex) {\n                leftBorderCells.push(cells[i]);\n            }\n        }\n        return leftBorderCells;\n    };\n    Editor.prototype.getRightBorderCellsOnSelection = function () {\n        var cells = this.selection.getSelectedCells();\n        var rightBorderCells = [];\n        for (var i = 0; i < cells.length; i++) {\n            if ((cells[i].columnIndex + cells[i].cellFormat.columnSpan - 1) === cells[cells.length - 1].columnIndex) {\n                rightBorderCells.push(cells[i]);\n            }\n        }\n        return rightBorderCells;\n    };\n    Editor.prototype.getBottomBorderCellsOnSelection = function () {\n        var endPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        var endCell = endPos.paragraph.associatedCell;\n        var cells = this.selection.getSelectedCells();\n        var bottomBorderCells = [];\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].ownerRow === endCell.ownerRow) {\n                bottomBorderCells.push(cells[i]);\n            }\n        }\n        return bottomBorderCells;\n    };\n    Editor.prototype.clearAllBorderValues = function (borders) {\n        var border = this.clearBorder();\n        borders.bottom.copyFormat(border);\n        borders.left.copyFormat(border);\n        borders.right.copyFormat(border);\n        borders.top.copyFormat(border);\n        borders.vertical.copyFormat(border);\n        borders.horizontal.copyFormat(border);\n    };\n    Editor.prototype.clearBorder = function () {\n        var border = new WBorder();\n        border.lineStyle = 'Cleared';\n        return border;\n    };\n    Editor.prototype.getAdjacentCellToApplyBottomBorder = function () {\n        var cells = [];\n        var startPos = this.selection.start;\n        var endPos = this.selection.end;\n        if (!this.selection.isForward) {\n            startPos = this.selection.end;\n            endPos = this.selection.start;\n        }\n        var table = startPos.paragraph.associatedCell.ownerTable;\n        table = table.combineWidget(this.owner.viewer);\n        var startCell = startPos.paragraph.associatedCell;\n        var endCell = endPos.paragraph.associatedCell;\n        var nextRowIndex = endCell.ownerRow.rowIndex + endCell.cellFormat.rowSpan;\n        var nextRow = table.childWidgets[nextRowIndex];\n        if (nextRow) {\n            if (endCell.cellFormat.columnSpan > 1) {\n                for (var i = endCell.columnIndex; i < endCell.columnIndex + endCell.cellFormat.columnSpan; i++) {\n                    cells.push(nextRow.childWidgets[i]);\n                }\n            }\n            else {\n                cells = this.getAdjacentBottomBorderOnEmptyCells(nextRow, endCell);\n                if (!this.selection.isEmpty) {\n                    for (var i = 0; i < nextRow.childWidgets.length; i++) {\n                        var nextCellColIndex = nextRow.childWidgets[i].columnIndex;\n                        if (nextCellColIndex >= startCell.columnIndex && nextCellColIndex <= endCell.columnIndex) {\n                            cells.push(nextRow.childWidgets[i]);\n                        }\n                    }\n                }\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getAdjacentBottomBorderOnEmptyCells = function (nextRow, cell, isSingleCell) {\n        var cells = [];\n        if (cell.cellFormat.columnSpan > 1) {\n            for (var i = cell.columnIndex; i < cell.columnIndex; i++) {\n                cells.push(nextRow.childWidgets[i]);\n            }\n        }\n        else {\n            if (this.selection.isEmpty || isSingleCell) {\n                for (var i = 0; i < nextRow.childWidgets.length; i++) {\n                    if (nextRow.childWidgets[i].columnIndex === cell.columnIndex) {\n                        cells.push(nextRow.childWidgets[i]);\n                    }\n                }\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getAdjacentCellToApplyRightBorder = function () {\n        var cells = [];\n        var startPosIn = this.selection.start;\n        var endPosIn = this.selection.end;\n        if (!this.selection.isForward) {\n            startPosIn = this.selection.end;\n            endPosIn = this.selection.start;\n        }\n        var table = startPosIn.paragraph.associatedCell.ownerTable;\n        table = table.combineWidget(this.owner.viewer);\n        var startCell = startPosIn.paragraph.associatedCell;\n        var endCell = endPosIn.paragraph.associatedCell;\n        if (this.selection.isEmpty) {\n            var selectedCell = startPosIn.paragraph.associatedCell;\n            cells = this.getSelectedCellsNextWidgets(selectedCell, table);\n        }\n        else {\n            var selectedCells = this.getRightBorderCellsOnSelection();\n            for (var i = 0; i < selectedCells.length; i++) {\n                var cell = selectedCells[i];\n                cells = cells.concat(this.getSelectedCellsNextWidgets(cell, table));\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getSelectedCellsNextWidgets = function (selectedCell, table) {\n        var cells = [];\n        if (!isNullOrUndefined(selectedCell.nextWidget)) {\n            cells.push(selectedCell.nextWidget);\n            if (selectedCell.cellFormat.rowSpan > 1) {\n                var nextRowIndex = selectedCell.ownerRow.rowIndex + selectedCell.cellFormat.rowSpan;\n                for (var i = selectedCell.ownerRow.rowIndex + 1; i < nextRowIndex; i++) {\n                    var nextRow = table.childWidgets[i];\n                    if (nextRow) {\n                        for (var j = 0; j < nextRow.childWidgets.length; j++) {\n                            if (nextRow.childWidgets[j].columnIndex ===\n                                selectedCell.nextWidget.columnIndex) {\n                                cells.push(nextRow.childWidgets[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getBorder = function (borderColor, lineWidth, borderStyle) {\n        var border = new WBorder();\n        border.color = borderColor || '#000000';\n        border.lineWidth = lineWidth || 1;\n        border.lineStyle = borderStyle || 'Single';\n        return border;\n    };\n    /**\n     * Applies borders\n     *\n     * @param {WBorders} sourceBorders\n     * @param {WBorders} applyBorders\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyBordersInternal = function (sourceBorders, applyBorders) {\n        if (!isNullOrUndefined(sourceBorders) && !isNullOrUndefined(sourceBorders)) {\n            if (!isNullOrUndefined(sourceBorders.top)) {\n                this.applyBorder(sourceBorders.top, applyBorders.top);\n            }\n            if (!isNullOrUndefined(sourceBorders.bottom)) {\n                this.applyBorder(sourceBorders.bottom, applyBorders.bottom);\n            }\n            if (!isNullOrUndefined(sourceBorders.left)) {\n                this.applyBorder(sourceBorders.left, applyBorders.left);\n            }\n            if (!isNullOrUndefined(sourceBorders.right)) {\n                this.applyBorder(sourceBorders.right, applyBorders.right);\n            }\n            if (!isNullOrUndefined(sourceBorders.horizontal)) {\n                this.applyBorder(sourceBorders.horizontal, applyBorders.horizontal);\n            }\n            if (!isNullOrUndefined(sourceBorders.vertical)) {\n                this.applyBorder(sourceBorders.vertical, applyBorders.vertical);\n            }\n            if (!isNullOrUndefined(sourceBorders.diagonalUp)) {\n                this.applyBorder(sourceBorders.diagonalUp, applyBorders.diagonalUp);\n            }\n            if (!isNullOrUndefined(sourceBorders.diagonalDown)) {\n                this.applyBorder(sourceBorders.diagonalDown, applyBorders.diagonalDown);\n            }\n        }\n    };\n    /**\n     * Apply shading to table\n     *\n     * @param {WShading} sourceShading\n     * @param {WShading} applyShading\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyShading = function (sourceShading, applyShading) {\n        if (!isNullOrUndefined(applyShading) && !isNullOrUndefined(sourceShading)) {\n            if (!isNullOrUndefined(applyShading.backgroundColor)\n                && sourceShading.backgroundColor !== applyShading.backgroundColor) {\n                sourceShading.backgroundColor = applyShading.backgroundColor;\n            }\n            if (!isNullOrUndefined(applyShading.foregroundColor)\n                && sourceShading.foregroundColor !== applyShading.foregroundColor) {\n                sourceShading.foregroundColor = applyShading.foregroundColor;\n            }\n            if (!isNullOrUndefined(applyShading.textureStyle)\n                && sourceShading.textureStyle !== applyShading.textureStyle) {\n                sourceShading.textureStyle = applyShading.textureStyle;\n            }\n        }\n    };\n    Editor.prototype.applyBorder = function (sourceBorder, applyBorder) {\n        if (!isNullOrUndefined(sourceBorder) && !isNullOrUndefined(applyBorder)) {\n            if (!isNullOrUndefined(applyBorder.color)\n                && sourceBorder.color !== applyBorder.color) {\n                sourceBorder.color = applyBorder.color;\n            }\n            if (!isNullOrUndefined(applyBorder.lineStyle)\n                && sourceBorder.lineStyle !== applyBorder.lineStyle) {\n                sourceBorder.lineStyle = applyBorder.lineStyle;\n            }\n            if (!isNullOrUndefined(applyBorder.lineWidth)\n                && sourceBorder.lineWidth !== applyBorder.lineWidth) {\n                sourceBorder.lineWidth = applyBorder.lineWidth;\n            }\n            if (!isNullOrUndefined(applyBorder.shadow)\n                && sourceBorder.shadow !== applyBorder.shadow) {\n                sourceBorder.shadow = applyBorder.shadow;\n            }\n            if (!isNullOrUndefined(applyBorder.space)\n                && sourceBorder.space !== applyBorder.space) {\n                sourceBorder.space = applyBorder.space;\n            }\n        }\n    };\n    /**\n     * Apply Table Format changes\n     *\n     * @param {WTableFormat} format Specifies table format\n     * @param {boolean} isShading Specifies shading.\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onTableFormat = function (format, isShading, table) {\n        if (!isNullOrUndefined(this.selection.tableFormat)) {\n            if (isNullOrUndefined(isShading)) {\n                isShading = false;\n            }\n            this.documentHelper.owner.isShiftingEnabled = true;\n            this.editorHistory.initializeHistory('TableFormat');\n            if (isNullOrUndefined(table)) {\n                table = this.selection.start.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n            }\n            if (isShading) {\n                for (var i = 0; i < table.childWidgets.length; i++) {\n                    var rowWidget = table.childWidgets[i];\n                    for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                        var cellWidget = rowWidget.childWidgets[j];\n                        cellWidget.cellFormat.shading.copyFormat(format.shading);\n                    }\n                }\n            }\n            // if (!isNullOrUndefined(isShading) && !this.isCellFormatApplied && !isNullOrUndefined(format.borders)) {\n            //     for (let i: number = 0; i < table.childWidgets.length; i++) {\n            //         const rowWidget: TableRowWidget = table.childWidgets[i] as TableRowWidget;\n            //         rowWidget.rowFormat.borders.copyFormat(format.borders);\n            //         for (let j: number = 0; j < rowWidget.childWidgets.length; j++) {\n            //             const cellWidget: TableCellWidget = rowWidget.childWidgets[j] as TableCellWidget;\n            //             cellWidget.cellFormat.borders.copyFormat(format.borders);\n            //         }\n            //     }\n            // }\n            this.applyTableFormat(table, undefined, format);\n            this.reLayout(this.selection, false);\n        }\n    };\n    Editor.prototype.applyTableFormat = function (table, property, value) {\n        this.applyTablePropertyValue(undefined, value, table);\n    };\n    Editor.prototype.applyTablePropertyValue = function (property, value, table) {\n        var sourceFormat = table.tableFormat;\n        if (!isNullOrUndefined(this.editorHistory) && this.editorHistory.currentBaseHistoryInfo) {\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedTableProperties(sourceFormat, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (value instanceof WTableFormat) {\n            if (isNullOrUndefined(property)) {\n                this.handleTableFormat(sourceFormat, value);\n            }\n            return;\n        }\n        if (property === 'preferredWidth') {\n            sourceFormat.preferredWidth = value;\n        }\n        else if (property === 'leftIndent') {\n            sourceFormat.leftIndent = value;\n        }\n        else if (property === 'tableAlignment') {\n            sourceFormat.tableAlignment = value;\n        }\n        else if (property === 'cellSpacing') {\n            sourceFormat.cellSpacing = value;\n        }\n        else if (property === 'leftMargin') {\n            sourceFormat.leftMargin = value;\n        }\n        else if (property === 'rightMargin') {\n            sourceFormat.rightMargin = value;\n        }\n        else if (property === 'topMargin') {\n            sourceFormat.topMargin = value;\n        }\n        else if (property === 'bottomMargin') {\n            sourceFormat.bottomMargin = value;\n        }\n        else if (property === 'preferredWidthType') {\n            sourceFormat.preferredWidthType = value;\n        }\n        else if (property === 'bidi') {\n            sourceFormat.bidi = value;\n        }\n        else if (property === 'title') {\n            sourceFormat.title = value;\n        }\n        else if (property === 'description') {\n            sourceFormat.description = value;\n        }\n        if (property === 'shading') {\n            sourceFormat.shading = value;\n        }\n        else if (property === 'borders') {\n            sourceFormat.borders = value;\n        }\n        // if (!isNullOrUndefined(table)) {\n        //     this.layoutItemBlock(table, true);\n        // }\n    };\n    Editor.prototype.handleTableFormat = function (tableFormat, applyFormat) {\n        if (this.isBordersAndShadingDialog || this.editorHistory.isUndoing\n            || this.editorHistory.isRedoing) {\n            if (!isNullOrUndefined(tableFormat.borders)) {\n                this.applyBordersInternal(tableFormat.borders, applyFormat.borders);\n            }\n            if (!isNullOrUndefined(tableFormat.shading)) {\n                this.applyShading(tableFormat.shading, applyFormat.shading);\n            }\n        }\n        if (!this.isBordersAndShadingDialog) {\n            if (applyFormat.hasValue('bidi') && applyFormat.bidi !== tableFormat.bidi) {\n                tableFormat.bidi = applyFormat.bidi;\n            }\n            if (applyFormat.hasValue('preferredWidth') && applyFormat.preferredWidth !== tableFormat.preferredWidth) {\n                tableFormat.preferredWidth = applyFormat.preferredWidth;\n            }\n            if (applyFormat.hasValue('preferredWidthType') && applyFormat.preferredWidthType !== tableFormat.preferredWidthType) {\n                tableFormat.preferredWidthType = applyFormat.preferredWidthType;\n            }\n            if (applyFormat.hasValue('tableAlignment') && applyFormat.tableAlignment !== tableFormat.tableAlignment) {\n                tableFormat.tableAlignment = applyFormat.tableAlignment;\n            }\n            if (applyFormat.hasValue('leftIndent') && applyFormat.leftIndent !== tableFormat.leftIndent) {\n                tableFormat.leftIndent = applyFormat.leftIndent;\n            }\n        }\n        this.updateGridForTableDialog(tableFormat.ownerBase, false);\n        if (applyFormat.title !== tableFormat.title) {\n            tableFormat.title = applyFormat.title;\n        }\n        if (applyFormat.description !== tableFormat.description) {\n            tableFormat.description = applyFormat.description;\n        }\n    };\n    Editor.prototype.updateGridForTableDialog = function (table, shiftNextItem) {\n        if (table.tableHolder) {\n            table.updateRowIndex(0);\n            table.isGridUpdated = false;\n        }\n        this.documentHelper.layout.reLayoutTable(table);\n    };\n    /**\n     * Applies Row Format Changes\n     *\n     * @param {WRowFormat} format Specifies row format\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onRowFormat = function (format) {\n        if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n            return;\n        }\n        this.editorHistory.initializeHistory('RowFormat');\n        this.documentHelper.owner.isShiftingEnabled = true;\n        var rowStartPos = this.selection.isForward ? this.selection.start : this.selection.end;\n        var rowEndPos = this.selection.isForward ? this.selection.end : this.selection.start;\n        var table = rowStartPos.paragraph.associatedCell.ownerTable.combineWidget(this.owner.viewer);\n        this.applyRowFormat(rowStartPos.paragraph.associatedCell.ownerRow, rowStartPos, rowEndPos, undefined, format);\n        this.reLayout(this.selection, false);\n    };\n    Editor.prototype.applyRowFormat = function (row, start, end, property, value) {\n        this.applyRowPropertyValue(this.documentHelper.selection, property, value, row);\n        if (end.paragraph.associatedCell.ownerRow === row) {\n            return;\n        }\n        var newRow = row.nextWidget;\n        if (!isNullOrUndefined(newRow)) {\n            this.applyRowFormat(newRow, start, end, property, value);\n        }\n    };\n    Editor.prototype.applyRowPropertyValue = function (selection, property, value, row) {\n        var applyFormat = row.rowFormat;\n        if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedRowProperties(applyFormat, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (value instanceof WRowFormat) {\n            if (isNullOrUndefined(property)) {\n                this.handleRowFormat(value, applyFormat);\n            }\n            return;\n        }\n        if (property === 'heightType') {\n            applyFormat.heightType = value;\n        }\n        else if (property === 'height') {\n            applyFormat.height = value;\n        }\n        else if (property === 'isHeader') {\n            applyFormat.isHeader = value;\n        }\n        else if (property === 'allowBreakAcrossPages') {\n            applyFormat.allowBreakAcrossPages = value;\n        }\n        if (!isNullOrUndefined(row.ownerTable)) {\n            this.layoutItemBlock(row.ownerTable, true);\n        }\n    };\n    Editor.prototype.handleRowFormat = function (format, applyFormat) {\n        if (format.hasValue('allowBreakAcrossPages') && format.allowBreakAcrossPages !== applyFormat.allowBreakAcrossPages) {\n            applyFormat.allowBreakAcrossPages = format.allowBreakAcrossPages;\n        }\n        if (format.hasValue('isHeader') && format.isHeader !== applyFormat.isHeader) {\n            applyFormat.isHeader = format.isHeader;\n        }\n        if (format.hasValue('heightType') && format.heightType !== applyFormat.heightType) {\n            applyFormat.heightType = format.heightType;\n        }\n        if (format.hasValue('height') && format.height !== applyFormat.height) {\n            applyFormat.height = format.height;\n        }\n        this.updateGridForTableDialog(applyFormat.ownerBase.ownerTable, true);\n    };\n    /**\n     * Applies Cell Format changes\n     *\n     * @param {WCellFormat} format Specifies cell format\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onCellFormat = function (format) {\n        if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n            return;\n        }\n        this.editorHistory.initializeHistory('CellFormat');\n        this.updateFormatForCell(this.selection, undefined, format);\n        this.reLayout(this.selection, false);\n    };\n    /**\n     * Applies Paragraph Format changes\n     *\n     * @param {WParagraphFormat} format Specifies cell format\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onParaFormat = function (format) {\n        if (isNullOrUndefined(this.selection) || isNullOrUndefined(format)) {\n            return;\n        }\n        this.editorHistory.initializeHistory('ParagraphFormat');\n        this.updateParagraphFormat(undefined, format, false);\n        this.reLayout(this.selection, false);\n    };\n    /**\n     * @param selection\n     * @param value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateCellMargins = function (selection, value) {\n        var cellStartPosition = selection.start;\n        var cellEndPosition = selection.end;\n        if (!selection.isForward) {\n            cellStartPosition = selection.end;\n            cellEndPosition = selection.start;\n        }\n        this.initHistoryPosition(selection, cellStartPosition);\n        this.documentHelper.owner.cellOptionsDialogModule.applyCellMarginValue(cellStartPosition.paragraph.associatedCell.ownerRow, cellStartPosition, cellEndPosition, value);\n    };\n    Editor.prototype.updateFormatForCell = function (selection, property, value) {\n        var start = selection.start;\n        var end = selection.end;\n        if (!selection.isForward) {\n            start = selection.end;\n            end = selection.start;\n        }\n        var startCell = start.paragraph.associatedCell;\n        var endCell = end.paragraph.associatedCell;\n        var cells;\n        var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n        var appliedFormat;\n        for (var k = startCell.columnIndex; k <= endCell.columnIndex; k++) {\n            cells = this.getSelectedCellInColumn(startCell.ownerTable, startCell.ownerRow.rowIndex, k, endCell.ownerRow.rowIndex);\n            for (var i = 0; i < cells.length; i++) {\n                appliedFormat = this.applyCellPropertyValue(this.documentHelper.selection, property, value, cells[i].cellFormat);\n            }\n        }\n        this.updateGridForTableDialog(table, false);\n    };\n    Editor.prototype.getSelectedCellInColumn = function (table, rowStartIndex, columnIndex, rowEndIndex) {\n        var cells = [];\n        for (var i = rowStartIndex; i <= rowEndIndex; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                if (row.childWidgets[j].columnIndex === columnIndex) {\n                    cells.push(row.childWidgets[j]);\n                }\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getColumnCells = function (table, columnIndex, isLeftSideCollection) {\n        var cells = [];\n        for (var k = 0; k < table.childWidgets.length; k++) {\n            var row = table.childWidgets[k];\n            for (var i = 0; i < row.childWidgets.length; i++) {\n                var cell = row.childWidgets[i];\n                if (isLeftSideCollection) {\n                    if (cell.columnIndex + cell.cellFormat.columnSpan === columnIndex) {\n                        cells.push(cell);\n                    }\n                }\n                else {\n                    if (cell.columnIndex === columnIndex) {\n                        cells.push(cell);\n                    }\n                }\n            }\n        }\n        return cells;\n    };\n    Editor.prototype.getTableWidth = function (table) {\n        if (table.tableFormat.preferredWidth !== 0 || table.tableFormat.preferredWidthType === 'Percent') {\n            if (table.tableFormat.preferredWidthType === 'Auto' || table.tableFormat.preferredWidthType === 'Point') {\n                return table.tableFormat.preferredWidth;\n            }\n            else {\n                if (table.tableFormat.preferredWidth === 0) {\n                    return 0;\n                }\n                else {\n                    return HelperMethods.convertPixelToPoint(this.owner.viewer.clientArea.width) / 100 * table.tableFormat.preferredWidth;\n                }\n            }\n        }\n        return HelperMethods.convertPixelToPoint(this.documentHelper.layout.getTableWidth(table));\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyCellPropertyValue = function (selection, property, value, applyFormat) {\n        if (!isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo)) {\n            value = this.editorHistory.currentBaseHistoryInfo.addModifiedCellProperties(applyFormat, property, value);\n            this.editorHistory.currentBaseHistoryInfo.insertedFormat = value;\n        }\n        if (value instanceof WCellFormat) {\n            if (isNullOrUndefined(property)) {\n                this.handleCellFormat(value, applyFormat);\n            }\n            return value;\n        }\n        if (property === 'leftMargin') {\n            applyFormat.leftMargin = value;\n        }\n        else if (property === 'topMargin') {\n            applyFormat.topMargin = value;\n        }\n        else if (property === 'rightMargin') {\n            applyFormat.rightMargin = value;\n        }\n        else if (property === 'bottomMargin') {\n            applyFormat.bottomMargin = value;\n        }\n        else if (property === 'preferredWidth') {\n            applyFormat.preferredWidth = value;\n            applyFormat.cellWidth = value;\n        }\n        else if (property === 'cellWidth') {\n            applyFormat.cellWidth = value;\n        }\n        else if (property === 'columnSpan') {\n            applyFormat.columnSpan = value;\n        }\n        else if (property === 'rowSpan') {\n            applyFormat.rowSpan = value;\n        }\n        else if (property === 'preferredWidthType') {\n            applyFormat.preferredWidthType = value;\n        }\n        else if (property === 'verticalAlignment') {\n            applyFormat.verticalAlignment = value;\n        }\n        if (property === 'shading') {\n            applyFormat.shading = value;\n        }\n        else if (property === 'borders') {\n            applyFormat.borders = value;\n        }\n        return undefined;\n    };\n    Editor.prototype.handleCellFormat = function (cellFormat, applyFormat) {\n        if (!isNullOrUndefined(cellFormat) && !isNullOrUndefined(applyFormat)) {\n            if (this.isBordersAndShadingDialog) {\n                if (!isNullOrUndefined(cellFormat.borders)) {\n                    this.applyBordersInternal(applyFormat.borders, cellFormat.borders);\n                }\n                if (!isNullOrUndefined(cellFormat.shading)) {\n                    this.applyShading(applyFormat.shading, cellFormat.shading);\n                }\n                // this.layoutRow((applyFormat.ownerBase as TableCellWidget).ownerRow, this.documentHelper, false);\n            }\n            else {\n                if (cellFormat.hasValue('preferredWidth') && applyFormat.preferredWidth !== cellFormat.preferredWidth) {\n                    applyFormat.preferredWidth = cellFormat.preferredWidth;\n                }\n                if (cellFormat.hasValue('preferredWidthType') && applyFormat.preferredWidthType !== cellFormat.preferredWidthType) {\n                    applyFormat.preferredWidthType = cellFormat.preferredWidthType;\n                }\n                if (cellFormat.hasValue('verticalAlignment') && applyFormat.verticalAlignment !== cellFormat.verticalAlignment) {\n                    applyFormat.verticalAlignment = cellFormat.verticalAlignment;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.destroy = function () {\n        if (this.tableResize) {\n            this.tableResize.destroy();\n            this.tableResize = undefined;\n        }\n        if (this.previousCharFormat) {\n            this.previousCharFormat.destroy();\n            this.previousCharFormat = undefined;\n        }\n        if (this.previousParaFormat) {\n            this.previousParaFormat.destroy();\n            this.previousParaFormat = undefined;\n        }\n        if (this.alertDialog) {\n            this.alertDialog.destroy();\n        }\n        this.alertDialog = undefined;\n        if (this.base64) {\n            this.base64.destroy();\n        }\n        this.base64 = undefined;\n        this.endParagraph = undefined;\n        this.copiedData = undefined;\n        this.copiedTextContent = undefined;\n        this.listNumberFormat = undefined;\n        this.nodes = [];\n        this.removedTextNodes = [];\n        this.removedBookmarkElements = [];\n        this.editStartRangeCollection = [];\n        this.documentHelper = undefined;\n        this.editRangeID = undefined;\n        this.isCellFormatApplied = undefined;\n        this.isCopying = undefined;\n    };\n    /**\n     * Updates the table of contents.\n     *\n     * @param tocField\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateToc = function (tocField) {\n        if (isNullOrUndefined(tocField)) {\n            tocField = this.selection.getTocFieldInternal();\n        }\n        if (!this.documentHelper.layout.isTocField(tocField)) {\n            return;\n        }\n        // Decode field code to get parameters\n        var code = this.selection.getFieldCode(tocField);\n        if (code.toLocaleLowerCase().indexOf('toc') !== -1) {\n            this.insertTableOfContents(this.validateTocSettings(this.getTocSettings(code, tocField)));\n        }\n    };\n    Editor.prototype.getTocSettings = function (code, tocField) {\n        var tocSettings = {};\n        tocSettings.includePageNumber = true;\n        tocSettings.rightAlign = true;\n        // Decode field code to get parameters\n        if (code.toLowerCase() === 'toc \\\\mergeformat') {\n            tocSettings.startLevel = 1;\n            tocSettings.endLevel = 3;\n        }\n        else {\n            var swtiches = code.split('\\\\');\n            for (var i = 0; i < swtiches.length; i++) {\n                var swtch = swtiches[i];\n                if (swtch.length === 0) {\n                    continue;\n                }\n                switch (swtch[0]) {\n                    case 'o':\n                        if (!isNullOrUndefined(swtch.match(/\\d+/g))) {\n                            var levels = swtch.match(/\\d+/g).map(Number);\n                            tocSettings.startLevel = levels[0];\n                            tocSettings.endLevel = levels[1];\n                        }\n                        else {\n                            tocSettings.startLevel = 1;\n                            tocSettings.endLevel = 9;\n                        }\n                        break;\n                    case 'h':\n                        tocSettings.includeHyperlink = true;\n                        break;\n                    case 'n':\n                        tocSettings.includePageNumber = false;\n                        break;\n                    case 'p':\n                        tocSettings.rightAlign = false;\n                        break;\n                    case 'u':\n                        tocSettings.includeOutlineLevels = true;\n                        break;\n                    case 't':\n                        this.decodeTSwitch(tocSettings, swtch);\n                        break;\n                }\n            }\n        }\n        //assigns tab leader.\n        var tabs = tocField.paragraph.paragraphFormat.getUpdatedTabs();\n        if (tabs.length > 0) {\n            tocSettings.tabLeader = tabs[tabs.length - 1].tabLeader;\n        }\n        if (tocSettings.rightAlign && isNullOrUndefined(tocSettings.tabLeader)) {\n            tocSettings.tabLeader = 'Dot';\n        }\n        return tocSettings;\n    };\n    Editor.prototype.decodeTSwitch = function (tocSettings, tSwitch) {\n        tocSettings.levelSettings = {};\n        tSwitch = tSwitch.replace('t', '');\n        tSwitch = tSwitch.replace('\"', '');\n        tSwitch = tSwitch.replace('\"', '');\n        tSwitch = tSwitch.trim();\n        var levels = tSwitch.split(',');\n        for (var index = 0; index < levels.length; index++) {\n            tocSettings.levelSettings[levels[index]] = parseInt(levels[index + 1], 10);\n            index++;\n        }\n    };\n    /**\n     * Inserts, modifies or updates the table of contents based on given settings.\n     *\n     * @param {TableOfContentsSettings} tableOfContentsSettings Specify the table of content settings to be inserted.\n     * @returns {void}\n     */\n    Editor.prototype.insertTableOfContents = function (tableOfContentsSettings) {\n        this.isInsertingTOC = true;\n        var removedCommentStart = this.checkAndRemoveComments();\n        this.initComplexHistory('TOC');\n        if (isNullOrUndefined(tableOfContentsSettings)) {\n            //Initializes with default value.\n            tableOfContentsSettings = {};\n            tableOfContentsSettings.startLevel = 1;\n            tableOfContentsSettings.endLevel = 3;\n            tableOfContentsSettings.includeHyperlink = true;\n            tableOfContentsSettings.includeOutlineLevels = true;\n            tableOfContentsSettings.includePageNumber = true;\n            tableOfContentsSettings.rightAlign = true;\n            tableOfContentsSettings.tabLeader = 'Dot';\n        }\n        var tocField = undefined;\n        var code = undefined;\n        if (this.selection.contextType === 'TableOfContents') {\n            tocField = this.selection.getTocFieldInternal();\n        }\n        if (tocField instanceof FieldElementBox) {\n            this.selection.start.setPositionForSelection(tocField.line, tocField, 0, this.selection.start.location);\n            var offset = 2;\n            if (tocField.fieldEnd.paragraph === tocField.fieldEnd.paragraph.bodyWidget.lastChild) {\n                offset--;\n            }\n            this.selection.end.setPositionForSelection(tocField.fieldEnd.line, tocField.fieldEnd, offset, this.selection.end.location);\n            this.delete();\n        }\n        // Build TOC field code based on parameter\n        code = this.constructTocFieldCode(tableOfContentsSettings);\n        var isStartParagraph = this.selection.start.isAtParagraphStart;\n        var blockInfo = this.selection.getParagraphInfo(this.selection.start);\n        var initialStart = this.selection.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        // Build TOC fields\n        var widgets = this.buildToc(this.validateTocSettings(tableOfContentsSettings), code, true, isStartParagraph);\n        if (widgets.length > 0) {\n            var tocLastPara = new ParagraphWidget();\n            var tocLastLine = new LineWidget(tocLastPara);\n            tocLastPara.childWidgets.push(tocLastLine);\n            var index = 0;\n            if (!isStartParagraph) {\n                index = 1;\n            }\n            var line = widgets[index].childWidgets[0];\n            var fieldBegin = line.children[0];\n            this.appendEndField(fieldBegin, tocLastLine);\n            widgets.push(tocLastPara);\n            this.appendEmptyPara(widgets);\n        }\n        else {\n            var localizeValue = new L10n('documenteditor', this.owner.defaultLocale);\n            localizeValue.setLocale(this.owner.locale);\n            DialogUtility.alert({\n                title: localizeValue.getConstant('No Headings'),\n                content: localizeValue.getConstant('Add Headings'),\n                showCloseIcon: true,\n                closeOnEscape: true,\n                position: { X: 'center', Y: 'center' },\n                animationSettings: { effect: 'Zoom' }\n            }).enableRtl = this.owner.enableRtl;\n        }\n        this.setPositionForCurrentIndex(this.selection.start, initialStart);\n        this.selection.end.setPositionInternal(this.selection.start);\n        var bodyWidget = new BodyWidget();\n        bodyWidget.sectionFormat = new WSectionFormat(bodyWidget);\n        bodyWidget.childWidgets = widgets;\n        this.pasteContentsInternal([bodyWidget], false);\n        this.isInsertingTOC = false;\n        this.updatePageRef();\n        if (this.editorHistory) {\n            this.editorHistory.updateComplexHistory();\n            this.updateHistoryForComments(removedCommentStart);\n        }\n        if (widgets.length === 0) {\n            this.owner.editorHistoryModule.undo();\n            this.owner.editorHistoryModule.redoStack.pop();\n        }\n    };\n    Editor.prototype.appendEmptyPara = function (widgets) {\n        var emptyPara = new ParagraphWidget();\n        var emptyLine = new LineWidget(emptyPara);\n        emptyPara.childWidgets.push(emptyLine);\n        widgets.push(emptyPara);\n    };\n    Editor.prototype.constructTocFieldCode = function (tocSettings) {\n        var tocFieldCode = 'TOC';\n        //appends styles level\n        if (!isNullOrUndefined(tocSettings.startLevel) && tocSettings.startLevel !== 0 && !isNullOrUndefined(tocSettings.endLevel) && tocSettings.endLevel !== 0) {\n            tocFieldCode = tocFieldCode + ' \\\\o \"' + tocSettings.startLevel + '-' + tocSettings.endLevel + '\"';\n        }\n        if (tocSettings.includePageNumber && !tocSettings.rightAlign) {\n            tocFieldCode = tocFieldCode + ' \\\\p \" \"';\n        }\n        if (!tocSettings.includePageNumber) {\n            tocFieldCode = tocFieldCode + ' \\\\n';\n        }\n        if (tocSettings.includeHyperlink) {\n            tocFieldCode = tocFieldCode + ' \\\\h \\\\z';\n        }\n        if (tocSettings.includeOutlineLevels) {\n            tocFieldCode = tocFieldCode + ' \\\\u';\n        }\n        var tSwitch = this.constructTSwitch(tocSettings);\n        if (tSwitch.length > 6) {\n            tocFieldCode = tocFieldCode + tSwitch;\n        }\n        return tocFieldCode;\n    };\n    Editor.prototype.constructTSwitch = function (tocSettings) {\n        var tSwitch = '';\n        var prefix = ' \\\\t ';\n        if (!isNullOrUndefined(tocSettings.levelSettings)) {\n            for (var _i = 0, _a = Object.keys(tocSettings.levelSettings); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tSwitch = tSwitch + key + ',' + tocSettings.levelSettings[key].toString() + ',';\n            }\n        }\n        tSwitch = tSwitch.slice(0, -1);\n        tSwitch = prefix + '\"' + tSwitch + '\"';\n        return tSwitch;\n    };\n    Editor.prototype.appendEndField = function (fieldBegin, lineWidget) {\n        var fieldEnd = new FieldElementBox(1);\n        fieldEnd.fieldSeparator = fieldBegin.fieldSeparator;\n        fieldBegin.fieldSeparator.fieldEnd = fieldEnd;\n        fieldEnd.fieldBegin = fieldBegin;\n        fieldEnd.fieldBegin.fieldEnd = fieldEnd;\n        fieldEnd.line = lineWidget;\n        //For TOC we used to append field end at last we need to map that inserted revision to field end.\n        if (fieldBegin.revisions.length > 0) {\n            var currentRevision = fieldBegin.revisions[fieldBegin.revisions.length - 1];\n            currentRevision.range.push(fieldEnd);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(currentRevision);\n            fieldEnd.revisions.push(currentRevision);\n        }\n        lineWidget.children.push(fieldEnd);\n    };\n    Editor.prototype.validateTocSettings = function (tocSettings) {\n        if (isNullOrUndefined(tocSettings.startLevel) || tocSettings.startLevel < 1) {\n            tocSettings.startLevel = 1;\n        }\n        if (isNullOrUndefined(tocSettings.endLevel) || tocSettings.endLevel < tocSettings.endLevel) {\n            tocSettings.endLevel = tocSettings.startLevel > 3 ? tocSettings.startLevel : 3;\n        }\n        if (isNullOrUndefined(tocSettings.includeHyperlink)) {\n            tocSettings.includeHyperlink = false;\n        }\n        if (isNullOrUndefined(tocSettings.includePageNumber)) {\n            tocSettings.includePageNumber = false;\n        }\n        if (isNullOrUndefined(tocSettings.rightAlign)) {\n            tocSettings.rightAlign = false;\n        }\n        if (isNullOrUndefined(tocSettings.levelSettings)) {\n            tocSettings.levelSettings = {};\n        }\n        return tocSettings;\n    };\n    /**\n     * Builds the TOC\n     *\n     * @private\n     * @returns {ParagraphWidget[]}\n     *\n     */\n    Editor.prototype.buildToc = function (tocSettings, fieldCode, isFirstPara, isStartParagraph, isNavigationPane) {\n        var tocDomBody = this.documentHelper.pages[0].bodyWidgets[0];\n        var widgets = [];\n        this.createHeadingLevels(tocSettings);\n        if (tocSettings.includeOutlineLevels) {\n            this.createOutlineLevels(tocSettings);\n        }\n        var sectionFormat = this.selection.start.paragraph.bodyWidget.sectionFormat;\n        var widget = tocDomBody.childWidgets[0];\n        while (widget !== undefined) {\n            if (widget instanceof ParagraphWidget && (this.isHeadingStyle(widget) || (tocSettings.includeOutlineLevels && this.isOutlineLevelStyle(widget)))) {\n                var bookmarkName = this.insertTocBookmark(widget);\n                this.createTOCWidgets(widget, widgets, fieldCode, bookmarkName, tocSettings, isFirstPara, isStartParagraph, sectionFormat, isNavigationPane);\n                isFirstPara = false;\n            }\n            widget = this.selection.getNextParagraphBlock(widget.getSplitWidgets().pop());\n        }\n        this.tocStyles = {};\n        return widgets;\n    };\n    Editor.prototype.createOutlineLevels = function (settings) {\n        for (var i = settings.startLevel; i <= settings.endLevel; i++) {\n            var levelStyle = 'Level' + i.toString();\n            if (isNullOrUndefined(this.tocStyles[levelStyle])) {\n                this.tocStyles[levelStyle] = i;\n            }\n        }\n    };\n    Editor.prototype.createHeadingLevels = function (settings) {\n        //let normalStyle: string = 'Normal';\n        for (var i = settings.startLevel; i <= settings.endLevel; i++) {\n            var headingStyle = 'Heading ' + i.toString();\n            if (isNullOrUndefined(this.tocStyles[headingStyle])) {\n                this.tocStyles[headingStyle] = i;\n            }\n        }\n        if (!isNullOrUndefined(settings.levelSettings)) {\n            for (var _i = 0, _a = Object.keys(settings.levelSettings); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this.tocStyles[key] = settings.levelSettings[key];\n            }\n        }\n    };\n    Editor.prototype.isHeadingStyle = function (para) {\n        var style = para.paragraphFormat.baseStyle;\n        if (style !== undefined) {\n            return isNullOrUndefined(this.tocStyles[style.name]) ? false : true;\n        }\n        return false;\n    };\n    Editor.prototype.isOutlineLevelStyle = function (para) {\n        var styleName = para.paragraphFormat.outlineLevel;\n        return isNullOrUndefined(this.tocStyles[styleName]) ? false : true;\n    };\n    Editor.prototype.createTocFieldElement = function (lineWidget, fieldCode, isSkipRevision) {\n        //begin\n        var fieldBegin = new FieldElementBox(0);\n        fieldBegin.hasFieldEnd = true;\n        fieldBegin.line = lineWidget;\n        lineWidget.children.push(fieldBegin);\n        var currentRevision = undefined;\n        //format toc\n        var textElement = new TextElementBox();\n        textElement.text = fieldCode;\n        textElement.line = lineWidget;\n        lineWidget.children.push(textElement);\n        //field separator\n        var fieldSeparator = new FieldElementBox(2);\n        fieldSeparator.fieldBegin = fieldBegin;\n        fieldSeparator.fieldBegin.fieldSeparator = fieldSeparator;\n        fieldSeparator.line = lineWidget;\n        lineWidget.children.push(fieldSeparator);\n        // If revision enabled.\n        return fieldBegin;\n    };\n    Editor.prototype.createTOCWidgets = function (widget, widgets, fieldCode, bookmarkName, tocSettings, isFirstPara, isStartParagraph, sectionFormat, isNavigationPane) {\n        var fieldBegin = undefined;\n        var tocPara = undefined;\n        var tocLine = undefined;\n        var emptyParaAppended = false;\n        if (widgets.length === 1 && widgets[0].childWidgets[0].children.length === 3 && !isNullOrUndefined(isFirstPara) && !isFirstPara) {\n            tocLine = widgets[0].childWidgets[0];\n        }\n        else {\n            tocPara = new ParagraphWidget();\n            var styleName = undefined;\n            //Adds toc syles into paragraph\n            var headingStyleName = widget.paragraphFormat.baseStyle.name;\n            if (tocSettings.includeOutlineLevels && isNullOrUndefined(this.tocStyles[headingStyleName])) {\n                styleName = widget.paragraphFormat.outlineLevel;\n            }\n            else {\n                styleName = headingStyleName;\n            }\n            var tocStyleName = 'TOC ' + this.tocStyles[styleName];\n            var headingPaneStyleName = 'Heading ' + this.tocStyles[styleName];\n            var paraStyle = undefined;\n            if (isNavigationPane) {\n                paraStyle = this.documentHelper.styles.findByName(headingPaneStyleName, 'Paragraph');\n                if (isNullOrUndefined(paraStyle)) {\n                    this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(headingPaneStyleName)), this.documentHelper.styles, true);\n                    paraStyle = this.documentHelper.styles.findByName(headingPaneStyleName, 'Paragraph');\n                }\n            }\n            else {\n                paraStyle = this.documentHelper.styles.findByName(tocStyleName, 'Paragraph');\n                if (isNullOrUndefined(paraStyle)) {\n                    this.documentHelper.owner.parser.parseStyle(JSON.parse(this.getCompleteStyles()), JSON.parse(this.documentHelper.preDefinedStyles.get(tocStyleName)), this.documentHelper.styles, true);\n                    paraStyle = this.documentHelper.styles.findByName(tocStyleName, 'Paragraph');\n                }\n            }\n            tocPara.paragraphFormat.applyStyle(paraStyle);\n            //Creates right tab for page number.\n            if (tocSettings.rightAlign && tocSettings.includePageNumber) {\n                var tabStop = new WTabStop();\n                tabStop.position = sectionFormat.pageWidth - (sectionFormat.leftMargin + sectionFormat.rightMargin);\n                tabStop.tabLeader = tocSettings.tabLeader;\n                tabStop.deletePosition = 0;\n                tabStop.tabJustification = 'Right';\n                tocPara.paragraphFormat.tabs.push(tabStop);\n            }\n            tocLine = new LineWidget(tocPara);\n            tocPara.childWidgets.push(tocLine);\n        }\n        //creates toc field element if it is insert\n        if ((isFirstPara !== undefined) && isFirstPara) {\n            if (!isNullOrUndefined(isStartParagraph) && !isStartParagraph) {\n                this.appendEmptyPara(widgets);\n                emptyParaAppended = true;\n            }\n            this.createTocFieldElement(tocLine, fieldCode);\n        }\n        var text = '';\n        var isFieldCode = false;\n        var paragraph = widget;\n        while (paragraph instanceof ParagraphWidget) {\n            for (var lineIndex = 0; lineIndex < paragraph.childWidgets.length; lineIndex++) {\n                var lineWidget = paragraph.childWidgets[lineIndex];\n                for (var elementIndex = 0; elementIndex < lineWidget.children.length; elementIndex++) {\n                    var element = lineWidget.children[elementIndex];\n                    if (element.isPageBreak || element.isColumnBreak) {\n                        continue;\n                    }\n                    if ((element instanceof FieldElementBox) || (element instanceof BookmarkElementBox) || isFieldCode) {\n                        if (element instanceof FieldElementBox) {\n                            if (element.fieldType === 0) {\n                                isFieldCode = true;\n                            }\n                            else if (element.fieldType === 2) {\n                                isFieldCode = false;\n                            }\n                        }\n                    }\n                    else if (element instanceof TextElementBox || element instanceof ListTextElementBox) {\n                        var temp = element.text;\n                        var tabChar = '\\t';\n                        if (temp.indexOf(tabChar) !== -1) {\n                            temp = temp.replace(new RegExp(tabChar, 'g'), ' ');\n                        }\n                        text = text + temp;\n                    }\n                }\n            }\n            paragraph = paragraph.nextSplitWidget;\n        }\n        if (text !== '') {\n            // inserts hyperlink\n            if (tocSettings.includeHyperlink && (bookmarkName !== undefined)) {\n                fieldBegin = this.insertTocHyperlink(tocLine, bookmarkName, text, widget);\n            }\n            else {\n                var span = new TextElementBox();\n                span.text = text;\n                span.line = tocLine;\n                tocLine.children.push(span);\n            }\n            //inserts page number\n            if (tocSettings.includePageNumber && (bookmarkName !== undefined)) {\n                if (tocSettings.rightAlign) {\n                    var tabText = new TabElementBox();\n                    tabText.text = '\\t';\n                    tabText.line = tocLine;\n                    tocLine.children.push(tabText);\n                }\n                var pageField = this.insertTocPageNumber(bookmarkName, tocLine, tocSettings.rightAlign, widget);\n                this.appendEndField(pageField, tocLine);\n            }\n            if (tocSettings.includeHyperlink && fieldBegin !== undefined) {\n                this.appendEndField(fieldBegin, tocLine);\n            }\n        }\n        if (!isNullOrUndefined(tocPara) && (text !== '' || isFirstPara)) {\n            widgets.push(tocPara);\n        }\n        if (this.owner.enableTrackChanges && !isNullOrUndefined(tocPara)) {\n            if (widgets.length === 1 || emptyParaAppended) {\n                this.insertRevisionForBlock(tocPara, 'Insertion', true);\n            }\n            else {\n                var revision = this.owner.revisionsInternal.changes[0];\n                this.insertRevisionForBlock(tocPara, 'Insertion', true, revision);\n            }\n        }\n    };\n    Editor.prototype.insertTocHyperlink = function (lineWidget, bookmarkName, text, widget) {\n        var fieldCode = ' HYPERLINK \\\\l \\\"' + bookmarkName + '\\\" ';\n        var fieldBegin = this.createTocFieldElement(lineWidget, fieldCode, true);\n        //text element.\n        var span = new TextElementBox();\n        span.text = text;\n        // retrieve the TOC character format\n        var styleName = widget.paragraphFormat.baseStyle.name;\n        var curBaseSytle = this.documentHelper.styles.findByName(styleName, 'Paragraph');\n        if (curBaseSytle.characterFormat.isEqualTocFormat(widget.characterFormat)) {\n            var noramlStyle = this.documentHelper.styles.findByName('Normal', 'Paragraph');\n            span.characterFormat.copyTocFormat(noramlStyle.characterFormat);\n        }\n        else {\n            span.characterFormat.copyTocFormat(widget.characterFormat);\n        }\n        span.line = lineWidget;\n        lineWidget.children.push(span);\n        return fieldBegin;\n    };\n    Editor.prototype.getPageNumber = function (widget) {\n        var pageNumber;\n        if (widget.bodyWidget.sectionFormat.restartPageNumbering) {\n            pageNumber = widget.bodyWidget.page.currentPageNum;\n        }\n        else {\n            pageNumber = this.documentHelper.pages.indexOf(widget.bodyWidget.page) + 1;\n        }\n        return pageNumber;\n    };\n    Editor.prototype.insertTocPageNumber = function (bookMarkname, lineWidget, isRightAlign, widget) {\n        var fieldCode = ' PAGEREF' + bookMarkname + ' \\\\h ';\n        var fieldBegin = this.createTocFieldElement(lineWidget, fieldCode, true);\n        var text = (this.getPageNumber(widget)).toString();\n        var span = new FieldTextElementBox();\n        span.fieldBegin = fieldBegin;\n        if (!isRightAlign) {\n            text = ' ' + text;\n        }\n        span.text = text;\n        span.line = lineWidget;\n        lineWidget.children.push(span);\n        this.pageRefFields[bookMarkname] = span;\n        return fieldBegin;\n    };\n    Editor.prototype.updatePageRef = function () {\n        for (var _i = 0, _a = Object.keys(this.pageRefFields); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.documentHelper.bookmarks.containsKey(key)) {\n                var bookmark = this.documentHelper.bookmarks.get(key);\n                var pageRef = (this.getPageNumber(bookmark.paragraph)).toString();\n                var span = this.pageRefFields[key];\n                if (pageRef !== span.text) {\n                    span.text = pageRef;\n                    var paragraph = span.paragraph;\n                    var lineIndex = paragraph.childWidgets.indexOf(span.line);\n                    var elementIndex = span.line.children.indexOf(span);\n                    if (!isNullOrUndefined(paragraph.containerWidget)) {\n                        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Inserts toc bookmark.\n     *\n     * @param widget\n     * @returns {string}\n     */\n    Editor.prototype.insertTocBookmark = function (widget) {\n        var bookmarkName = undefined;\n        var lineLength = widget.childWidgets.length;\n        if (lineLength > 0) {\n            var splitParagraph = widget.getSplitWidgets();\n            var firstParagraph = splitParagraph[0];\n            var lastParagraph = splitParagraph.pop();\n            var startLine = firstParagraph.childWidgets[0];\n            var endLine = lastParagraph.childWidgets[lastParagraph.childWidgets.length - 1];\n            if ((startLine !== undefined) && (endLine !== undefined)) {\n                var startElement = startLine.children[0];\n                if (startElement instanceof ListTextElementBox || startElement instanceof CommentCharacterElementBox) {\n                    do {\n                        startElement = startElement.nextNode;\n                    } while (startElement instanceof ListTextElementBox || startElement instanceof CommentCharacterElementBox);\n                }\n                //Returns the bookmark if already present for paragraph.\n                if (!isNullOrUndefined(startElement) && startElement instanceof BookmarkElementBox && startElement.bookmarkType === 0 && (startElement.name.toLowerCase().match('^_toc'))) {\n                    return startElement.name;\n                }\n                var endElement = endLine.children[endLine.children.length - 1];\n                if ((startElement !== undefined) && (endElement !== undefined)) {\n                    this.selection.start.setPositionForSelection(startLine, startElement, 0, this.selection.start.location);\n                    this.selection.end.setPositionForSelection(endLine, endElement, endElement.length, this.selection.end.location);\n                    bookmarkName = this.generateBookmarkName();\n                    this.insertBookmark(bookmarkName);\n                }\n            }\n        }\n        return bookmarkName;\n    };\n    Editor.prototype.generateBookmarkName = function () {\n        var bookmarkName = '';\n        do {\n            this.tocBookmarkId++;\n            var count = 10 - this.tocBookmarkId.toString().length;\n            var formatString = '';\n            while (count - 1 > 0) {\n                formatString = '0' + formatString;\n                count--;\n            }\n            bookmarkName = '_Toc' + formatString + this.tocBookmarkId;\n        } while (this.documentHelper.bookmarks.containsKey(bookmarkName));\n        return bookmarkName;\n    };\n    /**\n     * Change cell content alignment\n     *\n     * @param verticalAlignment\n     * @param textAlignment\n     * @param verticalAlignment\n     * @param textAlignment\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.onCellContentAlignment = function (verticalAlignment, textAlignment) {\n        this.owner.isShiftingEnabled = true;\n        var selection = this.owner.selectionModule;\n        if (selection.isEmpty && selection.start.paragraph.isInsideTable) {\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.initComplexHistory(selection, 'MultiSelection');\n            }\n            //Selecting the table cell to update the all the paragraph format.\n            selection.selectTableCell();\n            this.initHistory('CellContentVerticalAlignment');\n            var cellFormat = selection.start.paragraph.associatedCell.cellFormat;\n            this.applyCellPropertyValue(selection, 'verticalAlignment', verticalAlignment, cellFormat);\n            this.reLayout(selection, false);\n            this.initHistory('TextAlignment');\n            this.updateParagraphFormat('textAlignment', textAlignment, false);\n            this.reLayout(this.owner.selectionModule, false);\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.updateComplexHistory();\n            }\n        }\n        else {\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.initComplexHistory(selection, 'MultiSelection');\n            }\n            if (!isNullOrUndefined(selection.getTable(selection.start, selection.end))) {\n                //Table cell vertical alignment.\n                this.updateSelectionTableFormat(selection, 'CellContentVerticalAlignment', verticalAlignment);\n                this.reLayout(this.owner.selectionModule, false);\n                this.initHistory('TextAlignment');\n                //Paragraph text alignment.\n                this.updateSelectionParagraphFormatting('textAlignment', textAlignment, false);\n                this.reLayout(selection, false);\n            }\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.updateComplexHistory();\n            }\n        }\n    };\n    //Restrict editing implementation starts\n    /**\n     * @param user\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.insertEditRangeElement = function (user) {\n        if (this.documentHelper.isDocumentProtected || this.documentHelper.selection.isEmpty) {\n            return;\n        }\n        this.initComplexHistory('RestrictEditing');\n        this.selection.skipEditRangeRetrieval = true;\n        var selection = this.documentHelper.selection;\n        var startPos = this.selection.start;\n        var endPos = this.selection.end;\n        if (!this.selection.isForward) {\n            startPos = this.selection.end;\n            endPos = this.selection.start;\n        }\n        if (selection.start.paragraph.isInsideTable && selection.end.paragraph.isInsideTable\n            && selection.start.paragraph.associatedCell.ownerTable.contains(selection.end.paragraph.associatedCell)) {\n            var startCell = this.getOwnerCell(this.selection.isForward);\n            var endCell = this.getOwnerCell(!this.selection.isForward);\n            if (startCell.rowIndex === endCell.rowIndex) {\n                var startIndex = startCell.ownerRow.childWidgets.indexOf(startCell);\n                var endIndex = startCell.ownerRow.childWidgets.indexOf(endCell);\n                var startElement = [];\n                var endElement = [];\n                for (var i = startIndex; i <= endIndex; i++) {\n                    var editStart = this.addEditElement(user);\n                    if (i == startIndex) {\n                        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n                            this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n                        }\n                    }\n                    editStart.columnFirst = i;\n                    editStart.columnLast = i;\n                    editStart.line = selection.start.currentWidget;\n                    var editEnd = editStart.editRangeEnd;\n                    editEnd.line = selection.end.currentWidget;\n                    startElement.push(editStart);\n                    endElement.push(editEnd);\n                    this.insertElements(undefined, [editStart]);\n                }\n                //this.insertElements(endElement, startElement);\n                var lastLine = this.selection.getLastParagraph(endCell).lastChild;\n                for (var l = 0; l < endElement.length; l++) {\n                    endElement[l].line = lastLine;\n                    if (l == 0) {\n                        this.selection.start.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n                        this.selection.end.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n                    }\n                    this.insertElements(undefined, [endElement[l]]);\n                }\n                if (this.editorHistory) {\n                    this.editorHistory.updateComplexHistoryInternal();\n                }\n                var offset = startElement[0].line.getOffset(startElement[0], 1);\n                this.selection.start.setPositionParagraph(startElement[0].line, offset);\n                offset = endElement[0].line.getOffset(endElement[0], 1);\n                this.selection.end.setPositionParagraph(endElement[0].line, offset);\n                this.selection.fireSelectionChanged(true);\n                this.fireContentChange();\n            }\n            else {\n                this.insertEditRangeInsideTable(startCell, endCell, user);\n                if (this.editorHistory) {\n                    this.editorHistory.updateComplexHistoryInternal();\n                }\n                var startLine = this.documentHelper.getFirstParagraphInCell(startCell).childWidgets[0];\n                var endLine = this.selection.getLastParagraph(endCell).childWidgets[0];\n                var offset = startLine.getOffset(startLine.children[0], 1);\n                this.selection.start.setPositionParagraph(startLine, offset);\n                offset = endLine.getOffset(endLine.children[0], 1);\n                this.selection.end.setPositionParagraph(endLine, offset);\n                this.selection.fireSelectionChanged(true);\n                this.fireContentChange();\n            }\n        }\n        else {\n            this.addRestrictEditingForSelectedArea(user);\n        }\n        this.selection.skipEditRangeRetrieval = false;\n    };\n    Editor.prototype.insertEditRangeInsideTable = function (startCell, endCell, user) {\n        var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        var rowStartIndex = table.childWidgets.indexOf(startCell.ownerRow);\n        var startLeft = this.selection.getCellLeft(startCell.ownerRow, startCell);\n        var endLeft = startLeft + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.selection.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        var cellInfo = this.updateSelectedCellsInTable(startLeft, endLeft, endCellLeft, endCellRight);\n        startLeft = cellInfo.start;\n        endLeft = cellInfo.end;\n        var endElement = [];\n        for (var i = rowStartIndex; i <= count; i++) {\n            table = startCell.ownerTable.combineWidget(this.owner.viewer);\n            var row = table.childWidgets[i];\n            var cellSelectionStartIndex = -1;\n            var cellSelectionEndIndex = -1;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                var cellStart = this.selection.getCellLeft(row, cell);\n                if (this.checkCellWithInSelection(startLeft, endLeft, cellStart)) {\n                    if (cellSelectionStartIndex === -1) {\n                        cellSelectionStartIndex = j;\n                    }\n                    cellSelectionEndIndex = j;\n                }\n            }\n            var newEndElement = [];\n            for (var z = cellSelectionStartIndex; z <= cellSelectionEndIndex; z++) {\n                var startCell_2 = void 0;\n                var startParagraph = void 0;\n                var startLine = void 0;\n                if (z >= cellSelectionStartIndex && z <= cellSelectionEndIndex) {\n                    startCell_2 = row.childWidgets[cellSelectionStartIndex];\n                    startParagraph = this.documentHelper.getFirstParagraphInCell(startCell_2);\n                    startLine = startParagraph.childWidgets[0];\n                }\n                var editStart = this.addEditElement(user);\n                if (z === cellSelectionStartIndex) {\n                    if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n                        this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n                    }\n                    this.selection.start.setPositionParagraph(startLine, this.selection.getStartOffset(startParagraph));\n                    this.selection.end.setPositionParagraph(startLine, this.selection.getStartOffset(startParagraph));\n                }\n                editStart.columnFirst = z;\n                editStart.columnLast = z;\n                editStart.line = startLine;\n                this.insertElements(undefined, [editStart]);\n                var editEnd = editStart.editRangeEnd;\n                newEndElement.push(editEnd);\n                if (endElement.length > 0 && z === cellSelectionEndIndex) {\n                    for (var l = 0; l < endElement.length; l++) {\n                        endElement[l].line = editStart.line;\n                        this.insertElements(undefined, [endElement[l]]);\n                    }\n                    endElement = [];\n                }\n            }\n            endElement = newEndElement;\n            if (i === count && endElement.length > 0) {\n                var cellWidget = row.childWidgets[cellSelectionEndIndex];\n                var lastLine = this.selection.getLastParagraph(cellWidget).lastChild;\n                for (var l = 0; l < endElement.length; l++) {\n                    endElement[l].line = lastLine;\n                    if (l == 0) {\n                        this.selection.start.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n                        this.selection.end.setPositionParagraph(lastLine, this.selection.getLineLength(lastLine));\n                    }\n                    this.insertElements(undefined, [endElement[l]]);\n                }\n            }\n        }\n    };\n    Editor.prototype.addRestrictEditingForSelectedArea = function (user) {\n        var editStart = this.addEditElement(user);\n        var editEnd = editStart.editRangeEnd;\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.editorHistory.currentHistoryInfo.editRangeStart = editStart;\n        }\n        this.owner.isShiftingEnabled = true;\n        this.insertElements([editEnd], [editStart]);\n        if (this.editorHistory) {\n            this.editorHistory.updateComplexHistoryInternal();\n        }\n        var offset = editStart.line.getOffset(editStart, 1);\n        this.selection.start.setPositionParagraph(editStart.line, offset);\n        offset = editEnd.line.getOffset(editEnd, 1);\n        this.selection.end.setPositionParagraph(editEnd.line, offset);\n        var block = this.documentHelper.blockToShift;\n        if (!isNullOrUndefined(block) && this.viewer instanceof PageLayoutViewer && block.bodyWidget.sectionFormat.columns.length > 1) {\n            var lastbody = this.documentHelper.layout.getBodyWidget(block.bodyWidget, false);\n            if ((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak' && lastbody.page === lastbody.nextRenderedWidget.page)) {\n                this.reLayout(this.selection);\n            }\n        }\n        this.owner.isShiftingEnabled = false;\n        this.selection.fireSelectionChanged(true);\n        this.fireContentChange();\n    };\n    /**\n     * @param user\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.addEditElement = function (user, id) {\n        var editStart = new EditRangeStartElementBox();\n        if (user.toLocaleLowerCase() === 'everyone') {\n            editStart.group = user;\n        }\n        else {\n            editStart.user = user;\n        }\n        var editEnd = new EditRangeEndElementBox();\n        editEnd.editRangeStart = editStart;\n        editStart.editRangeEnd = editEnd;\n        if (id) {\n            editStart.editRangeId = id;\n            editEnd.editRangeId = id;\n        }\n        else {\n            var editRangeId = this.getEditRangeID(9);\n            editStart.editRangeId = editRangeId;\n            editEnd.editRangeId = editRangeId;\n        }\n        this.editStartRangeCollection.push(editStart);\n        this.addEditCollectionToDocument();\n        this.editStartRangeCollection = [];\n        return editStart;\n    };\n    /**\n     * @param numDigits\n     * @private\n     * @returns {number}\n     */\n    Editor.prototype.getEditRangeID = function (numDigits) {\n        var min = Math.pow(10, numDigits - 1);\n        var max = Math.pow(10, numDigits) - 1;\n        var num = Math.floor(Math.random() * (max - min + 1)) + min;\n        if (this.editRangeID.includes(num)) {\n            // Number is not unique, generate a new one recursively\n            return this.getEditRangeID(numDigits);\n        }\n        this.editRangeID.push(num);\n        return num;\n    };\n    /**\n     * @param protectionType\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.protect = function (protectionType) {\n        this.documentHelper.isDocumentProtected = true;\n        this.documentHelper.protectionType = protectionType;\n        this.selection.highlightEditRegion();\n        if (this.editorHistory) {\n            this.editorHistory.destroy();\n        }\n    };\n    Editor.prototype.addEditCollectionToDocument = function () {\n        for (var i = 0; i < this.editStartRangeCollection.length; i++) {\n            var editStart = this.editStartRangeCollection[i];\n            var user = editStart.user === '' ? editStart.group : editStart.user;\n            if (this.documentHelper.editRanges.length > 0 && this.documentHelper.editRanges.containsKey(user)) {\n                this.documentHelper.editRanges.get(user).push(editStart);\n            }\n            else {\n                var collection = [];\n                collection.push(editStart);\n                this.documentHelper.editRanges.add(user, collection);\n            }\n        }\n        this.selection.updateEditRangeCollection();\n    };\n    /**\n     * @param editStart\n     * @param user\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateRangeCollection = function (editStart, user) {\n        if (this.documentHelper.editRanges.length > 0 && this.documentHelper.editRanges.containsKey(user)) {\n            this.documentHelper.editRanges.get(user).push(editStart);\n        }\n        else {\n            var collection = [];\n            collection.push(editStart);\n            this.documentHelper.editRanges.add(user, collection);\n        }\n    };\n    /**\n     * @param user\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeUserRestrictions = function (user) {\n        if (!this.selection.checkSelectionIsAtEditRegion() && !this.selection.isEditRangeCellSelected()) {\n            return;\n        }\n        this.selection.skipEditRangeRetrieval = true;\n        var editStart = this.selection.getEditRangeStartElement();\n        this.selection.skipEditRangeRetrieval = true;\n        var start = this.selection.start;\n        var end = this.selection.end;\n        if (!this.selection.isForward) {\n            start = this.selection.end;\n            end = this.selection.start;\n        }\n        if (!this.selection.isEmpty && start.paragraph.isInsideTable && end.paragraph.isInsideTable && this.selection.isCellSelected(start.paragraph.associatedCell, start, end)) {\n            var startCell = start.paragraph.associatedCell;\n            var table = startCell.ownerTable.combineWidget(this.owner.viewer);\n            var endCell = end.paragraph.associatedCell;\n            if (table.contains(endCell)) {\n                this.removeEditRangeElementsOnTable(user);\n            }\n        }\n        else {\n            this.removeEditRangeElements(editStart, user);\n        }\n        this.fireContentChange();\n        this.selection.skipEditRangeRetrieval = false;\n    };\n    Editor.prototype.removeEditRangeElements = function (editStart, user) {\n        this.initHistory('RemoveEditRange');\n        if (this.editorHistory) {\n            this.editorHistory.currentBaseHistoryInfo.markerData.push(this.getMarkerData(editStart));\n            this.editorHistory.currentBaseHistoryInfo.setEditRangeInfo(editStart);\n            this.editorHistory.updateHistory();\n        }\n        if (editStart.user === user || editStart.group === user) {\n            this.removeUserRestrictionsInternal(editStart, user);\n        }\n        this.selection.updateEditRangeCollection();\n    };\n    Editor.prototype.removeEditRangeElementsOnTable = function (currentUser) {\n        var selectedWidgets = this.selection.selectedWidgets.keys;\n        if (selectedWidgets) {\n            this.initComplexHistory('RemoveEditRange');\n            for (var i = 0; i < selectedWidgets.length; i++) {\n                if (selectedWidgets[i] instanceof TableCellWidget) {\n                    var cell = selectedWidgets[i];\n                    var row = cell.containerWidget;\n                    var editRangeElements = row.editRangeID.values;\n                    if (editRangeElements.length > 0) {\n                        var editStart = void 0;\n                        for (var _i = 0, editRangeElements_1 = editRangeElements; _i < editRangeElements_1.length; _i++) {\n                            var element = editRangeElements_1[_i];\n                            if (element.columnFirst == cell.index && element.columnLast == cell.index) {\n                                editStart = element;\n                            }\n                        }\n                        if (editStart) {\n                            var editRangeEnd = editStart.editRangeEnd;\n                            this.selection.start.setPositionParagraph(editStart.line, editStart.line.getOffset(editStart, editStart.length));\n                            this.selection.end.setPositionParagraph(editRangeEnd.line, editRangeEnd.line.getOffset(editRangeEnd, editRangeEnd.length) - 1);\n                            if (editStart.user === currentUser || editStart.group === currentUser) {\n                                this.removeEditRangeElements(editStart, currentUser);\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.editorHistory) {\n                this.editorHistory.updateComplexHistoryInternal();\n            }\n        }\n    };\n    /**\n     * @param editStart\n     * @param currentUser\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeUserRestrictionsInternal = function (editStart, currentUser, notRemoveElement) {\n        var user = currentUser;\n        if (isNullOrUndefined(currentUser)) {\n            user = editStart.user === '' ? editStart.group : editStart.user;\n        }\n        var index = this.documentHelper.editRanges.get(user).indexOf(editStart);\n        this.documentHelper.editRanges.get(user).splice(index, 1);\n        if (this.documentHelper.editRanges.get(user).length === 0) {\n            this.documentHelper.editRanges.remove(user);\n        }\n        if (editStart.columnFirst != -1 && editStart.columnLast != -1) {\n            this.removeEditRangeFromCollection(editStart);\n        }\n        editStart.removeEditRangeMark();\n        if (!notRemoveElement) {\n            editStart.editRangeEnd.line.children.splice(editStart.editRangeEnd.indexInOwner, 1);\n            editStart.line.children.splice(editStart.indexInOwner, 1);\n        }\n    };\n    Editor.prototype.removeEditRangeFromCollection = function (editStart) {\n        var row = editStart.paragraph.associatedCell.ownerRow;\n        if (row.editRangeID.containsKey(editStart.editRangeId)) {\n            var cell = row.getCellUsingColumnIndex(row.rowIndex, editStart.columnFirst);\n            if (!isNullOrUndefined(cell)) {\n                if (cell.isRenderEditRangeStart && cell.isRenderEditRangeEnd) {\n                    cell.isRenderEditRangeEnd = false;\n                    cell.isRenderEditRangeStart = false;\n                    row.editRangeID.remove(editStart.editRangeId);\n                }\n            }\n        }\n        else {\n            var table = editStart.paragraph.associatedCell.ownerTable;\n            for (var i = row.rowIndex - 1; i >= 0; i--) {\n                var previousRow = table.childWidgets[i];\n                if (previousRow.editRangeID.containsKey(editStart.editRangeId)) {\n                    var previousCell = previousRow.getCellUsingColumnIndex(previousRow.rowIndex, editStart.columnFirst);\n                    if (!isNullOrUndefined(previousCell)) {\n                        if (previousCell.isRenderEditRangeStart && previousCell.isRenderEditRangeEnd) {\n                            previousCell.isRenderEditRangeEnd = false;\n                            previousCell.isRenderEditRangeStart = false;\n                            previousRow.editRangeID.remove(editStart.editRangeId);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.removeAllEditRestrictions = function () {\n        this.selection.skipEditRangeRetrieval = true;\n        var startPosition = this.selection.start;\n        var endPosition = this.selection.end;\n        var editStart = [];\n        var keys = this.documentHelper.editRanges.keys;\n        for (var j = 0; j < keys.length; j++) {\n            editStart = this.documentHelper.editRanges.get(keys[j]);\n            for (var i = 0; i < editStart.length; i++) {\n                editStart[i].editRangeEnd.line.children.splice(editStart[i].editRangeEnd.indexInOwner, 1);\n                editStart[i].line.children.splice(editStart[i].indexInOwner, 1);\n            }\n        }\n        this.documentHelper.editRanges.clear();\n        this.selection.updateEditRangeCollection();\n        this.selection.start.setPositionInternal(startPosition);\n        this.selection.end.setPositionInternal(endPosition);\n        this.selection.editRegionHighlighters.clear();\n        this.owner.viewer.updateScrollBars();\n        this.selection.fireSelectionChanged(false);\n        this.selection.skipEditRangeRetrieval = false;\n    };\n    /**\n     * Inserts the specified form field at the current selection.\n     *\n     * @param {FormFieldType} type Specify the Form field type to insert.\n     * @returns {void}\n     */\n    Editor.prototype.insertFormField = function (type) {\n        if (isNullOrUndefined(this.selection.start) || this.owner.enableHeaderAndFooter) {\n            return;\n        }\n        this.initHistory('InsertHyperlink');\n        var isRemoved = true;\n        if (!this.selection.isEmpty) {\n            isRemoved = this.removeSelectedContents(this.selection);\n        }\n        if (isRemoved) {\n            this.insertFormFieldInternal(type);\n        }\n    };\n    Editor.prototype.insertFormFieldInternal = function (type) {\n        this.updateInsertPosition();\n        var element = [];\n        var temp = this.getCharacterFormat(this.selection);\n        var format = new WCharacterFormat(undefined);\n        format.copyFormat(temp);\n        var fieldBegin = new FieldElementBox(0);\n        fieldBegin.formFieldData = this.getFormFieldData(type);\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.formFieldType = type;\n            this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n        }\n        fieldBegin.characterFormat.copyFormat(format);\n        element.push(fieldBegin);\n        var bookmark = new BookmarkElementBox(0);\n        bookmark.characterFormat.copyFormat(format);\n        fieldBegin.formFieldData.name = this.getBookmarkName(type, 'Insert', this.formFieldCounter);\n        bookmark.name = fieldBegin.formFieldData.name;\n        element.push(bookmark);\n        var span = new TextElementBox();\n        span.text = this.getFormFieldCode(type);\n        element.push(span);\n        var fieldSeparator = new FieldElementBox(2);\n        element.push(fieldSeparator);\n        var result = new TextElementBox();\n        result.characterFormat.copyFormat(format);\n        if (type === 'CheckBox') {\n            result.text = String.fromCharCode(9744);\n            this.documentHelper.layout.setCheckBoxFontSize(fieldBegin.formFieldData, result.characterFormat);\n        }\n        else {\n            result.text = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n        }\n        element.push(result);\n        var fieldEnd = new FieldElementBox(1);\n        fieldEnd.characterFormat.copyFormat(format);\n        element.push(fieldEnd);\n        fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n        fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n        fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n        var bookmarkEnd = new BookmarkElementBox(1);\n        bookmarkEnd.characterFormat.copyFormat(format);\n        bookmarkEnd.name = fieldBegin.formFieldData.name;\n        bookmarkEnd.reference = bookmark;\n        bookmark.reference = bookmarkEnd;\n        element.push(bookmarkEnd);\n        this.documentHelper.layout.isInsertFormField = true;\n        this.insertElement(element);\n        this.documentHelper.layout.isInsertFormField = false;\n        var paragraph = this.selection.start.paragraph;\n        fieldEnd.linkFieldCharacter(this.documentHelper);\n        if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n            this.documentHelper.fields.push(fieldBegin);\n        }\n        this.addFormFieldWidget(fieldBegin);\n        var offset = bookmarkEnd.line.getOffset(bookmarkEnd, 1);\n        this.selection.selects(bookmarkEnd.line, offset, true);\n        this.updateEndPosition();\n        this.reLayout(this.selection, true);\n    };\n    Editor.prototype.addFormFieldWidget = function (fieldBegin) {\n        if (this.documentHelper.formFields.indexOf(fieldBegin) === -1) {\n            var isInserted = false;\n            if (this.documentHelper.formFields.length > 0) {\n                var currentStart = this.selection.getElementPosition(fieldBegin).startPosition;\n                for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n                    /* eslint-disable-next-line max-len */\n                    var paraIndex = this.selection.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n                    if (currentStart.isExistBefore(paraIndex)) {\n                        isInserted = true;\n                        this.documentHelper.formFields.splice(i, 0, fieldBegin);\n                        break;\n                    }\n                }\n            }\n            if (!isInserted) {\n                this.documentHelper.formFields.push(fieldBegin);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Editor.prototype.getFormFieldData = function (type) {\n        switch (type) {\n            case 'Text':\n                return new TextFormField();\n            case 'CheckBox':\n                return new CheckBoxFormField();\n            case 'DropDown':\n                return new DropDownFormField();\n        }\n    };\n    /**\n     * @param field\n     * @param info\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.setFormField = function (field, info) {\n        var type;\n        var formField;\n        if (!isNullOrUndefined(info.format)) {\n            type = 'Text';\n            formField = new TextFormField();\n        }\n        else if (!isNullOrUndefined(info.sizeType)) {\n            type = 'CheckBox';\n            formField = new CheckBoxFormField();\n        }\n        else if (!isNullOrUndefined(info.dropdownItems)) {\n            type = 'DropDown';\n            formField = new DropDownFormField();\n        }\n        if (!isNullOrUndefined(type) && !isNullOrUndefined(formField)) {\n            formField.name = !isNullOrUndefined(info.name) ? info.name : field.formFieldData.name;\n            formField.copyFieldInfo(info);\n            this.editFormField(type, formField);\n        }\n    };\n    /**\n     * @param type\n     * @param formData\n     * @param type\n     * @param formData\n     * @private\n     * @returns {boolean}\n     */\n    Editor.prototype.editFormField = function (type, formData) {\n        var begin = this.selection.getCurrentFormField();\n        if (isNullOrUndefined(begin) || isNullOrUndefined(begin.formFieldData)) {\n            return false;\n        }\n        this.initComplexHistory('FormField');\n        var bookmarkStart;\n        var bookmarkEnd;\n        if (formData.name !== '') {\n            if (begin.formFieldData.name !== formData.name &&\n                this.documentHelper.bookmarks.containsKey(formData.name)) {\n                this.deleteBookmark(formData.name);\n            }\n            bookmarkStart = new BookmarkElementBox(0);\n            bookmarkStart.name = formData.name;\n            bookmarkEnd = new BookmarkElementBox(1);\n            bookmarkEnd.name = formData.name;\n            bookmarkStart.reference = bookmarkEnd;\n            bookmarkEnd.reference = bookmarkStart;\n        }\n        this.initHistory('InsertHyperlink');\n        this.editHyperlinkInternal = isNullOrUndefined(this.editorHistory)\n            || (this.editorHistory && isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo));\n        // Preserves the character format for hyperlink field.\n        var temp = begin.characterFormat.cloneFormat();\n        var format = new WCharacterFormat();\n        format.copyFormat(temp);\n        var textFormat = begin.fieldSeparator.nextElement.characterFormat.cloneFormat();\n        var currentOffset = begin.line.getOffset(begin, 0);\n        this.selection.start.setPositionParagraph(begin.line, currentOffset);\n        var endElement = begin.fieldEnd;\n        if (begin.nextNode && begin.nextNode instanceof BookmarkElementBox) {\n            endElement = begin.nextNode.reference;\n        }\n        currentOffset = endElement.line.getOffset(endElement, 1);\n        this.selection.end.setPositionParagraph(endElement.line, currentOffset);\n        this.skipFieldDeleteTracking = true;\n        this.deleteSelectedContents(this.selection, false);\n        this.skipFieldDeleteTracking = false;\n        this.updateInsertPosition();\n        var element = [];\n        var fieldBegin = new FieldElementBox(0);\n        fieldBegin.formFieldData = formData;\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.currentBaseHistoryInfo.formFieldType = type;\n            this.editorHistory.currentBaseHistoryInfo.fieldBegin = fieldBegin;\n        }\n        element.push(fieldBegin);\n        fieldBegin.characterFormat.copyFormat(format);\n        if (!isNullOrUndefined(bookmarkStart)) {\n            element.push(bookmarkStart);\n        }\n        var span = new TextElementBox();\n        span.text = this.getFormFieldCode(type);\n        element.push(span);\n        var fieldSeparator = new FieldElementBox(2);\n        fieldSeparator.characterFormat.copyFormat(format);\n        element.push(fieldSeparator);\n        span = new TextElementBox();\n        span.characterFormat.copyFormat(textFormat);\n        span.text = this.getDefaultText(formData);\n        if (type === 'CheckBox') {\n            span.characterFormat.copyFormat(fieldBegin.characterFormat);\n            if (formData.sizeType === 'Exactly') {\n                span.characterFormat.fontSize = formData.size;\n            }\n        }\n        else if (formData instanceof TextFormField) {\n            if (formData.defaultValue !== '') {\n                if (formData.type === 'Text') {\n                    span.text = HelperMethods.formatText(formData.format, formData.defaultValue);\n                }\n                else if (formData.type === 'Number') {\n                    span.text = HelperMethods.formatNumber(formData.format, formData.defaultValue);\n                }\n                else {\n                    span.text = HelperMethods.formatDate(formData.format, formData.defaultValue);\n                }\n            }\n        }\n        element.push(span);\n        var fieldEnd = new FieldElementBox(1);\n        fieldEnd.characterFormat.copyFormat(format);\n        element.push(fieldEnd);\n        var lastElement = fieldEnd;\n        if (!isNullOrUndefined(bookmarkEnd)) {\n            lastElement = bookmarkEnd;\n            element.push(bookmarkEnd);\n        }\n        fieldBegin.fieldSeparator = fieldEnd.fieldSeparator = fieldSeparator;\n        fieldBegin.fieldEnd = fieldSeparator.fieldEnd = fieldEnd;\n        fieldSeparator.fieldBegin = fieldEnd.fieldBegin = fieldBegin;\n        this.documentHelper.layout.isInsertFormField = true;\n        this.insertElement(element);\n        this.documentHelper.layout.isInsertFormField = false;\n        var paragraph = this.selection.start.paragraph;\n        fieldEnd.linkFieldCharacter(this.documentHelper);\n        if (this.documentHelper.fields.indexOf(fieldBegin) === -1) {\n            this.documentHelper.fields.push(fieldBegin);\n        }\n        this.addFormFieldWidget(fieldBegin);\n        var offset = lastElement.line.getOffset(lastElement, 1);\n        this.selection.selects(lastElement.line, offset, true);\n        this.updateEndPosition();\n        if (this.editorHistory && this.editorHistory.currentBaseHistoryInfo) {\n            this.editorHistory.updateHistory();\n        }\n        if (this.editorHistory && this.editorHistory.currentHistoryInfo) {\n            this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n            this.editorHistory.updateComplexHistory();\n            this.isSkipOperationsBuild = false;\n        }\n        this.reLayout(this.selection, true);\n        this.editHyperlinkInternal = false;\n        this.nodes = [];\n        return true;\n    };\n    Editor.prototype.getDefaultText = function (formField) {\n        var defaultText = '';\n        if (formField instanceof CheckBoxFormField) {\n            defaultText = formField.defaultValue ? String.fromCharCode(9745) : String.fromCharCode(9744);\n        }\n        else if (formField instanceof DropDownFormField) {\n            if (formField.dropdownItems.length > 0) {\n                defaultText = formField.dropdownItems[0];\n            }\n            else {\n                defaultText = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n            }\n        }\n        else if (formField instanceof TextFormField) {\n            if (formField.defaultValue !== '') {\n                defaultText = formField.defaultValue;\n            }\n            else {\n                defaultText = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n            }\n        }\n        return defaultText;\n    };\n    Editor.prototype.getFormFieldCode = function (type) {\n        switch (type) {\n            case 'Text':\n                return 'FORMTEXT';\n            case 'CheckBox':\n                return 'FORMCHECKBOX';\n            case 'DropDown':\n                return 'FORMDROPDOWN';\n        }\n    };\n    /**\n     * @param field\n     * @param reset\n     * @param value\n     * @param field\n     * @param reset\n     * @param value\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.toggleCheckBoxFormField = function (field, reset, value) {\n        var formFieldData = field.formFieldData;\n        if (formFieldData instanceof CheckBoxFormField && formFieldData.enabled) {\n            this.initHistory('UpdateFormField');\n            if (this.editorHistory) {\n                var currentValue = void 0;\n                if (formFieldData instanceof CheckBoxFormField) {\n                    currentValue = formFieldData.checked;\n                }\n                this.editorHistory.currentBaseHistoryInfo.fieldBegin = field;\n                this.editorHistory.currentBaseHistoryInfo.setFormFieldInfo(field, currentValue);\n                this.editorHistory.updateHistory();\n            }\n            if (reset) {\n                formFieldData.checked = value;\n            }\n            else {\n                formFieldData.checked = !formFieldData.checked;\n            }\n            var separator = field.fieldSeparator;\n            var checkBoxTextElement = separator.nextNode;\n            if (formFieldData.checked) {\n                checkBoxTextElement.text = String.fromCharCode(9745);\n            }\n            else {\n                checkBoxTextElement.text = String.fromCharCode(9744);\n            }\n            this.owner.documentHelper.layout.reLayoutParagraph(field.line.paragraph, 0, 0);\n            this.reLayout(this.selection, false);\n        }\n    };\n    /**\n     * @param field\n     * @param value\n     * @param reset\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.updateFormField = function (field, value, reset) {\n        var formFieldData = field.formFieldData;\n        if (formFieldData) {\n            this.updateFormFieldInternal(field, formFieldData, value, reset);\n        }\n    };\n    Editor.prototype.updateFormFieldInternal = function (field, formFieldData, value, reset) {\n        if (formFieldData instanceof TextFormField) {\n            if (value === '') {\n                if (reset) {\n                    value = this.getDefaultText(formFieldData);\n                }\n                else {\n                    value = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n                }\n            }\n            var formattedText = value;\n            var type = formFieldData.type;\n            if (type === 'Text' && formFieldData.format !== '') {\n                formattedText = HelperMethods.formatText(formFieldData.format, value);\n            }\n            this.updateFormFieldResult(field, formattedText);\n        }\n        else if (formFieldData instanceof DropDownFormField) {\n            var text = formFieldData.dropdownItems[value];\n            formFieldData.selectedIndex = value;\n            this.updateFormFieldResult(field, text);\n        }\n        var endoffset = field.fieldEnd.line.getOffset(field.fieldEnd, 1);\n        var startPos = new TextPosition(this.owner);\n        startPos.setPositionParagraph(field.fieldEnd.line, endoffset);\n        //selects the field range\n        this.documentHelper.selection.selectRange(startPos, startPos);\n        this.reLayout(this.selection, false);\n    };\n    Editor.prototype.updateFormFieldResult = function (field, value) {\n        //When protection is enabled with type Form Filling below method selects the field result alone.\n        this.selection.selectFieldInternal(field, false, true);\n        this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.insertText(value);\n        this.isSkipOperationsBuild = false;\n    };\n    Editor.prototype.checkBookmarkAvailability = function (name, action) {\n        var bookmarkCol = this.documentHelper.bookmarks;\n        for (var i = 0; i < bookmarkCol.length; i++) {\n            if (bookmarkCol.containsKey(name)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Editor.prototype.getBookmarkName = function (type, action, count) {\n        var name;\n        var available = false;\n        while (available === false) {\n            name = type + count;\n            available = this.checkBookmarkAvailability(name, action);\n            count = count + 1;\n        }\n        return name;\n    };\n    /**\n     * @param formField\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyFormTextFormat = function (formField) {\n        if (!isNullOrUndefined(formField)) {\n            var text = this.getFieldResultText(formField);\n            var currentValue = text;\n            text = HelperMethods.formatText(formField.formFieldData.format, text);\n            if (formField.fieldSeparator != undefined) {\n                this.applyTextFormatInternal(formField, text);\n            }\n            this.initHistory('FormTextFormat');\n            if (this.editorHistory) {\n                this.editorHistory.currentBaseHistoryInfo.setFormFieldInfo(formField, currentValue);\n                this.editorHistory.updateHistory();\n            }\n        }\n    };\n    // Inserts 5 space on Form Fill inline mode if length is 0\n    Editor.prototype.insertSpaceInFormField = function () {\n        if (this.documentHelper.isInlineFormFillProtectedMode && this.selection.isInlineFormFillMode()) {\n            var resultText = this.getFieldResultText();\n            if (resultText.length === 0 || resultText === '\\r') {\n                this.insertTextInternal(this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5), true);\n                this.selection.selectTextElementStartOfField(this.selection.getCurrentFormField());\n            }\n        }\n    };\n    /**\n     * @param formField\n     * @private\n     * @returns {string}\n     */\n    Editor.prototype.getFieldResultText = function (formField) {\n        if (isNullOrUndefined(formField)) {\n            formField = this.selection.getCurrentFormField();\n        }\n        //Stores the current selection index, to reset after getting the result text\n        var previousStartIndex = this.selection.startOffset;\n        var previousEndIndex = this.selection.endOffset;\n        this.selection.isModifyingSelectionInternally = true;\n        this.selection.selectFieldInternal(formField, false, true);\n        var resultText = this.selection.getText(false);\n        //Resets the selection back to the original index\n        this.selection.select(previousStartIndex, previousEndIndex);\n        this.selection.isModifyingSelectionInternally = false;\n        return resultText;\n    };\n    /**\n     * @param field\n     * @param text\n     * @private\n     * @returns {void}\n     */\n    Editor.prototype.applyTextFormatInternal = function (field, text) {\n        var textElement = field.fieldSeparator.nextElement;\n        var start = 0;\n        text = text.replace(/\\r/g, '');\n        do {\n            if (!isNullOrUndefined(textElement) && textElement instanceof TextElementBox) {\n                textElement.text = text.slice(start, start + textElement.text.length);\n                start = start + textElement.length;\n            }\n            if (isNullOrUndefined(textElement.nextElement)) {\n                if (!isNullOrUndefined(textElement.line.nextLine)) {\n                    textElement = textElement.line.nextLine.children[0];\n                }\n                else {\n                    this.documentHelper.layout.layoutBodyWidgetCollection(textElement.paragraph.index, textElement.paragraph.bodyWidget, textElement.paragraph, true);\n                    var nextBlock = textElement.paragraph.nextRenderedWidget;\n                    if (isNullOrUndefined(nextBlock)) {\n                        break;\n                    }\n                    if (nextBlock instanceof TableWidget) {\n                        nextBlock = this.documentHelper.getFirstParagraphBlock(nextBlock);\n                    }\n                    while (nextBlock.isEmpty()) {\n                        nextBlock = nextBlock.nextRenderedWidget;\n                    }\n                    textElement = nextBlock.childWidgets[0].children[0];\n                }\n            }\n            else {\n                textElement = textElement.nextElement;\n            }\n        } while (!(textElement instanceof FieldElementBox && textElement.fieldType === 1 &&\n            textElement.fieldBegin.formFieldData instanceof TextFormField));\n        this.documentHelper.layout.layoutBodyWidgetCollection(textElement.paragraph.index, textElement.paragraph.bodyWidget, textElement.paragraph, true);\n        this.selection.isFormatUpdated = true;\n        this.reLayout(this.selection, false);\n        this.selection.isFormatUpdated = false;\n    };\n    Editor.prototype.constructCommentInitial = function (authorName) {\n        var splittedName = authorName.split(' ');\n        var initials = '';\n        for (var i = 0; i < splittedName.length; i++) {\n            if (splittedName[i].length > 0 && splittedName[i] !== '') {\n                initials += splittedName[i][0];\n            }\n        }\n        return initials;\n    };\n    /**\n     * Inserts the footnote at the current selection.\n     *\n     * @returns {void}\n     */\n    Editor.prototype.insertFootnote = function () {\n        if (this.selection.isinFootnote || this.selection.isinEndnote) {\n            return;\n        }\n        this.isFootNoteInsert = true;\n        this.isFootNote = true;\n        var footnote = new FootnoteElementBox();\n        footnote.characterFormat.baselineAlignment = 'Superscript';\n        footnote.footnoteType = 'Footnote';\n        footnote.text = 's';\n        var paragraph = new ParagraphWidget();\n        var lineWidget = new LineWidget(paragraph);\n        var text = new FootnoteEndnoteMarkerElementBox();\n        paragraph.paragraphFormat.afterSpacing = 0;\n        text.characterFormat.baselineAlignment = 'Superscript';\n        text.line = lineWidget;\n        text.text = '?';\n        lineWidget.children.push(text);\n        var text1 = new TextElementBox();\n        text1.text = ' ';\n        text1.line = lineWidget;\n        lineWidget.children.push(text1);\n        paragraph.childWidgets.push(lineWidget);\n        footnote.bodyWidget.childWidgets.push(paragraph);\n        if (!this.selection.isEmpty) {\n            this.selection.handleRightKey();\n        }\n        this.initInsertInline(footnote);\n        // this.documentHelper.layout.isLayoutWhole = true;\n        // this.layoutWholeDocument();\n        // this.documentHelper.layout.isLayoutWhole = false;\n        var footPara;\n        if (footnote.paragraph.bodyWidget.page.footnoteWidget) {\n            for (var i = 0; i < footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                if ((footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnote) {\n                    footPara = footnote.paragraph.bodyWidget.page.footnoteWidget.bodyWidgets[i].childWidgets[0];\n                }\n            }\n        }\n        this.selection.start.setPositionForLineWidget(footPara.childWidgets[0], text1.line.getOffset(text1, footnote.text.length));\n        this.selection.end.setPositionInternal(this.selection.start);\n        // this.selection.fireSelectionChanged(true);\n        this.updateFootNoteIndex();\n        this.reLayout(this.selection, false);\n        this.separator('footnote');\n        this.continuationSeparator('footnote');\n        this.isFootNote = false;\n        this.isFootNoteInsert = false;\n    };\n    Editor.prototype.updateFootnoteCollection = function (footnote) {\n        if (this.documentHelper.footnoteCollection.indexOf(footnote) === -1) {\n            var isInserted = false;\n            if (this.documentHelper.footnoteCollection.length > 0) {\n                var currentStart = this.selection.getElementPosition(footnote).startPosition;\n                for (var i = 0; i < this.documentHelper.footnoteCollection.length; i++) {\n                    var paraIndex = this.selection.getElementPosition(this.documentHelper.footnoteCollection[i]).startPosition;\n                    if (currentStart.isExistBefore(paraIndex)) {\n                        isInserted = true;\n                        this.documentHelper.footnoteCollection.splice(i, 0, footnote);\n                        break;\n                    }\n                }\n            }\n            if (!isInserted) {\n                this.documentHelper.footnoteCollection.push(footnote);\n            }\n            // this.viewer.updateScrollBars();\n        }\n    };\n    // Footnote implementation ends\n    /**\n     * Inserts the endnote at the current selection\n     *\n     * @returns {void}\n     */\n    Editor.prototype.insertEndnote = function () {\n        if (this.selection.isinFootnote || this.selection.isinEndnote) {\n            return;\n        }\n        this.documentHelper.layout.isEndnoteContentChanged = true;\n        var endnote = new FootnoteElementBox();\n        endnote.characterFormat.baselineAlignment = 'Superscript';\n        endnote.footnoteType = 'Endnote';\n        endnote.text = 's';\n        var paragraph = new ParagraphWidget();\n        var lineWidget = new LineWidget(paragraph);\n        var footText = new FootnoteEndnoteMarkerElementBox();\n        paragraph.paragraphFormat.afterSpacing = 0;\n        footText.characterFormat.baselineAlignment = 'Superscript';\n        footText.line = lineWidget;\n        footText.text = '?';\n        lineWidget.children.push(footText);\n        var followText = new TextElementBox();\n        followText.text = ' ';\n        followText.line = lineWidget;\n        lineWidget.children.push(followText);\n        paragraph.childWidgets.push(lineWidget);\n        endnote.bodyWidget.childWidgets.push(paragraph);\n        if (!this.selection.isEmpty) {\n            this.selection.handleRightKey();\n        }\n        this.initInsertInline(endnote);\n        // this.documentHelper.layout.isLayoutWhole = true;\n        // this.layoutWholeDocument();\n        // this.documentHelper.layout.isLayoutWhole = false;\n        var lastpage = this.documentHelper.pages.length;\n        var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n        var footPara;\n        if (bodyWidget.page.endnoteWidget) {\n            for (var i = 0; i < bodyWidget.page.endnoteWidget.bodyWidgets.length; i++) {\n                if ((bodyWidget.page.endnoteWidget.bodyWidgets[i]).footNoteReference === endnote) {\n                    footPara = bodyWidget.page.endnoteWidget.bodyWidgets[i].childWidgets[0];\n                }\n            }\n        }\n        this.selection.start.setPositionForLineWidget(footPara.childWidgets[0], footText.line.getOffset(followText, endnote.text.length));\n        this.selection.end.setPositionInternal(this.selection.start);\n        this.updateEndNoteIndex();\n        this.documentHelper.layout.isLayoutWhole = true;\n        this.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.layoutWholeDocument();\n        this.isSkipOperationsBuild = false;\n        this.documentHelper.layout.isLayoutWhole = false;\n        this.reLayout(this.selection, false);\n        this.owner.documentHelper.blockToShift = undefined;\n        this.separator('endnote');\n        this.continuationSeparator('endnote');\n        this.documentHelper.layout.isEndnoteContentChanged = false;\n    };\n    Editor.prototype.updateEndnoteCollection = function (endnote) {\n        if (this.documentHelper.endnoteCollection.indexOf(endnote) === -1) {\n            var isInserted = false;\n            if (this.documentHelper.endnoteCollection.length > 0) {\n                var currentStart = this.selection.getElementPosition(endnote).startPosition;\n                for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n                    var paraIndex = this.selection.getElementPosition(this.documentHelper.endnoteCollection[i]).startPosition;\n                    if (currentStart.isExistBefore(paraIndex)) {\n                        isInserted = true;\n                        this.documentHelper.endnoteCollection.splice(i, 0, endnote);\n                        break;\n                    }\n                }\n            }\n            if (!isInserted) {\n                this.documentHelper.endnoteCollection.push(endnote);\n            }\n            var lastpage = this.documentHelper.pages.length;\n            if (this.documentHelper.endnoteCollection.length > 0) {\n                var positionchanged = false;\n                // this.documentHelper.layout.isFootnoteContentChanged = true;\n                var foot = void 0;\n                var endnoteWidget = void 0;\n                var footIndex = this.documentHelper.endnoteCollection.indexOf(endnote);\n                var insertIndex = 1;\n                var height = 0;\n                var isCreated = void 0;\n                var bodyWidget = this.documentHelper.pages[lastpage - 1].bodyWidgets[0];\n                if (bodyWidget.page.endnoteWidget) {\n                    for (var j = 0; j < bodyWidget.page.endnoteWidget.bodyWidgets.length; j++) {\n                        var currentIndex = this.documentHelper.endnoteCollection.indexOf((bodyWidget.page.endnoteWidget.bodyWidgets[j]).footNoteReference);\n                        if (currentIndex > footIndex) {\n                            if (currentIndex - footIndex === 1) {\n                                insertIndex = j;\n                                positionchanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                // endnote.isLayout = true;\n                foot = endnote; //this.documentHelper.endnoteCollection[i];\n                if (bodyWidget.page.endnoteWidget instanceof FootNoteWidget && bodyWidget.page.endnoteWidget.footNoteType === 'Endnote') {\n                    endnoteWidget = bodyWidget.page.endnoteWidget;\n                }\n                else {\n                    isCreated = true;\n                    endnoteWidget = new FootNoteWidget();\n                    endnoteWidget.footNoteType = 'Endnote';\n                    endnoteWidget.page = bodyWidget.page;\n                    var newParagraph = new ParagraphWidget();\n                    newParagraph.characterFormat = new WCharacterFormat();\n                    newParagraph.paragraphFormat = new WParagraphFormat();\n                    newParagraph.index = 0;\n                    var lineWidget = new LineWidget(newParagraph);\n                    newParagraph.childWidgets.push(lineWidget);\n                    //endnoteWidget.childWidgets.push(newParagraph);\n                    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + 18);\n                }\n                var body = foot.bodyWidget;\n                for (var j = 0; j < foot.bodyWidget.childWidgets.length; j++) {\n                    var block = foot.bodyWidget.childWidgets[j];\n                    //body.childWidgets.push(block);\n                    if (this.documentHelper.layout.isLayoutWhole) {\n                        block.containerWidget = undefined;\n                    }\n                    else {\n                        block.containerWidget = body;\n                        body.page = bodyWidget.page;\n                        body.sectionFormat = endnoteWidget.sectionFormat;\n                        block.containerWidget.containerWidget = endnoteWidget;\n                    }\n                    // endnoteWidget.bodyWidgets[j].childWidgets.push(block);\n                    if (positionchanged) {\n                        endnoteWidget.bodyWidgets.splice(insertIndex, 0, body);\n                    }\n                    else {\n                        endnoteWidget.bodyWidgets.push(body);\n                    }\n                }\n                insertIndex++;\n                if (isCreated) {\n                    bodyWidget.page.endnoteWidget = endnoteWidget;\n                }\n                // endNote.containerWidget = bodyWidget;\n                endnoteWidget.height += height;\n                //         }\n                // this.documentHelper.layout.layoutfootNote(endnoteWidget);\n                //this.layoutfootNote(endNote);\n            }\n            // this.viewer.updateScrollBars();\n        }\n    };\n    Editor.prototype.updateEndNoteIndex = function () {\n        var endNoteCollec = this.documentHelper.endnoteCollection;\n        for (var i = 0; i < endNoteCollec.length; i++) {\n            var text = this.documentHelper.layout.getFootEndNote(endNoteCollec[i].paragraph.bodyWidget.sectionFormat.endnoteNumberFormat, i + 1);\n            if (text != '') {\n                endNoteCollec[i].text = text;\n                var marker = endNoteCollec[i].bodyWidget.childWidgets[0].childWidgets[0].children[0];\n                if (!isNullOrUndefined(marker)) {\n                    if (marker instanceof FootnoteEndnoteMarkerElementBox || HelperMethods.checkTextFormat(marker.text)) {\n                        marker.text = text;\n                        marker.width = endNoteCollec[i].bodyWidget.footNoteReference.width;\n                    }\n                }\n            }\n        }\n    };\n    Editor.prototype.separator = function (type) {\n        //let block = new page_1.block;\n        var paragraph = new ParagraphWidget();\n        var lineWidget = new LineWidget(paragraph);\n        var text = new TextElementBox();\n        text.characterFormat.fontColor = '#00000000';\n        text.line = lineWidget;\n        text.text = String.fromCharCode(3);\n        lineWidget.children.push(text);\n        paragraph.childWidgets.push(lineWidget);\n        if (type === 'footnote' && this.documentHelper.footnotes.separator.length < 1) {\n            this.documentHelper.footnotes.separator.push(paragraph);\n        }\n        else if (type === 'endnote' && this.documentHelper.endnotes.separator.length < 1) {\n            this.documentHelper.endnotes.separator.push(paragraph);\n        }\n    };\n    Editor.prototype.continuationSeparator = function (type) {\n        //var block = new page_1.block;\n        var paragraph = new ParagraphWidget();\n        var lineWidget = new LineWidget(paragraph);\n        var text = new TextElementBox();\n        text.characterFormat.fontColor = '#00000000';\n        text.line = lineWidget;\n        text.text = String.fromCharCode(4);\n        lineWidget.children.push(text);\n        paragraph.childWidgets.push(lineWidget);\n        if (type === 'footnote' && this.documentHelper.footnotes.continuationSeparator.length < 1) {\n            this.documentHelper.footnotes.continuationSeparator.push(paragraph);\n        }\n        else if (type === 'endnote' && this.documentHelper.endnotes.continuationSeparator.length < 1) {\n            this.documentHelper.endnotes.continuationSeparator.push(paragraph);\n        }\n    };\n    Editor.prototype.updateFootNoteIndex = function () {\n        var footNoteCollec = this.documentHelper.footnoteCollection;\n        for (var i = 0; i < footNoteCollec.length; i++) {\n            var text = this.documentHelper.layout.getFootEndNote(footNoteCollec[i].paragraph.bodyWidget.sectionFormat.footNoteNumberFormat, i + 1);\n            if (text != '') {\n                footNoteCollec[i].text = text;\n                var marker = footNoteCollec[i].bodyWidget.childWidgets[0].childWidgets[0].children[0];\n                if (!isNullOrUndefined(marker) && marker instanceof FootnoteEndnoteMarkerElementBox) {\n                    marker.text = text;\n                    marker.width = footNoteCollec[i].bodyWidget.footNoteReference.width;\n                }\n            }\n        }\n    };\n    Editor.prototype.setCharFormatForCollaborativeEditing = function (insertFormat) {\n        if (!isNullOrUndefined(this.editorHistory) && !isNullOrUndefined(this.editorHistory.currentBaseHistoryInfo) && this.owner.enableCollaborativeEditing) {\n            var characterFormat = {};\n            HelperMethods.writeCharacterFormat(characterFormat, true, insertFormat, undefined, true);\n            this.editorHistory.currentBaseHistoryInfo.type = \"CharacterFormat\";\n            this.editorHistory.currentBaseHistoryInfo.format = JSON.stringify(characterFormat);\n        }\n    };\n    /**\n    * @private\n    */\n    Editor.prototype.clear = function () {\n        if (this.pageRefFields) {\n            this.pageRefFields = {};\n        }\n    };\n    return Editor;\n}());\nexport { Editor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}