{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/PdfGraphFunc.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport axios from \"axios\";\nimport { Fragment } from \"react\";\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\n\nfunction PdfGraphFunc(props) {\n  const [obj, setObj] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const errorText = \"\";\n  useEffect(() => {\n    if (state.graphData.length !== 0) {\n      (async () => {\n        const result = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n          headers: {\n            \"x-access-token\": state.auth && state.auth.authToken\n          }\n        });\n        const allgraphs = result.data;\n        let currentFileName = state.currentFile && state.currentFile.name ? state.currentFile.name : '';\n        allgraphs && allgraphs.graphdata && allgraphs.graphdata.length && allgraphs.graphdata.filter(x => {\n          if (x.fileName == currentFileName) {\n            delete x.fileName;\n            setObj(x);\n            return x;\n          }\n        });\n\n        if (allgraphs && allgraphs.length > 0) {\n          dispatch({\n            type: \"FETCH_FILE_HIGHLIGHTS\",\n            payload: allgraphs.highlights\n          });\n        }\n      })();\n    }\n  }, [state]);\n  const myConfig = {\n    automaticRearrangeAfterDropNode: true,\n    collapsible: false,\n    directed: false,\n    focusAnimationDuration: 10,\n    focusZoom: 1,\n    freezeAllDragEvents: false,\n    height: 710,\n    highlightDegree: 0.1,\n    highlightOpacity: 1,\n    linkHighlightBehavior: true,\n    maxZoom: 8,\n    minZoom: 0.1,\n    nodeHighlightBehavior: true,\n    panAndZoom: false,\n    staticGraph: false,\n    staticGraphWithDragAndDrop: false,\n    width: 500,\n    d3: {\n      alphaTarget: 1.15,\n      gravity: 112,\n      linkLength: 1,\n      linkStrength: 2,\n      disableLinkForce: false\n    },\n    node: {\n      color: \"#d3d3d3\",\n      fontColor: \"#d3d3d3\",\n      fontSize: 12,\n      fontWeight: \"normal\",\n      highlightColor: \"lightgreen\",\n      highlightFontSize: 17,\n      highlightFontWeight: \"Bold\",\n      highlightStrokeColor: \"SAME\",\n      highlightStrokeWidth: \"SAME\",\n      labelProperty: \"id\",\n      mouseCursor: \"pointer\",\n      opacity: 1,\n      renderLabel: true,\n      size: 200,\n      strokeColor: \"none\",\n      strokeWidth: 1.5,\n      svg: \"\",\n      symbolType: \"circle\"\n    },\n    link: {\n      color: \"#d3d3d3\",\n      fontColor: \"black\",\n      fontSize: 8,\n      fontWeight: \"normal\",\n      highlightColor: \"SAME\",\n      highlightFontSize: 8,\n      highlightFontWeight: \"normal\",\n      labelProperty: \"label\",\n      mouseCursor: \"pointer\",\n      opacity: 1,\n      renderLabel: false,\n      semanticStrokeWidth: false,\n      strokeWidth: 1.5,\n      markerHeight: 6,\n      markerWidth: 6,\n      strokeDasharray: 0,\n      strokeDashoffset: 0,\n      strokeLinecap: \"butt\"\n    }\n  };\n\n  const onClickGraph = function (event) {//  window.alert('Clicked the graph background');\n  };\n\n  const onClickNode = function (nodeId, node) {// window.alert(`Clicked node ${nodeId} in position (${node.x}, ${node.y})`);\n  };\n\n  const onDoubleClickNode = function (nodeId, node) {\n    //  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n    const nodeData = state.nodesData[nodeId];\n\n    if (nodeData) {\n      window.open(nodeData[\"frontend_url\"], \"_blank\");\n    }\n  };\n\n  const onRightClickNode = function (event, nodeId, node) {//  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n  };\n\n  const onMouseOverNode = function (nodeId, node) {\n    //  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n    const nodeData = state.nodesData[node.id];\n\n    if (nodeData) {\n      dispatch({\n        type: \"SET_NODE_DATA\",\n        payload: nodeData\n      });\n      let nodes = state.graphData.nodes.map(n => {\n        if (n.id === node.id) {\n          return { ...n,\n            fontSize: 16\n          };\n        } else {\n          return { ...n,\n            fontSize: 8\n          };\n        }\n      });\n      dispatch({\n        type: \"SET_GRAPH_DATA\",\n        payload: { ...state.graphData,\n          nodes\n        }\n      });\n    }\n  };\n\n  const onMouseOutNode = function (nodeId, node) {//  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n  };\n\n  const onClickLink = function (source, target) {//  window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {//  window.alert('Right clicked link between ${source} and ${target}');\n  };\n\n  const onMouseOverLink = function (source, target) {//  window.alert(`Mouse over in link between ${source} and ${target}`);\n  };\n\n  const onMouseOutLink = function (source, target) {//  window.alert(`Mouse out link between ${source} and ${target}`);\n  };\n\n  const onNodePositionChange = function (nodeId, x, y) {//  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n  };\n\n  const onZoomChange = function (previousZoom, newZoom) {//  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 3\n    }\n  }, errorText === \"\" && !Array.isArray(obj) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, obj && /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\",\n    data: obj,\n    key: Math.round(new Date().getTime() + Math.random()),\n    config: myConfig,\n    onClickGraph: onClickGraph,\n    onClickNode: onClickNode,\n    passive: true,\n    onDoubleClickNode: onDoubleClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    onMouseOverNode: onMouseOverNode,\n    onMouseOutNode: onMouseOutNode,\n    onMouseOverLink: onMouseOverLink,\n    onMouseOutLink: onMouseOutLink,\n    onNodePositionChange: onNodePositionChange,\n    onZoomChange: onZoomChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  })), errorText !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }\n  }, errorText)));\n}\n\nexport default PdfGraphFunc;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/PdfGraphFunc.js"],"names":["React","useEffect","useState","useContext","Graph","axios","Fragment","UserContext","BASE_URL_DEV","PdfGraphFunc","props","obj","setObj","state","dispatch","errorText","graphData","length","result","headers","auth","authToken","allgraphs","data","currentFileName","currentFile","name","graphdata","filter","x","fileName","type","payload","highlights","myConfig","automaticRearrangeAfterDropNode","collapsible","directed","focusAnimationDuration","focusZoom","freezeAllDragEvents","height","highlightDegree","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","staticGraphWithDragAndDrop","width","d3","alphaTarget","gravity","linkLength","linkStrength","disableLinkForce","node","color","fontColor","fontSize","fontWeight","highlightColor","highlightFontSize","highlightFontWeight","highlightStrokeColor","highlightStrokeWidth","labelProperty","mouseCursor","opacity","renderLabel","size","strokeColor","strokeWidth","svg","symbolType","link","semanticStrokeWidth","markerHeight","markerWidth","strokeDasharray","strokeDashoffset","strokeLinecap","onClickGraph","event","onClickNode","nodeId","onDoubleClickNode","nodeData","nodesData","window","open","onRightClickNode","onMouseOverNode","id","nodes","map","n","onMouseOutNode","onClickLink","source","target","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","y","onZoomChange","previousZoom","newZoom","Array","isArray","Math","round","Date","getTime","random"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport axios from \"axios\";\nimport { Fragment } from \"react\";\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\n\nfunction PdfGraphFunc(props) {\n\tconst [obj, setObj] = useState([]);\n\tconst { state, dispatch } = useContext(UserContext);\n\tconst errorText = \"\";\n\tuseEffect(() => {\n\t\tif (state.graphData.length !== 0) {\n\t\t\t(async () => {\n\t\t\t\tconst result = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"x-access-token\": state.auth && state.auth.authToken,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst allgraphs = result.data;\n\n\t\t\t\tlet currentFileName = state.currentFile && state.currentFile.name ? state.currentFile.name : '';\n\t\t\t\tallgraphs && allgraphs.graphdata && allgraphs.graphdata.length && allgraphs.graphdata.filter(x => {\n\n\t\t\t\t\tif (x.fileName == currentFileName) {\n\t\t\t\t\t\tdelete x.fileName\n\t\t\t\t\t\tsetObj(x);\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\tif (allgraphs && allgraphs.length > 0) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"FETCH_FILE_HIGHLIGHTS\",\n\t\t\t\t\t\tpayload: allgraphs.highlights,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}, [state]);\n\n\tconst myConfig = {\n\t\tautomaticRearrangeAfterDropNode: true,\n\t\tcollapsible: false,\n\t\tdirected: false,\n\t\tfocusAnimationDuration: 10,\n\t\tfocusZoom: 1,\n\t\tfreezeAllDragEvents: false,\n\t\theight: 710,\n\t\thighlightDegree: 0.1,\n\t\thighlightOpacity: 1,\n\t\tlinkHighlightBehavior: true,\n\t\tmaxZoom: 8,\n\t\tminZoom: 0.1,\n\t\tnodeHighlightBehavior: true,\n\t\tpanAndZoom: false,\n\t\tstaticGraph: false,\n\t\tstaticGraphWithDragAndDrop: false,\n\t\twidth: 500,\n\t\td3: {\n\t\t\talphaTarget: 1.15,\n\t\t\tgravity: 112,\n\t\t\tlinkLength: 1,\n\t\t\tlinkStrength: 2,\n\t\t\tdisableLinkForce: false,\n\t\t},\n\t\tnode: {\n\t\t\tcolor: \"#d3d3d3\",\n\t\t\tfontColor: \"#d3d3d3\",\n\t\t\tfontSize: 12,\n\t\t\tfontWeight: \"normal\",\n\t\t\thighlightColor: \"lightgreen\",\n\t\t\thighlightFontSize: 17,\n\t\t\thighlightFontWeight: \"Bold\",\n\t\t\thighlightStrokeColor: \"SAME\",\n\t\t\thighlightStrokeWidth: \"SAME\",\n\t\t\tlabelProperty: \"id\",\n\t\t\tmouseCursor: \"pointer\",\n\t\t\topacity: 1,\n\t\t\trenderLabel: true,\n\t\t\tsize: 200,\n\t\t\tstrokeColor: \"none\",\n\t\t\tstrokeWidth: 1.5,\n\t\t\tsvg: \"\",\n\t\t\tsymbolType: \"circle\",\n\t\t},\n\t\tlink: {\n\t\t\tcolor: \"#d3d3d3\",\n\t\t\tfontColor: \"black\",\n\t\t\tfontSize: 8,\n\t\t\tfontWeight: \"normal\",\n\t\t\thighlightColor: \"SAME\",\n\t\t\thighlightFontSize: 8,\n\t\t\thighlightFontWeight: \"normal\",\n\t\t\tlabelProperty: \"label\",\n\t\t\tmouseCursor: \"pointer\",\n\t\t\topacity: 1,\n\t\t\trenderLabel: false,\n\t\t\tsemanticStrokeWidth: false,\n\t\t\tstrokeWidth: 1.5,\n\t\t\tmarkerHeight: 6,\n\t\t\tmarkerWidth: 6,\n\t\t\tstrokeDasharray: 0,\n\t\t\tstrokeDashoffset: 0,\n\t\t\tstrokeLinecap: \"butt\",\n\t\t},\n\t};\n\n\tconst onClickGraph = function (event) {\n\t\t//  window.alert('Clicked the graph background');\n\t};\n\n\tconst onClickNode = function (nodeId, node) {\n\t\t// window.alert(`Clicked node ${nodeId} in position (${node.x}, ${node.y})`);\n\t};\n\n\tconst onDoubleClickNode = function (nodeId, node) {\n\t\t//  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n\t\tconst nodeData = state.nodesData[nodeId];\n\t\tif (nodeData) {\n\t\t\twindow.open(nodeData[\"frontend_url\"], \"_blank\");\n\t\t}\n\t};\n\n\tconst onRightClickNode = function (event, nodeId, node) {\n\t\t//  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n\t};\n\n\tconst onMouseOverNode = function (nodeId, node) {\n\t\t//  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n\t\tconst nodeData = state.nodesData[node.id];\n\t\tif (nodeData) {\n\t\t\tdispatch({ type: \"SET_NODE_DATA\", payload: nodeData });\n\t\t\tlet nodes = state.graphData.nodes.map((n) => {\n\t\t\t\tif (n.id === node.id) {\n\t\t\t\t\treturn { ...n, fontSize: 16 };\n\t\t\t\t} else {\n\t\t\t\t\treturn { ...n, fontSize: 8 };\n\t\t\t\t}\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: \"SET_GRAPH_DATA\",\n\t\t\t\tpayload: { ...state.graphData, nodes },\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onMouseOutNode = function (nodeId, node) {\n\t\t//  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n\t};\n\n\tconst onClickLink = function (source, target) {\n\t\t//  window.alert(`Clicked link between ${source} and ${target}`);\n\t};\n\n\tconst onRightClickLink = function (event, source, target) {\n\t\t//  window.alert('Right clicked link between ${source} and ${target}');\n\t};\n\n\tconst onMouseOverLink = function (source, target) {\n\t\t//  window.alert(`Mouse over in link between ${source} and ${target}`);\n\t};\n\n\tconst onMouseOutLink = function (source, target) {\n\t\t//  window.alert(`Mouse out link between ${source} and ${target}`);\n\t};\n\n\tconst onNodePositionChange = function (nodeId, x, y) {\n\t\t//  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n\t};\n\n\tconst onZoomChange = function (previousZoom, newZoom) {\n\t\t//  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{errorText === \"\" && !Array.isArray(obj) && (\n\t\t\t\t<div className=\"graph__container\">\n\t\t\t\t\t{obj && (\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\tid=\"graph-id\"\n\t\t\t\t\t\t\tdata={obj}\n\t\t\t\t\t\t\tkey={Math.round((new Date()).getTime() + Math.random())}\n\t\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\t\tonClickGraph={onClickGraph}\n\t\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\t\tpassive={true}\n\t\t\t\t\t\t\tonDoubleClickNode={onDoubleClickNode}\n\t\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t\t\tonMouseOverNode={onMouseOverNode}\n\t\t\t\t\t\t\tonMouseOutNode={onMouseOutNode}\n\t\t\t\t\t\t\tonMouseOverLink={onMouseOverLink}\n\t\t\t\t\t\t\tonMouseOutLink={onMouseOutLink}\n\t\t\t\t\t\t\tonNodePositionChange={onNodePositionChange}\n\t\t\t\t\t\t\tonZoomChange={onZoomChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{errorText !== \"\" && (\n\t\t\t\t<div className=\"error_text\">\n\t\t\t\t\t<p>{errorText}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n}\n\nexport default PdfGraphFunc;\n"]},"metadata":{},"sourceType":"module"}