{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\nimport { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `ColumnSeries` Module used to render the column series.\n */\nvar ColumnSeries = /** @class */function (_super) {\n  __extends(ColumnSeries, _super);\n  function ColumnSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ColumnSeries.prototype.render = function (series) {\n    var sideBySideInfo = this.getSideBySideInfo(series);\n    var origin = Math.max(series.yAxis.visibleRange.min, 0);\n    var argsData;\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var pointColumn = _a[_i];\n      pointColumn.symbolLocations = [];\n      pointColumn.regions = [];\n      if (pointColumn.visible && withInRange(series.points[pointColumn.index - 1], pointColumn, series.points[pointColumn.index + 1], series)) {\n        this.rect = this.getRectangle(pointColumn.xValue + sideBySideInfo.start, pointColumn.yValue, pointColumn.xValue + sideBySideInfo.end, origin, series);\n        this.rect.width = series.columnWidthInPixel ? series.columnWidthInPixel - (series.chart.enableSideBySidePlacement ? series.columnWidthInPixel * series.columnSpacing : 0) : this.rect.width;\n        this.rect.x = series.columnWidthInPixel ? this.rect.x - (series.columnWidthInPixel / 2 * series.rectCount - series.columnWidthInPixel * series.index) : this.rect.x;\n        var color = series.category === 'Indicator' ? pointColumn.color : series.interior;\n        argsData = this.triggerEvent(series, pointColumn, color, {\n          width: series.border.width,\n          color: series.border.color\n        });\n        if (!argsData.cancel) {\n          this.updateSymbolLocation(pointColumn, this.rect, series);\n          this.drawRectangle(series, pointColumn, this.rect, argsData);\n          if (series.columnFacet === 'Cylinder') {\n            var cylinderSeriesOption = {\n              'isColumn': true,\n              'stacking': false,\n              'isLastSeries': true\n            };\n            this.drawCylinder(this.options, this.element, cylinderSeriesOption, this.rect, series);\n          }\n        }\n      }\n    }\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n  ColumnSeries.prototype.doAnimation = function (series) {\n    this.animate(series);\n  };\n  /**\n   * Get module name.\n   */\n  ColumnSeries.prototype.getModuleName = function () {\n    return 'ColumnSeries';\n    /**\n     * return the module name\n     */\n  };\n  /**\n   * To destroy the column series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnSeries.prototype.destroy = function () {\n    /**\n     * Destroy method performed here\n     */\n  };\n  return ColumnSeries;\n}(ColumnBase);\nexport { ColumnSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","withInRange","ColumnBase","ColumnSeries","_super","apply","arguments","render","series","sideBySideInfo","getSideBySideInfo","origin","Math","max","yAxis","visibleRange","min","argsData","_i","_a","points","length","pointColumn","symbolLocations","regions","visible","index","rect","getRectangle","xValue","start","yValue","end","width","columnWidthInPixel","chart","enableSideBySidePlacement","columnSpacing","x","rectCount","color","category","interior","triggerEvent","border","cancel","updateSymbolLocation","drawRectangle","columnFacet","cylinderSeriesOption","drawCylinder","options","element","renderMarker","doAnimation","animate","getModuleName","destroy"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-charts/src/chart/series/column-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\nimport { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `ColumnSeries` Module used to render the column series.\n */\nvar ColumnSeries = /** @class */ (function (_super) {\n    __extends(ColumnSeries, _super);\n    function ColumnSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnSeries.prototype.render = function (series) {\n        var sideBySideInfo = this.getSideBySideInfo(series);\n        var origin = Math.max(series.yAxis.visibleRange.min, 0);\n        var argsData;\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var pointColumn = _a[_i];\n            pointColumn.symbolLocations = [];\n            pointColumn.regions = [];\n            if (pointColumn.visible && withInRange(series.points[pointColumn.index - 1], pointColumn, series.points[pointColumn.index + 1], series)) {\n                this.rect = this.getRectangle(pointColumn.xValue + sideBySideInfo.start, pointColumn.yValue, pointColumn.xValue + sideBySideInfo.end, origin, series);\n                this.rect.width = series.columnWidthInPixel ? (series.columnWidthInPixel - (series.chart.enableSideBySidePlacement ? series.columnWidthInPixel * series.columnSpacing : 0)) : this.rect.width;\n                this.rect.x = series.columnWidthInPixel ? this.rect.x - (((series.columnWidthInPixel / 2) * series.rectCount) -\n                    (series.columnWidthInPixel * series.index)) : this.rect.x;\n                var color = series.category === 'Indicator' ? pointColumn.color : series.interior;\n                argsData = this.triggerEvent(series, pointColumn, color, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(pointColumn, this.rect, series);\n                    this.drawRectangle(series, pointColumn, this.rect, argsData);\n                    if (series.columnFacet === 'Cylinder') {\n                        var cylinderSeriesOption = {\n                            'isColumn': true,\n                            'stacking': false,\n                            'isLastSeries': true\n                        };\n                        this.drawCylinder(this.options, this.element, cylinderSeriesOption, this.rect, series);\n                    }\n                }\n            }\n        }\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    ColumnSeries.prototype.doAnimation = function (series) {\n        this.animate(series);\n    };\n    /**\n     * Get module name.\n     */\n    ColumnSeries.prototype.getModuleName = function () {\n        return 'ColumnSeries';\n        /**\n         * return the module name\n         */\n    };\n    /**\n     * To destroy the column series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnSeries.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return ColumnSeries;\n}(ColumnBase));\nexport { ColumnSeries };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}