{"ast":null,"code":"'use strict';\n\nmodule.exports = detab;\n\nvar repeat = require('repeat-string');\n\nvar search = /[\\t\\n\\r]/g; // Replace tabs with spaces, being smart about which column the tab is at and\n// which size should be used.\n\nfunction detab(value, size) {\n  var tabSize = size || 4;\n  var result = [];\n  var start = 0;\n  var index = 0;\n  var column = -1;\n  var add;\n  var match;\n  var end;\n\n  if (typeof value !== 'string') {\n    throw new Error('detab expected string');\n  }\n\n  while (index < value.length) {\n    search.lastIndex = index;\n    match = search.exec(value);\n    end = match ? match.index : value.length;\n\n    if (value.charCodeAt(end) === 9) {\n      add = tabSize - (column + end - index + 1) % tabSize;\n      result.push(value.slice(start, end), repeat(' ', add));\n      column += end - index + add;\n      start = end + 1;\n    } else {\n      column = -1;\n    }\n\n    index = end + 1;\n  }\n\n  result.push(value.slice(start));\n  return result.join('');\n}","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/detab/index.js"],"names":["module","exports","detab","repeat","require","search","value","size","tabSize","result","start","index","column","add","match","end","Error","length","lastIndex","exec","charCodeAt","push","slice","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIC,MAAM,GAAG,WAAb,C,CAEA;AACA;;AACA,SAASH,KAAT,CAAeI,KAAf,EAAsBC,IAAtB,EAA4B;AAC1B,MAAIC,OAAO,GAAGD,IAAI,IAAI,CAAtB;AACA,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAC,CAAd;AACA,MAAIC,GAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,GAAJ;;AAEA,MAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,SAAOL,KAAK,GAAGL,KAAK,CAACW,MAArB,EAA6B;AAC3BZ,IAAAA,MAAM,CAACa,SAAP,GAAmBP,KAAnB;AACAG,IAAAA,KAAK,GAAGT,MAAM,CAACc,IAAP,CAAYb,KAAZ,CAAR;AACAS,IAAAA,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACH,KAAT,GAAiBL,KAAK,CAACW,MAAlC;;AAEA,QAAIX,KAAK,CAACc,UAAN,CAAiBL,GAAjB,MAA0B,CAA9B,EAAiC;AAC/BF,MAAAA,GAAG,GAAGL,OAAO,GAAI,CAACI,MAAM,GAAGG,GAAT,GAAeJ,KAAf,GAAuB,CAAxB,IAA6BH,OAA9C;AACAC,MAAAA,MAAM,CAACY,IAAP,CAAYf,KAAK,CAACgB,KAAN,CAAYZ,KAAZ,EAAmBK,GAAnB,CAAZ,EAAqCZ,MAAM,CAAC,GAAD,EAAMU,GAAN,CAA3C;AACAD,MAAAA,MAAM,IAAIG,GAAG,GAAGJ,KAAN,GAAcE,GAAxB;AACAH,MAAAA,KAAK,GAAGK,GAAG,GAAG,CAAd;AACD,KALD,MAKO;AACLH,MAAAA,MAAM,GAAG,CAAC,CAAV;AACD;;AAEDD,IAAAA,KAAK,GAAGI,GAAG,GAAG,CAAd;AACD;;AAEDN,EAAAA,MAAM,CAACY,IAAP,CAAYf,KAAK,CAACgB,KAAN,CAAYZ,KAAZ,CAAZ;AAEA,SAAOD,MAAM,CAACc,IAAP,CAAY,EAAZ,CAAP;AACD","sourcesContent":["'use strict'\n\nmodule.exports = detab\n\nvar repeat = require('repeat-string')\n\nvar search = /[\\t\\n\\r]/g\n\n// Replace tabs with spaces, being smart about which column the tab is at and\n// which size should be used.\nfunction detab(value, size) {\n  var tabSize = size || 4\n  var result = []\n  var start = 0\n  var index = 0\n  var column = -1\n  var add\n  var match\n  var end\n\n  if (typeof value !== 'string') {\n    throw new Error('detab expected string')\n  }\n\n  while (index < value.length) {\n    search.lastIndex = index\n    match = search.exec(value)\n    end = match ? match.index : value.length\n\n    if (value.charCodeAt(end) === 9) {\n      add = tabSize - ((column + end - index + 1) % tabSize)\n      result.push(value.slice(start, end), repeat(' ', add))\n      column += end - index + add\n      start = end + 1\n    } else {\n      column = -1\n    }\n\n    index = end + 1\n  }\n\n  result.push(value.slice(start))\n\n  return result.join('')\n}\n"]},"metadata":{},"sourceType":"script"}