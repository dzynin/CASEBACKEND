{"ast":null,"code":"/* eslint-disable */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { CharacterRangeType, FontScriptType } from '../../base/types';\nimport { HelperMethods, Point, WrapPosition } from '../editor/editor-helper';\nimport { WBorder, WBorders, WCharacterFormat, WParagraphFormat } from '../format/index';\nimport { WListLevel } from '../list/list-level';\nimport { BlockContainer, BlockWidget, BodyWidget, BookmarkElementBox, EditRangeEndElementBox, EditRangeStartElementBox, ElementBox, FieldElementBox, FieldTextElementBox, HeaderFooterWidget, ImageElementBox, LineWidget, ListTextElementBox, Margin, ParagraphWidget, Rect, TabElementBox, TableCellWidget, TableRowWidget, TableWidget, TextElementBox, Widget, CheckBoxFormField, DropDownFormField, ShapeElementBox, TextFrame, ContentControl, FootnoteElementBox, FootNoteWidget, ShapeBase, CommentCharacterElementBox } from './page';\nimport { PageLayoutViewer, WebLayoutViewer } from './viewer';\nimport { TextHelper } from './text-helper';\n// Check box character is rendered smaller when compared to MS Word\n// So, mutiplied the font side by below factor to render check box character large.\nvar CHECK_BOX_FACTOR = 1.35;\n/**\n * @private\n */\nvar Layout = /** @class */function () {\n  function Layout(documentHelper) {\n    /**\n     * @private\n     */\n    this.islayoutFootnote = false;\n    /**\n     * @private\n     */\n    this.isMultiColumnDoc = false;\n    /**\n     * @private\n     */\n    this.allowLayout = true;\n    /**\n     * @private\n     */\n    this.isReplaceAll = false;\n    /**\n     * @private\n     */\n    this.isTextFormat = false;\n    /**\n    * @private\n    */\n    this.isSectionBreakCont = false;\n    /**\n     * @private\n     */\n    this.isReplacingAll = false;\n    /**\n     * @private\n     */\n    this.footHeight = 0;\n    /**\n     * @private\n     */\n    this.existFootnoteHeight = 0;\n    /**\n     * @private\n     */\n    this.isfootMove = false;\n    /**\n     * @private\n     */\n    this.footnoteHeight = 0;\n    /**\n     * @private\n     */\n    this.isTableFootNote = false;\n    /**\n     * @private\n     */\n    this.isRelayout = false;\n    /**\n     * @private\n     */\n    this.isRelayoutneed = false;\n    /**\n     * @private\n     */\n    this.isOverlapFloatTable = false;\n    this.isInitialLoad = true;\n    /**\n      * @private\n      */\n    this.isInsertFormField = false;\n    this.fieldBegin = undefined;\n    this.maxTextHeight = 0;\n    this.maxBaseline = 0;\n    this.maxTextBaseline = 0;\n    this.isFieldCode = false;\n    this.isRtlFieldCode = false;\n    this.isRTLLayout = false;\n    this.currentCell = undefined;\n    this.isFootnoteContentChanged = false;\n    this.isEndnoteContentChanged = false;\n    this.keepWithNext = false;\n    this.is2013Justification = false;\n    this.nextElementToLayout = undefined;\n    this.endNoteHeight = 0;\n    this.isMultiColumnSplit = false;\n    this.isMultiColumnLayout = false;\n    this.skipUpdateContainerWidget = false;\n    this.isIFfield = false;\n    this.isLayoutWhole = false;\n    /**\n     * @private\n     */\n    this.isBidiReLayout = false;\n    /**\n     * @private\n     */\n    this.defaultTabWidthPixel = 48;\n    /**\n     * @private\n     */\n    this.isRelayoutFootnote = false;\n    this.isRelayoutOverlap = false;\n    this.skipRelayoutOverlap = false;\n    this.isWrapText = false;\n    this.isYPositionUpdated = false;\n    this.isXPositionUpdated = false;\n    this.hasFloatingElement = false;\n    this.isFootNoteLayoutStart = false;\n    this.wrapPosition = [];\n    this.shiftedFloatingItemsFromTable = [];\n    this.isDocumentContainsRtl = false;\n    this.layoutedFootnoteElement = [];\n    this.documentHelper = documentHelper;\n  }\n  Layout.prototype.isSameStyle = function (currentParagraph, isAfterSpacing) {\n    var nextOrPrevSibling = undefined;\n    if (isAfterSpacing) {\n      if (currentParagraph.nextWidget instanceof ParagraphWidget) {\n        nextOrPrevSibling = currentParagraph.nextWidget;\n      }\n    } else {\n      if (currentParagraph.previousWidget instanceof ParagraphWidget) {\n        nextOrPrevSibling = currentParagraph.previousWidget;\n      }\n    }\n    if (isNullOrUndefined(nextOrPrevSibling)) {\n      //Need to skip contextual spacing behavior when document is not Word 2013 and paragraph preserved inside the table cell with AllowSpaceOfSameStyleInTable compatiblity options.\n      if (currentParagraph.paragraphFormat.contextualSpacing && (currentParagraph.isInsideTable ? !this.documentHelper.allowSpaceOfSameStyleInTable || this.documentHelper.compatibilityMode === 'Word2013' : false)) {\n        if (currentParagraph.index === 0) {\n          nextOrPrevSibling = this.updateFirstParagraphSpacingBasedOnContextualSpacing(currentParagraph, isAfterSpacing);\n        } else if (currentParagraph.index === currentParagraph.associatedCell.childWidgets.length - 1) {\n          nextOrPrevSibling = this.updateLastParagraphSpacingBasedOnContextualSpacing(currentParagraph);\n          if (nextOrPrevSibling === currentParagraph) {\n            return true;\n          }\n        }\n      }\n      if (isNullOrUndefined(nextOrPrevSibling)) {\n        return false;\n      }\n    }\n    if (nextOrPrevSibling instanceof ParagraphWidget && currentParagraph.paragraphFormat.baseStyle === nextOrPrevSibling.paragraphFormat.baseStyle && (currentParagraph.isInsideTable ? !this.documentHelper.allowSpaceOfSameStyleInTable : true)) {\n      if (currentParagraph.paragraphFormat.listFormat.listId >= 0 && nextOrPrevSibling.paragraphFormat.listFormat.listId >= 0) {\n        if (!currentParagraph.paragraphFormat.contextualSpacing) {\n          if (isAfterSpacing && currentParagraph.paragraphFormat.spaceAfterAuto) {\n            return true;\n          } else if (!isAfterSpacing && currentParagraph.paragraphFormat.spaceBeforeAuto) {\n            return true;\n          }\n        }\n      }\n      return currentParagraph.paragraphFormat.contextualSpacing;\n    }\n    return false;\n  };\n  Layout.prototype.updateFirstParagraphSpacingBasedOnContextualSpacing = function (paragraph, isAfterSpacing) {\n    var ownerCell = paragraph.associatedCell;\n    var ownerRow = ownerCell.ownerRow;\n    var ownerTable = ownerRow.ownerTable;\n    var nextOrPrevSibling;\n    if (isAfterSpacing) {\n      nextOrPrevSibling = isNullOrUndefined(paragraph.nextRenderedWidget) ? !isNullOrUndefined(ownerCell.nextRenderedWidget) ? ownerCell.nextRenderedWidget.firstChild : undefined : paragraph.nextRenderedWidget;\n    } else {\n      nextOrPrevSibling = isNullOrUndefined(paragraph.previousRenderedWidget) ? !isNullOrUndefined(ownerCell.previousRenderedWidget) ? ownerCell.previousRenderedWidget.firstChild : undefined : paragraph.previousRenderedWidget;\n    }\n    if (ownerCell.index === 0 && paragraph.index === 0) {\n      if (ownerRow.index === 0) {\n        if (ownerTable.isInsideTable && ownerTable.index == 0) {\n          nextOrPrevSibling = this.checkOwnerTablePrevItem(ownerTable, paragraph);\n        } else {\n          //If paragraph is preserved in first row first cell means, need to check owner table previous sibling.\n          var ownerTablePrevSibling = ownerTable.previousRenderedWidget;\n          return ownerTablePrevSibling;\n        }\n      } else {\n        return nextOrPrevSibling;\n      }\n    } else if (paragraph.index === 0 && !isAfterSpacing) {\n      //If para is first item in any cell excluding first cell, need to check previous cell last item.\n      var prevCell = ownerRow.childWidgets[ownerCell.index - 1];\n      var prevCelllastItem = prevCell.childWidgets[prevCell.childWidgets.length - 1];\n      //if previous cell last item is table means skip before spacing value no need to check any paragraph styles.\n      if (prevCelllastItem instanceof TableWidget && paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n        return paragraph;\n      }\n    }\n    return nextOrPrevSibling;\n  };\n  Layout.prototype.updateLastParagraphSpacingBasedOnContextualSpacing = function (paragraph) {\n    var ownerCell = paragraph.associatedCell;\n    var ownerRow = ownerCell.ownerRow;\n    var nextCellFirstItem;\n    if (ownerCell.index === ownerRow.childWidgets.length - 1 && paragraph.index === ownerCell.childWidgets.length - 1) {\n      if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n        //If para preserved in last item in cell and cell is last cell in current row means its after spacing value not considered.\n        return paragraph;\n      }\n    } else if (paragraph.index === ownerCell.childWidgets.length - 1) {\n      //If current para is last item in current cell then need to check next cell first item.\n      var nextCell = ownerRow.childWidgets[ownerCell.index + 1];\n      nextCellFirstItem = nextCell.firstChild;\n      //If next cell first item is table then need to check inner table first para.\n      //This is applicable for multiple nested table so when first item is table it try to get its first paragraph.\n      while (nextCellFirstItem instanceof TableWidget) {\n        nextCellFirstItem = nextCellFirstItem.childWidgets[0].childWidgets[0].childWidgets[0];\n      }\n    }\n    return nextCellFirstItem;\n  };\n  Layout.prototype.checkOwnerTablePrevItem = function (ownerTable, paragraph) {\n    var row = ownerTable.associatedCell.ownerRow;\n    var prevSibling;\n    if (row.index > 0) {\n      if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n        return paragraph;\n      }\n    } else {\n      if (row.ownerTable.isInsideTable && row.ownerTable.index === 0) {\n        this.checkOwnerTablePrevItem(row.ownerTable, paragraph);\n      } else {\n        var prevSibling_1 = row.ownerTable.previousRenderedWidget;\n        return prevSibling_1;\n      }\n    }\n    return prevSibling;\n  };\n  Object.defineProperty(Layout.prototype, \"viewer\", {\n    get: function () {\n      return this.documentHelper.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Layout.prototype.layout = function () {\n    // Todo: Need to handle complete document layout(relayout).\n    //const page: Page = this.documentHelper.pages[0];\n    //const body: BodyWidget = page.bodyWidgets[0];\n  };\n  /**\n   * Releases un-managed and - optionally - managed resources.\n   *\n   * @returns {void}\n   */\n  Layout.prototype.destroy = function () {\n    this.documentHelper = undefined;\n    this.value = undefined;\n    this.allowLayout = undefined;\n    this.isInitialLoad = undefined;\n    this.fieldBegin = undefined;\n    this.maxTextHeight = undefined;\n    this.maxBaseline = undefined;\n    this.maxTextBaseline = undefined;\n    this.isFieldCode = undefined;\n    this.footnoteHeight = undefined;\n    this.isMultiColumnDoc = undefined;\n    this.isIFfield = undefined;\n  };\n  Layout.prototype.layoutItems = function (sections, isReLayout, isContinuousSection) {\n    var _this = this;\n    var page;\n    var height = 0;\n    var width = 0;\n    for (var i = 0; i < sections.length; i++) {\n      var section = sections[i];\n      if (section.sectionFormat.numberOfColumns > 1) {\n        this.isMultiColumnDoc = true;\n      }\n      var nextSection = sections[i + 1];\n      this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n      var lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n      var bodyWidget = void 0;\n      if (!isNullOrUndefined(lastpage) && !isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1]) && lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].childWidgets.length === 0 && !isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget)) {\n        bodyWidget = lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget;\n      }\n      /* eslint-disable-next-line max-len */\n      if (i > 0 && !isNullOrUndefined(bodyWidget) && !isNullOrUndefined(bodyWidget.lastChild) && !(bodyWidget.lastChild instanceof TableWidget) && (this.documentHelper.compatibilityMode === 'Word2013' && bodyWidget.lastChild.isEndsWithPageBreak || bodyWidget.lastChild.isEndsWithColumnBreak) && lastpage.bodyWidgets[0].childWidgets.length === 0) {\n        var removedPages = this.documentHelper.pages.splice(this.documentHelper.pages.length - 1, 1);\n        removedPages[0].destroy();\n        lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n      }\n      if (i === 0 && !isContinuousSection || i !== 0 && (isNullOrUndefined(section.sectionFormat.breakCode) || section.sectionFormat.breakCode === 'NewPage' || height !== section.sectionFormat.pageHeight || width !== section.sectionFormat.pageWidth || !isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].lastChild) && lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].lastChild.isEndsWithPageBreak)) {\n        page = this.viewer.createNewPage(section);\n      } else {\n        var clientY = this.documentHelper.viewer.clientActiveArea.y;\n        var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n        if (isContinuousSection) {\n          var section_1 = this.getBodyWidget(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1], true);\n          var height_1 = this.getNextWidgetHeight(section_1);\n          this.viewer.updateClientArea(section_1, section_1.page);\n          clientHeight = this.viewer.clientActiveArea.height - (height_1 - this.viewer.clientActiveArea.y);\n          clientY = height_1;\n          isContinuousSection = false;\n        }\n        //if (i - 1 > 0) {\n        page = lastpage;\n        //}\n        page.bodyWidgets.push(section);\n        page.bodyWidgets[page.bodyWidgets.length - 1].page = page;\n        this.documentHelper.viewer.updateClientArea(section, page);\n        this.documentHelper.viewer.clientActiveArea.y = clientY;\n        this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n      }\n      height = section.sectionFormat.pageHeight;\n      width = section.sectionFormat.pageWidth;\n      this.addBodyWidget(this.viewer.clientActiveArea, section);\n      if (this.documentHelper.pages.length > 1) {\n        var pageIndex = 0;\n        for (var i_1 = 0; i_1 < this.documentHelper.pages.length; i_1++) {\n          var prevPage = this.documentHelper.pages[i_1];\n          var prevSectionIndex = prevPage.sectionIndex;\n          var index = section.index;\n          if (prevSectionIndex > index || prevPage === page) {\n            break;\n          }\n          pageIndex++;\n        }\n        if (pageIndex < this.documentHelper.pages.length - 1) {\n          this.documentHelper.insertPage(pageIndex, page);\n        }\n      }\n      this.layoutSection(section, 0, nextSection);\n    }\n    if (!isReLayout) {\n      this.layoutComments(this.documentHelper.comments);\n    }\n    this.updateFieldElements();\n    if (this.documentHelper.owner.layoutType === 'Pages') {\n      this.layoutEndNoteElement();\n    }\n    /* tslint:disable:align */\n    setTimeout(function () {\n      if (_this.documentHelper) {\n        _this.documentHelper.isScrollHandler = true;\n        // if (this.documentHelper.owner.isSpellCheck && this.documentHelper.owner.spellChecker.enableOptimizedSpellCheck) {\n        //     this.documentHelper.triggerElementsOnLoading = true;\n        // }\n        _this.documentHelper.clearContent();\n        _this.viewer.updateScrollBars();\n        _this.documentHelper.isScrollHandler = false;\n        _this.isInitialLoad = false;\n      }\n    }, 50);\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.layoutComments = function (comments) {\n    if (!isNullOrUndefined(comments)) {\n      this.viewer.owner.commentReviewPane.layoutComments();\n    }\n  };\n  Layout.prototype.layoutSection = function (section, index, nextSection) {\n    var block = section.firstChild;\n    var nextBlock;\n    var prevBlock;\n    do {\n      if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto' && !block.tableFormat.allowAutoFit) {\n        block.calculateGrid();\n      }\n      if (!isNullOrUndefined(block)) {\n        this.viewer.updateClientAreaForBlock(block, true, undefined, true, true);\n        var bodyIndex = block.containerWidget.indexInOwner;\n        nextBlock = this.layoutBlock(block, index);\n        index = 0;\n        this.viewer.updateClientAreaForBlock(block, false);\n        prevBlock = block;\n        block = nextBlock;\n      }\n    } while (block);\n    block = section.firstChild;\n    if (this.viewer instanceof PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !isNullOrUndefined(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || section.sectionIndex === section.page.bodyWidgets[0].sectionIndex)) {\n      if (this.getColumnBreak(section)) {\n        var splittedSection = section.getSplitWidgets();\n        var bodyWidget = splittedSection[splittedSection.length - 1];\n        if (!isNullOrUndefined(section.page.nextPage)) {\n          this.splitBodyWidgetBasedOnColumn(bodyWidget);\n        } else {\n          var firstBody = this.getBodyWidget(bodyWidget, true);\n          this.viewer.updateClientArea(firstBody, firstBody.page);\n          var height = this.getNextWidgetHeight(firstBody);\n          this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n          this.viewer.clientActiveArea.y = height;\n        }\n      } else {\n        if (!isNullOrUndefined(section.page.nextPage)) {\n          section = this.documentHelper.pages[this.documentHelper.pages.length - 1].bodyWidgets[0];\n        }\n        this.splitBodyWidgetBasedOnColumn(section);\n      }\n    }\n    var page;\n    if (block && block.bodyWidget && block.bodyWidget.page) {\n      page = block.bodyWidget.page;\n    }\n    while (page) {\n      if (page.footnoteWidget) {\n        this.layoutfootNote(page.footnoteWidget);\n        page = page.nextPage;\n      } else {\n        page = page.nextPage;\n      }\n    }\n    page = undefined;\n    block = undefined;\n  };\n  /**\n   * @private\n   *\n   */\n  Layout.prototype.reLayoutMultiColumn = function (section, isFirstBlock, blockIndex) {\n    this.isInitialLoad = true;\n    section = section.getSplitWidgets()[0];\n    this.combineMultiColumnForRelayout(section);\n    if (section.sectionFormat.numberOfColumns > 1) {\n      this.isMultiColumnDoc = true;\n    }\n    this.isMultiColumnSplit = false;\n    var previousSection = section.previousRenderedWidget;\n    var nextSection = section.nextRenderedWidget;\n    var isUpdatedClientArea = false;\n    // Section's Y position is not updated properly when the two sections combined and layouted.\n    if (!isFirstBlock && !isNullOrUndefined(section.firstChild) && section.firstChild instanceof ParagraphWidget && section.y !== section.firstChild.y) {\n      section.y = section.firstChild.y;\n    }\n    if (isFirstBlock && nextSection && section.page !== nextSection.page && section.firstChild instanceof ParagraphWidget) {\n      var paragraph = section.firstChild;\n      var lineHeight = 0;\n      if (paragraph.isEmpty()) {\n        lineHeight = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Height;\n      } else {\n        var firstLine = paragraph.childWidgets[0];\n        lineHeight = this.getMaxElementHeight(firstLine);\n      }\n      var previousBlock = paragraph.previousRenderedWidget;\n      if (section.y === this.viewer.clientActiveArea.y && lineHeight > this.viewer.clientActiveArea.height) {\n        previousBlock = isNullOrUndefined(previousBlock) ? paragraph : previousBlock;\n        this.moveBlocksToNextPage(previousBlock);\n        this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n        this.viewer.updateClientArea(section, section.page);\n        isUpdatedClientArea = true;\n      }\n    } else if (!isNullOrUndefined(previousSection) && previousSection.page !== section.page && section.firstChild instanceof ParagraphWidget && previousSection.lastChild instanceof ParagraphWidget) {\n      var previousParagraph = previousSection.lastChild;\n      var paragraph = section.firstChild;\n      if (section instanceof BodyWidget && previousSection.lastChild && previousParagraph instanceof ParagraphWidget && previousSection.sectionFormat.breakCode === 'NoBreak' && section.page.index !== previousSection.page.index && section.index !== previousSection.index) {\n        var bodyWidget = previousSection;\n        if (bodyWidget.sectionFormat.columns.length > 1) {\n          bodyWidget = this.getBodyWidget(bodyWidget, true);\n        }\n        var bottom = HelperMethods.round(this.getNextWidgetHeight(bodyWidget) + paragraph.height, 2);\n        // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n        if (!previousSection.lastChild.isEndsWithPageBreak && !previousSection.lastChild.isEndsWithColumnBreak && bottom <= HelperMethods.round(this.viewer.clientActiveArea.bottom, 2)) {\n          var page = previousSection.page;\n          var nextPage = section.page;\n          for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n            var nextBodyWidget = nextPage.bodyWidgets[j];\n            nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n            page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n            nextBodyWidget.page = page;\n            j--;\n          }\n          section.y = this.viewer.clientActiveArea.y;\n          this.documentHelper.removeEmptyPages();\n        }\n      }\n    }\n    if (!isUpdatedClientArea) {\n      this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n      this.viewer.updateClientArea(section, section.page);\n      this.viewer.clientActiveArea.height -= section.y - this.viewer.clientActiveArea.y;\n      this.viewer.clientActiveArea.y = section.y;\n    }\n    this.addBodyWidget(this.viewer.clientActiveArea, section);\n    this.clearBlockWidget(section.childWidgets, true, true, true);\n    this.isMultiColumnLayout = true;\n    this.reLayoutMultiColumnBlock(section, nextSection, blockIndex);\n    this.isMultiColumnLayout = false;\n    this.isInitialLoad = false;\n    var splitSections = section.getSplitWidgets();\n    var lastSection = splitSections[splitSections.length - 1];\n    var firstBody = this.getBodyWidget(lastSection, true);\n    this.viewer.updateClientArea(firstBody, firstBody.page);\n    var height = this.getNextWidgetHeight(firstBody);\n    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n    this.viewer.clientActiveArea.y = height;\n    if (!isNullOrUndefined(lastSection) && !isNullOrUndefined(lastSection.nextRenderedWidget)) {\n      nextSection = lastSection.nextRenderedWidget;\n      var clientY = this.documentHelper.viewer.clientActiveArea.y;\n      var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n      this.documentHelper.viewer.updateClientArea(nextSection, nextSection.page);\n      this.documentHelper.viewer.clientActiveArea.y = clientY;\n      this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n      this.documentHelper.blockToShift = nextSection.firstChild;\n    }\n    if (isNullOrUndefined(lastSection.nextRenderedWidget) || !isNullOrUndefined(lastSection.nextRenderedWidget) && lastSection.sectionFormat.breakCode !== 'NoBreak' && lastSection.nextRenderedWidget.sectionFormat.pageHeight !== lastSection.sectionFormat.pageHeight && lastSection.nextRenderedWidget.sectionFormat.pageWidth !== lastSection.sectionFormat.pageWidth) {\n      this.documentHelper.blockToShift = undefined;\n    }\n  };\n  Layout.prototype.combineMultiColumnForRelayout = function (section) {\n    var splitSections = section.getSplitWidgets();\n    var firstSection = splitSections[0];\n    section = splitSections[splitSections.length - 1];\n    while (section !== firstSection) {\n      var prevSection = section.previousRenderedWidget;\n      var isPreviousSplit = false;\n      for (var i = 0; i < section.childWidgets.length; i++) {\n        if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget.previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n          isPreviousSplit = true;\n        }\n        if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit) {\n          section.childWidgets[i].combineWidget(this.viewer);\n          if (prevSection.lastChild instanceof TableWidget) {\n            this.updateCellHeightInCombinedTable(prevSection.lastChild);\n          }\n          i--;\n          continue;\n        }\n        prevSection.childWidgets.push(section.childWidgets[i]);\n        section.childWidgets[i].containerWidget = prevSection;\n        section.childWidgets[i].containerWidget.page = prevSection.page;\n        section.childWidgets.splice(0, 1);\n        i--;\n      }\n      section = section.previousRenderedWidget;\n    }\n    this.documentHelper.removeEmptyPages();\n  };\n  Layout.prototype.reLayoutMultiColumnBlock = function (section, nextSection, blockIndex) {\n    var block = section.firstChild;\n    var nextBlock;\n    do {\n      if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto' && !block.tableFormat.allowAutoFit) {\n        block.calculateGrid();\n      }\n      if (!isNullOrUndefined(block)) {\n        this.viewer.updateClientAreaForBlock(block, true, undefined, true);\n        nextBlock = this.layoutBlock(block, 0, block.index < blockIndex ? true : false);\n        this.viewer.updateClientAreaForBlock(block, false);\n        block = nextBlock;\n      }\n    } while (block && section.getSplitWidgets().indexOf(block.bodyWidget) !== -1);\n    block = section.firstChild;\n    if (this.viewer instanceof PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !isNullOrUndefined(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || section.sectionIndex === section.page.bodyWidgets[0].sectionIndex)) {\n      var splittedSection = section.getSplitWidgets();\n      var bodyWidget = splittedSection[splittedSection.length - 1];\n      if (this.getColumnBreak(section)) {\n        if (section.page !== bodyWidget.page) {\n          this.splitBodyWidgetBasedOnColumn(bodyWidget);\n        } else {\n          var firstBody = this.getBodyWidget(bodyWidget, true);\n          this.viewer.updateClientArea(firstBody, firstBody.page);\n          var height = this.getNextWidgetHeight(firstBody);\n          this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n          this.viewer.clientActiveArea.y = height;\n        }\n      } else if (!isNullOrUndefined(section.page.nextPage)) {\n        this.splitBodyWidgetBasedOnColumn(bodyWidget);\n      }\n    }\n  };\n  Layout.prototype.splitBodyWidgetBasedOnColumn = function (section) {\n    section = this.getBodyWidget(section, true);\n    var firstSection = section;\n    this.isMultiColumnSplit = true;\n    if (!this.isInitialLoad && section.sectionFormat.equalWidth) {\n      var previousStartIndex = this.documentHelper.selection.startOffset;\n      var previousEndIndex = this.documentHelper.selection.endOffset;\n      this.combineMultiColumn(section);\n      this.layoutMultiColumnBody(section, false);\n      if (previousStartIndex !== this.documentHelper.selection.startOffset) {\n        this.documentHelper.selection.select(previousStartIndex, previousEndIndex);\n      }\n    }\n    this.combineMultiColumn(section);\n    var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n    var totalHeight = lineCountInfo.lineCount;\n    var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n    while (section) {\n      var lineCountInfo_1 = this.getCountOrLine(section, lineToBeSplit, true, false);\n      var line = lineCountInfo_1.lineWidget;\n      var lineIndexInCell = lineCountInfo_1.lineCount;\n      if (!isNullOrUndefined(line)) {\n        if (line.paragraph.containerWidget instanceof BodyWidget) {\n          this.moveToNextLine(line, true, line.indexInOwner);\n        } else if (line.paragraph.containerWidget instanceof TableCellWidget) {\n          var table = [line.paragraph.containerWidget.ownerTable];\n          var rows = [line.paragraph.containerWidget.ownerRow];\n          var index = line.paragraph.containerWidget.index;\n          if (table[table.length - 1].isInsideTable) {\n            table[table.length - 1] = this.getParentTable(table[table.length - 1]);\n            rows[rows.length - 1] = this.getParentRow(rows[rows.length - 1]);\n          }\n          this.updateWidgetsToTable(table, rows, rows[rows.length - 1], false, lineIndexInCell, index, true);\n          var tableWidget = table[table.length - 1];\n          var rowWidget = rows[rows.length - 1];\n          var nextRow = rowWidget.nextRenderedWidget;\n          while (nextRow) {\n            this.clearRowWidget(nextRow, true, true, false);\n            nextRow = this.layoutRow(table, nextRow);\n            nextRow = nextRow.nextRenderedWidget;\n          }\n          if (!isNullOrUndefined(tableWidget.nextRenderedWidget) && section.sectionFormat.equalWidth) {\n            this.documentHelper.blockToShift = tableWidget.nextRenderedWidget;\n            this.documentHelper.layout.shiftLayoutedItems(false);\n          }\n        }\n        var firstBody = this.getBodyWidget(line.paragraph.bodyWidget, true);\n        var lastBody = this.getBodyWidget(firstBody, false);\n        if (!firstBody.sectionFormat.equalWidth && lastBody.sectionFormat.numberOfColumns - 1 === lastBody.columnIndex) {\n          var nonEqualBody = firstBody;\n          var initialCount = this.getCountOrLine(firstBody).lineCount;\n          this.layoutMultiColumnBody(nonEqualBody, true);\n          var finalCount = this.getCountOrLine(firstBody).lineCount;\n          if (initialCount !== finalCount) {\n            this.splitBodyWidgetBasedOnColumn(firstBody);\n          }\n        }\n        this.viewer.updateClientArea(firstBody, firstBody.page);\n        var height = this.getNextWidgetHeight(firstBody);\n        this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n        this.viewer.clientActiveArea.y = height;\n        this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n        this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n      }\n      section = section.nextRenderedWidget;\n      if (!isNullOrUndefined(section) && section.columnIndex === section.sectionFormat.numberOfColumns - 1) {\n        break;\n      }\n    }\n    this.isMultiColumnSplit = false;\n    if (!this.isInitialLoad) {\n      section = this.getBodyWidget(firstSection, false);\n      if (!isNullOrUndefined(section.nextRenderedWidget)) {\n        this.documentHelper.blockToShift = section.nextRenderedWidget.firstChild;\n      }\n    }\n  };\n  /**\n  * @private\n  */\n  Layout.prototype.getColumnBreak = function (section) {\n    var firstBody = this.getBodyWidget(section, true);\n    if (firstBody.sectionFormat.numberOfColumns <= 1) {\n      return false;\n    }\n    while (firstBody) {\n      if (firstBody.lastChild instanceof ParagraphWidget && firstBody.lastChild.isEndsWithColumnBreak) {\n        return true;\n      }\n      if (isNullOrUndefined(firstBody.nextRenderedWidget) || firstBody.index !== firstBody.nextRenderedWidget.index) {\n        break;\n      }\n      firstBody = firstBody.nextRenderedWidget;\n    }\n    return false;\n  };\n  Layout.prototype.layoutMultiColumnBody = function (nonEqualBody, updatePosition) {\n    var skipPosition = false;\n    while (nonEqualBody) {\n      if (!skipPosition) {\n        this.viewer.updateClientArea(nonEqualBody, nonEqualBody.page);\n        this.viewer.clientActiveArea.height -= nonEqualBody.y - this.viewer.clientActiveArea.y;\n        if (nonEqualBody instanceof FootNoteWidget) {\n          this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n          this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n        } else {\n          this.viewer.clientActiveArea.y = nonEqualBody.y;\n        }\n      }\n      skipPosition = updatePosition ? false : true;\n      for (var i = 0; i < nonEqualBody.childWidgets.length; i++) {\n        var block = nonEqualBody.childWidgets[i];\n        if (block instanceof TableWidget) {\n          this.clearTableWidget(block, true, true, true);\n        }\n        this.viewer.updateClientAreaForBlock(block, true);\n        var isUpdatedList = false;\n        if (block instanceof ParagraphWidget && !isNullOrUndefined(block.paragraphFormat) && block.paragraphFormat.listFormat.listId !== -1) {\n          isUpdatedList = block.paragraphFormat.listFormat.listLevelNumber === 0 ? true : false;\n        }\n        this.layoutBlock(block, 0, isUpdatedList);\n        this.viewer.updateClientAreaForBlock(block, false);\n      }\n      if (nonEqualBody.columnIndex === nonEqualBody.sectionFormat.numberOfColumns - 1 || !isNullOrUndefined(nonEqualBody.nextRenderedWidget) && nonEqualBody.sectionIndex !== nonEqualBody.nextRenderedWidget.sectionIndex) {\n        break;\n      }\n      nonEqualBody = nonEqualBody.nextRenderedWidget;\n    }\n  };\n  Layout.prototype.getNextWidgetHeight = function (body) {\n    var height = 0;\n    var updatedHeight = 0;\n    while (body && body.childWidgets.length > 0) {\n      height = body.lastChild.height;\n      if (body.lastChild instanceof TableWidget) {\n        height = this.getHeight(body.lastChild);\n      }\n      height += body.lastChild.y;\n      if (height > updatedHeight) {\n        updatedHeight = height;\n      }\n      if (!isNullOrUndefined(body) && body.columnIndex === body.sectionFormat.numberOfColumns - 1 || body.sectionFormat.numberOfColumns === 0 || !isNullOrUndefined(body.nextRenderedWidget) && body.sectionIndex !== body.nextRenderedWidget.sectionIndex) {\n        break;\n      }\n      body = body.nextRenderedWidget;\n    }\n    return updatedHeight;\n  };\n  Layout.prototype.getHeight = function (block) {\n    var height = 0;\n    for (var i = 0; i < block.childWidgets.length; i++) {\n      height += block.childWidgets[i].height;\n    }\n    return height;\n  };\n  Layout.prototype.getBookmarkMargin = function (lineWidget) {\n    var height = 0;\n    for (var i = 0; i < lineWidget.children.length; i++) {\n      var element = lineWidget.children[i];\n      if (!isNullOrUndefined(element.margin) && element instanceof BookmarkElementBox) {\n        height = element.margin.top + element.margin.bottom;\n        break;\n      }\n    }\n    return height;\n  };\n  Layout.prototype.getCountOrLine = function (section, lineToBeSplit, isSplit, getHeight) {\n    var totalNoOflines = 0;\n    var line;\n    var count = 0;\n    var skip = false;\n    var maxHeight = 0;\n    var lineIndexInCell = 0;\n    var splitCountLine;\n    var lineMargin = 0;\n    while (section) {\n      for (var i = 0; i < section.childWidgets.length; i++) {\n        var block = section.childWidgets[i];\n        if (block instanceof ParagraphWidget) {\n          for (var j = 0; j < block.childWidgets.length; j++) {\n            var lineWidget = block.childWidgets[j];\n            lineMargin = 0;\n            if (!isNullOrUndefined(lineWidget.margin)) {\n              lineMargin = lineWidget.margin.top + lineWidget.margin.bottom + this.getBookmarkMargin(lineWidget);\n            }\n            if (!isSplit) {\n              totalNoOflines++;\n              maxHeight += lineWidget.height - lineMargin;\n            } else {\n              maxHeight += lineWidget.height - lineMargin;\n              if (Math.round(lineToBeSplit) < Math.round(maxHeight)) {\n                line = block.childWidgets[j];\n                skip = true;\n                count = 0;\n                break;\n              } else {\n                count++;\n              }\n            }\n          }\n        } else if (block instanceof TableWidget) {\n          splitCountLine = this.getCountOrLineTable(block, lineToBeSplit, isSplit, maxHeight, false, getHeight);\n          if (getHeight) {\n            maxHeight += splitCountLine.lineCount;\n          } else if (!isSplit) {\n            totalNoOflines += splitCountLine.lineCount;\n          } else if (isNullOrUndefined(splitCountLine.lineWidget)) {\n            //  count = splitCountLine.lineCount;\n            maxHeight = splitCountLine.lineCount;\n          } else {\n            line = splitCountLine.lineWidget;\n            lineIndexInCell = splitCountLine.lineCount;\n            skip = true;\n          }\n        }\n        if (skip && isSplit) {\n          break;\n        }\n      }\n      if (skip && isSplit) {\n        break;\n      }\n      if (!isNullOrUndefined(section.nextRenderedWidget) && section.index !== section.nextRenderedWidget.index) {\n        break;\n      }\n      section = section.nextRenderedWidget;\n    }\n    if (getHeight) {\n      return {\n        lineWidget: undefined,\n        lineCount: maxHeight\n      };\n    } else if (!isSplit) {\n      return {\n        lineWidget: undefined,\n        lineCount: totalNoOflines\n      };\n    } else {\n      return {\n        lineWidget: line,\n        lineCount: lineIndexInCell\n      };\n    }\n  };\n  Layout.prototype.getCountOrLineTable = function (block, lineToBeSplit, isSplit, maxSplitHeight, isNested, getHeight) {\n    var lineIndexInCell = 0;\n    var skip = false;\n    var line;\n    var totalNoOflines = 0;\n    var totalHeight = 0;\n    var minCount = 0;\n    var maxCount = 0;\n    var minHeight = 0;\n    var maxHeight = 0;\n    var splitCountLine;\n    for (var i = 0; i < block.childWidgets.length; i++) {\n      var row = block.childWidgets[i];\n      var minCountCell = void 0;\n      var maxCountCell = void 0;\n      minCount = 0;\n      maxCount = 0;\n      minHeight = 0;\n      maxHeight = 0;\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        for (var k = 0; k < cell.childWidgets.length; k++) {\n          var blocks = cell.childWidgets[k];\n          if (blocks instanceof ParagraphWidget && blocks.childWidgets.length > 0) {\n            for (var l = 0; l < blocks.childWidgets.length; l++) {\n              minCount++;\n              minCountCell = cell;\n              minHeight += blocks.childWidgets[l].height;\n            }\n          } else {\n            splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, true, getHeight);\n            minCount += splitCountLine.lineCount;\n            minHeight += splitCountLine.lineCount;\n          }\n        }\n        if (maxCount < minCount) {\n          maxCount = minCount;\n          // maxCountCell = minCountCell;\n        }\n        if (maxHeight < minHeight) {\n          maxHeight = minHeight;\n          maxCountCell = minCountCell;\n        }\n        minCount = 0;\n        minHeight = 0;\n      }\n      if (!isSplit || isNested) {\n        totalNoOflines = totalNoOflines + maxCount;\n        totalHeight += maxHeight;\n      } else {\n        var countInCell = 0;\n        for (var i_2 = 0; i_2 < maxCountCell.childWidgets.length; i_2++) {\n          var blocks = maxCountCell.childWidgets[i_2];\n          if (blocks instanceof ParagraphWidget) {\n            for (var j = 0; j < blocks.childWidgets.length; j++) {\n              maxSplitHeight += blocks.childWidgets[j].height;\n              if (Math.round(lineToBeSplit) < Math.round(maxSplitHeight)) {\n                line = blocks.childWidgets[j];\n                skip = true;\n                maxSplitHeight = 0;\n                lineIndexInCell = countInCell;\n                break;\n              } else {\n                countInCell++;\n              }\n              if (skip && isSplit) {\n                break;\n              }\n            }\n          } else {\n            splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, false, getHeight);\n            if (isNullOrUndefined(splitCountLine.lineWidget)) {\n              countInCell += splitCountLine.lineCount;\n              // count = splitCountLine.lineCount;\n              maxSplitHeight += blocks.height;\n            } else {\n              skip = true;\n              maxSplitHeight = 0;\n              line = splitCountLine.lineWidget;\n              countInCell += splitCountLine.lineCount;\n              lineIndexInCell = countInCell;\n              break;\n            }\n          }\n          if (skip && isSplit) {\n            break;\n          }\n        }\n      }\n      maxCount = 0;\n      if (skip && isSplit) {\n        break;\n      }\n    }\n    if (getHeight) {\n      return {\n        lineWidget: undefined,\n        lineCount: totalHeight\n      };\n    } else if (!isSplit) {\n      return {\n        lineWidget: undefined,\n        lineCount: totalNoOflines\n      };\n    } else if (isSplit && isNullOrUndefined(line) && isNested) {\n      return {\n        lineWidget: undefined,\n        lineCount: totalNoOflines\n      };\n    } else if (isSplit && isNullOrUndefined(line) && !isNested) {\n      return {\n        lineWidget: undefined,\n        lineCount: maxSplitHeight\n      };\n    } else {\n      return {\n        lineWidget: line,\n        lineCount: lineIndexInCell\n      };\n    }\n  };\n  /**\n     * @private\n     */\n  Layout.prototype.combineMultiColumn = function (section) {\n    section = this.getBodyWidget(section, false);\n    while (section && section.columnIndex !== 0) {\n      var prevSection = section.previousRenderedWidget;\n      if (prevSection.lastChild instanceof ParagraphWidget && prevSection.lastChild.isEndsWithColumnBreak) {\n        break;\n      }\n      var isPreviousSplit = false;\n      for (var i = 0; i < section.childWidgets.length; i++) {\n        if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget.previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n          isPreviousSplit = true;\n        }\n        if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit) {\n          section.childWidgets[i].combineWidget(this.viewer);\n          if (prevSection.lastChild instanceof TableWidget) {\n            this.updateCellHeightInCombinedTable(prevSection.lastChild);\n          }\n          i--;\n          continue;\n        }\n        prevSection.childWidgets.push(section.childWidgets[i]);\n        section.childWidgets[i].containerWidget = prevSection;\n        section.childWidgets[i].containerWidget.page = prevSection.page;\n        section.childWidgets.splice(0, 1);\n        i--;\n      }\n      section = section.previousRenderedWidget;\n    }\n    this.documentHelper.removeEmptyPages();\n  };\n  Layout.prototype.updateCellHeightInCombinedTable = function (tableWidget) {\n    var maxCellHeight = 0;\n    var minCellHeight = 0;\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var row = tableWidget.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        for (var k = 0; k < cell.childWidgets.length; k++) {\n          minCellHeight += cell.childWidgets[k].height;\n        }\n        if (minCellHeight > maxCellHeight) {\n          maxCellHeight = minCellHeight;\n        }\n        minCellHeight = 0;\n        for (var a = 0; a < row.childWidgets.length; a++) {\n          row.childWidgets[a].height = maxCellHeight;\n        }\n      }\n      maxCellHeight = 0;\n    }\n  };\n  Layout.prototype.layoutHeaderFooter = function (section, viewer, page) {\n    //Header layout\n    var headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, true);\n    if (headerFooterWidget) {\n      var parentHeader = headerFooterWidget;\n      if (isNullOrUndefined(headerFooterWidget.page)) {\n        headerFooterWidget.page = page;\n        headerFooterWidget.height = 0;\n        this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n        viewer.updateHFClientArea(section.sectionFormat, true);\n        this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n      }\n      headerFooterWidget = parentHeader.clone();\n      headerFooterWidget.parentHeaderFooter = parentHeader;\n      this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n      var header = headerFooterWidget;\n      header.page = page;\n      header.height = 0;\n      this.updateRevisionsToHeaderFooter(header, page);\n      viewer.updateHFClientArea(section.sectionFormat, true);\n      page.headerWidget = this.layoutHeaderFooterItems(viewer, header);\n      //this.updateHeaderFooterToParent(header);\n      //When the vertical position is related to margin, then it should be adjusted based on the layouted header height. Not default header height.\n      if (section.sectionFormat.topMargin < page.boundingRectangle.bottom && page.headerWidget.floatingElements.length > 0 && page.headerWidget.floatingElements[0].textWrappingStyle !== \"Behind\") {\n        page.headerWidget = this.shiftItemsForVerticalAlignment(header);\n      }\n    }\n    //Footer Layout\n    headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, false);\n    if (headerFooterWidget) {\n      var parentHeader = headerFooterWidget;\n      if (isNullOrUndefined(headerFooterWidget.page)) {\n        headerFooterWidget.page = page;\n        headerFooterWidget.height = 0;\n        this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n        viewer.updateHFClientArea(section.sectionFormat, false);\n        this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n      }\n      headerFooterWidget = parentHeader.clone();\n      headerFooterWidget.parentHeaderFooter = parentHeader;\n      this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n      var footer = headerFooterWidget;\n      footer.page = page;\n      footer.height = 0;\n      viewer.updateHFClientArea(section.sectionFormat, false);\n      this.updateRevisionsToHeaderFooter(footer, page);\n      page.footerWidget = this.layoutHeaderFooterItems(viewer, footer);\n    }\n  };\n  Layout.prototype.shiftItemsForVerticalAlignment = function (headerWidget) {\n    var floatingElements = headerWidget.floatingElements;\n    for (var i = 0; i < floatingElements.length; i++) {\n      var floatingItem = floatingElements[i];\n      var verticalOrigin = floatingItem.verticalOrigin;\n      var paragraph = floatingItem.paragraph;\n      // When a owner paragraph is inside the table, we have to skip the vertical alignment of the floating entity.\n      if (verticalOrigin === 'Margin' && !paragraph.isInsideTable) {\n        var yPosition = floatingItem.verticalPosition;\n        if (yPosition != 0) {\n          yPosition += this.viewer.clientActiveArea.y;\n          var diff = yPosition - floatingItem.y;\n          floatingItem.y = yPosition;\n          if (floatingItem instanceof ShapeElementBox) {\n            for (var j = 0; j < floatingItem.textFrame.childWidgets.length; j++) {\n              var block = floatingItem.textFrame.childWidgets[j];\n              if (block instanceof ParagraphWidget) {\n                block.y = block.y + diff;\n              }\n            }\n          }\n        }\n      }\n    }\n    return headerWidget;\n  };\n  Layout.prototype.updateHeaderFooterToParent = function (node) {\n    var sectionIndex = node.page.sectionIndex;\n    var typeIndex = this.viewer.getHeaderFooter(node.headerFooterType);\n    var clone = node.clone();\n    this.documentHelper.headersFooters[sectionIndex][typeIndex] = clone;\n    for (var j = 0; j < clone.childWidgets.length; j++) {\n      var child = clone.childWidgets[j];\n      if (child instanceof TableWidget) {\n        this.clearTableWidget(child, false, true);\n      }\n    }\n    return clone;\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Layout.prototype.updateRevisionsToHeaderFooter = function (clone, page) {\n    var childWidge = clone.childWidgets;\n    if (clone instanceof HeaderFooterWidget && childWidge.length > 0) {\n      for (var i = 0; i < childWidge.length; i++) {\n        if (childWidge[i].childWidgets.length > 0) {\n          var lineWidge = childWidge[i].childWidgets;\n          for (var j = 0; j < lineWidge.length; j++) {\n            var childrens = lineWidge[j].children;\n            if (childrens) {\n              for (var k = 0; k < childrens.length; k++) {\n                if (childrens[k].removedIds.length > 0) {\n                  var removeId = childrens[k].removedIds;\n                  for (var l = 0; l < removeId.length; l++) {\n                    var revision = this.documentHelper.revisionsInternal.get(removeId[l]);\n                    childrens[k].revisions[l] = revision;\n                    this.updateRevisionRange(revision, page);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  Layout.prototype.updateRevisionRange = function (revision, page) {\n    for (var i = 0; i < revision.range.length; i++) {\n      var inline = revision.range[i];\n      if (!inline.line.paragraph.bodyWidget.page) {\n        inline.line.paragraph.bodyWidget.page = page;\n      }\n    }\n  };\n  Layout.prototype.linkFieldInHeaderFooter = function (widget) {\n    var firstChild = widget.firstChild;\n    do {\n      if (firstChild instanceof ParagraphWidget) {\n        this.linkFieldInParagraph(firstChild);\n      } else {\n        this.linkFieldInTable(firstChild);\n      }\n      /* eslint-disable no-cond-assign */\n    } while (firstChild = firstChild.nextWidget);\n  };\n  Layout.prototype.linkFieldInParagraph = function (widget) {\n    for (var j = 0; j < widget.childWidgets.length; j++) {\n      var line = widget.childWidgets[j];\n      for (var i = 0; i < line.children.length; i++) {\n        var element = line.children[i];\n        if (element instanceof FieldElementBox && (element.fieldType !== 0 || element.fieldType === 0 && this.documentHelper.fields.indexOf(element) === -1)) {\n          element.linkFieldCharacter(this.documentHelper);\n        }\n        if (element instanceof FieldTextElementBox && !isNullOrUndefined(element.previousElement) && element.previousElement instanceof FieldElementBox && element.fieldBegin !== element.previousElement.fieldBegin) {\n          element.fieldBegin = element.previousElement.fieldBegin;\n        }\n        if (element instanceof ShapeElementBox) {\n          var firstBlock = element.textFrame.firstChild;\n          if (firstBlock) {\n            do {\n              if (firstBlock instanceof ParagraphWidget) {\n                this.linkFieldInParagraph(firstBlock);\n              } else {\n                this.linkFieldInTable(firstBlock);\n              }\n              /* eslint-disable no-cond-assign */\n            } while (firstBlock = firstBlock.nextWidget);\n          }\n        } else if (element instanceof CommentCharacterElementBox) {\n          var comment = this.getCommentById(this.documentHelper.comments, element.commentId);\n          if (!isNullOrUndefined(comment)) {\n            if (element.commentType === 0) {\n              comment.commentStart = element;\n            } else {\n              comment.commentEnd = element;\n            }\n            element.comment = comment;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.getCommentById = function (commentsCollection, commentId) {\n    for (var i = 0; i < commentsCollection.length; i++) {\n      var comment = commentsCollection[i];\n      if (comment.commentId === commentId) {\n        return comment;\n      }\n    }\n    return undefined;\n  };\n  Layout.prototype.linkFieldInTable = function (widget) {\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      var row = widget.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        for (var k = 0; k < cell.childWidgets.length; k++) {\n          var block = cell.childWidgets[k];\n          if (block instanceof ParagraphWidget) {\n            this.linkFieldInParagraph(block);\n          } else {\n            this.linkFieldInTable(block);\n          }\n        }\n      }\n    }\n  };\n  Layout.prototype.layoutHeaderFooterItems = function (viewer, widget) {\n    this.viewer.updateClientAreaLocation(widget, viewer.clientActiveArea);\n    if (widget.childWidgets.length === 0) {\n      var pargaraph = new ParagraphWidget();\n      var line = new LineWidget(pargaraph);\n      pargaraph.childWidgets.push(line);\n      widget.childWidgets.push(pargaraph);\n      pargaraph.containerWidget = widget;\n    }\n    this.linkFieldInHeaderFooter(widget);\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      var block = widget.childWidgets[i];\n      if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto' && !block.tableFormat.allowAutoFit && !block.isGridUpdated) {\n        block.calculateGrid();\n      }\n      viewer.updateClientAreaForBlock(block, true);\n      this.layoutBlock(block, 0);\n      viewer.updateClientAreaForBlock(block, false);\n    }\n    var type = widget.headerFooterType;\n    if (type === 'OddFooter' || type === 'EvenFooter' || type === 'FirstPageFooter') {\n      this.shiftChildLocation(viewer.clientArea.y - viewer.clientActiveArea.y, widget);\n    }\n    return widget;\n  };\n  Layout.prototype.shiftChildLocation = function (shiftTop, bodyWidget) {\n    var widgetTop = bodyWidget.y + shiftTop;\n    var footerMaxHeight = bodyWidget.page.boundingRectangle.height - bodyWidget.page.boundingRectangle.height / 100 * 40;\n    widgetTop = Math.max(widgetTop, footerMaxHeight);\n    shiftTop = widgetTop - bodyWidget.y;\n    var childTop = bodyWidget.y = widgetTop;\n    for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n      var childWidget = bodyWidget.childWidgets[i];\n      if (childWidget instanceof ParagraphWidget) {\n        childWidget.x = childWidget.x;\n        childWidget.y = i === 0 ? childWidget.y + shiftTop : childTop;\n        childTop += childWidget.height;\n        for (var j = 0; j < childWidget.childWidgets.length; j++) {\n          var widget = childWidget.childWidgets[j];\n          for (var k = 0; k < widget.children.length; k++) {\n            var element = widget.children[k];\n            if (element instanceof ShapeBase && element.textWrappingStyle !== \"Inline\") {\n              if (element.verticalOrigin === \"Paragraph\" || element.verticalOrigin === \"Line\") {\n                element.y = childWidget.y + element.verticalPosition;\n              } else {\n                var position = this.getFloatingItemPoints(element);\n                element.y = position.y;\n              }\n              if (element instanceof ShapeElementBox) {\n                var topMargin = element.textFrame.marginTop;\n                this.updateChildLocationForCellOrShape(element.y + topMargin, element);\n              }\n            }\n          }\n        }\n      } else {\n        this.shiftChildLocationForTableWidget(childWidget, shiftTop);\n        childTop += childWidget.height;\n      }\n    }\n  };\n  Layout.prototype.shiftChildLocationForTableWidget = function (tableWidget, shiftTop) {\n    tableWidget.y = tableWidget.y + shiftTop;\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var childWidget = tableWidget.childWidgets[i];\n      if (childWidget instanceof TableRowWidget) {\n        this.shiftChildLocationForTableRowWidget(childWidget, shiftTop);\n      }\n    }\n  };\n  Layout.prototype.shiftChildLocationForTableRowWidget = function (rowWidget, shiftTop) {\n    rowWidget.y = rowWidget.y + shiftTop;\n    for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n      this.shiftChildLocationForTableCellWidget(rowWidget.childWidgets[i], shiftTop);\n    }\n  };\n  Layout.prototype.shiftChildLocationForTableCellWidget = function (cellWidget, shiftTop) {\n    cellWidget.y = cellWidget.y + shiftTop;\n    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n      if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n        cellWidget.childWidgets[i].x = cellWidget.childWidgets[i].x;\n        cellWidget.childWidgets[i].y = cellWidget.childWidgets[i].y + shiftTop;\n      } else {\n        this.shiftChildLocationForTableWidget(cellWidget.childWidgets[i], shiftTop);\n      }\n    }\n  };\n  Layout.prototype.layoutBlock = function (block, index, isUpdatedList) {\n    var nextBlock;\n    if (block instanceof ParagraphWidget) {\n      block.splitTextRangeByScriptType(0);\n      block.splitLtrAndRtlText(0);\n      block.combineconsecutiveRTL(0);\n      nextBlock = this.layoutParagraph(block, index, isUpdatedList);\n      var nextBlockToLayout = this.checkAndRelayoutPreviousOverlappingBlock(block);\n      if (nextBlockToLayout) {\n        nextBlock = nextBlockToLayout;\n      }\n      // this.updateLinearIndex(block);\n      // if (block != nextBlock) {\n      //     this.updateLinearIndex(nextBlock);\n      // }\n    } else {\n      nextBlock = this.layoutTable(block, index);\n      this.checkAndRelayoutPreviousOverlappingBlock(block);\n      this.updateTableYPositionBasedonTextWrap(nextBlock);\n    }\n    return nextBlock.nextRenderedWidget;\n  };\n  // /**\n  //  * @private\n  //  */\n  // private updateLinearIndex(block: BlockWidget, skipParaMark?: boolean): void {\n  //     if (!isNullOrUndefined(block) && block instanceof ParagraphWidget) {\n  //         let splittedWidgets = block.getSplitWidgets();\n  //         (splittedWidgets[0] as ParagraphWidget).length = block.getTotalLength();\n  //     }\n  // }\n  Layout.prototype.updateTableYPositionBasedonTextWrap = function (table) {\n    var _this = this;\n    if (!isNullOrUndefined(table.bodyWidget) && !(table.containerWidget instanceof TextFrame)) {\n      var tableY_1 = table.y;\n      var tableRect_1 = new Rect(table.x, table.y, table.width, table.height);\n      table.bodyWidget.floatingElements.forEach(function (shape) {\n        if (shape instanceof ShapeElementBox && !shape.paragraph.isInsideTable) {\n          var shapeRect = new Rect(shape.x, shape.y, shape.width, shape.height);\n          var considerShape = shape.textWrappingStyle === 'TopAndBottom' || shape.textWrappingStyle === 'Square';\n          if (considerShape && tableRect_1.isIntersecting(shapeRect)) {\n            table.y = shape.y + shape.height + shape.distanceBottom;\n            _this.updateChildLocationForTable(table.y, table);\n            var height = table.y - tableY_1;\n            _this.viewer.cutFromTop(_this.viewer.clientActiveArea.y + height);\n          }\n        }\n      });\n    }\n  };\n  Layout.prototype.checkAndRelayoutPreviousOverlappingBlock = function (block) {\n    if (!(block.containerWidget instanceof TextFrame) && !this.isRelayoutOverlap) {\n      var preivousBlock = block.previousWidget;\n      if (block instanceof ParagraphWidget) {\n        if (block.floatingElements.length > 0) {\n          var height = 0;\n          for (var i = 0; i < block.floatingElements.length; i++) {\n            var element = block.floatingElements[i];\n            if (element.textWrappingStyle === 'InFrontOfText' || element.textWrappingStyle === 'Behind' || element.textWrappingStyle === 'Inline') {\n              continue;\n            }\n            var shapeRect = new Rect(element.x, element.y, element.width, element.height);\n            while (preivousBlock) {\n              // if height exceeds the client area height. then the paragraph belongs to previous page.\n              // So, we need to skip relayouting overlapping widgets.\n              // Adding this condition for row splitting to multiple page scenario.\n              if (block.isInsideTable && height > this.viewer.clientArea.height) {\n                this.startOverlapWidget = undefined;\n                this.endOverlapWidget = undefined;\n                break;\n              }\n              if (preivousBlock instanceof ParagraphWidget) {\n                var paraRect = new Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n                if (shapeRect.isIntersecting(paraRect) && this.startOverlapWidget !== preivousBlock) {\n                  this.startOverlapWidget = preivousBlock;\n                  this.endOverlapWidget = block;\n                }\n              }\n              height += preivousBlock.height;\n              preivousBlock = preivousBlock.previousWidget;\n            }\n            preivousBlock = block.previousWidget;\n          }\n        } else {\n          var widget = block.getSplitWidgets();\n          if (widget) {\n            return widget[widget.length - 1];\n          }\n        }\n      } else {\n        var table = block;\n        if (!table.wrapTextAround) {\n          return table;\n        }\n        var tableRect = new Rect(table.x, table.y, table.getTableCellWidth(), table.height);\n        while (preivousBlock) {\n          if (preivousBlock instanceof ParagraphWidget) {\n            var blockRect = new Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n            if (tableRect.isIntersecting(blockRect) && this.startOverlapWidget !== preivousBlock) {\n              this.startOverlapWidget = preivousBlock;\n              this.endOverlapWidget = block;\n            }\n          }\n          preivousBlock = preivousBlock.previousWidget;\n        }\n        preivousBlock = block.previousWidget;\n      }\n      if (this.startOverlapWidget) {\n        this.isRelayoutOverlap = true;\n        this.skipRelayoutOverlap = true;\n        this.layoutStartEndBlocks(this.startOverlapWidget, block);\n        this.isRelayoutOverlap = false;\n        this.skipRelayoutOverlap = false;\n      }\n      this.startOverlapWidget = undefined;\n      this.endOverlapWidget = undefined;\n    }\n    return block;\n  };\n  Layout.prototype.addParagraphWidget = function (area, paragraphWidget) {\n    // const ownerParaWidget: ParagraphWidget = undefined;\n    if (paragraphWidget.isEmpty() && !isNullOrUndefined(paragraphWidget.paragraphFormat) && (paragraphWidget.paragraphFormat.textAlignment === 'Center' || paragraphWidget.paragraphFormat.textAlignment === 'Right' || paragraphWidget.paragraphFormat.textAlignment === 'Justify' && paragraphWidget.paragraphFormat.bidi) && paragraphWidget.paragraphFormat.listFormat.listId === -1) {\n      this.updateXPositionForEmptyParagraph(area, paragraphWidget);\n      paragraphWidget.y = area.y;\n    } else {\n      if (this.viewer.clientActiveArea.width <= 0 && this.viewer instanceof WebLayoutViewer) {\n        paragraphWidget.x = this.previousPara;\n      } else {\n        paragraphWidget.x = area.x;\n        this.previousPara = paragraphWidget.x;\n      }\n      paragraphWidget.width = area.width;\n      paragraphWidget.y = area.y;\n      paragraphWidget.clientX = undefined;\n      if (paragraphWidget.hasOwnProperty('absoluteXPosition')) {\n        delete paragraphWidget['absoluteXPosition'];\n      }\n    }\n    return paragraphWidget;\n  };\n  // update the x position for bidi empty paragraph.\n  Layout.prototype.updateXPositionForEmptyParagraph = function (area, paragraph) {\n    if (paragraph.isEmpty() && !isNullOrUndefined(paragraph.paragraphFormat)) {\n      // const top: number = 0;\n      // const bottom: number = 0;\n      var width = this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n      paragraph.clientX = area.x;\n      var left = area.x;\n      paragraph['absoluteXPosition'] = {\n        'width': area.width,\n        'x': area.x\n      };\n      if (paragraph.paragraphFormat.textAlignment === 'Center') {\n        left += (area.width - width) / 2;\n      } else {\n        left += area.width - width;\n      }\n      paragraph.width = width;\n      paragraph.x = left;\n    }\n  };\n  Layout.prototype.addLineWidget = function (paragraphWidget) {\n    var line = undefined;\n    line = new LineWidget(paragraphWidget);\n    line.width = paragraphWidget.width;\n    paragraphWidget.childWidgets.push(line);\n    line.paragraph = paragraphWidget;\n    return line;\n  };\n  Layout.prototype.isFirstElementWithPageBreak = function (paragraphWidget) {\n    var isPageBreak = false;\n    if (this.viewer instanceof PageLayoutViewer) {\n      var lineWidget = paragraphWidget.childWidgets[0];\n      if (lineWidget) {\n        var element = lineWidget.children[0];\n        while (element) {\n          if (element instanceof BookmarkElementBox && element.name.indexOf('_') >= 0) {\n            element = element.nextElement;\n            continue;\n          }\n          if (element instanceof TextElementBox && (element.text === '\\f' || element.text === String.fromCharCode(14))) {\n            isPageBreak = true;\n          }\n          break;\n        }\n      }\n    }\n    return isPageBreak;\n  };\n  /**\n   * Layouts specified paragraph.\n   *\n   * @private\n   * @param footnote\n   */\n  Layout.prototype.layoutfootNote = function (footnote) {\n    if (this.documentHelper.owner.layoutType === 'Pages') {\n      var clientActiveArea = this.viewer.clientActiveArea.clone();\n      var clientArea = this.viewer.clientArea.clone();\n      if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && !this.isInitialLoad) {\n        this.updateColumnIndex(footnote.bodyWidgets[0], false);\n        this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n      }\n      if (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.numberOfColumns > 1) {\n        if (!this.isInitialLoad) {\n          this.updateColumnIndex(footnote.bodyWidgets[0], false);\n        }\n        this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n        this.viewer.clientActiveArea = clientActiveArea;\n      }\n      var clientWidth = 0;\n      if (footnote.sectionFormat.columns.length > 1 && footnote.footNoteType === 'Footnote') {\n        this.viewer.updateClientArea(footnote, footnote.page);\n        clientWidth = this.viewer.clientActiveArea.width;\n      }\n      if (footnote.footNoteType === 'Footnote') {\n        this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n        if (footnote.sectionFormat.columns.length > 1) {\n          this.viewer.clientActiveArea.width = clientWidth;\n          this.viewer.clientArea.width = clientWidth;\n        }\n      }\n      footnote.height = 0;\n      var block = void 0;\n      var height = 0;\n      this.isRelayoutFootnote = false;\n      var index = 0;\n      //        this.isfoot = true;\n      /* eslint-disable-next-line max-len */\n      if (this.viewer instanceof PageLayoutViewer && footnote.bodyWidgets.length > 0 && (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 || footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.columns.length > 1)) {\n        this.splitFootNoteWidgetBasedOnColumn(footnote.bodyWidgets[0]);\n      }\n      var footBody = footnote.bodyWidgets[0];\n      var clientX = 0;\n      for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n        if (footnote.bodyWidgets[i].columnIndex !== footBody.columnIndex && (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 || footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[i].sectionFormat.columns.length > 1)) {\n          this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page);\n          clientWidth = this.viewer.clientActiveArea.width;\n          clientX = this.viewer.clientActiveArea.x;\n          if (footnote.footNoteType === 'Footnote') {\n            this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n          }\n          this.viewer.clientActiveArea.x = clientX;\n          this.viewer.clientArea.x = clientX;\n          this.viewer.clientActiveArea.width = clientWidth;\n          this.viewer.clientArea.width = clientWidth;\n          this.viewer.cutFromTop(footnote.y + height);\n        }\n        if (i === 0) {\n          var newPara = new ParagraphWidget();\n          newPara.characterFormat = new WCharacterFormat();\n          newPara.paragraphFormat = new WParagraphFormat();\n          newPara.index = 0;\n          var lineWidget = new LineWidget(newPara);\n          newPara.childWidgets.push(lineWidget);\n          height = this.documentHelper.textHelper.getParagraphMarkSize(newPara.characterFormat).Height;\n          footnote.height += height;\n          footnote.y = this.viewer.clientActiveArea.y;\n          if (footnote.footNoteType === 'Endnote') {\n            this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page, true);\n          }\n          this.viewer.cutFromTop(footnote.y + height);\n          footnote.margin = new Margin(0, height, 0, 0);\n        }\n        for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n          block = footnote.bodyWidgets[i].childWidgets[j];\n          block.index = index;\n          index++;\n          block.containerWidget = footnote.bodyWidgets[i];\n          block.containerWidget.page = footnote.page;\n          block.containerWidget.containerWidget = footnote;\n          // paragraph.index = i > 1 ? i - 1 : 0;\n          this.viewer.updateClientAreaForBlock(block, true);\n          if (block instanceof TableWidget) {\n            this.clearTableWidget(block, true, true, true);\n            this.isRelayoutFootnote = true;\n            this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n            this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n          }\n          this.layoutBlock(block, 0);\n          if (footnote.footNoteType === 'Footnote' && footnote.bodyWidgets[i].columnIndex === footBody.columnIndex) {\n            footnote.height += block.height;\n          }\n          this.viewer.updateClientAreaForBlock(block, false);\n        }\n        footBody = footnote.bodyWidgets[i];\n      }\n      if (footnote.sectionFormat.columns.length > 1) {\n        var footHeight = this.getFootNoteBodyHeight(footnote.bodyWidgets[0]);\n        footnote.height = footHeight + height;\n      }\n      if (footnote.footNoteType === 'Footnote') {\n        this.shiftChildWidgetInFootnote(footnote);\n      }\n      if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1].sectionFormat.columns.length > 1) {\n        var section = this.getBodyWidget(footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1], true);\n        var height_2 = this.getNextWidgetHeight(section);\n        if (height_2 > footnote.y) {\n          this.footnoteHeight = footnote.height;\n          this.layoutMultiColumnBody(section, true);\n        }\n      }\n      this.viewer.clientActiveArea = clientActiveArea;\n      this.viewer.clientArea = clientArea;\n      if (!this.islayoutFootnote) {\n        if (this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height > footnote.y) {\n          this.viewer.clientActiveArea.height -= footnote.height;\n          var sub = this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - footnote.y;\n          this.viewer.clientActiveArea.height -= sub;\n        }\n      }\n    }\n    this.footnoteHeight = 0;\n    return footnote;\n  };\n  Layout.prototype.getFootNoteBodyHeight = function (section) {\n    var height = 0;\n    while (section) {\n      if (section.columnIndex !== 0) {\n        break;\n      }\n      for (var i = 0; i < section.childWidgets.length; i++) {\n        height += section.childWidgets[i].height;\n      }\n      section = section.nextRenderedWidget;\n    }\n    return height;\n  };\n  Layout.prototype.splitFootNoteWidgetBasedOnColumn = function (section) {\n    var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n    var totalHeight = lineCountInfo.lineCount;\n    var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n    while (section) {\n      var lineCountInfo_2 = this.getCountOrLine(section, lineToBeSplit, true, false);\n      var clientActiveArea = this.viewer.clientActiveArea.clone();\n      var clientArea = this.viewer.clientArea.clone();\n      if (lineCountInfo_2.lineWidget.paragraph.indexInOwner === 0 && lineCountInfo_2.lineWidget.indexInOwner === 0) {\n        this.updateColumnIndex(lineCountInfo_2.lineWidget.paragraph.bodyWidget, true);\n      } else {\n        this.splitParagraph(lineCountInfo_2.lineWidget.paragraph, lineCountInfo_2.lineWidget.indexInOwner, undefined);\n        var nextBody = this.moveBlocksToNextPage(lineCountInfo_2.lineWidget.paragraph.previousRenderedWidget);\n        this.viewer.clientActiveArea = clientActiveArea;\n        this.viewer.clientArea = clientArea;\n        if (!isNullOrUndefined(nextBody.nextRenderedWidget)) {\n          this.updateColumnIndex(nextBody.nextRenderedWidget, true);\n        }\n      }\n      if (lineCountInfo_2.lineWidget.paragraph.bodyWidget.columnIndex === lineCountInfo_2.lineWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns - 1) {\n        break;\n      }\n      section = section.nextRenderedWidget;\n    }\n  };\n  Layout.prototype.updateColumnIndex = function (section, increase) {\n    while (section) {\n      if (increase) {\n        section.columnIndex++;\n      } else {\n        section.columnIndex = 0;\n      }\n      section = section.nextRenderedWidget;\n    }\n  };\n  Layout.prototype.shiftChildWidgetInFootnote = function (footnote) {\n    var page = footnote.page;\n    var yPosition = footnote.y - footnote.height;\n    if (page.bodyWidgets[0].childWidgets.length === 1 && page.bodyWidgets[0].firstChild) {\n      var startY = page.bodyWidgets[0].firstChild.y;\n      var bodyWidgetHeight = this.getBodyWidgetHeight(page.bodyWidgets[0]);\n      if (yPosition < startY + bodyWidgetHeight) {\n        yPosition = startY + bodyWidgetHeight;\n      }\n    }\n    footnote.y = yPosition;\n    yPosition += footnote.margin.top;\n    var multiColumnY = yPosition;\n    var columnBody = footnote.bodyWidgets[0];\n    for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n      if (footnote.bodyWidgets[i].columnIndex !== columnBody.columnIndex) {\n        yPosition = multiColumnY;\n      }\n      columnBody = footnote.bodyWidgets[i];\n      for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n        var childWidget = footnote.bodyWidgets[i].childWidgets[j];\n        if (childWidget instanceof ParagraphWidget) {\n          childWidget.y = yPosition;\n          yPosition += childWidget.height;\n        } else {\n          this.shiftChildLocationForTableWidget(childWidget, yPosition - childWidget.y);\n          yPosition += childWidget.height;\n        }\n      }\n    }\n  };\n  /**\n     * @private\n     */\n  Layout.prototype.getBodyWidgetHeight = function (bodyWidget) {\n    var height = 0;\n    for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n      height += bodyWidget.childWidgets[i].height;\n    }\n    return height;\n  };\n  // check whether the paragraph has the field separator or field end of the field begin.\n  Layout.prototype.checkParaHasField = function (paragraph) {\n    var hasField = false;\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var lineWidget = paragraph.childWidgets[i];\n      for (var j = 0; j < lineWidget.children.length; j++) {\n        var element = lineWidget.children[j];\n        if (element instanceof FieldElementBox && (element.fieldType === 2 || element.fieldType === 1)) {\n          if (this.documentHelper.fieldStacks.length > 0 && element.fieldBegin === this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1]) {\n            hasField = true;\n            break;\n          }\n        }\n      }\n    }\n    return hasField;\n  };\n  // check whether the table has the field separator or field end of the field begin.\n  Layout.prototype.checkTableHasField = function (table) {\n    var hasField = false;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        for (var k = 0; k < cell.childWidgets.length; k++) {\n          var block = cell.childWidgets[k];\n          if (block instanceof ParagraphWidget) {\n            hasField = this.checkParaHasField(block);\n          } else {\n            hasField = this.checkTableHasField(block);\n          }\n          if (hasField) {\n            break;\n          }\n        }\n      }\n    }\n    return hasField;\n  };\n  Layout.prototype.layoutParagraph = function (paragraph, lineIndex, isUpdatedList) {\n    if (this.isFieldCode && !this.checkParaHasField(paragraph)) {\n      paragraph.isFieldCodeBlock = true;\n      return paragraph;\n    }\n    this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n    var isListLayout = true;\n    var isFirstElmIsparagraph = this.isFirstElementWithPageBreak(paragraph);\n    if (!isFirstElmIsparagraph) {\n      this.layoutListItems(paragraph, isUpdatedList);\n      isListLayout = false;\n    }\n    if (paragraph.isEmpty()) {\n      this.layoutEmptyLineWidget(paragraph, true);\n    } else {\n      var line = lineIndex < paragraph.childWidgets.length ? paragraph.childWidgets[lineIndex] : undefined;\n      if (!this.isRelayoutOverlap && !(paragraph.containerWidget instanceof TextFrame)) {\n        this.layoutFloatElements(paragraph);\n      }\n      while (line instanceof LineWidget) {\n        if (paragraph !== line.paragraph && line.indexInOwner === 0 && isListLayout) {\n          if (line.previousLine.isEndsWithColumnBreak) {\n            this.viewer.updateClientAreaForBlock(paragraph, true);\n            this.layoutListItems(line.paragraph);\n            this.viewer.updateClientAreaForBlock(paragraph, false);\n          } else {\n            this.layoutListItems(line.paragraph);\n          }\n        }\n        if (line.isFirstLine() && isNullOrUndefined(this.fieldBegin)) {\n          if (!isNullOrUndefined(paragraph.paragraphFormat)) {\n            var firstLineIndent = -HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n            this.viewer.updateClientWidth(firstLineIndent);\n          }\n        }\n        line.marginTop = 0;\n        //let bodyIndex: number = line.paragraph.bodyWidget.indexInOwner;\n        // if (!this.isInitialLoad && !this.isBidiReLayout && this.isContainsRtl(line)) {\n        //     this.reArrangeElementsForRtl(line, paragraph.paragraphFormat.bidi);\n        // }\n        line = this.layoutLine(line, 0);\n        // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n        //     line = undefined;\n        // }\n        // else {\n        paragraph = line.paragraph;\n        line = line.nextLine;\n        // }\n      }\n    }\n    this.updateWidgetToPage(this.viewer, paragraph);\n    paragraph.isLayouted = true;\n    // this.updateLinearIndex(paragraph);\n    paragraph.isFieldCodeBlock = false;\n    return paragraph;\n  };\n  Layout.prototype.clearLineMeasures = function () {\n    this.maxBaseline = 0;\n    this.maxTextBaseline = 0;\n    this.maxTextHeight = 0;\n  };\n  Layout.prototype.layoutFloatElements = function (paragraph) {\n    var _this = this;\n    paragraph.floatingElements.forEach(function (shape) {\n      if (shape instanceof ShapeBase && shape.textWrappingStyle !== 'Inline') {\n        if (!_this.isRelayoutOverlap) {\n          _this.layoutShape(shape);\n        }\n      }\n    });\n  };\n  Layout.prototype.layoutShape = function (element) {\n    if (element instanceof ShapeElementBox && element.isHorizontalRule) {\n      return;\n    }\n    if (element.textWrappingStyle !== 'Inline') {\n      var position = this.getFloatingItemPoints(element);\n      element.x = position.x;\n      element.y = position.y;\n      if (!element.paragraph.isInsideTable && element.paragraph.indexInOwner !== 0 && element.verticalPosition >= 0 && Math.round(element.paragraph.y) >= Math.round(element.y) && this.viewer.clientArea.bottom <= element.y + element.height && (element.verticalOrigin == \"Line\" || element.verticalOrigin == \"Paragraph\") && element.textWrappingStyle !== \"InFrontOfText\" && element.textWrappingStyle !== \"Behind\") {\n        this.moveToNextPage(this.viewer, element.line);\n        this.updateShapeBaseLocation(element.line.paragraph);\n      }\n      var bodyWidget = element.paragraph.bodyWidget;\n      if (bodyWidget.floatingElements.indexOf(element) === -1) {\n        bodyWidget.floatingElements.push(element);\n        /* eslint:disable */\n        bodyWidget.floatingElements.sort(function (a, b) {\n          return a.y - b.y;\n        });\n      }\n      if (element.paragraph.floatingElements.indexOf(element) === -1) {\n        element.paragraph.floatingElements.push(element);\n      }\n    } else {\n      if (element.width === 0 && element.widthScale !== 0) {\n        var containerWidth = HelperMethods.convertPointToPixel(element.line.paragraph.getContainerWidth());\n        element.width = containerWidth / 100 * element.widthScale;\n      }\n    }\n    var clientArea = this.viewer.clientArea;\n    var clientActiveArea = this.viewer.clientActiveArea;\n    if (element instanceof ShapeElementBox) {\n      var blocks = element.textFrame.childWidgets;\n      this.viewer.updateClientAreaForTextBoxShape(element, true);\n      for (var i = 0; i < blocks.length; i++) {\n        var block = blocks[i];\n        this.viewer.updateClientAreaForBlock(block, true);\n        if (block instanceof TableWidget) {\n          this.clearTableWidget(block, true, true);\n        }\n        this.layoutBlock(block, 0);\n        this.viewer.updateClientAreaForBlock(block, false);\n      }\n    }\n    this.viewer.clientActiveArea = clientActiveArea;\n    this.viewer.clientArea = clientArea;\n  };\n  Layout.prototype.moveElementFromNextLine = function (line) {\n    var nextLine = line.nextLine;\n    if (nextLine && !line.paragraph.bodyWidget.sectionFormat.equalWidth && line.paragraph.bodyWidget.columnIndex !== nextLine.paragraph.bodyWidget.columnIndex) {\n      nextLine = undefined;\n    }\n    while (nextLine instanceof LineWidget) {\n      if (nextLine.children.length > 0) {\n        var element = nextLine.children.splice(0, 1)[0];\n        line.children.push(element);\n        element.line = line;\n        break;\n      } else {\n        if (nextLine.paragraph.childWidgets.length === 1) {\n          nextLine.paragraph.destroy();\n        } else {\n          nextLine.paragraph.childWidgets.splice(nextLine.paragraph.childWidgets.indexOf(nextLine), 1);\n        }\n        nextLine = line.nextLine;\n      }\n    }\n  };\n  Layout.prototype.layoutLine = function (line, count) {\n    var paragraph = line.paragraph;\n    if (line.children.length === 0) {\n      this.moveElementFromNextLine(line);\n    }\n    var element = line.children[count];\n    var isNotEmptyField = true;\n    if (element instanceof FieldElementBox && line.children[line.children.length - 1] instanceof FieldElementBox) {\n      isNotEmptyField = false;\n      for (var i = 0; i < line.children.length; i++) {\n        if (line.children[i].fieldType == 2 && line.children[i].nextElement != undefined && !(line.children[i].nextElement instanceof FieldElementBox)) {\n          isNotEmptyField = true;\n          break;\n        }\n      }\n    }\n    this.clearLineMeasures();\n    line.marginTop = 0;\n    var bodyIndex = paragraph.bodyWidget.indexInOwner;\n    var lineIndex = line.indexInOwner;\n    while (element instanceof ElementBox) {\n      element.padding.left = 0;\n      if (!isNotEmptyField) {\n        this.layoutElement(element, paragraph, true);\n        isNotEmptyField = true;\n      } else {\n        this.layoutElement(element, paragraph);\n      }\n      line = element.line;\n      if (element instanceof TextElementBox) {\n        var textElement = element;\n        if (!isNullOrUndefined(textElement.errorCollection) && textElement.errorCollection.length > 0) {\n          textElement.ischangeDetected = true;\n        }\n      }\n      if (!this.isRTLLayout) {\n        var lineIndex_1 = paragraph.childWidgets.indexOf(element.line);\n        if (lineIndex_1 > 0 && this.hasFloatingElement) {\n          this.hasFloatingElement = false;\n          if (paragraph.bodyWidget.floatingElements.length > 0 && element instanceof TextElementBox && !(paragraph.containerWidget instanceof TableCellWidget)) {\n            element = paragraph.childWidgets[lineIndex_1].children[0];\n          }\n        } else {\n          this.hasFloatingElement = false;\n          if (this.is2013Justification && !isNullOrUndefined(this.nextElementToLayout) && !(!isNullOrUndefined(element.paragraph.containerWidget.containerShape) && element.paragraph.containerWidget.containerShape === this.nextElementToLayout)) {\n            element = this.nextElementToLayout;\n          } else {\n            // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner && !isNullOrUndefined(element.nextElement)) {\n            //     if (element.nextElement.line.children.indexOf(element.nextElement) !== element.nextElement.line.children.length - 1) {\n            //         element = undefined;\n            //     }\n            // }\n            // if (!isNullOrUndefined(element)) {\n            element = element.nextElement;\n            // }\n            if (element instanceof TextElementBox && element.text.indexOf(\" \") == 0 && element.text.length > 2) {\n              if (isNullOrUndefined(element.nextElement) && element.text.trim().length > 0) {\n                element.text = element.text.substring(1, element.text.length);\n                var elementIndex = element.line.children.indexOf(element);\n                element.line.children.splice(elementIndex, 1);\n                var textElement = new TextElementBox();\n                textElement.text = \" \";\n                textElement.line = element.line;\n                textElement.characterFormat.copyFormat(element.characterFormat);\n                // Copy revisions\n                if (element.revisions.length > 0) {\n                  for (var m = 0; m < element.revisions.length; m++) {\n                    var revision = element.revisions[m];\n                    textElement.revisions.push(revision);\n                    var rangeIndex = revision.range.indexOf(element);\n                    if (rangeIndex < 0) {\n                      revision.range.push(textElement);\n                    } else {\n                      revision.range.splice(rangeIndex, 0, textElement);\n                    }\n                  }\n                }\n                element.line.children.splice(elementIndex, 0, textElement);\n                element.line.children.splice(elementIndex + 1, 0, element);\n                element = textElement;\n              }\n            }\n          }\n          this.nextElementToLayout = undefined;\n        }\n      } else {\n        element = undefined;\n        this.isRTLLayout = false;\n      }\n    }\n    return line;\n  };\n  /* eslint-disable  */\n  Layout.prototype.layoutElement = function (element, paragraph, isEmptyField) {\n    if (element.isPageBreak && paragraph.isInHeaderFooter || element instanceof ShapeElementBox && element.isHorizontalRule) {\n      return;\n    }\n    var line = element.line;\n    var text = '';\n    var index = element.indexInOwner;\n    if (this.viewer.owner.editorModule && this.viewer.owner.editorHistoryModule && this.viewer.owner.editorHistoryModule.isRedoing && !isNullOrUndefined(element.paragraph.containerWidget.footNoteReference) && this.viewer.owner.enableTrackChanges && element.removedIds.length > 0) {\n      this.viewer.owner.editorModule.constructRevisionFromID(element, true);\n    }\n    if (element instanceof FieldElementBox) {\n      if (element.fieldType === 0) {\n        if (this.documentHelper.fields.indexOf(element) === -1) {\n          this.documentHelper.fields.push(element);\n        }\n        if (!isNullOrUndefined(element.formFieldData) && this.documentHelper.formFields.indexOf(element) === -1 && !this.isInsertFormField) {\n          this.documentHelper.formFields.push(element);\n        }\n      }\n      this.layoutFieldCharacters(element);\n      if (element.line.isLastLine() && isNullOrUndefined(element.nextNode) && !this.isFieldCode) {\n        this.moveToNextLine(line);\n      } else if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n        this.moveElementFromNextLine(line);\n        if (element.line.isLastLine() && isNullOrUndefined(element.nextNode) && !this.isFieldCode) {\n          if (element.fieldType !== 2 && isNullOrUndefined(element.fieldSeparator)) {\n            this.layoutEmptyLineWidget(paragraph, false, element.line);\n          }\n          this.moveToNextLine(line);\n        }\n      } else if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n        this.moveToNextLine(line);\n        if (line.paragraph.lastChild === line && !isNullOrUndefined(line.nextLine) && this.viewer.clientActiveArea.height >= 0) {\n          this.moveFromNextPage(line);\n        }\n      } else if (isEmptyField) {\n        var textHelper = this.documentHelper.textHelper.getHeight(paragraph.characterFormat);\n        element.height = textHelper.Height;\n      }\n      return;\n    }\n    if (element instanceof ListTextElementBox || this.isFieldCode || element instanceof BookmarkElementBox || element instanceof EditRangeEndElementBox || element instanceof EditRangeStartElementBox || element instanceof ContentControl || element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n      if (element instanceof BookmarkElementBox) {\n        if (element.bookmarkType === 0 && !this.documentHelper.bookmarks.containsKey(element.name)) {\n          this.documentHelper.bookmarks.add(element.name, element);\n          if (!isNullOrUndefined(element.properties)) {\n            var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n            if (element.paragraph.isInsideTable) {\n              var row = element.paragraph.associatedCell.ownerRow;\n              var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n              if (!isNullOrUndefined(cell)) {\n                cell.isRenderBookmarkStart = true;\n              }\n            }\n          }\n        } else if (element.bookmarkType === 1 && this.documentHelper.bookmarks.containsKey(element.name)) {\n          var bookmrkElement = this.documentHelper.bookmarks.get(element.name);\n          if (isNullOrUndefined(bookmrkElement.reference) || isNullOrUndefined(bookmrkElement.reference.paragraph) || isNullOrUndefined(bookmrkElement.reference.paragraph.bodyWidget)) {\n            bookmrkElement.reference = element;\n            element.reference = bookmrkElement;\n          }\n          if (isNullOrUndefined(bookmrkElement.properties)) {\n            if (!isNullOrUndefined(this.documentHelper.selection) && this.documentHelper.selection.isRenderBookmarkAtEnd(bookmrkElement.reference)) {\n              var cell = bookmrkElement.reference.paragraph.associatedCell;\n              cell.isRenderBookmarkEnd = true;\n            }\n          } else {\n            if (!isNullOrUndefined(element.paragraph.associatedCell)) {\n              var lastPara = this.documentHelper.selection.getLastParagraph(element.paragraph.associatedCell);\n              var lastLine = lastPara.lastChild;\n              if (!isNullOrUndefined(lastLine)) {\n                var lastElement = lastLine.children[lastLine.children.length - 1];\n                if (lastElement == element) {\n                  var columnLast = parseInt(element.reference.properties['columnLast']);\n                  var endRow = element.paragraph.associatedCell.ownerRow;\n                  var endCell = undefined;\n                  var cellIndex = columnLast;\n                  while (isNullOrUndefined(endCell) && cellIndex > -1) {\n                    endCell = endRow.getCellUsingColumnIndex(endRow.rowIndex, cellIndex);\n                    if (isNullOrUndefined(endCell)) {\n                      cellIndex--;\n                    }\n                  }\n                  if (!isNullOrUndefined(endCell)) {\n                    endRow.isRenderBookmarkEnd = true;\n                  }\n                }\n              }\n            }\n          }\n        } else if (element.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(element.name)) {\n          if (isNullOrUndefined(element.reference)) {\n            this.documentHelper.bookmarks.remove(element.name);\n          }\n          if (!isNullOrUndefined(element.properties)) {\n            var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n            if (element.paragraph.isInsideTable) {\n              var row = element.paragraph.associatedCell.ownerRow;\n              var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n              if (!isNullOrUndefined(cell)) {\n                cell.isRenderBookmarkStart = true;\n              }\n            }\n          }\n        }\n      }\n      if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n        if (element instanceof EditRangeStartElementBox && (this.documentHelper.owner.currentUser === element.user || element.group === \"Everyone\" && element.user === \"\")) {\n          if (element.columnFirst != -1 && element.columnLast != -1) {\n            var row = element.paragraph.associatedCell.ownerRow;\n            var cell = row.getCellUsingColumnIndex(row.rowIndex, element.columnFirst);\n            if (!isNullOrUndefined(cell)) {\n              cell.isRenderEditRangeStart = true;\n              row.editRangeID.add(element.editRangeId, element);\n            }\n          }\n        } else if (element instanceof EditRangeEndElementBox && (this.documentHelper.owner.currentUser === element.editRangeStart.user || element.editRangeStart.group === \"Everyone\" && element.editRangeStart.user === \"\")) {\n          if (element.editRangeStart.columnFirst != -1 && element.editRangeStart.columnLast != -1) {\n            var row = element.paragraph.associatedCell.ownerRow;\n            if (row.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n              var cell = row.getCellUsingColumnIndex(row.rowIndex, element.editRangeStart.columnFirst);\n              if (!isNullOrUndefined(cell)) {\n                if (cell.isRenderEditRangeStart) {\n                  cell.isRenderEditRangeEnd = true;\n                }\n              }\n            } else {\n              var table = element.paragraph.associatedCell.ownerTable;\n              for (var i = row.rowIndex - 1; i >= 0; i--) {\n                var previousRow = table.childWidgets[i];\n                if (previousRow.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n                  var previousCell = previousRow.getCellUsingColumnIndex(previousRow.rowIndex, element.editRangeStart.columnFirst);\n                  if (!isNullOrUndefined(previousCell)) {\n                    if (previousCell.isRenderEditRangeStart) {\n                      previousCell.isRenderEditRangeEnd = true;\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline' && paragraph.floatingElements.indexOf(element) == -1) {\n        if (element instanceof ShapeElementBox) {\n          if (paragraph.floatingElements.indexOf(element) === -1) {\n            paragraph.floatingElements.push(element);\n          }\n          if (paragraph.bodyWidget.floatingElements.indexOf(element) === -1) {\n            paragraph.bodyWidget.floatingElements.push(element);\n          }\n        }\n      }\n      if (element instanceof ContentControl && this.documentHelper.contentControlCollection.indexOf(element) === -1) {\n        if (element.type === 0) {\n          this.documentHelper.contentControlCollection.push(element);\n        } else if (element.type === 1) {\n          var endPage = element.paragraph.bodyWidget.page;\n          for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n            var cCStart = this.documentHelper.contentControlCollection[i];\n            var isInHeaderFooter = cCStart.line.paragraph.isInHeaderFooter;\n            // Link content control present in same header.\n            if (isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties && endPage === cCStart.line.paragraph.bodyWidget.page) {\n              element.reference = cCStart;\n              cCStart.reference = element;\n            } else if (!isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties) {\n              element.reference = cCStart;\n              cCStart.reference = element;\n            }\n          }\n        }\n      }\n      if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n        this.moveElementFromNextLine(line);\n      }\n      if (element.line.isLastLine() && isNullOrUndefined(element.nextElement)) {\n        if (this.hasValidElement(line.paragraph) && !paragraph.isContainsShapeAlone()) {\n          this.moveToNextLine(line);\n        } else if (!this.isInitialLoad && !this.hasValidElement(line.paragraph) && line.paragraph.paragraphFormat.bidi && line.paragraph.paragraphFormat.listFormat.listId !== -1) {\n          this.moveToNextLine(line);\n        } else {\n          this.layoutEmptyLineWidget(line.paragraph, false, line, false);\n        }\n      }\n      return;\n    }\n    if (element instanceof TextElementBox && element.characterFormat.highlightColor != \"NoColor\" && element.text.trim() != \"\" && element.text != element.text.trim()) {\n      var firstLine = paragraph.firstChild;\n      var lastLine = paragraph.lastChild;\n      if (!isNullOrUndefined(firstLine) && firstLine instanceof LineWidget && firstLine.children.length > 0 && element === firstLine.children[0]) {\n        HelperMethods.splitSpaceInTextElementBox(element, true);\n      }\n      if (!isNullOrUndefined(lastLine) && lastLine instanceof LineWidget && lastLine.children.length > 0 && element === lastLine.children[lastLine.children.length - 1]) {\n        HelperMethods.splitSpaceInTextElementBox(element, false);\n      }\n    }\n    var width = element.width;\n    if (element instanceof FieldTextElementBox && !this.isTocField(element.fieldBegin)) {\n      text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n      if (text !== '') {\n        element.text = text;\n      } else {\n        text = element.text;\n      }\n    } else if (element instanceof FootnoteElementBox) {\n      text = this.startAt(element, text);\n      if (text !== '') {\n        element.text = text;\n      }\n    } else if (element instanceof TextElementBox) {\n      // skip when cliked enter in first footnote element\n      if (!isNullOrUndefined(element.paragraph.containerWidget.footNoteReference) && element.line.isFirstLine() && element.paragraph.index === 0 && element.indexInOwner === 0 && !this.documentHelper.owner.editorModule.handleEnterKey) {\n        element.text = element.paragraph.containerWidget.footNoteReference.text;\n      }\n      this.checkAndSplitTabOrLineBreakCharacter(element.text, element);\n      //TODO: Need to update revision\n      // if (element.text.length > 1 && element.line.paragraph.bidi) {\n      //     let splittedText: string[] = this.splitTextByConsecutiveLtrAndRtl(element);\n      //     this.updateSplittedText(element, splittedText);\n      // }\n      text = element.text;\n    }\n    // Here field code width and height update need to skipped based on the hidden property.\n    if (element instanceof TextElementBox) {\n      // if (this.isRelayout) {\n      width = this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n      /*} else {\n          width = element.trimEndWidth;\n      }*/\n      if (element.text === '\\t') {\n        width = this.getTabWidth(paragraph, this.viewer, index, line, element);\n        element.width = width;\n      }\n      // As per MS word behavior, optional hyper Or column break is shown only when show paragraph mark properly is enabled\n      // We need to show this special character based on property `showHiddenMark`\n      else if (element.text === String.fromCharCode(31) || element.text === String.fromCharCode(14)) {\n        element.width = width = 0;\n      }\n    }\n    if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 && !(element instanceof ShapeElementBox && element.textWrappingStyle == 'Inline') && !(paragraph.containerWidget instanceof TextFrame && !(element instanceof CommentCharacterElementBox)) && !(paragraph.containerWidget instanceof TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof TextFrame)) {\n      this.adjustPosition(element, element.line.paragraph.bodyWidget);\n    }\n    if (this.viewer instanceof PageLayoutViewer && (element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline' || !(element instanceof ShapeElementBox)) && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n      if (element instanceof TextElementBox && (element.text !== '\\f' && element.text !== String.fromCharCode(14) || element.text === '\\f' && paragraph.isPageBreak() && this.documentHelper.compatibilityMode === 'Word2013') || !(element instanceof TextElementBox)) {\n        //let bodyIndex: number = line.paragraph.containerWidget.indexInOwner;\n        this.moveToNextPage(this.viewer, line);\n        // if (bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n        //     return;\n        // }\n      }\n      if (element instanceof FieldTextElementBox) {\n        this.updateFieldText(element);\n      }\n      if (element.previousElement && (element.previousElement instanceof ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline' || !(element.previousElement instanceof ShapeElementBox))) {\n        this.cutClientWidth(element.previousElement);\n      }\n    }\n    if (element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline') {\n      if (paragraph.floatingElements.indexOf(element) === -1) {\n        paragraph.floatingElements.push(element);\n      }\n      if (element.width > this.viewer.clientActiveArea.width) {\n        this.splitElementForClientArea(paragraph, element);\n        this.checkLineWidgetWithClientArea(line, element);\n      }\n      var is2013Justification = this.is2013Justification;\n      this.layoutShape(element);\n      this.is2013Justification = is2013Justification;\n    }\n    // tslint:disable-next-line:max-line-length\n    if (element instanceof FootnoteElementBox && (!element.isLayout || this.isLayoutWhole) && this.documentHelper.owner.layoutType === 'Pages') {\n      this.layoutFootEndNoteElement(element);\n    }\n    if (element instanceof FootnoteElementBox) {\n      if (this.isfootMove) {\n        this.moveToNextPage(this.viewer, element.line);\n        if (element.previousElement && (element.previousElement instanceof ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline' || !(element.previousElement instanceof ShapeElementBox))) {\n          this.cutClientWidth(element.previousElement);\n        }\n        this.isfootMove = false;\n      }\n      if (paragraph.paragraphFormat.keepWithNext && paragraph.paragraphFormat.keepLinesTogether && !(!element.isLayout || this.isLayoutWhole)) {\n        if (!isNullOrUndefined(paragraph.bodyWidget.page.footnoteWidget) && paragraph.bodyWidget.page.footnoteWidget.y !== 0 && paragraph.bodyWidget.page.footnoteWidget.y < this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height) {\n          var findDiff = this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - paragraph.bodyWidget.page.footnoteWidget.y;\n          this.viewer.clientActiveArea.height -= findDiff;\n        }\n      }\n    }\n    if (parseFloat(width.toFixed(4)) <= parseFloat(this.viewer.clientActiveArea.width.toFixed(4)) || !this.viewer.textWrap) {\n      //Fits the text in current line.\n      this.addElementToLine(paragraph, element);\n      if (isNullOrUndefined(element.nextElement) && !element.line.isLastLine()) {\n        var nextLine = element.line.nextLine;\n        var nextElement = nextLine.children[0];\n        if (nextElement instanceof TextElementBox && nextElement.text.indexOf(\" \") == 0) {\n          this.moveElementFromNextLine(line);\n        }\n      }\n      if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n        this.moveElementFromNextLine(line);\n      } else if (!element.line.isLastLine() && isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n        this.moveToNextLine(line);\n        if (line.paragraph.lastChild === line && this.viewer.clientActiveArea.height >= 0) {\n          this.moveFromNextPage(line);\n        }\n      }\n    } else if (element instanceof TextElementBox) {\n      if (element.text === '\\t') {\n        var currentLine = element.line;\n        var isElementMoved = false;\n        // Added the condition to check While the tab element width is greater then clientActiveArea width and while it was first element of line should not move to next line\n        if (element.indexInOwner !== 0 && element instanceof TabElementBox) {\n          isElementMoved = true;\n          this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element) - 1);\n        } else {\n          if (this.isWrapText && this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width === this.viewer.clientActiveArea.right) {\n            this.isWrapText = false;\n          }\n          this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element));\n        }\n        this.moveToNextLine(currentLine);\n        if (currentLine.paragraph.bodyWidget.floatingElements.length > 0 && isElementMoved) {\n          this.nextElementToLayout = element;\n          this.hasFloatingElement = true;\n          return;\n        } else {\n          // Recalculates tab width based on new client active area X position\n          element.width = this.getTabWidth(paragraph, this.viewer, index, element.line, element);\n          if (isElementMoved) {\n            this.addElementToLine(paragraph, element);\n            if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n              this.moveElementFromNextLine(element.line);\n            }\n          }\n        }\n      } else {\n        //Splits the text and arrange line by line, till end of text.\n        do {\n          line = element.line;\n          //Added the condition to skip line split while layouting dropDownFormField \n          if (!(element.previousElement instanceof FieldElementBox && element.previousElement.fieldType == 2 && !isNullOrUndefined(element.previousElement.fieldBeginInternal) && element.previousElement.fieldBeginInternal.formFieldData instanceof DropDownFormField)) {\n            this.splitTextForClientArea(line, element, element.text, element.trimEndWidth, element.characterFormat);\n          }\n          this.checkLineWidgetWithClientArea(line, element);\n          if (element instanceof FieldTextElementBox && !this.isInitialLoad) {\n            this.updateFieldText(element);\n          }\n          if (element.line !== line && !isNullOrUndefined(this.nextElementToLayout) && this.is2013Justification) {\n            return;\n          }\n        } while (element.line !== line && this.cutClientWidth(element));\n      }\n    } else {\n      do {\n        line = element.line;\n        this.splitElementForClientArea(paragraph, element);\n        this.checkLineWidgetWithClientArea(line, element);\n        if (element instanceof FieldTextElementBox) {\n          this.updateFieldText(element);\n        }\n      } while (element.line !== line && this.cutClientWidth(element, true));\n    }\n    var contentControl;\n    if (!isNullOrUndefined(element.nextNode) && element.nextNode instanceof ContentControl) {\n      contentControl = element.nextNode;\n    }\n    if ((text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) && !contentControl) {\n      var elementIndex = line.children.indexOf(element);\n      if (elementIndex > -1) {\n        this.addSplittedLineWidget(line, elementIndex);\n      }\n    }\n    if (element.line.isLastLine() && isNullOrUndefined(element.nextElement) || text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) {\n      if (this.isXPositionUpdated) {\n        this.isXPositionUpdated = false;\n        return;\n      }\n      this.moveToNextLine(element.line);\n      if (text === '\\v' && isNullOrUndefined(element.nextNode)) {\n        this.layoutEmptyLineWidget(paragraph, true, line, true);\n      } else if ((text === '\\f' || text === String.fromCharCode(14)) && this.viewer instanceof PageLayoutViewer && !(element.line.paragraph.containerWidget instanceof TableCellWidget)) {\n        var isRTLLayout = this.isRTLLayout;\n        this.isRTLLayout = false;\n        if (isNullOrUndefined(element.nextNode) || element.nextNode instanceof ContentControl) {\n          if (text === String.fromCharCode(14)) {\n            this.moveToNextPage(this.viewer, element.line.nextLine, false);\n            this.layoutEmptyLineWidget(element.line.nextLine.paragraph, false, element.line.nextLine, true);\n          } else {\n            this.moveToNextPage(this.viewer, element.line, true);\n          }\n        } else if (!isNullOrUndefined(element.line.nextLine)) {\n          this.moveToNextPage(this.viewer, element.line.nextLine, false);\n        }\n        this.isRTLLayout = isRTLLayout;\n      }\n    }\n    this.isXPositionUpdated = false;\n  };\n  /**\n  * @private\n  */\n  Layout.prototype.adjustPosition = function (element, bodyWidget) {\n    var clientArea = this.viewer.clientActiveArea;\n    var previousLeft = this.viewer.clientActiveArea.x;\n    var previousTop = this.viewer.clientActiveArea.y;\n    var previousWidth = this.viewer.clientActiveArea.width;\n    var adjustedRect = this.adjustClientAreaBasedOnTextWrap(element, new Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height));\n    this.viewer.clientActiveArea.width = adjustedRect.width;\n    //Updated element padding for wrapping.\n    // if (this.isWrapText) {\n    var wrapDiff = this.viewer.clientActiveArea.x - previousLeft;\n    // if (element.indexInOwner === 0 && element.line.isFirstLine()) {\n    //     wrapDiff -= HelperMethods.convertPointToPixel(element.line.paragraph.paragraphFormat.firstLineIndent);\n    // }\n    if (element.line.isFirstLine() && this.getFirstElement(element.line) === element && wrapDiff > 0) {\n      wrapDiff += HelperMethods.convertPointToPixel(element.line.paragraph.paragraphFormat.firstLineIndent);\n    }\n    element.padding.left = wrapDiff > 0 ? wrapDiff : 0;\n    if (previousWidth !== this.viewer.clientActiveArea.width) {\n      var wrapPos = new WrapPosition(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.width);\n      this.updateWrapPosition(wrapPos);\n    }\n    //this.isWrapText = false;\n    // }\n    if (this.viewer.clientActiveArea.width === 0) {\n      this.isWrapText = false;\n    }\n    if (this.isYPositionUpdated) {\n      if (element.line.isFirstLine()) {\n        if (!isNullOrUndefined(element.line.paragraph.associatedCell)) {\n          var previousRenderedWidget = element.line.paragraph.previousRenderedWidget;\n          if (!isNullOrUndefined(previousRenderedWidget)) {\n            element.line.paragraph.associatedCell.height += this.viewer.clientActiveArea.y - previousRenderedWidget.y + previousRenderedWidget.height;\n          } else {\n            element.line.paragraph.associatedCell.height += this.viewer.clientActiveArea.y - previousTop;\n          }\n        }\n        element.line.paragraph.y = this.viewer.clientActiveArea.y;\n      } else if (element.line.children[0] === element) {\n        element.line.marginTop += this.viewer.clientActiveArea.y - previousTop;\n      }\n      if (element.line.paragraph.containerWidget instanceof HeaderFooterWidget) {\n        element.line.paragraph.containerWidget.height += this.viewer.clientActiveArea.y - previousTop;\n      }\n      if (!(element instanceof ListTextElementBox)) {\n        this.isYPositionUpdated = false;\n      }\n    }\n  };\n  Layout.prototype.getFirstElement = function (line) {\n    for (var j = 0; j < line.children.length; j++) {\n      var element = line.children[j];\n      if (!(element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n        return element;\n      }\n    }\n    return undefined;\n  };\n  Layout.prototype.updateWrapPosition = function (wrapPos) {\n    for (var i = 0; i < this.wrapPosition.length; i++) {\n      var previousWrapPos = this.wrapPosition[i];\n      if (Math.abs(previousWrapPos.right - wrapPos.right) > 1) {\n        continue;\n      } else {\n        return;\n      }\n    }\n    this.wrapPosition.push(wrapPos);\n  };\n  Layout.prototype.isFirstitemInPage = function (element, yposition) {\n    if (!element.line.paragraph.isInHeaderFooter && Math.round(yposition) === this.viewer.clientArea.y) {\n      return true;\n    }\n    return false;\n  };\n  Layout.prototype.isTextFitBelow = function (rect, top, element) {\n    //TODO: After shape implementation.\n    return false;\n  };\n  Layout.prototype.isNeedToWrapForTopAndBottom = function (currWidgetOwnerPara, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n    if (currWidgetOwnerPara.isInsideTable && textWrappingStyle === \"TopAndBottom\" && !(floatingEntity instanceof TableWidget)) {\n      var floatingItemOwnerPara = floatingEntity.paragraph;\n      if (!isNullOrUndefined(floatingItemOwnerPara) && !isNullOrUndefined(floatingItemOwnerPara.associatedCell)) {\n        var isLayoutInCell = floatingItemOwnerPara.isInsideTable;\n        var floatingItemOwnerCell = floatingItemOwnerPara.associatedCell;\n        var currParaOwnerCell = currWidgetOwnerPara.associatedCell;\n        if (!isNullOrUndefined(floatingItemOwnerCell) && !isNullOrUndefined(currParaOwnerCell) && floatingItemOwnerCell !== currParaOwnerCell || !isLayoutInCell && this.documentHelper.compatibilityMode !== \"Word2013\") return false;\n      }\n    }\n    return wrapOwnerIndex !== wrapCollectionIndex && wrapItemIndex !== wrapCollectionIndex && textWrappingStyle === \"TopAndBottom\" && (rect.y >= textWrappingBounds.y && rect.y < textWrappingBounds.bottom || (rect.y + height > textWrappingBounds.y || this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity)) && rect.y + height < textWrappingBounds.bottom || rect.y < textWrappingBounds.y && rect.y + height > textWrappingBounds.bottom && textWrappingBounds.height > 0) && !(allowOverlap && (isTextRangeInTextBox || elementBox instanceof ImageElementBox && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap));\n  };\n  Layout.prototype.isNeedToWrapForSquareTightAndThrough = function (bodyWidget, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n    return bodyWidget.floatingElements.length > 0 && wrapOwnerIndex !== wrapCollectionIndex && wrapItemIndex !== wrapCollectionIndex && textWrappingStyle !== 'Inline' && textWrappingStyle !== 'Behind' && textWrappingStyle !== 'TopAndBottom' && textWrappingStyle !== 'InFrontOfText' && (Math.round(rect.y + height) > Math.round(textWrappingBounds.y) || this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity)) && Math.round(rect.y) < Math.round(textWrappingBounds.y + textWrappingBounds.height) && !(allowOverlap && (isTextRangeInTextBox || elementBox instanceof ImageElementBox && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap));\n  };\n  Layout.prototype.isNeedToWrapForSquareTightAndThroughForTable = function (container, table, wrapIndex, wrapItemIndex, wrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingElemnt, isInTextBox, rect, width, height) {\n    return container.floatingElements.length > 0 && wrapIndex !== wrapCollectionIndex && wrapItemIndex !== wrapCollectionIndex && wrappingStyle !== 'Inline' && wrappingStyle !== 'Behind' && wrappingStyle !== 'TopAndBottom' && wrappingStyle !== 'InFrontOfText' && (Math.round(rect.y + height) >= Math.round(textWrappingBounds.y) && Math.round(rect.y) < Math.round(textWrappingBounds.bottom)\n    //Checks whether the bottom of the table intersects with floating item.\n    || Math.round(rect.y + height) <= Math.round(textWrappingBounds.bottom) && Math.round(rect.y + height) >= Math.round(textWrappingBounds.y)) && !(allowOverlap && isInTextBox);\n  };\n  Layout.prototype.isNeedToWrapLeafWidget = function (pargaraph, elementBox) {\n    var IsNeedToWrap = true;\n    return pargaraph.bodyWidget.floatingElements.length > 0 && (IsNeedToWrap || pargaraph.associatedCell) && !(elementBox instanceof ShapeBase && (elementBox.textWrappingStyle === 'InFrontOfText' || elementBox.textWrappingStyle === 'Behind'));\n  };\n  Layout.prototype.getMinWidth = function (currTextRange, width, height, rect) {\n    var text = currTextRange.text;\n    var split = text.split(' ');\n    // Gets the minimum width from the text when it contains only empty space.\n    if (text !== '' && text.trim() === '' && currTextRange && currTextRange.line.paragraph && currTextRange.previousNode && currTextRange.nextNode && currTextRange.line.paragraph.isEmpty) {\n      split = [''];\n    }\n    // Initialized the text with additional empty string.\n    // It avoids the minimum width calculation from next sibling (GetNextTextRangeWidth).\n    var minwidth = this.documentHelper.textHelper.measureText(split[0], currTextRange.characterFormat, currTextRange.scriptType).Width;\n    //Need to layout the unicode characters (chinese) character by character.\n    // if (DrawingContext.IsUnicodeText(text)) {\n    //     minwidth = DrawingContext.MeasureTextRange(currTextRange, text[0].ToString()).Width;\n    // }\n    var nextSibling = this.getNextSibling(currTextRange);\n    if (split.length === 1 && nextSibling) {\n      var nextSiblingText = nextSibling.text;\n      minwidth += this.getNextTextRangeWidth(nextSibling, nextSiblingText, width, height, rect);\n    } // Add the minimum character width of that paragraph, if this text range is para mark\n    return minwidth;\n  };\n  Layout.prototype.getNextTextRangeWidth = function (nextSiblingTextRange, nextSiblingText, width, height, rect) {\n    var nextsibling = nextSiblingTextRange;\n    // if (nextSiblingTextRange instanceof WFootnote)\n    //     nextsibling = ((nextSiblingTextRange as IWidget).LayoutInfo as LayoutFootnoteInfoImpl).TextRange;\n    var sizeNext = new Rect(0, 0, 0, 0);\n    var isNextSiblingSizeNeedToBeMeasure = this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextSiblingTextRange, rect, width, height);\n    while (isNextSiblingSizeNeedToBeMeasure && this.isLeafWidgetNextSiblingIsTextRange(nextsibling) && width + sizeNext.width < rect.width) {\n      nextsibling = this.getNextSibling(nextsibling);\n      if (!this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextsibling, rect, width, height)) {\n        break;\n      }\n      nextSiblingText += nextsibling.text;\n    }\n    return sizeNext.width;\n  };\n  Layout.prototype.isLeafWidgetNextSiblingIsTextRange = function (textRange) {\n    var nextSiblingTextRange = this.getNextSibling(textRange);\n    if (nextSiblingTextRange && nextSiblingTextRange instanceof TextElementBox) {\n      return true;\n    }\n    return false;\n  };\n  Layout.prototype.isNextSibligSizeNeedToBeMeasure = function (sizeNext, nextSiblingwidget, rect, width, height) {\n    var text = null;\n    var nextSiblingTextRange = nextSiblingwidget;\n    if (nextSiblingTextRange) {\n      text = nextSiblingTextRange.text;\n      if (text.indexOf(' ') !== -1 || text.indexOf('-') !== -1 || text.indexOf('_') !== -1 && width + sizeNext.width + this.documentHelper.textHelper.measureText(text.split('-')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width < rect.width || nextSiblingTextRange.text === '\\t') {\n        var elementWidth = nextSiblingTextRange.width;\n        if (text !== text.split(' ')[0]) {\n          elementWidth = this.documentHelper.textHelper.measureText(text.split(' ')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n        }\n        if (width + sizeNext.width + elementWidth > rect.width && text.indexOf('-')) {\n          if (text !== text.split('-')[0] + '-') {\n            elementWidth = this.documentHelper.textHelper.measureText(text.split('-')[0] + '-', nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n          }\n        }\n        sizeNext.width += elementWidth;\n        return false;\n      } else {\n        if (nextSiblingTextRange.text.length > 0) {\n          var textInfo = this.documentHelper.textHelper.measureText(nextSiblingTextRange.text, nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType);\n          sizeNext.height += textInfo.Height;\n          sizeNext.width += textInfo.Width;\n        }\n      }\n    }\n    return true;\n  };\n  Layout.prototype.isNeedDoIntermediateWrapping = function (remainingClientWidth, textWrappingStyle, rect, width, paragraph, textWrappingBounds, leafWidget, minwidth, minimumWidthRequired) {\n    return remainingClientWidth > minimumWidthRequired && ((Math.round(rect.width) <= Math.round(minwidth) || rect.width < width && leafWidget.paragraph.isInsideTable) && textWrappingStyle !== 'Left' // Skip to update width when the wrap type as left\n    && textWrappingStyle !== 'Largest' || textWrappingStyle === 'Right' //To layout right side when the wrap type as right\n    || rect.width < remainingClientWidth && textWrappingStyle === 'Largest') // Check whether the right side width is greater than the left side when the wrap type as largest\n    || (Math.round(textWrappingBounds.x - paragraph.x + paragraph.leftIndent) < minimumWidthRequired // Check whether the left side of text wrap object is have minimum width to layout or not\n    || leafWidget instanceof TextElementBox && this.isFloatingItemOnLeft(rect, minwidth, textWrappingBounds)) && (textWrappingStyle !== 'Left' || remainingClientWidth < minimumWidthRequired);\n  };\n  Layout.prototype.isFloatingItemOnLeft = function (rect, minWidth, bounds) {\n    return false;\n  };\n  Layout.prototype.getNextSibling = function (currentElementBox) {\n    var nextSibling = currentElementBox.nextNode;\n    var isFieldCode = false;\n    while (nextSibling) {\n      if (nextSibling instanceof FieldElementBox || nextSibling instanceof BookmarkElementBox || isFieldCode || nextSibling instanceof ListTextElementBox) {\n        if (nextSibling instanceof FieldElementBox) {\n          if (nextSibling.fieldType === 0) {\n            isFieldCode = true;\n          } else if (nextSibling.fieldType === 2) {\n            isFieldCode = false;\n          }\n        }\n      } else if (nextSibling instanceof TextElementBox) {\n        break;\n      }\n      nextSibling = nextSibling.nextNode;\n    }\n    return nextSibling;\n  };\n  Layout.prototype.adjustClientAreaBasedOnTextWrap = function (elementBox, rect) {\n    var ownerPara = elementBox.line.paragraph;\n    var bodyWidget = ownerPara.bodyWidget;\n    var yValue = 0;\n    var layouter = this.viewer;\n    var yposition = rect.y;\n    var isFirstItem = this.isFirstitemInPage(elementBox, yposition);\n    if (isFirstItem) {\n      yValue = yposition;\n    }\n    isFirstItem = isNullOrUndefined(ownerPara.previousWidget);\n    //Update Layout area based on text wrap\n    if (this.isNeedToWrapLeafWidget(ownerPara, elementBox)) {\n      var clientLayoutArea = layouter.clientArea;\n      //Need to handle sorting floating items.\n      // Sort based on Y position\n      bodyWidget.floatingElements.sort(function (a, b) {\n        return a.y - b.y;\n      });\n      // Sort based on X position\n      bodyWidget.floatingElements.sort(function (a, b) {\n        return a.x - b.x;\n      });\n      for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n        var floatingItem = bodyWidget.floatingElements[i];\n        var allowOverlap = false;\n        if (floatingItem instanceof ShapeBase) {\n          allowOverlap = floatingItem.allowOverlap;\n        } else {\n          allowOverlap = floatingItem.positioning.allowOverlap;\n        }\n        if (ownerPara.isInsideTable) {\n          if (floatingItem instanceof TableWidget && !floatingItem.isInsideTable) {\n            continue;\n          }\n        }\n        if (this.isRelayout && !this.isRelayoutOverlap && this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof TableWidget ? floatingItem : floatingItem.line.paragraph, elementBox.line.paragraph) || this.isRelayout && this.isRelayoutOverlap && this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof TableWidget ? floatingItem : floatingItem.line.paragraph, this.endOverlapWidget)) {\n          continue;\n        }\n        // if (ownerPara.isInsideTable && allowOverlap\n        //     && (ownerPara.associatedCell.ownerTable.positioning.allowOverlap))\n        // {\n        //     WParagraph ownerParagraph = (m_lcOperator as Layouter).FloatingItems[i].OwnerParagraph;\n        //     if (!(ownerParagraph !== null\n        //         && ownerParagraph.IsInCell\n        //         && ownerPara.GetOwnerEntity() === ownerParagraph.GetOwnerEntity()))\n        //     {\n        //         continue;\n        //     }\n        // }\n        var xPosition = floatingItem.x;\n        var distanceLeft = 0;\n        var distanceTop = 0;\n        var distanceRight = 0;\n        var distanceBottom = 0;\n        var width = 0;\n        if (floatingItem instanceof ShapeBase) {\n          distanceLeft = floatingItem.distanceLeft;\n          distanceTop = floatingItem.distanceTop;\n          distanceRight = floatingItem.distanceRight;\n          distanceBottom = floatingItem.distanceBottom;\n          width = floatingItem.width;\n        } else {\n          width = floatingItem.getTableCellWidth();\n          distanceLeft = floatingItem.positioning.distanceLeft;\n          distanceTop = floatingItem.positioning.distanceTop;\n          distanceRight = floatingItem.positioning.distanceRight;\n          distanceBottom = floatingItem.positioning.distanceBottom;\n        }\n        var textWrappingBounds = new Rect(floatingItem.x - distanceLeft, floatingItem.y - distanceTop, width + distanceLeft + distanceRight, floatingItem.height + distanceTop + distanceBottom);\n        var textWrappingStyle = floatingItem instanceof TableWidget ? 'Square' : floatingItem.textWrappingStyle;\n        var textWrappingType = floatingItem instanceof TableWidget ? 'Both' : floatingItem.textWrappingType;\n        //  //Need to skip the wrapping for line break when it is first item of corresponding paragraph and that paragraph contains First line indent as per Word 2010 and its lower version behavior.\n        //  if (IsLineBreakIntersectOnFloatingItem(leafWidget, textWrappingStyle, textWrappingBounds, rect, size, ownerPara))\n        //  continue;\n        var minimumWidthRequired = 24;\n        var bottom = layouter.clientArea.y + floatingItem.height;\n        // if (this.isNeedToWrapParaMarkToRightSide(elementBox, ownerPara, textWrappingBounds, bottom, layouter, this.viewer.clientArea, textWrappingType, minimumWidthRequired)) {\n        //     if (lineBreakPosition !== 0) {\n        //         this.viewer.clientArea.y = lineBreakPosition;\n        //         //m_layoutArea.UpdateBoundsBasedOnTextWrap(lineBreakPosition);\n        //     }\n        //     this.viewer.clientArea.x += textWrappingBounds.width;\n        //     //(LeafWidget as IWidget).LayoutInfo.IsLineBreak = false;\n        //     elementBox.height = 0;\n        //     elementBox.width = textWrappingBounds.width;\n        //     return;\n        // }\n        if (!(clientLayoutArea.x > textWrappingBounds.right + minimumWidthRequired || clientLayoutArea.right < textWrappingBounds.x - minimumWidthRequired)) {\n          if (this.isNeedToWrapForSquareTightAndThrough(bodyWidget, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n            var rightIndent = 0;\n            var leftIndent = 0;\n            var listLeftIndent = 0;\n            var firstLineIndent = HelperMethods.convertPointToPixel(elementBox.paragraph.paragraphFormat.firstLineIndent);\n            var paragraphLeftIndent = HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.leftIndent);\n            var paragarphRightIndent = HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.rightIndent);\n            firstLineIndent = elementBox.indexInOwner === 0 && elementBox.line.isFirstLine() && firstLineIndent > 0 ? firstLineIndent : 0;\n            var currTextRange = elementBox instanceof TextElementBox || elementBox instanceof ListTextElementBox ? elementBox : null;\n            var containerWidget = floatingItem instanceof TableWidget ? floatingItem.containerWidget : floatingItem.line.paragraph.containerWidget;\n            var isnewline = false;\n            if (elementBox.line.paragraph) {\n              //Right indent is considered only if the rect.X greater than the floating item's X position and\n              //Text wrapping style should not be left\n              if (rect.x >= textWrappingBounds.x && textWrappingType !== 'Left') {\n                rightIndent = paragarphRightIndent;\n              }\n              //Left indent is considered only if the rect.X less than the floating item's X position and\n              //Text wrapping style should not be right\n              if (rect.x < textWrappingBounds.x && textWrappingType !== 'Right') {\n                leftIndent = paragraphLeftIndent;\n              }\n              var listFormat = ownerPara.paragraphFormat.listFormat;\n              var listLevel = this.getListLevel(listFormat.list, listFormat.listLevelNumber);\n              if (rect.x === clientLayoutArea.x + paragraphLeftIndent && listFormat && listFormat.baseStyle && listLevel && listLevel.paragraphFormat.leftIndent !== 0) {\n                listLeftIndent = paragraphLeftIndent;\n                isnewline = true; // to denote the current line is new line of the paragraph\n              }\n            }\n            // if (this.isXPositionUpdated && textWrappingType === 'Both' && this.layoutState === 'Splitted') {\n            //     rect.width = bodyWidget.width - this.viewer.clientActiveArea.x;\n            //     rect.x = textWrappingBounds.right;\n            //     this.viewer.updateClientAreaForTextWrap(rect);\n            //     return rect;\n            // }\n            /* Since the Microsoft Word has different behavior to calculate minimum width required to fit a word to a side of Table,\n            the minimum width required changes based upon table border value and table alignment.\n            And this value even differ for different word version, such that 2013, will have different minimum required value, where all other version shares the same logic to calculate minimum width required */\n            var border = 0;\n            var isBorderValueZero = false;\n            var table = void 0;\n            var borderThickness = 0;\n            var tableHorizontalPosition = void 0;\n            if (floatingItem instanceof TableWidget) {\n              table = floatingItem;\n              tableHorizontalPosition = floatingItem.positioning.horizontalAlignment;\n              border = this.getMaximumRightCellBorderWidth(floatingItem);\n              isBorderValueZero = this.getDefaultBorderSpacingValue(border, isBorderValueZero, tableHorizontalPosition);\n              borderThickness = floatingItem.tableFormat.borders.left.lineWidth / 2;\n            }\n            // Skip to update when the wrap type as left\n            if (rect.x + borderThickness >= textWrappingBounds.x && rect.x < textWrappingBounds.right && textWrappingType !== 'Left')\n              // Skip to update when the wrap type as left\n              {\n                rect.width = rect.width - (textWrappingBounds.right - rect.x) - rightIndent;\n                this.isWrapText = true;\n                var isEntityFitInCurrentLine = true;\n                if (!isNullOrUndefined(table)) {\n                  minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n                }\n                //checks minimum width\n                if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || rect.width < elementBox.width && elementBox.text === '\\t' || textWrappingBounds.x < ownerPara.x + paragraphLeftIndent)\n                  // check whether the TextWrap X position is less than the paragraph X position\n                  {\n                    //TODO\n                    rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0);\n                    //checks minimum width of the single word\n                    var minwidth = 0;\n                    if (!isNullOrUndefined(currTextRange)) {\n                      minwidth = this.getMinWidth(elementBox, elementBox.width, elementBox.height, rect);\n                    } else {\n                      minwidth = elementBox.width;\n                    }\n                    if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                      if (isEntityFitInCurrentLine && textWrappingBounds.x - (ownerPara.x + ownerPara.leftIndent) > minimumWidthRequired && this.viewer.clientArea.right - textWrappingBounds.right > minimumWidthRequired) {\n                        rect.width = 0;\n                      } else {\n                        var topMarginValue = 0;\n                        //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                        //layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                        var isPositionsUpdated = false;\n                        //Check whether left side of current floating item has enoush place to fit current widget.\n                        //If it has, need to fit left side of the floating item, instead of moving to bottom.\n                        // if (layouter.clientArea.x + elementBox.width < floatingItem.x) {\n                        //     //Current item should preserve below to the floating item,which preserved left side of the floating item.\n                        //     //If left side has multiple items or none of items this may fail, need to handle this cases.\n                        //     let tempBounds: Rect = GetIntersectingItemBounds(floatingItem, yposition);\n                        //     if (tempBounds.bottom !== 0 && tempBounds.bottom <= textWrappingBounds.bottom) {\n                        //         rect.x = clientLayoutArea.x;\n                        //         rect.width = clientLayoutArea.width;\n                        //         rect.y = tempBounds.bottom + topMarginValue;\n                        //         rect.height = clientLayoutArea.bottom - tempBounds.bottom;\n                        //         this.isYPositionUpdated = true;\n                        //         isPositionsUpdated = true;\n                        //     }\n                        // }\n                        if (!isPositionsUpdated) {\n                          this.isYPositionUpdated = true;\n                          rect.width = this.viewer.clientArea.width;\n                          rect.height -= textWrappingBounds.bottom + topMarginValue - rect.y;\n                          rect.y = textWrappingBounds.bottom + topMarginValue;\n                        }\n                      }\n                      this.viewer.updateClientAreaForTextWrap(rect);\n                      this.isWrapText = false;\n                    } else {\n                      var xposition = rect.x;\n                      //TabsLayoutInfo tabsInfo = null;\n                      rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                      rect.width -= firstLineIndent;\n                      //When there is no space to fit the content in right, then update the y position.\n                      if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                        var topMarginValue = 0;\n                        this.isYPositionUpdated = true;\n                        rect.width = this.viewer.clientArea.width;\n                        rect.height -= textWrappingBounds.bottom + topMarginValue - rect.y;\n                        rect.y = textWrappingBounds.bottom + topMarginValue;\n                        rect.x = xposition;\n                      } else {\n                        // this.isXPositionUpdated = true;\n                      }\n                      this.viewer.updateClientAreaForTextWrap(rect); //\n                      // if (!(leafWidget is Break))\n                      // AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                      // if (leafWidget != null)\n                      //     tabsInfo = (leafWidget as ILeafWidget).LayoutInfo as TabsLayoutInfo;\n                      //if (tabsInfo == null) {\n                      //this.isWrapText = true;\n                      //this.viewer.updateClientAreaForTextWrap(rect);//\n                      // if (layouter.FloatingItems[i].FloatingEntity is WTable)\n                      // layouter.FloatingTableBottom = textWrappingBounds.Bottom;\n                      //}\n                    }\n                  } else {\n                  //Check whether the RightPositionOfTabStopInterSectingFloattingItems have the value or not.\n                  //if contains value means continue the layouting even x position exceeds the page right position.\n                  var xposition = rect.x;\n                  rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                  rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0) - firstLineIndent;\n                  //When there is no space to fit the content in right, then update the y position.\n                  if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                    var topMarginValue = 0;\n                    this.isYPositionUpdated = true;\n                    rect.width = this.viewer.clientArea.width;\n                    rect.height -= textWrappingBounds.bottom + topMarginValue - rect.y;\n                    rect.y = textWrappingBounds.bottom + topMarginValue;\n                    rect.x = xposition;\n                  }\n                  //else\n                  // this.isXPositionUpdated = true;\n                  // if (!(leafWidget is Break))\n                  //     AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                  // //Microsoft Word 2013 doesn't split text character by character, when current line has floating item.\n                  // if (ownerPara != null && ownerPara.Document.Settings.CompatibilityMode == CompatibilityMode.Word2013)\n                  //     layouter.m_canSplitbyCharacter = false;\n                  this.isWrapText = true;\n                  this.viewer.updateClientAreaForTextWrap(rect); //\n                }\n              } else if (textWrappingBounds.x >= rect.x && rect.right > textWrappingBounds.x) {\n              rect.width = textWrappingBounds.x - rect.x - rightIndent;\n              //Remaining right side width\n              var remainingClientWidth = this.viewer.clientArea.right - textWrappingBounds.right;\n              remainingClientWidth = remainingClientWidth > 0 ? remainingClientWidth : 0;\n              this.isWrapText = true;\n              var isUpdateClientArea = false;\n              //checks minimum width\n              var minwidth = 0;\n              if (!isNullOrUndefined(currTextRange)) {\n                minwidth = this.getMinWidth(currTextRange, elementBox.width, elementBox.height, rect);\n              } else {\n                minwidth = elementBox.width;\n              }\n              if (!isNullOrUndefined(table)) {\n                minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n              }\n              if (this.isNeedDoIntermediateWrapping(remainingClientWidth, textWrappingType, rect, elementBox.width, elementBox.paragraph, textWrappingBounds, elementBox, minwidth, minimumWidthRequired)) {\n                var leftMinimumWidthRequired = 24;\n                rect.width = remainingClientWidth;\n                this.isWrapText = true;\n                if (rect.x + minwidth > textWrappingBounds.x || textWrappingType === 'Right' || clientLayoutArea.x > textWrappingBounds.x - leftMinimumWidthRequired)\n                  //Update X position when the wrap type as largest or right or the minimum width + rect.X > wrap x position\n                  {\n                    rect.x = textWrappingBounds.right;\n                    // let listFormat: WListFormat = null;\n                    // let listLevel: WListLevel = null;\n                    // if (elementBox.line.isFirstLine\n                    //    && (listFormat = ownerPara.GetListFormatValue()) != null\n                    //    && listFormat.CurrentListStyle != null\n                    //    && (listLevel = ownerPara.GetListLevel(listFormat)) != null\n                    //    && listLevel.ParagraphFormat.LeftIndent != 0)\n                    // {\n                    //     float x = 0;\n                    //     float width = rect.Width;\n                    //     //Updates the paragraph firstline horizontal positions, such as first line indent and listtab value\n                    //     UpdateParaFirstLineHorizontalPositions(paragraphLayoutInfo, ownerPara, ref x, ref width);\n                    //     rect.X += (x + (float)paragraphLayoutInfo.Margins.Left);\n                    //     rect.Width -= (x + (float)paragraphLayoutInfo.Margins.Left);\n                    // }\n                    // this.isXPositionUpdated = true;\n                    // if (textWrappingStyle == TextWrappingStyle.Through\n                    //     && layouter.FloatingItems[i].IsDoesNotDenotesRectangle) {\n                    //     UpdateXposition(textWrappingBounds, i, ref rect, size, minwidth);\n                    // }\n                    if (rect.width > minwidth || textWrappingType === 'Right') {\n                      this.viewer.updateClientAreaForTextWrap(rect);\n                    } else if (rect.width < minwidth && elementBox.line.children[0] !== elementBox && textWrappingType === 'Both' && floatingItem instanceof ShapeBase) {\n                      this.viewer.updateClientAreaForTextWrap(rect);\n                      isUpdateClientArea = true;\n                    }\n                  }\n                if (rect.width < minimumWidthRequired && !(minwidth < remainingClientWidth && 'Tight' === textWrappingStyle) || rect.width < minwidth && Math.round(rect.right) === Math.round(this.viewer.clientArea.right) && textWrappingType === 'Both') {\n                  var rect1 = textWrappingBounds;\n                  if (Math.round(rect.x) === Math.round(bodyWidget.sectionFormat.leftMargin + ownerPara.paragraphFormat.leftIndent)) {\n                    //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                    var topMarginValue = 0;\n                    //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                    rect.y = rect1.bottom + topMarginValue;\n                    this.isYPositionUpdated = true;\n                    rect.width = this.viewer.clientArea.width;\n                    rect.height = rect.height - (rect1.height + topMarginValue);\n                    this.viewer.updateClientAreaForTextWrap(rect);\n                    this.isWrapText = false;\n                  }\n                  // Reset the rectangle position when the rectangle right position is equialent to layout area right position\n                  else if (!isUpdateClientArea && Math.round(rect.right) >= Math.round(this.viewer.clientArea.right) && textWrappingType === 'Both') {\n                    //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                    var topMarginValue = 0;\n                    // topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                    rect.y = rect1.bottom + topMarginValue;\n                    rect.width = this.viewer.clientArea.width;\n                    rect.height = rect.height - (rect1.height + topMarginValue);\n                    rect.x = this.viewer.clientArea.x + leftIndent;\n                    this.viewer.updateClientAreaForTextWrap(rect);\n                    // this.isXPositionUpdated = true;\n                    this.isYPositionUpdated = true;\n                    this.isWrapText = false;\n                  } else {\n                    rect.width = 0;\n                    this.viewer.updateClientAreaForTextWrap(rect);\n                  }\n                }\n              } else {\n                //While text intersecting with SQUARE type floating item and there is no space\n                //available to fit this text in current line then move the text to bottom\n                //of the floating item and this behavior is applicable only for Word 2013.\n                //Lower versions split the text character by character.\n                if ((elementBox.line.isFirstLine() && elementBox.indexInOwner === 0 || remainingClientWidth === 0 && elementBox.line.children[0] === elementBox) && textWrappingStyle === 'Square' && Math.round(rect.width) <= Math.round(minwidth) && ownerPara.containerWidget === containerWidget) {\n                  rect.x = clientLayoutArea.x;\n                  rect.y = textWrappingBounds.bottom;\n                  rect.width = clientLayoutArea.width;\n                  rect.height -= textWrappingBounds.bottom - rect.y;\n                  this.isYPositionUpdated = true;\n                } else if (Math.round(rect.width) <= Math.round(minwidth) && Math.round(rect.x - leftIndent) !== Math.round(this.viewer.clientArea.x)) {\n                  rect.width = 0;\n                }\n                this.viewer.updateClientAreaForTextWrap(rect); //\n              }\n            }\n            if (textWrappingType !== 'Both') {\n              this.isWrapText = false;\n            }\n          } else if (this.isNeedToWrapForTopAndBottom(ownerPara, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n            // if ((textWrappingStyle === TextWrappingStyle.Tight || textWrappingStyle === TextWrappingStyle.Through)\n            //     && !(this.getBaseEntity(layouter.floatingItems[i].floatingEntity) instanceof HeaderFooter)\n            //     && !layouter.floatingItems[i].isDoesNotDenotesRectangle) {\n            //     //Gets the exact tight and throught floatting item's bottom position.\n            //     let floattingItemBottomPosition = this.getFloattingItemBottom(layouter.floatingItems[i].floatingEntity, textWrappingBounds.bottom);\n            //     textWrappingBounds = this.getBottomPositionForTightAndThrough(floattingItemBottomPosition, textWrappingBounds, ownerPara, rect.y, size.height);\n            // }\n            //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n            var topMarginValue = 0;\n            // topMarginValue = this.getTopMarginValueForFloatingTable(ownerPara,\n            //     layouter.floatingItems[i].floatingEntity, rect.y);\n            //previous floating item y position.\n            var prevY = rect.y;\n            rect.y = textWrappingBounds.bottom + topMarginValue;\n            this.isYPositionUpdated = true;\n            //Updating the rectangle height by reducing the previous floating item's y from the current floating item's bottom.\n            rect.height = rect.height - (textWrappingBounds.bottom - prevY + topMarginValue);\n            //Update the before spacing value once sets the floating item bottom position as paragraph y position\n            if (rect.y !== yposition && elementBox instanceof TextElementBox && !(floatingItem instanceof TableWidget) && elementBox.line.isFirstLine()) {\n              rect.y += elementBox.margin.top;\n              yposition = rect.y;\n            }\n            this.viewer.updateClientAreaForTextWrap(rect);\n          }\n        }\n      }\n    }\n    return rect;\n  };\n  Layout.prototype.adjustClientAreaBasedOnTextWrapForTable = function (table, rect) {\n    //let ownerPara: ParagraphWidget = elementBox.line.paragraph;\n    if (isNullOrUndefined(table.containerWidget) || isNullOrUndefined(table.bodyWidget)) {\n      return rect;\n    }\n    var bodyWidget = table.bodyWidget;\n    var yValue = 0;\n    var layouter = this.viewer;\n    var yposition = rect.y;\n    var isFirstItem = isNullOrUndefined(table.previousWidget);\n    if (isFirstItem) {\n      yValue = yposition;\n    }\n    if (bodyWidget.floatingElements.length > 0) {\n      var clientLayoutArea = layouter.clientActiveArea;\n      bodyWidget.floatingElements.sort(function (a, b) {\n        return a.y - b.y;\n      });\n      bodyWidget.floatingElements.sort(function (a, b) {\n        return a.x - b.x;\n      });\n      for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n        var floatingElement = bodyWidget.floatingElements[i];\n        var allowOverlap = false;\n        if (floatingElement instanceof ShapeBase) {\n          allowOverlap = floatingElement.allowOverlap;\n        } else {\n          allowOverlap = floatingElement.positioning.allowOverlap;\n        }\n        if (table.isInsideTable) {\n          if (floatingElement instanceof TableWidget && !floatingElement.isInsideTable) {\n            continue;\n          }\n        }\n        if (floatingElement instanceof TableWidget && floatingElement.wrapTextAround && floatingElement.positioning.allowOverlap) {\n          if (table.wrapTextAround && table.positioning.allowOverlap) {\n            continue;\n          }\n        }\n        var tableWidth = table.getTableCellWidth();\n        var isShape = floatingElement instanceof ShapeBase;\n        var distanceLeft = isShape ? floatingElement.distanceLeft : floatingElement.positioning.distanceLeft;\n        var distanceTop = isShape ? floatingElement.distanceTop : floatingElement.positioning.distanceTop;\n        var distanceRight = isShape ? floatingElement.distanceRight : floatingElement.positioning.distanceRight;\n        var distanceBottom = isShape ? floatingElement.distanceBottom : floatingElement.positioning.distanceBottom;\n        var width = isShape ? floatingElement.width : floatingElement.getTableCellWidth();\n        var wrappingBounds = new Rect(floatingElement.x - distanceLeft, floatingElement.y - distanceTop, width + distanceLeft + distanceRight, floatingElement.height + distanceTop + distanceBottom);\n        var textWrappingStyle = floatingElement instanceof TableWidget ? 'Square' : floatingElement.textWrappingStyle;\n        var textWrappingType = floatingElement instanceof TableWidget ? 'Both' : floatingElement.textWrappingType;\n        var minimumWidthRequired = 24;\n        var tableHeight = table.childWidgets.length > 0 ? table.childWidgets[0].rowFormat.height : 0;\n        var lastNestedTable = this.getNestedTable(table);\n        var characterFormat = lastNestedTable.firstChild.firstChild.firstChild.characterFormat;\n        var size = this.documentHelper.textHelper.measureText(\" \", characterFormat);\n        if (tableHeight < size.Height) {\n          tableHeight = size.Height;\n        }\n        if (!(clientLayoutArea.x > wrappingBounds.right + minimumWidthRequired || clientLayoutArea.right < wrappingBounds.x - minimumWidthRequired)) {\n          if (this.isNeedToWrapForSquareTightAndThroughForTable(bodyWidget, table, -1, -1, textWrappingStyle, wrappingBounds, allowOverlap, 1, floatingElement, false, rect, tableWidth, tableHeight)) {\n            // Skip to update when the wrap type as left\n            if (rect.x >= wrappingBounds.x && rect.x < wrappingBounds.right && textWrappingType !== 'Left')\n              // Skip to update when the wrap type as left\n              {\n                rect.width = rect.width - (wrappingBounds.right - rect.x);\n                this.isWrapText = true;\n                var isEntityFitInCurrentLine = true;\n                if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || rect.width < tableWidth || wrappingBounds.x < table.x)\n                  // check whether the TextWrap X position is less than the paragraph X position\n                  {\n                    rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                    var minwidth = tableWidth;\n                    if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                      if (isEntityFitInCurrentLine && wrappingBounds.x - table.x > minimumWidthRequired && this.viewer.clientArea.right - wrappingBounds.right > minimumWidthRequired) {\n                        rect.width = 0;\n                      } else {\n                        var topMarginValue = 0;\n                        var isPositionsUpdated = false;\n                        if (!isPositionsUpdated) {\n                          this.isYPositionUpdated = true;\n                          rect.width = this.viewer.clientArea.width;\n                          rect.height -= wrappingBounds.bottom + topMarginValue - rect.y;\n                          rect.y = wrappingBounds.bottom + topMarginValue;\n                        }\n                      }\n                      this.viewer.updateClientAreaForTextWrap(rect);\n                      this.isWrapText = false;\n                    } else {\n                      var xposition = rect.x;\n                      //TabsLayoutInfo tabsInfo = null;\n                      rect.x = wrappingBounds.right;\n                      //When there is no space to fit the content in right, then update the y position.\n                      if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                        var marginTop = 0;\n                        this.isYPositionUpdated = true;\n                        rect.height -= wrappingBounds.bottom + marginTop - rect.y;\n                        rect.width = this.viewer.clientArea.width;\n                        rect.y = wrappingBounds.bottom + marginTop;\n                        rect.x = xposition;\n                      }\n                      this.viewer.updateClientAreaForTextWrap(rect); //\n                    }\n                  } else {\n                  var xposition = rect.x;\n                  rect.x = wrappingBounds.right + table.firstChild.firstChild.leftMargin;\n                  rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                  //When there is no space to fit the content in right, then update the y position.\n                  if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                    var topMarginValue = 0;\n                    this.isYPositionUpdated = true;\n                    rect.width = this.viewer.clientArea.width;\n                    rect.height -= wrappingBounds.bottom + topMarginValue - rect.y;\n                    rect.y = wrappingBounds.bottom + topMarginValue;\n                    rect.x = xposition;\n                  }\n                  this.viewer.updateClientAreaForTextWrap(rect); //\n                }\n              }\n          }\n        }\n      }\n    }\n    return rect;\n  };\n  Layout.prototype.getNestedTable = function (tableWidget) {\n    var table = tableWidget;\n    while (table.firstChild.firstChild.firstChild instanceof TableWidget) {\n      table = table.firstChild.firstChild.firstChild;\n    }\n    return table;\n  };\n  Layout.prototype.startAt = function (element, text) {\n    if (element.footnoteType === 'Footnote') {\n      this.startat = element.paragraph.bodyWidget.sectionFormat.initialFootNoteNumber;\n      text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.footNoteNumberFormat, this.documentHelper.footnoteCollection.indexOf(element) + this.startat);\n    } else {\n      this.startat = element.paragraph.bodyWidget.sectionFormat.initialEndNoteNumber;\n      text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.endnoteNumberFormat, this.documentHelper.endnoteCollection.indexOf(element) + this.startat);\n    }\n    return text;\n  };\n  Layout.prototype.layoutFootEndNoteElement = function (element) {\n    this.isFootnoteContentChanged = true;\n    var footnote;\n    var positionchanged = false;\n    var footIndex = this.documentHelper.footnoteCollection.indexOf(element);\n    var insertIndex = 1;\n    this.islayoutFootnote = true;\n    var isFitted;\n    var clientArea = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n    var clientActiveArea = new Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n    var bodyWidget = element.paragraph.bodyWidget;\n    var isCreated = false;\n    var height = 0;\n    if (bodyWidget.page.footnoteWidget) {\n      for (var j = 0; j < bodyWidget.page.footnoteWidget.bodyWidgets.length; j++) {\n        insertIndex = bodyWidget.page.footnoteWidget.bodyWidgets.length;\n        var currentIndex = this.documentHelper.footnoteCollection.indexOf(bodyWidget.page.footnoteWidget.bodyWidgets[j].footNoteReference);\n        if (currentIndex > footIndex) {\n          if (currentIndex - footIndex === 1) {\n            insertIndex = j;\n            positionchanged = true;\n            break;\n          }\n        }\n      }\n    }\n    element.isLayout = true;\n    if (element.footnoteType === 'Footnote') {\n      if (bodyWidget.page.footnoteWidget && bodyWidget.page.footnoteWidget instanceof FootNoteWidget) {\n        footnote = bodyWidget.page.footnoteWidget;\n      } else {\n        isCreated = true;\n        footnote = new FootNoteWidget();\n        footnote.footNoteType = 'Footnote';\n        footnote.page = bodyWidget.page;\n        var newParagraph = new ParagraphWidget();\n        newParagraph.characterFormat = new WCharacterFormat();\n        newParagraph.paragraphFormat = new WParagraphFormat();\n        newParagraph.index = 0;\n        var lineWidget = new LineWidget(newParagraph);\n        newParagraph.childWidgets.push(lineWidget);\n        height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n        footnote.margin = new Margin(0, height, 0, 0);\n      }\n      this.isFootNoteLayoutStart = true;\n      if (isCreated) {\n        bodyWidget.page.footnoteWidget = footnote;\n      }\n      var body = element.bodyWidget;\n      this.viewer.updateClientArea(footnote, footnote.page);\n      this.viewer.clientArea.y = clientArea.y;\n      this.viewer.clientActiveArea.y = clientActiveArea.y;\n      for (var i = 0; i < element.bodyWidget.childWidgets.length; i++) {\n        var block = element.bodyWidget.childWidgets[i];\n        block.containerWidget = body;\n        body.page = bodyWidget.page;\n        body.sectionFormat = footnote.sectionFormat;\n        block.containerWidget.containerWidget = footnote;\n        this.viewer.updateClientAreaForBlock(block, true);\n        if (block instanceof TableWidget) {\n          this.clearTableWidget(block, true, true);\n        }\n        this.layoutBlock(block, 0);\n        height += block.height;\n        block.y = 0;\n        this.viewer.updateClientAreaForBlock(block, false);\n        body.height += block.height;\n      }\n      if (footnote.sectionFormat.columns.length > 1 && !(footnote.bodyWidgets.length === 0 && body.childWidgets.length <= 1 && body.childWidgets[0].childWidgets.length <= 1)) {\n        height = height / footnote.sectionFormat.numberOfColumns;\n      }\n      this.isFootNoteLayoutStart = false;\n      isFitted = false;\n      if (height >= clientActiveArea.height) {\n        this.isfootMove = true;\n      }\n      if (positionchanged) {\n        footnote.bodyWidgets.splice(insertIndex, 0, body);\n      } else {\n        footnote.bodyWidgets.push(body);\n      }\n      if (element.line.paragraph.isInsideTable) {\n        var table = this.getParentTable(element.line.paragraph.associatedCell.ownerTable);\n        if (isNullOrUndefined(table.footnoteElement)) {\n          table.footnoteElement = [];\n        }\n        if (table.footnoteElement.indexOf(element) == -1) {\n          table.footnoteElement.push(element);\n          this.layoutedFootnoteElement.push(element);\n        }\n      }\n      footnote.height += height;\n      isFitted = true;\n      this.viewer.clientActiveArea = clientActiveArea;\n      this.viewer.clientActiveArea.height -= height;\n      this.footnoteHeight += height;\n      this.viewer.clientArea = clientArea;\n    }\n    return isFitted;\n  };\n  Layout.prototype.layoutEndNoteElement = function () {\n    var totalPage = this.documentHelper.pages.length;\n    if (this.documentHelper.endnoteCollection.length > 0) {\n      var foot = void 0;\n      var endNote = void 0;\n      var isCreated = void 0;\n      var lastPage = this.documentHelper.pages[totalPage - 1];\n      var bodyWidget = lastPage.bodyWidgets[0];\n      var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n      if (this.viewer instanceof PageLayoutViewer && lastSection.sectionFormat.numberOfColumns > 1) {\n        var firstSection = this.getBodyWidget(lastSection, true);\n        this.splitBodyWidgetBasedOnColumn(firstSection);\n      }\n      for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n        foot = this.documentHelper.endnoteCollection[i];\n        if (bodyWidget.page.endnoteWidget instanceof FootNoteWidget && bodyWidget.page.endnoteWidget.footNoteType === 'Endnote') {\n          endNote = bodyWidget.page.endnoteWidget;\n        } else {\n          isCreated = true;\n          endNote = new FootNoteWidget();\n          endNote.footNoteType = 'Endnote';\n          endNote.page = bodyWidget.page;\n        }\n        var body = foot.bodyWidget;\n        body.page = endNote.page;\n        for (var j = 0; j < foot.bodyWidget.childWidgets.length; j++) {\n          var block = foot.bodyWidget.childWidgets[j];\n          block.containerWidget = body;\n          block.containerWidget.containerWidget = endNote;\n        }\n        if (endNote.bodyWidgets.indexOf(body) === -1) {\n          endNote.bodyWidgets.push(body);\n          body.sectionFormat = endNote.page.bodyWidgets[endNote.page.bodyWidgets.length - 1].sectionFormat;\n        }\n        if (isCreated) {\n          bodyWidget.page.endnoteWidget = endNote;\n        }\n      }\n      this.layoutfootNote(endNote);\n    }\n  };\n  Layout.prototype.hasValidElement = function (paragraph) {\n    var line = paragraph.firstChild;\n    if (line && !isNullOrUndefined(this.documentHelper.selection)) {\n      var elementBox = line.children[0];\n      while (elementBox) {\n        if (elementBox instanceof FieldElementBox) {\n          elementBox = this.documentHelper.selection.getNextValidElementForField(elementBox);\n          if (!isNullOrUndefined(elementBox) && !elementBox.line.paragraph.equals(paragraph)) {\n            return false;\n          }\n        }\n        if (elementBox instanceof TextElementBox || elementBox instanceof ImageElementBox) {\n          return true;\n        }\n        if (!isNullOrUndefined(elementBox)) {\n          elementBox = elementBox.nextNode;\n        }\n      }\n    }\n    return false;\n  };\n  Layout.prototype.updateFieldText = function (element) {\n    var text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n    if (text !== '') {\n      element.text = text;\n      this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n    }\n  };\n  Layout.prototype.checkLineWidgetWithClientArea = function (line, element) {\n    if (line !== element.line || element.line === line && isNullOrUndefined(element.nextElement) && !element.line.isLastLine()) {\n      this.moveToNextLine(line);\n      if (this.documentHelper.compatibilityMode !== 'Word2013' && this.isOverlapFloatTable) {\n        var table = void 0;\n        if (element.line.paragraph.previousRenderedWidget instanceof TableWidget && element.line.paragraph.previousRenderedWidget.wrapTextAround) {\n          table = element.line.paragraph.previousRenderedWidget;\n          this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        this.viewer.clientActiveArea.x += line.paragraph.leftIndent;\n        this.isOverlapFloatTable = false;\n      }\n      if (line !== element.line) {\n        this.isRTLLayout = false;\n      }\n    }\n    if (element.line !== line && this.viewer instanceof PageLayoutViewer && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n      this.moveToNextPage(this.viewer, element.line);\n    } else if (element.line === line && isNullOrUndefined(element.nextElement) && line.paragraph.lastChild === line && !line.isLastLine() && this.viewer.clientActiveArea.height >= 0) {\n      this.moveFromNextPage(line);\n    }\n  };\n  Layout.prototype.checkAndSplitTabOrLineBreakCharacter = function (text, element) {\n    var char = ['\\t', '\\v', '\\f'];\n    var index = HelperMethods.indexOfAny(text, char);\n    if (index > -1) {\n      var character = text[index];\n      if (character === '\\t' && text !== '\\t' || character === '\\v' && text !== '\\v' || character === '\\f' && text !== '\\f') {\n        this.splitByLineBreakOrTab(this.viewer, element, index, character);\n      }\n    }\n  };\n  Layout.prototype.moveFromNextPage = function (line) {\n    var nextLine = line.nextLine;\n    if (nextLine && line.paragraph.childWidgets.indexOf(nextLine) === -1) {\n      var splittedParagraph = nextLine.paragraph;\n      nextLine.paragraph.childWidgets.splice(nextLine.indexInOwner, 1);\n      line.paragraph.childWidgets.push(nextLine);\n      nextLine.paragraph = line.paragraph;\n      // this.updateLinearIndex(nextLine.paragraph);\n      if (splittedParagraph.childWidgets.length === 0) {\n        splittedParagraph.destroy();\n      } else {\n        //     this.updateLinearIndex(splittedParagraph);\n      }\n    }\n  };\n  Layout.prototype.cutClientWidth = function (currentElement, isNeedToLayoutShape) {\n    if (this.is2013Justification) {\n      return false;\n    }\n    this.clearLineMeasures();\n    var line = currentElement.line;\n    line.marginTop = 0;\n    var width = 0;\n    for (var i = 0; i < line.children.length; i++) {\n      var element = line.children[i];\n      if (isNeedToLayoutShape && element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline') {\n        this.layoutShape(element);\n      }\n      width += element.width;\n      if (currentElement === element) {\n        break;\n      }\n    }\n    var splitCurrentWidget = this.viewer.clientActiveArea.width - width < 0;\n    var paragarph = currentElement.line.paragraph;\n    var bodyWidget = paragarph.bodyWidget;\n    if (bodyWidget && bodyWidget.floatingElements.length > 0) {\n      this.hasFloatingElement = true;\n      this.isXPositionUpdated = true;\n      return false;\n    }\n    if (!splitCurrentWidget) {\n      this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + width);\n      if (currentElement.line.paragraph.paragraphFormat.textAlignment === 'Justify' && currentElement instanceof TextElementBox) {\n        this.splitTextElementWordByWord(currentElement);\n      }\n      if (isNullOrUndefined(currentElement.nextElement) && this.viewer.clientActiveArea.width > 0 && !currentElement.line.isLastLine()) {\n        this.moveElementFromNextLine(line);\n      }\n    } else if (currentElement.previousElement) {\n      this.cutClientWidth(currentElement.previousElement);\n    }\n    return splitCurrentWidget;\n  };\n  Layout.prototype.layoutFieldCharacters = function (element) {\n    if (element.fieldType === 0) {\n      if (!isNullOrUndefined(element.formFieldData) && this.isInitialLoad) {\n        this.checkAndUpdateFieldData(element);\n      }\n      if (!this.isFieldCode && (!isNullOrUndefined(element.fieldEnd) || element.hasFieldEnd)) {\n        if (this.documentHelper.fieldStacks.indexOf(element) === -1) {\n          this.documentHelper.fieldStacks.push(element);\n        }\n        if (this.isRelayout) {\n          var fieldCode = HelperMethods.trimEnd(this.documentHelper.selection.getFieldCode(element));\n          this.isIFfield = HelperMethods.startsWith(fieldCode, 'IF');\n        }\n        this.isFieldCode = true;\n        element.hasFieldEnd = true;\n      }\n    } else if (this.documentHelper.fieldStacks.length > 0) {\n      if (element.fieldType === 2) {\n        var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n        if (field.fieldSeparator === element && (!isNullOrUndefined(field.fieldEnd) || field.hasFieldEnd)) {\n          this.isFieldCode = false;\n        }\n      } else {\n        var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n        if (element === field.fieldEnd) {\n          this.documentHelper.fieldStacks.pop();\n          this.isFieldCode = false;\n          this.isIFfield = false;\n        }\n      }\n    }\n  };\n  Layout.prototype.checkAndUpdateFieldData = function (fieldBegin) {\n    if (fieldBegin.hasFieldEnd && !isNullOrUndefined(fieldBegin.fieldEnd)) {\n      if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n        var seperator = new FieldElementBox(2);\n        seperator.fieldBegin = fieldBegin;\n        seperator.fieldEnd = fieldBegin.fieldEnd;\n        seperator.line = fieldBegin.line;\n        fieldBegin.line.children.splice(fieldBegin.fieldEnd.indexInOwner, 0, seperator);\n        fieldBegin.fieldSeparator = seperator;\n        fieldBegin.fieldEnd.fieldSeparator = seperator;\n      }\n      var previousNode = fieldBegin.fieldEnd.previousNode;\n      if (previousNode instanceof FieldElementBox && previousNode.fieldType === 2) {\n        var formFieldData = fieldBegin.formFieldData;\n        if (formFieldData instanceof CheckBoxFormField) {\n          var checkBoxTextElement = new TextElementBox();\n          checkBoxTextElement.skipformFieldLength = true;\n          checkBoxTextElement.line = fieldBegin.line;\n          var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n          fieldBegin.line.children.splice(index, 0, checkBoxTextElement);\n          checkBoxTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n          if (formFieldData.checked) {\n            checkBoxTextElement.text = String.fromCharCode(9745);\n          } else {\n            checkBoxTextElement.text = String.fromCharCode(9744);\n          }\n          this.setCheckBoxFontSize(formFieldData, checkBoxTextElement.characterFormat);\n        } else if (formFieldData instanceof DropDownFormField) {\n          var dropDownTextElement = new TextElementBox();\n          dropDownTextElement.skipformFieldLength = true;\n          dropDownTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n          dropDownTextElement.line = fieldBegin.line;\n          if (formFieldData.dropdownItems.length > 0) {\n            dropDownTextElement.text = formFieldData.dropdownItems[formFieldData.selectedIndex];\n          } else {\n            dropDownTextElement.text = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n          }\n          var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n          fieldBegin.line.children.splice(index, 0, dropDownTextElement);\n        }\n      }\n    }\n  };\n  /**\n   * Set the checkbox font size\n   * @returns {void}\n   */\n  Layout.prototype.setCheckBoxFontSize = function (formFieldData, format) {\n    if (formFieldData.sizeType !== 'Auto') {\n      format.fontSize = formFieldData.size * CHECK_BOX_FACTOR;\n    } else {\n      format.fontSize = format.fontSize * CHECK_BOX_FACTOR;\n    }\n  };\n  Layout.prototype.layoutEmptyLineWidget = function (paragraph, isEmptyLine, line, isShiftEnter) {\n    this.clearLineMeasures();\n    var paraFormat = paragraph.paragraphFormat;\n    var subWidth = 0;\n    var whiteSpaceCount = 0;\n    isShiftEnter = isNullOrUndefined(isShiftEnter) ? false : isShiftEnter;\n    var borders = paraFormat.borders;\n    var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n    //Calculate line height and descent based on formatting defined in paragraph.\n    var paragraphMarkSize = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n    var maxHeight = paragraphMarkSize.Height;\n    var beforeSpacing = this.getBeforeSpacing(paragraph);\n    var lineWidget;\n    if (paragraph.childWidgets.length > 0 && !isShiftEnter) {\n      this.isUpdateMarginForCurrentLine(line);\n      lineWidget = paragraph.childWidgets[0];\n      if (lineWidget.children.length > 0) {\n        if (paraFormat.bidi || this.isContainsRtl(lineWidget)) {\n          this.shiftElementsForRTLLayouting(lineWidget, paraFormat.bidi);\n        }\n        var isParagraphStart = lineWidget.isFirstLine();\n        var isParagraphEnd = lineWidget.isLastLine();\n        var firstLineIndent = 0;\n        if (isParagraphStart) {\n          beforeSpacing = this.getBeforeSpacing(paragraph);\n          firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        var textAlignment = paraFormat.textAlignment;\n        if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd) || textAlignment === 'Justify' && paraFormat.bidi)) {\n          var getWidthAndSpace = this.getSubWidth(lineWidget, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n          subWidth = getWidthAndSpace[0].subWidth;\n          whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n        }\n      }\n    } else {\n      lineWidget = isEmptyLine ? this.addLineWidget(paragraph) : line;\n    }\n    if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 && !(paragraph.containerWidget instanceof TextFrame) && !(paragraph.containerWidget instanceof TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof TextFrame)) {\n      var elementBox = new TextElementBox();\n      elementBox.line = lineWidget;\n      lineWidget.children.push(elementBox);\n      elementBox.text = '¶';\n      elementBox.characterFormat = paragraph.characterFormat;\n      elementBox.width = this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n      this.adjustPosition(elementBox, paragraph.bodyWidget);\n      paragraph.x += elementBox.padding.left;\n      if (isEmptyLine) {\n        this.checkInbetweenShapeOverlap(lineWidget);\n      }\n      lineWidget.children.splice(elementBox.indexInOwner, 1);\n    }\n    //isNullOrUndefined(this.viewer.currentHeaderFooter) &&\n    if (this.viewer instanceof PageLayoutViewer && this.viewer.clientActiveArea.height < beforeSpacing + maxHeight && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y && !(lineWidget.isFirstLine() && isNullOrUndefined(lineWidget.paragraph.previousWidget)) && !paragraph.isSectionBreak) {\n      this.moveToNextPage(this.viewer, lineWidget);\n    }\n    //Gets line spacing.\n    var lineSpacing = this.getLineSpacing(paragraph, maxHeight);\n    //let maxDescent: number = maxHeight - paragraphMarkSize.BaselineOffset;\n    //Calculate the bottom position of current line - max height + line spacing.\n    if (!isNaN(this.maxTextHeight) && maxHeight < this.maxTextHeight) {\n      maxHeight = this.maxTextHeight;\n      //maxDescent = maxHeight - this.maxTextBaseline;\n    }\n    var topMargin = 0;\n    var bottomMargin = 0;\n    var leftMargin = 0;\n    var height = maxHeight;\n    var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n    if (lineSpacingType === 'Multiple') {\n      if (lineSpacing > maxHeight) {\n        bottomMargin += lineSpacing - maxHeight;\n      } else {\n        topMargin += lineSpacing - maxHeight;\n      }\n    } else if (lineSpacingType === 'Exactly') {\n      topMargin += lineSpacing - (topMargin + height + bottomMargin);\n    } else if (lineSpacing > topMargin + height + bottomMargin) {\n      topMargin += lineSpacing - (topMargin + height + bottomMargin);\n    }\n    topMargin += beforeSpacing;\n    bottomMargin += HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n    if (borders.top.lineStyle != 'None') {\n      if (lineWidget.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n        topMargin += HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n      }\n    }\n    if (borders.bottom.lineStyle != 'None') {\n      if (lineWidget.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n        bottomMargin += HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n      }\n    }\n    var renderedElements = lineWidget.renderedElements;\n    for (var i = 0; i < renderedElements.length; i++) {\n      var element = renderedElements[i];\n      if (i === 0 && element instanceof ListTextElementBox || paragraph.paragraphFormat.bidi && renderedElements[renderedElements.length - 1] instanceof ListTextElementBox) {\n        var textAlignment = paragraph.paragraphFormat.textAlignment;\n        if (textAlignment === 'Right') {\n          //Aligns the text as right justified.\n          leftMargin = subWidth;\n        } else if (textAlignment === 'Center') {\n          //Aligns the text as center justified.\n          leftMargin = subWidth / 2;\n        }\n        element.margin = new Margin(leftMargin, topMargin, 0, bottomMargin);\n        element.line = lineWidget;\n        lineWidget.height = topMargin + height + bottomMargin;\n        break;\n      }\n    }\n    lineWidget.margin = new Margin(0, topMargin, 0, bottomMargin);\n    lineWidget.height = topMargin + height + bottomMargin;\n    this.adjustPositionBasedOnTopAndBottom(lineWidget);\n    if (isNullOrUndefined(paragraph.nextRenderedWidget) && paragraph.isInsideTable && paragraph.previousRenderedWidget instanceof TableWidget && paragraph.childWidgets.length == 1) {\n      //Special behavior for empty cell mark after nested table, preserved with zero height by default.\n      //Empty line is displayed in cell for the last empty paragraph (Cell mark - last paragraph in cell) after a nested table.\n      lineWidget.height = 0;\n    }\n    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + lineWidget.height);\n    this.wrapPosition = [];\n    //Clears the previous line elements from collection.\n  };\n  Layout.prototype.isUpdateMarginForCurrentLine = function (line) {\n    var isUpdate = true;\n    if (!isNullOrUndefined(line) && !line.isFirstLine()) {\n      for (var i = 0; i < line.children.length; i++) {\n        if (!(line.children[i] instanceof EditRangeStartElementBox || line.children[i] instanceof EditRangeEndElementBox)) {\n          isUpdate = false;\n          break;\n        }\n      }\n      if (isUpdate) {\n        line.margin = new Margin(0, 0, 0, 0);\n      }\n    }\n  };\n  Layout.prototype.adjustPositionBasedOnTopAndBottom = function (lineWidget) {\n    if (!isNullOrUndefined(lineWidget.paragraph.bodyWidget) && !isNullOrUndefined(lineWidget.paragraph.bodyWidget.page.headerWidget) && lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements.length > 0 && lineWidget.paragraph === lineWidget.paragraph.bodyWidget.childWidgets[0] && lineWidget.indexInOwner === 0) {\n      //To check whether first para in the page overlaps with shape in Header.\n      this.checkInbetweenShapeOverlap(lineWidget, lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements);\n    }\n  };\n  Layout.prototype.layoutListItems = function (paragraph, isUpdatedList) {\n    if (!this.isFieldCode) {\n      if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat) && !isNullOrUndefined(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId)) && paragraph.paragraphFormat.listFormat.listLevelNumber >= 0 && paragraph.paragraphFormat.listFormat.listLevelNumber < 9 && !isUpdatedList) {\n        this.clearListElementBox(paragraph);\n        this.layoutList(paragraph, this.documentHelper);\n      } else if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId === -1) {\n        this.clearListElementBox(paragraph);\n      }\n    }\n  };\n  Layout.prototype.layoutList = function (paragraph, documentHelper) {\n    var list = documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n    var listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n    var currentListLevel = this.getListLevel(list, listLevelNumber);\n    if (isNullOrUndefined(currentListLevel) || isNullOrUndefined(currentListLevel.numberFormat)) {\n      return;\n    }\n    var lineWidget = paragraph.childWidgets[0];\n    if (isNullOrUndefined(lineWidget)) {\n      lineWidget = new LineWidget(paragraph);\n      paragraph.childWidgets.push(lineWidget);\n    }\n    var element = new ListTextElementBox(currentListLevel, false);\n    element.line = lineWidget;\n    if (currentListLevel.listLevelPattern === 'Bullet') {\n      element.text = currentListLevel.numberFormat;\n      this.updateListValues(list, listLevelNumber);\n    } else {\n      element.text = this.getListNumber(paragraph.paragraphFormat.listFormat);\n    }\n    if (currentListLevel.numberFormat === '') {\n      return;\n    }\n    this.viewer.updateClientWidth(-HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n    if (this.documentHelper.isIosDevice) {\n      var text = element.text;\n      text = text === String.fromCharCode(61623) ? String.fromCharCode(9679) : text === String.fromCharCode(61551) + String.fromCharCode(32) ? String.fromCharCode(9675) : text;\n      if (text !== element.text) {\n        element.text = text;\n      }\n    }\n    documentHelper.textHelper.updateTextSize(element, paragraph);\n    var moveToNextPage;\n    if (this.viewer instanceof PageLayoutViewer && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n      moveToNextPage = true;\n    }\n    this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n    var previousElement = element;\n    //Adds the text element to the line\n    lineWidget.children.splice(0, 0, element);\n    if (currentListLevel.followCharacter !== 'None') {\n      element = new ListTextElementBox(currentListLevel, true);\n      if (currentListLevel.followCharacter === 'Tab') {\n        element.text = '\\t';\n        var index = lineWidget.children.indexOf(element);\n        var tabWidth = this.getTabWidth(paragraph, this.viewer, index, lineWidget, element);\n        documentHelper.textHelper.updateTextSize(element, paragraph);\n        element.width = tabWidth;\n      } else {\n        element.text = ' ';\n        documentHelper.textHelper.updateTextSize(element, paragraph);\n      }\n      this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n      //Adds the tabSpace to the line\n      lineWidget.children.splice(1, 0, element);\n      element.line = lineWidget;\n    }\n    if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 && !(previousElement instanceof ShapeElementBox) && !(paragraph.containerWidget instanceof TextFrame)) {\n      this.adjustPosition(previousElement, previousElement.line.paragraph.bodyWidget);\n      if (this.isYPositionUpdated) {\n        if (this.viewer.clientActiveArea.width > previousElement.width + element.width) {\n          this.viewer.clientActiveArea.width -= previousElement.width + element.width;\n        }\n        this.isYPositionUpdated = false;\n      }\n    }\n    if (moveToNextPage) {\n      this.moveToNextPage(this.viewer, lineWidget, undefined, true);\n      this.cutClientWidth(element);\n      this.hasFloatingElement = false;\n      this.isXPositionUpdated = false;\n      return;\n    }\n    if (currentListLevel.followCharacter !== 'None') {\n      this.viewer.updateClientWidth(HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n    }\n  };\n  Layout.prototype.addBodyWidget = function (area, widget) {\n    var bodyWidget;\n    if (widget) {\n      bodyWidget = widget;\n    } else {\n      bodyWidget = new BodyWidget();\n    }\n    bodyWidget.width = area.width;\n    bodyWidget.x = area.x;\n    bodyWidget.y = area.y;\n    // this.addSectionInDictionary(this.viewer, section, bodyWidget);\n    return bodyWidget;\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.addListLevels = function (abstractList) {\n    for (var i = abstractList.levels.length; i < 9; i++) {\n      var listLevel = new WListLevel(abstractList);\n      var val = i % 3;\n      if (abstractList.levels[0].listLevelPattern === 'Bullet') {\n        listLevel.listLevelPattern = 'Bullet';\n        listLevel.numberFormat = val === 0 ? String.fromCharCode(61623) : val === 1 ? String.fromCharCode(61551) + String.fromCharCode(32) : String.fromCharCode(61607);\n        listLevel.characterFormat.fontFamily = listLevel.numberFormat === String.fromCharCode(61607) ? 'Wingdings' : 'Symbol';\n      } else {\n        listLevel.listLevelPattern = this.getListLevelPattern(val);\n        listLevel.numberFormat = '%' + (i + 1).toString() + '.';\n        listLevel.startAt = 1;\n        listLevel.restartLevel = i;\n      }\n      listLevel.paragraphFormat = new WParagraphFormat(undefined);\n      listLevel.paragraphFormat.leftIndent = 48 * (i + 1);\n      listLevel.paragraphFormat.firstLineIndent = -24;\n      abstractList.levels.push(listLevel);\n    }\n  };\n  Layout.prototype.addSplittedLineWidget = function (lineWidget, elementIndex, splittedElementBox) {\n    var index = elementIndex;\n    if (this.isWrapText) {\n      if (!isNullOrUndefined(splittedElementBox)) {\n        lineWidget.children.splice(index + 1, 0, splittedElementBox);\n        splittedElementBox.line = lineWidget;\n      }\n      return;\n    }\n    var columneBreak = false;\n    var paragraph = lineWidget.paragraph;\n    var movedElementBox = [];\n    var lineIndex = paragraph.childWidgets.indexOf(lineWidget);\n    if (!isNullOrUndefined(splittedElementBox)) {\n      movedElementBox.push(splittedElementBox);\n    }\n    var newLineWidget = undefined;\n    var previousElement = lineWidget.children[index];\n    if (previousElement instanceof CommentCharacterElementBox && previousElement.commentType === 0 && index != 0) {\n      index = index - 1;\n    } else if (previousElement.isColumnBreak && isNullOrUndefined(previousElement.nextNode)) {\n      columneBreak = true;\n    }\n    //Move Next element box to temp collection\n    for (var i = index + 1; i < lineWidget.children.length; i++) {\n      movedElementBox.push(lineWidget.children[i]);\n    }\n    if (movedElementBox.length > 0 || columneBreak) {\n      if (lineIndex === paragraph.childWidgets.length - 1) {\n        newLineWidget = new LineWidget(paragraph);\n      } else {\n        newLineWidget = paragraph.childWidgets[lineIndex + 1];\n      }\n      for (var j = 0; j < movedElementBox.length; j++) {\n        movedElementBox[j].line = newLineWidget;\n      }\n      if (movedElementBox.length > 0) {\n        lineWidget.children.splice(index + 1, lineWidget.children.length - 1);\n        if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n          lineWidget.layoutedElements.splice(index + 1, lineWidget.layoutedElements.length - 1);\n        }\n        newLineWidget.children = movedElementBox.concat(newLineWidget.children);\n      }\n      if (paragraph.childWidgets.indexOf(newLineWidget) === -1) {\n        paragraph.childWidgets.splice(lineIndex + 1, 0, newLineWidget);\n      }\n    }\n  };\n  Layout.prototype.addElementToLine = function (paragraph, element) {\n    if (!(element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n      if (this.isWrapText) {\n        this.isWrapText = false;\n        this.viewer.clientActiveArea.width = this.viewer.clientArea.right - this.viewer.clientActiveArea.x;\n      }\n      this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n    }\n    if (paragraph.paragraphFormat.textAlignment === 'Justify' && element instanceof TextElementBox) {\n      this.splitTextElementWordByWord(element);\n    }\n    if (element instanceof ImageElementBox) {\n      element.line.skipClipImage = !element.isInlineImage;\n    }\n  };\n  Layout.prototype.splitElementForClientArea = function (paragraph, element) {\n    //const line: LineWidget = element.line;\n    if (element.line.children.length > 0) {\n      var previousElement = element.previousElement;\n      var index = element.indexInOwner;\n      // if line widget contain only single image element box need to skip this from splitting\n      // else move element to next line\n      if (element.line.children.length > 1) {\n        if (previousElement && this.viewer.clientActiveArea.x !== this.viewer.clientArea.x) {\n          index -= 1;\n        }\n      }\n      this.addSplittedLineWidget(element.line, index);\n    }\n  };\n  Layout.prototype.splitByWord = function (lineWidget, paragraph, elementBox, text, width, characterFormat) {\n    var index = this.getSplitIndexByWord(this.viewer.clientActiveArea.width, text, width, characterFormat, elementBox.scriptType);\n    if (index > 0 && index < elementBox.length) {\n      var indexOf = lineWidget.children.indexOf(elementBox);\n      //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n      var splittedElementBox = new TextElementBox();\n      text = text.substring(index);\n      splittedElementBox.text = text;\n      if (text[0] === ' ') {\n        var prevLength = text.length;\n        text = HelperMethods.trimStart(text); //To trim white space at starting of the text.\n        index += prevLength - text.length;\n      }\n      splittedElementBox.characterFormat.copyFormat(elementBox.characterFormat);\n      splittedElementBox.width = this.documentHelper.textHelper.getWidth(splittedElementBox.text, characterFormat, splittedElementBox.scriptType);\n      splittedElementBox.trimEndWidth = splittedElementBox.width;\n      splittedElementBox.characterRange = elementBox.characterRange;\n      //splittedElementBox.revisions = splittedElementBox.revisions;\n      elementBox.text = elementBox.text.substr(0, index);\n      if (elementBox.text !== ' ' && HelperMethods.endsWith(elementBox.text) && characterFormat.bidi && elementBox.characterRange === CharacterRangeType.RightToLeft && !this.isWrapText) {\n        var textElement = this.spitTextElementByWhitespace(elementBox, characterFormat);\n        indexOf = lineWidget.children.indexOf(textElement);\n      }\n      elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, elementBox.characterFormat, elementBox.scriptType);\n      elementBox.trimEndWidth = this.documentHelper.textHelper.getWidth(HelperMethods.trimEnd(elementBox.text), elementBox.characterFormat, elementBox.scriptType);\n      if (elementBox.revisions.length > 0) {\n        this.updateRevisionForSplittedElement(elementBox, splittedElementBox, true);\n        splittedElementBox.isMarkedForRevision = elementBox.isMarkedForRevision;\n      }\n      splittedElementBox.height = elementBox.height;\n      splittedElementBox.baselineOffset = elementBox.baselineOffset;\n      this.splitErrorCollection(elementBox, splittedElementBox);\n      this.addSplittedLineWidget(lineWidget, indexOf, splittedElementBox);\n      this.addElementToLine(paragraph, elementBox);\n      if (elementBox.width === 0) {\n        lineWidget.children.splice(indexOf, 1);\n      }\n    }\n  };\n  Layout.prototype.spitTextElementByWhitespace = function (textElement, format) {\n    var lineWidget = textElement.line;\n    var indexOf = lineWidget.children.indexOf(textElement);\n    var text = textElement.text;\n    var elementBox = new TextElementBox();\n    var index = text.length - 1;\n    textElement.text = text.substring(0, index);\n    elementBox.text = text.substring(index);\n    elementBox.characterFormat.copyFormat(textElement.characterFormat);\n    elementBox.line = lineWidget;\n    elementBox.characterRange = CharacterRangeType.WordSplit;\n    elementBox.scriptType = FontScriptType.English;\n    elementBox.height = textElement.height;\n    elementBox.baselineOffset = textElement.baselineOffset;\n    elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, format, elementBox.scriptType);\n    lineWidget.children.splice(indexOf + 1, 0, elementBox);\n    if (textElement.revisions.length > 0) {\n      this.updateRevisionForSplittedElement(textElement, elementBox, index > 0, true);\n      elementBox.isMarkedForRevision = textElement.isMarkedForRevision;\n    }\n    return elementBox;\n  };\n  Layout.prototype.splitErrorCollection = function (elementBox, splittedBox) {\n    if (elementBox.errorCollection.length > 0) {\n      var errorCollection = [];\n      var ignoreItems = elementBox.ignoreOnceItems;\n      for (var i = 0; i < elementBox.errorCollection.length; i++) {\n        errorCollection.push(elementBox.errorCollection[i]);\n      }\n      for (var j = 0; j < elementBox.errorCollection.length; j++) {\n        var index = elementBox.text.indexOf(elementBox.errorCollection[j].text);\n        var textElement = elementBox.errorCollection[j];\n        if (index < 0) {\n          errorCollection.splice(0, 1);\n          splittedBox.errorCollection.push(textElement);\n        } else if (splittedBox.text.indexOf(textElement.text) > 0) {\n          splittedBox.errorCollection.push(textElement);\n        }\n      }\n      splittedBox.ignoreOnceItems = ignoreItems;\n      elementBox.ignoreOnceItems = [];\n      elementBox.errorCollection = errorCollection;\n    }\n  };\n  Layout.prototype.splitByCharacter = function (lineWidget, textElement, text, width, characterFormat) {\n    var paragraph = lineWidget.paragraph;\n    var atleastSpacing = paragraph.paragraphFormat.lineSpacingType === 'AtLeast' ? paragraph.paragraphFormat.afterSpacing : 0;\n    var index = this.getTextSplitIndexByCharacter(this.viewer.clientArea.width, this.viewer.clientActiveArea.width, text, width, characterFormat, textElement.scriptType);\n    // if the index is zero, no need to split text by character. so, we can avoid the empty text element creation.\n    if (index === 0 && textElement.previousNode instanceof ImageElementBox && textElement.previousNode.textWrappingType === \"Right\") {\n      return;\n    } else if (index === 0 && !isNullOrUndefined(textElement) && textElement.length > 0 && Math.max(textElement.height, atleastSpacing) <= this.viewer.clientArea.height && this.viewer.clientActiveArea.width === 0 && lineWidget.children.indexOf(textElement) === 0) {\n      //Eventhough, there is zero remaining client area width and fit atleast one character of word in a line only if there is no item fitted in same line.\n      index = 1;\n    }\n    var splitWidth = 0;\n    if (index < textElement.length) {\n      splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, index), characterFormat, textElement.scriptType);\n      text = text.substring(index);\n    }\n    if (splitWidth > this.viewer.clientActiveArea.width && textElement.indexInOwner > 0) {\n      this.addSplittedLineWidget(lineWidget, textElement.indexInOwner - 1);\n      return;\n    }\n    var indexOf = lineWidget.children.indexOf(textElement);\n    if (index < textElement.length) {\n      //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n      var splittedElement = new TextElementBox();\n      splittedElement.text = text;\n      splittedElement.errorCollection = textElement.errorCollection;\n      textElement.text = textElement.text.substr(0, index);\n      splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n      splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, characterFormat, splittedElement.scriptType);\n      splittedElement.trimEndWidth = splittedElement.width;\n      splittedElement.characterRange = textElement.characterRange;\n      textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, characterFormat, textElement.scriptType);\n      textElement.trimEndWidth = textElement.width;\n      splittedElement.height = textElement.height;\n      splittedElement.baselineOffset = textElement.baselineOffset;\n      lineWidget.children.splice(textElement.indexInOwner + 1, 0, splittedElement);\n      if (textElement.revisions.length > 0) {\n        this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0);\n        splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n      }\n      this.addElementToLine(paragraph, textElement);\n      this.addSplittedLineWidget(lineWidget, indexOf);\n      if (textElement.width === 0) {\n        lineWidget.children.splice(indexOf, 1);\n      }\n    } else {\n      //Adds the last text element on inline to line elements collection\n      this.addSplittedLineWidget(lineWidget, indexOf);\n      this.addElementToLine(paragraph, textElement);\n    }\n  };\n  Layout.prototype.updateRevisionForSplittedElement = function (item, splittedElement, isSplitted, isJustify) {\n    if (item.revisions.length > 0) {\n      for (var i = 0; i < item.revisions.length; i++) {\n        var currentRevision = item.revisions[i];\n        if (isSplitted) {\n          splittedElement.revisions.push(currentRevision);\n          var rangeIndex = currentRevision.range.indexOf(item);\n          if (rangeIndex < 0) {\n            currentRevision.range.push(splittedElement);\n          } else {\n            if (isJustify) {\n              currentRevision.range.splice(rangeIndex, 0, splittedElement);\n            } else {\n              currentRevision.range.splice(rangeIndex + 1, 0, splittedElement);\n            }\n          }\n        } else {\n          var rangeIndex = currentRevision.range.indexOf(item);\n          currentRevision.range.splice(rangeIndex, 1);\n          currentRevision.range.splice(rangeIndex, 0, splittedElement);\n          splittedElement.revisions.push(currentRevision);\n        }\n      }\n    }\n  };\n  Layout.prototype.splitTextElementWordByWord = function (textElement) {\n    var lineWidget = textElement.line;\n    var indexOf = lineWidget.children.indexOf(textElement);\n    var startIndex = indexOf;\n    var paddingLeft = textElement.padding.left;\n    textElement.padding.left = 0;\n    var text = textElement.text;\n    var format;\n    var characterUptoWs = text.trim().indexOf(' ');\n    if (characterUptoWs >= 0) {\n      lineWidget.children.splice(indexOf, 1);\n      format = textElement.characterFormat;\n      //const fontSize: number = format.fontSize;\n      var index = textElement.length - HelperMethods.trimStart(text).length; //Trim start\n      while (index < textElement.length) {\n        index = this.getTextIndexAfterSpace(text, index);\n        if (index === 0 || index === textElement.length) {\n          break;\n        }\n        if (index < textElement.length) {\n          var splittedElement = new TextElementBox();\n          var splittedText = text.substring(0, index);\n          text = text.substring(index);\n          if (text.substring(0, 1) === ' ') {\n            // start of the text is trimmed and its length is reduced from text length.\n            index += text.length - HelperMethods.trimStart(text).length;\n          }\n          splittedElement.text = splittedText;\n          splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n          splittedElement.line = lineWidget;\n          splittedElement.height = textElement.height;\n          splittedElement.baselineOffset = textElement.baselineOffset;\n          splittedElement.characterRange = textElement.characterRange;\n          lineWidget.children.splice(indexOf, 0, splittedElement);\n          if (textElement.revisions.length > 0) {\n            this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0, true);\n            splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n          }\n          if (splittedElement.text !== ' ' && HelperMethods.endsWith(splittedElement.text) && format.bidi && splittedElement.characterRange === CharacterRangeType.RightToLeft) {\n            var elementBox = this.spitTextElementByWhitespace(splittedElement, format);\n            indexOf = lineWidget.children.indexOf(elementBox);\n          }\n          splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, format, splittedElement.scriptType);\n          splittedElement.trimEndWidth = splittedElement.width;\n          textElement.text = text;\n          textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, textElement.characterFormat, textElement.scriptType);\n          textElement.trimEndWidth = textElement.width;\n          if (textElement.width === 0 && lineWidget.children.indexOf(textElement) !== -1) {\n            lineWidget.children.splice(lineWidget.children.indexOf(textElement), 1);\n          }\n          index = 0;\n          indexOf++;\n        }\n      }\n      textElement.text = text;\n      lineWidget.children.splice(indexOf, 0, textElement);\n    }\n    lineWidget.children[startIndex].padding.left = paddingLeft;\n  };\n  Layout.prototype.isSplitByHyphen = function (element, text) {\n    if (!isNullOrUndefined(element.previousElement)) {\n      if (element.previousElement instanceof TextElementBox || element.previousElement instanceof ListTextElementBox) {\n        var test = element.previousElement.text;\n        return text.substring(0, 1) === '-' && test.substring(test.length - 1, test.length) !== ' ';\n      }\n    }\n    return text.substring(0, 1) === '-';\n  };\n  Layout.prototype.splitTextForClientArea = function (lineWidget, element, text, width, characterFormat) {\n    var paragraph = lineWidget.paragraph;\n    var isSplitByWord = true;\n    var index = -1;\n    if (!(text.substring(0, 1) === ' ') && !this.isSplitByHyphen(element, text)) {\n      var textWidth = width;\n      var characterUptoWS = 0;\n      characterUptoWS = HelperMethods.trimEnd(text).indexOf(' ') + 1;\n      if (characterUptoWS == 0) {\n        characterUptoWS = HelperMethods.trimEnd(text).indexOf('-') + 1;\n      }\n      index = characterUptoWS;\n      //Checks whether text not starts with white space. If starts with white space, no need to check previous text blocks.\n      if (index > 0) {\n        textWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, index), characterFormat, element.scriptType);\n      }\n      if (this.viewer.clientActiveArea.width < textWidth && !this.documentHelper.textHelper.isUnicodeText(text, element.scriptType) && !this.isWordFittedByJustification(element, textWidth)) {\n        //Check and split the previous text elements to next line.\n        isSplitByWord = this.checkPreviousElement(lineWidget, lineWidget.children.indexOf(element));\n        if (isSplitByWord) {\n          //lineWidget = paragraph.childWidgets[paragraph.childWidgets.indexOf(lineWidget) + 1] as LineWidget;\n          //isSplitByWord = textWidth <= this.viewer.clientActiveArea.width;\n          return;\n        }\n      }\n    } else {\n      index = 1;\n    }\n    if (width <= this.viewer.clientActiveArea.width) {\n      //Fits the text in current line.\n      this.addElementToLine(paragraph, element);\n    } else if (isSplitByWord && (index > 0 || text.indexOf(' ') !== -1 || text.indexOf('-') !== -1)) {\n      this.splitByWord(lineWidget, paragraph, element, text, width, characterFormat);\n    } else {\n      this.splitByCharacter(lineWidget, element, text, width, characterFormat);\n    }\n  };\n  Layout.prototype.splitByLineBreakOrTab = function (viewer, span, index, spiltBy) {\n    // Splits tab character to separate SpanAdv\n    var inlineIndex = span.line.children.indexOf(span);\n    var value = span.text;\n    var remainder = value.substring(index);\n    var newSpan = spiltBy === '\\t' ? new TabElementBox() : new TextElementBox();\n    newSpan.line = span.line;\n    this.updateRevisionForSplittedElement(span, newSpan, true);\n    newSpan.characterFormat.copyFormat(span.characterFormat);\n    newSpan.characterRange = span.characterRange;\n    span.line.children.splice(inlineIndex + 1, 0, newSpan);\n    if (index > 0 && remainder.length === 1) {\n      newSpan.text = value.substring(index);\n      span.text = value.substring(0, index);\n    } else if (index > 0) {\n      newSpan.text = spiltBy;\n      var newText = new TextElementBox();\n      newText.line = span.line;\n      newText.text = value.substring(index + 1);\n      this.updateRevisionForSplittedElement(span, newText, true);\n      newText.characterFormat.copyFormat(span.characterFormat);\n      newText.characterRange = span.characterRange;\n      span.line.children.splice(inlineIndex + 2, 0, newText);\n      span.text = value.substring(0, index);\n    } else if (remainder !== '') {\n      newSpan.text = value.substring(index + 1);\n      span.text = spiltBy;\n    }\n  };\n  /* eslint-disable  */\n  Layout.prototype.moveToNextLine = function (line, isMultiColumnSplit, index) {\n    var paragraph = line.paragraph;\n    var paraFormat = paragraph.paragraphFormat;\n    var isParagraphStart = line.isFirstLine();\n    var isParagraphEnd = line.isLastLine();\n    var height = 0;\n    var maxDescent = 0;\n    var afterSpacing = 0;\n    var beforeSpacing = 0;\n    var lineSpacing = 0;\n    var firstLineIndent = 0;\n    var borders = paraFormat.borders;\n    this.updateLineWidget(line);\n    height = this.maxTextHeight;\n    maxDescent = height - this.maxTextBaseline;\n    var pageIndex = 0;\n    var skip2013Justification = false;\n    var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n    if (paragraph.bodyWidget && !(paragraph.bodyWidget instanceof HeaderFooterWidget)) {\n      pageIndex = this.documentHelper.pages.indexOf(paragraph.bodyWidget.page);\n    }\n    //Updates before spacing at the top of Paragraph first line.\n    if (isParagraphStart) {\n      beforeSpacing = this.getBeforeSpacing(paragraph, pageIndex);\n      firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n    }\n    //Updates after spacing at the bottom of Paragraph last line.\n    if (isParagraphEnd) {\n      afterSpacing = HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n    }\n    if (paraFormat.bidi || this.isContainsRtl(line)) {\n      this.shiftElementsForRTLLayouting(line, paraFormat.bidi);\n      // this.reArrangeElementsForRtl(line, paraFormat.bidi);\n      this.isRTLLayout = true;\n    }\n    if (isNaN(this.maxTextHeight)) {\n      //Calculate line height and descent based on formatting defined in paragraph.\n      var measurement = this.documentHelper.textHelper.measureText('a', paragraph.characterFormat);\n      height = measurement.Height;\n      maxDescent = height - measurement.BaselineOffset;\n    } else {\n      height = this.maxTextHeight;\n      maxDescent = height - this.maxTextBaseline;\n    }\n    // Gets line spacing.\n    lineSpacing = this.getLineSpacing(paragraph, height);\n    if ((line.skipClipImage || paragraph.paragraphFormat.lineSpacing >= 14 || lineSpacing < 0) && paraFormat.lineSpacingType === 'Exactly' && lineSpacing < maxDescent + this.maxBaseline) {\n      lineSpacing = maxDescent + this.maxBaseline;\n    }\n    var subWidth = 0;\n    var whiteSpaceCount = 0;\n    var getWidthAndSpace;\n    var textAlignment = paraFormat.textAlignment;\n    var totalSpaceCount = 0;\n    var trimmedSpaceWidth = 0;\n    // calculates the sub width, for text alignments - Center, Right, Justify.\n    // if the element is paragraph end and para bidi is true and text alignment is justify\n    // we need to calculate subwidth and add it to the left margin of the element.\n    if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd) || textAlignment === 'Justify' && paraFormat.bidi || this.is2013Justification && isParagraphEnd)) {\n      getWidthAndSpace = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n      subWidth = getWidthAndSpace[0].subWidth;\n      whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n      totalSpaceCount = getWidthAndSpace[0].totalSpaceCount;\n      trimmedSpaceWidth = getWidthAndSpace[0].trimmedSpaceWidth;\n      skip2013Justification = line.isEndsWithPageBreak || line.isEndsWithColumnBreak || line.isEndsWithLineBreak || line.paragraph.bidi || this.isRTLLayout;\n    }\n    if (!skip2013Justification && getWidthAndSpace && getWidthAndSpace.length === 1 && this.viewer.clientActiveArea.width > 0 && !isParagraphEnd && !this.is2013Justification && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013') {\n      var availableWidth = this.viewer.clientActiveArea.width;\n      var totalSpaceWidth = this.getTotalSpaceWidth(line);\n      var averageWidthOfSpace = totalSpaceWidth / totalSpaceCount;\n      var avgAvailableLineWidthForSpace = availableWidth / totalSpaceCount;\n      var diffFactor = avgAvailableLineWidthForSpace / averageWidthOfSpace * 100;\n      var widthForAdjustment = 0;\n      if (diffFactor <= 33) {\n        widthForAdjustment = totalSpaceWidth / 8;\n      } else {\n        widthForAdjustment = totalSpaceWidth / 4;\n      }\n      this.viewer.clientActiveArea.x -= widthForAdjustment;\n      this.viewer.clientActiveArea.width += widthForAdjustment;\n      this.is2013Justification = true;\n      if (isMultiColumnSplit) {\n        this.splitParagraphForMultiColumn(line, index);\n      } else {\n        this.moveElementFromNextLine(line);\n        this.nextElementToLayout = line.children[line.children.length - 1];\n      }\n      return;\n    } else {\n      if (this.is2013Justification && isParagraphEnd) {\n        if (subWidth > 0) {\n          subWidth = 0;\n          whiteSpaceCount = 0;\n        }\n      }\n      this.is2013Justification = false;\n      this.nextElementToLayout = undefined;\n    }\n    var addSubWidth = false;\n    var wrapIndex = 0;\n    var lineSpacingType = paraFormat.lineSpacingType;\n    var isStarted = false;\n    var children = line.renderedElements;\n    var maxElementHeight = 0;\n    var maxElementBottomMargin = 0;\n    var maxElementTopMargin = 0;\n    var elementLeft = this.viewer.clientArea.x;\n    for (var i = 0; i < children.length; i++) {\n      var topMargin = 0;\n      var bottomMargin = 0;\n      var leftMargin = 0;\n      var elementBox = children[i];\n      if (!isNullOrUndefined(getWidthAndSpace) && isStarted && elementBox.padding.left > 0 && getWidthAndSpace.length > wrapIndex + 1) {\n        var previousWidth = subWidth;\n        if (textAlignment === \"Justify\") {\n          previousWidth = subWidth * getWidthAndSpace[wrapIndex].spaceCount;\n        } else if (textAlignment === \"Center\") {\n          previousWidth = subWidth / 2;\n        }\n        elementBox.padding.left = elementBox.padding.left - previousWidth;\n        var subWidthInfo = getWidthAndSpace[++wrapIndex];\n        subWidth = subWidthInfo.subWidth;\n        whiteSpaceCount = subWidthInfo.spaceCount;\n      }\n      if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n        continue;\n      }\n      isStarted = true;\n      var alignElements = this.alignLineElements(elementBox, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, i === children.length - 1);\n      if (textAlignment === \"Justify\" && elementBox instanceof ShapeBase && elementBox.textWrappingStyle === 'Inline' && subWidth !== 0) {\n        elementBox.x = elementLeft;\n        if (elementBox instanceof ShapeElementBox) {\n          for (var i_3 = 0; i_3 < elementBox.textFrame.childWidgets.length; i_3++) {\n            var widget = elementBox.textFrame.childWidgets[i_3];\n            var indent = widget.bidi ? widget.rightIndent : widget.leftIndent;\n            widget.x = elementLeft + HelperMethods.convertPointToPixel(indent + elementBox.textFrame.marginLeft);\n          }\n        }\n      }\n      elementLeft += elementBox.width;\n      line.maxBaseLine = this.maxBaseline;\n      topMargin = alignElements.topMargin;\n      bottomMargin = alignElements.bottomMargin;\n      addSubWidth = alignElements.addSubWidth;\n      whiteSpaceCount = alignElements.whiteSpaceCount;\n      //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n      if (lineSpacingType === 'Multiple') {\n        if (lineSpacing > height) {\n          bottomMargin += lineSpacing - height;\n        } else {\n          topMargin += lineSpacing - height;\n        }\n      } else if (lineSpacingType === 'Exactly') {\n        topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n      } else if (lineSpacing > topMargin + elementBox.height + bottomMargin) {\n        topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n      }\n      if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0] && this.documentHelper.pages[pageIndex].sectionIndex === this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n        topMargin += 0;\n      } else {\n        topMargin += beforeSpacing;\n      }\n      if (borders.top.lineStyle != 'None') {\n        if (line.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n          topMargin += HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n        }\n      }\n      if (borders.bottom.lineStyle != 'None') {\n        if (line.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n          bottomMargin += HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n        }\n      }\n      bottomMargin += afterSpacing;\n      var previousElement = i > 0 ? children[i - 1] : undefined;\n      if (i === 0 || !(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') && previousElement instanceof ShapeBase && previousElement.textWrappingStyle !== 'Inline' && previousElement.indexInOwner < elementBox.indexInOwner || elementBox.padding.left > 0) {\n        line.height = topMargin + elementBox.height + bottomMargin;\n        if (textAlignment === 'Right' || textAlignment === 'Justify' && paraFormat.bidi && (isParagraphEnd || trimmedSpaceWidth < 0)) {\n          //Aligns the text as right justified and consider subwidth for bidirectional paragrph with justify.\n          if (trimmedSpaceWidth < 0) {\n            leftMargin = trimmedSpaceWidth;\n          } else {\n            leftMargin = subWidth;\n          }\n        } else if (textAlignment === 'Center') {\n          //Aligns the text as center justified.\n          if (subWidth < 0) {\n            leftMargin = subWidth;\n          } else {\n            leftMargin = subWidth / 2;\n          }\n        }\n      }\n      elementBox.margin = new Margin(leftMargin, topMargin, 0, bottomMargin);\n      elementBox.line = line;\n      if (maxElementHeight < elementBox.height) {\n        maxElementHeight = elementBox.height;\n        maxElementBottomMargin = elementBox.margin.bottom;\n        maxElementTopMargin = elementBox.margin.top;\n      }\n      if (elementBox instanceof ShapeElementBox && elementBox.textWrappingStyle === \"Inline\") {\n        if (i !== 0 || elementBox.margin.left > 0) {\n          var elementLeftMargin = children[0].margin.left;\n          elementBox.x += elementLeftMargin;\n          for (var i_4 = 0; i_4 < elementBox.textFrame.childWidgets.length; i_4++) {\n            var widget = elementBox.textFrame.childWidgets[i_4];\n            if (widget instanceof TableWidget) {\n              widget.updateChildWidgetLeft(widget.x + elementLeftMargin, true);\n            } else {\n              widget.x += elementLeftMargin;\n            }\n          }\n        }\n        this.updateShapeYPosition(elementBox);\n      }\n    }\n    line.margin = new Margin(0, maxElementTopMargin, 0, maxElementBottomMargin);\n    this.adjustPositionBasedOnTopAndBottom(line);\n    this.checkInbetweenShapeOverlap(line);\n    if (!isMultiColumnSplit && line.isLastLine() && line.indexInOwner === 0 && line.paragraph.paragraphFormat.widowControl) {\n      var previousSplitWidget = line.paragraph.previousSplitWidget;\n      if (!isNullOrUndefined(previousSplitWidget) && !previousSplitWidget.isEndsWithPageBreak && !previousSplitWidget.isEndsWithColumnBreak && previousSplitWidget.indexInOwner !== 0) {\n        var startLineIndex = previousSplitWidget.childWidgets.length - 1;\n        if (previousSplitWidget.childWidgets.length === 2) {\n          startLineIndex = 0;\n        }\n        this.splitParagraph(previousSplitWidget, startLineIndex, line.paragraph);\n        this.updateClientAreaForNextBlock(line, line.paragraph);\n      }\n    } else if (isMultiColumnSplit) {\n      this.splitParagraphForMultiColumn(line, index);\n    }\n    if (!isMultiColumnSplit) {\n      this.viewer.cutFromTop(this.viewer.clientActiveArea.y + line.height);\n    }\n    this.wrapPosition = [];\n  };\n  Layout.prototype.updateShapeYPosition = function (elementBox) {\n    if (elementBox.margin.top > 0) {\n      elementBox.y += elementBox.margin.top;\n      for (var j = 0; j < elementBox.textFrame.childWidgets.length; j++) {\n        elementBox.textFrame.childWidgets[j].y += elementBox.margin.top;\n      }\n    }\n  };\n  Layout.prototype.getBodyWidget = function (section, isFirstBody) {\n    if (isFirstBody) {\n      while (section && section.columnIndex !== 0) {\n        section = section.previousRenderedWidget;\n      }\n    } else {\n      while (section) {\n        if (isNullOrUndefined(section.nextRenderedWidget) || section.columnIndex === section.sectionFormat.numberOfColumns - 1 || section.index !== section.nextRenderedWidget.index) {\n          break;\n        }\n        section = section.nextRenderedWidget;\n      }\n    }\n    return section;\n  };\n  Layout.prototype.splitParagraphForMultiColumn = function (line, index) {\n    this.splitParagraph(line.paragraph, index, undefined);\n    if (isNullOrUndefined(line.paragraph.previousRenderedWidget) && index == 0 || !isNullOrUndefined(line.paragraph.previousRenderedWidget) && line.paragraph.previousRenderedWidget.bodyWidget.sectionIndex !== line.paragraph.bodyWidget.sectionIndex) {\n      this.moveBlocksToNextPage(line.paragraph);\n    } else {\n      this.moveBlocksToNextPage(line.paragraph.previousRenderedWidget);\n    }\n    this.viewer.updateClientArea(line.paragraph.bodyWidget, line.paragraph.bodyWidget.page);\n    this.viewer.clientActiveArea.y = line.paragraph.bodyWidget.y;\n    if (line.paragraph.bodyWidget.sectionFormat.equalWidth) {\n      var parawidget = line.paragraph;\n      this.documentHelper.blockToShift = parawidget;\n      this.shiftLayoutedItems(false, true);\n    }\n  };\n  //Checks Inbetween Overlap & Updates Line marginTop\n  Layout.prototype.checkInbetweenShapeOverlap = function (line, floatingElements) {\n    var _this = this;\n    if (!(line.paragraph.containerWidget instanceof TextFrame) && line.paragraph.bodyWidget) {\n      var overlapShape_1;\n      var lineY_1 = this.getLineY(line);\n      var isInsideTable_1 = line.paragraph.isInsideTable;\n      var emptyParaPosition_1 = line.paragraph.y;\n      var isFloatingElementPresent_1 = true;\n      if (isNullOrUndefined(floatingElements)) {\n        isFloatingElementPresent_1 = false;\n        floatingElements = line.paragraph.bodyWidget.floatingElements;\n      }\n      /* eslint:disable */\n      floatingElements.sort(function (a, b) {\n        return a.y - b.y;\n      });\n      floatingElements.forEach(function (shape) {\n        if (isInsideTable_1 && shape.line && !shape.line.paragraph.isInsideTable || isNullOrUndefined(shape.line)) {\n          return;\n        }\n        var lineRect;\n        if (shape.textWrappingStyle === 'TopAndBottom' && shape instanceof ImageElementBox && !line.paragraph.isEmpty()) {\n          lineRect = new Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.children[0].height);\n        } else {\n          lineRect = new Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.height);\n        }\n        var shapeRect = new Rect(shape.x, shape.y - shape.distanceTop, shape.width, shape.height);\n        if (shape.line && _this.isRelayout && !_this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, line.paragraph) || _this.isRelayout && _this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, _this.endOverlapWidget)) {\n          return;\n        }\n        var considerShape = shape.textWrappingStyle === 'TopAndBottom';\n        var updatedFloatPosition = shape.y + shape.height + shape.distanceBottom - lineY_1;\n        if (overlapShape_1 && considerShape && overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom + line.height > shape.y - shape.distanceTop && overlapShape_1.y - overlapShape_1.distanceTop < shape.y - shape.distanceTop && shape.y + shape.height + shape.distanceBottom > overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom) {\n          overlapShape_1 = shape;\n          if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n            line.paragraph.y = emptyParaPosition_1;\n            line.paragraph.y += updatedFloatPosition;\n          } else {\n            line.marginTop = updatedFloatPosition;\n          }\n        } else if (considerShape && !overlapShape_1 && lineRect.isIntersecting(shapeRect)) {\n          overlapShape_1 = shape;\n          if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n            line.paragraph.y += updatedFloatPosition;\n          } else {\n            line.marginTop = updatedFloatPosition;\n          }\n        }\n      });\n      if (overlapShape_1) {\n        this.viewer.cutFromTop(overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom);\n      } else if (this.isRelayoutOverlap) {\n        line.marginTop = 0;\n      }\n    }\n  };\n  Layout.prototype.getLineY = function (line) {\n    var para = line.paragraph;\n    var lineY = para.y;\n    if (!para.isEmpty()) {\n      var lineWidget = para.firstChild;\n      while (lineWidget !== line) {\n        lineY = lineY + lineWidget.height + lineWidget.marginTop;\n        lineWidget = lineWidget.nextLine;\n      }\n    }\n    return lineY;\n  };\n  Layout.prototype.updateLineWidget = function (line) {\n    var spaceHeight = 0;\n    var spaceBaseline = 0;\n    var isContainsImage = false;\n    var isFieldCode = false;\n    for (var i = 0; i < line.children.length; i++) {\n      var element = line.children[i];\n      if (element instanceof FieldElementBox && element.fieldType === 2) {\n        isFieldCode = false;\n      }\n      if (isFieldCode) {\n        continue;\n      }\n      if (element instanceof FieldElementBox && element.fieldType === 0) {\n        isFieldCode = true;\n      }\n      if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n        continue;\n      }\n      if (element instanceof TextElementBox && element.text.replace(/\\s+/g, '').length === 0 && element.text !== String.fromCharCode(160)) {\n        if (spaceHeight < element.height) {\n          spaceHeight = element.height;\n          spaceBaseline = element.baselineOffset;\n        }\n        continue;\n      }\n      if (element instanceof TextElementBox || element instanceof ListTextElementBox) {\n        var elementHeight = element.height;\n        var baselineOffset = element.baselineOffset;\n        var isCellContentControl = false;\n        //We have increased the checkbox form field font size using a constant factor `CHECK_BOX_FACTOR`\n        //To match the MS Word check box rendering size.\n        //Due to it line height also get increased. So, handled adjusting height while updating line height.\n        if (element instanceof TextElementBox && element.isCheckBoxElement && !isNullOrUndefined(element.previousNode) && element.previousNode instanceof ContentControl && (element.previousNode.contentControlWidgetType === 'Cell' || element.previousNode.contentControlWidgetType === 'Inline')) {\n          isCellContentControl = true;\n        }\n        if (element instanceof TextElementBox && element.isCheckBoxElement && !isCellContentControl) {\n          elementHeight = elementHeight / CHECK_BOX_FACTOR;\n          baselineOffset = baselineOffset / CHECK_BOX_FACTOR;\n        }\n        if (this.maxTextHeight < elementHeight) {\n          this.maxTextHeight = elementHeight;\n          this.maxTextBaseline = baselineOffset;\n        }\n        if (this.maxBaseline < this.maxTextBaseline) {\n          this.maxBaseline = this.maxTextBaseline;\n        }\n      } else if (this.maxBaseline < element.height) {\n        this.maxBaseline = element.height;\n        if (element instanceof ImageElementBox) {\n          isContainsImage = true;\n        }\n      }\n    }\n    if (this.maxTextHeight === 0 && spaceHeight !== 0) {\n      if (isContainsImage) {\n        this.maxTextHeight = 0;\n        this.maxTextBaseline = 0;\n      } else {\n        if (line.isLastLine() && this.documentHelper.selection) {\n          var paragraphMarkSize = this.documentHelper.selection.getParagraphMarkSize(line.paragraph, 0, 0);\n          this.maxTextHeight = paragraphMarkSize.height;\n          this.maxTextBaseline = spaceBaseline;\n        } else {\n          this.maxTextHeight = spaceHeight;\n          this.maxTextBaseline = spaceBaseline;\n        }\n        if (this.maxBaseline < this.maxTextBaseline) {\n          this.maxBaseline = this.maxTextBaseline;\n        }\n      }\n    }\n  };\n  Layout.prototype.moveToNextPage = function (viewer, line, isPageBreak, isList) {\n    if (this.isFootNoteLayoutStart) {\n      return;\n    }\n    var paragraphWidget = line.paragraph;\n    var startBlock;\n    var startIndex = 0;\n    var keepLinesTogether = false;\n    var keepWithNext = false;\n    if (paragraphWidget && !(!isNullOrUndefined(paragraphWidget.containerWidget) && !isNullOrUndefined(paragraphWidget.containerWidget.containerWidget) && paragraphWidget.containerWidget.containerWidget instanceof FootNoteWidget)) {\n      var index = 0;\n      if (paragraphWidget instanceof FootNoteWidget) {\n        return;\n      }\n      if (!isNullOrUndefined(line)) {\n        index = paragraphWidget.childWidgets.indexOf(line);\n        if (index !== 0) {\n          if (paragraphWidget.paragraphFormat.keepLinesTogether && !isNullOrUndefined(paragraphWidget.previousWidget) && !line.previousLine.isEndsWithColumnBreak) {\n            index = 0;\n            keepLinesTogether = true;\n          } else if (index == 1 && !line.previousLine.isEndsWithPageBreak && !line.previousLine.isEndsWithColumnBreak && paragraphWidget.paragraphFormat.widowControl && !isNullOrUndefined(paragraphWidget.previousWidget)) {\n            index = 0;\n            keepLinesTogether = true;\n          }\n        }\n        if (index > 0 || isPageBreak) {\n          paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n        }\n        if (index === 0 && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak) {\n          var blockInfo = this.alignBlockElement(paragraphWidget);\n          if (!isNullOrUndefined(blockInfo.node)) {\n            startBlock = blockInfo.node instanceof TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n            startIndex = startBlock instanceof TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n            paragraphWidget = startBlock;\n            index = startIndex;\n            keepLinesTogether = false;\n            keepWithNext = true;\n            if (paragraphWidget instanceof ParagraphWidget) {\n              if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !paragraphWidget.paragraphFormat.keepWithNext && !isList) {\n                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n              }\n            } else {\n              if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isList) {\n                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n              }\n            }\n          }\n        }\n      }\n      /* eslint-disable-next-line max-len */\n      if (!isNullOrUndefined(paragraphWidget.bodyWidget) && !isNullOrUndefined(paragraphWidget.bodyWidget.containerWidget) && !(paragraphWidget.bodyWidget.containerWidget instanceof FootNoteWidget) && paragraphWidget.bodyWidget.page.footnoteWidget !== undefined) {\n        // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, true);\n        this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n        // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, false);\n      }\n      if (this.isMultiColumnSplit) {\n        var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(paragraphWidget.bodyWidget);\n        if (isNullOrUndefined(nextColumn)) {\n          return;\n        }\n      }\n      var prevPage = paragraphWidget.bodyWidget.page;\n      if (isPageBreak && index === 0 && !isNullOrUndefined(paragraphWidget.bodyWidget.lastChild) && paragraphWidget === paragraphWidget.bodyWidget.lastChild && this.endOverlapWidget) {\n        this.isRelayoutOverlap = false;\n      }\n      var nextBody = this.moveBlocksToNextPage(paragraphWidget, index === 0, index);\n      if (prevPage !== nextBody.page) {\n        this.viewer.updateClientArea(nextBody, nextBody.page);\n      }\n      this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n      if (index > 0) {\n        if (line.isLastLine() && isPageBreak) {\n          return;\n        }\n        var nextParagraph = void 0;\n        if (nextBody.firstChild instanceof ParagraphWidget && nextBody.firstChild.equals(paragraphWidget)) {\n          nextParagraph = nextBody.firstChild;\n        } else {\n          nextParagraph = new ParagraphWidget();\n        }\n        nextParagraph = this.moveChildsToParagraph(paragraphWidget, index, nextParagraph);\n        // this.updateLinearIndex(paragraphWidget);\n        // this.updateLinearIndex(nextParagraph);\n        nextParagraph.containerWidget = nextBody;\n        for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n          var element = nextParagraph.floatingElements[m];\n          if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n            paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n          }\n        }\n        var footWidget = this.getFootNoteWidgetsOf(nextParagraph);\n        this.moveFootNotesToPage(footWidget, paragraphWidget.bodyWidget, nextBody);\n        paragraphWidget = nextParagraph;\n        this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footWidget);\n      } else if (!isPageBreak) {\n        paragraphWidget.containerWidget.removeChild(paragraphWidget.indexInOwner);\n        if (paragraphWidget instanceof ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n          this.addRemoveFloatElementsFromBody(paragraphWidget, paragraphWidget.containerWidget, false);\n        }\n      }\n      if (!isPageBreak) {\n        if (nextBody.childWidgets.indexOf(paragraphWidget) === -1) {\n          nextBody.childWidgets.splice(0, 0, paragraphWidget);\n          if (paragraphWidget instanceof ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n            this.addRemoveFloatElementsFromBody(paragraphWidget, nextBody, true);\n          }\n        }\n        paragraphWidget.containerWidget = nextBody;\n        this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n        if (keepLinesTogether || keepWithNext) {\n          if (paragraphWidget.bodyWidget.page.footnoteWidget) {\n            this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n          }\n          if (line.paragraph !== paragraphWidget || paragraphWidget.paragraphFormat.widowControl && this.isImagePresent(paragraphWidget)) {\n            if (paragraphWidget instanceof TableWidget) {\n              this.clearTableWidget(paragraphWidget, true, true, false);\n            }\n            this.layoutBlock(paragraphWidget, 0, true);\n            viewer.updateClientAreaForBlock(paragraphWidget, false);\n          }\n          var lastBlock = line.paragraph;\n          if (keepWithNext) {\n            var nextBlock = paragraphWidget.nextWidget;\n            if (!isNullOrUndefined(nextBlock)) {\n              do {\n                viewer.updateClientAreaForBlock(nextBlock, true);\n                if (nextBlock !== lastBlock) {\n                  if (nextBlock instanceof TableWidget) {\n                    this.clearTableWidget(nextBlock, true, true, false);\n                  }\n                  this.layoutBlock(nextBlock, 0, true);\n                  viewer.updateClientAreaForBlock(nextBlock, false);\n                } else {\n                  this.viewer.updateClientAreaLocation(nextBlock, this.viewer.clientActiveArea);\n                  break;\n                }\n                nextBlock = nextBlock.nextWidget;\n              } while (nextBlock);\n            }\n          }\n          this.updateClientAreaForNextBlock(line, lastBlock);\n        }\n        if (line.isFirstLine() && line.indexInOwner === 0 && !(line.children[0] instanceof ListTextElementBox)) {\n          var firstLineIndent = -HelperMethods.convertPointToPixel(line.paragraph.paragraphFormat.firstLineIndent);\n          this.viewer.updateClientWidth(firstLineIndent);\n        }\n      }\n    }\n    if (!isPageBreak) {\n      this.updateShapeBaseLocation(paragraphWidget);\n    }\n    if (this.isRelayoutOverlap && this.endOverlapWidget && (!this.skipRelayoutOverlap || this.endOverlapWidget instanceof TableWidget && this.endOverlapWidget.wrapTextAround)) {\n      var block_1 = this.endOverlapWidget.previousRenderedWidget;\n      var para = line.paragraph;\n      this.startOverlapWidget = para;\n      line = this.endOverlapWidget.childWidgets[0];\n      para = line.paragraph;\n      while (para) {\n        para.floatingElements.forEach(function (shape) {\n          if (block_1.bodyWidget.floatingElements.indexOf(shape) !== -1 && shape.textWrappingStyle !== 'Inline') {\n            block_1.bodyWidget.floatingElements.splice(block_1.bodyWidget.floatingElements.indexOf(shape), 1);\n            line.paragraph.bodyWidget.floatingElements.push(shape);\n          }\n        });\n        para = para !== this.endOverlapWidget ? para.nextWidget : undefined;\n      }\n      this.layoutStartEndBlocks(this.startOverlapWidget, this.endOverlapWidget);\n      this.startOverlapWidget = undefined;\n      this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - this.endOverlapWidget.y;\n      this.viewer.clientActiveArea.y = this.endOverlapWidget.y;\n    }\n  };\n  Layout.prototype.isImagePresent = function (paragraph) {\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var line = paragraph.childWidgets[i];\n      for (var j = 0; j < line.children.length; j++) {\n        if (line.children[j] instanceof ImageElementBox) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Layout.prototype.updateShapeBaseLocation = function (paragraphWidget) {\n    if (paragraphWidget instanceof ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n      for (var m = 0; m < paragraphWidget.floatingElements.length; m++) {\n        var shape = paragraphWidget.floatingElements[m];\n        var position = this.getFloatingItemPoints(shape);\n        shape.y = position.y;\n        shape.x = position.x;\n        if (shape instanceof ShapeElementBox) this.updateChildLocationForCellOrShape(shape.y, shape);\n      }\n    }\n  };\n  Layout.prototype.moveChildsToParagraph = function (srcParagraph, childStartIndex, nextParagraph) {\n    nextParagraph = this.addParagraphWidget(this.viewer.clientActiveArea, nextParagraph);\n    var insertIndex = 0;\n    for (var i = childStartIndex; i < srcParagraph.childWidgets.length; i++) {\n      var lineWidget = srcParagraph.childWidgets[i];\n      lineWidget.paragraph = nextParagraph;\n      nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n      lineWidget.paragraph = nextParagraph;\n      insertIndex++;\n    }\n    nextParagraph.paragraphFormat = srcParagraph.paragraphFormat;\n    nextParagraph.characterFormat = srcParagraph.characterFormat;\n    nextParagraph.index = srcParagraph.index;\n    srcParagraph.childWidgets.splice(childStartIndex);\n    for (var i = 0; i < srcParagraph.floatingElements.length; i++) {\n      var element = srcParagraph.floatingElements[i];\n      if (element.line.paragraph !== srcParagraph) {\n        nextParagraph.floatingElements.push(element);\n        srcParagraph.floatingElements.splice(srcParagraph.floatingElements.indexOf(element), 1);\n        i--;\n      }\n    }\n    return nextParagraph;\n  };\n  /**\n   * @param {ParagraphWidget} paragarph - the paragraph\n   * @param {BodyWidget} body - the bodyWidget\n   * @param {boolean} add - to specify add or remove floating elements from body widget.\n   */\n  Layout.prototype.addRemoveFloatElementsFromBody = function (paragarph, body, add) {\n    if (paragarph.floatingElements.length > 0) {\n      for (var x = 0; x < paragarph.floatingElements.length; x++) {\n        if (add) {\n          if (body.floatingElements.indexOf(paragarph.floatingElements[x]) === -1 && paragarph.floatingElements[x].textWrappingStyle !== 'Inline') {\n            body.floatingElements.push(paragarph.floatingElements[x]);\n          }\n        } else {\n          if (body.floatingElements.indexOf(paragarph.floatingElements[x]) !== -1) {\n            body.floatingElements.splice(body.floatingElements.indexOf(paragarph.floatingElements[x]), 1);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Align block based on keep with next and keep lines together property.\n   */\n  Layout.prototype.alignBlockElement = function (block) {\n    if (block instanceof ParagraphWidget && (block.isEndsWithPageBreak || block.isEndsWithColumnBreak)) {\n      return {\n        node: undefined,\n        position: {\n          index: ''\n        }\n      };\n    }\n    var startBlock;\n    var startIndex = 0;\n    // Check previous block has keep with next property.\n    var previousBlock = this.getPreviousBlock(block);\n    while (previousBlock) {\n      if (previousBlock instanceof ParagraphWidget) {\n        if (!previousBlock.paragraphFormat.keepWithNext || previousBlock.isEndsWithPageBreak || previousBlock.isEndsWithColumnBreak) {\n          break;\n        }\n        startBlock = previousBlock;\n        if (previousBlock.paragraphFormat.keepLinesTogether) {\n          if (isNullOrUndefined(this.getPreviousBlock(previousBlock))) {\n            startBlock = undefined;\n          } else {\n            startIndex = 0;\n          }\n        } else {\n          if (isNullOrUndefined(this.getPreviousBlock(previousBlock)) && previousBlock.childWidgets.length === 1) {\n            startBlock = undefined;\n          } else {\n            if (!previousBlock.paragraphFormat.widowControl) {\n              startIndex = previousBlock.lastChild.indexInOwner;\n              if (startIndex !== 0) {\n                break;\n              }\n            } else {\n              startIndex = previousBlock.lastChild.indexInOwner - 1;\n              if (startIndex === 1 || startIndex < 0) {\n                // Move entire block to next page based on widow control.\n                startIndex = 0;\n              }\n              if (startIndex !== 0) {\n                break;\n              }\n            }\n          }\n        }\n      } else if (previousBlock instanceof TableRowWidget) {\n        var childWidget = previousBlock.childWidgets[0];\n        if (childWidget.childWidgets.length > 0) {\n          var firstBlock = this.documentHelper.getFirstParagraphInCell(childWidget);\n          if (!firstBlock.paragraphFormat.keepWithNext) {\n            break;\n          }\n          if (firstBlock.paragraphFormat.keepWithNext) {\n            if (isNullOrUndefined(this.getPreviousBlock(previousBlock))) {\n              startBlock = undefined;\n            } else {\n              startBlock = previousBlock;\n              startIndex = startBlock.indexInOwner;\n            }\n          }\n        } else {\n          break;\n        }\n        // TODO: Table row splitting case\n      }\n      previousBlock = this.getPreviousBlock(previousBlock);\n    }\n    if (!isNullOrUndefined(startBlock) && startBlock instanceof ParagraphWidget && startBlock.indexInOwner === 0 && startBlock.paragraphFormat.keepWithNext && startBlock.paragraphFormat.widowControl) {\n      startBlock = block;\n    }\n    return {\n      node: startBlock,\n      position: {\n        index: startIndex.toString()\n      }\n    };\n  };\n  Layout.prototype.getPreviousBlock = function (block) {\n    var previousBlock;\n    if (block instanceof ParagraphWidget) {\n      previousBlock = block.previousWidget;\n      if (!this.isInitialLoad && isNullOrUndefined(previousBlock) && block.containerWidget instanceof BodyWidget && !isNullOrUndefined(block.containerWidget.previousRenderedWidget) && block.containerWidget.sectionIndex === block.containerWidget.previousRenderedWidget.sectionIndex) {\n        if (!isNullOrUndefined(block.previousRenderedWidget) && block.previousRenderedWidget instanceof ParagraphWidget) {\n          previousBlock = block.previousRenderedWidget;\n        }\n      }\n    } else if (block instanceof TableRowWidget) {\n      previousBlock = block.previousWidget;\n      if (isNullOrUndefined(previousBlock)) {\n        previousBlock = block.ownerTable.previousWidget;\n      }\n    }\n    if (previousBlock instanceof TableWidget) {\n      previousBlock = previousBlock.lastChild;\n    }\n    return previousBlock;\n  };\n  Layout.prototype.splitRow = function (startRow) {\n    var table = startRow.ownerTable;\n    if (startRow.indexInOwner === 0) {\n      return table;\n    }\n    var newTable = this.createTableWidget(table);\n    for (var i = startRow.indexInOwner; i < table.childWidgets.length;) {\n      var rowWidget = table.childWidgets.splice(i, 1)[0];\n      newTable.childWidgets.push(rowWidget);\n      rowWidget.containerWidget = newTable;\n      table.height -= rowWidget.height;\n      newTable.height += rowWidget.height;\n    }\n    table.containerWidget.childWidgets.splice(table.indexInOwner + 1, 0, newTable);\n    newTable.containerWidget = table.containerWidget;\n    return newTable;\n  };\n  Layout.prototype.splitParagraph = function (paragarph, index, nextParagraph) {\n    if (index === 0 && isNullOrUndefined(nextParagraph)) {\n      return paragarph;\n    }\n    var isMoveCurrentBlock = false;\n    if (isNullOrUndefined(nextParagraph)) {\n      nextParagraph = new ParagraphWidget();\n      nextParagraph.containerWidget = paragarph.containerWidget;\n      paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner + 1, 0, nextParagraph);\n      nextParagraph.paragraphFormat = paragarph.paragraphFormat;\n      nextParagraph.characterFormat = paragarph.characterFormat;\n      nextParagraph.index = paragarph.index;\n    } else if (index === 0) {\n      isMoveCurrentBlock = true;\n      var temp = paragarph;\n      paragarph = nextParagraph;\n      nextParagraph = temp;\n    }\n    var insertIndex = 0;\n    for (var i = index; i < paragarph.childWidgets.length; i++) {\n      var lineWidget = paragarph.childWidgets[i];\n      lineWidget.paragraph = nextParagraph;\n      if (isMoveCurrentBlock) {\n        nextParagraph.childWidgets.push(lineWidget);\n      } else {\n        nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n      }\n      nextParagraph.height += lineWidget.height;\n      paragarph.height -= lineWidget.height;\n      lineWidget.paragraph = nextParagraph;\n      insertIndex++;\n    }\n    nextParagraph.width = paragarph.width;\n    if (isMoveCurrentBlock) {\n      nextParagraph.containerWidget.childWidgets.splice(nextParagraph.indexInOwner, 1);\n      nextParagraph.y = paragarph.y;\n      nextParagraph.x = paragarph.x;\n      nextParagraph.containerWidget = paragarph.containerWidget;\n      paragarph.containerWidget.childWidgets.unshift(nextParagraph);\n    } else {\n      paragarph.childWidgets.splice(index);\n    }\n    if (paragarph.childWidgets.length === 0 || isMoveCurrentBlock) {\n      paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner, 1);\n    }\n    // this.updateLinearIndex(paragarph);\n    // this.updateLinearIndex(nextParagraph);\n    return nextParagraph;\n  };\n  Layout.prototype.updateClientPositionForBlock = function (block, currentBlock) {\n    var startBlock = block instanceof TableRowWidget ? block.ownerTable : block;\n    var isClientAreaUpdated = false;\n    do {\n      this.viewer.updateClientAreaForBlock(startBlock, true);\n      if (startBlock instanceof ParagraphWidget) {\n        if (currentBlock instanceof ParagraphWidget && currentBlock.equals(startBlock)) {\n          isClientAreaUpdated = true;\n          break;\n        }\n        this.addParagraphWidget(this.viewer.clientActiveArea, startBlock);\n        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n        this.viewer.updateClientAreaForBlock(startBlock, false);\n      } else if (startBlock instanceof TableWidget) {\n        if (this.documentHelper.compatibilityMode !== 'Word2013' && !startBlock.isInsideTable) {\n          this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - HelperMethods.convertPointToPixel(startBlock.firstChild.firstChild.leftMargin);\n        }\n        this.addTableWidget(this.viewer.clientActiveArea, [startBlock]);\n        var nextRow = startBlock.firstChild;\n        if (currentBlock instanceof TableRowWidget && startBlock.equals(currentBlock.ownerTable) && !isNullOrUndefined(nextRow)) {\n          do {\n            if (nextRow.equals(currentBlock)) {\n              isClientAreaUpdated = true;\n              break;\n            }\n            this.addTableRowWidget(this.viewer.clientActiveArea, [nextRow]);\n            this.updateChildLocationForRow(this.viewer.clientActiveArea.y, nextRow);\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + nextRow.height);\n            startBlock.height += nextRow.height;\n            nextRow = nextRow.nextWidget;\n          } while (nextRow);\n        } else {\n          this.updateChildLocationForTable(startBlock.y, startBlock);\n          this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n          this.viewer.updateClientAreaForBlock(startBlock, false);\n        }\n      }\n      startBlock = startBlock.nextWidget;\n    } while (startBlock && !isClientAreaUpdated);\n  };\n  Layout.prototype.updateClientAreaForNextBlock = function (line, paragraphWidget) {\n    for (var m = 0; m < paragraphWidget.childWidgets.length; m++) {\n      var child = paragraphWidget.childWidgets[m];\n      if (line === child) {\n        break;\n      }\n      this.updateShapeBaseLocation(paragraphWidget);\n      this.checkInbetweenShapeOverlap(child);\n      this.viewer.cutFromTop(this.viewer.clientActiveArea.y + child.height);\n    }\n  };\n  Layout.prototype.layoutStartEndBlocks = function (startBlock, endBlock) {\n    var block = startBlock;\n    this.isOverlapFloatTable = true;\n    this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - startBlock.y;\n    this.viewer.clientActiveArea.y = startBlock.y;\n    var startParagaraph;\n    if (startBlock instanceof TableWidget) {\n      startParagaraph = this.documentHelper.getFirstParagraphInFirstCell(startBlock);\n    } else {\n      startParagaraph = startBlock;\n    }\n    if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n      this.viewer.owner.editorModule.updateWholeListItems(startParagaraph);\n    }\n    while (block) {\n      this.viewer.updateClientAreaForBlock(block, true);\n      if (block instanceof ParagraphWidget) {\n        this.layoutParagraph(block, 0);\n      } else {\n        this.clearTableWidget(block, true, true, true);\n        this.layoutTable(block, 0);\n      }\n      this.viewer.updateClientAreaForBlock(block, false);\n      var isTableHasParaVerticalOrigin = !isNullOrUndefined(block.nextWidget) && block.nextWidget instanceof TableWidget && block.nextWidget === endBlock && block.nextWidget.positioning.verticalOrigin === 'Paragraph';\n      block = block !== endBlock && !isTableHasParaVerticalOrigin ? block.nextWidget : undefined;\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.alignLineElements = function (element, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, isLastElement) {\n    if (element.width > 0 && (element instanceof TextElementBox || element instanceof ListTextElementBox)) {\n      var textElement = element instanceof TextElementBox ? element : undefined;\n      //Updates the text to base line offset.\n      var baselineOffset = element instanceof TextElementBox ? textElement.baselineOffset : element.baselineOffset;\n      topMargin += this.maxBaseline - baselineOffset;\n      bottomMargin += maxDescent - (element.height - baselineOffset);\n      //Updates the text to base line offset.\n      if (!isNullOrUndefined(textElement) && textAlignment === 'Justify' && whiteSpaceCount > 0) {\n        //Aligns the text as Justified.\n        var width = textElement.width;\n        var text = textElement.text;\n        if (!addSubWidth) {\n          text = HelperMethods.trimStart(text); // trim start\n          addSubWidth = text.length > 0;\n        }\n        if (addSubWidth) {\n          var spaceCount = text.length - HelperMethods.removeSpace(text).length;\n          if (isLastElement) {\n            spaceCount -= text.length - HelperMethods.trimEnd(text).length;\n          }\n          if (whiteSpaceCount < spaceCount) {\n            width = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text, textElement.characterFormat, textElement.scriptType);\n            spaceCount = whiteSpaceCount;\n          }\n          if (spaceCount > 0) {\n            textElement.width = width + subWidth * spaceCount;\n            whiteSpaceCount -= spaceCount;\n          }\n        }\n      }\n    } else {\n      addSubWidth = true;\n      //Updates the Image/UIElement to base line offset.\n      topMargin += this.maxBaseline - element.height;\n      bottomMargin += maxDescent;\n    }\n    return {\n      'topMargin': topMargin,\n      'bottomMargin': bottomMargin,\n      'addSubWidth': addSubWidth,\n      'whiteSpaceCount': whiteSpaceCount\n    };\n  };\n  Layout.prototype.updateWidgetToPage = function (viewer, paragraphWidget) {\n    if (paragraphWidget.isInsideTable) {\n      var cellWidget = paragraphWidget.associatedCell;\n      paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n      // if (viewer instanceof PageLayoutViewer) {\n      if (isNullOrUndefined(paragraphWidget.associatedCell) || isNullOrUndefined(paragraphWidget.associatedCell.ownerRow) || isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.rowFormat)) {\n        return;\n      }\n      if (paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'Exactly') {\n        cellWidget.height = HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height);\n      } else {\n        if ([cellWidget].length <= 1 && paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'AtLeast') {\n          cellWidget.height = Math.max(HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height), this.getCellContentHeight(cellWidget));\n        } else {\n          cellWidget.height = cellWidget.height + paragraphWidget.height;\n        }\n      }\n      // } else {\n      //     cellWidget.height = cellWidget.height + paragraphWidget.height;\n      // }\n      // cellWidget.childWidgets.push(paragraphWidget);\n      paragraphWidget.containerWidget = cellWidget;\n    } else {\n      if (!paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak || viewer instanceof WebLayoutViewer) {\n        paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n      }\n      //Adds the paragraph widget to the Header Footer/ Body widget.\n      // this.updateWidgetsToBody(paragraphWidget, viewer, paragraphWidget);\n      //For canvas no need to render paragraph widget here. In case of div, need to render paragraph here.\n      // this.render.renderParagraphWidget((paragraphWidget.containerWidget as BodyWidget).page, paragraphWidget);\n    }\n    if (this.isRelayoutFootnote && paragraphWidget.bodyWidget instanceof FootNoteWidget) {\n      if (!paragraphWidget.isInsideTable) {\n        paragraphWidget.containerWidget.height += paragraphWidget.height;\n      }\n      //this.isRelayoutFootnote = false;\n      this.shiftFootnoteChildLocation(paragraphWidget.bodyWidget, this.viewer);\n    }\n    if (paragraphWidget.bodyWidget instanceof HeaderFooterWidget) {\n      if (!paragraphWidget.isInsideTable) {\n        paragraphWidget.containerWidget.height += paragraphWidget.height;\n      }\n      if (this.viewer.owner.enableHeaderAndFooter && paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n        this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n      }\n    }\n    if (viewer instanceof WebLayoutViewer && paragraphWidget.containerWidget instanceof BodyWidget) {\n      paragraphWidget.containerWidget.height += paragraphWidget.height;\n    }\n  };\n  Layout.prototype.shiftFooterChildLocation = function (widget, viewer) {\n    var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n    if (widget.headerFooterType.indexOf('Footer') !== -1) {\n      var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n      var height = HelperMethods.convertPointToPixel(pageHeight - footerDistance);\n      var top_1;\n      if (widget.y + widget.height > height) {\n        top_1 = height - (widget.y + widget.height);\n      } else if (widget.y + widget.height < height) {\n        top_1 = widget.y + widget.height - height;\n      }\n      if (!isNullOrUndefined(top_1)) {\n        top_1 = height - (widget.y + widget.height);\n        this.shiftChildLocation(top_1, widget);\n        viewer.clientActiveArea.y += top_1;\n      }\n    }\n  };\n  Layout.prototype.shiftFootnoteChildLocation = function (widget, viewer) {\n    var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n    var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n    var bottomMargin = widget.page.bodyWidgets[0].sectionFormat.bottomMargin;\n    var height = HelperMethods.convertPointToPixel(pageHeight - bottomMargin);\n    var top;\n    if (widget.y + widget.height > height) {\n      top = height - (widget.y + widget.height);\n    } else if (widget.y + widget.height < height) {\n      top = widget.y + widget.height - height;\n    }\n    if (!isNullOrUndefined(top)) {\n      top = height - (widget.y + widget.height);\n      this.shiftChildLocation(top, widget);\n      viewer.clientActiveArea.y += top;\n    }\n  };\n  Layout.prototype.checkPreviousElement = function (line, index) {\n    var paragraph = line.paragraph;\n    var isSplitByWord = false;\n    var lastTextElement = 0;\n    for (var i = index - 1; i >= 0; i--) {\n      var textElement = line.children[i];\n      if (textElement instanceof TextElementBox && textElement.width > 0) {\n        var text = textElement.text;\n        lastTextElement = i;\n        if (text.length > 0 && (text[text.length - 1] === ' ' || text[text.length - 1] === '-')) {\n          if (i === index - 1) {\n            this.addSplittedLineWidget(line, index - 1);\n            return true;\n          }\n          isSplitByWord = true;\n          break;\n        } else if (text === '\\t' || this.documentHelper.textHelper.isUnicodeText(text, textElement.scriptType)) {\n          return false;\n        } else if (text.indexOf(' ') >= 0) {\n          isSplitByWord = true;\n          var index_1 = text.lastIndexOf(' ') + 1;\n          //Splits the text element by space.\n          var splittedElement = new TextElementBox();\n          splittedElement.text = text.substr(index_1);\n          splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n          splittedElement.characterRange = textElement.characterRange;\n          if (textElement.revisions.length > 0) {\n            this.updateRevisionForSplittedElement(textElement, splittedElement, index_1 > 0);\n            splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n          }\n          textElement.text = text.substr(0, index_1);\n          this.documentHelper.textHelper.getTextSize(splittedElement, textElement.characterFormat);\n          textElement.width -= splittedElement.width;\n          textElement.trimEndWidth = textElement.width;\n          textElement.height = splittedElement.height;\n          if (textElement.width === 0) {\n            line.children.splice(i, 1);\n            if (!isNullOrUndefined(line.layoutedElements) && line.layoutedElements.length > 0) {\n              line.layoutedElements.splice(i, 1);\n            }\n          }\n          //Adds the text element to the line\n          line.children.splice(i + 1, 0, splittedElement);\n          if (!isNullOrUndefined(line.layoutedElements)) {\n            line.layoutedElements.splice(i + 1, 0, splittedElement);\n          }\n          break;\n        }\n      } else if (!(textElement instanceof ListTextElementBox || textElement instanceof FieldElementBox\n      // to skip field code\n      || textElement instanceof TextElementBox && textElement.width === 0 || textElement instanceof CommentCharacterElementBox || textElement instanceof ContentControl)) {\n        //Handled for inline images/UIelements.\n        lastTextElement = i;\n        isSplitByWord = true;\n        break;\n      }\n    }\n    if (isSplitByWord) {\n      lastTextElement++;\n      if (lastTextElement < line.children.length) {\n        var splitWidth = 0;\n        for (var i = lastTextElement; i < line.children.length; i++) {\n          splitWidth += line.children[i].width;\n          this.addSplittedLineWidget(line, i - 1);\n          i--;\n        }\n        var is2013Justification = paragraph.paragraphFormat.textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013';\n        if (!is2013Justification) {\n          this.viewer.updateClientWidth(splitWidth);\n        }\n      }\n    }\n    return isSplitByWord;\n  };\n  Layout.prototype.clearListElementBox = function (paragraph) {\n    if (paragraph.childWidgets.length === 0) {\n      return;\n    }\n    var line = paragraph.childWidgets[0];\n    if (isNullOrUndefined(line.children)) {\n      return;\n    }\n    for (var i = line.children.length - 1; i > 0; i--) {\n      if (line.children[i] instanceof ListTextElementBox) {\n        line.children.splice(i, 1);\n      } else {\n        break;\n      }\n    }\n    for (var i = 0; i < line.children.length; i++) {\n      if (line.children[i] instanceof ListTextElementBox) {\n        line.children.splice(i, 1);\n        i--;\n      } else {\n        break;\n      }\n    }\n  };\n  /**\n  * @private\n  */\n  Layout.prototype.clearInvalidList = function (list) {\n    if (list) {\n      if (list.abstractListId === -1 && this.documentHelper.abstractLists.indexOf(list.abstractList) !== -1) {\n        this.documentHelper.abstractLists.splice(this.documentHelper.abstractLists.indexOf(list.abstractList), 1);\n      }\n      if (list.listId === -1 && this.documentHelper.lists.indexOf(list) !== -1) {\n        this.documentHelper.lists.splice(this.documentHelper.lists.indexOf(list), 1);\n      }\n    }\n  };\n  Layout.prototype.getListNumber = function (listFormat, isAutoList) {\n    var list = this.documentHelper.getListById(listFormat.listId);\n    var levelNumber = listFormat.listLevelNumber;\n    var listLevel = this.getListLevel(list, listFormat.listLevelNumber);\n    var levelOverride = !isNullOrUndefined(list.levelOverrides) ? list.levelOverrides[levelNumber] : undefined;\n    // If LevelOverride exists and have either override list level or StartAtOverride, then only list numbering will be restarted.\n    if (!isNullOrUndefined(levelOverride) && this.documentHelper.renderedLevelOverrides.indexOf(levelOverride) === -1 && isNullOrUndefined(levelOverride.overrideListLevel)) {\n      //Add List Override style\n      this.documentHelper.renderedLevelOverrides.push(levelOverride);\n      var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n      if (this.documentHelper.renderedLists.containsKey(abstractList)) {\n        var levels = this.documentHelper.renderedLists.get(abstractList);\n        if (levels.containsKey(levelNumber)) {\n          levels.remove(levelNumber);\n          this.ClearSubListLevelValues(list, abstractList, levelNumber);\n        }\n      }\n    }\n    if (isNullOrUndefined(isAutoList)) {\n      this.updateListValues(list, levelNumber);\n    }\n    return this.getListText(list, levelNumber, listLevel);\n  };\n  Layout.prototype.ClearSubListLevelValues = function (list, abstractList, levelNumber) {\n    var levels = this.documentHelper.renderedLists.get(abstractList);\n    var levelNumberTemp = levelNumber + 1;\n    while (levelNumberTemp < abstractList.levels.length) {\n      var listLevel = this.getListLevel(list, levelNumberTemp);\n      if (levels.containsKey(levelNumberTemp) && listLevel.restartLevel > levelNumber) {\n        levels.remove(levelNumberTemp);\n      }\n      levelNumberTemp++;\n    }\n  };\n  Layout.prototype.getListStartValue = function (listLevelNumber, list) {\n    var levelOverride = !isNullOrUndefined(list.levelOverrides) ? list.levelOverrides[listLevelNumber] : undefined;\n    if (!isNullOrUndefined(levelOverride) && isNullOrUndefined(levelOverride.overrideListLevel)) {\n      return levelOverride.startAt;\n    }\n    var listLevel = this.getListLevel(list, listLevelNumber);\n    if (isNullOrUndefined(listLevel)) {\n      return 0;\n    } else {\n      return listLevel.startAt;\n    }\n  };\n  Layout.prototype.updateListValues = function (list, listLevelNumber) {\n    var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n    var currentListLevel = this.getListLevel(list, listLevelNumber);\n    if (!this.documentHelper.renderedLists.containsKey(abstractList)) {\n      var startVal = new Dictionary();\n      this.documentHelper.renderedLists.add(abstractList, startVal);\n      var listLevel = this.getListLevel(list, listLevelNumber);\n      for (var i = 0; i <= listLevelNumber; i++) {\n        startVal.add(i, this.getListStartValue(i, list));\n      }\n    } else {\n      var levels = this.documentHelper.renderedLists.get(abstractList);\n      if (levels.containsKey(listLevelNumber)) {\n        var startAt = levels.get(listLevelNumber);\n        levels.set(listLevelNumber, startAt + 1);\n        var levelNumber = listLevelNumber + 1;\n        while (levelNumber < this.documentHelper.getAbstractListById(list.abstractListId).levels.length) {\n          var listLevel = this.getListLevel(list, levelNumber);\n          // if (!isNullOrUndefined(listLevel)) {\n          if (levels.containsKey(levelNumber) && (listLevel.restartLevel > listLevelNumber || currentListLevel.listLevelPattern === \"Bullet\")) {\n            levels.remove(levelNumber);\n            // if (document.renderedListLevels.indexOf(listLevel) > -1) {\n            //     document.renderedListLevels.pop();\n            // }\n          }\n          // }\n          levelNumber++;\n        }\n      } else {\n        var levelNumber = listLevelNumber;\n        while (!levels.containsKey(levelNumber - 1) && levelNumber > 0) {\n          var listLevel = this.getListLevel(list, levelNumber - 1);\n          // if (!isNullOrUndefined(listLevel)) {\n          levels.add(levelNumber - 1, this.getListStartValue(levelNumber - 1, list));\n          // if (document.renderedListLevels.indexOf(listLevel) !== -1) {\n          //     document.renderedListLevels.push(listLevel);\n          // }\n          // }\n          levelNumber--;\n        }\n        var startAt = this.getListStartValue(listLevelNumber, list);\n        levels.add(listLevelNumber, startAt);\n      }\n    }\n  };\n  Layout.prototype.getListText = function (listAdv, listLevelNumber, currentListLevel) {\n    var listText = currentListLevel.numberFormat;\n    if (this.documentHelper.renderedLists.containsKey(this.documentHelper.getAbstractListById(listAdv.abstractListId))) {\n      var levels = this.documentHelper.renderedLists.get(this.documentHelper.getAbstractListById(listAdv.abstractListId));\n      var keys = levels.keys;\n      for (var i = 0; i < keys.length; i++) {\n        var levelNumber = keys[i];\n        var levelKey = '%' + (levelNumber + 1).toString();\n        // if isLegalStyleNumber boolean is true, consider the currentlistlevel for getting the replace text else use the levels from starting.\n        var listLevel = this.getListLevel(listAdv, levelNumber);\n        var pattern = i < listLevelNumber ? listLevel.listLevelPattern !== 'LeadingZero' ? 'Arabic' : listLevel.listLevelPattern : undefined;\n        if (listText.match(levelKey)) {\n          if (levelNumber > listLevelNumber) {\n            return '';\n          } else if (levels.containsKey(levelNumber) && !isNullOrUndefined(listLevel)) {\n            listText = listText.replace(levelKey, this.getListTextListLevel(listLevel, levels.get(levelNumber), currentListLevel.isLegalStyleNumbering ? pattern : undefined));\n          } else {\n            listText = listText.replace(levelKey, '0');\n          }\n        }\n      }\n    }\n    return listText;\n  };\n  Layout.prototype.getAsLetter = function (number) {\n    // if (number <= 0) {\n    //     return '';\n    // }\n    var quotient = number / 26;\n    var remainder = number % 26;\n    if (remainder === 0) {\n      //If number denotes the factor of 26, then reduce quotient by 1 and set remainder as 26.\n      remainder = 26;\n      quotient--;\n    }\n    //Index of A char in the ASCII table.     \n    var letter = String.fromCharCode(65 - 1 + remainder);\n    var listValue = '';\n    while (quotient >= 0) {\n      listValue = listValue + letter.toString();\n      quotient--;\n    }\n    return listValue;\n  };\n  Layout.prototype.getListTextListLevel = function (listLevel, listValue, customPattern) {\n    switch (!isNullOrUndefined(customPattern) ? customPattern : listLevel.listLevelPattern) {\n      case 'UpRoman':\n        return this.getAsRoman(listValue).toUpperCase();\n      case 'LowRoman':\n        return this.getAsRoman(listValue).toLowerCase();\n      case 'UpLetter':\n        return this.getAsLetter(listValue).toUpperCase();\n      case 'LowLetter':\n        return this.getAsLetter(listValue).toLowerCase();\n      case 'Arabic':\n        return listValue.toString();\n      case 'LeadingZero':\n        return this.getAsLeadingZero(listValue);\n      case 'Number':\n        return listValue.toString();\n      case 'OrdinalText':\n        if (listLevel.characterFormat.localeIdAscii === 3082 || this.documentHelper.characterFormat.localeIdAscii === 3082) {\n          return this.getOrdinalTextInSpanish(true, listValue.toString()).toUpperCase();\n        } else {\n          return this.getOrdinalText(true, listValue.toString()).toUpperCase();\n        }\n      case 'Ordinal':\n        return this.getAsOrdinal(listValue, listLevel.characterFormat).toString();\n      case 'FarEast':\n        return listValue.toString();\n      case 'Special':\n        return listValue.toString();\n      default:\n        return '';\n    }\n  };\n  Layout.prototype.getFootEndNote = function (numberFormat, value) {\n    switch (numberFormat) {\n      case 'UpperCaseRoman':\n        return this.getAsRoman(value).toUpperCase();\n      case 'LowerCaseRoman':\n        return this.getAsRoman(value).toLowerCase();\n      case 'UpperCaseLetter':\n        return this.getAsLetter(value).toUpperCase();\n      case 'LowerCaseLetter':\n        return this.getAsLetter(value).toLowerCase();\n      default:\n        return value.toString();\n    }\n  };\n  Layout.prototype.generateNumber = function (number, magnitude, letter) {\n    var numberstring = '';\n    while (number >= magnitude) {\n      number -= magnitude;\n      numberstring += letter;\n      this.value = number;\n    }\n    return numberstring.toString();\n  };\n  Layout.prototype.getAsLeadingZero = function (listValue) {\n    if (listValue < 10) {\n      return '0' + listValue.toString();\n    } else {\n      return listValue.toString();\n    }\n  };\n  Layout.prototype.getAsRoman = function (number) {\n    var retval = '';\n    this.value = number;\n    retval += this.generateNumber(this.value, 1000, 'M');\n    retval += this.generateNumber(this.value, 900, 'CM');\n    retval += this.generateNumber(this.value, 500, 'D');\n    retval += this.generateNumber(this.value, 400, 'CD');\n    retval += this.generateNumber(this.value, 100, 'C');\n    retval += this.generateNumber(this.value, 90, 'XC');\n    retval += this.generateNumber(this.value, 50, 'L');\n    retval += this.generateNumber(this.value, 40, 'XL');\n    retval += this.generateNumber(this.value, 10, 'X');\n    retval += this.generateNumber(this.value, 9, 'IX');\n    retval += this.generateNumber(this.value, 5, 'V');\n    retval += this.generateNumber(this.value, 4, 'IV');\n    retval += this.generateNumber(this.value, 1, 'I');\n    return retval.toString();\n  };\n  Layout.prototype.getOrdinalText = function (ordinalString, text) {\n    //Check whether the text contain alphabet or not\n    if (ordinalString) {\n      text = text.trim();\n      for (var i = 0; i < text.length; i++) {\n        if (/[a-zA-Z]/.test(text.charAt(i))) {\n          ordinalString = false;\n          break;\n        }\n      }\n      //Get ordinal string\n      if (ordinalString) {\n        text = this.numberToWords(parseInt(text), false);\n      }\n    }\n    return text;\n  };\n  Layout.prototype.numberToWords = function (number, isCardText) {\n    if (number === 0) return \"zero\";\n    var words = '';\n    if (Math.floor(number / 1000000) > 0) {\n      words += this.numberToWords(Math.floor(number / 1000000), isCardText) + \" million \";\n      if (!isCardText && number % 10 === 0) words += \"th \";\n      number %= 1000000;\n    }\n    if (Math.floor(number / 1000) > 0) {\n      words += this.numberToWords(Math.floor(number / 1000), isCardText) + \" thousand \";\n      if (!isCardText && number % 10 === 0) words += \"th \";\n      number %= 1000;\n    }\n    if (Math.floor(number / 100) > 0) {\n      words += this.numberToWords(Math.floor(number / 100), isCardText) + \" hundred \";\n      if (!isCardText && number % 10 === 0) words += \"th \";\n      number %= 100;\n    }\n    if (number > 0) {\n      if (words !== '' && isCardText) words += \"and \";\n      var unitsValue = null;\n      if (isCardText) {\n        unitsValue = [\"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"];\n      } else {\n        unitsValue = [\"\", \"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\", \"eighteenth\", \"nineteenth\"];\n      }\n      var tensValue = [\"\", \"ten\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"];\n      var tensValue_ith = [\"\", \"tenth\", \"twentieth\", \"thirtieth\", \"fortieth\", \"fiftieth\", \"sixtieth\", \"seventieth\", \"eightieth\", \"ninetieth\"];\n      if (number < 20) words += unitsValue[number];else {\n        if (isCardText || number % 10 > 0) words += tensValue[Math.floor(number / 10)];\n        if (number % 10 === 0 && !isCardText) words += tensValue_ith[Math.floor(number / 10)];else if (number % 10 > 0) words += \"-\" + unitsValue[number % 10];\n      }\n    }\n    return words;\n  };\n  Layout.prototype.getOrdinalTextInSpanish = function (ordinalString, text) {\n    //Check whether the text contain alphabet or not\n    if (ordinalString) {\n      text = text.trim();\n      for (var i = 0; i < text.length; i++) {\n        if (/[a-zA-Z]/.test(text.charAt(i))) {\n          ordinalString = false;\n          break;\n        }\n      }\n      //Get ordinal string\n      if (ordinalString) {\n        text = this.numberToSpanishWords(parseInt(text), false);\n      }\n    }\n    return text;\n  };\n  Layout.prototype.numberToSpanishWords = function (number, isCardText) {\n    if (number === 0 && isCardText) return \"cero\";\n    var words = '';\n    if (Math.floor(number / 1000) > 0 && number <= 10000) {\n      var thousandCardinalValue = [\"\", \"mil\", \"dos mil\", \"tres mil\", \"cuatro mil\", \"cinco mil\", \"seis mil\", \"siete mil\", \"ocho mil\", \"nueve mil\", \"diez mil\"];\n      var thousandOrdinalValue = [\"\", \"milésimo\", \"dosmilésimo\", \"tresmilésimo\", \"cuatromilésimo\", \"cincomilésimo\", \"seismilésimo\", \"sietemilésimo\", \"ochomilésimo\", \"nuevemilésimo\", \"diezmilésimo\"];\n      if (isCardText) words += thousandCardinalValue[Math.floor(number / 1000)];else words += thousandOrdinalValue[Math.floor(number / 1000)];\n      number %= 1000;\n    }\n    if (Math.floor(number / 100) > 0) {\n      if (words !== '') words += \" \";\n      var cardinalHundredsValue = [\"\", \"ciento\", \"doscientos\", \"trescientos\", \"cuatrocientos\", \"quinientos\", \"seiscientos\", \"setecientos\", \"ochocientos\", \"novecientos\"];\n      var ordinalHundredsValue = [\"\", \"centésimo\", \"ducentésimo\", \"tricentésimo\", \"cuadringentésimo\", \"quingentésimo\", \"sexcentésimo\", \"septingentésimo\", \"octingentésimo\", \"noningentésimo\"];\n      if (isCardText) words += cardinalHundredsValue[Math.floor(number / 100)];else words += ordinalHundredsValue[Math.floor(number / 100)];\n      number %= 100;\n    }\n    if (number > 0 && number < 100) {\n      if (words !== '') words += \" \";\n      var unitsValue = null;\n      if (isCardText) {\n        unitsValue = [\"\", \"uno\", \"dos\", \"tres\", \"cuatro\", \"cinco\", \"seis\", \"siete\", \"ocho\", \"nueve\", \"diez\", \"once\", \"doce\", \"trece\", \"catorce\", \"quince\", \"dieciséis\", \"diecisiete\", \"dieciocho\", \"diecinueve\"];\n      } else {\n        unitsValue = [\"\", \"primero\", \"segundo\", \"tercero\", \"cuarto\", \"quinto\", \"sexto\", \"séptimo\", \"octavo\", \"noveno\", \"décimo\", \"undécimo\", \"duodécimo\", \"decimotercero\", \"decimocuarto\", \"decimoquinto\", \"decimosexto\", \"decimoséptimo\", \"decimoctavo\", \"decimonoveno\"];\n      }\n      var tensValue = [\"\", \"diez\", \"veinte\", \"treinta\", \"cuarenta\", \"cincuenta\", \"sesenta\", \"setenta\", \"ochenta\", \"noventa\"];\n      var tensValue_Ordinal = [\"\", \"décimo\", \"vigésimo\", \"trigésimo\", \"cuadragésimo\", \"quincuagésimo\", \"sexagésimo\", \"septuagésimo\", \"octogésimo\", \"nonagésimo\"];\n      var cardNumberFrom21to29Value = [\"\", \"veintiuno\", \"veintidós\", \"veintitrés\", \"veinticuatro\", \"veinticinco\", \"veintiséis\", \"veintisiete\", \"veintiocho\", \"veintinueve\"];\n      if (number < 20) words += unitsValue[number];else if (number > 20 && number < 30 && isCardText) {\n        words += cardNumberFrom21to29Value[number % 10];\n      } else {\n        if (isCardText && number % 10 > 0) words += tensValue[Math.floor(number / 10)];else if (isCardText && number % 10 === 0) words += tensValue[Math.floor(number / 10)];\n        if (number % 10 > 0 && !isCardText) words += tensValue_Ordinal[Math.floor(number / 10)];\n        if (number % 10 === 0 && !isCardText) words += tensValue_Ordinal[Math.floor(number / 10)];else if (number % 10 > 0) if (isCardText) words += \" y \" + unitsValue[number % 10];else words += \" \" + unitsValue[number % 10];\n      }\n    }\n    return words;\n  };\n  Layout.prototype.getAsOrdinal = function (number, characterFormat) {\n    switch (characterFormat.localeIdAscii) {\n      case 1069:\n      case 8218:\n      case 5146:\n      case 4122:\n      case 1050:\n      case 1029:\n      case 1061:\n      case 1035:\n      case 3079:\n      case 1031:\n      case 5127:\n      case 4103:\n      case 2055:\n      case 1038:\n      case 1060:\n      case 1055:\n      case 1044:\n      case 2068:\n      case 1045:\n      case 6170:\n      case 2074:\n        //Returns ordinal in Czech\n        return number.toString() + \".\";\n      case 2060:\n      case 11276:\n      case 3084:\n      case 9228:\n      case 12300:\n      case 1036:\n      case 15372:\n      case 5132:\n      case 13324:\n      case 6156:\n      case 14348:\n      case 8204:\n      case 10252:\n      case 4108:\n        //Returns Ordinal in French\n        if (number == 1) return number.toString() + \"er\";else return number.toString() + \"e\";\n      case 2067:\n      case 1043:\n        //Returns Ordinal in Dutch\n        return number.toString() + \"e\";\n      case 1032:\n        //Returns Ordinal in Greek \n        return number.toString() + \"o\";\n      case 1040:\n      case 2064:\n        //Returns Ordinal in Italian\n        return number.toString() + String.fromCharCode(176);\n      case 5130:\n      case 7178:\n      case 12298:\n      case 17418:\n      case 4106:\n      case 1046:\n      case 2070:\n      case 11274:\n      case 16394:\n      case 13322:\n      case 9226:\n      case 18442:\n      case 2058:\n      case 19466:\n      case 6154:\n      case 15370:\n      case 10250:\n      case 20490:\n      case 3082:\n      case 1034:\n      case 21514:\n      case 14346:\n      case 8202:\n        //Returns Ordinal in Spanish\n        return number.toString() + String.fromCharCode(186);\n      case 1049:\n      case 2073:\n        //Returns Ordinal in Russian\n        return number.toString() + \"-\" + String.fromCharCode(1081);\n      case 2077:\n      case 1053:\n        //Returns Ordinal in Swedish\n        return this.getOrdinalInSwedish(number);\n      case 1027:\n        //Returns Ordinal in Catalan\n        return this.getOrdinalInCatalan(number);\n      case 1030:\n        //Returns Ordinal in Danish\n        return this.getOrdinalInDanish(number);\n      default:\n        //Returns Ordinal in English (Default)\n        return this.getOrdinalInEnglish(number);\n    }\n  };\n  Layout.prototype.getOrdinalInEnglish = function (number) {\n    switch (number % 100) {\n      case 11:\n      case 12:\n      case 13:\n        return number.toString() + \"th\";\n    }\n    switch (number % 10) {\n      case 1:\n        return number.toString() + \"st\";\n      case 2:\n        return number.toString() + \"nd\";\n      case 3:\n        return number.toString() + \"rd\";\n      default:\n        return number.toString() + \"th\";\n    }\n  };\n  Layout.prototype.getOrdinalInSwedish = function (number) {\n    if (number == 11 || number == 12) {\n      return number.toString() + \":e\";\n    } else if (number % 10 == 1 || number % 10 == 2) {\n      return number.toString() + \":a\";\n    } else return number.toString() + \":e\";\n  };\n  Layout.prototype.getOrdinalInCatalan = function (number) {\n    switch (number) {\n      case 1:\n        return number.toString() + \".\";\n      case 2:\n        return number.toString() + \"n\";\n      case 3:\n        return number.toString() + \"r\";\n      case 4:\n        return number.toString() + \"t\";\n      case 14:\n        return number.toString() + String.fromCharCode(232) + \"h\";\n      default:\n        return number.toString() + String.fromCharCode(232);\n    }\n  };\n  Layout.prototype.getOrdinalInDanish = function (number) {\n    if (number == 0) return number.toString() + \"te\";\n    switch (number % 100) {\n      case 0:\n        return number.toString() + \"ende\";\n      case 1:\n        return number.toString() + \"ste\";\n      case 2:\n        return number.toString() + \"nden\";\n      case 3:\n        return number.toString() + \"dje\";\n      case 4:\n        return number.toString() + \"rde\";\n      case 5:\n      case 6:\n      case 11:\n      case 12:\n      case 30:\n        return number.toString() + \"te\";\n      default:\n        return number.toString() + \"nde\";\n    }\n  };\n  Layout.prototype.getListLevel = function (list, listLevelNumber) {\n    if (!isNullOrUndefined(list)) {\n      var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n      if (!isNullOrUndefined(list) && abstractList.levels.length <= listLevelNumber && listLevelNumber >= 0 && listLevelNumber < 9) {\n        this.addListLevels(abstractList);\n      }\n      var levelOverrideAdv = undefined;\n      var level = false;\n      level = !isNullOrUndefined(list.levelOverrides) && !isNullOrUndefined(levelOverrideAdv = this.getOverrideListLevel(list.levelOverrides, listLevelNumber)) && !isNullOrUndefined(levelOverrideAdv.overrideListLevel);\n      if (level) {\n        if (isNullOrUndefined(levelOverrideAdv.startAt)) {\n          levelOverrideAdv.overrideListLevel.startAt = abstractList.levels[listLevelNumber].startAt;\n        }\n        return levelOverrideAdv.overrideListLevel;\n      } else if (!isNullOrUndefined(abstractList) && listLevelNumber >= 0 && listLevelNumber < abstractList.levels.length) {\n        return abstractList.levels[listLevelNumber];\n      }\n    }\n    return undefined;\n  };\n  Layout.prototype.getOverrideListLevel = function (levelOverrides, listLevelNumber) {\n    for (var i = 0; i < levelOverrides.length; i++) {\n      if (levelOverrides[i].levelNumber == listLevelNumber) return levelOverrides[i];\n    }\n    return undefined;\n  };\n  Layout.prototype.getTabWidth = function (paragraph, viewer, index, lineWidget, element) {\n    var fPosition = 0;\n    var isCustomTab = false;\n    var tabs = paragraph.paragraphFormat.getUpdatedTabs();\n    var isList = false;\n    var sectionFormat = paragraph.bodyWidget.sectionFormat;\n    var leftMargin = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n    var tabBeforeLeftIndent = false;\n    if (!isNullOrUndefined(paragraph.paragraphFormat.listFormat.listLevel) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat)) {\n      var listFormat = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat;\n      if (paragraph.paragraphFormat.leftIndent !== listFormat.leftIndent) {\n        isList = true;\n      }\n    }\n    var clientWidth = 0;\n    var clientActiveX = viewer.clientActiveArea.x;\n    var firstLineIndent = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n    var leftIndent = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent);\n    if (!isNullOrUndefined(element) && lineWidget.isFirstLine()) {\n      clientWidth = this.viewer.clientArea.x + firstLineIndent;\n      if (isList) {\n        clientActiveX = clientActiveX + firstLineIndent;\n      }\n    } else {\n      clientWidth = this.viewer.clientArea.x;\n    }\n    if (clientActiveX < clientWidth && (this.documentHelper.compatibilityMode !== 'Word2003' || tabs.length === 0)) {\n      return viewer.clientArea.x - viewer.clientActiveArea.x;\n    }\n    var position = viewer.clientActiveArea.x - (viewer.clientArea.x - HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent));\n    for (var i = 0; i < tabs.length; i++) {\n      var tabStop = tabs[i];\n      var tabStopPosition = HelperMethods.convertPointToPixel(tabStop.position);\n      if (tabStopPosition < leftIndent) {\n        if (parseFloat(position.toFixed(2)) < parseFloat(tabStopPosition.toFixed(2))) {\n          tabBeforeLeftIndent = true;\n        } else {\n          tabBeforeLeftIndent = false;\n        }\n      }\n    }\n    if (lineWidget.isFirstLine() && leftIndent > 0 && firstLineIndent < 0 && (element instanceof ListTextElementBox || !tabBeforeLeftIndent)) {\n      if (viewer.clientArea.x - viewer.clientActiveArea.x > 0) {\n        return viewer.clientArea.x - viewer.clientActiveArea.x;\n      } else if (tabs.length === 0 && paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listLevel) {\n        tabs = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat.tabs;\n      }\n    }\n    // Calculates tabwidth based on pageleftmargin and defaulttabwidth property\n    var defaultTabWidth = HelperMethods.convertPointToPixel(this.documentHelper.defaultTabWidth);\n    if (tabs.length === 0 && (position > 0 && defaultTabWidth > Math.round(position) && isList || defaultTabWidth === this.defaultTabWidthPixel && defaultTabWidth > Math.round(position))) {\n      return defaultTabWidth - position;\n    } else {\n      var breaked = false;\n      if (tabs.length > 0) {\n        for (var i = tabs.length - 1; i > -1; i--) {\n          var tabStop = tabs[i];\n          var tabPosition = HelperMethods.convertPointToPixel(tabStop.position);\n          if (!(parseFloat(tabPosition.toFixed(2)) > parseFloat(position.toFixed(2)))) {\n            if (i > 0 && HelperMethods.convertPointToPixel(tabs[i - 1].position) > parseFloat(position.toFixed(2))) {\n              continue;\n            }\n            if (i != tabs.length - 1) {\n              var tabInfo = this.getJustificationTabWidth(tabs[i + 1], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n              defaultTabWidth = tabInfo.defaultTabWidth;\n              fPosition = tabInfo.fPosition;\n              position = tabInfo.position;\n              isCustomTab = true;\n            }\n            breaked = true;\n            break;\n          }\n        }\n        if (!breaked) {\n          var tabJustification = this.getJustificationTabWidth(tabs[0], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n          defaultTabWidth = tabJustification.defaultTabWidth;\n          fPosition = tabJustification.fPosition;\n          position = tabJustification.position;\n          isCustomTab = true;\n        }\n      }\n      if (!isCustomTab) {\n        var diff = parseFloat((position * 100 % (defaultTabWidth * 100) / 100).toFixed(2));\n        var cnt = (position - diff) / defaultTabWidth;\n        fPosition = (cnt + 1) * defaultTabWidth;\n      }\n      if (parseFloat(fPosition.toFixed(1)) === parseFloat(position.toFixed(1))) {\n        return defaultTabWidth;\n      }\n      return fPosition - position > 0 ? fPosition - position : defaultTabWidth;\n    }\n  };\n  Layout.prototype.getJustificationTabWidth = function (tab, element, lineWidget, paragraph, defaultTabWidth, position, fPosition) {\n    var elementWidth = element ? this.documentHelper.textHelper.getTextSize(element, element.characterFormat) : 0;\n    if (tab.tabJustification === 'Left' || tab.tabJustification === 'List') {\n      fPosition = HelperMethods.convertPointToPixel(tab.position);\n      if (element instanceof TabElementBox) {\n        element.tabLeader = tab.tabLeader;\n        element.tabText = '';\n      }\n    } else {\n      var tabWidth = HelperMethods.convertPointToPixel(tab.position) - position;\n      var width = this.getRightTabWidth(element.indexInOwner + 1, lineWidget, paragraph);\n      if (width < tabWidth && tab.tabJustification != 'Decimal') {\n        if (tab.tabJustification === 'Right') {\n          defaultTabWidth = tabWidth - width;\n          var rightIndent = HelperMethods.convertPointToPixel(paragraph.rightIndent);\n          var areaWidth = this.viewer.clientActiveArea.width + rightIndent - defaultTabWidth;\n          this.viewer.clientActiveArea.width += rightIndent;\n          if (areaWidth < 0) {\n            defaultTabWidth += areaWidth - width;\n          } else if (width > areaWidth) {\n            defaultTabWidth -= width - areaWidth;\n          }\n        } else {\n          defaultTabWidth = tabWidth - width / 2;\n        }\n      } else if (tab.tabJustification === 'Center' && width / 2 < tabWidth) {\n        defaultTabWidth = tabWidth - width / 2;\n      } else if (tab.tabJustification === 'Decimal') {\n        if (!isNullOrUndefined(element.nextElement) && element.nextElement instanceof TextElementBox) {\n          var nextElement = element.nextElement;\n          if (nextElement.text.indexOf(\".\") != -1) {\n            var index = nextElement.text.indexOf(\".\");\n            var text = nextElement.text.substring(0, index);\n            var textWidth = this.documentHelper.textHelper.getWidth(text, nextElement.characterFormat, nextElement.scriptType);\n            defaultTabWidth = tabWidth - textWidth;\n          } else if (width < tabWidth) {\n            defaultTabWidth = tabWidth - width;\n          } else {\n            defaultTabWidth = tabWidth;\n          }\n        } else {\n          defaultTabWidth = tabWidth;\n        }\n      } else {\n        defaultTabWidth = tab.tabJustification === 'Right' ? 0 : elementWidth;\n      }\n      fPosition = position;\n      if (element instanceof TabElementBox) {\n        element.tabLeader = tab.tabLeader;\n        element.tabText = '';\n      }\n    }\n    return {\n      defaultTabWidth: defaultTabWidth,\n      fPosition: fPosition,\n      position: position\n    };\n  };\n  Layout.prototype.getRightTabWidth = function (index, lineWidget, paragraph) {\n    var width = 0;\n    var isFieldCode = false;\n    var elementBox = lineWidget.children[index];\n    while (elementBox) {\n      if (elementBox instanceof FieldElementBox || elementBox instanceof BookmarkElementBox || isFieldCode) {\n        if (elementBox instanceof FieldElementBox) {\n          if (elementBox.fieldType === 0) {\n            isFieldCode = true;\n          } else if (elementBox.fieldType === 2) {\n            isFieldCode = false;\n          }\n        }\n        elementBox.width = 0;\n      } else {\n        if (elementBox instanceof FieldTextElementBox && !this.isTocField(elementBox.fieldBegin)) {\n          var text = this.documentHelper.getFieldResult(elementBox.fieldBegin, elementBox.paragraph.bodyWidget.page);\n          if (text !== '') {\n            elementBox.text = text;\n          }\n        }\n        if (elementBox instanceof TextElementBox) {\n          this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n        }\n      }\n      if (elementBox instanceof TextElementBox && elementBox.text === '\\t') {\n        return width;\n      } else {\n        width = width + elementBox.width;\n      }\n      elementBox = elementBox.nextNode;\n    }\n    return width;\n  };\n  Layout.prototype.getSplitIndexByWord = function (clientActiveWidth, text, width, characterFormat, scriptType) {\n    var index = 0;\n    var length = text.length;\n    while (index < length) {\n      var nextIndex = this.getTextIndexAfterSpace(text, index);\n      if (nextIndex === 0 || nextIndex === length) {\n        nextIndex = length - 1;\n      }\n      var splitWidth = width;\n      if ((nextIndex < length - 1 || nextIndex === length - 1 && text[nextIndex - 1] === ' ') && index !== nextIndex) {\n        splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, nextIndex), characterFormat, scriptType);\n      }\n      if (splitWidth <= clientActiveWidth) {\n        index = nextIndex;\n      } else {\n        if (index === 0 && text[0] === ' ') {\n          index = this.getTextIndexAfterSpace(text, 0);\n        }\n        break;\n      }\n    }\n    return index;\n  };\n  Layout.prototype.getTextSplitIndexByCharacter = function (totalClientWidth, clientActiveAreaWidth, text, width, characterFormat, scriptType) {\n    var length = text.length;\n    for (var i = 0; i < length; i++) {\n      var splitWidth = width;\n      if (i + 1 < length) {\n        splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, i + 1), characterFormat, scriptType);\n      }\n      if (splitWidth > clientActiveAreaWidth) {\n        if (i === 0 && splitWidth > totalClientWidth) {\n          //Handle for cell/section having client width less than a character's width.\n          return length > 1 && text[1] === ' ' ? this.getTextIndexAfterSpace(text, 1) : 1;\n        } else if (text[i] === ' ') {\n          // If the character is space, then split the text from next character.\n          return this.getTextIndexAfterSpace(text, i);\n        }\n        return i;\n      }\n    }\n    return 0;\n  };\n  Layout.prototype.getSubWidth = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n    var width = 0;\n    var trimSpace = true;\n    var lineText = '';\n    var trimmedSpaceWidth = 0;\n    var isBidi = lineWidget.paragraph.paragraphFormat.bidi;\n    if (this.wrapPosition.length > 0) {\n      var subWidths = this.getSubWidthBasedOnTextWrap(lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd);\n      if (subWidths.length > 0) {\n        return subWidths;\n      }\n    }\n    var renderElementBox = lineWidget.renderedElements;\n    for (var i = renderElementBox.length - 1; i >= 0; i--) {\n      var element = renderElementBox[i];\n      if (element.width > 0 && element instanceof TextElementBox) {\n        var elementText = element.text;\n        lineText = elementText + lineText;\n        if (justify && isBidi) {\n          if (elementText === ' ' && i - 1 >= 0 && renderElementBox[i - 1].text === ' ') {\n            trimSpace = true;\n          } else {\n            trimSpace = false;\n          }\n        }\n        if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n          if (HelperMethods.endsWith(elementText)) {\n            var widthExcludeSpace = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, element.characterFormat, element.scriptType);\n            width += widthExcludeSpace;\n            // Trimmed space width can be found by subtracting the actual width and width exclude end space.\n            trimmedSpaceWidth += element.width - widthExcludeSpace;\n          } else {\n            width += element.width;\n          }\n          trimSpace = false;\n        } else if (!trimSpace) {\n          width += element.width;\n        } else {\n          ////Add the width of the textelement which contains space alone and present at end of the line.\n          trimmedSpaceWidth += element.width;\n        }\n      } else {\n        lineText = 'a' + lineText;\n        trimSpace = false;\n        if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n          continue;\n        }\n        width += element.width;\n      }\n      if (!justify) {\n        width = Math.round(width);\n      } else {\n        width = width;\n      }\n    }\n    var totalSpaceCount = lineText.length - HelperMethods.removeSpace(lineText).length;\n    lineText = lineText.trim();\n    spaceCount = lineText.length - HelperMethods.removeSpace(lineText).length;\n    var subWidth = this.viewer.clientArea.width - firstLineIndent - width;\n    var totalSubWidth = this.viewer.clientArea.width - firstLineIndent - (width + trimmedSpaceWidth);\n    if (isBidi && justify) {\n      if (totalSubWidth < 0) {\n        trimmedSpaceWidth = -trimmedSpaceWidth;\n      } else {\n        subWidth = totalSubWidth;\n      }\n    }\n    if (subWidth <= 0 && !this.is2013Justification || spaceCount === 0 && justify && !isBidi) {\n      spaceCount = 0;\n      subWidth = 0;\n    } else if (justify) {\n      // For justify alignment, element width will be updated based space count value.\n      // So when the element is paragraph end, need to set space count to zero.\n      if (!isParagraphEnd && spaceCount > 0 || isParagraphEnd && this.is2013Justification && spaceCount > 0) {\n        subWidth = subWidth / spaceCount;\n      } else {\n        spaceCount = 0;\n      }\n    }\n    ////Generally, trailing space of line should get trimmed, if alignment type is Right or Left.\n    ////But, if right-to-left rendering is enabled and it is last line of paragraph than the trailing space should be preserved.\n    ////So, subtracted the trimmedSpaceWidth from subWidth.\n    else if (trimmedSpaceWidth > 0 && isBidi && isParagraphEnd) {\n      subWidth -= trimmedSpaceWidth;\n    }\n    // So set sub width to zero to layout the element in left alignment\n    // Need to remove is once after implementing subwidth update separatly\n    return [{\n      'trimmedSpaceWidth': trimmedSpaceWidth,\n      'subWidth': subWidth,\n      'spaceCount': spaceCount,\n      'totalSpaceCount': totalSpaceCount\n    }];\n  };\n  Layout.prototype.getSubWidthBasedOnTextWrap = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n    var subWidths = [];\n    var width = 0;\n    var lineContent = '';\n    var wrapIndex = this.wrapPosition.length - 1;\n    var trimSpace = true;\n    for (var z = lineWidget.children.length - 1; z >= 0; z--) {\n      var elementBox = lineWidget.children[z];\n      if (elementBox.width > 0 && elementBox instanceof TextElementBox) {\n        var elementText = elementBox.text;\n        lineContent = elementText + lineContent;\n        if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n          if (HelperMethods.endsWith(elementText)) {\n            width += this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, elementBox.characterFormat, elementBox.scriptType);\n          } else {\n            width += elementBox.width;\n          }\n          trimSpace = false;\n        } else if (!trimSpace) {\n          width += elementBox.width;\n        }\n      } else {\n        lineContent = 'a' + lineContent;\n        trimSpace = false;\n        if (!(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n          width += elementBox.width;\n        }\n      }\n      if ((elementBox.padding.left > 0 || z === 0) && wrapIndex >= 0) {\n        var wrapPosition = this.wrapPosition[wrapIndex--];\n        while (wrapPosition.width <= 0 && wrapIndex >= 0) {\n          wrapPosition = this.wrapPosition[wrapIndex--];\n        }\n        var info = this.getSubWidthInfo(lineWidget, wrapPosition.width, width, lineContent, spaceCount, justify, isParagraphEnd);\n        if (!isNullOrUndefined(info)) {\n          width = 0;\n          lineContent = '';\n          subWidths.unshift(info);\n        }\n      }\n    }\n    return subWidths;\n  };\n  /* eslint-disable  */\n  Layout.prototype.isWordFittedByJustification = function (element, nextWordWidth) {\n    var line = element.line;\n    var paragraph = line.paragraph;\n    var paraFormat = paragraph.paragraphFormat;\n    var textAlignment = paraFormat.textAlignment;\n    var isParagraphEnd = line.isLastLine();\n    var firstLineIndent = 0;\n    if (line.isFirstLine()) {\n      firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n    }\n    var availableLineWidth = this.viewer.clientActiveArea.width;\n    if (nextWordWidth != 0 && availableLineWidth >= nextWordWidth / 2) {\n      var whiteSpaceCount = 0;\n      var widthInfo = void 0;\n      var totalSpaceCount = 0;\n      if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd) || textAlignment === 'Justify' && paraFormat.bidi || this.is2013Justification && isParagraphEnd)) {\n        widthInfo = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n        whiteSpaceCount = widthInfo[0].spaceCount;\n        totalSpaceCount = widthInfo[0].totalSpaceCount;\n      }\n      if (!isNullOrUndefined(widthInfo) && widthInfo.length == 1 && availableLineWidth > 0 && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013' && !this.is2013Justification && paraFormat.rightIndent === 0 && paraFormat.leftIndent === 0) {\n        var effectiveWidth = 0;\n        var totalSpaceWidth = this.getTotalSpaceWidth(line, totalSpaceCount);\n        var normalWidth = totalSpaceWidth / totalSpaceCount;\n        var justifyWidth = (availableLineWidth + totalSpaceWidth) / totalSpaceCount;\n        var diffFactor = (justifyWidth - normalWidth) / normalWidth * 100;\n        if (diffFactor <= 33) {\n          effectiveWidth = totalSpaceWidth / 8;\n        } else {\n          effectiveWidth = totalSpaceWidth / 4;\n        }\n        if (availableLineWidth + effectiveWidth >= nextWordWidth) {\n          this.viewer.clientActiveArea.x -= effectiveWidth;\n          this.viewer.clientActiveArea.width += effectiveWidth;\n          this.is2013Justification = true;\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * Returns the total space width in line widget.\n   * @param {LineWidget} lineWidget - the line widget\n   * @param {number} count - the space count to be considered.\n   * @returns {number} the total space width.\n   */\n  Layout.prototype.getTotalSpaceWidth = function (lineWidget, count) {\n    var totalSpaceWidth = 0;\n    var totalSpaceCount = 0;\n    if (lineWidget) {\n      for (var i = 0; i < lineWidget.children.length; i++) {\n        var currentWidget = lineWidget.children[i];\n        if (currentWidget instanceof TextElementBox) {\n          var spaceCount = currentWidget.text.length - HelperMethods.removeSpace(currentWidget.text).length;\n          if (spaceCount > 0) {\n            var spaceWidth = this.documentHelper.textHelper.getWidth(' ', currentWidget.characterFormat, currentWidget.scriptType);\n            totalSpaceWidth += spaceCount * spaceWidth;\n            totalSpaceCount += spaceCount;\n          }\n        }\n        if (!isNullOrUndefined(count) && totalSpaceCount >= count) {\n          break;\n        }\n      }\n    }\n    return totalSpaceWidth;\n  };\n  Layout.prototype.getSubWidthInfo = function (lineWidget, lastWrapPositionWidth, width, lineContent, spaceCount, justify, isParagraphEnd) {\n    if (lastWrapPositionWidth > 0) {\n      var wrappedSubWidth = lastWrapPositionWidth - width;\n      lineContent = lineContent.trim();\n      spaceCount = lineContent.length - HelperMethods.removeSpace(lineContent).length;\n      // TODO: Consider first line indent.\n      var totalSubWidth = wrappedSubWidth;\n      if (totalSubWidth <= 0 || spaceCount === 0 && justify && !lineWidget.paragraph.paragraphFormat.bidi) {\n        spaceCount = 0;\n        totalSubWidth = 0;\n      } else if (justify) {\n        // For justify alignment, element width will be updated based space count value.\n        // So when the element is paragraph end, need to set space count to zero.\n        if (!isParagraphEnd && spaceCount > 0) {\n          totalSubWidth = totalSubWidth / spaceCount;\n        } else {\n          spaceCount = 0;\n        }\n      }\n      return {\n        'trimmedSpaceWidth': 0,\n        'subWidth': totalSubWidth,\n        'spaceCount': spaceCount,\n        'totalSpaceCount': spaceCount\n      };\n    }\n    return undefined;\n  };\n  Layout.prototype.getBeforeSpacing = function (paragraph, pageIndex) {\n    var beforeSpacing = 0;\n    if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing) {\n      var previousBlock = paragraph.previousWidget;\n      if (previousBlock instanceof ParagraphWidget) {\n        var afterSpacing = this.getAfterSpacing(previousBlock);\n        var before = paragraph.paragraphFormat.beforeSpacing;\n        if (paragraph.paragraphFormat.spaceBeforeAuto) {\n          before = 14;\n        }\n        if (afterSpacing < before) {\n          beforeSpacing = before - afterSpacing;\n        }\n      } else if (previousBlock instanceof TableWidget) {\n        if (paragraph.paragraphFormat.spaceBeforeAuto) {\n          beforeSpacing = 14;\n        } else {\n          beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n        }\n      } else {\n        if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0]) {\n          if (this.documentHelper.pages[pageIndex].sectionIndex !== this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n            if (paragraph.paragraphFormat.spaceBeforeAuto) {\n              beforeSpacing = 14;\n            } else {\n              beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n            }\n          }\n        } else {\n          if (paragraph.paragraphFormat.spaceBeforeAuto) {\n            beforeSpacing = 0;\n          } else {\n            beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n          }\n        }\n      }\n    } else {\n      beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n    }\n    if (this.isSameStyle(paragraph, false)) {\n      return 0;\n    } else {\n      return HelperMethods.convertPointToPixel(beforeSpacing);\n    }\n  };\n  Layout.prototype.getAfterSpacing = function (paragraph) {\n    var afterSpacing = paragraph.paragraphFormat.afterSpacing;\n    if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing && paragraph.paragraphFormat.spaceAfterAuto) {\n      if (isNullOrUndefined(paragraph.nextWidget) && paragraph.isInsideTable) {\n        afterSpacing = 0;\n      } else {\n        afterSpacing = 14;\n      }\n    }\n    if (this.isSameStyle(paragraph, true)) {\n      return 0;\n    } else {\n      return afterSpacing;\n    }\n  };\n  Layout.prototype.getLineSpacing = function (paragraph, maxHeight, alterLineSpacing) {\n    if (isNullOrUndefined(paragraph.paragraphFormat)) {\n      return 0;\n    }\n    var lineSpacing = 0;\n    switch (paragraph.paragraphFormat.lineSpacingType) {\n      case 'AtLeast':\n      case 'Exactly':\n        lineSpacing = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.lineSpacing);\n        break;\n      default:\n        lineSpacing = paragraph.paragraphFormat.lineSpacing;\n        if (alterLineSpacing) {\n          lineSpacing = lineSpacing - 1;\n        }\n        lineSpacing = lineSpacing * maxHeight;\n        break;\n    }\n    return lineSpacing;\n  };\n  Layout.prototype.isParagraphFirstLine = function (paragraph, line) {\n    var widget = paragraph;\n    if (isNullOrUndefined(widget.childWidgets) || widget.childWidgets.indexOf(line) === 0) {\n      //If the line elements conatins the elements from previous paragraph then need to retun false.\n      //Example scenario, Field start and field end in different paragraphs.\n      if (line.children.length > 0 && !isNullOrUndefined(paragraph.previousWidget) && paragraph.previousWidget instanceof ParagraphWidget) {\n        return line.paragraph.index !== paragraph.previousWidget.index;\n      }\n      return true; //If the line elements count is zero then also need to return true.\n    }\n    return false;\n  };\n  Layout.prototype.isParagraphLastLine = function (element) {\n    var paragraph = element.line.paragraph;\n    var lastLineWidget = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n    var lastInline = lastLineWidget.children[lastLineWidget.children.length - 1];\n    if (element === lastInline) {\n      return lastInline instanceof FieldElementBox || !(lastInline instanceof TextElementBox && lastInline.text === '\\v');\n    }\n    return false;\n  };\n  Layout.prototype.getTextIndexAfterSpace = function (text, startIndex) {\n    var length = text.length;\n    var index = 0;\n    var hyphenIndex = 0;\n    index = text.indexOf(' ', startIndex) + 1;\n    hyphenIndex = text.indexOf('-', startIndex) + 1;\n    if (hyphenIndex == 1) {\n      hyphenIndex = text.indexOf('-', hyphenIndex + 1) + 1;\n    }\n    if (hyphenIndex > 0 && index > 0) {\n      index = Math.min(index, hyphenIndex);\n    } else if (hyphenIndex > 0 && index == 0) {\n      index = hyphenIndex;\n    }\n    var nextIndex = index;\n    if (nextIndex === 0 || nextIndex === length) {\n      return nextIndex;\n    }\n    while (text[nextIndex] === ' ') {\n      nextIndex++;\n      if (nextIndex === length) {\n        break;\n      }\n    }\n    return nextIndex;\n  };\n  //#region Table\n  Layout.prototype.moveNextWidgetsToTable = function (tableWidget, currentRow, moveFromNext) {\n    var rowIndex = currentRow.indexInOwner;\n    var currentTable = tableWidget[tableWidget.length - 1];\n    if (moveFromNext) {\n      rowIndex += 1;\n    }\n    var nextWidgets = currentRow.containerWidget.childWidgets.splice(rowIndex);\n    for (var i = 0; i < nextWidgets.length; i++) {\n      currentTable.childWidgets.push(nextWidgets[i]);\n      nextWidgets[i].containerWidget = currentTable;\n    }\n  };\n  Layout.prototype.addTableCellWidget = function (cell, area, maxCellMarginTop, maxCellMarginBottom) {\n    //let tableCellWidget: TableCellWidget = new TableCellWidget(cell);\n    var prevColumnIndex = 0;\n    var cellspace = 0;\n    var left = 0;\n    var top = maxCellMarginTop;\n    var right = 0;\n    var bottom = maxCellMarginBottom;\n    if (!isNullOrUndefined(cell.cellFormat)) {\n      if (cell.cellFormat.containsMargins()) {\n        left = isNullOrUndefined(cell.cellFormat.leftMargin) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin) : HelperMethods.convertPointToPixel(cell.cellFormat.leftMargin);\n        right = isNullOrUndefined(cell.cellFormat.rightMargin) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin) : HelperMethods.convertPointToPixel(cell.cellFormat.rightMargin);\n      } else {\n        if (cell.columnIndex === 0 && cell.ownerRow.rowFormat.hasValue('leftMargin')) {\n          left = HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.leftMargin);\n        } else {\n          left = HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin);\n        }\n        if (cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 && cell.ownerRow.rowFormat.hasValue('rightMargin')) {\n          right = HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.rightMargin);\n        } else {\n          right = HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin);\n        }\n      }\n    }\n    cell.margin = new Margin(left, top, right, bottom);\n    var autofit = cell.ownerTable.tableFormat.allowAutoFit;\n    var cellWidth = cell.cellFormat.cellWidth;\n    if (cell.cellFormat.preferredWidthType === 'Percent' && cell.cellFormat.preferredWidth !== 0 && cellWidth <= 0) {\n      var width = HelperMethods.convertPointToPixel(cell.ownerTable.getTableClientWidth(cell.ownerTable.getContainerWidth()));\n      cellWidth = cell.ownerTable.getCellWidth(cell.cellFormat.preferredWidth, cell.cellFormat.preferredWidthType, width, cell);\n    }\n    // if (cellWidth > cell.cellFormat.preferredWidth && cell.cellFormat.preferredWidth !== 0 && cell.cellFormat.preferredWidthType !== 'Percent' && cell.ownerTable.tableFormat.preferredWidthType !== 'Percent' && isNullOrUndefined(cell.ownerTable.positioning) && (!cell.ownerTable.isContainInsideTable) && (!(cell.ownerTable.containerWidget instanceof TableCellWidget))) {\n    //     cellWidth = cell.cellFormat.preferredWidth;\n    // }\n    cell.width = HelperMethods.convertPointToPixel(cellWidth);\n    if (!isNullOrUndefined(cell.previousWidget)) {\n      prevColumnIndex = cell.previousWidget.columnIndex + cell.previousWidget.cellFormat.columnSpan;\n    }\n    cellspace = !isNullOrUndefined(cell.ownerTable) && !isNullOrUndefined(cell.ownerTable.tableFormat) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) : 0;\n    var prevSpannedCellWidth = 0;\n    if (prevColumnIndex < cell.columnIndex) {\n      prevSpannedCellWidth = HelperMethods.convertPointToPixel(cell.ownerTable.tableHolder.getPreviousSpannedCellWidth(prevColumnIndex, cell.columnIndex));\n      if (prevColumnIndex === 0) {\n        prevSpannedCellWidth = prevSpannedCellWidth - cellspace / 2;\n      }\n    }\n    cell.x = area.x + prevSpannedCellWidth + cell.margin.left;\n    cell.y = area.y + cell.margin.top + cellspace;\n    cell.width = cell.width - cell.margin.left - cell.margin.right;\n    if (cellspace > 0) {\n      cell.x += cellspace;\n      if (cell.ownerTable.tableHolder.columns.length === 1) {\n        cell.width -= cellspace * 2;\n      } else if (cell.columnIndex === 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1) {\n        cell.width -= cellspace * 2 - cellspace / 2;\n      } else {\n        cell.width -= cellspace;\n      }\n    }\n    var leftBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellLeftBorder(cell).getLineWidth());\n    var rightBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellRightBorder(cell).getLineWidth());\n    // update the margins values respect to layouting of borders.\n    // for normal table cells only left border is rendred. for last cell left and right border is rendred.\n    // this border widths are not included in margins.\n    var linestyle = false;\n    cell.leftBorderWidth = !cell.ownerTable.isBidiTable ? leftBorderWidth : rightBorderWidth;\n    var isLeftStyleNone = cell.cellFormat.borders.left.lineStyle === 'None';\n    var isRightStyleNone = cell.cellFormat.borders.right.lineStyle === 'None';\n    cell.x += !isLeftStyleNone ? 0 : cell.leftBorderWidth > 0 ? 0 : cell.leftBorderWidth;\n    cell.width -= !isLeftStyleNone ? 0 : cell.leftBorderWidth > 0 ? 0 : cell.leftBorderWidth;\n    var lastCell = !cell.ownerTable.isBidiTable ? cell.cellIndex === cell.ownerRow.childWidgets.length - 1 : cell.cellIndex === 0;\n    if (cellspace > 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 || cell.index === cell.containerWidget.childWidgets.length - 1) {\n      cell.rightBorderWidth = !cell.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n      if (!cell.ownerTable.tableFormat.allowAutoFit) {\n        cell.width -= cell.rightBorderWidth;\n      }\n      if (!this.isInsertTable()) {\n        linestyle = this.checkPreviousMargins(cell.ownerTable);\n      }\n    }\n    //Add the border widths to respective margin side.\n    //cell.margin.left += (isLeftStyleNone) ? 0 : (cell.leftBorderWidth);\n    cell.margin.right += isRightStyleNone && !linestyle ? 0 : cell.rightBorderWidth;\n    //cell.ownerWidget = owner;\n    if (cell.width < cell.sizeInfo.minimumWidth / 2 && !this.isInitialLoad) {\n      cell.width = cell.sizeInfo.minimumWidth / 2;\n    }\n    return cell;\n  };\n  Layout.prototype.checkPreviousMargins = function (table) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[row.childWidgets.length - 1];\n        if (cell.cellFormat.borders.right.lineStyle !== 'None') {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Layout.prototype.addWidgetToTable = function (viewer, tableCollection, rowCollection, row, footnotes, endRowWidget, isInitialLayout, startRowIndex, isRepeatRowHeader) {\n    //Adds table row widget to owner table widget.\n    var tableWidget = tableCollection[0];\n    var index = tableWidget.childWidgets.length;\n    var prevWidget = undefined;\n    var rowWidgetIndex = rowCollection.indexOf(row);\n    var footnoteWidgets = [];\n    if (rowWidgetIndex > 0) {\n      prevWidget = rowCollection[rowWidgetIndex - 1];\n      // Need to update on this further\n    } else if (row.previousRenderedWidget instanceof TableRowWidget && row.previousRenderedWidget.ownerTable.equals(row.ownerTable)) {\n      // Need to update on this further\n      prevWidget = row.previousRenderedWidget;\n    }\n    if (!isNullOrUndefined(prevWidget)) {\n      tableWidget = prevWidget.containerWidget;\n      // index = tableWidget.childWidgets.length;\n      index = tableWidget.childWidgets.indexOf(prevWidget) + 1;\n      if (Math.round(row.y) !== Math.round(prevWidget.y + prevWidget.height)) {\n        var prevIndex = tableCollection.indexOf(tableWidget);\n        if (prevIndex + 1 >= tableCollection.length) {\n          //Creates new table widget for splitted rows.\n          this.addTableWidget(viewer.clientActiveArea, tableCollection, true);\n        }\n        tableWidget = tableCollection[prevIndex + 1];\n        index = tableWidget.childWidgets.length;\n      }\n      if (rowWidgetIndex > 0) {\n        index = 0;\n      }\n    }\n    this.updateRowHeightBySpannedCell(tableWidget, row, index);\n    this.updateRowHeightByCellSpacing(tableCollection, row, viewer);\n    //Remove widget from previous container after splitteing\n    if (row.containerWidget && row.containerWidget !== tableWidget && row.containerWidget.childWidgets.indexOf(row) !== -1) {\n      row.containerWidget.childWidgets.splice(row.containerWidget.childWidgets.indexOf(row), 1);\n    }\n    if (tableWidget.childWidgets.indexOf(row) === -1) {\n      tableWidget.childWidgets.splice(index, 0, row);\n      if (isRepeatRowHeader) {\n        tableWidget.bodyWidget.page.repeatHeaderRowTableWidget = true;\n      }\n    }\n    row.containerWidget = tableWidget;\n    if (!row.ownerTable.isInsideTable) {\n      if (footnotes.length > 0) {\n        if (!isNullOrUndefined(footnotes)) {\n          footnoteWidgets = this.getFootnoteBody(footnotes);\n        }\n      } else {\n        if (!isNullOrUndefined(row)) {\n          for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            for (var j = 0; j < cell.childWidgets.length; j++) {\n              var footnoteCollection = this.getFootNoteWidgetsOf(cell.childWidgets[j], true);\n              for (var k = 0; k < footnoteCollection.length; k++) {\n                footnoteWidgets.splice(footnoteWidgets.length, 0, footnoteCollection[k]);\n              }\n            }\n          }\n        }\n      }\n      if (footnoteWidgets.length > 0 && isNullOrUndefined(footnoteWidgets[0].containerWidget)) {\n        this.layoutFootnoteInSplittedRow(row, footnoteWidgets);\n      } else if (!isNullOrUndefined(footnoteWidgets) && footnoteWidgets.length > 0 && row.bodyWidget.previousRenderedWidget !== undefined && startRowIndex !== row.bodyWidget.page.index && footnoteWidgets[0].containerWidget.page.index !== row.bodyWidget.page.index) {\n        this.moveFootNotesToPage(footnoteWidgets, footnoteWidgets[0].containerWidget.page.bodyWidgets[0], row.bodyWidget);\n      } else if (footnoteWidgets.length > 0 && !this.isInitialLoad && !isNullOrUndefined(row.bodyWidget.page.footnoteWidget)) {\n        this.layoutfootNote(row.bodyWidget.page.footnoteWidget);\n      }\n      footnotes.length = 0;\n    }\n    tableWidget.height = tableWidget.height + row.height;\n    if (this.viewer instanceof PageLayoutViewer) {\n      if (!isNullOrUndefined(tableWidget.containerWidget) && tableWidget.containerWidget.childWidgets.indexOf(tableWidget) >= 0 && !(tableWidget.containerWidget instanceof HeaderFooterWidget)) {\n        tableWidget.containerWidget.height += row.height;\n      }\n    }\n    this.updateHeightForRowWidget(viewer, false, tableCollection, rowCollection, row, false, endRowWidget, isInitialLayout);\n    viewer.cutFromTop(row.y + row.height);\n    this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footnoteWidgets);\n    this.existFootnoteHeight = 0;\n  };\n  Layout.prototype.layoutFootnoteInSplittedRow = function (row, footnoteWidgets) {\n    if (footnoteWidgets && footnoteWidgets.length > 0) {\n      if (isNullOrUndefined(row.ownerTable.bodyWidget.page.footnoteWidget)) {\n        this.addEmptyFootNoteToBody(row.ownerTable.bodyWidget);\n      }\n      var footnoteWidget = row.ownerTable.bodyWidget.page.footnoteWidget;\n      if (footnoteWidget) {\n        for (var j = 0; j < footnoteWidgets.length; j++) {\n          footnoteWidget.bodyWidgets.push(footnoteWidgets[j]);\n          footnoteWidgets[j].containerWidget = footnoteWidget;\n        }\n        this.layoutfootNote(footnoteWidget);\n      }\n    }\n  };\n  Layout.prototype.getFootNoteHeight = function (footnoteWidgets) {\n    var height = 0;\n    if (Array.isArray(footnoteWidgets)) {\n      for (var i = 0; i < footnoteWidgets.length; i++) {\n        height += this.getFootnoteHeightInternal(footnoteWidgets[i]);\n      }\n    } else {\n      height = this.getFootnoteHeightInternal(footnoteWidgets);\n    }\n    return height;\n  };\n  Layout.prototype.getFootnoteHeightInternal = function (footnoteWidgets) {\n    var height = 0;\n    for (var i = 0; i < footnoteWidgets.childWidgets.length; i++) {\n      height += footnoteWidgets.childWidgets[i].height;\n      if (footnoteWidgets.indexInOwner === 0 && i === 0) {\n        height += footnoteWidgets.containerWidget.margin.top;\n      }\n    }\n    return height;\n  };\n  Layout.prototype.updateRowHeightBySpannedCell = function (tableWidget, row, insertIndex) {\n    var rowSpan = 1;\n    if (tableWidget.childWidgets.length === 0 || insertIndex === 0) {\n      this.updateRowHeight(row, row);\n      return;\n    }\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cellWidget = row.childWidgets[i];\n      rowSpan = isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat) ? rowSpan : cellWidget.cellFormat.rowSpan;\n      this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n    }\n    if (!isNullOrUndefined(row.ownerTable)) {\n      for (var i = 0; i < row.ownerTable.spannedRowCollection.length; i++) {\n        if (row.ownerTable.spannedRowCollection.keys[i] === row.index) {\n          // Back track to previous table row widgets and update it height if vertical merge ends with this row.\n          for (var j = 0; j < insertIndex; j++) {\n            var prevRowWidget = tableWidget.childWidgets[j];\n            this.updateRowHeight(prevRowWidget, row);\n          }\n          row.ownerTable.spannedRowCollection.remove(row.ownerTable.spannedRowCollection.keys[i]);\n          break;\n        }\n      }\n    }\n  };\n  Layout.prototype.updateRowHeight = function (prevRowWidget, row) {\n    var rowIndex = row.index;\n    var rowSpan = 1;\n    for (var i = 0; i < prevRowWidget.childWidgets.length; i++) {\n      var cellWidget = prevRowWidget.childWidgets[i];\n      rowSpan = isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat) ? rowSpan : cellWidget.cellFormat.rowSpan;\n      //To update Row height- if row has row span value greater than 1, need to add it in spannedRowCollection            \n      this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n      if (rowIndex - cellWidget.rowIndex === rowSpan - 1) {\n        var mergedCellHeight = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - row.y;\n        if ((row.rowFormat.heightType !== 'Exactly' || row.rowFormat.heightType === 'Exactly' && row.rowFormat.height > mergedCellHeight) && row.height < mergedCellHeight) {\n          row.height = mergedCellHeight;\n        }\n      }\n    }\n  };\n  //if row has row span value greater than 1, need to add it in spannedRowCollection\n  Layout.prototype.updateSpannedRowCollection = function (rowSpan, row, cellWidget) {\n    if (rowSpan > 1 && !isNullOrUndefined(row.ownerTable)) {\n      //Checks the rowspan is already exist in the list\n      if (!row.ownerTable.spannedRowCollection.containsKey(row.index + rowSpan - 1)) {\n        row.ownerTable.spannedRowCollection.add(row.index + rowSpan - 1, row.index);\n      }\n    }\n  };\n  Layout.prototype.updateRowHeightByCellSpacing = function (tableCollection, row, viewer) {\n    if (row.ownerTable.tableFormat.cellSpacing > 0) {\n      // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page. \n      // In such case we have update the row height with half of cell spacing.\n      // Remaining cases we have to update the entire hight\n      if (tableCollection.length > 1 && row.y === viewer.clientArea.y && viewer instanceof PageLayoutViewer) {\n        row.height = row.height - HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) / 2;\n      }\n    }\n  };\n  Layout.prototype.isRowSpanEnd = function (row, viewer) {\n    var rowIndex = row.index;\n    var rowSpan = 1;\n    for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n      var splittedCell = this.documentHelper.splittedCellWidgets[i];\n      rowSpan = isNullOrUndefined(splittedCell) || isNullOrUndefined(splittedCell.cellFormat) ? rowSpan : splittedCell.cellFormat.rowSpan;\n      if (rowIndex - splittedCell.rowIndex === rowSpan - 1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  Layout.prototype.isVerticalMergedCellContinue = function (row) {\n    var colIndex = 0;\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      if (colIndex < cell.columnIndex) {\n        return true;\n      }\n      colIndex += cell.cellFormat.columnSpan;\n    }\n    return colIndex < row.ownerTable.tableHolder.columns.length;\n  };\n  Layout.prototype.splitWidgets = function (tableRowWidget, viewer, tableCollection, rowCollection, splittedWidget, isLastRow, footNoteCollection, lineIndexInCell, cellIndex, isMultiColumnSplit, isRowSpan) {\n    if (!(isMultiColumnSplit && lineIndexInCell === 0) && this.isFirstLineFitForRow(viewer.clientArea.bottom, tableRowWidget) && tableRowWidget.childWidgets.length > 0) {\n      splittedWidget = this.getSplittedWidgetForRow(viewer.clientArea.bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, undefined, isRowSpan);\n      if (this.documentHelper.splittedCellWidgets.length > 0 || splittedWidget !== tableRowWidget) {\n        if (isLastRow) {\n          for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n            var cell = splittedWidget.childWidgets[i];\n            if (cell.rowIndex !== splittedWidget.index) {\n              splittedWidget.childWidgets.splice(i, 1);\n              i--;\n            }\n          }\n        }\n        //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n        this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n      }\n    } else {\n      //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n      this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n    }\n    return splittedWidget;\n  };\n  Layout.prototype.getSplittedWidgetForRow = function (bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isRowSpan) {\n    var splittedWidget = undefined;\n    var rowIndex = tableRowWidget.index;\n    this.isRelayoutneed = false;\n    var issplit = false;\n    var cellHeight = tableRowWidget.height;\n    var previousHeight = cellHeight;\n    var maximumCellWidgetHeight = 0;\n    for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n      var cellWidget = tableRowWidget.childWidgets[i];\n      var splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n      if (isMultiColumnSplit && !isNullOrUndefined(splittedCell) && splittedCell.childWidgets.length !== 0 && cellHeight > cellWidget.height) {\n        cellHeight = cellWidget.height;\n      }\n      footNoteCollection = [];\n      if (isNullOrUndefined(splittedCell) && cellWidget === tableRowWidget.childWidgets[tableRowWidget.childWidgets.length - 1] && this.isVerticalMergedCellContinue(tableRowWidget) && this.isRowSpanEnd(tableRowWidget, this.viewer) && this.documentHelper.splittedCellWidgets.length > 0 && isRowSpan) {\n        splittedWidget = this.getSplittedWidgetForSpannedRow(bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection);\n        splittedCell = undefined;\n      }\n      if (!isNullOrUndefined(splittedCell)) {\n        if (splittedCell === cellWidget) {\n          //Returns if the whole content of the row does not fit in current page.\n          return tableRowWidget;\n        }\n        if (cellWidget.height > maximumCellWidgetHeight) {\n          maximumCellWidgetHeight = cellWidget.height;\n        }\n        if (tableRowWidget.childWidgets.indexOf(splittedCell) !== -1) {\n          tableRowWidget.childWidgets.splice(tableRowWidget.childWidgets.indexOf(splittedCell), 1);\n        }\n        tableRowWidget.height -= splittedCell.height;\n        if (i === 0 || tableRowWidget.height < maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom) {\n          tableRowWidget.height = maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom;\n        }\n        if (isNullOrUndefined(splittedWidget)) {\n          //Creates new widget, to hold the splitted contents.\n          splittedWidget = new TableRowWidget();\n          splittedWidget.containerWidget = tableRowWidget.containerWidget;\n          splittedWidget.index = tableRowWidget.index;\n          splittedWidget.rowFormat = tableRowWidget.rowFormat;\n          splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n          this.updateWidgetLocation(tableRowWidget, splittedWidget);\n          // splittedWidget.height = 0;\n          rowCollection.push(splittedWidget);\n        }\n        var rowSpan = 1;\n        rowSpan = isNullOrUndefined(splittedCell) || isNullOrUndefined(splittedCell.cellFormat) ? rowSpan : splittedCell.cellFormat.rowSpan;\n        if (rowIndex - splittedCell.rowIndex === rowSpan - 1 && splittedWidget.height < splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom) {\n          splittedWidget.height = splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom;\n        } else {\n          if (tableRowWidget.rowFormat.heightType === 'Exactly' || tableRowWidget.rowFormat.heightType === 'AtLeast' && splittedWidget.height < tableRowWidget.rowFormat.height) {\n            //Sets the height for row widget if height type is exact or at least.\n            splittedWidget.height = tableRowWidget.rowFormat.height;\n          }\n        }\n        splittedWidget.childWidgets.push(splittedCell);\n        splittedCell.containerWidget = splittedWidget;\n        this.isRelayoutneed = true;\n        var count_1 = i;\n        while (count_1 > 0 && !issplit) {\n          var cellWidget_1 = tableRowWidget.childWidgets[count_1 - 1];\n          splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget_1, footNoteCollection);\n          splittedWidget.childWidgets.splice(0, 0, splittedCell);\n          splittedCell.containerWidget = splittedWidget;\n          count_1--;\n        }\n        issplit = true;\n      }\n    }\n    if (isMultiColumnSplit && cellHeight !== previousHeight) {\n      for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n        tableRowWidget.childWidgets[i].height = cellHeight;\n      }\n      tableRowWidget.height = cellHeight;\n    }\n    return splittedWidget;\n  };\n  Layout.prototype.getSplittedWidgetForSpannedRow = function (bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection) {\n    var splittedWidget = undefined;\n    var splittedCell = undefined;\n    var issplit = false;\n    for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n      splittedCell = this.documentHelper.splittedCellWidgets[i];\n      if (tableRowWidget.childWidgets.length < splittedCell.index) {\n        break;\n      }\n      if (isNullOrUndefined(splittedWidget)) {\n        splittedWidget = new TableRowWidget();\n        splittedWidget.containerWidget = tableRowWidget.containerWidget;\n        splittedWidget.index = tableRowWidget.index;\n        splittedWidget.rowFormat = tableRowWidget.rowFormat;\n        splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n        this.updateWidgetLocation(tableRowWidget, splittedWidget);\n        rowCollection.push(splittedWidget);\n      }\n      splittedWidget.childWidgets.push(splittedCell);\n      splittedCell.containerWidget = splittedWidget;\n      this.isRelayoutneed = true;\n      var count = this.documentHelper.splittedCellWidgets[i].index;\n      while (count > 0 && !issplit) {\n        var cellWidget = tableRowWidget.childWidgets[count - 1];\n        splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection);\n        splittedWidget.childWidgets.splice(0, 0, splittedCell);\n        splittedCell.containerWidget = splittedWidget;\n        count--;\n      }\n      issplit = true;\n    }\n    return splittedWidget;\n  };\n  Layout.prototype.getFootNoteHeightInLine = function (line) {\n    var height = 0;\n    for (var i = 0; i < line.children.length; i++) {\n      var element = line.children[i];\n      if (element instanceof FootnoteElementBox) {\n        height += this.getFootNoteHeight(element.bodyWidget);\n      }\n    }\n    return height;\n  };\n  Layout.prototype.getFootnoteFromLine = function (line, footNoteCollection) {\n    for (var i = 0; i < line.children.length; i++) {\n      if (line.children[i] instanceof FootnoteElementBox) {\n        footNoteCollection.push(line.children[i]);\n      }\n    }\n  };\n  Layout.prototype.updateWidgetsToTable = function (tableWidgets, rowWidgets, row, rearrangeRow, lineIndexInCell, cellIndex, isMultiColumnSplit) {\n    var startRowIndex = row.bodyWidget.page.index;\n    var rowHeight = this.getRowHeight(row, [row]);\n    var viewer = this.viewer;\n    //initializing row properties with default values.\n    var isHeader = row.rowFormat.isHeader;\n    var headerRow = undefined;\n    var isAllowBreakAcrossPages = row.rowFormat.allowBreakAcrossPages;\n    var heightType = row.rowFormat.heightType;\n    var cellSpacing = 0;\n    var count = 0;\n    var tableRowWidget = row;\n    var moveRowToNextTable = false;\n    var footnoteElements = this.layoutedFootnoteElement;\n    var isRepeatRowHeader = false;\n    if (tableRowWidget.bodyWidget.page.footnoteWidget !== undefined) {\n      this.footHeight = tableRowWidget.bodyWidget.page.footnoteWidget.height;\n      if (this.footnoteHeight === 0) {\n        this.footnoteHeight = this.footHeight;\n      }\n    } else {\n      this.footHeight = 0;\n    }\n    if (row.ownerTable.continueHeader && !isHeader) {\n      row.ownerTable.continueHeader = false;\n    }\n    var isInitialLayout = row.ownerTable.isInsideTable;\n    var isLastRow = false;\n    cellSpacing = !isNullOrUndefined(row.ownerTable) && !isNullOrUndefined(row.ownerTable.tableFormat) ? HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) : 0;\n    while (count < rowWidgets.length) {\n      count = rowWidgets.length;\n      if (this.isRowSpanEnd(row, viewer) && row.rowFormat.heightType === 'Exactly' && this.documentHelper.splittedCellWidgets.length === 1) {\n        this.documentHelper.splittedCellWidgets = [];\n      }\n      if (!isMultiColumnSplit && (row.ownerTable.isInsideTable || this.documentHelper.splittedCellWidgets.length === 0 && tableRowWidget.y + tableRowWidget.height + cellSpacing + this.footnoteHeight <= viewer.clientArea.bottom)) {\n        if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n          this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n        }\n        this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, undefined, isInitialLayout, startRowIndex, isRepeatRowHeader);\n        if (this.documentHelper.splittedCellWidgets.length > 0 && isNullOrUndefined(rowWidgets[rowWidgets.length - 1].nextRow)) {\n          count--;\n          isLastRow = true;\n        }\n        isInitialLayout = false;\n      } else {\n        footnoteElements = [];\n        isInitialLayout = false;\n        //Split widget for next page\n        if (this.documentHelper.splittedCellWidgets.length > 0 && tableRowWidget.y + tableRowWidget.height + this.footHeight <= viewer.clientArea.bottom) {\n          var isRowSpanEnd = this.isRowSpanEnd(row, viewer);\n          if (!isRowSpanEnd) {\n            if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n              this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n            }\n            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n            continue;\n          }\n        }\n        var splittedWidget = tableRowWidget;\n        var tableWidget = tableWidgets[tableWidgets.length - 1];\n        if (isMultiColumnSplit || rowHeight + tableRowWidget.y + this.footHeight > viewer.clientArea.bottom) {\n          if (!isAllowBreakAcrossPages || isHeader && row.ownerTable.continueHeader || heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientArea.bottom) {\n            if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientActiveArea.height && isAllowBreakAcrossPages || heightType !== 'Exactly' && tableRowWidget.y === viewer.clientArea.y || heightType === 'Auto' && isAllowBreakAcrossPages) {\n              splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n              if (isNullOrUndefined(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n              } else if (isNullOrUndefined(splittedWidget) && heightType === 'AtLeast' && tableRowWidget.containerWidget.lastChild !== tableRowWidget) {\n                splittedWidget = tableRowWidget;\n              }\n            }\n            // if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0) {\n            //     splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n            // }\n            // if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientActiveArea.height && isAllowBreakAcrossPages && tableRowWidget.ownerTable.tableHolder.columns.length > this.getTotalColumnSpan(tableRowWidget)) {\n            //     tableRowWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n            //     splittedWidget = tableRowWidget;\n            // }\n            if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n              this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n              count++;\n            }\n            if (isHeader && row.ownerTable.continueHeader) {\n              row.ownerTable.header = false;\n              row.ownerTable.headerHeight = 0;\n              var pages = undefined;\n              if (viewer instanceof PageLayoutViewer) {\n                pages = this.documentHelper.pages;\n              }\n              if (!isNullOrUndefined(pages)) {\n                for (var i = 0; i < pages.length; i++) {\n                  if (pages[i].repeatHeaderRowTableWidget && !isNullOrUndefined(pages[i].bodyWidgets[0].firstChild) && !(pages[i].bodyWidgets[0].firstChild instanceof TableWidget && pages[i].bodyWidgets[0].firstChild.header)) {\n                    pages[i].repeatHeaderRowTableWidget = false;\n                    row.ownerTable.continueHeader = false;\n                  }\n                }\n              }\n            }\n          } else {\n            if ((heightType === 'Auto' || heightType === 'AtLeast') && isAllowBreakAcrossPages) {\n              if (!(HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom) || tableRowWidget.y === viewer.clientArea.y) {\n                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                if (isNullOrUndefined(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                  this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                }\n              } else if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom && tableRowWidget.ownerTable.wrapTextAround && tableRowWidget.y - HelperMethods.convertPointToPixel(tableRowWidget.ownerTable.positioning.verticalPosition) === viewer.clientArea.y && tableRowWidget.bodyWidget.firstChild === tableRowWidget.ownerTable) {\n                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                if (isNullOrUndefined(splittedWidget)) {\n                  this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                  count++;\n                  continue;\n                }\n              }\n            } else if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n              this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n              count++;\n            }\n          }\n        } else {\n          var isInsertSplittedWidgets = false;\n          var headerHeight = 0;\n          if (!isNullOrUndefined(tableRowWidget.ownerTable.headerHeight)) {\n            headerHeight = tableRowWidget.ownerTable.headerHeight;\n          }\n          // Splitting handled for the merged cell with allowRowBreakAcross pages. \n          if (this.isVerticalMergedCellContinue(row) && (isAllowBreakAcrossPages || (isInsertSplittedWidgets = tableRowWidget.y === viewer.clientArea.y || tableRowWidget.y === this.viewer.clientArea.y + headerHeight))) {\n            if (isInsertSplittedWidgets) {\n              this.insertSplittedCellWidgets(viewer, tableWidgets, splittedWidget, tableRowWidget.indexInOwner - 1);\n            } else {\n              splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, undefined, undefined, undefined, true);\n              if (isNullOrUndefined(splittedWidget)) {\n                isInsertSplittedWidgets = tableRowWidget.y === viewer.clientArea.y || tableRowWidget.y === this.viewer.clientArea.y + headerHeight;\n                if (isInsertSplittedWidgets) {\n                  this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.indexInOwner - 1);\n                  count--;\n                  continue;\n                }\n                if (this.isRowSpanEnd(row, viewer)) {\n                  splittedWidget = tableRowWidget;\n                }\n              }\n            }\n          } else if (isLastRow && !isAllowBreakAcrossPages) {\n            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements);\n          } else if (this.isRowSpanEnd(row, viewer) && !isAllowBreakAcrossPages) {\n            if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0) splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit, true);\n            if (isNullOrUndefined(splittedWidget)) {\n              this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n            }\n          }\n        }\n        //Create New table for splitted widget\n        if (!isNullOrUndefined(splittedWidget) && (isNullOrUndefined(this.documentHelper.owner.editorModule) || this.documentHelper.owner.editorModule && !this.documentHelper.owner.editorModule.isTableInsert) && !(splittedWidget.bodyWidget.containerWidget instanceof FootNoteWidget)) {\n          if (splittedWidget !== tableRowWidget) {\n            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, tableRowWidget.nextRow, undefined, undefined, isRepeatRowHeader);\n            //Updates the fitted table rows to current page.\n            this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, tableRowWidget.nextRow);\n            var index_2 = tableWidgets.indexOf(tableRowWidget.containerWidget);\n            if (index_2 + 1 >= tableWidgets.length) {\n              //Creates new table widget for splitted rows.\n              this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n            }\n            tableRowWidget = splittedWidget;\n          } else {\n            if (row.index > 0) {\n              //Updates the fitted table rows to current page.\n              this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, row);\n              // Need to update on this further\n              if (row.previousRenderedWidget instanceof TableRowWidget) {\n                // Need to update on this further\n                var prevWidget = row.previousRenderedWidget;\n                if (HelperMethods.round(tableRowWidget.y, 2) === HelperMethods.round(prevWidget.y + prevWidget.height, 2)) {\n                  var prevIndex = tableWidgets.indexOf(prevWidget.containerWidget);\n                  if (prevIndex + 1 >= tableWidgets.length) {\n                    //Creates new table widget for splitted rows.\n                    this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                  }\n                } else {\n                  //Creates new table widget for splitted rows.\n                  this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                }\n              } else {\n                //Creates new table widget for splitted rows.\n                this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n              }\n            } else if (heightType === 'Exactly' && rowHeight + tableRowWidget.y + this.footHeight < viewer.clientArea.bottom && tableRowWidget.y >= viewer.clientArea.y) {\n              this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n              count++;\n              continue;\n            }\n            moveRowToNextTable = true;\n            count--;\n          }\n          tableWidget = tableWidgets[tableWidgets.length - 1];\n          var rowToMove = row;\n          var keepNext = false;\n          var index = row.ownerTable.containerWidget.index;\n          var isTableFirstRow = false;\n          var bodyWidget = void 0;\n          var block = void 0;\n          if (moveRowToNextTable && tableWidgets.length === 1) {\n            block = tableWidgets[tableWidgets.length - 1];\n          } else {\n            block = tableWidgets[tableWidgets.length - 2];\n          }\n          var removeTable = true;\n          //Move Next RowWidge to next page\n          if (moveRowToNextTable && rowWidgets.length === 1) {\n            var prev = this.alignBlockElement(row);\n            if (!isNullOrUndefined(prev.node)) {\n              var previousRow = prev.node;\n              if (previousRow instanceof TableRowWidget && previousRow.indexInOwner === 0) {\n                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                  tableWidgets.pop();\n                  tableWidget = tableWidgets[tableWidgets.length - 1];\n                  tableWidget.height = 0;\n                }\n              } else if (prev.node instanceof ParagraphWidget) {\n                var previousWidget = this.splitParagraph(prev.node, parseInt(prev.position.index, 10));\n                block = previousWidget;\n                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                  tableWidgets.pop();\n                  tableWidget = tableWidgets[tableWidgets.length - 1];\n                }\n                removeTable = false;\n              }\n              if (previousRow instanceof TableRowWidget) {\n                isTableFirstRow = previousRow.indexInOwner === 0;\n                rowToMove = previousRow;\n                if (!rowToMove.ownerTable.equals(row.ownerTable)) {\n                  block = rowToMove.ownerTable;\n                  removeTable = false;\n                }\n              }\n              keepNext = true;\n            }\n          }\n          bodyWidget = this.moveBlocksToNextPage(block instanceof ParagraphWidget ? block.previousWidget : keepNext && isTableFirstRow ? !isNullOrUndefined(block.previousWidget) ? block.previousWidget : block : block, keepNext);\n          var curretTable = tableWidgets[tableWidgets.length - 1];\n          //Move Next RowWidge to next page\n          if (moveRowToNextTable && removeTable) {\n            if (rowToMove.index === 0 && curretTable.containerWidget && curretTable.containerWidget.childWidgets.indexOf(curretTable) !== -1) {\n              curretTable.containerWidget.childWidgets.splice(curretTable.containerWidget.childWidgets.indexOf(curretTable), 1);\n            }\n          }\n          if (removeTable) {\n            if (bodyWidget.childWidgets.indexOf(curretTable) !== -1) {\n              bodyWidget.childWidgets.splice(bodyWidget.childWidgets.indexOf(curretTable), 1);\n            }\n            bodyWidget.childWidgets.unshift(curretTable);\n            this.shiftFloatingItemsFromTable(curretTable, bodyWidget);\n          }\n          curretTable.containerWidget = bodyWidget;\n          if (moveRowToNextTable && rowToMove.index > 0 || rowWidgets.length > 1) {\n            var currentRow = !moveRowToNextTable ? rowWidgets[rowWidgets.length - 2] : rowWidgets[rowWidgets.length - 1];\n            if (keepNext) {\n              currentRow = rowToMove;\n            }\n            this.moveNextWidgetsToTable(tableWidgets, currentRow, !moveRowToNextTable);\n            rowToMove = row;\n          }\n          if (keepNext) {\n            this.updateClientPositionForBlock(removeTable ? curretTable : block, row);\n          }\n          moveRowToNextTable = false;\n          var insertHeaderRow = false;\n          var bottom = this.documentHelper.viewer.clientArea.bottom - tableRowWidget.bottomBorderWidth - cellSpacing;\n          if (rowToMove.ownerTable.header) {\n            //Checks if the splitted row widget can fit in along with header row.\n            //Based on the result header row is repeated and infinite looping of not fitted state is avoided.\n            splittedWidget.x = splittedWidget.x;\n            splittedWidget.y = this.viewer.clientArea.y + tableWidget.headerHeight;\n            this.updateChildLocationForRow(splittedWidget.y, splittedWidget);\n            insertHeaderRow = this.isFirstLineFitForRow(bottom, splittedWidget);\n          }\n          if (insertHeaderRow && rowToMove.ownerTable.header && !keepNext) {\n            if (viewer instanceof PageLayoutViewer) {\n              tableRowWidget.bodyWidget.page.repeatHeaderRowTableWidget = true;\n              isRepeatRowHeader = true;\n            }\n            //Updates table widgets location.\n            viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n            //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n            splittedWidget.x = splittedWidget.x;\n            splittedWidget.y = tableWidget.y + rowToMove.ownerTable.headerHeight;\n            // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n            var cellspace = cellSpacing / 2;\n            this.updateChildLocationForRow(tableWidget.y + rowToMove.ownerTable.headerHeight - cellspace, splittedWidget, tableWidget.containerWidget);\n          } else {\n            //Updates table widgets location.\n            viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n            //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n            if (splittedWidget.bodyWidget.sectionFormat.columns.length > 1) {\n              var clientArea = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n              var clientActiveArea = new Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n              splittedWidget.x = this.viewer.clientActiveArea.x;\n              splittedWidget.y = this.viewer.clientActiveArea.y;\n              var topMargin = this.getMaxTopCellMargin(splittedWidget);\n              var bottomMargin = this.getMaxBottomCellMargin(splittedWidget);\n              for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n                var cell = splittedWidget.childWidgets[i];\n                cell.height = 0;\n                this.addTableCellWidget(cell, this.viewer.clientActiveArea, topMargin + splittedWidget.topBorderWidth, bottomMargin + splittedWidget.bottomBorderWidth);\n                this.viewer.updateClientAreaForCell(cell, true);\n                for (var j = 0; j < cell.childWidgets.length; j++) {\n                  var block_2 = cell.childWidgets[j];\n                  viewer.updateClientAreaForBlock(block_2, true);\n                  block_2.containerWidget = cell;\n                  this.layoutBlock(block_2, 0);\n                  viewer.updateClientAreaForBlock(block_2, false);\n                }\n                this.viewer.updateClientAreaForCell(cell, false);\n              }\n              this.viewer.clientActiveArea = clientActiveArea;\n              this.viewer.clientArea = clientArea;\n            }\n            splittedWidget.x = splittedWidget.x;\n            splittedWidget.y = tableWidget.y;\n            // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n            var cellspace = cellSpacing / 2;\n            this.updateChildLocationForRow(tableWidget.y - cellspace, splittedWidget, tableWidget.containerWidget, true);\n          }\n          if (removeTable && this.shiftedFloatingItemsFromTable.length > 0) {\n            for (var i = 0; i < this.shiftedFloatingItemsFromTable.length; i++) {\n              var floatingItem = this.shiftedFloatingItemsFromTable[i];\n              var position = this.getFloatingItemPoints(floatingItem);\n              floatingItem.y = position.y;\n              floatingItem.x = position.x;\n              if (floatingItem instanceof ShapeElementBox) {\n                this.updateChildLocationForCellOrShape(floatingItem.y, floatingItem);\n              }\n            }\n            this.shiftedFloatingItemsFromTable = [];\n          }\n        }\n        isLastRow = false;\n      }\n      if (isHeader) {\n        if (row.ownerTable.continueHeader) {\n          row.ownerTable.header = true;\n          row.ownerTable.headerHeight = rowHeight + row.ownerTable.headerHeight;\n        }\n        headerRow = this.getHeader(row.ownerTable);\n        if (!isNullOrUndefined(headerRow) && row.index === headerRow.index) {\n          var headerHeight = this.getHeaderHeight(row.ownerTable, row, rowWidgets);\n          if (headerHeight > row.ownerTable.headerHeight || headerHeight > row.ownerTable.headerHeight) {\n            row.ownerTable.headerHeight = headerHeight;\n          }\n          if (row.ownerTable.headerHeight > viewer.clientArea.height) {\n            row.ownerTable.header = false;\n            row.ownerTable.continueHeader = false;\n            row.ownerTable.headerHeight = 0;\n            var pages = this.documentHelper.pages;\n            for (var i = 0; i < pages.length; i++) {\n              if (pages[i].repeatHeaderRowTableWidget) {\n                pages[i].repeatHeaderRowTableWidget = false;\n              }\n            }\n          }\n        }\n      }\n      isMultiColumnSplit = false;\n      if (tableWidgets.length > 2 && row.ownerTable.header && tableRowWidget.height < viewer.clientActiveArea.bottom && !viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget) {\n        viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget = true;\n      }\n    }\n  };\n  Layout.prototype.getHeader = function (table) {\n    var header = undefined;\n    var flag = true;\n    table = table.getSplitWidgets()[0];\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row.rowFormat.isHeader) {\n        header = row;\n      } else {\n        flag = false;\n      }\n      if (!flag) {\n        break;\n      }\n    }\n    return header;\n  };\n  Layout.prototype.getHeaderHeight = function (ownerTable, row, rowCollection) {\n    var height = 0;\n    if (row.ownerTable.childWidgets.length > 0 && ownerTable.childWidgets[0].rowFormat.isHeader) {\n      for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n        var row_1 = ownerTable.childWidgets[i];\n        if (row_1.rowFormat.isHeader) {\n          height = height + row_1.height;\n        } else {\n          break;\n        }\n      }\n    }\n    return height;\n  };\n  Layout.prototype.getHeaderHeightForSpannedRow = function (table) {\n    var height = 0;\n    var rowSpan = 1;\n    var headerRow = this.getHeader(table);\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row.rowFormat.isHeader) {\n        height = height + row.height;\n        if (row == headerRow) {\n          for (var j = 0; j < headerRow.childWidgets.length; j++) {\n            var cell = headerRow.childWidgets[j];\n            rowSpan = Math.max(rowSpan, cell.cellFormat.rowSpan);\n          }\n          if (rowSpan > 1 && i + rowSpan < table.childWidgets.length) {\n            for (var k = 1; k < rowSpan; k++) {\n              var nextRow = table.childWidgets[i + k];\n              if (!isNullOrUndefined(nextRow)) {\n                height = height + nextRow.height;\n              }\n            }\n          }\n        }\n      }\n    }\n    return height;\n  };\n  Layout.prototype.updateWidgetToRow = function (cell) {\n    //const viewer: LayoutViewer = this.viewer;\n    //Adds table cell widget to owner row widget.\n    var rowWidget = cell.ownerRow;\n    // let cellLeft: number = rowWidget.x;\n    // if (rowWidget.childWidgets.length > 0) {\n    //     const lastWidget: TableCellWidget = rowWidget.childWidgets[rowWidget.childWidgets.length - 1] as TableCellWidget;\n    //     cellLeft = lastWidget.x + lastWidget.width + lastWidget.margin.right;\n    // }\n    // rowWidget.childWidgets.push(cell);\n    cell.containerWidget = rowWidget;\n    //If the row height is set as Atleast then height is set to atleast height for the first cell of the row.\n    if (!isNullOrUndefined(cell.ownerRow) && cell.ownerRow.rowFormat.heightType !== 'Exactly' && HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height) > 0 && cell.cellIndex === 0) {\n      rowWidget.height = rowWidget.height + HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height);\n    }\n    //Add condition not cell merged vertically.\n    if (cell.cellFormat.rowSpan === 1) {\n      var cellHeight = void 0;\n      if (rowWidget.rowFormat.heightType === 'Exactly') {\n        cellHeight = cell.height + cell.margin.bottom;\n      } else {\n        cellHeight = cell.height + cell.margin.top + cell.margin.bottom;\n      }\n      if (rowWidget.height - HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) < cellHeight) {\n        rowWidget.height = cellHeight + HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.updateHeightForRowWidget = function (viewer, isUpdateVerticalPosition, tableCollection, rowCollection, rowWidget, isLayouted, endRowWidget, isInitialLayout) {\n    for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n      var cellspacing = 0;\n      var cellWidget = undefined;\n      var childWidget = rowWidget.childWidgets[i];\n      // if (childWidget instanceof TableCellWidget) {\n      cellWidget = childWidget;\n      // }\n      var rowSpan = 1;\n      rowSpan = cellWidget.cellFormat.rowSpan;\n      cellspacing = HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing);\n      if (rowSpan > 1) {\n        var currentRowWidgetIndex = rowWidget.containerWidget.childWidgets.indexOf(rowWidget);\n        var rowSpanWidgetEndIndex = currentRowWidgetIndex + rowSpan - 1 - (rowWidget.index - cellWidget.rowIndex);\n        if (!isInitialLayout && (viewer.clientArea.bottom < cellWidget.y + cellWidget.height + cellWidget.margin.bottom || rowSpanWidgetEndIndex >= currentRowWidgetIndex + 1) && (rowCollection.length === 1 || rowCollection.length >= 1 && rowWidget === rowCollection[rowCollection.length - 1])) {\n          this.splitSpannedCellWidget(cellWidget, tableCollection, rowCollection, viewer);\n        }\n        var spanEndRowWidget = rowWidget;\n        if (rowSpanWidgetEndIndex > 0) {\n          if (rowSpanWidgetEndIndex < rowWidget.containerWidget.childWidgets.length) {\n            var childWidget_1 = rowWidget.containerWidget.childWidgets[rowSpanWidgetEndIndex];\n            if (childWidget_1 instanceof TableRowWidget) {\n              spanEndRowWidget = childWidget_1;\n              if (spanEndRowWidget === endRowWidget) {\n                spanEndRowWidget = rowWidget;\n              }\n            }\n          } else {\n            /* eslint-disable-next-line max-len */\n            spanEndRowWidget = rowWidget.containerWidget.childWidgets[rowWidget.containerWidget.childWidgets.length - 1];\n          }\n        }\n        if (cellWidget.y + cellWidget.height + cellWidget.margin.bottom < spanEndRowWidget.y + spanEndRowWidget.height) {\n          cellWidget.height = spanEndRowWidget.y + spanEndRowWidget.height - cellWidget.y - cellWidget.margin.bottom;\n          /* eslint-disable-next-line max-len */\n        } else if (isLayouted && spanEndRowWidget && spanEndRowWidget.y !== 0 && spanEndRowWidget.height !== 0 && cellWidget.y + cellWidget.height + cellWidget.margin.bottom > spanEndRowWidget.y + spanEndRowWidget.height) {\n          if (spanEndRowWidget.rowFormat.heightType !== 'Exactly' || spanEndRowWidget.rowFormat.heightType === 'Exactly' && spanEndRowWidget.rowFormat.height > cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y) {\n            spanEndRowWidget.height = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y;\n          } else {\n            cellWidget.height = spanEndRowWidget.y - cellWidget.y + spanEndRowWidget.height;\n          }\n          //Update the next rowlayout widget location. Reason for the updation is previous row height is updated when cell height is greater. So already layouted next row location has to be updated again.\n          // if (rowWidget === spanEndRowWidget && rowWidget.nextWidget instanceof TableRowWidget) {\n          //     let nextRow: TableRowWidget = rowWidget.nextWidget as TableRowWidget;\n          //     // Need to update on this further\n          //     // if (viewer.renderedElements.containsKey(nextRow)) {\n          //     //     let nextWidget: TableRowWidget[] = viewer.renderedElements.get(nextRow) as TableRowWidget[];\n          //     //     if (nextWidget.length > 0) {\n          //     //         nextWidget[0].x = nextWidget[0].x;\n          //     //         nextWidget[0].y = rowWidget.y + rowWidget.height;\n          //     //     }\n          //     // }\n          // }\n        }\n      } else {\n        if (cellspacing > 0) {\n          // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page.\n          // In such case we have update the cell height with half of cell spacing.\n          // Remaining cases we have to update the entire hight\n          if (tableCollection.length > 1 && rowWidget.y === viewer.clientArea.y && viewer instanceof PageLayoutViewer) {\n            cellspacing = cellspacing / 2;\n          }\n        }\n        cellWidget.height = rowWidget.height - cellWidget.margin.top - cellWidget.margin.bottom - cellspacing;\n      }\n      this.updateHeightForCellWidget(viewer, tableCollection, rowCollection, cellWidget);\n      var widget = rowWidget.containerWidget;\n      while (widget.containerWidget instanceof Widget) {\n        widget = widget.containerWidget;\n      }\n      var page = undefined;\n      if (widget instanceof BodyWidget) {\n        page = widget.page;\n      }\n      /* eslint-disable-next-line max-len */\n      if (viewer instanceof PageLayoutViewer && viewer.visiblePages.indexOf(page) !== -1 || isUpdateVerticalPosition) {\n        this.updateCellVerticalPosition(cellWidget, false, cellWidget.ownerTable.isInsideTable);\n      }\n      //Renders the current table row contents, after relayout based on editing.\n      // if (viewer instanceof PageLayoutViewer && (viewer as PageLayoutViewer).visiblePages.indexOf(page) !== -1) {\n      //     //Added proper undefined condition check for Asynchronous operation.\n      //     if (!isNullOrUndefined(rowWidget.tableRow) && !isNullOrUndefined(rowWidget.tableRow.rowFormat)) {\n      //         this.viewer.updateScrollBars();\n      //         //this.render.renderTableCellWidget(page, cellWidget);\n      //     }\n      // }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.updateHeightForCellWidget = function (viewer, tableWidget, rowCollection, cellWidget) {\n    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n      if (cellWidget.childWidgets[i] instanceof TableWidget) {\n        this.updateHeightForTableWidget(tableWidget, rowCollection, cellWidget.childWidgets[i]);\n      }\n    }\n  };\n  Layout.prototype.getRowHeight = function (row, rowCollection) {\n    var height = 0;\n    if (row.rowFormat.heightType === 'Exactly') {\n      height = row.rowFormat.height;\n    } else {\n      for (var i = 0; i < rowCollection.length; i++) {\n        if (rowCollection[i] instanceof TableRowWidget) {\n          height = rowCollection[i].height + height;\n        }\n      }\n      height = Math.max(height, row.rowFormat.height);\n    }\n    return height;\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.splitSpannedCellWidget = function (cellWidget, tableCollection, rowCollection, viewer) {\n    /* eslint-disable-next-line max-len */\n    var splittedCell = this.getSplittedWidget(viewer.clientArea.bottom, false, tableCollection, rowCollection, cellWidget, undefined, undefined, undefined, undefined, true);\n    if (!isNullOrUndefined(splittedCell)) {\n      //Adds the splitted contents of a vertical merged cell, in order preserve in next page.\n      this.documentHelper.splittedCellWidgets.push(splittedCell);\n      splittedCell.isSplittedCell = true;\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.insertSplittedCellWidgets = function (viewer, tableCollection, rowWidget, previousRowIndex) {\n    if (!isNullOrUndefined(rowWidget)) {\n      var left = rowWidget.x;\n      var tableWidth = 0;\n      var cellspace = 0;\n      var linestyle = false;\n      tableWidth = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableHolder.tableWidth);\n      for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n        var cellWidget = rowWidget.childWidgets[i];\n        var isRightStyleNone = cellWidget.cellFormat.borders.right.lineStyle === 'None';\n        cellspace = !isNullOrUndefined(cellWidget.ownerTable) && !isNullOrUndefined(cellWidget.ownerTable.tableFormat) ? HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing) : 0;\n        if (Math.round(left) < Math.round(cellWidget.x - cellWidget.margin.left - cellspace)) {\n          if (this.insertRowSpannedWidget(rowWidget, viewer, left, i)) {\n            i--;\n            continue;\n          }\n          // Bug 871725: Empty cell widget must be inserted if the table split into next page.\n          if (tableCollection.length == 1) {\n            break;\n          }\n          var length_1 = rowWidget.childWidgets.length;\n          this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i, previousRowIndex);\n          if (length_1 < rowWidget.childWidgets.length) {\n            i--;\n            continue;\n          }\n        }\n        left += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n        if (cellspace > 0 || cellWidget.columnIndex === cellWidget.ownerTable.tableHolder.columns.length - 1 || cellWidget.index === cellWidget.containerWidget.childWidgets.length - 1) {\n          if (!cellWidget.ownerTable.tableFormat.allowAutoFit) {\n            var leftBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellLeftBorder(cellWidget).getLineWidth());\n            var rightBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellRightBorder(cellWidget).getLineWidth());\n            cellWidget.rightBorderWidth = !cellWidget.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n            left += cellWidget.rightBorderWidth;\n          }\n          if (!this.isInsertTable()) {\n            linestyle = this.checkPreviousMargins(cellWidget.ownerTable);\n          }\n        }\n        left -= isRightStyleNone && !linestyle ? 0 : cellWidget.rightBorderWidth;\n        if (i === rowWidget.childWidgets.length - 1 && Math.round(left) < Math.round(rowWidget.x + tableWidth)) {\n          if (this.insertRowSpannedWidget(rowWidget, viewer, left, i + 1)) {\n            continue;\n          }\n          this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i + 1, previousRowIndex);\n          continue;\n        }\n      }\n      // Special case: when the child widgets of row is equal to 0 then the splitted widgets in the viewer is added in the table row widgets.\n      /* eslint-disable-next-line max-len */\n      if ((isNullOrUndefined(rowWidget.childWidgets) || rowWidget.childWidgets.length === 0) && this.documentHelper.splittedCellWidgets.length > 0) {\n        for (var j = 0; j < this.documentHelper.splittedCellWidgets.length; j++) {\n          var widget = this.documentHelper.splittedCellWidgets[j];\n          if (Math.round(left) <= Math.round(widget.x - widget.margin.left)) {\n            if (this.insertRowSpannedWidget(rowWidget, viewer, left, j)) {\n              j--;\n              continue;\n            }\n            var count = rowWidget.childWidgets.length;\n            this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j, previousRowIndex);\n            if (count < rowWidget.childWidgets.length) {\n              j--;\n              continue;\n            }\n          }\n          left += widget.margin.left + widget.width + widget.margin.right;\n          if (j === rowWidget.childWidgets.length - 1 && Math.round(left) < Math.round(rowWidget.x + tableWidth)) {\n            if (this.insertRowSpannedWidget(rowWidget, viewer, left, j + 1)) {\n              continue;\n            }\n            this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j + 1, previousRowIndex);\n            continue;\n          }\n        }\n      }\n      if (this.documentHelper.splittedCellWidgets.length > 0) {\n        this.documentHelper.splittedCellWidgets = [];\n      }\n    }\n  };\n  Layout.prototype.insertRowSpannedWidget = function (rowWidget, viewer, left, index) {\n    var cellSpacing = 0;\n    if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n      cellSpacing = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n    }\n    for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n      var splittedCell = this.documentHelper.splittedCellWidgets[i];\n      if (Math.round(left) === Math.round(splittedCell.x - splittedCell.margin.left)) {\n        rowWidget.childWidgets.splice(index, 0, splittedCell);\n        splittedCell.containerWidget = rowWidget;\n        if (splittedCell.height > rowWidget.height) {\n          rowWidget.height = splittedCell.height;\n        }\n        //If the splitted cell location differs from expected location update the location of row child widgets.\n        if (splittedCell.y !== rowWidget.y + splittedCell.margin.top + cellSpacing) {\n          this.updateChildLocationForRow(rowWidget.y, rowWidget);\n        }\n        this.documentHelper.splittedCellWidgets.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.insertEmptySplittedCellWidget = function (currentRow, tableCollection, left, index, previousRowIndex) {\n    var tableWidget = tableCollection[tableCollection.length - 1];\n    var previousRow;\n    for (var j = tableCollection.length - 1; j >= 0; j--) {\n      var table = tableCollection[j];\n      for (var z = table.childWidgets.length - 1; z >= 0; z--) {\n        var row = table.childWidgets[z];\n        if (row.index === previousRowIndex) {\n          previousRow = row;\n          break;\n        }\n      }\n    }\n    if (previousRow) {\n      tableWidget = previousRow.ownerTable;\n      previousRowIndex = previousRow.indexInOwner;\n    }\n    for (var i = previousRowIndex; i >= 0; i--) {\n      var rowWidget = tableWidget.childWidgets[i];\n      var previousLeft = rowWidget.x;\n      for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n        var rowSpan = 1;\n        var cellWidget = rowWidget.childWidgets[j];\n        if (Math.round(left) === Math.round(previousLeft)) {\n          rowSpan = isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat) ? rowSpan : cellWidget.cellFormat.rowSpan;\n          if (rowSpan > 1 && rowWidget.firstChild.columnIndex === 0) {\n            if (this.isVerticalMergedCellContinue(currentRow) && !isNullOrUndefined(currentRow.previousRenderedWidget) && currentRow.previousRenderedWidget instanceof TableRowWidget && this.isVerticalMergedCellContinue(currentRow.previousRenderedWidget) && currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height < cellWidget.y + cellWidget.height) {\n              var splittedCell = this.getSplittedWidget(currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height, true, tableCollection, undefined, cellWidget, undefined, undefined, undefined, undefined, true);\n              currentRow.childWidgets.splice(index, 0, splittedCell);\n              splittedCell.containerWidget = currentRow;\n              this.updateChildLocationForRow(currentRow.y, currentRow);\n              return;\n            } else {\n              //if (!isNullOrUndefined(currentRow.childWidgets[index])) {\n              var emptyCellWidget = this.createCellWidget(cellWidget);\n              //if (emptyCellWidget.x < (currentRow.childWidgets[index] as TableCellWidget).x) {\n              currentRow.childWidgets.splice(index, 0, emptyCellWidget);\n              emptyCellWidget.containerWidget = currentRow;\n              this.updateChildLocationForRow(currentRow.y, currentRow);\n              return;\n            }\n            //}\n            //}\n          }\n        }\n        previousLeft += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.getSplittedWidget = function (bottom, splitMinimalWidget, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, nestedCount, splitSpannedCellWidget) {\n    var splittedWidget = undefined;\n    var footnoteHeight = 0;\n    if (isMultiColumnSplit || cellWidget.y + cellWidget.height > bottom - this.footHeight - cellWidget.margin.bottom) {\n      for (var i = 0; i < cellWidget.ownerRow.childWidgets.length; i++) {\n        var tableCellWidget = cellWidget.ownerRow.childWidgets[i];\n        if (tableCellWidget.y + tableCellWidget.height < bottom - this.footHeight - tableCellWidget.margin.bottom) {\n          for (var j = 0; j < tableCellWidget.childWidgets.length; j++) {\n            if (tableCellWidget.childWidgets[j] instanceof ParagraphWidget) {\n              var paragraphWidget = tableCellWidget.childWidgets[j];\n              for (var k = 0; k < paragraphWidget.childWidgets.length; k++) {\n                var lineWidget = paragraphWidget.childWidgets[k];\n                var height = this.getFootNoteHeightInLine(lineWidget);\n                this.existFootnoteHeight += height;\n                footnoteHeight += height;\n              }\n            }\n          }\n        }\n      }\n      var count = 0;\n      if (cellWidget.ownerTable.isInsideTable) {\n        count = nestedCount;\n      }\n      var isCellSplit = false;\n      for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n        if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n          var paragraphWidget = cellWidget.childWidgets[i];\n          var splittedPara = this.getSplittedWidgetForPara(bottom - cellWidget.margin.bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isCellSplit);\n          if (isMultiColumnSplit) {\n            count = count + paragraphWidget.childWidgets.length;\n          }\n          if (!isNullOrUndefined(splittedPara)) {\n            isCellSplit = true;\n            if (i === 0 && splittedPara === paragraphWidget && !splitSpannedCellWidget) {\n              if (splitMinimalWidget && this.isRelayoutneed) {\n                splittedWidget = this.createCellWidget(cellWidget);\n                return splittedWidget;\n              }\n              //Returns if the whole content of the cell does not fit in current page.\n              return cellWidget;\n            }\n            if (cellWidget.childWidgets.indexOf(splittedPara) !== -1) {\n              cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedPara), 1);\n              i--;\n            }\n            cellWidget.height -= splittedPara.height;\n            if (isNullOrUndefined(splittedWidget)) {\n              //Creates new widget, to hold the splitted contents.\n              splittedWidget = this.createCellWidget(cellWidget);\n            }\n            splittedWidget.height += splittedPara.height;\n            splittedWidget.childWidgets.push(splittedPara);\n            splittedPara.containerWidget = splittedWidget;\n          }\n        } else {\n          var tableWidget = cellWidget.childWidgets[i];\n          var tableCol = [tableWidget];\n          //Check for nested table.\n          if (isMultiColumnSplit || bottom - cellWidget.margin.bottom < tableWidget.y + tableWidget.height) {\n            var tableHeight = tableWidget.height;\n            /* eslint-disable-next-line max-len */\n            var splittedTable = this.getSplittedWidgetForTable(bottom - cellWidget.margin.bottom, tableCol, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n            if (isNullOrUndefined(splittedTable) && !tableWidget.childWidgets[0].rowFormat.allowBreakAcrossPages) {\n              splittedTable = tableWidget;\n            }\n            if (!isNullOrUndefined(splittedTable)) {\n              if (i === 0 && splittedTable === tableWidget) {\n                //Returns if the whole table does not fit in current page.\n                return cellWidget;\n              }\n              if (cellWidget.childWidgets.indexOf(splittedTable) !== -1) {\n                cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedTable), 1);\n                i--;\n                cellWidget.height -= splittedTable.height;\n              } else {\n                cellWidget.height -= tableHeight - tableWidget.height;\n              }\n              if (isNullOrUndefined(splittedWidget)) {\n                //Creates new widget, to hold the splitted contents.\n                splittedWidget = this.createCellWidget(cellWidget);\n              }\n              splittedWidget.height += splittedTable.height;\n              splittedWidget.childWidgets.push(splittedTable);\n              splittedTable.containerWidget = splittedWidget;\n            }\n          }\n        }\n      }\n    }\n    this.existFootnoteHeight -= footnoteHeight;\n    if (isNullOrUndefined(splittedWidget) && splitMinimalWidget && this.isRelayoutneed) {\n      //Creates new widget, to hold the splitted contents.\n      splittedWidget = this.createCellWidget(cellWidget);\n    }\n    return splittedWidget;\n  };\n  Layout.prototype.getListLevelPattern = function (value) {\n    switch (value) {\n      case 0:\n        return 'Arabic';\n      case 1:\n        return 'LowLetter';\n      case 2:\n        return 'LowRoman';\n      case 3:\n        return 'UpLetter';\n      case 4:\n        return 'UpRoman';\n      case 5:\n        return 'Ordinal';\n      case 6:\n        return 'Number';\n      case 7:\n        return 'OrdinalText';\n      case 8:\n        return 'LeadingZero';\n      case 9:\n        return 'Bullet';\n      case 10:\n        return 'FarEast';\n      case 11:\n        return 'Special';\n      default:\n        return 'None';\n    }\n  };\n  Layout.prototype.createCellWidget = function (cell) {\n    var cellWidget = new TableCellWidget();\n    cellWidget.cellFormat = cell.cellFormat;\n    cellWidget.index = cell.index;\n    cellWidget.rowIndex = cell.rowIndex;\n    cellWidget.columnIndex = cell.columnIndex;\n    cellWidget.containerWidget = cell.containerWidget;\n    this.updateWidgetLocation(cell, cellWidget);\n    cellWidget.margin = cell.margin;\n    cellWidget.leftBorderWidth = cell.leftBorderWidth;\n    cellWidget.rightBorderWidth = cell.rightBorderWidth;\n    return cellWidget;\n  };\n  Layout.prototype.createTableWidget = function (table) {\n    var newTable = new TableWidget();\n    if (table.header) {\n      newTable.header = table.header;\n      var height = this.getHeaderHeightForSpannedRow(table);\n      newTable.headerHeight = height > table.headerHeight ? height : table.headerHeight;\n    }\n    newTable.index = table.index;\n    newTable.tableFormat = table.tableFormat;\n    newTable.tableHolder = table.tableHolder;\n    newTable.footnoteElement = table.footnoteElement;\n    newTable.isGridUpdated = table.isGridUpdated;\n    newTable.wrapTextAround = table.wrapTextAround;\n    newTable.positioning = table.positioning;\n    newTable.isContainInsideTable = table.isContainInsideTable;\n    newTable.isBidiTable = table.isBidiTable;\n    return newTable;\n  };\n  Layout.prototype.getSplittedWidgetForPara = function (bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isCellSplit) {\n    var lineBottom = paragraphWidget.y;\n    var splittedWidget = undefined;\n    var moveEntireBlock = false;\n    for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n      var lineWidget = paragraphWidget.childWidgets[i];\n      var height = this.getFootNoteHeightInLine(lineWidget);\n      height += this.existFootnoteHeight;\n      if (!isNullOrUndefined(footNoteCollection)) {\n        for (var j = 0; j < footNoteCollection.length; j++) {\n          height += this.getFootNoteHeight(footNoteCollection[j].bodyWidget);\n        }\n      }\n      var lineHeight = 0;\n      if (lineWidget.children[0] instanceof ShapeBase) {\n        lineHeight = lineWidget.children[0].height;\n      } else {\n        lineHeight = lineWidget.height;\n      }\n      if (!isNullOrUndefined(paragraphWidget.associatedCell) && paragraphWidget.associatedCell.index === 0 && paragraphWidget.index === 0 && isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousSplitWidget) && isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousWidget) && paragraphWidget.paragraphFormat.keepWithNext) {\n        moveEntireBlock = true;\n        lineWidget = paragraphWidget.childWidgets[0];\n        return paragraphWidget;\n      }\n      if (isMultiColumnSplit && count >= lineIndexInCell || bottom < lineBottom + height + lineHeight || isCellSplit) {\n        if (paragraphWidget.paragraphFormat.keepLinesTogether && (paragraphWidget.index !== 0 || paragraphWidget.index === 0 && !isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousWidget))) {\n          moveEntireBlock = true;\n          i = 0;\n          lineWidget = paragraphWidget.childWidgets[0];\n        } else if (paragraphWidget.paragraphFormat.widowControl) {\n          if (i === 1) {\n            moveEntireBlock = true;\n            i = 0;\n            lineWidget = paragraphWidget.childWidgets[0];\n          }\n        }\n        if (i === 0) {\n          if (lineWidget.paragraph.containerWidget instanceof TableCellWidget && !moveEntireBlock && !isMultiColumnSplit) {\n            //checks first line of the page is exceed the page height\n            if (lineWidget.paragraph.containerWidget.y === paragraphWidget.y) {\n              lineBottom += lineWidget.height;\n              continue;\n            }\n          }\n          splittedWidget = paragraphWidget;\n          break;\n        }\n        if (paragraphWidget.childWidgets.indexOf(lineWidget) !== -1) {\n          paragraphWidget.childWidgets.splice(paragraphWidget.childWidgets.indexOf(lineWidget), 1);\n          i--;\n        }\n        paragraphWidget.height -= lineWidget.height;\n        if (isNullOrUndefined(splittedWidget)) {\n          //Creates new widget, to hold the splitted contents.\n          splittedWidget = new ParagraphWidget();\n          splittedWidget.characterFormat = paragraphWidget.characterFormat;\n          splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n          splittedWidget.index = paragraphWidget.index;\n          this.updateWidgetLocation(paragraphWidget, splittedWidget);\n          splittedWidget.height = lineWidget.height;\n        } else {\n          splittedWidget.height += lineWidget.height;\n        }\n        splittedWidget.childWidgets.push(lineWidget);\n        lineWidget.paragraph = splittedWidget;\n      }\n      this.getFootnoteFromLine(lineWidget, footNoteCollection);\n      lineBottom += lineWidget.height;\n      count++;\n    }\n    // this.updateLinearIndex(splittedWidget);\n    return splittedWidget;\n  };\n  Layout.prototype.getSplittedWidgetForTable = function (bottom, tableCollection, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) {\n    var rowBottom = tableWidget.y;\n    var splittedWidget = undefined;\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var rowWidget = undefined;\n      var childWidget = tableWidget.childWidgets[i];\n      // if (childWidget instanceof TableRowWidget) {\n      rowWidget = childWidget;\n      // }\n      var rowHeight = rowWidget.height;\n      if (isMultiColumnSplit || bottom < rowBottom + rowHeight || !isNullOrUndefined(splittedWidget)) {\n        //ToDo: Check whether row included in vertical merge or AllowRowSplitbyPage is true, if so split row.\n        //Checks if atleast first line fits in the client area.\n        var splittedRow = undefined;\n        var allowRowBreakAcrossPages = true;\n        if (!isNullOrUndefined(rowWidget) && !isNullOrUndefined(rowWidget.rowFormat)) {\n          allowRowBreakAcrossPages = rowWidget.rowFormat.allowBreakAcrossPages;\n        }\n        if (allowRowBreakAcrossPages) {\n          /* eslint-disable-next-line max-len */\n          splittedRow = isNullOrUndefined(splittedWidget) && this.isFirstLineFitForRow(bottom, rowWidget) ? this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) : rowWidget;\n        } else {\n          if (isNullOrUndefined(tableWidget.containerWidget.containerWidget.previousWidget) && this.isFirstLineFitForRow(bottom, rowWidget) || tableWidget.isInsideTable && !tableWidget.containerWidget.containerWidget.rowFormat.allowBreakAcrossPages) {\n            splittedRow = this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n          } else if (!isNullOrUndefined(tableWidget.containerWidget.containerWidget.previousWidget)) {\n            splittedRow = rowWidget;\n          }\n        }\n        if (!isNullOrUndefined(splittedRow)) {\n          if (i === 0 && splittedRow === rowWidget) {\n            //Returns if the whole table does not fit in current page.\n            return tableWidget;\n          }\n          if (tableWidget.childWidgets.indexOf(splittedRow) !== -1) {\n            tableWidget.childWidgets.splice(tableWidget.childWidgets.indexOf(splittedRow), 1);\n            i--;\n            tableWidget.height -= splittedRow.height;\n          } else {\n            tableWidget.height -= rowHeight - rowWidget.height;\n          }\n          if (isNullOrUndefined(splittedWidget)) {\n            //Creates new widget, to hold the splitted contents.\n            splittedWidget = this.createTableWidget(tableWidget);\n            this.updateWidgetLocation(tableWidget, splittedWidget);\n            splittedWidget.height = splittedRow.height;\n          } else {\n            splittedWidget.height += splittedRow.height;\n          }\n          splittedWidget.childWidgets.push(splittedRow);\n          splittedRow.containerWidget = splittedWidget;\n        }\n      }\n      rowBottom += rowWidget.height;\n    }\n    return splittedWidget;\n  };\n  Layout.prototype.isFirstLineFitForPara = function (bottom, paraWidget) {\n    var lineWidget = paraWidget.childWidgets[0];\n    var lineHeight = lineWidget.height;\n    var height = this.getFootNoteHeightInLine(lineWidget);\n    height += this.existFootnoteHeight;\n    lineHeight += height;\n    var cellwidget = lineWidget.paragraph.containerWidget;\n    if (paraWidget.paragraphFormat.keepLinesTogether && Math.floor(cellwidget.containerWidget.y) !== this.viewer.clientArea.y) {\n      lineHeight = paraWidget.height;\n    }\n    // let document: WordDocument = undefined;\n    // if (!isNullOrUndefined(lineWidget.paragraph.currentNode) && !isNullOrUndefined(cellwidget.containerWidget)) {\n    //     document = WordDocument.getDocumentOf(lineWidget.paragraph.currentNode);\n    // }\n    //checks first line of the page is exceed the page height\n    if (this.documentHelper.isFirstLineFitInShiftWidgets) {\n      /* eslint-disable-next-line max-len */\n      if (this.viewer.clientActiveArea.y === this.viewer.clientArea.y && paraWidget.y + lineHeight >= bottom) {\n        return true;\n      }\n    } else if (!cellwidget.ownerTable.isInsideTable && cellwidget.containerWidget.y === this.viewer.clientArea.y && paraWidget.y + lineHeight >= bottom) {\n      return true;\n    }\n    return paraWidget.y + lineHeight <= bottom;\n  };\n  Layout.prototype.isFirstLineFitForTable = function (bottom, tableWidget) {\n    var rowWidget = undefined;\n    var isFit = false;\n    var childWidget = tableWidget.childWidgets[0];\n    // if (childWidget instanceof TableRowWidget) {\n    rowWidget = childWidget;\n    // }\n    if (!isNullOrUndefined(rowWidget)) {\n      isFit = this.isFirstLineFitForRow(bottom, rowWidget);\n    }\n    return isFit;\n  };\n  Layout.prototype.isFirstLineFitForRow = function (bottom, rowWidget) {\n    for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n      var cellWidget = rowWidget.childWidgets[i];\n      if (!this.isFirstLineFitForCell(bottom, cellWidget)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  Layout.prototype.isFirstLineFitForCell = function (bottom, cellWidget) {\n    if (cellWidget.childWidgets.length === 0) {\n      return true;\n    }\n    if (cellWidget.childWidgets[0] instanceof ParagraphWidget) {\n      var paraWidget = cellWidget.childWidgets[0];\n      return this.isFirstLineFitForPara(bottom - cellWidget.margin.bottom, paraWidget);\n    } else {\n      var tableWidget = cellWidget.childWidgets[0];\n      return this.isFirstLineFitForTable(bottom - cellWidget.margin.bottom, tableWidget);\n    }\n  };\n  Layout.prototype.updateWidgetLocation = function (widget, table) {\n    table.x = widget.x;\n    table.y = widget.y;\n    table.width = widget.width;\n  };\n  Layout.prototype.updateChildLocationForTable = function (top, tableWidget, bodyWidget, updatePosition) {\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var rowWidget = tableWidget.childWidgets[i];\n      //rowWidget.x = rowWidget.x;\n      rowWidget.y = top;\n      this.updateChildLocationForRow(top, rowWidget, bodyWidget, updatePosition);\n      top += rowWidget.height;\n    }\n  };\n  Layout.prototype.updateChildLocationForRow = function (top, rowWidget, bodyWidget, updatePosition) {\n    var spacing = 0;\n    if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n      spacing = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n    }\n    for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n      var cellWidget = rowWidget.childWidgets[i];\n      //cellWidget.x = cellWidget.x;\n      cellWidget.index = cellWidget.cellIndex;\n      cellWidget.y = top + cellWidget.margin.top + spacing;\n      this.updateChildLocationForCellOrShape(cellWidget.y, cellWidget, bodyWidget, updatePosition);\n    }\n  };\n  Layout.prototype.updateChildLocationForCellOrShape = function (top, widget, bodyWidget, updatePosition, updateShapeYPosition) {\n    var container = widget;\n    if (widget instanceof ShapeElementBox) {\n      container = widget.textFrame;\n    }\n    for (var i = 0; i < container.childWidgets.length; i++) {\n      var skipHeight = false;\n      if (container.childWidgets[i] instanceof TableWidget && container.childWidgets[i].wrapTextAround && !isNullOrUndefined(container.childWidgets[i + 1]) && container.childWidgets[i + 1].y > container.childWidgets[i].y && container.childWidgets[i + 1].y < container.childWidgets[i].y + container.childWidgets[i].height) {\n        skipHeight = true;\n      }\n      if (!isNullOrUndefined(container.childWidgets[i].floatingElements) && container.childWidgets[i].floatingElements.length > 0 && updatePosition) {\n        this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - top;\n        this.viewer.clientActiveArea.y = top;\n      }\n      container.childWidgets[i].x = container.childWidgets[i].x;\n      container.childWidgets[i].y = top;\n      if (widget instanceof ShapeElementBox && widget.textWrappingStyle == \"Inline\" && updateShapeYPosition) {\n        this.updateShapeYPosition(widget);\n      }\n      if (!isNullOrUndefined(bodyWidget) && widget instanceof TableCellWidget && container.childWidgets[i] instanceof ParagraphWidget) {\n        var paragraph = container.childWidgets[i];\n        var prevBodyWidgetFloatingElements = widget.ownerTable.bodyWidget.floatingElements;\n        var isRowMovedToNextTable = false;\n        if (widget.ownerTable.bodyWidget === bodyWidget && !isNullOrUndefined(widget.ownerTable.previousSplitWidget)) {\n          prevBodyWidgetFloatingElements = widget.ownerTable.previousSplitWidget.bodyWidget.floatingElements;\n          isRowMovedToNextTable = true;\n        }\n        if (paragraph.floatingElements.length > 0) {\n          for (var j = 0; j < paragraph.floatingElements.length; j++) {\n            var element = paragraph.floatingElements[j];\n            var prevClientActiveAreaX = this.viewer.clientActiveArea.x;\n            this.viewer.clientActiveArea.x = element.x;\n            this.layoutShape(element);\n            this.viewer.clientActiveArea.x = prevClientActiveAreaX;\n            if (!isNullOrUndefined(paragraph.firstChild)) {\n              var firstLine = paragraph.childWidgets[0];\n              for (var k = 0; k < firstLine.children.length; k++) {\n                var elementBox = firstLine.children[k];\n                if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle == 'Inline') {\n                  this.adjustPosition(elementBox, widget.ownerTable.bodyWidget);\n                  top = paragraph.y;\n                }\n              }\n            }\n            if (prevBodyWidgetFloatingElements.indexOf(element) > -1 && element.textWrappingStyle !== 'Inline') {\n              if (!isRowMovedToNextTable) {\n                bodyWidget.floatingElements.push(element);\n                var previousBodyWidget = bodyWidget.previousSplitWidget;\n                if (!isNullOrUndefined(previousBodyWidget) && previousBodyWidget.floatingElements.indexOf(element) !== -1) {\n                  previousBodyWidget.floatingElements.splice(previousBodyWidget.floatingElements.indexOf(element), 1);\n                }\n              }\n              if (prevBodyWidgetFloatingElements.indexOf(element) !== -1) {\n                prevBodyWidgetFloatingElements.splice(prevBodyWidgetFloatingElements.indexOf(element), 1);\n              }\n            }\n          }\n        }\n      }\n      if (container.childWidgets[i] instanceof TableWidget) {\n        this.updateChildLocationForTable(top, container.childWidgets[i], bodyWidget, updatePosition);\n      }\n      if (!skipHeight) {\n        top += container.childWidgets[i].height;\n      }\n    }\n  };\n  Layout.prototype.updateCellVerticalPosition = function (cellWidget, isUpdateToTop, isInsideTable) {\n    var containerWidget = cellWidget.ownerTable.containerWidget;\n    if (containerWidget instanceof BlockContainer || containerWidget instanceof TextFrame || isInsideTable) {\n      var displacement = this.getDisplacement(cellWidget, isUpdateToTop);\n      //Update Y position alone for the child widget of cell\n      this.updateCellContentVerticalPosition(cellWidget, displacement, isUpdateToTop);\n    }\n  };\n  Layout.prototype.updateCellContentVerticalPosition = function (cellWidget, displacement, isUpdateToTop) {\n    if (displacement === 0) {\n      return;\n    }\n    var location = cellWidget.y + displacement;\n    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n      if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n        var para = cellWidget.childWidgets[i];\n        para.y = location;\n        this.updateShapeInsideCell(para, displacement);\n      } else {\n        this.updateTableWidgetLocation(cellWidget.childWidgets[i], location, isUpdateToTop);\n      }\n      location = location + cellWidget.childWidgets[i].height;\n    }\n  };\n  Layout.prototype.updateShapeInsideCell = function (paragraph, displacement) {\n    for (var i = 0; i < paragraph.floatingElements.length; i++) {\n      var floatElement = paragraph.floatingElements[i];\n      floatElement.y += displacement;\n      if (floatElement instanceof ShapeElementBox) {\n        this.updateChildLocationForCellOrShape(floatElement.y, floatElement);\n      }\n    }\n  };\n  Layout.prototype.updateTableWidgetLocation = function (tableWidget, location, isUpdateToTop) {\n    tableWidget.y = location = location + tableWidget.topBorderWidth;\n    var cellSpacing = 0;\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var rowWidget = tableWidget.childWidgets[i];\n      rowWidget.y = location;\n      for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n        var cellWidget = rowWidget.childWidgets[j];\n        cellWidget.y = location + cellWidget.margin.top + cellSpacing;\n        this.updateCellVerticalPosition(cellWidget, isUpdateToTop, true);\n      }\n      location = location + rowWidget.height;\n    }\n    return location;\n  };\n  Layout.prototype.getDisplacement = function (cellWidget, isUpdateToTop) {\n    //Gets the height of row\n    var rowHeight = 0;\n    var rowWidget = cellWidget.containerWidget;\n    var padding = cellWidget.margin.top + cellWidget.margin.bottom;\n    if (!isNullOrUndefined(cellWidget.cellFormat) && cellWidget.cellFormat.rowSpan > 1) {\n      rowHeight = cellWidget.height;\n    } else {\n      rowHeight = (!isNullOrUndefined(rowWidget) ? rowWidget.height : 0) - padding;\n    }\n    //Gets the height of content within the cell\n    var cellContentHeight = this.getCellContentHeight(cellWidget, true);\n    //Displacement field holds the value which has reduced from rowHeight and cellContentHeight\n    var displacement = 0;\n    if (rowHeight > cellContentHeight && rowHeight <= this.viewer.clientArea.height) {\n      displacement = rowHeight - cellContentHeight;\n      if (cellWidget.cellFormat.verticalAlignment === 'Center') {\n        displacement = displacement / 2;\n      } else if (cellWidget.cellFormat.verticalAlignment === 'Top' || isUpdateToTop) {\n        displacement = 0;\n      }\n    }\n    return displacement;\n  };\n  Layout.prototype.getCellContentHeight = function (cellWidget, isDisplacement) {\n    if (isNullOrUndefined(cellWidget.childWidgets)) {\n      return 0;\n    }\n    var contentHeight = 0;\n    var cellY = cellWidget.y;\n    var withShapeContentHeight = 0;\n    var withShapeBottom = 0;\n    var considerShapeHeight = false;\n    var considerAsTop = false;\n    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n      if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n        var para = cellWidget.childWidgets[i];\n        contentHeight += cellWidget.childWidgets[i].height;\n        if (!isDisplacement) {\n          var totalShapeHeight = this.getFloatingItemsHeight(para, cellWidget);\n          contentHeight += totalShapeHeight;\n        }\n        for (var k = 0; k < para.floatingElements.length; k++) {\n          considerShapeHeight = true;\n          var floatElement = para.floatingElements[k];\n          var textWrappingStyle = floatElement.textWrappingStyle;\n          var shapeBottom = floatElement.y + floatElement.height;\n          var paraBottom = para.y + para.height;\n          if (cellY + cellWidget.containerWidget.height > shapeBottom && shapeBottom > withShapeBottom) {\n            withShapeContentHeight = Math.abs(cellY - shapeBottom);\n            withShapeBottom = shapeBottom;\n            considerAsTop = false;\n          } else if (shapeBottom > paraBottom && para.x + para.width > floatElement.x && shapeBottom > withShapeBottom && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind' && (this.documentHelper.compatibilityMode === 'Word2013' || para.floatingElements[k].layoutInCell)) {\n            var height = withShapeBottom === 0 ? shapeBottom - paraBottom : shapeBottom - withShapeBottom;\n            contentHeight += height;\n            withShapeBottom = shapeBottom;\n          } else {\n            considerAsTop = true;\n          }\n        }\n      } else {\n        if (this.considerPositionTableHeight(cellWidget, cellWidget.childWidgets[i])) {\n          contentHeight += cellWidget.childWidgets[i].height;\n        }\n      }\n    }\n    if (cellY + contentHeight > withShapeBottom) {\n      considerShapeHeight = false;\n    }\n    return isDisplacement && considerShapeHeight ? withShapeContentHeight : isDisplacement && considerAsTop ? cellWidget.ownerRow.height : contentHeight;\n  };\n  Layout.prototype.getFloatingItemsHeight = function (paragraph, cellWidget) {\n    var withShapeBottom = 0;\n    var totalShapeHeight = 0;\n    for (var i = 0; i < paragraph.floatingElements.length; i++) {\n      var floatElement = paragraph.floatingElements[i];\n      var textWrappingStyle = floatElement.textWrappingStyle;\n      var shapeBottom = floatElement.y + floatElement.height;\n      var paraBottom = paragraph.y + paragraph.height;\n      if (shapeBottom < this.viewer.clientArea.bottom && floatElement.y !== paragraph.y && paraBottom > shapeBottom && paragraph.x + paragraph.width > floatElement.x && shapeBottom > withShapeBottom && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind' && textWrappingStyle !== 'Inline' && (this.documentHelper.compatibilityMode === 'Word2013' || paragraph.floatingElements[i].layoutInCell)) {\n        var height = withShapeBottom === 0 ? shapeBottom - cellWidget.y : shapeBottom - withShapeBottom;\n        totalShapeHeight += height;\n        withShapeBottom = shapeBottom;\n      }\n    }\n    return totalShapeHeight;\n  };\n  Layout.prototype.considerPositionTableHeight = function (cellWidget, nestedWrapTable) {\n    if (nestedWrapTable.isLayouted && nestedWrapTable.wrapTextAround) {\n      for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n        var blockWidget = cellWidget.childWidgets[i];\n        if (nestedWrapTable !== blockWidget && (blockWidget.y === nestedWrapTable.y || blockWidget.y + blockWidget.height < nestedWrapTable.y)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  Layout.prototype.getTableLeftBorder = function (borders) {\n    if (!isNullOrUndefined(borders.left)) {\n      return borders.left;\n    } else {\n      var border = new WBorder(borders);\n      border.lineStyle = 'Single';\n      border.lineWidth = 0.66;\n      return border;\n    }\n  };\n  Layout.prototype.getTableRightBorder = function (borders) {\n    if (!isNullOrUndefined(borders.right)) {\n      return borders.right;\n    } else {\n      var border = new WBorder(borders);\n      border.lineStyle = 'Single';\n      border.lineWidth = 0.66;\n      return border;\n    }\n  };\n  Layout.prototype.getTableTopBorder = function (borders) {\n    if (!isNullOrUndefined(borders.top)) {\n      return borders.top;\n    } else {\n      var border = new WBorder(borders);\n      border.lineStyle = 'Single';\n      border.lineWidth = 0.66;\n      return border;\n    }\n  };\n  Layout.prototype.getTableBottomBorder = function (borders) {\n    if (!isNullOrUndefined(borders.bottom)) {\n      return borders.bottom;\n    } else {\n      var border = new WBorder(borders);\n      border.lineStyle = 'Single';\n      border.lineWidth = 0.66;\n      return border;\n    }\n  };\n  Layout.prototype.getCellDiagonalUpBorder = function (tableCell) {\n    var diagonalUpBorder = undefined;\n    var cellBorder = undefined;\n    cellBorder = tableCell.cellFormat.borders;\n    diagonalUpBorder = cellBorder.diagonalUp;\n    return diagonalUpBorder;\n  };\n  Layout.prototype.getCellDiagonalDownBorder = function (tableCell) {\n    var diagonalDownBorder = undefined;\n    var cellBorder = undefined;\n    cellBorder = tableCell.cellFormat.borders;\n    diagonalDownBorder = cellBorder.diagonalDown;\n    return diagonalDownBorder;\n  };\n  Layout.prototype.getTableWidth = function (table) {\n    var width = 0;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      var rowWidth = 0;\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        rowWidth += HelperMethods.convertPointToPixel(cell.cellFormat.cellWidth);\n      }\n      if (width < rowWidth) {\n        width = rowWidth;\n      }\n    }\n    return width;\n  };\n  //#region shifting\n  Layout.prototype.layoutNextItemsBlock = function (blockAdv, viewer, isFootnoteReLayout) {\n    var sectionIndex = blockAdv.bodyWidget.sectionIndex;\n    var block = blockAdv;\n    var splittedWidget = block.getSplitWidgets();\n    var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n    if (isNullOrUndefined(nextBlock) || this.documentHelper.blockToShift === block) {\n      this.documentHelper.blockToShift = undefined;\n    }\n    var updateNextBlockList = true;\n    while (nextBlock instanceof BlockWidget && (nextBlock.bodyWidget.sectionIndex === sectionIndex || nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight)) {\n      if (!isNullOrUndefined(isFootnoteReLayout) && isFootnoteReLayout && !nextBlock.isLayouted && this.isInitialLoad) {\n        break;\n      }\n      var currentWidget = undefined;\n      var blocks = block.getSplitWidgets();\n      currentWidget = blocks[blocks.length - 1];\n      // if (viewer.fieldEndParagraph === block) {\n      //     //Sets field end paragraph to undefined, inorder to hold reLayouting with this paragraph.\n      //     viewer.fieldEndParagraph = undefined;\n      // }\n      block = nextBlock;\n      if (this.documentHelper.blockToShift === block) {\n        this.documentHelper.blockToShift = undefined;\n      }\n      updateNextBlockList = false;\n      var nextWidget = undefined;\n      nextWidget = block.getSplitWidgets()[0];\n      /* eslint-disable-next-line max-len */\n      if (this.documentHelper.fieldStacks.length === 0 && !isNullOrUndefined(nextWidget) && currentWidget.containerWidget === nextWidget.containerWidget && HelperMethods.round(nextWidget.y, 2) === HelperMethods.round(currentWidget.y + currentWidget.height, 2)) {\n        if (!isNullOrUndefined(this.documentHelper.blockToShift) || this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n          this.documentHelper.blockToShift = block;\n        } else if (nextWidget.bodyWidget) {\n          var floatingElementLength = nextWidget.bodyWidget.floatingElements.length;\n          if (floatingElementLength > 0 || floatingElementLength === 0 && isNullOrUndefined(this.documentHelper.blockToShift) && nextWidget instanceof ParagraphWidget && nextWidget.isEmpty() && currentWidget instanceof TableWidget) {\n            this.documentHelper.blockToShift = block;\n          }\n        }\n        break;\n      }\n      updateNextBlockList = true;\n      if (viewer.owner.isShiftingEnabled && this.documentHelper.fieldStacks.length === 0 || this.isIFfield) {\n        this.documentHelper.blockToShift = block;\n        break;\n      } else if (isNullOrUndefined(this.viewer.owner.editorModule) || !this.viewer.owner.editorModule.isInsertingTOC) {\n        block = block.combineWidget(this.viewer);\n        //let paragraph: ParagraphWidget;\n        if (currentWidget.containerWidget !== block.containerWidget) {\n          if (!(currentWidget instanceof ParagraphWidget) || currentWidget instanceof ParagraphWidget && !currentWidget.isEndsWithPageBreak && !currentWidget.isEndsWithColumnBreak && currentWidget.containerWidget.page !== block.containerWidget.page && !(block.bodyWidget instanceof BodyWidget && block.bodyWidget.sectionFormat.breakCode === 'NoBreak')) {\n            /* eslint-disable-next-line max-len */\n            this.updateContainerWidget(block, currentWidget.containerWidget, currentWidget.indexInOwner + 1, false);\n          }\n        }\n        if (block instanceof TableWidget) {\n          this.clearTableWidget(block, true, true);\n          block.isGridUpdated = false;\n          //paragraph = this.documentHelper.selection.getFirstParagraphInFirstCell(block as TableWidget);\n        } else {\n          //paragraph = block as ParagraphWidget;\n        }\n        //if ((this.viewer.owner.isDocumentLoaded) && this.viewer.owner.editorModule) {\n        //    this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n        //}\n        viewer.updateClientAreaForBlock(block, true);\n        if (this.viewer instanceof WebLayoutViewer || block.bodyWidget instanceof HeaderFooterWidget) {\n          block.containerWidget.height -= block.height;\n        }\n        this.documentHelper.layout.layoutBlock(block, 0);\n        viewer.updateClientAreaForBlock(block, false);\n      }\n      splittedWidget = nextBlock.getSplitWidgets();\n      nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n    }\n    if (!viewer.owner.isShiftingEnabled || this.documentHelper.blockToShift !== block) {\n      this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n    }\n  };\n  /**\n   * Update the client area for the line widget.\n   *\n   * @param {LineWidget} startLineWidget LineWidget instance.\n   * @private\n   */\n  Layout.prototype.updateClientAreaForLine = function (startLineWidget) {\n    startLineWidget.marginTop = 0;\n    //Clears the line widget starting from current line.\n    var top = this.documentHelper.selection.getTop(startLineWidget);\n    var left = this.viewer.clientArea.x;\n    this.viewer.cutFromTop(top);\n    this.viewer.cutFromLeft(left);\n  };\n  Layout.prototype.getParentTable = function (block) {\n    var widget = block;\n    while (widget.containerWidget) {\n      if (widget.containerWidget instanceof BlockContainer || widget.containerWidget instanceof TextFrame) {\n        return widget;\n      }\n      widget = widget.containerWidget;\n    }\n    return undefined;\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.reLayoutParagraph = function (paragraphWidget, lineIndex, elementBoxIndex, isBidi, isSkip) {\n    if (this.isReplaceAll) {\n      return;\n    }\n    this.isRelayout = true;\n    if (paragraphWidget.containerWidget instanceof TextFrame && paragraphWidget.containerWidget.containerShape.textWrappingStyle === 'Inline') {\n      lineIndex = paragraphWidget.containerWidget.containerShape.line.indexInOwner;\n      paragraphWidget = paragraphWidget.containerWidget.containerShape.paragraph;\n    }\n    isBidi = isNullOrUndefined(isBidi) ? false : isBidi;\n    this.isRelayout = true;\n    if (this.documentHelper.blockToShift === paragraphWidget) {\n      this.layoutBodyWidgetCollection(paragraphWidget.index, paragraphWidget.containerWidget, paragraphWidget, false);\n      this.isBidiReLayout = true;\n    } else {\n      if (this.isBidiReLayout) {\n        this.isBidiReLayout = false;\n      }\n    }\n    // let isElementMoved: boolean = elementBoxIndex > 0;\n    if (paragraphWidget.isInsideTable) {\n      this.isBidiReLayout = true;\n      if (!this.isReplacingAll) {\n        this.reLayoutTable(paragraphWidget);\n      }\n      /* eslint-disable-next-line max-len */\n      if (this.isFootnoteContentChanged && !isNullOrUndefined(paragraphWidget.bodyWidget) && !isNullOrUndefined(paragraphWidget.bodyWidget.page.footnoteWidget)) {\n        var foot = paragraphWidget.bodyWidget.page.footnoteWidget;\n        this.layoutfootNote(foot);\n      }\n      this.isBidiReLayout = false;\n    } else {\n      // this.isRelayout = true;\n      this.reLayoutLine(paragraphWidget, lineIndex, isBidi, isSkip);\n    }\n    if (paragraphWidget.bodyWidget instanceof HeaderFooterWidget && paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n      this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n    }\n    // this.updateLinearIndex(paragraphWidget);\n  };\n  Layout.prototype.getParentRow = function (block) {\n    var cell = block;\n    while (cell.ownerTable !== null && cell.ownerTable.isInsideTable) {\n      cell = cell.ownerTable.associatedCell;\n    }\n    return cell.ownerRow;\n  };\n  Layout.prototype.reLayoutRow = function (block) {\n    if (block instanceof ParagraphWidget) {\n      block = block.associatedCell;\n    }\n    var currentRow = this.getParentRow(block).getSplitWidgets()[0];\n    if (!isNullOrUndefined(currentRow) && !currentRow.ownerTable.tableFormat.allowAutoFit) {\n      var currentTable = currentRow.ownerTable.getSplitWidgets()[0].combineWidget(this.viewer);\n      var startRow = currentRow;\n      while (this.isVerticalMergedCellContinue(startRow)) {\n        var previousRow = startRow.previousWidget;\n        if (isNullOrUndefined(previousRow)) {\n          break;\n        }\n        startRow = previousRow;\n      }\n      var bodyWidget = currentTable.containerWidget;\n      if (this.viewer instanceof WebLayoutViewer) {\n        bodyWidget.height -= currentTable.height;\n      }\n      if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n        block.bodyWidget.isEmpty = false;\n        bodyWidget.height -= currentTable.height;\n        /* eslint-disable-next-line max-len */\n        this.viewer.updateHeaderFooterClientAreaWithTop(currentTable.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(currentTable), bodyWidget.page);\n      } else if (bodyWidget instanceof TextFrame) {\n        this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n      } else {\n        this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n      }\n      /* eslint-disable-next-line max-len */\n      var area = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n      var clientArea = new Rect(area.x, area.y, area.width, area.height);\n      if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n        var block_3 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n        this.viewer.owner.editorModule.updateWholeListItems(block_3);\n      }\n      this.viewer.updateClientAreaForBlock(currentTable, true);\n      this.viewer.cutFromTop(startRow.y);\n      this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n      //Clear Hieght for all the content\n      currentTable.height = 0;\n      do {\n        this.clearRowWidget(currentRow, true, true, true);\n        this.layoutRow([currentTable], currentRow, true);\n        if (startRow === currentRow) {\n          break;\n        }\n        startRow = startRow.nextRow;\n      } while (startRow && startRow !== currentRow);\n      this.updateChildLocationForTable(currentTable.y, currentTable);\n      this.viewer.clientArea = clientArea;\n      this.viewer.clientActiveArea = new Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height);\n      this.viewer.updateClientAreaForBlock(currentTable, true);\n      currentTable.x -= currentTable.leftBorderWidth;\n      currentTable.y -= currentTable.topBorderWidth;\n      this.viewer.cutFromTop(currentTable.y);\n      this.shiftTableWidget(currentTable, this.viewer, true);\n      this.layoutNextItemsBlock(currentTable, this.viewer);\n    } else {\n      this.currentCell = block;\n      this.reLayoutTable(block);\n      this.currentCell = undefined;\n    }\n  };\n  Layout.prototype.reLayoutTable = function (block, isFootnoteReLayout) {\n    //Get Top level owner of block\n    var table = this.getParentTable(block);\n    if (table.header) {\n      var tableCollection = table.getSplitWidgets();\n      for (var i = 1; i < tableCollection.length; i++) {\n        tableCollection[i].bodyWidget.page.repeatHeaderRowTableWidget = false;\n      }\n    }\n    //Combine splitted table in to single table\n    var currentTable = table.combineWidget(this.viewer);\n    var bodyWidget = currentTable.containerWidget;\n    if (this.viewer instanceof WebLayoutViewer) {\n      bodyWidget.height -= currentTable.height;\n    }\n    if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n      block.bodyWidget.isEmpty = false;\n      bodyWidget.height -= currentTable.height;\n      /* eslint-disable-next-line max-len */\n      this.viewer.updateHeaderFooterClientAreaWithTop(table.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(table), bodyWidget.page);\n    } else if (bodyWidget instanceof TextFrame) {\n      this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n    } else {\n      this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n    }\n    //Clear Hieght for all the content\n    if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n      var block_4 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n      this.viewer.owner.editorModule.updateWholeListItems(block_4);\n    }\n    this.viewer.updateClientAreaForBlock(currentTable, true);\n    //Remove border width\n    currentTable.x -= currentTable.leftBorderWidth;\n    currentTable.y -= currentTable.topBorderWidth;\n    //Update Client area for current position\n    var yPos = this.getYPosition(currentTable);\n    this.viewer.cutFromTop(yPos);\n    this.clearTableWidget(currentTable, true, true, true, true);\n    this.isBidiReLayout = true;\n    this.layoutBlock(currentTable, 0);\n    this.viewer.updateClientAreaForBlock(currentTable, false);\n    this.layoutNextItemsBlock(currentTable, this.viewer, isFootnoteReLayout);\n  };\n  Layout.prototype.getYPosition = function (table) {\n    if (table.wrapTextAround) {\n      var prevWidget = table.previousWidget;\n      while (prevWidget) {\n        if (prevWidget instanceof ParagraphWidget) {\n          return prevWidget.y + prevWidget.height;\n        } else if (prevWidget instanceof TableWidget) {\n          if (prevWidget.wrapTextAround) {\n            prevWidget = prevWidget.previousWidget;\n          } else {\n            return prevWidget.y + prevWidget.height;\n          }\n        }\n      }\n      return this.viewer.clientActiveArea.y;\n    }\n    return table.y;\n  };\n  Layout.prototype.clearFootnoteReference = function (table, updateClientHeight) {\n    if (table.footnoteElement && table.footnoteElement.length > 0) {\n      var startPage = table.bodyWidget.page;\n      for (var i = table.footnoteElement.length - 1; i >= 0; i--) {\n        var footnote = table.footnoteElement[i];\n        footnote.isLayout = false;\n        var footNoteWidget = footnote.bodyWidget.containerWidget;\n        if (footNoteWidget && footNoteWidget.bodyWidgets.indexOf(footnote.bodyWidget) !== -1) {\n          var footnoteHeight = this.getFootNoteHeight(footnote.bodyWidget);\n          footNoteWidget.height -= footnoteHeight;\n          footNoteWidget.bodyWidgets.splice(footnote.bodyWidget.indexInOwner, 1);\n          if (updateClientHeight && footNoteWidget.page === startPage) {\n            this.viewer.clientActiveArea.height += footnoteHeight;\n            this.viewer.clientArea.height += footnoteHeight;\n          }\n        }\n        if (footNoteWidget.bodyWidgets.length === 0 && footNoteWidget.page) {\n          footNoteWidget.page.footnoteWidget = undefined;\n        }\n        footnote.bodyWidget.containerWidget = undefined;\n      }\n      table.footnoteElement = [];\n    }\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.clearTableWidget = function (table, clearPosition, clearHeight, clearGrid, updateClientHeight) {\n    table.height = 0;\n    if (clearGrid) {\n      table.isGridUpdated = false;\n    }\n    if (clearPosition) {\n      table.y = 0;\n      table.x = 0;\n      if (table.footnoteElement && table.footnoteElement.length > 0) {\n        this.clearFootnoteReference(table, updateClientHeight);\n      }\n    }\n    table.leftBorderWidth = 0;\n    table.rightBorderWidth = 0;\n    table.topBorderWidth = 0;\n    table.bottomBorderWidth = 0;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      this.clearRowWidget(row, clearPosition, clearHeight, clearGrid);\n    }\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.clearRowWidget = function (row, clearPosition, clearHeight, clearGrid) {\n    row.height = 0;\n    if (clearPosition) {\n      row.y = 0;\n      row.x = 0;\n    }\n    row.topBorderWidth = 0;\n    row.bottomBorderWidth = 0;\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      this.clearCellWidget(cell, clearPosition, clearHeight, clearGrid);\n    }\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.clearCellWidget = function (cell, clearPosition, clearHeight, clearGrid) {\n    cell.height = 0;\n    if (clearPosition) {\n      cell.y = 0;\n      cell.x = 0;\n    }\n    cell.leftBorderWidth = 0;\n    cell.rightBorderWidth = 0;\n    this.clearBlockWidget(cell.childWidgets, clearPosition, clearHeight, clearGrid);\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.clearBlockWidget = function (blocks, clearPosition, clearHeight, clearGrid) {\n    for (var i = 0; i < blocks.length; i++) {\n      var block = blocks[i];\n      if (block instanceof ParagraphWidget) {\n        if (clearPosition) {\n          block.y = 0;\n          block.x = 0;\n        }\n        if (clearHeight) {\n          block.height = 0;\n        }\n      } else {\n        this.clearTableWidget(block, clearPosition, clearHeight, clearGrid);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.layoutBodyWidgetCollection = function (blockIndex, bodyWidget, block, shiftNextWidget, isSkipShifting) {\n    if (!isNullOrUndefined(block) && block.isFieldCodeBlock) {\n      return;\n    }\n    if (!isNullOrUndefined(this.documentHelper.owner) && this.documentHelper.owner.isLayoutEnabled) {\n      if (bodyWidget instanceof BlockContainer || bodyWidget instanceof TextFrame) {\n        var curretBlock = this.checkAndGetBlock(bodyWidget, blockIndex);\n        if (bodyWidget instanceof BodyWidget && isNullOrUndefined(curretBlock) && !isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak') {\n          curretBlock = bodyWidget.nextRenderedWidget.firstChild;\n          bodyWidget = bodyWidget.nextRenderedWidget;\n        }\n        if (isNullOrUndefined(curretBlock)) {\n          return;\n        }\n        if (this.viewer instanceof WebLayoutViewer) {\n          curretBlock.containerWidget.height -= curretBlock.height;\n        }\n        if (bodyWidget instanceof HeaderFooterWidget) {\n          bodyWidget.isEmpty = false;\n          this.viewer.updateHeaderFooterClientAreaWithTop(bodyWidget.sectionFormat, bodyWidget.headerFooterType.indexOf('Header') !== -1, bodyWidget.page);\n          curretBlock.containerWidget.height -= curretBlock.height;\n        } else if (bodyWidget instanceof TextFrame) {\n          this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true, !shiftNextWidget);\n        } else if (!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget) {\n          this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n          if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n            this.isRelayoutFootnote = true;\n            this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n            this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n            //curretBlock.containerWidget.height -= curretBlock.height;\n            this.viewer.clientActiveArea.y = curretBlock.containerWidget.containerWidget.y;\n          } else {\n            this.viewer.cutFromTop(bodyWidget.containerWidget.y);\n            this.layoutfootNote(bodyWidget.containerWidget);\n            return;\n          }\n          // curretBlock.containerWidget.height -= curretBlock.height;\n        } else {\n          if (!isNullOrUndefined(bodyWidget.page.footnoteWidget)) {\n            if (bodyWidget.page.footnoteWidget.footNoteType === 'Footnote') {\n              this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n            } else {\n              this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n            }\n          } else {\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n          }\n          // if (bodyWidget.page.footnoteWidget) {\n          //     this.viewer.clientActiveArea.height -= bodyWidget.page.footnoteWidget.height;\n          //     this.viewer.clientArea.height -= bodyWidget.page.footnoteWidget.height;\n          // }\n        }\n        if (blockIndex > 0 || curretBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && curretBlock.bodyWidget.index !== 0 && curretBlock === bodyWidget.firstChild) {\n          curretBlock = curretBlock.combineWidget(this.viewer);\n          var prevWidget = curretBlock.getSplitWidgets()[0].previousRenderedWidget;\n          if (!isNullOrUndefined(prevWidget) && prevWidget.wrapTextAround && !isNullOrUndefined(prevWidget.getSplitWidgets()[0].previousRenderedWidget) && prevWidget.y < prevWidget.getSplitWidgets()[0].previousRenderedWidget.y) {\n            prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n          }\n          while (prevWidget instanceof BlockWidget && prevWidget.isFieldCodeBlock) {\n            prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n          }\n          if (!(isNullOrUndefined(prevWidget) || prevWidget instanceof ParagraphWidget) || prevWidget instanceof ParagraphWidget && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak) {\n            if (isNullOrUndefined(isSkipShifting) && curretBlock.containerWidget !== prevWidget.containerWidget) {\n              /* eslint-disable-next-line max-len */\n              var prevBodyWidget = curretBlock.containerWidget;\n              var newBodyWidget = prevWidget.containerWidget;\n              var footWidgets = this.getFootNoteWidgetsOf(curretBlock);\n              this.moveFootNotesToPage(footWidgets, prevBodyWidget, newBodyWidget);\n              if (curretBlock.bodyWidget.sectionFormat.breakCode !== 'NoBreak' || curretBlock.bodyWidget.index === prevWidget.bodyWidget.index) {\n                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                this.updateContainerWidget(curretBlock, newBodyWidget, prevWidget.indexInOwner + 1, false);\n              } else if (curretBlock.bodyWidget.sectionIndex !== prevWidget.bodyWidget.sectionIndex && prevWidget.bodyWidget.sectionFormat.numberOfColumns > 1 && curretBlock.bodyWidget.page === prevWidget.bodyWidget.page) {\n                var firstBody = this.getBodyWidget(prevWidget.bodyWidget, true);\n                var height = this.getNextWidgetHeight(firstBody);\n                this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                this.viewer.clientActiveArea.y = height;\n                this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n                this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n              } else {\n                this.viewer.updateClientArea(curretBlock.bodyWidget, curretBlock.bodyWidget.page, true);\n                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n              }\n            } else {\n              if (prevWidget instanceof ParagraphWidget && prevWidget.height <= 0 && this.isMultiColumnDoc) {\n                var prevPara = prevWidget;\n                this.viewer.updateClientAreaForBlock(prevPara, true);\n                this.layoutParagraph(prevPara, 0);\n                this.viewer.updateClientArea(prevPara.bodyWidget, prevPara.bodyWidget.page, true);\n              }\n              this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n            }\n          } else if (prevWidget instanceof ParagraphWidget && (prevWidget.isEndsWithPageBreak || prevWidget.isEndsWithColumnBreak) && prevWidget.containerWidget === curretBlock.containerWidget) {\n            this.moveBlocksToNextPage(prevWidget, false);\n          }\n        }\n        var currentParagraph = void 0;\n        curretBlock = curretBlock.combineWidget(this.viewer);\n        if (curretBlock instanceof TableWidget) {\n          this.clearTableWidget(curretBlock, true, true);\n          curretBlock.isGridUpdated = false;\n          currentParagraph = this.documentHelper.getFirstParagraphInFirstCell(curretBlock);\n        } else {\n          currentParagraph = curretBlock;\n        }\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n          this.viewer.owner.editorModule.updateWholeListItems(currentParagraph);\n        }\n        this.viewer.updateClientAreaForBlock(curretBlock, true, undefined, false, true);\n        this.isRelayout = true;\n        this.documentHelper.layout.layoutBlock(curretBlock, 0);\n        this.isRelayout = false;\n        this.viewer.updateClientAreaForBlock(curretBlock, false);\n        if (!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget) {\n          if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n            this.layoutfootNote(bodyWidget.containerWidget);\n          }\n        }\n        if (shiftNextWidget) {\n          this.shiftNextWidgets(curretBlock);\n        } else {\n          this.layoutNextItemsBlock(curretBlock, this.viewer);\n        }\n      } else if (bodyWidget instanceof TableCellWidget) {\n        /* eslint-disable-next-line max-len */\n        var table = this.documentHelper.layout.getParentTable(bodyWidget.ownerTable).getSplitWidgets()[0];\n        this.reLayoutTable(bodyWidget.ownerTable);\n        this.layoutNextItemsBlock(table, this.viewer);\n      }\n    }\n    this.isRelayoutFootnote = false;\n  };\n  /**\n   * @private\n   */\n  Layout.prototype.checkAndGetBlock = function (containerWidget, blockIndex) {\n    if (containerWidget instanceof TextFrame) {\n      return containerWidget.childWidgets[blockIndex];\n    } else {\n      var sectionIndex = containerWidget.indexInOwner;\n      if (containerWidget.page.bodyWidgets.length <= 1) {\n        while (containerWidget && containerWidget.indexInOwner === sectionIndex) {\n          if (containerWidget.childWidgets.length > 0 && containerWidget.firstChild.index <= blockIndex && containerWidget.lastChild.index >= blockIndex) {\n            for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n              var block = containerWidget.childWidgets[i];\n              if (block.index === blockIndex) {\n                return block;\n              }\n            }\n          }\n          if (containerWidget instanceof BodyWidget) {\n            containerWidget = containerWidget.nextRenderedWidget;\n          } else {\n            break;\n          }\n        }\n      } else {\n        while (containerWidget) {\n          if (containerWidget.childWidgets.length > 0) {\n            for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n              var block = containerWidget.childWidgets[i];\n              if (block.index === blockIndex) {\n                return block;\n              }\n            }\n          }\n          if (containerWidget instanceof BodyWidget) {\n            containerWidget = containerWidget.nextRenderedWidget;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n  //#endregion\n  //#region Table\n  Layout.prototype.layoutTable = function (table, startIndex) {\n    if (this.isFieldCode && !this.checkTableHasField(table) && !this.isRelayout) {\n      table.isFieldCodeBlock = true;\n      return table;\n    }\n    if (!isNullOrUndefined(table.previousWidget) && this.viewer.clientActiveArea.height < 0 && !table.wrapTextAround) {\n      this.moveBlocksToNextPage(table.previousWidget, false);\n    }\n    table.isBidiTable = table.bidi;\n    if (!table.isGridUpdated) {\n      table.buildTableColumns();\n      table.isGridUpdated = true;\n    }\n    if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable && !isNullOrUndefined(table.firstChild.firstChild.leftMargin)) {\n      this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n    }\n    var tableView = [table];\n    this.addTableWidget(this.viewer.clientActiveArea, tableView);\n    this.viewer.updateClientAreaTopOrLeft(table, true);\n    var clientActiveAreaForTableWrap;\n    var clientAreaForTableWrap;\n    var wrapDiff = 0;\n    if (table.wrapTextAround) {\n      clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n      clientAreaForTableWrap = this.viewer.clientArea.clone();\n      this.updateClientAreaForWrapTable(tableView, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n    } else if (!(table.containerWidget instanceof TextFrame)) {\n      this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n      if (this.isWrapText) {\n        wrapDiff = this.viewer.clientActiveArea.x - this.viewer.clientArea.x;\n        this.isWrapText = false;\n        table.x = this.viewer.clientActiveArea.x;\n      }\n    }\n    if (table.childWidgets.length > 0) {\n      var isHeader = table.childWidgets[0].rowFormat.isHeader;\n      table.header = isHeader;\n      table.continueHeader = isHeader;\n      table.headerHeight = 0;\n    }\n    var row = table.childWidgets[startIndex];\n    var index = tableView.length;\n    while (row) {\n      row = this.layoutRow(tableView, row);\n      row = row.nextRow;\n    }\n    if (this.documentHelper.viewer instanceof PageLayoutViewer && table.wrapTextAround && (table.positioning.verticalAlignment === 'Bottom' || table.positioning.verticalAlignment === 'Center' || table.positioning.verticalAlignment === 'Outside')) {\n      this.updateTableFloatPoints(table);\n      this.updateChildLocationForTable(table.y, table);\n    }\n    this.updateWidgetsToPage(tableView, [], table, true);\n    if (wrapDiff > 0) {\n      this.viewer.clientArea.x = this.viewer.clientArea.x - wrapDiff;\n    }\n    var tableWidget = table.getSplitWidgets();\n    if (table.wrapTextAround && table.bodyWidget && table.bodyWidget.lastChild !== tableWidget[tableWidget.length - 1]) {\n      this.updateClientAreaForWrapTable(tableView, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n    }\n    tableView[tableView.length - 1].isLayouted = true;\n    tableView[tableView.length - 1].isFieldCodeBlock = false;\n    if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable && !table.wrapTextAround && !isNullOrUndefined(table.firstChild.firstChild.leftMargin)) {\n      this.viewer.clientArea.x = this.viewer.clientArea.x + HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n    }\n    return tableView[tableView.length - 1];\n  };\n  Layout.prototype.updateClientAreaForWrapTable = function (tables, table, beforeLayout, clientActiveAreaForTableWrap, clientAreaForTableWrap) {\n    if (beforeLayout) {\n      if (table.wrapTextAround) {\n        this.updateTableFloatPoints(table);\n        var clienactare = this.viewer.clientActiveArea.clone();\n        var rect = this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n        if (clienactare.x !== rect.x) {\n          table.x = this.viewer.clientActiveArea.x;\n        }\n        if (clienactare.y !== rect.y) {\n          table.y = this.viewer.clientActiveArea.y;\n        }\n      }\n    } else {\n      if (table.wrapTextAround && table.bodyWidget) {\n        if (tables.length == 1) {\n          if (!isNullOrUndefined(table.previousWidget) || table.isInHeaderFooter || table.isInsideTable) {\n            this.viewer.clientActiveArea = clientActiveAreaForTableWrap.clone();\n            this.viewer.clientArea = clientAreaForTableWrap.clone();\n            if (!table.isLayouted && this.viewer.clientActiveArea.height < table.height && table.width >= this.viewer.clientActiveArea.width) {\n              this.moveBlocksToNextPage(table.previousWidget, false);\n            }\n          } else {\n            this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n          }\n          if (table.bodyWidget.floatingElements.indexOf(table) === -1) {\n            table.bodyWidget.floatingElements.push(table);\n          }\n        } else {\n          this.documentHelper.tableLefts.pop();\n          this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n          for (var z = 0; z < tables.length; z++) {\n            var bodyWidget = tables[z].bodyWidget;\n            if (!isNullOrUndefined(bodyWidget) && bodyWidget.floatingElements.indexOf(tables[z]) === -1) {\n              bodyWidget.floatingElements.push(tables[z]);\n            }\n          }\n          var splittedTable = tables[tables.length - 1];\n          this.viewer.cutFromTop(this.viewer.clientActiveArea.y + splittedTable.height + splittedTable.tableFormat.borders.bottom.lineWidth);\n        }\n      }\n    }\n  };\n  Layout.prototype.addTableWidget = function (area, table, create) {\n    var tableWidget = table[table.length - 1];\n    if (create) {\n      tableWidget = this.createTableWidget(tableWidget);\n      table.push(tableWidget);\n    }\n    tableWidget.width = area.width;\n    tableWidget.x = area.x;\n    tableWidget.y = area.y;\n    //Update the table height of tableWidget when cell spacing has been defined.\n    if (tableWidget.tableFormat.cellSpacing > 0) {\n      tableWidget.height = tableWidget.height + HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n      if (!tableWidget.isBidiTable) {\n        /* eslint-disable-next-line max-len */\n        tableWidget.leftBorderWidth = HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n        /* eslint-disable-next-line max-len */\n        tableWidget.rightBorderWidth = HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n      } else {\n        // Right to left direction table.\n        /* eslint-disable-next-line max-len */\n        tableWidget.leftBorderWidth = HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n        /* eslint-disable-next-line max-len */\n        tableWidget.rightBorderWidth = HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n      }\n      /* eslint-disable-next-line max-len */\n      tableWidget.topBorderWidth = HelperMethods.convertPointToPixel(this.getTableTopBorder(tableWidget.tableFormat.borders).getLineWidth());\n      /* eslint-disable-next-line max-len */\n      tableWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(this.getTableBottomBorder(tableWidget.tableFormat.borders).getLineWidth());\n      tableWidget.x += tableWidget.leftBorderWidth;\n      tableWidget.y += tableWidget.topBorderWidth;\n      tableWidget.width -= tableWidget.leftBorderWidth;\n      tableWidget.width -= tableWidget.rightBorderWidth;\n      tableWidget.height += tableWidget.bottomBorderWidth;\n    }\n    return tableWidget;\n  };\n  Layout.prototype.updateWidgetsToPage = function (tables, rows, table, rearrangeRow, endRowWidget) {\n    var viewer = this.viewer;\n    var tableWidget = tables[tables.length - 1];\n    if (!table.isInsideTable) {\n      for (var i = 0; i < tables.length; i++) {\n        this.updateHeightForTableWidget(tables, rows, tables[i], endRowWidget);\n      }\n      if (tableWidget.childWidgets.length > 0 && tableWidget.y !== tableWidget.childWidgets[0].y) {\n        tableWidget.y = tableWidget.childWidgets[0].y;\n      }\n      // Need to update on this further\n      //Adds the table widget to owner cell widget.\n      // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).childWidgets.push(tableWidget);\n      // tableWidget.containerWidget = viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as BodyWidget;\n      // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height = (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height + tableWidget.height;\n    }\n    // Shift the widgets for Right to left directed table.\n    if (table.isBidiTable && rearrangeRow) {\n      for (var i = 0; i < tables.length; i++) {\n        var layoutedTable = tables[i];\n        for (var j = 0; j < layoutedTable.childWidgets.length; j++) {\n          var layoutedRow = layoutedTable.childWidgets[j];\n          layoutedRow.shiftWidgetForRtlTable();\n        }\n      }\n    }\n    if (table.tableFormat.cellSpacing > 0) {\n      /* eslint-disable-next-line max-len */\n      if (tableWidget.y + tableWidget.height + HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) > viewer.clientArea.bottom && viewer instanceof WebLayoutViewer) {\n        //update the table height when split to next page. Which is equivalent Ms Word Behaviour.\n        //In Ms Word if the Table Split to next page the bottom spacing of the table will be half of the current spacing.\n        //And the Remaining space will be used in next page top of the table.\n        tableWidget.height = tableWidget.height - HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) / 2;\n      }\n      //Update the current Y position of current clientactivearea.\n      viewer.cutFromTop(tableWidget.y + tableWidget.height);\n    }\n    if (this.viewer instanceof WebLayoutViewer) {\n      table.containerWidget.height += table.height;\n    }\n    if (table.bodyWidget instanceof HeaderFooterWidget && !table.wrapTextAround) {\n      table.containerWidget.height += table.height;\n      if (this.viewer.owner.enableHeaderAndFooter && table.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n        this.shiftFooterChildLocation(table.bodyWidget, this.viewer);\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.updateHeightForTableWidget = function (tables, rows, tableWidget, endRowWidget) {\n    for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n      var rowWidget = tableWidget.childWidgets[i];\n      if (rowWidget === endRowWidget) {\n        break;\n      }\n      this.updateHeightForRowWidget(this.viewer, true, tables, rows, rowWidget, false, endRowWidget);\n    }\n  };\n  //#endregion\n  //#region Row\n  Layout.prototype.layoutRow = function (tableWidget, row, isRowLayout) {\n    var isNestedTable = row.ownerTable.isInsideTable;\n    if (!isNestedTable) {\n      this.updateExistingFootnoteHeight(row);\n    }\n    var viewer = this.viewer;\n    var rowWidgets = [row];\n    this.addTableRowWidget(viewer.clientActiveArea, rowWidgets);\n    viewer.updateClientAreaForRow(row, true);\n    var topMargin = this.getMaxTopCellMargin(row);\n    var bottomMargin = this.getMaxBottomCellMargin(row);\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      this.layoutCell(cell, topMargin + row.topBorderWidth, bottomMargin + row.bottomBorderWidth);\n    }\n    viewer.updateClientAreaForRow(row, false);\n    var rows = [row];\n    if (!isRowLayout) {\n      this.updateWidgetsToTable(tableWidget, rows, row, false);\n    }\n    if (!isNestedTable) {\n      this.layoutedFootnoteElement = [];\n    }\n    return rows[rows.length - 1];\n  };\n  Layout.prototype.updateExistingFootnoteHeight = function (row) {\n    this.layoutedFootnoteElement = [];\n    if (!isNullOrUndefined(row.bodyWidget.page.footnoteWidget) && row.bodyWidget.page.footnoteWidget.bodyWidgets.length !== 0) {\n      this.existFootnoteHeight = row.bodyWidget.page.footnoteWidget.height;\n    } else {\n      this.existFootnoteHeight = 0;\n    }\n  };\n  Layout.prototype.isIntersecting = function (startPosition, endPosition, adjacentStartPosition, adjacentEndPosition) {\n    return (HelperMethods.round(adjacentStartPosition, 2) <= HelperMethods.round(startPosition, 2) || HelperMethods.round(adjacentStartPosition, 2) < HelperMethods.round(endPosition, 2)) && HelperMethods.round(adjacentEndPosition, 2) > HelperMethods.round(startPosition, 2);\n  };\n  Layout.prototype.getAdjacentRowCell = function (cell, cellStartPos, cellEndPos, rowIndex) {\n    var adjCells = [];\n    var columnLength = cell.ownerTable.tableHolder.columns.length;\n    var adjRow = cell.ownerTable.childWidgets[rowIndex];\n    if (isNullOrUndefined(adjRow)) {\n      return adjCells;\n    }\n    var prevCellEndPos = 0;\n    var prevCellEndIndex = 0;\n    var colSpan = cell.cellFormat.columnSpan;\n    var columnIndex = cell.columnIndex;\n    if (adjRow.rowFormat.gridBefore > 0) {\n      if (adjRow.rowFormat.gridBefore > columnIndex + colSpan) {\n        //When previous rows Grid before occupies more than cell width, returns empty collection.\n        return adjCells;\n      }\n      prevCellEndPos = adjRow.rowFormat.beforeWidth;\n      prevCellEndIndex = adjRow.rowFormat.gridBefore;\n    }\n    for (var i = 0; i < adjRow.childWidgets.length; i++) {\n      var adjCell = adjRow.childWidgets[i];\n      var adjCellStartPos = adjCell.x - adjCell.margin.left;\n      var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n      var adjCellEndIndex = adjCell.columnIndex + adjCell.cellFormat.columnSpan;\n      if (i == adjRow.childWidgets.length - 1 || HelperMethods.round(adjCellStartPos, 2) > HelperMethods.round(prevCellEndPos, 2) && HelperMethods.round(adjCellStartPos, 2) > HelperMethods.round(cellStartPos, 2)) {\n        if (i == adjRow.childWidgets.length - 1 && adjRow.rowFormat.gridAfter > 0 && adjCellEndIndex + adjRow.rowFormat.gridAfter === columnLength) {\n          //Only grid after present after this adjacent cell, no need to continue next.\n          return adjCells;\n        }\n        //When there is difference in adjacent cell start position and previous cell end position, there is an vertical merge continued cell.\n        //Iterates with the previous end cell column index till adjacent cell's column index to retrieve the vertical merge start cell in that region.\n        if (this.isIntersecting(cellStartPos, cellEndPos, prevCellEndPos, adjCellStartPos)) {\n          while (colSpan > 0) {\n            var prevRowAdjCell = adjRow.getVerticalMergeStartCell(columnIndex, colSpan);\n            var prevRowAdjCellEndPos = 0;\n            if (!isNullOrUndefined(prevRowAdjCell)) {\n              var adjCellColumnSpan = prevRowAdjCell.cellFormat.columnSpan;\n              adjCells.push(prevRowAdjCell);\n              prevRowAdjCellEndPos = prevRowAdjCell.x + prevRowAdjCell.width + prevRowAdjCell.margin.right;\n              cellStartPos = prevRowAdjCellEndPos;\n              prevCellEndIndex = prevRowAdjCell.columnIndex + adjCellColumnSpan;\n              colSpan -= prevCellEndIndex - columnIndex;\n              columnIndex = prevCellEndIndex;\n              if (HelperMethods.round(prevRowAdjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n                break;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n      }\n      if (this.isIntersecting(cellStartPos, cellEndPos, adjCellStartPos, adjCellEndPos)) {\n        adjCells.push(adjCell);\n        cellStartPos = adjCellEndPos;\n        colSpan -= adjCellEndIndex - columnIndex;\n        columnIndex = adjCellEndIndex;\n      }\n      if (HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n        //Once Adjacent cell end position reaches the current cell end position, no need to iterate next.\n        break;\n      }\n      prevCellEndPos = adjCellEndPos;\n      prevCellEndIndex = adjCellEndIndex;\n    }\n    return adjCells;\n  };\n  Layout.prototype.addTableRowWidget = function (area, row) {\n    var rowWidget = row[row.length - 1];\n    if ((rowWidget.rowFormat.beforeWidth !== 0 || rowWidget.rowFormat.gridBeforeWidth !== 0) && (this.documentHelper.alignTablesRowByRow ? rowWidget.ownerTable.tableFormat.tableAlignment === 'Left' : true)) {\n      rowWidget.x += rowWidget.rowFormat.beforeWidth !== 0 ? rowWidget.rowFormat.beforeWidth : rowWidget.rowFormat.gridBeforeWidth;\n    } else {\n      rowWidget.x = area.x;\n    }\n    rowWidget.y = area.y;\n    rowWidget.width = area.width;\n    var borderWidth = 0;\n    if (!isNullOrUndefined(rowWidget.ownerTable) && !isNullOrUndefined(rowWidget.ownerTable.tableFormat) && rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n      rowWidget.height = rowWidget.height + HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n      //Update the table height with the border width to layout the border when the cell spacing is defined..\n      for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n        if (!isNullOrUndefined(rowWidget.childWidgets[j].cellFormat) && !isNullOrUndefined(rowWidget.childWidgets[j].cellFormat.borders)) {\n          /* eslint-disable-next-line max-len */\n          var width = TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[j]).getLineWidth();\n          if (width > borderWidth) {\n            borderWidth = width;\n          }\n        }\n      }\n      //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n      rowWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n      if (rowWidget.index > 0 && !isNullOrUndefined(rowWidget.previousWidget)) {\n        var prevRow = rowWidget.previousWidget;\n        borderWidth = 0;\n        for (var i = 0; i < prevRow.childWidgets.length; i++) {\n          /* eslint-disable-next-line max-len */\n          if (!isNullOrUndefined(prevRow.childWidgets[i].cellFormat) && !isNullOrUndefined(prevRow.childWidgets[i].cellFormat.borders)) {\n            /* eslint-disable-next-line max-len */\n            var value = TableCellWidget.getCellBottomBorder(prevRow.childWidgets[i]).getLineWidth();\n            if (value > borderWidth) {\n              borderWidth = value;\n            }\n          }\n        }\n        //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n        rowWidget.topBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n      }\n    }\n    if (!isNullOrUndefined(rowWidget.childWidgets)) {\n      for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n        /* eslint-disable-next-line max-len */\n        if (!isNullOrUndefined(rowWidget.childWidgets[i].cellFormat) && !isNullOrUndefined(rowWidget.childWidgets[i].cellFormat.borders)) {\n          /* eslint-disable-next-line max-len */\n          var topBorderWidth = TableCellWidget.getCellTopBorder(rowWidget.childWidgets[i]).getLineWidth();\n          if (topBorderWidth > borderWidth) {\n            borderWidth = topBorderWidth;\n          }\n        }\n      }\n    }\n    //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n    rowWidget.topBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n    //Update the table height of tableWidget when cell spacing has been defined.\n    /* eslint-disable-next-line max-len */\n    if (!isNullOrUndefined(rowWidget.ownerTable) && !isNullOrUndefined(rowWidget.ownerTable.tableFormat) && rowWidget.ownerTable.tableFormat.cellSpacing <= 0 && rowWidget.rowIndex === rowWidget.ownerTable.childWidgets.length - 1) {\n      // Update the bottom width for last row .\n      for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n        /* eslint-disable-next-line max-len */\n        if (!isNullOrUndefined(rowWidget.childWidgets[i].cellFormat) && !isNullOrUndefined(rowWidget.childWidgets[i].cellFormat.borders)) {\n          /* eslint-disable-next-line max-len */\n          var bottomBorderWidth = TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[i]).getLineWidth();\n          if (bottomBorderWidth > borderWidth) {\n            borderWidth = bottomBorderWidth;\n          }\n        }\n      }\n      //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n      rowWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n    }\n    //tableRowWidget.ownerWidget = owner;\n    return rowWidget;\n  };\n  Layout.prototype.getMaxTopCellMargin = function (row) {\n    if (isNullOrUndefined(row.childWidgets)) {\n      return 0;\n    }\n    var value = 0;\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      var topMargin = 0;\n      if (cell.cellFormat.hasValue('topMargin')) {\n        topMargin = HelperMethods.convertPointToPixel(cell.cellFormat.topMargin);\n      } else if (row.rowFormat.hasValue('topMargin')) {\n        topMargin = HelperMethods.convertPointToPixel(row.rowFormat.topMargin);\n      } else {\n        topMargin = HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.topMargin);\n      }\n      if (topMargin > value) {\n        value = topMargin;\n      }\n    }\n    return value;\n  };\n  Layout.prototype.getMaxBottomCellMargin = function (row) {\n    if (isNullOrUndefined(row.childWidgets)) {\n      return 0;\n    }\n    var value = 0;\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      var bottomMargin = 0;\n      if (cell.cellFormat.hasValue('bottomMargin')) {\n        bottomMargin = HelperMethods.convertPointToPixel(cell.cellFormat.bottomMargin);\n      } else if (row.rowFormat.hasValue('bottomMargin')) {\n        bottomMargin = HelperMethods.convertPointToPixel(row.rowFormat.bottomMargin);\n      } else {\n        bottomMargin = HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.bottomMargin);\n      }\n      if (bottomMargin > value) {\n        value = bottomMargin;\n      }\n    }\n    return value;\n  };\n  //#endregion Row\n  //#region cell\n  Layout.prototype.layoutCell = function (cell, maxCellMarginTop, maxCellMarginBottom) {\n    var viewer = this.viewer;\n    this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n    this.updateTopBorders(cell);\n    viewer.updateClientAreaForCell(cell, true);\n    if (cell.childWidgets.length === 0) {\n      var paragraphWidget = new ParagraphWidget();\n      paragraphWidget.characterFormat = new WCharacterFormat();\n      paragraphWidget.paragraphFormat = new WParagraphFormat();\n      paragraphWidget.index = 0;\n      var lineWidget = new LineWidget(paragraphWidget);\n      paragraphWidget.childWidgets.push(lineWidget);\n      cell.childWidgets.push(paragraphWidget);\n      paragraphWidget.paragraphFormat.borders = new WBorders();\n    }\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      var block = cell.childWidgets[i];\n      viewer.updateClientAreaForBlock(block, true);\n      block.containerWidget = cell;\n      this.layoutBlock(block, 0);\n      viewer.updateClientAreaForBlock(block, false);\n    }\n    this.updateWidgetToRow(cell);\n    viewer.updateClientAreaForCell(cell, false);\n  };\n  Layout.prototype.isInsertTable = function () {\n    if (this.documentHelper.owner.editorHistoryModule && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'InsertTable') return true;else return false;\n  };\n  Layout.prototype.updateTopBorders = function (cell) {\n    cell.updatedTopBorders = [];\n    if (cell.ownerTable.tableFormat.cellSpacing === 0) {\n      var cellTopBorder = cell.cellFormat.borders.top;\n      if (!cellTopBorder.isBorderDefined || cellTopBorder.isBorderDefined && cellTopBorder.lineStyle === 'None' && cellTopBorder.lineWidth === 0 && cellTopBorder.hasValue('color')) {\n        cellTopBorder = cell.ownerRow.rowFormat.borders.horizontal;\n      }\n      if (!cellTopBorder.isBorderDefined) {\n        cellTopBorder = cell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n      }\n      var cellStartPos = cell.x - cell.margin.left;\n      var cellEndPos = cell.x + cell.width + cell.margin.right;\n      var adjCells = this.getAdjacentRowCell(cell, cellStartPos, cellEndPos, cell.ownerRow.indexInOwner - 1);\n      for (var j = 0; j < adjCells.length; j++) {\n        var adjCell = adjCells[j];\n        var prevCellBottomBorder = adjCell.cellFormat.borders.bottom;\n        if (!prevCellBottomBorder.isBorderDefined || prevCellBottomBorder.isBorderDefined && prevCellBottomBorder.lineStyle === 'None' && prevCellBottomBorder.lineWidth === 0 && prevCellBottomBorder.hasValue('color')) {\n          prevCellBottomBorder = adjCell.ownerRow.rowFormat.borders.horizontal;\n        }\n        if (!prevCellBottomBorder.isBorderDefined) {\n          prevCellBottomBorder = adjCell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n        }\n        var border = void 0;\n        if (cellTopBorder.lineStyle === 'None' || cellTopBorder.lineStyle === 'Cleared') {\n          border = prevCellBottomBorder;\n        } else if (prevCellBottomBorder.lineStyle === 'Cleared' || prevCellBottomBorder.lineStyle === 'None') {\n          border = cellTopBorder;\n        } else {\n          border = cell.getBorderBasedOnPriority(cellTopBorder, prevCellBottomBorder);\n        }\n        var adjCellStartPos = adjCell.x - adjCell.margin.left;\n        var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n        if (j === 0 && cellStartPos < adjCellStartPos) {\n          cell.updatedTopBorders.push({\n            border: cellTopBorder,\n            width: adjCellStartPos - cellStartPos\n          });\n        }\n        if (border) {\n          var width = 0;\n          /* eslint-disable-next-line max-len */\n          if (HelperMethods.round(adjCellEndPos, 2) === HelperMethods.round(cellEndPos, 2) && HelperMethods.round(adjCellStartPos, 2) === HelperMethods.round(cellStartPos, 2)) {\n            width = cellEndPos - cellStartPos;\n            /* eslint-disable-next-line max-len */\n          } else if (HelperMethods.round(adjCellStartPos, 2) >= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n            width = cellEndPos - adjCellStartPos;\n            /* eslint-disable-next-line max-len */\n          } else if (HelperMethods.round(adjCellStartPos, 2) >= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) <= HelperMethods.round(cellEndPos, 2)) {\n            width = adjCellEndPos - adjCellStartPos;\n            /* eslint-disable-next-line max-len */\n          } else if (HelperMethods.round(adjCellStartPos, 2) <= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) <= HelperMethods.round(cellEndPos, 2)) {\n            width = adjCellEndPos - cellStartPos;\n            /* eslint-disable-next-line max-len */\n          } else if (HelperMethods.round(adjCellStartPos, 2) <= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n            width = cellEndPos - cellStartPos;\n          } else {\n            width = cellEndPos - cellStartPos;\n          }\n          if (width < 0) {\n            width = 0;\n          }\n          cell.updatedTopBorders.push({\n            border: border,\n            width: width\n          });\n        }\n        if (j === adjCells.length - 1 && cellEndPos > adjCellEndPos) {\n          cell.updatedTopBorders.push({\n            border: cellTopBorder,\n            width: cellEndPos - adjCellEndPos\n          });\n        }\n      }\n    }\n  };\n  //endregion cell\n  //#region Shifting\n  Layout.prototype.shiftLayoutedItems = function (reLayout, isMultiColumnShift) {\n    if (isNullOrUndefined(this.documentHelper.blockToShift) || isNullOrUndefined(this.documentHelper.blockToShift.containerWidget)) {\n      this.documentHelper.blockToShift = undefined;\n      this.checkAndShiftEndnote();\n      this.documentHelper.removeEmptyPages();\n      return;\n    }\n    var block = this.documentHelper.blockToShift;\n    var isColumnBreak = this.getColumnBreak(block.bodyWidget);\n    if (!isColumnBreak && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block === block.bodyWidget.firstChild && !isNullOrUndefined(block.bodyWidget.previousRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.previousRenderedWidget.sectionIndex && block.bodyWidget.previousRenderedWidget.sectionFormat.columns.length > 1) {\n      var previousBodyWidget = block.bodyWidget.previousRenderedWidget;\n      var lastbody = this.getBodyWidget(previousBodyWidget, false);\n      if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page) {\n        this.splitBodyWidgetBasedOnColumn(previousBodyWidget);\n      }\n    }\n    var isFirstBlock = false;\n    var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n    var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n    if ((!isColumnBreak || reLayout && this.isSectionEndsWithColumnBreak(block.bodyWidget)) && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n      // let lastbody: BodyWidget = this.getBodyWidget(block.bodyWidget, false);\n      // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(block.bodyWidget.firstChild === block && isNullOrUndefined(block.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (block.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n      if (block.bodyWidget.columnIndex === 0 && block === block.bodyWidget.firstChild && !isNullOrUndefined(block.previousRenderedWidget) && block.bodyWidget.page === block.previousRenderedWidget.bodyWidget.page) {\n        block.bodyWidget.y = this.viewer.clientActiveArea.y;\n      }\n      isFirstBlock = block === block.bodyWidget.firstChild;\n      this.reLayoutMultiColumn(block.bodyWidget, isFirstBlock, block.index);\n      if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n        return;\n      }\n      block = this.documentHelper.blockToShift;\n      // }\n    }\n    var sectionIndex = block.bodyWidget.index;\n    this.reLayoutOrShiftWidgets(block, this.viewer);\n    var updateNextBlockList = true;\n    // If flow layout, then all sections are in single page. Hence need to update till last block of last section.\n    // Todo: For page layout and section break continuous, need to handle the same.\n    var splittedWidget = block.getSplitWidgets();\n    var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n    while (nextBlock instanceof BlockWidget && (nextBlock.bodyWidget.index === sectionIndex || nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight)) {\n      if (isMultiColumnShift && nextBlock.bodyWidget.sectionFormat.columns.length === 0) {\n        return;\n      }\n      isColumnBreak = this.getColumnBreak(nextBlock.bodyWidget);\n      if ((!isColumnBreak || reLayout && this.isSectionEndsWithColumnBreak(nextBlock.bodyWidget)) && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && nextBlock.bodyWidget.sectionFormat.columns.length > 1) {\n        // let lastbody: BodyWidget = this.getBodyWidget(nextBlock.bodyWidget, false);\n        // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(nextBlock.bodyWidget.firstChild === nextBlock && isNullOrUndefined(nextBlock.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (nextBlock.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n        if (nextBlock.bodyWidget.columnIndex === 0 && nextBlock === nextBlock.bodyWidget.firstChild && !isNullOrUndefined(nextBlock.previousRenderedWidget) && nextBlock.bodyWidget.page === nextBlock.previousRenderedWidget.bodyWidget.page) {\n          nextBlock.bodyWidget.y = this.viewer.clientActiveArea.y;\n        }\n        isFirstBlock = nextBlock === nextBlock.bodyWidget.firstChild;\n        this.reLayoutMultiColumn(nextBlock.bodyWidget, isFirstBlock, nextBlock.index);\n        if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n          return;\n        }\n        nextBlock = this.documentHelper.blockToShift;\n        // }\n      }\n      var currentWidget = undefined;\n      var blocks = block.getSplitWidgets();\n      currentWidget = blocks[blocks.length - 1];\n      block = nextBlock;\n      updateNextBlockList = false;\n      var nextWidget = undefined;\n      blocks = block.getSplitWidgets();\n      if (block instanceof ParagraphWidget) {\n        nextWidget = blocks[0];\n      } else {\n        if (block instanceof TableWidget) {\n          nextWidget = blocks[0];\n        }\n      }\n      if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved && currentWidget.containerWidget === nextWidget.containerWidget && HelperMethods.round(nextWidget.y, 2) === HelperMethods.round(this.viewer.clientActiveArea.y, 2) && isNullOrUndefined(nextWidget.nextWidget)) {\n        break;\n      }\n      if (!isNullOrUndefined(currentWidget.floatingElements)) {\n        //this.shiftLayoutFloatingItems(currentWidget as ParagraphWidget);\n      }\n      updateNextBlockList = true;\n      // Here, we have added this condition to skip the non-layouted blocks during relayouting.\n      if (!block.isFieldCodeBlock) {\n        this.reLayoutOrShiftWidgets(block, this.viewer);\n      }\n      if (this.keepWithNext) {\n        block = this.documentHelper.blockToShift;\n        this.keepWithNext = false;\n      }\n      if (!this.isMultiColumnSplit && isColumnBreak && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block.bodyWidget.nextWidget && block.nextRenderedWidget && block.bodyWidget.index !== block.nextRenderedWidget.bodyWidget.index) {\n        var clientY = this.viewer.clientActiveArea.y;\n        var clientHeight = this.viewer.clientActiveArea.height;\n        this.viewer.updateClientArea(block.bodyWidget.nextWidget, block.bodyWidget.nextWidget.page);\n        this.viewer.clientActiveArea.height = clientHeight;\n        this.viewer.clientActiveArea.y = clientY;\n      }\n      if (this.isMultiColumnSplit && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block === block.bodyWidget.lastChild && !isNullOrUndefined(block.bodyWidget.nextRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.nextRenderedWidget.sectionIndex && block.bodyWidget.page === block.bodyWidget.nextRenderedWidget.page) {\n        return;\n      }\n      splittedWidget = block.getSplitWidgets();\n      nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n    }\n    if (this.viewer.owner.editorModule) {\n      this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n    }\n    this.documentHelper.blockToShift = undefined;\n    var viewer = this.viewer;\n    if (viewer.owner.editorModule.isFootnoteElementRemoved) {\n      var lastPage_1 = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n      var lastChild = lastPage_1.bodyWidgets[lastPage_1.bodyWidgets.length - 1];\n      var endNote = lastPage_1.endnoteWidget;\n      if (!isNullOrUndefined(endNote)) {\n        var clientArea = this.viewer.clientArea.clone();\n        var clientActiveArea = this.viewer.clientActiveArea.clone();\n        var lastPageLastPara = lastChild.childWidgets[lastChild.childWidgets.length - 1];\n        var y = lastPageLastPara.y + lastPageLastPara.height;\n        this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n        this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n        this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n        this.viewer.clientActiveArea.y = y;\n        this.layoutfootNote(endNote);\n        this.viewer.clientArea = clientArea;\n        this.viewer.clientActiveArea = clientActiveArea;\n      }\n    }\n    // if (viewer instanceof PageLayoutViewer) {\n    this.documentHelper.removeEmptyPages();\n    this.updateFieldElements(reLayout);\n    var firstPage = this.documentHelper.pages[0];\n    if (firstPage.bodyWidgets[0].sectionIndex > 0) {\n      var page = firstPage;\n      do {\n        this.documentHelper.layout.layoutHeaderFooter(page.bodyWidgets[0], this.viewer, page);\n        page = page.nextPage;\n      } while (page);\n      while (firstPage.bodyWidgets[0].sectionIndex > 0) {\n        this.documentHelper.owner.editorModule.updateSectionIndex(undefined, firstPage.bodyWidgets[0], false);\n      }\n    }\n    if ((!this.documentHelper.owner.enableLockAndEdit || !reLayout) && !this.isMultiColumnSplit) {\n      viewer.updateScrollBars();\n    }\n    if (!(block.bodyWidget instanceof FootNoteWidget) && !this.isRelayoutFootnote && block.bodyWidget.page.endnoteWidget) {\n      this.layoutfootNote(block.bodyWidget.page.endnoteWidget);\n    }\n    // }\n  };\n  Layout.prototype.isSectionEndsWithColumnBreak = function (section) {\n    if (!isNullOrUndefined(section) && section.childWidgets.length > 0 && section.lastChild instanceof ParagraphWidget) {\n      var paragraph = section.lastChild;\n      return paragraph.isEndsWithColumnBreak;\n    }\n    return false;\n  };\n  Layout.prototype.checkAndShiftEndnote = function () {\n    if (this.documentHelper.owner.selectionModule) {\n      var endBlock = this.documentHelper.owner.selectionModule.end.paragraph;\n      if (endBlock.isInsideTable) {\n        endBlock = this.getParentTable(endBlock);\n      }\n      if (!endBlock.isInHeaderFooter && !(endBlock.bodyWidget.containerWidget instanceof FootNoteWidget) && isNullOrUndefined(endBlock.nextRenderedWidget)) {\n        if (!(endBlock.bodyWidget instanceof FootNoteWidget) && !this.isRelayoutFootnote && endBlock.bodyWidget.page.endnoteWidget) {\n          this.layoutfootNote(endBlock.bodyWidget.page.endnoteWidget);\n        }\n      }\n    }\n  };\n  Layout.prototype.updateFieldElements = function (reLayout) {\n    for (var i = 0; i < this.documentHelper.fields.length; i++) {\n      var fieldBegin = this.documentHelper.fields[i];\n      if (this.viewer instanceof PageLayoutViewer || this.viewer instanceof WebLayoutViewer && !(fieldBegin.line.paragraph.bodyWidget instanceof HeaderFooterWidget)) {\n        if (!isNullOrUndefined(this.documentHelper.selection)) {\n          var fieldCode = this.documentHelper.selection.getFieldCode(fieldBegin);\n          var regex = /^(?!.*\\bhyperlink\\b).*\\bpage\\b.*$/;\n          if (!isNullOrUndefined(fieldCode) && (fieldCode.toLowerCase().match('numpages') || fieldCode.toLowerCase().match('sectionpages') || regex.test(fieldCode.toLowerCase()) && reLayout) && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            var textElement = fieldBegin.fieldSeparator.nextNode;\n            if (!isNullOrUndefined(textElement)) {\n              var prevPageNum = textElement.text;\n              var paragraph = fieldBegin.line.paragraph;\n              if (!isNullOrUndefined(paragraph.containerWidget) && !(paragraph.containerWidget instanceof HeaderFooterWidget) && paragraph.containerWidget.indexInOwner === -1) {\n                continue;\n              }\n              if (!isNullOrUndefined(paragraph.bodyWidget) && !isNullOrUndefined(paragraph.bodyWidget.page) && paragraph.bodyWidget.page.index !== -1) {\n                if (regex.test(fieldCode.toLowerCase())) {\n                  var index = paragraph.bodyWidget.page.index + 1;\n                  textElement.text = index.toString();\n                } else {\n                  textElement.text = this.documentHelper.pages.length.toString();\n                }\n                if (prevPageNum !== textElement.text) {\n                  var lineIndex = paragraph.childWidgets.indexOf(fieldBegin.line);\n                  var elementIndex = fieldBegin.line.children.indexOf(textElement);\n                  if (paragraph.isInsideTable) {\n                    this.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                  } else {\n                    this.reLayoutLine(paragraph, lineIndex, false, false, true);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  Layout.prototype.reLayoutOrShiftWidgets = function (blockAdv, viewer) {\n    var block = blockAdv;\n    var isRealyoutList = false;\n    // if (block instanceof ParagraphWidget) {\n    //     reLayoutItems = viewer.renderedElements.get(block as ParagraphWidget).length === 0;\n    // } else {\n    //     reLayoutItems = viewer.renderedElements.get(block as TableWidget).length === 0;\n    // }\n    if (this.isNeedToRelayout(blockAdv.bodyWidget)) {\n      if (!this.isMultiColumnSplit) {\n        this.updateContainerForTable(block, viewer);\n      }\n      //Handle layouting the block.\n      if (block instanceof TableWidget) {\n        block = block.combineWidget(this.viewer);\n        this.clearTableWidget(block, true, true, true);\n      }\n      viewer.updateClientAreaForBlock(block, true);\n      this.isRelayout = true;\n      this.layoutBlock(block, 0);\n      this.isRelayout = false;\n      viewer.updateClientAreaForBlock(block, false);\n      isRealyoutList = true;\n    } else {\n      //Handled to check client area and shift layouted widget.\n      this.shiftWidgetsBlock(block, viewer);\n    }\n    var index = this.documentHelper.pages.indexOf(block.bodyWidget.page);\n    if (index > 0 && block === block.bodyWidget.childWidgets[0] && block instanceof ParagraphWidget) {\n      var val = block.bodyWidget.childWidgets[0].childWidgets[0].children;\n      for (var i = 0; i < val.length; i++) {\n        var element = val[i];\n        if (element.margin.top > 0 && element.margin.top === this.getBeforeSpacing(element.paragraph)) {\n          element.margin.top -= this.getBeforeSpacing(element.paragraph);\n        }\n      }\n    }\n    //Updates the list value of the rendered paragraph.\n    if (this.viewer.owner.editorModule && !isRealyoutList) {\n      this.viewer.owner.editorModule.updateRenderedListItems(block);\n    }\n    if (!this.isRelayoutFootnote && block.bodyWidget.page.footnoteWidget) {\n      this.layoutfootNote(block.bodyWidget.page.footnoteWidget);\n    }\n    // }\n  };\n  Layout.prototype.isNeedToRelayout = function (bodyWidget) {\n    for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n      var floatElement = bodyWidget.floatingElements[i];\n      if (floatElement instanceof TableWidget || floatElement instanceof ShapeBase && (floatElement.textWrappingStyle === 'Square' || floatElement.textWrappingStyle === 'TopAndBottom')) {\n        return true;\n      }\n    }\n    return false;\n  };\n  Layout.prototype.shiftWidgetsBlock = function (block, viewer) {\n    if (block instanceof ParagraphWidget) {\n      this.shiftWidgetsForPara(block, viewer);\n    } else if (block instanceof TableWidget) {\n      this.shiftWidgetsForTable(block, viewer);\n    }\n  };\n  Layout.prototype.shiftWidgetsForPara = function (paragraph, viewer) {\n    if (paragraph.height > viewer.clientArea.height + viewer.clientArea.y && !this.documentHelper.owner.enableHeaderAndFooter) {\n      return;\n    }\n    var bodywid = paragraph.bodyWidget;\n    var prevBodyObj = this.getBodyWidgetOfPreviousBlock(paragraph, 0);\n    var prevBodyWidget = prevBodyObj.bodyWidget;\n    var index = prevBodyObj.index;\n    var prevWidget = undefined;\n    var skipFootNoteHeight = false;\n    var isSkip = true;\n    for (var i = 0; i < paragraph.getSplitWidgets().length; i++) {\n      var widget = paragraph.getSplitWidgets()[i];\n      var firstBody = this.getBodyWidget(widget.bodyWidget, true);\n      if (this.isMultiColumnSplit && widget !== paragraph) {\n        continue;\n      }\n      if (isSkip && !isNullOrUndefined(prevWidget)) {\n        var isPageBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithPageBreak : false;\n        var isColumnBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithColumnBreak : false;\n        this.shiftToPreviousWidget(widget, viewer, prevWidget, isPageBreak, isColumnBreak);\n        this.updateFloatingElementPosition(prevWidget);\n        if ((isNullOrUndefined(widget.childWidgets) || widget.childWidgets.length === 0) && !isPageBreak && !isColumnBreak) {\n          i--;\n          continue;\n        }\n        if (prevBodyWidget !== widget.containerWidget) {\n          prevBodyWidget = widget.containerWidget;\n          if (isPageBreak && prevWidget !== widget.previousSplitWidget) {\n            viewer.updateClientAreaByWidget(widget);\n          }\n        }\n        prevWidget = undefined;\n      }\n      var footWidget = [];\n      if (!skipFootNoteHeight) {\n        footWidget = this.getFootNoteWidgetsOf(widget);\n      }\n      skipFootNoteHeight = false;\n      //let isContainsFootnote: boolean = false;\n      if (this.isFitInClientArea(widget, viewer, footWidget) || this.isMultiColumnSplit) {\n        if (this.keepWithNext) {\n          this.updateClientPositionForBlock(widget.containerWidget.firstChild, widget);\n          this.keepWithNext = false;\n        }\n        //Check whether this widget is moved to previous container widget.\n        prevWidget = widget;\n        viewer.updateClientAreaForBlock(widget, true, undefined, false, true);\n        if (widget.isEmpty() && !isNullOrUndefined(widget.paragraphFormat) && (widget.paragraphFormat.textAlignment === 'Center' || widget.paragraphFormat.textAlignment === 'Right' || widget.paragraphFormat.textAlignment === 'Justify' && widget.paragraphFormat.bidi) && widget.paragraphFormat.listFormat.listId === -1) {\n          this.updateXPositionForEmptyParagraph(viewer.clientActiveArea, widget);\n        } else {\n          widget.x = viewer.clientActiveArea.x;\n        }\n        viewer.updateClientAreaForBlock(widget, false);\n        widget.y = viewer.clientActiveArea.y;\n        this.updateFloatingElementPosition(widget);\n        viewer.cutFromTop(viewer.clientActiveArea.y + widget.height);\n        //Moves the paragraph widget to previous body widget.\n        if (!isNullOrUndefined(prevBodyWidget) && prevBodyWidget !== widget.containerWidget && !this.isMultiColumnSplit) {\n          index++;\n          if (!prevBodyWidget.lastChild.isEndsWithPageBreak && !prevBodyWidget.lastChild.isEndsWithColumnBreak) {\n            this.updateContainerWidget(widget, prevBodyWidget, index, true, footWidget);\n          }\n          if (footWidget.length > 0) {\n            if (prevBodyWidget.page.footnoteWidget) {\n              for (var k = 0; k < footWidget.length; k++) {\n                if (prevBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footWidget[k]) === -1 && widget.bodyWidget.page.index != footWidget[k].page.index) {\n                  prevBodyWidget.page.footnoteWidget.bodyWidgets.push(footWidget[k]);\n                  prevBodyWidget.page.footnoteWidget.height += footWidget[k].height;\n                }\n              }\n            }\n          }\n        } else if (widget.containerWidget instanceof BodyWidget && widget.containerWidget.firstChild === widget && widget.previousRenderedWidget && widget.previousRenderedWidget instanceof ParagraphWidget && widget.previousRenderedWidget.containerWidget.sectionFormat.breakCode == 'NoBreak' && widget.containerWidget.page.index !== widget.previousRenderedWidget.containerWidget.page.index && widget.containerWidget.index !== widget.previousRenderedWidget.containerWidget.index) {\n          var bodyWidget = widget.previousRenderedWidget.bodyWidget;\n          var breakCode = bodyWidget.sectionFormat.breakCode;\n          if (bodyWidget.sectionFormat.columns.length > 1) {\n            bodyWidget = this.getBodyWidget(bodyWidget, true);\n          }\n          if (!isNullOrUndefined(bodyWidget.previousRenderedWidget) && bodyWidget.sectionFormat.breakCode === 'NoBreak' && bodyWidget.previousRenderedWidget.sectionFormat.breakCode == 'NewPage' && bodyWidget.page.index === bodyWidget.previousRenderedWidget.page.index) {\n            breakCode = bodyWidget.previousRenderedWidget.sectionFormat.breakCode;\n          }\n          var bottom = HelperMethods.round(this.getNextWidgetHeight(bodyWidget) + widget.height, 2);\n          // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n          if (!widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithPageBreak && !widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithColumnBreak && bottom <= HelperMethods.round(this.viewer.clientActiveArea.bottom, 2) && breakCode === 'NoBreak') {\n            var page = widget.previousRenderedWidget.bodyWidget.page;\n            var nextPage = widget.containerWidget.page;\n            for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n              var nextBodyWidget = nextPage.bodyWidgets[j];\n              nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n              page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n              nextBodyWidget.page = page;\n              j--;\n            }\n            widget.containerWidget.y = this.viewer.clientActiveArea.y;\n            this.documentHelper.removeEmptyPages();\n          }\n        }\n        if (!this.isInitialLoad && isSkip && widget.bodyWidget.sectionFormat.columns.length > 1 && widget === widget.bodyWidget.firstChild && !isNullOrUndefined(firstBody.previousWidget) && firstBody.page === firstBody.previousWidget.page) {\n          this.viewer.updateClientArea(widget.bodyWidget, widget.bodyWidget.page);\n          firstBody = this.getBodyWidget(firstBody.previousWidget, true);\n          var height = this.getNextWidgetHeight(firstBody);\n          widget.bodyWidget.y = height;\n          this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n          this.viewer.clientActiveArea.y = height;\n          isSkip = false;\n          i--;\n        }\n        if ((widget.isEndsWithPageBreak && !this.isPageBreakInsideField(widget) || widget.isEndsWithColumnBreak) && this.viewer instanceof PageLayoutViewer) {\n          var nextBodyWidget = this.createOrGetNextBodyWidget(prevBodyWidget, this.viewer);\n          nextBodyWidget = this.moveBlocksToNextPage(widget, true);\n          viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n        }\n      } else {\n        var previousBlock = widget.previousRenderedWidget;\n        var isPageBreak = false;\n        var isColumnBreak = false;\n        if (previousBlock instanceof ParagraphWidget && previousBlock.isEndsWithPageBreak && this.viewer instanceof PageLayoutViewer) {\n          isPageBreak = true;\n        }\n        if (previousBlock instanceof ParagraphWidget && previousBlock.isEndsWithColumnBreak && this.viewer instanceof PageLayoutViewer) {\n          isColumnBreak = true;\n        }\n        var isSplittedToNewPage = this.splitWidget(widget, viewer, prevBodyWidget, index + 1, isPageBreak, footWidget, isColumnBreak);\n        this.updateFloatingElementPosition(widget);\n        prevWidget = undefined;\n        if (prevBodyWidget !== widget.containerWidget) {\n          prevBodyWidget = widget.containerWidget;\n          i--;\n          //Paragraph moved to next page and client area get updated with footnote widget height.\n          //So, skip considering footnote height.\n          if (footWidget.length > 0) {\n            skipFootNoteHeight = true;\n          }\n        }\n        index = prevBodyWidget.childWidgets.indexOf(widget);\n        if (isSplittedToNewPage) {\n          prevBodyWidget = paragraph.getSplitWidgets()[i + 1].containerWidget;\n        }\n      }\n    }\n    this.skipUpdateContainerWidget = false;\n  };\n  Layout.prototype.updateFloatingElementPosition = function (widget) {\n    if (widget.floatingElements.length > 0) {\n      for (var k = 0; k < widget.floatingElements.length; k++) {\n        var shape = widget.floatingElements[k];\n        var topMargin = 0;\n        if (shape instanceof ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n          var lineIndex = shape.line.indexInOwner;\n          var lineHeight = 0;\n          topMargin = HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n          for (var k_1 = 0; k_1 < lineIndex; k_1++) {\n            if (!isNullOrUndefined(widget.childWidgets[k_1])) {\n              lineHeight += widget.childWidgets[k_1].height;\n            }\n          }\n          shape.y = widget.y + lineHeight;\n        } else {\n          var position = this.getFloatingItemPoints(shape);\n          shape.y = position.y;\n          shape.x = position.x;\n        }\n        if (shape instanceof ShapeElementBox) {\n          this.updateChildLocationForCellOrShape(shape.y + topMargin, shape, undefined, false, true);\n        }\n      }\n    }\n  };\n  Layout.prototype.isPageBreakInsideField = function (widget) {\n    var isPageBreakInsideField = false;\n    var isFieldElement = false;\n    var height = 0;\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      var line = widget.childWidgets[i];\n      height += line.height;\n      for (var j = 0; j < line.children.length; j++) {\n        var element = line.children[j];\n        if (element instanceof FieldElementBox) {\n          if (element.fieldType === 0) {\n            isFieldElement = true;\n          } else if (element.fieldType === 2 || element.fieldType === 1) {\n            isFieldElement = false;\n          }\n        }\n        if (!isFieldElement && element.text === '\\f') {\n          isPageBreakInsideField = false;\n        } else {\n          isPageBreakInsideField = true;\n        }\n      }\n    }\n    if (isPageBreakInsideField && widget.height === 0) {\n      this.viewer.cutFromTop(this.viewer.clientActiveArea.y + height);\n    }\n    return isPageBreakInsideField;\n  };\n  /**\n   * @private\n   * Get the footnote of the block widget.\n   *\n   * @param {BlockWidget} widget BlockWidget instance.\n   * @returns\n   */\n  Layout.prototype.getFootNotesOfBlock = function (widget, footnoteElements) {\n    if (isNullOrUndefined(footnoteElements)) {\n      footnoteElements = [];\n    }\n    if (widget.childWidgets.length > 0) {\n      for (var j = 0; j < this.documentHelper.footnoteCollection.length; j++) {\n        if (this.documentHelper.footnoteCollection[j].line.paragraph === widget) {\n          //isContainsFootnote = true;\n          footnoteElements.push(this.documentHelper.footnoteCollection[j]);\n        }\n      }\n    }\n    return footnoteElements;\n  };\n  Layout.prototype.getFootNotesWidgetsInLine = function (line) {\n    var footnoteElements = [];\n    for (var i = 0; i < line.children.length; i++) {\n      var element = line.children[i];\n      if (element instanceof FootnoteElementBox) {\n        footnoteElements.push(element);\n      }\n    }\n    return this.getFootNoteWidgetsBy(line.paragraph, footnoteElements);\n  };\n  Layout.prototype.getFootNoteWidgetsBy = function (widget, footnoteElements) {\n    var footWidgets = [];\n    if (widget.bodyWidget.page.footnoteWidget) {\n      for (var i = 0; i < widget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n        /* eslint-disable-next-line max-len */\n        for (var j = 0; j < footnoteElements.length; j++) {\n          if (widget.bodyWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference === footnoteElements[j]) {\n            footWidgets.push(widget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n          }\n        }\n      }\n    }\n    if (footWidgets.length === 0 && !isNullOrUndefined(widget.previousRenderedWidget) && widget.previousRenderedWidget.bodyWidget.page.footnoteWidget) {\n      for (var i = 0; i < widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n        /* eslint-disable-next-line */\n        for (var j = 0; j < footnoteElements.length; j++) {\n          if (widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference === footnoteElements[j]) {\n            footWidgets.push(widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n          }\n        }\n      }\n    } else if (!isNullOrUndefined(widget.bodyWidget.previousRenderedWidget) && widget.bodyWidget.previousRenderedWidget.page.footnoteWidget) {\n      for (var i = 0; i < widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n        /* eslint-disable-next-line max-len */\n        for (var j = 0; j < footnoteElements.length; j++) {\n          if (widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference === footnoteElements[j]) {\n            footWidgets.push(widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n          }\n        }\n      }\n    } else if (!isNullOrUndefined(widget.bodyWidget.nextRenderedWidget) && widget.bodyWidget.nextRenderedWidget.page.footnoteWidget) {\n      for (var i = 0; i < widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n        /* eslint-disable-next-line max-len */\n        for (var j = 0; j < footnoteElements.length; j++) {\n          if (widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference === footnoteElements[j]) {\n            footWidgets.push(widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n          }\n        }\n      }\n    }\n    return footWidgets;\n  };\n  /**\n   * @param widget\n   * @private\n   */\n  Layout.prototype.getFootNoteWidgetsOf = function (widget, isShifting) {\n    var footnoteWidgets = [];\n    var footnoteElements = [];\n    if (widget instanceof TableWidget) {\n      for (var k_2 = 0; k_2 < widget.childWidgets.length; k_2++) {\n        var row = widget.childWidgets[k_2];\n        for (var i = 0; i < row.childWidgets.length; i++) {\n          var cell = row.childWidgets[i];\n          for (var x = 0; x < cell.childWidgets.length; x++) {\n            var block = cell.childWidgets[x];\n            footnoteElements = this.getFootNotesOfBlock(block, footnoteElements);\n            var blockfootnoteWidgets = this.getFootNoteWidgetsBy(block, footnoteElements);\n            for (var f = 0; f < blockfootnoteWidgets.length; f++) {\n              if (footnoteWidgets.indexOf(blockfootnoteWidgets[f]) === -1) {\n                footnoteWidgets.push(blockfootnoteWidgets[f]);\n              }\n            }\n          }\n        }\n      }\n    } else {\n      footnoteElements = this.getFootNotesOfBlock(widget);\n      if (footnoteElements.length > 0) {\n        footnoteWidgets = this.getFootNoteWidgetsBy(widget, footnoteElements);\n      }\n      if (isShifting && footnoteWidgets.length === 0) {\n        for (var k = 0; k < footnoteElements.length; k++) {\n          footnoteWidgets.push(footnoteElements[k].bodyWidget);\n        }\n      }\n    }\n    return footnoteWidgets;\n  };\n  Layout.prototype.getFootNodeWidgetsToShiftToPage = function (paragraph) {\n    var splittedWidgets = paragraph.getSplitWidgets();\n    var footNoteWidgets = [];\n    var toBodyWidget = paragraph.containerWidget;\n    var fromBodyWidget;\n    for (var i = 0; i < splittedWidgets.length; i++) {\n      var footWidgets = this.getFootNoteWidgetsOf(splittedWidgets[i]);\n      for (var j = 0; j < footWidgets.length; j++) {\n        fromBodyWidget = footWidgets[j].containerWidget;\n        if (toBodyWidget !== fromBodyWidget) {\n          footNoteWidgets.push(footWidgets[j]);\n        }\n      }\n    }\n    return {\n      'footNoteWidgets': footNoteWidgets,\n      'fromBodyWidget': fromBodyWidget,\n      'toBodyWidget': toBodyWidget\n    };\n  };\n  Layout.prototype.shiftTableWidget = function (table, viewer, isClearHeight) {\n    if (isClearHeight === void 0) {\n      isClearHeight = false;\n    }\n    var tables = [table];\n    this.addTableWidget(this.viewer.clientActiveArea, tables);\n    this.viewer.updateClientAreaTopOrLeft(table, true);\n    var clientActiveAreaForTableWrap;\n    var clientAreaForTableWrap;\n    if (table.wrapTextAround) {\n      clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n      clientAreaForTableWrap = this.viewer.clientArea.clone();\n      this.updateClientAreaForWrapTable(tables, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n    }\n    var row = table.childWidgets[0];\n    while (row) {\n      row = this.shiftRowWidget(tables, row, isClearHeight);\n      row = row.nextRow;\n    }\n    this.updateWidgetsToPage(tables, [], table, true);\n    if (table.wrapTextAround && table.bodyWidget) {\n      this.updateClientAreaForWrapTable(tables, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n    }\n    return tables[tables.length - 1];\n  };\n  Layout.prototype.shiftRowWidget = function (tables, row, isClearHeight) {\n    if (isClearHeight === void 0) {\n      isClearHeight = false;\n    }\n    var viewer = this.viewer;\n    if (isClearHeight) {\n      row.height = 0;\n    }\n    var isNestedTable = row.ownerTable.isInsideTable;\n    if (!isNestedTable) {\n      this.updateExistingFootnoteHeight(row);\n    }\n    var rows = [row];\n    this.addTableRowWidget(viewer.clientActiveArea, rows);\n    viewer.updateClientAreaForRow(row, true);\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cell = row.childWidgets[i];\n      if (isClearHeight) {\n        cell.height = 0;\n      }\n      /* eslint-disable-next-line max-len */\n      this.shiftCellWidget(cell, this.getMaxTopCellMargin(row) + row.topBorderWidth, this.getMaxBottomCellMargin(row) + row.bottomBorderWidth, isClearHeight);\n    }\n    viewer.updateClientAreaForRow(row, false);\n    if (!isNestedTable) {\n      var footheight = this.footnoteHeight;\n      this.updateFootnoteToBody(row, this.layoutedFootnoteElement);\n      this.footnoteHeight = footheight;\n    }\n    this.updateWidgetsToTable(tables, rows, row, false);\n    if (!isNestedTable) {\n      this.layoutedFootnoteElement = [];\n    }\n    return rows[rows.length - 1];\n  };\n  Layout.prototype.updateFootnoteToBody = function (row, footnoteElements) {\n    this.layoutFootnoteInSplittedRow(row, this.getFootnoteBody(footnoteElements));\n    if (isNullOrUndefined(row.ownerTable.footnoteElement)) {\n      row.ownerTable.footnoteElement = [];\n    }\n    for (var i = 0; i < footnoteElements.length; i++) {\n      row.ownerTable.footnoteElement.push(footnoteElements[i]);\n    }\n  };\n  Layout.prototype.getFootnoteBody = function (footnoteElements) {\n    var footnoteWidgets = [];\n    for (var i = 0; i < footnoteElements.length; i++) {\n      footnoteWidgets.push(footnoteElements[i].bodyWidget);\n    }\n    return footnoteWidgets;\n  };\n  Layout.prototype.shiftCellWidget = function (cell, maxCellMarginTop, maxCellMarginBottom, isClearHeight) {\n    if (isNullOrUndefined(isClearHeight)) {\n      isClearHeight = false;\n    }\n    var viewer = this.viewer;\n    this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n    var clientHeight = this.viewer.clientActiveArea.height;\n    viewer.updateClientAreaForCell(cell, true);\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      var block = cell.childWidgets[i];\n      viewer.updateClientAreaForBlock(block, true);\n      if (block instanceof ParagraphWidget) {\n        this.shiftParagraphWidget(block);\n      } else {\n        this.shiftTableWidget(block, viewer, isClearHeight);\n      }\n      viewer.updateClientAreaForBlock(block, false);\n    }\n    this.updateWidgetToRow(cell);\n    viewer.updateClientAreaForCell(cell, false);\n    if (!cell.ownerTable.isInsideTable) {\n      this.viewer.clientActiveArea.height = clientHeight;\n    }\n  };\n  Layout.prototype.shiftParagraphWidget = function (paragraph) {\n    this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n    if (paragraph.floatingElements.length > 0) {\n      for (var k = 0; k < paragraph.floatingElements.length; k++) {\n        var shape = paragraph.floatingElements[k];\n        var topMargin = 0;\n        if (shape instanceof ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n          var lineIndex = shape.line.indexInOwner;\n          var lineHeight = 0;\n          topMargin = HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n          for (var k_3 = 0; k_3 < lineIndex; k_3++) {\n            lineHeight += paragraph.childWidgets[k_3].height;\n          }\n          shape.y = paragraph.y + lineHeight;\n        } else {\n          var position = this.getFloatingItemPoints(shape);\n          shape.y = position.y;\n          shape.x = position.x;\n        }\n        if (shape instanceof ShapeElementBox) {\n          this.updateChildLocationForCellOrShape(shape.y + topMargin, shape);\n        }\n      }\n    }\n    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + paragraph.height);\n    var footnoteCollection = this.getFootNoteWidgetsOf(paragraph, true);\n    for (var i = 0; i < footnoteCollection.length; i++) {\n      this.layoutedFootnoteElement.push(footnoteCollection[i].footNoteReference);\n    }\n    this.footnoteHeight += this.getFootNoteHeight(footnoteCollection);\n    this.updateWidgetToPage(this.viewer, paragraph);\n  };\n  Layout.prototype.updateContainerForTable = function (block, viewer) {\n    var prevObj = this.getBodyWidgetOfPreviousBlock(block, 0);\n    var prevBodyWidget = prevObj.bodyWidget;\n    var index = prevObj.index;\n    var isPageBreak = !isNullOrUndefined(prevBodyWidget.lastChild) && !isNullOrUndefined(prevBodyWidget.lastChild.lastChild) ? prevBodyWidget.lastChild.lastChild.isEndsWithPageBreak : false;\n    var isColumnBreak = !isNullOrUndefined(prevBodyWidget.lastChild) && !isNullOrUndefined(prevBodyWidget.lastChild.lastChild) ? prevBodyWidget.lastChild.lastChild.isEndsWithColumnBreak : false;\n    if (prevBodyWidget !== block.containerWidget) {\n      if (!isPageBreak && !isColumnBreak) {\n        this.updateContainerWidget(block, prevBodyWidget, index + 1, true);\n      } else {\n        viewer.updateClientArea(block.bodyWidget, block.bodyWidget.page);\n      }\n    }\n    if (block.isInHeaderFooter || this.viewer instanceof WebLayoutViewer) {\n      block.containerWidget.height -= block.height;\n    }\n  };\n  Layout.prototype.shiftWidgetsForTable = function (table, viewer) {\n    this.updateContainerForTable(table, viewer);\n    this.viewer.updateClientAreaForBlock(table, true, undefined, false, true);\n    var tempClientAreaX = this.viewer.clientArea.x;\n    if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n      this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n    }\n    this.updateVerticalPositionToTop(table, true);\n    //const isPageLayout: boolean = viewer instanceof PageLayoutViewer;\n    var combinedTable = table.combineWidget(this.viewer);\n    this.documentHelper.layout.updateChildLocationForTable(combinedTable.y, combinedTable);\n    this.clearTableWidget(combinedTable, true, false, false, true);\n    this.shiftTableWidget(combinedTable, this.viewer);\n    this.updateVerticalPositionToTop(table, false);\n    if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n      this.viewer.clientArea.x = tempClientAreaX;\n    }\n    this.viewer.updateClientAreaForBlock(table, false);\n  };\n  Layout.prototype.updateVerticalPositionToTop = function (table, isUpdateTop) {\n    //Iterate the tableWidgets counts\n    for (var i = 0; i < table.getSplitWidgets().length; i++) {\n      var tablewidget = table.getSplitWidgets()[i];\n      //Iterate the tableWidget child items\n      for (var j = 0; j < tablewidget.childWidgets.length; j++) {\n        var rowWidget = tablewidget.childWidgets[j];\n        //Iterate the RowWidgets child items\n        for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n          var cellWidget = rowWidget.childWidgets[k];\n          //Iterate the RowWidgets child items\n          this.documentHelper.layout.updateCellVerticalPosition(cellWidget, isUpdateTop, false);\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.splitWidget = function (paragraphWidget, viewer, previousBodyWidget, index, isPageBreak, footWidget, isColumnBreak) {\n    var firstLine = paragraphWidget.childWidgets[0];\n    var keepLinesTogether = paragraphWidget.paragraphFormat.keepLinesTogether && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y;\n    var maxElementHeight = keepLinesTogether ? paragraphWidget.height : this.getMaxElementHeight(firstLine);\n    var paragraphView = paragraphWidget.getSplitWidgets();\n    var nextBodyWidget = paragraphWidget.containerWidget;\n    // Get maximun height based on widow/orphan control.\n    maxElementHeight = this.getMaximumLineHeightToSplit(paragraphWidget, maxElementHeight, viewer);\n    // TODO: Footnote move on move entire paragraph.\n    var footNoteInFirstLine = this.getFootNotesWidgetsInLine(firstLine);\n    if (isNullOrUndefined(paragraphWidget.previousWidget) && footNoteInFirstLine.length > 0) {\n      for (var i = 0; i < footNoteInFirstLine.length; i++) {\n        for (var j = 0; j < footNoteInFirstLine[i].childWidgets.length; j++) {\n          maxElementHeight += footNoteInFirstLine[i].childWidgets[j].height;\n        }\n      }\n      //maxElementHeight += (paragraphWidget.bodyWidget.page.footnoteWidget.childWidgets[0] as ParagraphWidget).height;\n    }\n    if (viewer.clientActiveArea.height >= maxElementHeight && !isPageBreak && !isColumnBreak) {\n      var splittedWidget = undefined;\n      var widgetIndex = paragraphView.indexOf(paragraphWidget);\n      if (widgetIndex < paragraphView.length - 1) {\n        splittedWidget = paragraphView[widgetIndex + 1];\n        nextBodyWidget = splittedWidget.containerWidget;\n      } else {\n        splittedWidget = new ParagraphWidget();\n        splittedWidget.index = paragraphWidget.index;\n        splittedWidget.characterFormat = paragraphWidget.characterFormat;\n        splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n        splittedWidget.width = paragraphWidget.width;\n        splittedWidget.x = paragraphWidget.x;\n        splittedWidget.y = paragraphWidget.y;\n        paragraphView.push(splittedWidget);\n      }\n      if (previousBodyWidget !== paragraphWidget.containerWidget && !this.skipUpdateContainerWidget) {\n        this.updateContainerWidget(paragraphWidget, previousBodyWidget, index, true);\n      }\n      for (var i = paragraphWidget.childWidgets.length - 1; i > 0; i--) {\n        var line = paragraphWidget.childWidgets[i];\n        if (this.isFitInClientArea(paragraphWidget, viewer, undefined)) {\n          if (splittedWidget.childWidgets.length === 1) {\n            this.updateParagraphWidgetInternal(line, splittedWidget, 0);\n            this.skipUpdateContainerWidget = true;\n          }\n          break;\n        } else {\n          var line_1 = paragraphWidget.childWidgets[i];\n          //Moves the line widget to next widget.\n          this.updateParagraphWidgetInternal(line_1, splittedWidget, 0);\n        }\n      }\n      if (isNullOrUndefined(splittedWidget.containerWidget) && splittedWidget.childWidgets.length > 0) {\n        var y = viewer.clientActiveArea.y;\n        // eslint-disable-next-line max-len\n        var clientArea = new Rect(viewer.clientArea.x, viewer.clientArea.y, viewer.clientArea.width, viewer.clientArea.height);\n        // eslint-disable-next-line max-len\n        var activeArea = new Rect(viewer.clientActiveArea.x, viewer.clientActiveArea.y, viewer.clientActiveArea.width, viewer.clientActiveArea.height);\n        var prevPage = paragraphWidget.bodyWidget.page;\n        //Checks whether next node exists, else adds new page.\n        nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, false, -1);\n        splittedWidget.containerWidget = nextBodyWidget;\n        nextBodyWidget.childWidgets.splice(0, 0, splittedWidget);\n        if (prevPage !== nextBodyWidget.page) {\n          nextBodyWidget.height += splittedWidget.height;\n          if (nextBodyWidget != previousBodyWidget) {\n            this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n          }\n          if (nextBodyWidget.childWidgets.length === 1 && nextBodyWidget.firstChild instanceof ParagraphWidget && nextBodyWidget.firstChild.equals(paragraphWidget)) {\n            //paragraphWidget.x = paragraphWidget.x;\n            paragraphWidget.y = y;\n            return true;\n          } else {\n            //Resetting Client area\n            viewer.clientArea = clientArea;\n            viewer.clientActiveArea = activeArea;\n          }\n        } else {\n          if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n            paragraphWidget.x = paragraphWidget.containerWidget.x;\n          }\n          paragraphWidget.y = y;\n          viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n          splittedWidget = this.addParagraphWidget(this.viewer.clientActiveArea, splittedWidget);\n          return true;\n        }\n      }\n    } else {\n      var startBlock = void 0;\n      var keepWithNext = false;\n      var startIndex = 0;\n      viewer.columnLayoutArea.setColumns(previousBodyWidget.sectionFormat);\n      nextBodyWidget = this.createOrGetNextBodyWidget(previousBodyWidget, this.viewer);\n      var blockInfo = this.alignBlockElement(paragraphWidget);\n      if (!this.isInitialLoad && !isNullOrUndefined(blockInfo.node) && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak && isNullOrUndefined(paragraphWidget.previousSplitWidget)) {\n        startBlock = blockInfo.node instanceof TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n        if (startBlock.containerWidget instanceof BodyWidget && startBlock.containerWidget.firstChild !== startBlock) {\n          startIndex = startBlock instanceof TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n          paragraphWidget = startBlock;\n          keepWithNext = true;\n          if (!isNullOrUndefined(paragraphWidget.nextRenderedWidget) && paragraphWidget.nextRenderedWidget instanceof ParagraphWidget) {\n            this.keepWithNext = true;\n            this.documentHelper.blockToShift = paragraphWidget.nextRenderedWidget;\n          }\n        }\n      }\n      if (paragraphWidget.containerWidget !== nextBodyWidget || keepWithNext) {\n        var prevPage = paragraphWidget.bodyWidget.page;\n        nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n        if (previousBodyWidget !== nextBodyWidget) {\n          viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n          if (startIndex > 0 && this.keepWithNext) {\n            this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n            var nextParagraph = void 0;\n            if (paragraphWidget instanceof TableWidget) {\n              this.addTableWidget(this.viewer.clientActiveArea, [paragraphWidget]);\n            } else if (nextBodyWidget.firstChild instanceof ParagraphWidget && nextBodyWidget.firstChild.equals(paragraphWidget)) {\n              nextParagraph = nextBodyWidget.firstChild;\n            } else {\n              nextParagraph = new ParagraphWidget();\n            }\n            nextParagraph = this.moveChildsToParagraph(paragraphWidget, startIndex, nextParagraph);\n            nextParagraph.containerWidget = nextBodyWidget;\n            for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n              var element = nextParagraph.floatingElements[m];\n              if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n                paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n              }\n            }\n            paragraphWidget = nextParagraph;\n            if (nextBodyWidget.childWidgets.indexOf(paragraphWidget) === -1) {\n              nextBodyWidget.childWidgets.splice(0, 0, paragraphWidget);\n            }\n            this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n            this.layoutBlock(paragraphWidget, 0, true);\n            this.viewer.updateClientAreaForBlock(paragraphWidget, false);\n          } else {\n            this.updateContainerWidget(paragraphWidget, nextBodyWidget, 0, true);\n            this.addParagraphWidget(this.viewer.clientActiveArea, paragraphWidget);\n          }\n          this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n        }\n        if (previousBodyWidget.page === nextBodyWidget.page) {\n          if (previousBodyWidget === nextBodyWidget) {\n            viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n            return false;\n          }\n          return true;\n        }\n      }\n    }\n    if (previousBodyWidget === paragraphWidget.containerWidget) {\n      // if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n      //     paragraphWidget.x = paragraphWidget.containerWidget.x;\n      // }\n      paragraphWidget.y = viewer.clientActiveArea.y;\n      viewer.cutFromTop(viewer.clientActiveArea.y + paragraphWidget.height);\n    } else {\n      //Updates client area based on next body widget.\n      viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n    }\n    return false;\n  };\n  Layout.prototype.getMaximumLineHeightToSplit = function (paragraphWidget, maxElementHeight, viewer) {\n    if (viewer.clientActiveArea.height >= maxElementHeight && !paragraphWidget.paragraphFormat.keepLinesTogether && paragraphWidget.paragraphFormat.widowControl && !isNullOrUndefined(paragraphWidget.previousWidget) && isNullOrUndefined(paragraphWidget.previousSplitWidget)) {\n      var paragraphHeight = paragraphWidget.height;\n      for (var m = paragraphWidget.childWidgets.length - 1; m >= 0; m--) {\n        var lastLine = paragraphWidget.childWidgets[m];\n        var lineHeight = this.getMaxElementHeight(lastLine);\n        if (lastLine.height > lineHeight) {\n          paragraphHeight -= lastLine.height - lineHeight;\n        }\n        if (viewer.clientActiveArea.height >= paragraphHeight) {\n          // Move entire paragraph to next page, If first line alone not fitted in the client area.\n          if (m === 0) {\n            maxElementHeight = paragraphWidget.height;\n          }\n          break;\n        }\n        paragraphHeight -= lastLine.height;\n      }\n    }\n    return maxElementHeight;\n  };\n  /**\n   * @private\n   * @param footnoteWidgets\n   * @param fromBodyWidget\n   * @param toBodyWidget\n   */\n  Layout.prototype.moveFootNotesToPage = function (footnoteWidgets, fromBodyWidget, toBodyWidget) {\n    if (footnoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget && fromBodyWidget.page !== toBodyWidget.page) {\n      var footNoteIndex = -1;\n      var footNoteWidget = void 0;\n      var insertIndex = 0;\n      var check = false;\n      for (var k = 0; k < footnoteWidgets.length; k++) {\n        /* eslint-disable-next-line max-len */\n        footNoteWidget = footnoteWidgets[k];\n        footNoteIndex = fromBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget);\n        if (footNoteIndex >= 0) {\n          if (toBodyWidget.page.footnoteWidget === undefined) {\n            this.addEmptyFootNoteToBody(toBodyWidget);\n          }\n          for (var i = 0; i < toBodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n            var body = toBodyWidget.page.footnoteWidget.bodyWidgets[i].footNoteReference;\n            if (body === footNoteWidget.footNoteReference) {\n              check = true;\n            }\n          }\n          fromBodyWidget.page.footnoteWidget.bodyWidgets.splice(footNoteIndex, 1);\n          if (toBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget) < 0 && !check) {\n            var childLength = toBodyWidget.page.footnoteWidget.bodyWidgets.length;\n            var fromPage = this.documentHelper.pages.indexOf(fromBodyWidget.page);\n            var toPage = this.documentHelper.pages.indexOf(toBodyWidget.page);\n            footNoteWidget.containerWidget = toBodyWidget.page.footnoteWidget;\n            footNoteWidget.page = toBodyWidget.page;\n            if (fromPage > toPage) {\n              toBodyWidget.page.footnoteWidget.bodyWidgets.push(footNoteWidget);\n              insertIndex++;\n            } else {\n              toBodyWidget.page.footnoteWidget.bodyWidgets.splice(insertIndex++, 0, footNoteWidget);\n            }\n            toBodyWidget.page.footnoteWidget.height += footNoteWidget.height;\n          }\n          fromBodyWidget.page.footnoteWidget.height -= footNoteWidget.height;\n        }\n      }\n      if (fromBodyWidget.page.footnoteWidget && fromBodyWidget.page.footnoteWidget.bodyWidgets.length === 0) {\n        fromBodyWidget.page.footnoteWidget = undefined;\n      }\n      if (fromBodyWidget.page.footnoteWidget !== undefined) {\n        this.layoutfootNote(fromBodyWidget.page.footnoteWidget);\n      }\n      if (toBodyWidget.page.footnoteWidget !== undefined) {\n        this.layoutfootNote(toBodyWidget.page.footnoteWidget);\n      }\n    }\n  };\n  Layout.prototype.addEmptyFootNoteToBody = function (bodyWidget) {\n    var footnoteWidget = new FootNoteWidget();\n    footnoteWidget.footNoteType = 'Footnote';\n    footnoteWidget.page = bodyWidget.page;\n    var newParagraph = new ParagraphWidget();\n    newParagraph.characterFormat = new WCharacterFormat();\n    newParagraph.paragraphFormat = new WParagraphFormat();\n    newParagraph.index = 0;\n    var lineWidget = new LineWidget(newParagraph);\n    newParagraph.childWidgets.push(lineWidget);\n    //  footnoteWidget.childWidgets.push(newParagraph);\n    footnoteWidget.height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n    footnoteWidget.margin = new Margin(0, footnoteWidget.height, 0, 0);\n    bodyWidget.page.footnoteWidget = footnoteWidget;\n  };\n  Layout.prototype.getMaxElementHeight = function (lineWidget) {\n    var height = 0;\n    /* eslint-disable-next-line max-len */\n    if (lineWidget.children.length === 0 || lineWidget.children.length === 1 && lineWidget.children[0] instanceof ListTextElementBox || lineWidget.children.length === 2 && lineWidget.children[0] instanceof ListTextElementBox && lineWidget.children[1] instanceof ListTextElementBox) {\n      var topMargin = 0;\n      var bottomMargin = 0;\n      height = this.documentHelper.selection.getParagraphMarkSize(lineWidget.paragraph, topMargin, bottomMargin).height;\n      height += topMargin;\n      if (lineWidget.children.length > 0) {\n        var element = lineWidget.children[0];\n        if (height < element.margin.top + element.height) {\n          height = element.margin.top + element.height;\n        }\n      }\n    } else {\n      for (var i = 0; i < lineWidget.children.length; i++) {\n        var element = lineWidget.children[i];\n        if (height < element.margin.top + element.height) {\n          height = element.margin.top + element.height;\n        }\n      }\n    }\n    return height;\n  };\n  Layout.prototype.createOrGetNextBodyWidget = function (bodyWidget, viewer) {\n    viewer.columnLayoutArea.setColumns(bodyWidget.sectionFormat);\n    var nextColumn = viewer.columnLayoutArea.getNextColumnByBodyWidget(bodyWidget);\n    if (!isNullOrUndefined(nextColumn)) {\n      var nextColumnBody = this.createOrGetNextColumnBody(bodyWidget);\n      return nextColumnBody;\n    }\n    var nextBodyWidget = undefined;\n    var pageIndex = 0;\n    pageIndex = this.documentHelper.pages.indexOf(bodyWidget.page);\n    var page = undefined;\n    var index = undefined;\n    index = bodyWidget.index;\n    if (pageIndex === this.documentHelper.pages.length - 1 || this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n      var currentWidget = new BodyWidget();\n      currentWidget.sectionFormat = bodyWidget.sectionFormat;\n      currentWidget.index = bodyWidget.index;\n      page = viewer.createNewPage(currentWidget);\n      if (this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n        this.documentHelper.insertPage(pageIndex + 1, page);\n      }\n      nextBodyWidget = page.bodyWidgets[0];\n    } else {\n      page = this.documentHelper.pages[pageIndex + 1];\n      nextBodyWidget = page.bodyWidgets[0];\n    }\n    return nextBodyWidget;\n  };\n  Layout.prototype.isFitInClientArea = function (paragraphWidget, viewer, blocks) {\n    var lastLine = paragraphWidget.childWidgets[paragraphWidget.childWidgets.length - 1];\n    var height = paragraphWidget.height;\n    var maxElementHeight = this.getMaxElementHeight(lastLine);\n    if (lastLine.height > maxElementHeight) {\n      height -= lastLine.height - maxElementHeight;\n    }\n    var footHeight = 0;\n    if (!isNullOrUndefined(blocks)) {\n      if (blocks.length > 0) {\n        if (blocks[0].containerWidget instanceof FootNoteWidget) {\n          footHeight = blocks[0].containerWidget.margin.top;\n        }\n        for (var k = 0; k < blocks.length; k++) {\n          for (var l = 0; l < blocks[k].childWidgets.length; l++) {\n            footHeight += blocks[k].childWidgets[l].height;\n          }\n        }\n      }\n    }\n    return viewer.clientActiveArea.height >= height + footHeight;\n  };\n  Layout.prototype.isLineInFootNote = function (line, footNotes) {\n    for (var i = 0; i < footNotes.length; i++) {\n      if (footNotes[i].line === line) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /* eslint-disable-next-line max-len */\n  Layout.prototype.shiftToPreviousWidget = function (paragraphWidget, viewer, previousWidget, isPageBreak, isColumnBreak) {\n    var fromBodyWidget = paragraphWidget.containerWidget;\n    var toBodyWidget = previousWidget.containerWidget;\n    var footNotes = [];\n    var footNoteWidgets = [];\n    if (toBodyWidget !== fromBodyWidget) {\n      footNotes = this.getFootNotesOfBlock(paragraphWidget);\n    }\n    for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n      var line = paragraphWidget.childWidgets[i];\n      var maxElementHeight = this.getMaxElementHeight(line);\n      if (this.isLineInFootNote(line, footNotes)) {\n        var footWidget = this.getFootNoteWidgetsBy(line.paragraph, footNotes);\n        var height = 0;\n        for (var m = 0; m < footWidget.length; m++) {\n          var footContent = footWidget[m];\n          for (var n = 0; n < footContent.childWidgets.length; n++) {\n            height += footContent.childWidgets[n].height;\n          }\n        }\n        if (footWidget.length > 0 && footWidget[0].containerWidget) {\n          height += footWidget[0].containerWidget.margin.top;\n        }\n        maxElementHeight += height;\n      }\n      if (viewer.clientActiveArea.height >= maxElementHeight && !isPageBreak && !isColumnBreak) {\n        if (footNotes.length > 0 && this.isLineInFootNote(line, footNotes)) {\n          footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(line.paragraph, footNotes));\n        }\n        //Moves the line widget to previous widget.\n        this.updateParagraphWidgetInternal(line, previousWidget, previousWidget.childWidgets.length);\n        i--;\n        viewer.cutFromTop(viewer.clientActiveArea.y + line.height);\n        if (isNullOrUndefined(paragraphWidget.childWidgets)) {\n          break;\n        }\n      } else {\n        var bodyWidget = previousWidget.containerWidget;\n        viewer.updateClientArea(bodyWidget, bodyWidget.page);\n        var newBodyWidget = this.createOrGetNextBodyWidget(bodyWidget, viewer);\n        if (paragraphWidget.containerWidget !== newBodyWidget) {\n          newBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n        }\n        if (bodyWidget !== newBodyWidget) {\n          footNotes = this.getFootNotesOfBlock(paragraphWidget);\n          if (footNotes.length > 0) {\n            footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(paragraphWidget, footNotes));\n            toBodyWidget = newBodyWidget;\n          }\n          this.updateContainerWidget(paragraphWidget, newBodyWidget, 0, true);\n        }\n        //Updates client area based on next page.\n        viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n        break;\n      }\n    }\n    if (!isNullOrUndefined(footNoteWidgets) && footNoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget && fromBodyWidget != toBodyWidget) {\n      this.moveFootNotesToPage(footNoteWidgets, fromBodyWidget, toBodyWidget);\n    }\n  };\n  Layout.prototype.updateParagraphWidgetInternal = function (lineWidget, newParagraphWidget, index) {\n    if (!isNullOrUndefined(lineWidget.paragraph)) {\n      lineWidget.paragraph.childWidgets.splice(lineWidget.paragraph.childWidgets.indexOf(lineWidget), 1);\n      lineWidget.paragraph.height -= lineWidget.height;\n      if (!isNullOrUndefined(lineWidget.paragraph.containerWidget)) {\n        lineWidget.paragraph.containerWidget.height -= lineWidget.height;\n      }\n      if (isNullOrUndefined(lineWidget.paragraph.childWidgets) || lineWidget.paragraph.childWidgets.length === 0) {\n        lineWidget.paragraph.destroyInternal(this.viewer);\n      }\n    }\n    if (!isNullOrUndefined(lineWidget.paragraph) && lineWidget.paragraph.floatingElements.length > 0) {\n      this.shiftFloatingElements(lineWidget, newParagraphWidget);\n    }\n    newParagraphWidget.childWidgets.splice(index, 0, lineWidget);\n    lineWidget.paragraph = newParagraphWidget;\n    newParagraphWidget.height += lineWidget.height;\n    if (!isNullOrUndefined(newParagraphWidget.containerWidget)) {\n      newParagraphWidget.containerWidget.height += lineWidget.height;\n    }\n  };\n  Layout.prototype.shiftFloatingElements = function (lineWidget, newParagraphWidget) {\n    for (var i = 0; i < lineWidget.children.length; i++) {\n      if (lineWidget.children[i] instanceof ShapeElementBox && lineWidget.children[i].textWrappingStyle === 'Inline') {\n        var index = lineWidget.paragraph.floatingElements.indexOf(lineWidget.children[i]);\n        if (index >= 0) {\n          lineWidget.paragraph.floatingElements.splice(index, 1);\n          newParagraphWidget.floatingElements.splice(index, 0, lineWidget.children[i]);\n        }\n      }\n    }\n  };\n  Layout.prototype.shiftNextWidgets = function (blockAdv) {\n    var block = blockAdv;\n    while (block.nextWidget instanceof BlockWidget) {\n      block = block.nextWidget;\n      if (this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n        var lastbody = this.getBodyWidget(block.bodyWidget, false);\n        if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page) {\n          this.splitBodyWidgetBasedOnColumn(block.bodyWidget);\n          break;\n        }\n      }\n      this.reLayoutOrShiftWidgets(block, this.viewer);\n    }\n  };\n  Layout.prototype.updateContainerWidget = function (widget, bodyWidget, index, destroyAndScroll, footWidget) {\n    if (widget.containerWidget && widget.containerWidget.containerWidget instanceof FootNoteWidget) {\n      return;\n    }\n    var previousWidget = widget.containerWidget;\n    if (!isNullOrUndefined(widget.containerWidget)) {\n      widget.containerWidget.childWidgets.splice(widget.containerWidget.childWidgets.indexOf(widget), 1);\n      widget.containerWidget.height -= bodyWidget.height;\n      if ((isNullOrUndefined(widget.containerWidget.childWidgets) || widget.containerWidget.childWidgets.length === 0) && widget.containerWidget instanceof BodyWidget && widget.containerWidget !== bodyWidget && destroyAndScroll) {\n        var page = widget.containerWidget.page;\n        if (this.documentHelper.pages[this.documentHelper.pages.length - 1] === page && this.viewer.visiblePages.indexOf(page) !== -1) {\n          this.documentHelper.scrollToBottom();\n        }\n        if (isNullOrUndefined(page.nextPage) || page.nextPage.bodyWidgets[0].index !== widget.containerWidget.index) {\n          var section = widget.containerWidget;\n          if (!isNullOrUndefined(section.nextRenderedWidget) && section.nextRenderedWidget.sectionFormat.columns.length > 1) {\n            section.nextRenderedWidget.columnIndex = section.columnIndex;\n          }\n          widget.containerWidget.destroyInternal(this.viewer);\n        }\n      }\n    }\n    bodyWidget.childWidgets.splice(index, 0, widget);\n    if (widget instanceof ParagraphWidget && !isNullOrUndefined(widget.floatingElements)) {\n      for (var i = 0; i < widget.floatingElements.length; i++) {\n        var shape = widget.floatingElements[i];\n        if (shape.textWrappingStyle !== 'Inline') {\n          bodyWidget.floatingElements.push(shape);\n          widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(shape), 1);\n          /* eslint:disable */\n          bodyWidget.floatingElements.sort(function (a, b) {\n            return a.y - b.y;\n          });\n        }\n      }\n    }\n    if (widget instanceof TableWidget && widget.wrapTextAround && widget.bodyWidget.floatingElements.indexOf(widget) !== -1) {\n      widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(widget), 1);\n    }\n    bodyWidget.height += bodyWidget.height;\n    widget.containerWidget = bodyWidget;\n    if (previousWidget && previousWidget.page && previousWidget.page.footnoteWidget && footWidget && footWidget.length > 0) {\n      this.moveFootNotesToPage(footWidget, previousWidget, bodyWidget);\n    }\n  };\n  Layout.prototype.getBodyWidgetOfPreviousBlock = function (block, index) {\n    index = 0;\n    var prevBodyWidget = undefined;\n    var previousBlock = block.previousRenderedWidget;\n    prevBodyWidget = previousBlock && previousBlock.containerWidget.equals(block.containerWidget) ? previousBlock.containerWidget : block instanceof TableWidget && !isNullOrUndefined(block.containerWidget.previousRenderedWidget) && block.containerWidget.index === block.containerWidget.previousRenderedWidget.index ? block.containerWidget.previousRenderedWidget : block.containerWidget;\n    index = previousBlock && previousBlock.containerWidget.equals(block.containerWidget) ? prevBodyWidget.childWidgets.indexOf(previousBlock) : block.containerWidget.childWidgets.indexOf(block);\n    return {\n      bodyWidget: prevBodyWidget,\n      index: index\n    };\n  };\n  Layout.prototype.moveBlocksToNextPage = function (block, moveFootnoteFromLastBlock, childStartIndex, sectionBreakContinuous) {\n    var body = block.bodyWidget;\n    this.viewer.columnLayoutArea.setColumns(body.sectionFormat);\n    var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(block.bodyWidget);\n    var nextPage = undefined;\n    var nextBody = undefined;\n    if (!isNullOrUndefined(nextColumn) && !(block instanceof ParagraphWidget && block.isEndsWithPageBreak)) {\n      nextBody = this.moveToNextColumnByBodyWidget(block, childStartIndex);\n      nextBody.columnIndex = nextColumn.index;\n      nextBody.y = block.bodyWidget.y;\n      this.viewer.updateClientArea(nextBody, nextBody.page);\n      this.viewer.clientActiveArea.height -= nextBody.y - this.viewer.clientActiveArea.y;\n      this.viewer.clientActiveArea.y = nextBody.y;\n      if (block.bodyWidget.sectionFormat.columns.length > 1) {\n        var columnIndex = block.bodyWidget.columnIndex;\n        var columnWidth = block.bodyWidget.x + block.bodyWidget.sectionFormat.columns[columnIndex].width + block.bodyWidget.sectionFormat.columns[columnIndex].space;\n        for (var j = 0; j < block.bodyWidget.floatingElements.length; j++) {\n          if (block.bodyWidget.floatingElements[j] instanceof ShapeElementBox && columnWidth < block.bodyWidget.floatingElements[j].x + block.bodyWidget.floatingElements[j].width) {\n            nextBody.floatingElements.push(block.bodyWidget.floatingElements[j]);\n          }\n        }\n      }\n    }\n    if (isNullOrUndefined(nextBody)) {\n      var insertPage = false;\n      var page = body.page;\n      var pageIndex = page.index + 1;\n      if (this.documentHelper.pages.length > pageIndex && !this.isMultiColumnLayout) {\n        nextPage = this.documentHelper.pages[pageIndex];\n        if (!isNullOrUndefined(nextPage) && nextPage.bodyWidgets.length !== 0 && body.sectionFormat.pageHeight === nextPage.bodyWidgets[0].sectionFormat.pageHeight && body.sectionFormat.pageWidth === nextPage.bodyWidgets[0].sectionFormat.pageWidth && body.sectionFormat.breakCode === 'NoBreak') {\n          if (nextPage.bodyWidgets[0].index === body.index) {\n            nextBody = nextPage.bodyWidgets[0];\n            this.viewer.updateClientArea(nextBody, nextBody.page);\n          } else {\n            nextBody = this.createSplitBody(body);\n            nextPage.bodyWidgets.splice(0, 0, nextBody);\n            nextBody.page = nextPage;\n            this.viewer.updateClientArea(nextBody, nextBody.page);\n            nextBody.y = this.viewer.clientActiveArea.y;\n          }\n        } else if (nextPage.bodyWidgets.length === 0 || !body.equals(nextPage.bodyWidgets[0]) || body.sectionIndex !== nextPage.bodyWidgets[0].sectionIndex && body.sectionFormat.breakCode === 'NewPage') {\n          nextPage = undefined;\n          insertPage = true;\n        } else {\n          nextBody = nextPage.bodyWidgets[0];\n          this.viewer.updateClientArea(nextBody, nextBody.page);\n        }\n      }\n      if (this.isMultiColumnLayout) {\n        insertPage = true;\n      }\n      if (isNullOrUndefined(nextPage)) {\n        nextBody = this.createSplitBody(body);\n        if (this.documentHelper.owner.editorHistoryModule && this.documentHelper.owner.editorHistoryModule.isRedoing && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'SectionBreakContinuous' && block.bodyWidget.sectionFormat.breakCode === 'NoBreak' || sectionBreakContinuous) {\n          //  this.viewer.clientActiveArea.y = block.y + block.height;\n        } else {\n          nextPage = this.viewer.createNewPage(nextBody, pageIndex);\n          this.viewer.updateClientArea(nextBody, nextBody.page);\n          nextBody.y = this.viewer.clientActiveArea.y;\n        }\n        if (insertPage && !isNullOrUndefined(nextPage)) {\n          this.documentHelper.insertPage(pageIndex, nextPage);\n        }\n        this.clearLineMeasures();\n      }\n      if (nextPage) {\n        do {\n          var lastBody = body.page.bodyWidgets[body.page.bodyWidgets.length - 1];\n          if (this.isSectionBreakCont || body === lastBody || body.containerWidget instanceof FootNoteWidget) {\n            break;\n          }\n          body.page.bodyWidgets.splice(body.page.bodyWidgets.indexOf(lastBody), 1);\n          nextPage.bodyWidgets.splice(1, 0, lastBody);\n          lastBody.page = nextPage;\n        } while (true);\n      }\n    }\n    // eslint-disable  no-constant-condition\n    if (this.isTextFormat) {\n      var index = body.childWidgets.indexOf(block);\n      var child = body.childWidgets.slice(index);\n      body.childWidgets.splice(index);\n      for (var _i = 0, child_1 = child; _i < child_1.length; _i++) {\n        var obj = child_1[_i];\n        nextBody.childWidgets.push(obj);\n        obj.containerWidget = nextBody;\n      }\n    } else {\n      do {\n        var lastBlock = void 0;\n        if (body.lastChild instanceof FootNoteWidget) {\n          lastBlock = body.lastChild.previousWidget;\n        } else {\n          lastBlock = body.lastChild;\n        }\n        if (moveFootnoteFromLastBlock) {\n          var footWidget = this.getFootNoteWidgetsOf(lastBlock);\n          this.moveFootNotesToPage(footWidget, body, nextBody);\n        }\n        if (block === lastBlock) {\n          break;\n        }\n        body.childWidgets.splice(body.childWidgets.indexOf(lastBlock), 1);\n        nextBody.childWidgets.splice(0, 0, lastBlock);\n        if (lastBlock instanceof TableWidget && body.floatingElements.indexOf(lastBlock) !== -1) {\n          body.floatingElements.splice(body.floatingElements.indexOf(lastBlock), 1);\n          //nextBody.floatingElements.push(lastBlock);\n        }\n        if (lastBlock instanceof ParagraphWidget && lastBlock.floatingElements.length > 0) {\n          for (var m = 0; m < lastBlock.floatingElements.length; m++) {\n            if (body.floatingElements.indexOf(lastBlock.floatingElements[m]) !== -1 && lastBlock.floatingElements[m].textWrappingStyle !== 'Inline') {\n              body.floatingElements.splice(body.floatingElements.indexOf(lastBlock.floatingElements[m]), 1);\n              nextBody.floatingElements.push(lastBlock.floatingElements[m]);\n            }\n          }\n        }\n        lastBlock.containerWidget = nextBody;\n        nextBody.height += lastBlock.height;\n        // eslint-disable-next-line no-constant-condition\n      } while (true);\n    }\n    return nextBody;\n  };\n  Layout.prototype.createSplitBody = function (body) {\n    var newBody = this.addBodyWidget(this.viewer.clientActiveArea);\n    newBody.sectionFormat = body.sectionFormat;\n    newBody.index = body.index;\n    return newBody;\n  };\n  Layout.prototype.createOrGetNextColumnBody = function (fromBody) {\n    var nextColumnBody;\n    if (fromBody.nextRenderedWidget && fromBody.columnIndex + 1 === fromBody.nextRenderedWidget.columnIndex) {\n      nextColumnBody = fromBody.nextRenderedWidget;\n    }\n    if (isNullOrUndefined(nextColumnBody)) {\n      nextColumnBody = new BodyWidget();\n      nextColumnBody.sectionFormat = fromBody.sectionFormat;\n      nextColumnBody.index = fromBody.index;\n      nextColumnBody.page = fromBody.page;\n      nextColumnBody.y = fromBody.y;\n      if (fromBody.containerWidget instanceof FootNoteWidget) {\n        fromBody.containerWidget.bodyWidgets.splice(fromBody.containerWidget.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n        nextColumnBody.containerWidget = fromBody.containerWidget;\n      } else {\n        fromBody.page.bodyWidgets.splice(fromBody.page.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n      }\n    }\n    return nextColumnBody;\n  };\n  Layout.prototype.moveToNextColumnByBodyWidget = function (block, childStartIndex) {\n    var fromBody = block.containerWidget;\n    var nextColumnBody = this.createOrGetNextColumnBody(fromBody);\n    return nextColumnBody;\n  };\n  //endregion\n  //#region Relayout Parargaph\n  /* eslint-disable  */\n  Layout.prototype.reLayoutLine = function (paragraph, lineIndex, isBidi, isSkip, isSkipList) {\n    if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n      this.isFootnoteContentChanged = false;\n    }\n    if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isSkipList) {\n      this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n    }\n    var lineWidget;\n    if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n      lineWidget = paragraph.getSplitWidgets()[0].firstChild;\n    } else {\n      lineWidget = paragraph.childWidgets[lineIndex];\n    }\n    var lineToLayout;\n    if (paragraph.containerWidget instanceof BodyWidget && paragraph.containerWidget.sectionFormat.numberOfColumns > 1 && paragraph.containerWidget.sectionFormat.equalWidth) {\n      lineToLayout = lineWidget.previousLine;\n    }\n    if (isNullOrUndefined(lineToLayout)) {\n      lineToLayout = lineWidget;\n    }\n    if (this.allowLayout) {\n      lineToLayout.paragraph.splitTextRangeByScriptType(lineToLayout.indexInOwner);\n      lineToLayout.paragraph.splitLtrAndRtlText(lineToLayout.indexInOwner);\n      lineToLayout.paragraph.combineconsecutiveRTL(lineToLayout.indexInOwner);\n    }\n    var bodyWidget = paragraph.containerWidget;\n    bodyWidget.height -= paragraph.height;\n    if ((this.viewer.owner.enableHeaderAndFooter || paragraph.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n      paragraph.bodyWidget.isEmpty = false;\n      this.viewer.updateHeaderFooterClientAreaWithTop(paragraph.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(paragraph), bodyWidget.page);\n    } else if (bodyWidget instanceof TextFrame) {\n      this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n      // } else if (bodyWidget instanceof FootNoteWidget) {\n      //     this.isRelayoutFootnote = true;\n      //     this.viewer.updateClientArea(bodyWidget.sectionFormat, bodyWidget.page);\n      //     this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n      //     this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n      //     // curretBlock.containerWidget.height -= curretBlock.height;\n      //     this.viewer.clientActiveArea.y = paragraph.containerWidget.y;\n    } else {\n      this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n    }\n    this.viewer.updateClientAreaForBlock(paragraph, true);\n    if (!isNullOrUndefined(paragraph.containerWidget) && !isNullOrUndefined(paragraph.containerWidget.containerWidget) && paragraph.containerWidget.containerWidget instanceof FootNoteWidget) {\n      var y = paragraph.bodyWidget.containerWidget.y;\n      this.viewer.cutFromTop(y);\n      this.documentHelper.owner.editorModule.isFootNoteInsert = true;\n      this.layoutfootNote(paragraph.containerWidget.containerWidget);\n      this.documentHelper.owner.editorModule.isFootNoteInsert = false;\n      return;\n    } else if (lineToLayout.paragraph.isEmpty()) {\n      this.viewer.cutFromTop(paragraph.y);\n      this.layoutParagraph(paragraph, 0);\n    } else {\n      this.updateClientAreaForLine(lineToLayout);\n      this.layoutListItems(lineToLayout.paragraph);\n      if (lineToLayout.isFirstLine() && !isNullOrUndefined(paragraph.paragraphFormat)) {\n        var firstLineIndent = -HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n        this.viewer.updateClientWidth(firstLineIndent);\n      }\n      do {\n        lineToLayout = this.layoutLine(lineToLayout, 0);\n        paragraph = lineToLayout.paragraph;\n        lineToLayout = lineToLayout.nextLine;\n      } while (lineToLayout);\n      this.updateWidgetToPage(this.viewer, paragraph);\n    }\n    this.viewer.updateClientAreaForBlock(paragraph, false);\n    this.layoutNextItemsBlock(paragraph, this.viewer);\n    var prevWidget = paragraph.getSplitWidgets()[0].previousRenderedWidget;\n    if (!isNullOrUndefined(prevWidget) && !paragraph.isEndsWithPageBreak && !paragraph.isEndsWithColumnBreak && (!(prevWidget instanceof ParagraphWidget) || prevWidget instanceof ParagraphWidget && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak)) {\n      this.viewer.cutFromTop(paragraph.y + paragraph.height);\n      if (paragraph.containerWidget !== prevWidget.containerWidget && !isNullOrUndefined(prevWidget.containerWidget)) {\n        /* eslint-disable-next-line max-len */\n        var prevBodyWidget = paragraph.containerWidget;\n        var newBodyWidget_1 = prevWidget.containerWidget;\n        var footWidgets = this.getFootNoteWidgetsOf(paragraph);\n        //this.updateContainerWidget(paragraph as Widget, newBodyWidget, prevWidget.indexInOwner + 1, false);\n        if (!isNullOrUndefined(newBodyWidget_1.page.footnoteWidget)) {\n          this.moveFootNotesToPage(footWidgets, newBodyWidget_1, prevBodyWidget);\n        }\n      }\n    }\n    var page = this.documentHelper.pages.length;\n    var lastPage = this.documentHelper.pages[page - 1];\n    var foot;\n    var newBodyWidget = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n    if ((this.documentHelper.owner.editorModule.isFootnoteElementRemoved || this.isFootnoteContentChanged) && !isNullOrUndefined(paragraph.bodyWidget.page.footnoteWidget)) {\n      foot = paragraph.bodyWidget.page.footnoteWidget;\n      this.layoutfootNote(foot);\n    }\n    if (!isNullOrUndefined(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing && !isNullOrUndefined(newBodyWidget.page.endnoteWidget)) {\n      this.isEndnoteContentChanged = true;\n    }\n    if ((this.documentHelper.owner.editorModule.isEndnoteElementRemoved || this.isEndnoteContentChanged) && !isNullOrUndefined(newBodyWidget.page.endnoteWidget)) {\n      foot = newBodyWidget.page.endnoteWidget;\n      var clientArea = this.viewer.clientArea.clone();\n      var clientActiveArea = this.viewer.clientActiveArea.clone();\n      var lastPageLastPara = newBodyWidget.childWidgets[newBodyWidget.childWidgets.length - 1];\n      var y = lastPageLastPara.y + lastPageLastPara.height;\n      this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n      this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n      this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n      this.viewer.clientActiveArea.y = y;\n      this.layoutfootNote(foot);\n      this.viewer.clientArea = clientArea;\n      this.viewer.clientActiveArea = clientActiveArea;\n      //this.viewer.updateClientAreaForBlock(foot.block, false);\n    }\n    if (!isNullOrUndefined(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing) {\n      this.isEndnoteContentChanged = false;\n    }\n  };\n  //#endregion\n  //RTL Feature layout start\n  Layout.prototype.isContainsRtl = function (lineWidget) {\n    if (this.viewer.documentHelper.isSelectionChangedOnMouseMoved && !this.isDocumentContainsRtl) {\n      return false;\n    }\n    var isContainsRTL = false;\n    for (var i = 0; i < lineWidget.children.length; i++) {\n      if (lineWidget.children[i] instanceof TextElementBox) {\n        isContainsRTL = lineWidget.children[i].characterFormat.bidi || lineWidget.children[i].characterFormat.bdo === 'RTL' || this.documentHelper.textHelper.isRTLText(lineWidget.children[i].text);\n        if (isContainsRTL) {\n          if (!this.isDocumentContainsRtl) {\n            this.isDocumentContainsRtl = isContainsRTL;\n          }\n          break;\n        }\n      }\n    }\n    return isContainsRTL;\n  };\n  // Re arranges the elements for Right to left layotuing.\n  /* eslint-disable  */\n  // public reArrangeElementsForRtl(line: LineWidget, isParaBidi: boolean): void {\n  //     if (line.children.length === 0) {\n  //         return;\n  //     }\n  //     let lastAddedElementIsRtl: boolean = false;\n  //     let lastAddedRtlElementIndex: number = -1;\n  //     let tempElements: ElementBox[] = [];\n  //     for (let i: number = 0; i < line.children.length; i++) {\n  //         let element: ElementBox = line.children[i];\n  //         let elementCharacterFormat: WCharacterFormat = undefined;\n  //         if (element.characterFormat) {\n  //             elementCharacterFormat = element.characterFormat;\n  //         }\n  //         let isRtl: boolean = false;\n  //         let text: string = '';\n  //         let containsSpecchrs: boolean = false;\n  //         if (element instanceof BookmarkElementBox) {\n  //             if (isParaBidi) {\n  //                 if (lastAddedElementIsRtl || element.bookmarkType === 0 && element.nextElement\n  //                     && element.nextElement.nextElement instanceof TextElementBox\n  //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.nextElement.text)\n  //                     || element.bookmarkType === 1 && element.nextElement instanceof TextElementBox\n  //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.text)) {\n  //                     tempElements.splice(0, 0, element);\n  //                 } else {\n  //                     tempElements.splice(lastAddedElementIsRtl ? lastAddedRtlElementIndex : lastAddedRtlElementIndex + 1, 0, element);\n  //                 }\n  //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n  //             } else {\n  //                 tempElements.push(element);\n  //             }\n  //             continue;\n  //         }\n  //         if (element instanceof TextElementBox) {\n  //             text = (element as TextElementBox).text;\n  //             containsSpecchrs = this.documentHelper.textHelper.containsSpecialCharAlone(text.trim());\n  //             if (containsSpecchrs) {\n  //                 if (elementCharacterFormat.bidi && isParaBidi) {\n  //                     text = HelperMethods.reverseString(text);\n  //                     for (let k: number = 0; k < text.length; k++) {\n  //                         let ch: string = this.documentHelper.textHelper.inverseCharacter(text.charAt(k));\n  //                         text = text.replace(text.charAt(k), ch);\n  //                     }\n  //                     element.text = text;\n  //                 }\n  //             }\n  //             let textElement: ElementBox = element.nextElement;\n  //             if (element instanceof TextElementBox && this.documentHelper.textHelper.containsNumberAlone(element.text.trim())) {\n  //                 while (textElement instanceof TextElementBox && textElement.text.trim() !== '' && (this.documentHelper.textHelper.containsNumberAlone(textElement.text.trim()) || this.documentHelper.textHelper.containsSpecialCharAlone(textElement.text.trim()))) {\n  //                     element.text = element.text + textElement.text;\n  //                     element.line.children.splice(element.line.children.indexOf(textElement), 1);\n  //                     textElement = element.nextElement;\n  //                 }\n  //                 element.width = this.documentHelper.textHelper.getTextSize(element as TextElementBox, element.characterFormat);\n  //             }\n  //         }\n  //         let isRTLText: boolean = false;\n  //         // let isNumber: boolean = false;\n  //         // The list element box shold be added in the last position in line widget for the RTL paragraph \n  //         // and first in the line widget for LTR paragrph.\n  //         if (element instanceof ListTextElementBox) {\n  //             isRtl = isParaBidi;\n  //         } else { // For Text element box we need to check the character format and unicode of text to detect the RTL text. \n  //             isRTLText = this.documentHelper.textHelper.isRTLText(text);\n  //             isRtl = isRTLText || elementCharacterFormat.bidi\n  //                 || elementCharacterFormat.bdo === 'RTL';\n  //         }\n  //         if (element instanceof FieldElementBox || this.isRtlFieldCode) {\n  //             if ((element as FieldElementBox).fieldType === 0) {\n  //                 this.isRtlFieldCode = true;\n  //             } else if ((element as FieldElementBox).fieldType === 1) {\n  //                 this.isRtlFieldCode = false;\n  //             }\n  //             isRtl = false;\n  //         }\n  //         // If the text element box contains only whitespaces, then need to check the previous and next elements.\n  //         if (!isRtl && !isNullOrUndefined(text) && text !== '' && ((text !== '' && text.trim() === '') || containsSpecchrs)) {\n  //             let elements: ElementBox[] = line.children;\n  //             //Checks whether the langugae is RTL.\n  //             if (elementCharacterFormat.bidi) {\n  //                 // If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n  //                 if (lastAddedElementIsRtl) {\n  //                     isRtl = true;\n  //                     // Else, Check for next element.\n  //                 } else if (i + 1 < line.children.length && line.children[i + 1] instanceof TextElementBox) {\n  //                     text = (elements[i + 1] as TextElementBox).text;\n  //                     isRtl = this.documentHelper.textHelper.isRTLText(text) || elements[i + 1].characterFormat.bidi\n  //                         || elements[i + 1].characterFormat.bdo === 'RTL';\n  //                 }// If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n  //             } else if (lastAddedElementIsRtl) {\n  //                 isRtl = true;\n  //             }\n  //         }\n  //         // Preserve the isRTL value, to reuse it for navigation and selection.\n  //         element.isRightToLeft = isRtl;\n  //         //Adds the text element to the line\n  //         if (isRtl && elementCharacterFormat.bdo !== 'LTR') {\n  //             if (lastAddedElementIsRtl) {\n  //                 tempElements.splice(lastAddedRtlElementIndex, 0, element);\n  //             } else {\n  //                 if (!isParaBidi) {\n  //                     tempElements.push(element);\n  //                 } else {\n  //                     tempElements.splice(0, 0, element);\n  //                 }\n  //                 lastAddedElementIsRtl = true;\n  //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n  //             }\n  //         } else {\n  //             if (lastAddedElementIsRtl && element instanceof ImageElementBox) {\n  //                 if (elementCharacterFormat.bidi) {\n  //                     tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n  //                 } else {\n  //                     tempElements.splice(lastAddedRtlElementIndex, 0, element);\n  //                 }\n  //             } else {\n  //                 if (!isParaBidi) {\n  //                     tempElements.push(element);\n  //                 } else {\n  //                     if (lastAddedElementIsRtl) {\n  //                         tempElements.splice(0, 0, element);\n  //                     } else {\n  //                         tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n  //                     }\n  //                     lastAddedRtlElementIndex = tempElements.indexOf(element);\n  //                 }\n  //                 lastAddedElementIsRtl = false;\n  //             }\n  //         }\n  //     }\n  //     // Clear the elemnts and reassign the arranged elements.\n  //     line.children = [];\n  //     line.children = tempElements;\n  // }\n  Layout.prototype.shiftElementsForRTLLayouting = function (line, paraBidi) {\n    ////Check whether span has bidi value\n    var textRangeBidi = this.hasTextRangeBidi(line);\n    if (this.isContainsRTLText(line) || paraBidi || textRangeBidi) {\n      ////Splits the child elements of a line by consecutive RTL, LTR text and word breaking characters.\n      var characterRangeTypes = [];\n      var lineElementsBidiValues = [];\n      for (var i = 0; i < line.children.length; i++) {\n        var element = line.children[i];\n        if (element instanceof TextElementBox && element.height > 0 && !element.isPageBreak && element.text !== '\\v') {\n          var textRange = element;\n          lineElementsBidiValues.push(textRange.characterFormat.bidi);\n          if (textRange.text == \"\\t\") {\n            characterRangeTypes.push(CharacterRangeType.Tab);\n          } else {\n            characterRangeTypes.push(textRange.characterRange);\n          }\n          element.isRightToLeft = characterRangeTypes[characterRangeTypes.length - 1] == CharacterRangeType.RightToLeft;\n        } else if (element instanceof CommentCharacterElementBox || element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox || element instanceof ContentControl || element instanceof FieldElementBox) {\n          var isStartMark = this.isStartMarker(element);\n          var isEndMark = this.isEndMarker(element);\n          if (isStartMark && i < line.children.length - 1) {\n            var nextltWidget = this.getNextValidWidget(i + 1, line);\n            if (!isNullOrUndefined(nextltWidget) && nextltWidget instanceof TextElementBox && nextltWidget.height > 0) {\n              var textRange = nextltWidget;\n              lineElementsBidiValues.push(textRange.characterFormat.bidi);\n              //Since tab-stop in the line changes the reordering, here we consider an tab-stop widget as Tab.\n              if (nextltWidget.text === '\\t') {\n                characterRangeTypes.push(CharacterRangeType.Tab);\n              } else {\n                characterRangeTypes.push(textRange.characterRange);\n              }\n            } else {\n              lineElementsBidiValues.push(false);\n              characterRangeTypes.push(CharacterRangeType.LeftToRight);\n            }\n          } else if (!isEndMark && i > 0) {\n            lineElementsBidiValues.push(lineElementsBidiValues[lineElementsBidiValues.length - 1]);\n            characterRangeTypes.push(characterRangeTypes[characterRangeTypes.length - 1]);\n          } else {\n            lineElementsBidiValues.push(false);\n            characterRangeTypes.push(CharacterRangeType.LeftToRight);\n          }\n        } else if (element instanceof ListTextElementBox && paraBidi) {\n          lineElementsBidiValues.push(paraBidi);\n          characterRangeTypes.push(CharacterRangeType.RightToLeft);\n        } else {\n          lineElementsBidiValues.push(false);\n          characterRangeTypes.push(CharacterRangeType.LeftToRight);\n        }\n      }\n      ////Sets CharacterRangeType of word split characters as (WordSplit | RTL), if word split characters are present between splitted RTL text in the same layouted line.\n      ////This code handles for both single and multiple Text Ranges of a line (Special case for ordering elements)\n      var rtlStartIndex = -1;\n      var isPrevLTRText = undefined;\n      for (var i = 0; i < characterRangeTypes.length; i++) {\n        if (i + 1 < lineElementsBidiValues.length && lineElementsBidiValues[i] != lineElementsBidiValues[i + 1]) {\n          if (rtlStartIndex != -1) {\n            this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n            rtlStartIndex = -1;\n          }\n          isPrevLTRText = null;\n          continue;\n        }\n        /// When only one NumberNonReversingCharacter(.:,) is exists in between a two numbers and \n        /// both these number and NumberNonReversingCharacter having a Bidi property,\n        /// MS Word consider this NumberNonReversingCharacter(.:,) as Number and re-order it accordingly.\n        if (i > 0 && i != characterRangeTypes.length - 1 && characterRangeTypes[i] == CharacterRangeType.WordSplit && lineElementsBidiValues[i] && characterRangeTypes[i - 1] == CharacterRangeType.Number && lineElementsBidiValues[i - 1] && characterRangeTypes[i + 1] == CharacterRangeType.Number && lineElementsBidiValues[i + 1] && this.isNumberNonReversingCharacter(line.children[i])) {\n          characterRangeTypes[i] = CharacterRangeType.Number;\n        } else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft || characterRangeTypes[i] == CharacterRangeType.LeftToRight || characterRangeTypes[i] == CharacterRangeType.Number && rtlStartIndex != -1 || (isNullOrUndefined(isPrevLTRText) || !isPrevLTRText) && lineElementsBidiValues[i]) {\n          if (rtlStartIndex == -1 && characterRangeTypes[i] != CharacterRangeType.LeftToRight) {\n            rtlStartIndex = i;\n          } else if (rtlStartIndex == -1) {\n            if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n              isPrevLTRText = true;\n            } else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft) {\n              isPrevLTRText = false;\n            }\n            continue;\n          } else if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n            this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n            rtlStartIndex = characterRangeTypes[i] == CharacterRangeType.RightToLeft || characterRangeTypes[i] == CharacterRangeType.Number && rtlStartIndex != -1 ? i : -1;\n          }\n        }\n        if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n          isPrevLTRText = true;\n        } else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft) {\n          isPrevLTRText = false;\n        }\n      }\n      if (rtlStartIndex != -1 && rtlStartIndex < characterRangeTypes.length - 1) {\n        this.updateCharacterRange(line, characterRangeTypes.length - 1, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n        rtlStartIndex = -1;\n      }\n      if (characterRangeTypes.length != line.children.length) {\n        ////This exception is thrown to avoid, unhandled exception in RTL/LTR reordering logic.\n        throw new Error(\"Splitted Widget count mismatch while reordering layouted child widgets of a line\");\n      }\n      var reorderedWidgets = this.reorderElements(line, characterRangeTypes, lineElementsBidiValues, paraBidi);\n      lineElementsBidiValues.length = 0;\n      characterRangeTypes.length = 0;\n      if (line.children.length > 0) {\n        line.layoutedElements = reorderedWidgets;\n        //elements.Clear();\n        //line.children = reorderedWidgets;\n        ////ReCalculate the height and baseline offset once again.\n        //UpdateMaxElement();\n      }\n    }\n    return paraBidi;\n  };\n  Layout.prototype.isNumberNonReversingCharacter = function (element) {\n    if (element instanceof TextElementBox) {\n      var textRange = element;\n      if (textRange.characterFormat.hasValueWithParent('localeIdBidi')) {\n        //Only these 10 word split characters (‘/’,‘:’,‘.’,‘,’,‘،’,‘#’,‘$’,‘%’,‘+’,‘-’) are behaving as number non reversing character based on language identifier.\n        var ch = textRange.text.charCodeAt(0);\n        //(‘/’) character is behaves as number non reversing character for some specific language identifiers.\n        if (ch == 47 && !this.isNumberReverseLangForSlash(textRange.characterFormat.localeIdBidi)\n        //(‘#’,‘$’,‘%’,‘+’,‘-’) characters are behaving as number non reversing character for some specific language identifiers.\n        || (ch == 35 || ch == 36 || ch == 37 || ch == 43 || ch == 45) && !this.isNumberReverseLangForOthers(textRange.characterFormat.localeIdBidi)\n        //(‘,’,‘.’,‘:’,‘،’) characters are behaving as number non reversing character for any language identifier.\n        || ch == 44 || ch == 46 || ch == 58 || ch == 1548) {\n          return true;\n        }\n      } else {\n        return TextHelper.isNumberNonReversingCharacter(textRange.text, textRange.characterFormat.bidi);\n      }\n    }\n    return false;\n  };\n  Layout.prototype.isNumberReverseLangForSlash = function (lang) {\n    return this.isNumberReverseLangForOthers(lang) || lang == 6145 || lang == 1164 || lang == 1125 || lang == 1120 || lang == 1123 || lang == 1065 || lang == 2137 || lang == 1114 || lang == 1119 || lang == 1152 || lang == 1056;\n  };\n  Layout.prototype.isNumberReverseLangForOthers = function (lang) {\n    return lang == 14337 || lang == 15361 || lang == 5121 || lang == 3073 || lang == 2049 || lang == 11265 || lang == 13313 || lang == 12289 || lang == 4097 || lang == 8193 || lang == 16385 || lang == 1025 || lang == 10241 || lang == 7169 || lang == 9217;\n  };\n  Layout.prototype.isStartMarker = function (element) {\n    if (element instanceof CommentCharacterElementBox) {\n      return element.commentType === 0;\n    } else if (element instanceof BookmarkElementBox) {\n      return element.bookmarkType === 0;\n    } else if (element instanceof EditRangeStartElementBox) {\n      return true;\n    } else if (element instanceof ContentControl) {\n      return element.type === 0;\n    } else if (element instanceof FieldElementBox) {\n      return element.fieldType === 0;\n    }\n    return false;\n  };\n  Layout.prototype.isEndMarker = function (element) {\n    if (element instanceof CommentCharacterElementBox) {\n      return element.commentType === 1;\n    } else if (element instanceof BookmarkElementBox) {\n      return element.bookmarkType === 1;\n    } else if (element instanceof EditRangeStartElementBox) {\n      return true;\n    } else if (element instanceof ContentControl) {\n      return element.type === 1;\n    } else if (element instanceof FieldElementBox) {\n      return element.fieldType === 1;\n    }\n    return false;\n  };\n  Layout.prototype.getNextValidWidget = function (startIndex, layoutedWidgets) {\n    for (var i = startIndex; i < layoutedWidgets.children.length; i++) {\n      var element = layoutedWidgets.children[i];\n      if (element instanceof CommentCharacterElementBox || element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox || element instanceof ContentControl || element instanceof FieldElementBox) {\n        continue;\n      } else {\n        return element[i];\n      }\n    }\n    return null;\n  };\n  Layout.prototype.hasTextRangeBidi = function (line) {\n    for (var i = 0; i < line.children.length; i++) {\n      var elementBox = line.children[i];\n      if (elementBox instanceof TextElementBox) {\n        var textRange = elementBox;\n        if (textRange.characterFormat.bidi) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Layout.prototype.isContainsRTLText = function (line) {\n    var documentHelper = line.paragraph.bodyWidget.page.documentHelper;\n    var textHelper = documentHelper.textHelper;\n    var isContainsRTL = false;\n    for (var i = 0; i < line.children.length; i++) {\n      if (line.children[i] instanceof TextElementBox) {\n        isContainsRTL = line.children[i].characterFormat.bidi || line.children[i].characterFormat.bidi == true || textHelper.isRTLText(line.children[i].text);\n        if (isContainsRTL) break;\n      }\n    }\n    return isContainsRTL;\n  };\n  Layout.prototype.updateCharacterRange = function (line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes) {\n    var endIndex = i;\n    if (!lineElementsBidiValues[i]) {\n      if (characterRangeTypes[i] === CharacterRangeType.LeftToRight) {\n        endIndex--;\n      }\n      for (var j = endIndex; j >= rtlStartIndex; j--) {\n        if (characterRangeTypes[j] != CharacterRangeType.WordSplit) {\n          endIndex = j;\n          break;\n        }\n      }\n    }\n    for (var j = rtlStartIndex; j <= endIndex; j++) {\n      if (characterRangeTypes[j] == CharacterRangeType.WordSplit) {\n        characterRangeTypes[j] = CharacterRangeType.RightToLeft | CharacterRangeType.WordSplit;\n        var previousIndex = j - 1;\n        var nextIndex = j + 1;\n        //// Handled a special behavior, When a EastAsia font is \"Times New Roman\" for text range.\n        //// Group of word split character is exist in between a RTL characters, MS Word reverse a corresponding word split characters.\n        //// So, that we have reverse the word split characters.\n        if (previousIndex >= 0 && nextIndex < characterRangeTypes.length && characterRangeTypes[previousIndex] == CharacterRangeType.RightToLeft && (characterRangeTypes[nextIndex] == CharacterRangeType.RightToLeft || characterRangeTypes[nextIndex] == CharacterRangeType.Number) && line.children[j] instanceof TextElementBox) {\n          var textRange = line.children[j];\n          if (textRange.characterFormat.fontFamilyBidi == \"Times New Roman\") {\n            var charArray = textRange.text.split(\"\");\n            var reverseArray = charArray.reverse();\n            var joinArray = reverseArray.join(\"\");\n            textRange.text = joinArray;\n          }\n        }\n      }\n    }\n  };\n  Layout.prototype.reorderElements = function (line, characterRangeTypes, listElementsBidiValues, paraBidi) {\n    var insertIndex = 0,\n      lastItemIndexWithoutRTLFlag = -1,\n      consecutiveRTLCount = 0,\n      consecutiveNumberCount = 0;\n    var reorderedElements = [];\n    var prevCharType = CharacterRangeType.LeftToRight;\n    var prevBidi = false;\n    for (var i = 0; i < line.children.length; i++) {\n      var element = line.children[i];\n      var textElement = element;\n      textElement.characterRange = characterRangeTypes[i];\n      var isRTLText = (textElement.characterRange & CharacterRangeType.RightToLeft) == CharacterRangeType.RightToLeft || textElement.characterRange == CharacterRangeType.Number;\n      var isBidi = listElementsBidiValues[i];\n      ////If tab-stop is exist with in the line then we have to consider the below behaviours\n      if (characterRangeTypes[i] == CharacterRangeType.Tab) {\n        if (paraBidi) {\n          ////When para bidi is true, reordering is performed until tab stop position and break the reordering and then again reordering is performed for the remaining contents which exist after the tab-stop. \n          ////Assume if we have an tab stop in center of the line, then the reordering is performed until the tab stop position and stop and place a tab stop and starts reordering for the remaining contents. \n          insertIndex = 0;\n          lastItemIndexWithoutRTLFlag = -1;\n          consecutiveRTLCount = 0;\n          prevCharType = CharacterRangeType.LeftToRight;\n          prevBidi = false;\n          reorderedElements.splice(insertIndex, 0, element);\n          continue;\n        } else if (isBidi) {\n          ////If text range bidi is true for the tab stop widget, MS Word does not consider this tab-stop bidi as LTR Bidi and does not shift it as per our reordering. \n          ////Instead its consider this widget as non-bidi LTR and do the reordering.\n          isBidi = false;\n        }\n      }\n      if (i > 0 && prevBidi != isBidi) {\n        if (paraBidi) {\n          ////If Bidi of paragraph is true, then start inserting widgets from first (index 0).\n          insertIndex = 0;\n          lastItemIndexWithoutRTLFlag = -1;\n          consecutiveRTLCount = 0;\n        } else {\n          ////If Bidi of paragraph is false, then start inserting widgets from last (reorderedWidgets.Count).\n          lastItemIndexWithoutRTLFlag = reorderedElements.length - 1;\n        }\n        ////If Bidi for previous and next widget differs, we have to reset consecutive number to 0.\n        consecutiveNumberCount = 0;\n      }\n      if (!isBidi && !isRTLText) {\n        if (paraBidi) {\n          if (consecutiveRTLCount > 0 && prevBidi == isBidi) {\n            insertIndex += consecutiveRTLCount;\n          }\n          reorderedElements.splice(insertIndex, 0, element);\n          insertIndex++;\n        } else {\n          reorderedElements.push(element);\n          insertIndex = i + 1;\n        }\n        consecutiveRTLCount = 0;\n        lastItemIndexWithoutRTLFlag = paraBidi ? insertIndex - 1 : reorderedElements.length - 1;\n      } else if (isRTLText || isBidi && textElement.characterRange == CharacterRangeType.WordSplit && (prevCharType == CharacterRangeType.RightToLeft || this.isInsertWordSplitToLeft(characterRangeTypes, listElementsBidiValues, i))) {\n        consecutiveRTLCount++;\n        insertIndex = lastItemIndexWithoutRTLFlag + 1;\n        if (textElement.characterRange == CharacterRangeType.Number) {\n          if (prevCharType == CharacterRangeType.Number) {\n            ////Moves the insertIndex to the right after the previous consecutive number.\n            insertIndex += consecutiveNumberCount;\n          }\n          ////Increments consecutive number counter, to decide how much position the next number text range (widget) has to be moved and inserted towards right of insertIndex.\n          consecutiveNumberCount++;\n        }\n        reorderedElements.splice(insertIndex, 0, element);\n      } else {\n        reorderedElements.splice(insertIndex, 0, element);\n        insertIndex++;\n        consecutiveRTLCount = 0;\n      }\n      if (textElement.characterRange != CharacterRangeType.Number) {\n        ////Resets the consecutive number counter when character range is not a number.\n        consecutiveNumberCount = 0;\n      }\n      if (textElement.characterRange != CharacterRangeType.WordSplit) {\n        ////Note: Handled to set only CharacterRangeType.RightToLeft and CharacterRangeType.LeftToRight\n        ////For CharacterRangeType.WordSplit | CharacterRangeType.RightToLeft case, the IsInsertWordSplitToLeft method will return true.\n        prevCharType = textElement.characterRange;\n      }\n      prevBidi = isBidi;\n    }\n    return reorderedElements;\n  };\n  Layout.prototype.isInsertWordSplitToLeft = function (characterRangeTypes, lineElementsBidiValues, elementIndex) {\n    for (var i = elementIndex + 1; i < characterRangeTypes.length; i++) {\n      if ((characterRangeTypes[i] & CharacterRangeType.RightToLeft) == CharacterRangeType.RightToLeft) {\n        return true;\n      } else if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n        if (lineElementsBidiValues[i]) {\n          return false;\n        } else {\n          ////If bidi is true for previous LTR and bidi is false for next LTR, then insert Word split to before previous inserted widget.\n          return true;\n        }\n      }\n    }\n    return true;\n  };\n  Layout.prototype.shiftLayoutFloatingItems = function (paragraph) {\n    for (var i = 0; i < paragraph.floatingElements.length; i++) {\n      var element = paragraph.floatingElements[i];\n      var position = this.getFloatingItemPoints(element);\n      var height = position.y - element.y;\n      element.x = position.x;\n      element.y = position.y;\n      if (element instanceof ShapeElementBox) {\n        for (var j = 0; j < element.textFrame.childWidgets.length; j++) {\n          var block = element.textFrame.childWidgets[j];\n          if (block instanceof ParagraphWidget) {\n            block.y = block.y + height;\n          } else if (block instanceof TableWidget) {\n            this.shiftChildLocationForTableWidget(block, height);\n          }\n        }\n      }\n    }\n  };\n  //RTL feature layout end\n  Layout.prototype.getFloatingItemPoints = function (floatElement) {\n    var paragraph = floatElement.line.paragraph;\n    var sectionFormat = paragraph.bodyWidget.sectionFormat;\n    var indentX = 0;\n    var indentY = 0;\n    if (paragraph) {\n      var leftMargin = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n      var rightMargin = HelperMethods.convertPointToPixel(sectionFormat.rightMargin);\n      var topMargin = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n      var bottomMargin = sectionFormat.bottomMargin > 0 ? HelperMethods.convertPointToPixel(sectionFormat.bottomMargin) : 48;\n      var headerDistance = HelperMethods.convertPointToPixel(sectionFormat.headerDistance);\n      var footerDistance = HelperMethods.convertPointToPixel(sectionFormat.footerDistance);\n      var pageWidth = HelperMethods.convertPointToPixel(sectionFormat.pageWidth);\n      var pageHeight = HelperMethods.convertPointToPixel(sectionFormat.pageHeight);\n      var pageClientWidth = pageWidth - (leftMargin + rightMargin);\n      var pageClientHeight = pageHeight - topMargin - bottomMargin;\n      //Need to consider RTL layout.\n      if (paragraph.isInHeaderFooter && sectionFormat.topMargin <= 0) {\n        topMargin = Math.abs(topMargin) > 0 ? Math.abs(topMargin) : HelperMethods.convertPointToPixel(sectionFormat.headerDistance) + paragraph.height;\n      } else {\n        topMargin = topMargin > 0 ? topMargin : 48;\n      }\n      //Update the top margin as text body y position when text body y position exceeds the top margin. \n      if (!paragraph.isInHeaderFooter && topMargin < this.viewer.clientArea.y) {\n        topMargin = this.viewer.clientArea.y;\n      }\n      var mIsYPositionUpdated = false;\n      var textWrapStyle = 'InFrontOfText';\n      //if (textWrapStyle !== 'Inline') {\n      var isLayoutInCell = false;\n      var vertOrigin = floatElement.verticalOrigin;\n      var horzOrigin = floatElement.horizontalOrigin;\n      var horzAlignment = floatElement.horizontalAlignment;\n      var vertAlignment = floatElement.verticalAlignment;\n      var verticalPercent = floatElement.verticalRelativePercent;\n      var horizontalPercent = floatElement.horizontalRelativePercent;\n      var shapeHeight = floatElement.height;\n      //Need to update size width for Horizontal Line when width exceeds client width.\n      // if(shape !== null && shape.IsHorizontalRule && size.Width > m_layoutArea.ClientActiveArea.Width)\n      //     size.Width = m_layoutArea.ClientActiveArea.Width;\n      var shapeWidth = floatElement.width;\n      var vertPosition = floatElement.verticalPosition;\n      var horzPosition = floatElement.horizontalPosition;\n      var layoutInCell = floatElement.layoutInCell;\n      var heightPercent = floatElement.heightRelativePercent;\n      var widthPercent = floatElement.widthRelativePercent;\n      var autoShape = void 0;\n      if (floatElement instanceof ShapeElementBox) {\n        autoShape = floatElement.autoShapeType;\n      }\n      //Word 2013 Layout picture in table cell even layoutInCell property was False.\n      if (paragraph.isInsideTable && layoutInCell) {\n        isLayoutInCell = true;\n        indentY = this.getVerticalPosition(floatElement, vertPosition, vertOrigin, textWrapStyle);\n        indentX = this.getHorizontalPosition(floatElement.width, floatElement, horzAlignment, horzOrigin, horzPosition, textWrapStyle, paragraph.associatedCell.cellFormat.cellWidth);\n      } else {\n        if (this.documentHelper.viewer instanceof WebLayoutViewer) {\n          switch (vertOrigin) {\n            case 'Line':\n              indentY = this.documentHelper.selection.getTop(floatElement.line);\n              break;\n            default:\n              indentY = this.viewer.clientActiveArea.y;\n              break;\n          }\n          switch (horzOrigin) {\n            case 'Character':\n              indentX = this.viewer.clientActiveArea.x;\n              break;\n            default:\n              switch (horzAlignment) {\n                case 'Center':\n                  indentX = this.viewer.clientArea.width / 2 - floatElement.width / 2;\n                  break;\n                default:\n                  indentX = this.viewer.clientArea.x;\n                  break;\n              }\n              break;\n          }\n        } else {\n          if (mIsYPositionUpdated) {\n            /* Upadte the Y Coordinate of floating image when floating image postion is changed based on the wrapping style. */\n            indentY = this.viewer.clientArea.y;\n          } else {\n            switch (vertOrigin) {\n              case 'Page':\n              case 'TopMargin':\n                indentY = vertPosition;\n                switch (vertAlignment) {\n                  case 'Top':\n                    indentY = vertPosition;\n                    break;\n                  case 'Center':\n                    if (vertOrigin === 'TopMargin') {\n                      indentY = (topMargin - shapeHeight) / 2;\n                    } else {\n                      if (heightPercent > 0 && widthPercent > 0) {\n                        indentY = (pageHeight - pageHeight * (heightPercent / 100)) / 2;\n                        floatElement.height = pageHeight * (heightPercent / 100);\n                      } else {\n                        indentY = (pageHeight - shapeHeight) / 2;\n                      }\n                    }\n                    break;\n                  case 'Outside':\n                  case 'Bottom':\n                    if (vertOrigin === 'Page' && vertAlignment === 'Bottom') {\n                      indentY = pageHeight - shapeHeight;\n                    } else {\n                      if (vertOrigin === 'TopMargin') {\n                        indentY = topMargin - shapeHeight;\n                      } else if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                        indentY = pageHeight - shapeHeight - footerDistance / 2;\n                      } else {\n                        indentY = headerDistance / 2;\n                      }\n                    }\n                    break;\n                  case 'Inside':\n                    if (vertOrigin === 'Page') {\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = pageHeight - shapeHeight - footerDistance / 2;\n                      } else {\n                        indentY = headerDistance / 2;\n                      }\n                    } else {\n                      //Need to ensure this behaviour.\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = (topMargin - shapeHeight) / 2 - headerDistance;\n                      }\n                    }\n                    break;\n                  case 'None':\n                    if (Math.abs(verticalPercent) <= 1000) {\n                      indentY = pageHeight * (verticalPercent / 100);\n                    } else {\n                      indentY = vertPosition;\n                    }\n                    break;\n                }\n                break;\n              case 'Line':\n                indentY = vertPosition;\n                switch (vertAlignment) {\n                  case 'Inside':\n                  case 'Top':\n                    //Need to update line widget height instead of client active area.\n                    indentY = this.viewer.clientActiveArea.y;\n                    break;\n                  case 'Center':\n                    indentY = this.viewer.clientActiveArea.y - shapeHeight / 2;\n                    break;\n                  case 'Outside':\n                  case 'Bottom':\n                    indentY = this.viewer.clientActiveArea.y - shapeHeight;\n                    break;\n                  case 'None':\n                    indentY = Math.round(paragraph.y) + vertPosition;\n                    break;\n                }\n                break;\n              case 'BottomMargin':\n                indentY = vertPosition;\n                switch (vertAlignment) {\n                  case 'Inside':\n                  case 'Top':\n                    indentY = pageHeight - bottomMargin;\n                    break;\n                  case 'Center':\n                    indentY = pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2;\n                    break;\n                  case 'Outside':\n                  case 'Bottom':\n                    if (paragraph.bodyWidget.page.index + 1 % 2 !== 0 && vertAlignment === 'Outside') {\n                      indentY = pageHeight - bottomMargin;\n                    } else {\n                      indentY = pageHeight - shapeHeight;\n                    }\n                    break;\n                  case 'None':\n                    indentY = pageHeight - bottomMargin + vertPosition;\n                    break;\n                }\n                break;\n              case 'InsideMargin':\n              case 'OutsideMargin':\n                indentY = vertPosition;\n                switch (vertAlignment) {\n                  case 'Inside':\n                    if (vertOrigin === 'InsideMargin') {\n                      if (vertOrigin === 'InsideMargin' && paragraph.bodyWidget.page.index + 1 % 2 === 0) {\n                        indentY = pageHeight - shapeHeight;\n                      } else {\n                        indentY = 0;\n                      }\n                    } else {\n                      indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : topMargin - shapeHeight;\n                    }\n                    break;\n                  case 'Top':\n                    if (vertOrigin === 'InsideMargin') {\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = pageHeight - bottomMargin;\n                      } else {\n                        indentY = 0;\n                      }\n                    } else {\n                      indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : 0;\n                    }\n                    break;\n                  case 'Center':\n                    if (vertOrigin === 'OutsideMargin') {\n                      //Need to ensure this.\n                      indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2 : (topMargin - shapeHeight) / 2;\n                    } else {\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2;\n                      } else {\n                        indentY = (topMargin - shapeHeight) / 2;\n                      }\n                    }\n                    break;\n                  case 'Outside':\n                    if (vertOrigin === 'InsideMargin') {\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = pageHeight - bottomMargin;\n                      } else {\n                        indentY = topMargin - shapeHeight;\n                      }\n                    } else {\n                      indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? topMargin - shapeHeight : pageHeight - bottomMargin;\n                    }\n                    break;\n                  case 'Bottom':\n                    if (vertOrigin === 'OutsideMargin') {\n                      indentY = paragraph.bodyWidget.page.index + 1 !== 0 ? pageHeight - shapeHeight : topMargin - shapeHeight;\n                    } else {\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentY = pageHeight - shapeHeight;\n                      } else {\n                        indentY = topMargin - shapeHeight;\n                      }\n                    }\n                    break;\n                  case 'None':\n                    break;\n                }\n                break;\n              case 'Paragraph':\n                var space = 0;\n                //let prevsibling: BlockWidget = paragraph.previousWidget as BlockWidget;\n                // if (floatElement) {\n                //     //Need to handle DocIO Implementation.\n                //     if (Math.round(paragraph.y) !== Math.round(topMargin) && (prevsibling instanceof ParagraphWidget)\n                //         && ((paragraph.paragraphFormat.beforeSpacing > prevsibling.paragraphFormat.afterSpacing)\n                //             || (prevsibling.paragraphFormat.afterSpacing < 14)\n                //             && !paragraph.paragraphFormat.contextualSpacing)) {\n                //         space = prevsibling.paragraphFormat.afterSpacing;\n                //     }\n                // }\n                // eslint-disable-next-line max-len\n                //Floating item Y position is calculated from paragraph original Y position not from wrapped paragraph Y(ParagraphLayoutInfo.YPosition) position.\n                indentY = Math.round(paragraph.y) + space + vertPosition;\n                break;\n              case 'Margin':\n                //If header distance is more than top margin, then calculate the position of item based on header distance.\n                //As per Microsoft Word behavior, it is need to consider paragraph height along with the distance.\n                if (paragraph.isInHeaderFooter && headerDistance > topMargin) {\n                  //Need to udpate.\n                  indentY = headerDistance + paragraph.height + vertPosition;\n                } else {\n                  indentY = topMargin + vertPosition;\n                }\n                switch (vertAlignment) {\n                  case 'Top':\n                    indentY = topMargin;\n                    break;\n                  case 'Center':\n                    indentY = topMargin + (pageClientHeight - shapeHeight) / 2;\n                    break;\n                  case 'Outside':\n                  case 'Bottom':\n                    if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                      indentY = topMargin + pageClientHeight - shapeHeight;\n                    } else {\n                      indentY = topMargin;\n                    }\n                    break;\n                  case 'Inside':\n                    if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                      indentY = topMargin + pageClientHeight - shapeHeight;\n                    } else {\n                      indentY = topMargin;\n                    }\n                    break;\n                  case 'None':\n                    break;\n                }\n                break;\n              default:\n                //Need to analyze further.\n                indentY = this.viewer.clientArea.y - vertPosition;\n                break;\n            }\n          }\n          // if (horzOrigin !== 'Column' && horzAlignment !== 'None') {\n          //     indentX = this.viewer.clientArea.x;\n          //     //Update the floating item x position to zero when floating item’s width\n          //     //exceeds the page width when floating item and it wrapping style is not equal to  \n          //     // infront of text and behind text and also vertical origin is not equal to paragraph.\n          // } else \n          if (paragraph && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind' && vertOrigin === 'Paragraph' && shapeWidth >= pageWidth) {\n            indentX = 0;\n          } else {\n            switch (horzOrigin) {\n              case 'Page':\n                indentX = horzPosition;\n                switch (horzAlignment) {\n                  case 'Center':\n                    if (isLayoutInCell) {\n                      indentX = (paragraph.associatedCell.cellFormat.cellWidth - shapeWidth) / 2;\n                    } else {\n                      if (heightPercent > 0 && widthPercent > 0) {\n                        indentX = (pageWidth - pageWidth * (widthPercent / 100)) / 2;\n                        floatElement.width = pageWidth * (widthPercent / 100);\n                      } else {\n                        indentX = (pageWidth - shapeWidth) / 2;\n                      }\n                    }\n                    break;\n                  case 'Left':\n                    indentX = 0;\n                    break;\n                  case 'Outside':\n                  case 'Right':\n                    if (isLayoutInCell) {\n                      indentX = paragraph.associatedCell.cellFormat.cellWidth - shapeWidth;\n                    } else {\n                      indentX = pageWidth - shapeWidth;\n                    }\n                    break;\n                  case 'None':\n                    if (isLayoutInCell) {\n                      indentX = paragraph.associatedCell.x + horzPosition;\n                    } else if (floatElement instanceof ShapeElementBox) {\n                      indentX = horzPosition;\n                      // Shape pItemShape = paraItem as Shape;\n                      // float horRelPercent = pItemShape !== null ? pItemShape.TextFrame.HorizontalRelativePercent\n                      //                       : (paraItem as WTextBox).TextBoxFormat.HorizontalRelativePercent;\n                      // if (Math.Abs(horRelPercent) <= 1000)\n                      //     indentX = pageWidth * (horRelPercent / 100);\n                      // else\n                      //     indentX = pItemShape !== null ? pItemShape.HorizontalPosition\n                      //         : (paraItem as WTextBox).TextBoxFormat.HorizontalPosition;\n                    } else {\n                      indentX = horzPosition;\n                    }\n                    break;\n                }\n                if (indentX < 0 && isLayoutInCell) {\n                  indentX = paragraph.associatedCell.x;\n                }\n                break;\n              case 'Column':\n                var isXPositionUpated = false;\n                //Update the Xposition while wrapping element exsit in the paragraph\n                if (this.viewer.clientActiveArea.x < paragraph.x) {\n                  // let cellPadings = 0;\n                  // if (paragraph.isInsideTable) {\n                  //     CellLayoutInfo cellLayoutInfo = (ownerPara.GetOwnerEntity() as IWidget).LayoutInfo as CellLayoutInfo;\n                  //     cellPadings = cellLayoutInfo.Paddings.Left + cellLayoutInfo.Paddings.Right;\n                  // }\n                  // float minimumWidthRequired = DEF_MIN_WIDTH_SQUARE;\n                  // if (textWrapStyle === TextWrappingStyle.Tight || textWrapStyle === TextWrappingStyle.Through)\n                  //     minimumWidthRequired = ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013 ?\n                  //         DEF_MIN_WIDTH_2013_TIGHTANDTHROW : DEF_MIN_WIDTH_TIGHTANDTHROW;\n                  // minimumWidthRequired -= cellPadings;\n                  // //Re Update the x position to the page left when paragraph starting position not equal to the \n                  // //column starting and current inline item is x position equal to the column left position.\n                  // if ((ownerPara.IsXpositionUpated && ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013)\n                  //     || paragraphLayoutInfo.XPosition > (pageWidth - minimumWidthRequired - rightMargin)\n                  //     || paragraphLayoutInfo.IsXPositionReUpdate)\n                  //     indentX = layouter.ClientLayoutArea.Left + horzPosition;\n                  // else\n                  indentX = paragraph.x + horzPosition;\n                } else {\n                  //Re Update the x position to the page left when word version not equal to 2013 \n                  //and wrapping style not equal to infront of text and behind text. \n                  if (textWrapStyle === 'InFrontOfText' || textWrapStyle === 'Behind') {\n                    if (!floatElement.paragraph.isInsideTable && (autoShape === 'StraightConnector' || autoShape === 'Rectangle' || floatElement instanceof ImageElementBox)) {\n                      isXPositionUpated = true;\n                      indentX = horzPosition + paragraph.bodyWidget.x;\n                    } else {\n                      indentX = paragraph.x + horzPosition;\n                    }\n                  } else {\n                    indentX = this.viewer.clientActiveArea.x + horzPosition;\n                  }\n                }\n                //Update the Wrapping element right position as page right when \n                //wrapping element right position  exceeds the page right except position \n                //InFrontOfText and behindText wrapping style.\n                if (textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind' && Math.round(indentX + shapeWidth) > Math.round(pageWidth) && shapeWidth < pageWidth) {\n                  indentX = pageWidth - shapeWidth;\n                }\n                if (paragraph.paragraphFormat.leftIndent && !isXPositionUpated) {\n                  var leftIndent = HelperMethods.convertPointToPixel(paragraph.leftIndent);\n                  indentX -= leftIndent;\n                }\n                switch (horzAlignment) {\n                  case 'Center':\n                    indentX = this.viewer.clientActiveArea.x + (this.viewer.clientActiveArea.width - shapeWidth) / 2;\n                    break;\n                  case 'Left':\n                    indentX = this.viewer.clientActiveArea.x;\n                    break;\n                  case 'Right':\n                    indentX = this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width - shapeWidth; //- TextBoxFormat.InternalMargin.Right;\n                    break;\n                  case 'None':\n                    break;\n                }\n                break;\n              case 'Margin':\n                if (paragraph.bodyWidget) {\n                  indentX = leftMargin + horzPosition;\n                  switch (horzAlignment) {\n                    case 'Center':\n                      indentX = leftMargin + (pageClientWidth - shapeWidth) / 2;\n                      break;\n                    case 'Left':\n                      indentX = leftMargin;\n                      break;\n                    case 'Outside':\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                        indentX = leftMargin + pageClientWidth - shapeWidth;\n                      }\n                      break;\n                    case 'Right':\n                      indentX = leftMargin + pageClientWidth - shapeWidth;\n                      break;\n                    case 'Inside':\n                      if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                        indentX = leftMargin + pageClientWidth - shapeWidth;\n                      }\n                      break;\n                    case 'None':\n                      break;\n                  }\n                } else {\n                  indentX = this.viewer.clientArea.x + horzPosition;\n                }\n                break;\n              case 'Character':\n                if (horzAlignment === 'Right' || horzAlignment === 'Center') {\n                  indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                } else {\n                  //Need to update this while layouting.**\n                  indentX = this.viewer.clientArea.x + horzPosition;\n                }\n                break;\n              case 'LeftMargin':\n                indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                break;\n              case 'RightMargin':\n                indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                break;\n              case 'InsideMargin':\n                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                  indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                } else {\n                  indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                }\n                break;\n              case 'OutsideMargin':\n                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                  indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                } else {\n                  indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                }\n                break;\n              default:\n                indentX = this.viewer.clientArea.x + horzPosition;\n                break;\n            }\n          }\n          //Update the floating item right position to the page right when floating item \n          //right position exceeds the page width and it wrapping style is not equal to  \n          // InFrontOfText and behind text and also vertical origin is not equal to paragraph.\n          if (paragraph && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind' && vertOrigin === 'Paragraph' && pageWidth < indentX + shapeWidth) {\n            indentX = pageWidth - shapeWidth;\n          }\n        }\n      }\n      if (paragraph && (vertOrigin === 'Paragraph' || vertOrigin === 'Line') && floatElement.textWrappingStyle !== \"InFrontOfText\" && floatElement.textWrappingStyle !== \"Behind\") {\n        if (this.documentHelper.compatibilityMode === 'Word2013') {\n          if (!paragraph.isInHeaderFooter) {\n            if (indentY + floatElement.height > this.viewer.clientArea.bottom) {\n              indentY = this.viewer.clientArea.bottom - floatElement.height;\n            }\n            if (indentY < sectionFormat.topMargin) {\n              indentY = sectionFormat.topMargin;\n            }\n          }\n        }\n      }\n    }\n    //}\n    return new Point(indentX, indentY);\n  };\n  Layout.prototype.getLeftMarginHorizPosition = function (leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n    var indentX = horzPosition;\n    switch (horzAlignment) {\n      case 'Center':\n        indentX = (leftMargin - shapeWidth) / 2;\n        break;\n      case 'Left':\n        indentX = 0;\n        break;\n      case 'Right':\n        indentX = leftMargin - shapeWidth;\n        break;\n      case 'None':\n        break;\n    }\n    if (indentX < 0 && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n      indentX = 0;\n    }\n    return indentX;\n  };\n  Layout.prototype.getRightMarginHorizPosition = function (pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n    var xPosition = pageWidth - rightMargin;\n    var indentX = xPosition + horzPosition;\n    switch (horzAlignment) {\n      case 'Center':\n        indentX = xPosition + (rightMargin - shapeWidth) / 2;\n        break;\n      case 'Left':\n        indentX = xPosition;\n        break;\n      case 'Right':\n        indentX = pageWidth - shapeWidth;\n        break;\n      case 'None':\n        break;\n    }\n    if ((indentX < 0 || indentX + shapeWidth > pageWidth) && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n      indentX = pageWidth - shapeWidth;\n    }\n    return indentX;\n  };\n  Layout.prototype.getVerticalPosition = function (paraItem, vertPosition, vertOrigin, textWrapStyle) {\n    var paragraph = paraItem.line.paragraph;\n    //ParagraphLayoutInfo paragraphLayoutInfo = (paragraph as IWidget).LayoutInfo as ParagraphLayoutInfo;\n    var shape = paraItem;\n    //WPicture pic = paraItem as WPicture;\n    var indentY = 0;\n    var topMargin = paragraph.associatedCell.y;\n    switch (vertOrigin) {\n      case 'Page':\n      case 'Margin':\n      case 'TopMargin':\n      case 'InsideMargin':\n      case 'BottomMargin':\n      case 'OutsideMargin':\n        indentY = topMargin + vertPosition;\n        break;\n      case 'Line':\n      case 'Paragraph':\n        var space = 0;\n        // if (shape) {\n        //     space = paragraph.paragraphFormat.afterSpacing;\n        // }\n        indentY = paragraph.y + vertPosition + space;\n        if (shape.textWrappingStyle == \"Square\") {\n          indentY = indentY <= paragraph.associatedCell.y ? paragraph.associatedCell.y : indentY;\n        }\n        break;\n      default:\n        indentY = this.viewer.clientActiveArea.y + vertPosition;\n        break;\n    }\n    return indentY;\n  };\n  Layout.prototype.getHorizontalPosition = function (width, paraItem, horzAlignment, horzOrigin, horzPosition, textWrapStyle, cellWid) {\n    var indentX = 0;\n    var paragraph = paraItem.line.paragraph;\n    // CellLayoutInfo cellLayoutInfo = (paragraph.OwnerTextBody as IWidget).LayoutInfo as CellLayoutInfo;\n    // ILayoutSpacingsInfo spacings = cellLayoutInfo as ILayoutSpacingsInfo;\n    var cell = paragraph.associatedCell;\n    var cellWidth = cellWid - cell.leftMargin - cell.rightMargin;\n    var cellInnerWidth = cell.cellFormat.cellWidth;\n    var marginLeft = cell.x;\n    var pageLeft = marginLeft - cell.leftMargin;\n    switch (horzOrigin) {\n      case 'Page':\n        {\n          indentX = horzPosition;\n          switch (horzAlignment) {\n            case 'Center':\n              indentX = pageLeft + (cellWidth - width) / 2;\n              break;\n            case 'Left':\n              indentX = pageLeft;\n              break;\n            case 'Right':\n              indentX = pageLeft + (cellWidth - width);\n              break;\n            case 'None':\n              indentX = pageLeft + horzPosition;\n              break;\n          }\n        }\n        break;\n      case 'Column':\n      case 'Margin':\n        {\n          switch (horzAlignment) {\n            case 'Center':\n              indentX = marginLeft + (cellInnerWidth - width) / 2;\n              break;\n            case 'Left':\n              indentX = marginLeft;\n              break;\n            case 'Right':\n              indentX = marginLeft + (cellInnerWidth - width);\n              break;\n            case 'None':\n              indentX = marginLeft + horzPosition;\n              break;\n          }\n        }\n        break;\n      default:\n        {\n          indentX = marginLeft + horzPosition;\n        }\n        break;\n    }\n    return indentX;\n  };\n  Layout.prototype.updateTableFloatPoints = function (table) {\n    if (table.wrapTextAround) {\n      var tableTotalWidth = table.getTableCellWidth();\n      var position = table.positioning;\n      var sectionFormat = table.bodyWidget.sectionFormat;\n      if (this.documentHelper.viewer instanceof WebLayoutViewer) {\n        if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Page' || position.horizontalOrigin === 'Column') {\n          if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n            this.viewer.clientActiveArea.x = this.viewer.clientArea.width - tableTotalWidth;\n          } else {\n            this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n          }\n        }\n      } else {\n        if (!(table.containerWidget instanceof TextFrame) && !table.isInsideTable) {\n          // Vertical position\n          if (position.verticalOrigin === 'Page') {\n            if (position.verticalAlignment === 'Top') {\n              this.viewer.clientActiveArea.y = 0;\n            } else if (position.verticalAlignment === 'Inside') {\n              this.viewer.clientActiveArea.y = 0;\n            } else if (isNullOrUndefined(position.verticalAlignment) || position.verticalAlignment === 'None') {\n              this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(position.verticalPosition);\n            }\n          } else if (position.verticalOrigin === 'Margin') {\n            if (position.verticalAlignment === 'Top') {\n              this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n            } else if (position.verticalAlignment === 'Inside') {\n              this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n            } else if (Math.round(position.verticalPosition) != 0 && !isNullOrUndefined(sectionFormat.topMargin)) {\n              this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin + position.verticalPosition);\n            } else {\n              this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(position.verticalPosition);\n            }\n          } else if (position.verticalOrigin === 'Paragraph') {\n            if (isNullOrUndefined(position.verticalAlignment) || position.verticalAlignment === 'None') {\n              this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n            }\n          }\n          if (position.horizontalOrigin === 'Page') {\n            if (position.horizontalAlignment === 'Left') {\n              this.viewer.clientActiveArea.x = 0;\n            } else if (position.horizontalAlignment === 'Inside') {\n              // TODO\n              this.viewer.clientActiveArea.x = 0;\n            } else if (position.horizontalAlignment === 'Right') {\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n            } else if (position.horizontalAlignment === 'Outside') {\n              // TODO\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n            } else if (position.horizontalAlignment === 'Center') {\n              this.viewer.clientActiveArea.x = (HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth) / 2;\n            }\n          } else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n            if (position.horizontalAlignment === 'Left') {\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n              if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n                this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x - HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n              }\n            } else if (position.horizontalAlignment === 'Inside') {\n              // TODO\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n            } else if (position.horizontalAlignment === 'Right') {\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - (HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n            } else if (position.horizontalAlignment === 'Outside') {\n              // TODO\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - (HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n            } else if (position.horizontalAlignment === 'Center') {\n              this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin) + (HelperMethods.convertPointToPixel(sectionFormat.pageWidth - sectionFormat.rightMargin - sectionFormat.leftMargin) - tableTotalWidth) / 2;\n            }\n          }\n          if (Math.round(position.horizontalPosition) > 0 || position.horizontalOrigin === 'Margin' && position.horizontalAlignment === 'Left') {\n            this.viewer.clientActiveArea.x += HelperMethods.convertPointToPixel(position.horizontalPosition);\n          }\n        } else if (table.isInsideTable) {\n          var ownerCell = table.containerWidget;\n          var cellFormat = ownerCell.cellFormat;\n          if (position.verticalOrigin === 'Page') {\n            this.viewer.clientActiveArea.y = ownerCell.y;\n            this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n          } else if (position.verticalOrigin === 'Margin') {\n            this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n            //Check whether the absolute table vertical position is top relative to the margin\n            if (this.viewer.clientActiveArea.y < ownerCell.y || position.verticalAlignment === 'Top') {\n              this.viewer.clientActiveArea.y = ownerCell.y;\n            }\n          } else {\n            if (this.viewer.clientActiveArea.y + HelperMethods.convertPointToPixel(position.verticalPosition) < ownerCell.y) {\n              this.viewer.clientActiveArea.y = ownerCell.y;\n            } else {\n              this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n            }\n          }\n          if (position.horizontalOrigin === 'Page') {\n            if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n              this.viewer.clientActiveArea.x = ownerCell.x;\n            } else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n              this.viewer.clientActiveArea.x = ownerCell.x + cellFormat.preferredWidth - tableTotalWidth;\n            }\n          } else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n            if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n              this.viewer.clientActiveArea.x = ownerCell.x + ownerCell.leftMargin;\n            } else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n              this.viewer.clientActiveArea.x = ownerCell.x + cellFormat.preferredWidth - (tableTotalWidth + ownerCell.rightMargin);\n            }\n          }\n          if (Math.round(position.horizontalPosition) > 0) {\n            this.viewer.clientActiveArea.x = ownerCell.x;\n            if (position.horizontalOrigin === 'Margin') {\n              this.viewer.clientActiveArea.x += ownerCell.leftMargin;\n            }\n            this.viewer.clientActiveArea.x += HelperMethods.convertPointToPixel(position.horizontalPosition);\n          }\n          if (position.horizontalAlignment === 'Center') {\n            this.viewer.clientActiveArea.x = cellFormat.preferredWidth / 2 - tableTotalWidth / 2;\n          }\n        }\n      }\n    }\n    table.x = this.viewer.clientActiveArea.x;\n    table.y = this.viewer.clientActiveArea.y;\n  };\n  Layout.prototype.isTocField = function (element) {\n    if (element instanceof FieldElementBox) {\n      var nextElement = element.nextNode;\n      if (element instanceof FieldElementBox && element.fieldType === 0 && nextElement instanceof TextElementBox && nextElement.text.trim().toLowerCase().indexOf('toc') !== -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  Layout.prototype.getTotalColumnSpan = function (row) {\n    var tableRow = row;\n    var totalColumnSpan = 0;\n    for (var i = 0; i < tableRow.childWidgets.length; i++) {\n      totalColumnSpan += tableRow.childWidgets[i].cellFormat.columnSpan;\n    }\n    return totalColumnSpan;\n  };\n  Layout.prototype.getMaximumRightCellBorderWidth = function (table) {\n    var highestBorderSize = 0;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      var cell = row.childWidgets[row.childWidgets.length - 1];\n      var cellBorder = cell.cellFormat.borders.right.lineWidth;\n      if (highestBorderSize < cellBorder) {\n        highestBorderSize = cellBorder;\n      }\n    }\n    return highestBorderSize;\n  };\n  Layout.prototype.getDefaultBorderSpacingValue = function (border, isBorderValueZero, tableHorizontalPosition) {\n    if (border == 0) {\n      if (this.documentHelper.compatibilityMode != 'Word2013' && tableHorizontalPosition == 'Center') {\n        border = 1.5;\n      } else {\n        border = 0.75;\n      }\n      return true;\n    }\n    return isBorderValueZero;\n  };\n  Layout.prototype.getMinimumWidthRequiredForTable = function (isBorderValueZero, tableHorizontalPosition, border) {\n    var minimumWidthRequired = 0;\n    //To fit the item right side of the Table Microsoft Word 2013 application and other version has different value based on border of the table and alignment of the table.\n    if (this.documentHelper.compatibilityMode == 'Word2013') {\n      if (tableHorizontalPosition == 'Center') {\n        if (isBorderValueZero) {\n          minimumWidthRequired = 18.5 + Math.round(0.75 / 2);\n        } else {\n          minimumWidthRequired = 18.5 + Math.round(border / 2);\n        }\n      } else {\n        if (isBorderValueZero) {\n          minimumWidthRequired = 18.5 + 0.75;\n        } else {\n          minimumWidthRequired = 18.5 + border;\n        }\n      }\n    } else {\n      if (tableHorizontalPosition == 'Center') {\n        if (isBorderValueZero) {\n          minimumWidthRequired = 19.25;\n        } else {\n          minimumWidthRequired = 18.5 + border / 2;\n        }\n      } else {\n        if (border == 0.25) {\n          minimumWidthRequired = 18.5;\n        } else {\n          minimumWidthRequired = 19.3;\n        }\n      }\n    }\n    return HelperMethods.convertPointToPixel(minimumWidthRequired);\n  };\n  Layout.prototype.shiftFloatingItemsFromTable = function (table, bodyWidget) {\n    if (table.containerWidget instanceof BodyWidget) {\n      for (var i = 0; i < table.containerWidget.floatingElements.length; i++) {\n        var shape = table.containerWidget.floatingElements[i];\n        if (!(shape instanceof TableWidget) && shape.paragraph.containerWidget instanceof TableCellWidget && shape.paragraph.containerWidget.ownerTable.containerWidget.ownerTable == table) {\n          bodyWidget.floatingElements.push(table.containerWidget.floatingElements[i]);\n          table.containerWidget.floatingElements.splice(table.containerWidget.floatingElements.indexOf(table.containerWidget.floatingElements[i]), 1);\n          this.shiftedFloatingItemsFromTable.push(shape);\n          i--;\n        }\n      }\n    }\n  };\n  return Layout;\n}();\nexport { Layout };","map":{"version":3,"names":["isNullOrUndefined","Dictionary","CharacterRangeType","FontScriptType","HelperMethods","Point","WrapPosition","WBorder","WBorders","WCharacterFormat","WParagraphFormat","WListLevel","BlockContainer","BlockWidget","BodyWidget","BookmarkElementBox","EditRangeEndElementBox","EditRangeStartElementBox","ElementBox","FieldElementBox","FieldTextElementBox","HeaderFooterWidget","ImageElementBox","LineWidget","ListTextElementBox","Margin","ParagraphWidget","Rect","TabElementBox","TableCellWidget","TableRowWidget","TableWidget","TextElementBox","Widget","CheckBoxFormField","DropDownFormField","ShapeElementBox","TextFrame","ContentControl","FootnoteElementBox","FootNoteWidget","ShapeBase","CommentCharacterElementBox","PageLayoutViewer","WebLayoutViewer","TextHelper","CHECK_BOX_FACTOR","Layout","documentHelper","islayoutFootnote","isMultiColumnDoc","allowLayout","isReplaceAll","isTextFormat","isSectionBreakCont","isReplacingAll","footHeight","existFootnoteHeight","isfootMove","footnoteHeight","isTableFootNote","isRelayout","isRelayoutneed","isOverlapFloatTable","isInitialLoad","isInsertFormField","fieldBegin","undefined","maxTextHeight","maxBaseline","maxTextBaseline","isFieldCode","isRtlFieldCode","isRTLLayout","currentCell","isFootnoteContentChanged","isEndnoteContentChanged","keepWithNext","is2013Justification","nextElementToLayout","endNoteHeight","isMultiColumnSplit","isMultiColumnLayout","skipUpdateContainerWidget","isIFfield","isLayoutWhole","isBidiReLayout","defaultTabWidthPixel","isRelayoutFootnote","isRelayoutOverlap","skipRelayoutOverlap","isWrapText","isYPositionUpdated","isXPositionUpdated","hasFloatingElement","isFootNoteLayoutStart","wrapPosition","shiftedFloatingItemsFromTable","isDocumentContainsRtl","layoutedFootnoteElement","prototype","isSameStyle","currentParagraph","isAfterSpacing","nextOrPrevSibling","nextWidget","previousWidget","paragraphFormat","contextualSpacing","isInsideTable","allowSpaceOfSameStyleInTable","compatibilityMode","index","updateFirstParagraphSpacingBasedOnContextualSpacing","associatedCell","childWidgets","length","updateLastParagraphSpacingBasedOnContextualSpacing","baseStyle","listFormat","listId","spaceAfterAuto","spaceBeforeAuto","paragraph","ownerCell","ownerRow","ownerTable","nextRenderedWidget","firstChild","previousRenderedWidget","checkOwnerTablePrevItem","ownerTablePrevSibling","prevCell","prevCelllastItem","name","nextCellFirstItem","nextCell","row","prevSibling","prevSibling_1","Object","defineProperty","get","owner","viewer","enumerable","configurable","layout","destroy","value","layoutItems","sections","isReLayout","isContinuousSection","_this","page","height","width","i","section","sectionFormat","numberOfColumns","nextSection","columnLayoutArea","setColumns","lastpage","pages","bodyWidget","bodyWidgets","previousSplitWidget","lastChild","isEndsWithPageBreak","isEndsWithColumnBreak","removedPages","splice","breakCode","pageHeight","pageWidth","createNewPage","clientY","clientActiveArea","y","clientHeight","section_1","getBodyWidget","height_1","getNextWidgetHeight","updateClientArea","push","addBodyWidget","pageIndex","i_1","prevPage","prevSectionIndex","sectionIndex","insertPage","layoutSection","layoutComments","comments","updateFieldElements","layoutType","layoutEndNoteElement","setTimeout","isScrollHandler","clearContent","updateScrollBars","commentReviewPane","block","nextBlock","prevBlock","tableFormat","preferredWidthType","allowAutoFit","calculateGrid","updateClientAreaForBlock","bodyIndex","containerWidget","indexInOwner","layoutBlock","getColumnBreak","splittedSection","getSplitWidgets","nextPage","splitBodyWidgetBasedOnColumn","firstBody","footnoteWidget","layoutfootNote","reLayoutMultiColumn","isFirstBlock","blockIndex","combineMultiColumnForRelayout","previousSection","isUpdatedClientArea","lineHeight","isEmpty","textHelper","getParagraphMarkSize","characterFormat","Height","firstLine","getMaxElementHeight","previousBlock","moveBlocksToNextPage","previousParagraph","columns","bottom","round","j","nextBodyWidget","indexOf","removeEmptyPages","clearBlockWidget","reLayoutMultiColumnBlock","splitSections","lastSection","blockToShift","firstSection","prevSection","isPreviousSplit","combineWidget","updateCellHeightInCombinedTable","equalWidth","previousStartIndex","selection","startOffset","previousEndIndex","endOffset","combineMultiColumn","layoutMultiColumnBody","select","lineCountInfo","getCountOrLine","totalHeight","lineCount","lineToBeSplit","Math","lineCountInfo_1","line","lineWidget","lineIndexInCell","moveToNextLine","table","rows","getParentTable","getParentRow","updateWidgetsToTable","tableWidget","rowWidget","nextRow","clearRowWidget","layoutRow","shiftLayoutedItems","lastBody","columnIndex","nonEqualBody","initialCount","finalCount","clientArea","updatePosition","skipPosition","Number","POSITIVE_INFINITY","clearTableWidget","isUpdatedList","listLevelNumber","body","updatedHeight","getHeight","getBookmarkMargin","children","element","margin","top","isSplit","totalNoOflines","count","skip","maxHeight","splitCountLine","lineMargin","getCountOrLineTable","maxSplitHeight","isNested","minCount","maxCount","minHeight","minCountCell","maxCountCell","cell","k","blocks","l","countInCell","i_2","maxCellHeight","minCellHeight","a","layoutHeaderFooter","headerFooterWidget","getCurrentPageHeaderFooter","parentHeader","updateHFClientArea","layoutHeaderFooterItems","clone","parentHeaderFooter","header","updateRevisionsToHeaderFooter","headerWidget","topMargin","boundingRectangle","floatingElements","textWrappingStyle","shiftItemsForVerticalAlignment","footer","footerWidget","floatingItem","verticalOrigin","yPosition","verticalPosition","diff","textFrame","updateHeaderFooterToParent","node","typeIndex","getHeaderFooter","headerFooterType","headersFooters","child","childWidge","lineWidge","childrens","removedIds","removeId","revision","revisionsInternal","revisions","updateRevisionRange","range","inline","linkFieldInHeaderFooter","widget","linkFieldInParagraph","linkFieldInTable","fieldType","fields","linkFieldCharacter","previousElement","firstBlock","comment","getCommentById","commentId","commentType","commentStart","commentEnd","commentsCollection","updateClientAreaLocation","pargaraph","isGridUpdated","type","shiftChildLocation","shiftTop","widgetTop","footerMaxHeight","max","childTop","childWidget","x","position","getFloatingItemPoints","marginTop","updateChildLocationForCellOrShape","shiftChildLocationForTableWidget","shiftChildLocationForTableRowWidget","shiftChildLocationForTableCellWidget","cellWidget","splitTextRangeByScriptType","splitLtrAndRtlText","combineconsecutiveRTL","layoutParagraph","nextBlockToLayout","checkAndRelayoutPreviousOverlappingBlock","layoutTable","updateTableYPositionBasedonTextWrap","tableY_1","tableRect_1","forEach","shape","shapeRect","considerShape","isIntersecting","distanceBottom","updateChildLocationForTable","cutFromTop","preivousBlock","startOverlapWidget","endOverlapWidget","paraRect","wrapTextAround","tableRect","getTableCellWidth","blockRect","layoutStartEndBlocks","addParagraphWidget","area","paragraphWidget","textAlignment","bidi","updateXPositionForEmptyParagraph","previousPara","clientX","hasOwnProperty","getParagraphMarkWidth","left","addLineWidget","isFirstElementWithPageBreak","isPageBreak","nextElement","text","String","fromCharCode","footnote","footNoteType","updateColumnIndex","clientWidth","updateFootnoteClientArea","splitFootNoteWidgetBasedOnColumn","footBody","newPara","getFootNoteBodyHeight","shiftChildWidgetInFootnote","height_2","sub","lineCountInfo_2","splitParagraph","nextBody","increase","startY","bodyWidgetHeight","getBodyWidgetHeight","multiColumnY","columnBody","checkParaHasField","hasField","fieldStacks","checkTableHasField","lineIndex","isFieldCodeBlock","isListLayout","isFirstElmIsparagraph","layoutListItems","layoutEmptyLineWidget","layoutFloatElements","previousLine","isFirstLine","firstLineIndent","convertPointToPixel","updateClientWidth","layoutLine","nextLine","updateWidgetToPage","isLayouted","clearLineMeasures","layoutShape","isHorizontalRule","moveToNextPage","updateShapeBaseLocation","sort","b","widthScale","containerWidth","getContainerWidth","updateClientAreaForTextBoxShape","moveElementFromNextLine","isNotEmptyField","padding","layoutElement","textElement","errorCollection","ischangeDetected","lineIndex_1","containerShape","trim","substring","elementIndex","copyFormat","m","rangeIndex","isEmptyField","isInHeaderFooter","editorModule","editorHistoryModule","isRedoing","footNoteReference","enableTrackChanges","constructRevisionFromID","formFieldData","formFields","layoutFieldCharacters","isLastLine","nextNode","fieldSeparator","moveFromNextPage","bookmarkType","bookmarks","containsKey","add","properties","columnFirst","parseInt","getCellUsingColumnIndex","rowIndex","isRenderBookmarkStart","bookmrkElement","reference","isRenderBookmarkAtEnd","isRenderBookmarkEnd","lastPara","getLastParagraph","lastLine","lastElement","columnLast","endRow","endCell","cellIndex","remove","currentUser","user","group","isRenderEditRangeStart","editRangeID","editRangeId","editRangeStart","isRenderEditRangeEnd","previousRow","previousCell","contentControlCollection","endPage","cCStart","contentControlProperties","hasValidElement","isContainsShapeAlone","highlightColor","splitSpaceInTextElementBox","isTocField","getFieldResult","startAt","handleEnterKey","checkAndSplitTabOrLineBreakCharacter","getTextSize","getTabWidth","adjustPosition","updateFieldText","cutClientWidth","splitElementForClientArea","checkLineWidgetWithClientArea","isLayout","layoutFootEndNoteElement","keepLinesTogether","findDiff","parseFloat","toFixed","textWrap","addElementToLine","currentLine","isElementMoved","addSplittedLineWidget","right","fieldBeginInternal","splitTextForClientArea","trimEndWidth","contentControl","previousLeft","previousTop","previousWidth","adjustedRect","adjustClientAreaBasedOnTextWrap","wrapDiff","getFirstElement","wrapPos","updateWrapPosition","previousWrapPos","abs","isFirstitemInPage","yposition","isTextFitBelow","rect","isNeedToWrapForTopAndBottom","currWidgetOwnerPara","elementBox","wrapOwnerIndex","wrapItemIndex","textWrappingBounds","allowOverlap","wrapCollectionIndex","floatingEntity","isTextRangeInTextBox","floatingItemOwnerPara","isLayoutInCell","floatingItemOwnerCell","currParaOwnerCell","isNeedToWrapForSquareTightAndThrough","isNeedToWrapForSquareTightAndThroughForTable","container","wrapIndex","wrappingStyle","floatingElemnt","isInTextBox","isNeedToWrapLeafWidget","IsNeedToWrap","getMinWidth","currTextRange","split","previousNode","minwidth","measureText","scriptType","Width","nextSibling","getNextSibling","nextSiblingText","getNextTextRangeWidth","nextSiblingTextRange","nextsibling","sizeNext","isNextSiblingSizeNeedToBeMeasure","isNextSibligSizeNeedToBeMeasure","isLeafWidgetNextSiblingIsTextRange","textRange","nextSiblingwidget","elementWidth","textInfo","isNeedDoIntermediateWrapping","remainingClientWidth","leafWidget","minimumWidthRequired","leftIndent","isFloatingItemOnLeft","minWidth","bounds","currentElementBox","ownerPara","yValue","layouter","isFirstItem","clientLayoutArea","positioning","isExistAfter","xPosition","distanceLeft","distanceTop","distanceRight","textWrappingType","rightIndent","listLeftIndent","paragraphLeftIndent","paragarphRightIndent","isnewline","listLevel","getListLevel","list","border","isBorderValueZero","borderThickness","tableHorizontalPosition","horizontalAlignment","getMaximumRightCellBorderWidth","getDefaultBorderSpacingValue","borders","lineWidth","isEntityFitInCurrentLine","getMinimumWidthRequiredForTable","topMarginValue","isPositionsUpdated","updateClientAreaForTextWrap","xposition","isUpdateClientArea","leftMinimumWidthRequired","rect1","leftMargin","prevY","adjustClientAreaBasedOnTextWrapForTable","floatingElement","tableWidth","isShape","wrappingBounds","tableHeight","rowFormat","lastNestedTable","getNestedTable","size","footnoteType","startat","initialFootNoteNumber","getFootEndNote","footNoteNumberFormat","footnoteCollection","initialEndNoteNumber","endnoteNumberFormat","endnoteCollection","positionchanged","footIndex","insertIndex","isFitted","isCreated","currentIndex","newParagraph","footnoteElement","totalPage","foot","endNote","lastPage","endnoteWidget","getNextValidElementForField","equals","char","indexOfAny","character","splitByLineBreakOrTab","splittedParagraph","currentElement","isNeedToLayoutShape","splitCurrentWidget","paragarph","cutFromLeft","splitTextElementWordByWord","checkAndUpdateFieldData","fieldEnd","hasFieldEnd","fieldCode","trimEnd","getFieldCode","startsWith","field","pop","seperator","checkBoxTextElement","skipformFieldLength","checked","setCheckBoxFontSize","dropDownTextElement","dropdownItems","selectedIndex","repeatChar","getEnSpaceCharacter","format","sizeType","fontSize","isEmptyLine","isShiftEnter","paraFormat","subWidth","whiteSpaceCount","canRenderParagraphBorders","canRenderBorder","paragraphMarkSize","beforeSpacing","getBeforeSpacing","isUpdateMarginForCurrentLine","isContainsRtl","shiftElementsForRTLLayouting","isParagraphStart","isParagraphEnd","getWidthAndSpace","getSubWidth","spaceCount","checkInbetweenShapeOverlap","isSectionBreak","lineSpacing","getLineSpacing","isNaN","bottomMargin","lineSpacingType","getAfterSpacing","lineStyle","skipTopBorder","space","skipBottomBorder","renderedElements","adjustPositionBasedOnTopAndBottom","isUpdate","getListById","clearListElementBox","layoutList","currentListLevel","numberFormat","listLevelPattern","updateListValues","getListNumber","isIosDevice","updateTextSize","followCharacter","tabWidth","addListLevels","abstractList","levels","val","fontFamily","getListLevelPattern","toString","restartLevel","splittedElementBox","columneBreak","movedElementBox","newLineWidget","isColumnBreak","layoutedElements","concat","skipClipImage","isInlineImage","splitByWord","getSplitIndexByWord","prevLength","trimStart","getWidth","characterRange","substr","endsWith","RightToLeft","spitTextElementByWhitespace","updateRevisionForSplittedElement","isMarkedForRevision","baselineOffset","splitErrorCollection","WordSplit","English","splittedBox","ignoreItems","ignoreOnceItems","splitByCharacter","atleastSpacing","afterSpacing","getTextSplitIndexByCharacter","splitWidth","measureTextExcludingSpaceAtEnd","splittedElement","item","isSplitted","isJustify","currentRevision","startIndex","paddingLeft","characterUptoWs","getTextIndexAfterSpace","splittedText","isSplitByHyphen","test","isSplitByWord","textWidth","characterUptoWS","slice","isUnicodeText","isWordFittedByJustification","checkPreviousElement","span","spiltBy","inlineIndex","remainder","newSpan","newText","maxDescent","updateLineWidget","skip2013Justification","measurement","BaselineOffset","totalSpaceCount","trimmedSpaceWidth","isEndsWithLineBreak","availableWidth","totalSpaceWidth","getTotalSpaceWidth","averageWidthOfSpace","avgAvailableLineWidthForSpace","diffFactor","widthForAdjustment","splitParagraphForMultiColumn","addSubWidth","isStarted","maxElementHeight","maxElementBottomMargin","maxElementTopMargin","elementLeft","subWidthInfo","alignElements","alignLineElements","i_3","indent","marginLeft","maxBaseLine","elementLeftMargin","i_4","updateChildWidgetLeft","updateShapeYPosition","widowControl","startLineIndex","updateClientAreaForNextBlock","isFirstBody","parawidget","overlapShape_1","lineY_1","getLineY","isInsideTable_1","emptyParaPosition_1","isFloatingElementPresent_1","lineRect","updatedFloatPosition","para","lineY","spaceHeight","spaceBaseline","isContainsImage","replace","elementHeight","isCellContentControl","isCheckBoxElement","contentControlWidgetType","isList","startBlock","blockInfo","alignBlockElement","splitRow","isDocumentLoaded","updateWholeListItems","nextColumn","getNextColumnByBodyWidget","nextParagraph","moveChildsToParagraph","footWidget","getFootNoteWidgetsOf","moveFootNotesToPage","getFootNoteHeight","removeChild","addRemoveFloatElementsFromBody","isImagePresent","lastBlock","block_1","srcParagraph","childStartIndex","getPreviousBlock","getFirstParagraphInCell","startRow","newTable","createTableWidget","isMoveCurrentBlock","temp","unshift","updateClientPositionForBlock","currentBlock","isClientAreaUpdated","addTableWidget","addTableRowWidget","updateChildLocationForRow","endBlock","startParagaraph","getFirstParagraphInFirstCell","isTableHasParaVerticalOrigin","isLastElement","removeSpace","heightType","getCellContentHeight","shiftFootnoteChildLocation","enableHeaderAndFooter","shiftFooterChildLocation","footerDistance","top_1","lastTextElement","index_1","lastIndexOf","clearInvalidList","abstractListId","abstractLists","lists","isAutoList","levelNumber","levelOverride","levelOverrides","renderedLevelOverrides","overrideListLevel","getAbstractListById","renderedLists","ClearSubListLevelValues","getListText","levelNumberTemp","getListStartValue","startVal","set","listAdv","listText","keys","levelKey","pattern","match","getListTextListLevel","isLegalStyleNumbering","getAsLetter","number","quotient","letter","listValue","customPattern","getAsRoman","toUpperCase","toLowerCase","getAsLeadingZero","localeIdAscii","getOrdinalTextInSpanish","getOrdinalText","getAsOrdinal","generateNumber","magnitude","numberstring","retval","ordinalString","charAt","numberToWords","isCardText","words","floor","unitsValue","tensValue","tensValue_ith","numberToSpanishWords","thousandCardinalValue","thousandOrdinalValue","cardinalHundredsValue","ordinalHundredsValue","tensValue_Ordinal","cardNumberFrom21to29Value","getOrdinalInSwedish","getOrdinalInCatalan","getOrdinalInDanish","getOrdinalInEnglish","levelOverrideAdv","level","getOverrideListLevel","fPosition","isCustomTab","tabs","getUpdatedTabs","tabBeforeLeftIndent","clientActiveX","tabStop","tabStopPosition","defaultTabWidth","breaked","tabPosition","tabInfo","getJustificationTabWidth","tabJustification","cnt","tab","tabLeader","tabText","getRightTabWidth","areaWidth","clientActiveWidth","nextIndex","totalClientWidth","clientActiveAreaWidth","justify","trimSpace","lineText","isBidi","subWidths","getSubWidthBasedOnTextWrap","renderElementBox","elementText","widthExcludeSpace","totalSubWidth","lineContent","z","info","getSubWidthInfo","nextWordWidth","availableLineWidth","widthInfo","effectiveWidth","normalWidth","justifyWidth","currentWidget","spaceWidth","lastWrapPositionWidth","wrappedSubWidth","dontUseHtmlParagraphAutoSpacing","before","alterLineSpacing","isParagraphFirstLine","isParagraphLastLine","lastLineWidget","lastInline","hyphenIndex","min","moveNextWidgetsToTable","currentRow","moveFromNext","currentTable","nextWidgets","addTableCellWidget","maxCellMarginTop","maxCellMarginBottom","prevColumnIndex","cellspace","cellFormat","containsMargins","rightMargin","hasValue","tableHolder","autofit","cellWidth","preferredWidth","getTableClientWidth","getCellWidth","columnSpan","cellSpacing","prevSpannedCellWidth","getPreviousSpannedCellWidth","leftBorderWidth","getCellLeftBorder","getLineWidth","rightBorderWidth","getCellRightBorder","linestyle","isBidiTable","isLeftStyleNone","isRightStyleNone","lastCell","isInsertTable","checkPreviousMargins","sizeInfo","minimumWidth","addWidgetToTable","tableCollection","rowCollection","footnotes","endRowWidget","isInitialLayout","startRowIndex","isRepeatRowHeader","prevWidget","rowWidgetIndex","footnoteWidgets","prevIndex","updateRowHeightBySpannedCell","updateRowHeightByCellSpacing","repeatHeaderRowTableWidget","getFootnoteBody","layoutFootnoteInSplittedRow","updateHeightForRowWidget","addEmptyFootNoteToBody","Array","isArray","getFootnoteHeightInternal","rowSpan","updateRowHeight","updateSpannedRowCollection","spannedRowCollection","prevRowWidget","mergedCellHeight","isRowSpanEnd","splittedCellWidgets","splittedCell","isVerticalMergedCellContinue","colIndex","splitWidgets","tableRowWidget","splittedWidget","isLastRow","footNoteCollection","isRowSpan","isFirstLineFitForRow","getSplittedWidgetForRow","insertSplittedCellWidgets","issplit","cellHeight","previousHeight","maximumCellWidgetHeight","getSplittedWidget","getSplittedWidgetForSpannedRow","updateWidgetLocation","count_1","cellWidget_1","getFootNoteHeightInLine","getFootnoteFromLine","tableWidgets","rowWidgets","rearrangeRow","rowHeight","getRowHeight","isHeader","headerRow","isAllowBreakAcrossPages","allowBreakAcrossPages","moveRowToNextTable","footnoteElements","continueHeader","headerHeight","isInsertSplittedWidgets","isTableInsert","updateWidgetsToPage","index_2","rowToMove","keepNext","isTableFirstRow","removeTable","prev","curretTable","shiftFloatingItemsFromTable","insertHeaderRow","bottomBorderWidth","getMaxTopCellMargin","getMaxBottomCellMargin","topBorderWidth","updateClientAreaForCell","block_2","getHeader","getHeaderHeight","currentRenderingPage","flag","row_1","getHeaderHeightForSpannedRow","updateWidgetToRow","isUpdateVerticalPosition","cellspacing","currentRowWidgetIndex","rowSpanWidgetEndIndex","splitSpannedCellWidget","spanEndRowWidget","childWidget_1","updateHeightForCellWidget","visiblePages","updateCellVerticalPosition","updateHeightForTableWidget","isSplittedCell","previousRowIndex","insertRowSpannedWidget","length_1","insertEmptySplittedCellWidget","emptyCellWidget","createCellWidget","splitMinimalWidget","nestedCount","tableCellWidget","isCellSplit","splittedPara","getSplittedWidgetForPara","tableCol","splittedTable","getSplittedWidgetForTable","isContainInsideTable","lineBottom","moveEntireBlock","rowBottom","splittedRow","allowRowBreakAcrossPages","isFirstLineFitForPara","paraWidget","cellwidget","isFirstLineFitInShiftWidgets","isFirstLineFitForTable","isFit","isFirstLineFitForCell","spacing","skipHeight","prevBodyWidgetFloatingElements","isRowMovedToNextTable","prevClientActiveAreaX","previousBodyWidget","isUpdateToTop","displacement","getDisplacement","updateCellContentVerticalPosition","location","updateShapeInsideCell","updateTableWidgetLocation","floatElement","cellContentHeight","verticalAlignment","isDisplacement","contentHeight","cellY","withShapeContentHeight","withShapeBottom","considerShapeHeight","considerAsTop","totalShapeHeight","getFloatingItemsHeight","shapeBottom","paraBottom","layoutInCell","considerPositionTableHeight","nestedWrapTable","blockWidget","getTableLeftBorder","getTableRightBorder","getTableTopBorder","getTableBottomBorder","getCellDiagonalUpBorder","tableCell","diagonalUpBorder","cellBorder","diagonalUp","getCellDiagonalDownBorder","diagonalDownBorder","diagonalDown","getTableWidth","rowWidth","layoutNextItemsBlock","blockAdv","isFootnoteReLayout","updateNextBlockList","isFootnoteElementRemoved","floatingElementLength","isShiftingEnabled","isInsertingTOC","updateContainerWidget","updateListItemsTillEnd","updateClientAreaForLine","startLineWidget","getTop","reLayoutParagraph","elementBoxIndex","isSkip","layoutBodyWidgetCollection","reLayoutTable","reLayoutLine","reLayoutRow","updateHeaderFooterClientAreaWithTop","isBlockInHeader","block_3","shiftTableWidget","block_4","yPos","getYPosition","clearFootnoteReference","updateClientHeight","startPage","footNoteWidget","clearPosition","clearHeight","clearGrid","clearCellWidget","shiftNextWidget","isSkipShifting","isLayoutEnabled","curretBlock","checkAndGetBlock","prevBodyWidget","newBodyWidget","footWidgets","prevPara","shiftNextWidgets","buildTableColumns","tableView","updateClientAreaTopOrLeft","clientActiveAreaForTableWrap","clientAreaForTableWrap","updateClientAreaForWrapTable","updateTableFloatPoints","tables","beforeLayout","clienactare","tableLefts","create","layoutedTable","layoutedRow","shiftWidgetForRtlTable","isRowLayout","isNestedTable","updateExistingFootnoteHeight","updateClientAreaForRow","layoutCell","startPosition","endPosition","adjacentStartPosition","adjacentEndPosition","getAdjacentRowCell","cellStartPos","cellEndPos","adjCells","columnLength","adjRow","prevCellEndPos","prevCellEndIndex","colSpan","gridBefore","beforeWidth","adjCell","adjCellStartPos","adjCellEndPos","adjCellEndIndex","gridAfter","prevRowAdjCell","getVerticalMergeStartCell","prevRowAdjCellEndPos","adjCellColumnSpan","gridBeforeWidth","alignTablesRowByRow","tableAlignment","borderWidth","getCellBottomBorder","prevRow","getCellTopBorder","updateTopBorders","currentBaseHistoryInfo","action","updatedTopBorders","cellTopBorder","isBorderDefined","horizontal","prevCellBottomBorder","getBorderBasedOnPriority","reLayout","isMultiColumnShift","checkAndShiftEndnote","lastbody","isSectionEndsWithColumnBreak","reLayoutOrShiftWidgets","lastPage_1","lastPageLastPara","firstPage","updateSectionIndex","enableLockAndEdit","selectionModule","end","regex","prevPageNum","isRealyoutList","isNeedToRelayout","updateContainerForTable","shiftWidgetsBlock","updateRenderedListItems","shiftWidgetsForPara","shiftWidgetsForTable","bodywid","prevBodyObj","getBodyWidgetOfPreviousBlock","skipFootNoteHeight","shiftToPreviousWidget","updateFloatingElementPosition","updateClientAreaByWidget","isFitInClientArea","isPageBreakInsideField","createOrGetNextBodyWidget","isSplittedToNewPage","splitWidget","k_1","isFieldElement","getFootNotesOfBlock","getFootNotesWidgetsInLine","getFootNoteWidgetsBy","isShifting","k_2","blockfootnoteWidgets","f","getFootNodeWidgetsToShiftToPage","splittedWidgets","footNoteWidgets","toBodyWidget","fromBodyWidget","isClearHeight","shiftRowWidget","shiftCellWidget","footheight","updateFootnoteToBody","shiftParagraphWidget","k_3","prevObj","tempClientAreaX","updateVerticalPositionToTop","combinedTable","isUpdateTop","tablewidget","paragraphView","getMaximumLineHeightToSplit","footNoteInFirstLine","widgetIndex","updateParagraphWidgetInternal","line_1","activeArea","paragraphHeight","footNoteIndex","check","childLength","fromPage","toPage","nextColumnBody","createOrGetNextColumnBody","isLineInFootNote","footNotes","footContent","n","newParagraphWidget","destroyInternal","shiftFloatingElements","destroyAndScroll","scrollToBottom","moveFootnoteFromLastBlock","sectionBreakContinuous","moveToNextColumnByBodyWidget","columnWidth","createSplitBody","_i","child_1","obj","newBody","fromBody","isSkipList","lineToLayout","isFootNoteInsert","newBodyWidget_1","isEndnoteElementRemoved","isSelectionChangedOnMouseMoved","isContainsRTL","bdo","isRTLText","paraBidi","textRangeBidi","hasTextRangeBidi","isContainsRTLText","characterRangeTypes","lineElementsBidiValues","Tab","isRightToLeft","isStartMark","isStartMarker","isEndMark","isEndMarker","nextltWidget","getNextValidWidget","LeftToRight","rtlStartIndex","isPrevLTRText","updateCharacterRange","isNumberNonReversingCharacter","Error","reorderedWidgets","reorderElements","hasValueWithParent","ch","charCodeAt","isNumberReverseLangForSlash","localeIdBidi","isNumberReverseLangForOthers","lang","layoutedWidgets","endIndex","previousIndex","fontFamilyBidi","charArray","reverseArray","reverse","joinArray","join","listElementsBidiValues","lastItemIndexWithoutRTLFlag","consecutiveRTLCount","consecutiveNumberCount","reorderedElements","prevCharType","prevBidi","isInsertWordSplitToLeft","shiftLayoutFloatingItems","indentX","indentY","headerDistance","pageClientWidth","pageClientHeight","mIsYPositionUpdated","textWrapStyle","vertOrigin","horzOrigin","horizontalOrigin","horzAlignment","vertAlignment","verticalPercent","verticalRelativePercent","horizontalPercent","horizontalRelativePercent","shapeHeight","shapeWidth","vertPosition","horzPosition","horizontalPosition","heightPercent","heightRelativePercent","widthPercent","widthRelativePercent","autoShape","autoShapeType","getVerticalPosition","getHorizontalPosition","isXPositionUpated","getLeftMarginHorizPosition","getRightMarginHorizPosition","paraItem","cellWid","cellInnerWidth","pageLeft","tableTotalWidth","getTotalColumnSpan","tableRow","totalColumnSpan","highestBorderSize"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/viewer/layout.js"],"sourcesContent":["/* eslint-disable */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { CharacterRangeType, FontScriptType } from '../../base/types';\nimport { HelperMethods, Point, WrapPosition } from '../editor/editor-helper';\nimport { WBorder, WBorders, WCharacterFormat, WParagraphFormat } from '../format/index';\nimport { WListLevel } from '../list/list-level';\nimport { BlockContainer, BlockWidget, BodyWidget, BookmarkElementBox, EditRangeEndElementBox, EditRangeStartElementBox, ElementBox, FieldElementBox, FieldTextElementBox, HeaderFooterWidget, ImageElementBox, LineWidget, ListTextElementBox, Margin, ParagraphWidget, Rect, TabElementBox, TableCellWidget, TableRowWidget, TableWidget, TextElementBox, Widget, CheckBoxFormField, DropDownFormField, ShapeElementBox, TextFrame, ContentControl, FootnoteElementBox, FootNoteWidget, ShapeBase, CommentCharacterElementBox } from './page';\nimport { PageLayoutViewer, WebLayoutViewer } from './viewer';\nimport { TextHelper } from './text-helper';\n// Check box character is rendered smaller when compared to MS Word\n// So, mutiplied the font side by below factor to render check box character large.\nvar CHECK_BOX_FACTOR = 1.35;\n/**\n * @private\n */\nvar Layout = /** @class */ (function () {\n    function Layout(documentHelper) {\n        /**\n         * @private\n         */\n        this.islayoutFootnote = false;\n        /**\n         * @private\n         */\n        this.isMultiColumnDoc = false;\n        /**\n         * @private\n         */\n        this.allowLayout = true;\n        /**\n         * @private\n         */\n        this.isReplaceAll = false;\n        /**\n         * @private\n         */\n        this.isTextFormat = false;\n        /**\n        * @private\n        */\n        this.isSectionBreakCont = false;\n        /**\n         * @private\n         */\n        this.isReplacingAll = false;\n        /**\n         * @private\n         */\n        this.footHeight = 0;\n        /**\n         * @private\n         */\n        this.existFootnoteHeight = 0;\n        /**\n         * @private\n         */\n        this.isfootMove = false;\n        /**\n         * @private\n         */\n        this.footnoteHeight = 0;\n        /**\n         * @private\n         */\n        this.isTableFootNote = false;\n        /**\n         * @private\n         */\n        this.isRelayout = false;\n        /**\n         * @private\n         */\n        this.isRelayoutneed = false;\n        /**\n         * @private\n         */\n        this.isOverlapFloatTable = false;\n        this.isInitialLoad = true;\n        /**\n          * @private\n          */\n        this.isInsertFormField = false;\n        this.fieldBegin = undefined;\n        this.maxTextHeight = 0;\n        this.maxBaseline = 0;\n        this.maxTextBaseline = 0;\n        this.isFieldCode = false;\n        this.isRtlFieldCode = false;\n        this.isRTLLayout = false;\n        this.currentCell = undefined;\n        this.isFootnoteContentChanged = false;\n        this.isEndnoteContentChanged = false;\n        this.keepWithNext = false;\n        this.is2013Justification = false;\n        this.nextElementToLayout = undefined;\n        this.endNoteHeight = 0;\n        this.isMultiColumnSplit = false;\n        this.isMultiColumnLayout = false;\n        this.skipUpdateContainerWidget = false;\n        this.isIFfield = false;\n        this.isLayoutWhole = false;\n        /**\n         * @private\n         */\n        this.isBidiReLayout = false;\n        /**\n         * @private\n         */\n        this.defaultTabWidthPixel = 48;\n        /**\n         * @private\n         */\n        this.isRelayoutFootnote = false;\n        this.isRelayoutOverlap = false;\n        this.skipRelayoutOverlap = false;\n        this.isWrapText = false;\n        this.isYPositionUpdated = false;\n        this.isXPositionUpdated = false;\n        this.hasFloatingElement = false;\n        this.isFootNoteLayoutStart = false;\n        this.wrapPosition = [];\n        this.shiftedFloatingItemsFromTable = [];\n        this.isDocumentContainsRtl = false;\n        this.layoutedFootnoteElement = [];\n        this.documentHelper = documentHelper;\n    }\n    Layout.prototype.isSameStyle = function (currentParagraph, isAfterSpacing) {\n        var nextOrPrevSibling = undefined;\n        if (isAfterSpacing) {\n            if (currentParagraph.nextWidget instanceof ParagraphWidget) {\n                nextOrPrevSibling = currentParagraph.nextWidget;\n            }\n        }\n        else {\n            if (currentParagraph.previousWidget instanceof ParagraphWidget) {\n                nextOrPrevSibling = currentParagraph.previousWidget;\n            }\n        }\n        if (isNullOrUndefined(nextOrPrevSibling)) {\n            //Need to skip contextual spacing behavior when document is not Word 2013 and paragraph preserved inside the table cell with AllowSpaceOfSameStyleInTable compatiblity options.\n            if (currentParagraph.paragraphFormat.contextualSpacing && (currentParagraph.isInsideTable ? (!this.documentHelper.allowSpaceOfSameStyleInTable || this.documentHelper.compatibilityMode === 'Word2013') : false)) {\n                if (currentParagraph.index === 0) {\n                    nextOrPrevSibling = this.updateFirstParagraphSpacingBasedOnContextualSpacing(currentParagraph, isAfterSpacing);\n                }\n                else if (currentParagraph.index === currentParagraph.associatedCell.childWidgets.length - 1) {\n                    nextOrPrevSibling = this.updateLastParagraphSpacingBasedOnContextualSpacing(currentParagraph);\n                    if (nextOrPrevSibling === currentParagraph) {\n                        return true;\n                    }\n                }\n            }\n            if (isNullOrUndefined(nextOrPrevSibling)) {\n                return false;\n            }\n        }\n        if (nextOrPrevSibling instanceof ParagraphWidget && currentParagraph.paragraphFormat.baseStyle === nextOrPrevSibling.paragraphFormat.baseStyle && (currentParagraph.isInsideTable ? !this.documentHelper.allowSpaceOfSameStyleInTable : true)) {\n            if (currentParagraph.paragraphFormat.listFormat.listId >= 0 && nextOrPrevSibling.paragraphFormat.listFormat.listId >= 0) {\n                if (!currentParagraph.paragraphFormat.contextualSpacing) {\n                    if (isAfterSpacing && currentParagraph.paragraphFormat.spaceAfterAuto) {\n                        return true;\n                    }\n                    else if (!isAfterSpacing && currentParagraph.paragraphFormat.spaceBeforeAuto) {\n                        return true;\n                    }\n                }\n            }\n            return currentParagraph.paragraphFormat.contextualSpacing;\n        }\n        return false;\n    };\n    Layout.prototype.updateFirstParagraphSpacingBasedOnContextualSpacing = function (paragraph, isAfterSpacing) {\n        var ownerCell = paragraph.associatedCell;\n        var ownerRow = ownerCell.ownerRow;\n        var ownerTable = ownerRow.ownerTable;\n        var nextOrPrevSibling;\n        if (isAfterSpacing) {\n            nextOrPrevSibling = isNullOrUndefined(paragraph.nextRenderedWidget) ? (!isNullOrUndefined(ownerCell.nextRenderedWidget) ? ownerCell.nextRenderedWidget.firstChild : undefined) : paragraph.nextRenderedWidget;\n        }\n        else {\n            nextOrPrevSibling = isNullOrUndefined(paragraph.previousRenderedWidget) ? (!isNullOrUndefined(ownerCell.previousRenderedWidget) ? ownerCell.previousRenderedWidget.firstChild : undefined) : paragraph.previousRenderedWidget;\n        }\n        if (ownerCell.index === 0 && paragraph.index === 0) {\n            if (ownerRow.index === 0) {\n                if (ownerTable.isInsideTable && ownerTable.index == 0) {\n                    nextOrPrevSibling = this.checkOwnerTablePrevItem(ownerTable, paragraph);\n                }\n                else {\n                    //If paragraph is preserved in first row first cell means, need to check owner table previous sibling.\n                    var ownerTablePrevSibling = ownerTable.previousRenderedWidget;\n                    return ownerTablePrevSibling;\n                }\n            }\n            else {\n                return nextOrPrevSibling;\n            }\n        }\n        else if (paragraph.index === 0 && !isAfterSpacing) {\n            //If para is first item in any cell excluding first cell, need to check previous cell last item.\n            var prevCell = ownerRow.childWidgets[ownerCell.index - 1];\n            var prevCelllastItem = prevCell.childWidgets[prevCell.childWidgets.length - 1];\n            //if previous cell last item is table means skip before spacing value no need to check any paragraph styles.\n            if (prevCelllastItem instanceof TableWidget && paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                return paragraph;\n            }\n        }\n        return nextOrPrevSibling;\n    };\n    Layout.prototype.updateLastParagraphSpacingBasedOnContextualSpacing = function (paragraph) {\n        var ownerCell = paragraph.associatedCell;\n        var ownerRow = ownerCell.ownerRow;\n        var nextCellFirstItem;\n        if (ownerCell.index === ownerRow.childWidgets.length - 1 && paragraph.index === ownerCell.childWidgets.length - 1) {\n            if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                //If para preserved in last item in cell and cell is last cell in current row means its after spacing value not considered.\n                return paragraph;\n            }\n        }\n        else if (paragraph.index === ownerCell.childWidgets.length - 1) {\n            //If current para is last item in current cell then need to check next cell first item.\n            var nextCell = ownerRow.childWidgets[ownerCell.index + 1];\n            nextCellFirstItem = nextCell.firstChild;\n            //If next cell first item is table then need to check inner table first para.\n            //This is applicable for multiple nested table so when first item is table it try to get its first paragraph.\n            while (nextCellFirstItem instanceof TableWidget) {\n                nextCellFirstItem = nextCellFirstItem.childWidgets[0].childWidgets[0].childWidgets[0];\n            }\n        }\n        return nextCellFirstItem;\n    };\n    Layout.prototype.checkOwnerTablePrevItem = function (ownerTable, paragraph) {\n        var row = ownerTable.associatedCell.ownerRow;\n        var prevSibling;\n        if (row.index > 0) {\n            if (paragraph.paragraphFormat.baseStyle.name === \"Normal\" && paragraph.paragraphFormat.listFormat.listId < 0) {\n                return paragraph;\n            }\n        }\n        else {\n            if (row.ownerTable.isInsideTable && row.ownerTable.index === 0) {\n                this.checkOwnerTablePrevItem(row.ownerTable, paragraph);\n            }\n            else {\n                var prevSibling_1 = row.ownerTable.previousRenderedWidget;\n                return prevSibling_1;\n            }\n        }\n        return prevSibling;\n    };\n    Object.defineProperty(Layout.prototype, \"viewer\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layout.prototype.layout = function () {\n        // Todo: Need to handle complete document layout(relayout).\n        //const page: Page = this.documentHelper.pages[0];\n        //const body: BodyWidget = page.bodyWidgets[0];\n    };\n    /**\n     * Releases un-managed and - optionally - managed resources.\n     *\n     * @returns {void}\n     */\n    Layout.prototype.destroy = function () {\n        this.documentHelper = undefined;\n        this.value = undefined;\n        this.allowLayout = undefined;\n        this.isInitialLoad = undefined;\n        this.fieldBegin = undefined;\n        this.maxTextHeight = undefined;\n        this.maxBaseline = undefined;\n        this.maxTextBaseline = undefined;\n        this.isFieldCode = undefined;\n        this.footnoteHeight = undefined;\n        this.isMultiColumnDoc = undefined;\n        this.isIFfield = undefined;\n    };\n    Layout.prototype.layoutItems = function (sections, isReLayout, isContinuousSection) {\n        var _this = this;\n        var page;\n        var height = 0;\n        var width = 0;\n        for (var i = 0; i < sections.length; i++) {\n            var section = sections[i];\n            if (section.sectionFormat.numberOfColumns > 1) {\n                this.isMultiColumnDoc = true;\n            }\n            var nextSection = sections[i + 1];\n            this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n            var lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n            var bodyWidget = void 0;\n            if (!isNullOrUndefined(lastpage) && !isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1]) && lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].childWidgets.length === 0 && !isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget)) {\n                bodyWidget = lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].previousSplitWidget;\n            }\n            /* eslint-disable-next-line max-len */\n            if (i > 0 && !isNullOrUndefined(bodyWidget) && !isNullOrUndefined(bodyWidget.lastChild) && !(bodyWidget.lastChild instanceof TableWidget) && ((this.documentHelper.compatibilityMode === 'Word2013' && bodyWidget.lastChild.isEndsWithPageBreak || bodyWidget.lastChild.isEndsWithColumnBreak)) && lastpage.bodyWidgets[0].childWidgets.length === 0) {\n                var removedPages = this.documentHelper.pages.splice(this.documentHelper.pages.length - 1, 1);\n                removedPages[0].destroy();\n                lastpage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n            }\n            if ((i === 0 && !isContinuousSection) || (i !== 0 && (isNullOrUndefined(section.sectionFormat.breakCode) || section.sectionFormat.breakCode === 'NewPage' || height !== section.sectionFormat.pageHeight || width !== section.sectionFormat.pageWidth || (!isNullOrUndefined(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].lastChild) && lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1].lastChild.isEndsWithPageBreak)))) {\n                page = this.viewer.createNewPage(section);\n            }\n            else {\n                var clientY = this.documentHelper.viewer.clientActiveArea.y;\n                var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n                if (isContinuousSection) {\n                    var section_1 = this.getBodyWidget(lastpage.bodyWidgets[lastpage.bodyWidgets.length - 1], true);\n                    var height_1 = this.getNextWidgetHeight(section_1);\n                    this.viewer.updateClientArea(section_1, section_1.page);\n                    clientHeight = this.viewer.clientActiveArea.height - (height_1 - this.viewer.clientActiveArea.y);\n                    clientY = height_1;\n                    isContinuousSection = false;\n                }\n                //if (i - 1 > 0) {\n                page = lastpage;\n                //}\n                page.bodyWidgets.push(section);\n                page.bodyWidgets[page.bodyWidgets.length - 1].page = page;\n                this.documentHelper.viewer.updateClientArea(section, page);\n                this.documentHelper.viewer.clientActiveArea.y = clientY;\n                this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n            }\n            height = section.sectionFormat.pageHeight;\n            width = section.sectionFormat.pageWidth;\n            this.addBodyWidget(this.viewer.clientActiveArea, section);\n            if (this.documentHelper.pages.length > 1) {\n                var pageIndex = 0;\n                for (var i_1 = 0; i_1 < this.documentHelper.pages.length; i_1++) {\n                    var prevPage = this.documentHelper.pages[i_1];\n                    var prevSectionIndex = prevPage.sectionIndex;\n                    var index = section.index;\n                    if (prevSectionIndex > index || prevPage === page) {\n                        break;\n                    }\n                    pageIndex++;\n                }\n                if (pageIndex < this.documentHelper.pages.length - 1) {\n                    this.documentHelper.insertPage(pageIndex, page);\n                }\n            }\n            this.layoutSection(section, 0, nextSection);\n        }\n        if (!isReLayout) {\n            this.layoutComments(this.documentHelper.comments);\n        }\n        this.updateFieldElements();\n        if (this.documentHelper.owner.layoutType === 'Pages') {\n            this.layoutEndNoteElement();\n        }\n        /* tslint:disable:align */\n        setTimeout(function () {\n            if (_this.documentHelper) {\n                _this.documentHelper.isScrollHandler = true;\n                // if (this.documentHelper.owner.isSpellCheck && this.documentHelper.owner.spellChecker.enableOptimizedSpellCheck) {\n                //     this.documentHelper.triggerElementsOnLoading = true;\n                // }\n                _this.documentHelper.clearContent();\n                _this.viewer.updateScrollBars();\n                _this.documentHelper.isScrollHandler = false;\n                _this.isInitialLoad = false;\n            }\n        }, 50);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.layoutComments = function (comments) {\n        if (!isNullOrUndefined(comments)) {\n            this.viewer.owner.commentReviewPane.layoutComments();\n        }\n    };\n    Layout.prototype.layoutSection = function (section, index, nextSection) {\n        var block = section.firstChild;\n        var nextBlock;\n        var prevBlock;\n        do {\n            if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit) {\n                block.calculateGrid();\n            }\n            if (!isNullOrUndefined(block)) {\n                this.viewer.updateClientAreaForBlock(block, true, undefined, true, true);\n                var bodyIndex = block.containerWidget.indexInOwner;\n                nextBlock = this.layoutBlock(block, index);\n                index = 0;\n                this.viewer.updateClientAreaForBlock(block, false);\n                prevBlock = block;\n                block = nextBlock;\n            }\n        } while (block);\n        block = section.firstChild;\n        if (this.viewer instanceof PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !isNullOrUndefined(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || (section.sectionIndex === section.page.bodyWidgets[0].sectionIndex))) {\n            if (this.getColumnBreak(section)) {\n                var splittedSection = section.getSplitWidgets();\n                var bodyWidget = splittedSection[splittedSection.length - 1];\n                if (!isNullOrUndefined(section.page.nextPage)) {\n                    this.splitBodyWidgetBasedOnColumn(bodyWidget);\n                }\n                else {\n                    var firstBody = this.getBodyWidget(bodyWidget, true);\n                    this.viewer.updateClientArea(firstBody, firstBody.page);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                }\n            }\n            else {\n                if (!isNullOrUndefined(section.page.nextPage)) {\n                    section = this.documentHelper.pages[this.documentHelper.pages.length - 1].bodyWidgets[0];\n                }\n                this.splitBodyWidgetBasedOnColumn(section);\n            }\n        }\n        var page;\n        if (block && block.bodyWidget && block.bodyWidget.page) {\n            page = block.bodyWidget.page;\n        }\n        while (page) {\n            if (page.footnoteWidget) {\n                this.layoutfootNote(page.footnoteWidget);\n                page = page.nextPage;\n            }\n            else {\n                page = page.nextPage;\n            }\n        }\n        page = undefined;\n        block = undefined;\n    };\n    /**\n     * @private\n     *\n     */\n    Layout.prototype.reLayoutMultiColumn = function (section, isFirstBlock, blockIndex) {\n        this.isInitialLoad = true;\n        section = section.getSplitWidgets()[0];\n        this.combineMultiColumnForRelayout(section);\n        if (section.sectionFormat.numberOfColumns > 1) {\n            this.isMultiColumnDoc = true;\n        }\n        this.isMultiColumnSplit = false;\n        var previousSection = section.previousRenderedWidget;\n        var nextSection = section.nextRenderedWidget;\n        var isUpdatedClientArea = false;\n        // Section's Y position is not updated properly when the two sections combined and layouted.\n        if (!isFirstBlock && !isNullOrUndefined(section.firstChild) && section.firstChild instanceof ParagraphWidget && section.y !== section.firstChild.y) {\n            section.y = section.firstChild.y;\n        }\n        if (isFirstBlock && nextSection && section.page !== nextSection.page && section.firstChild instanceof ParagraphWidget) {\n            var paragraph = section.firstChild;\n            var lineHeight = 0;\n            if (paragraph.isEmpty()) {\n                lineHeight = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat).Height;\n            }\n            else {\n                var firstLine = paragraph.childWidgets[0];\n                lineHeight = this.getMaxElementHeight(firstLine);\n            }\n            var previousBlock = paragraph.previousRenderedWidget;\n            if (section.y === this.viewer.clientActiveArea.y && lineHeight > this.viewer.clientActiveArea.height) {\n                previousBlock = isNullOrUndefined(previousBlock) ? paragraph : previousBlock;\n                this.moveBlocksToNextPage(previousBlock);\n                this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n                this.viewer.updateClientArea(section, section.page);\n                isUpdatedClientArea = true;\n            }\n        }\n        else if (!isNullOrUndefined(previousSection) && previousSection.page !== section.page && section.firstChild instanceof ParagraphWidget && previousSection.lastChild instanceof ParagraphWidget) {\n            var previousParagraph = previousSection.lastChild;\n            var paragraph = section.firstChild;\n            if (section instanceof BodyWidget && previousSection.lastChild && previousParagraph instanceof ParagraphWidget && previousSection.sectionFormat.breakCode === 'NoBreak' && section.page.index !== previousSection.page.index && section.index !== previousSection.index) {\n                var bodyWidget = previousSection;\n                if (bodyWidget.sectionFormat.columns.length > 1) {\n                    bodyWidget = this.getBodyWidget(bodyWidget, true);\n                }\n                var bottom = HelperMethods.round((this.getNextWidgetHeight(bodyWidget) + paragraph.height), 2);\n                // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n                if (!previousSection.lastChild.isEndsWithPageBreak && !previousSection.lastChild.isEndsWithColumnBreak\n                    && bottom <= HelperMethods.round(this.viewer.clientActiveArea.bottom, 2)) {\n                    var page = previousSection.page;\n                    var nextPage = section.page;\n                    for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n                        var nextBodyWidget = nextPage.bodyWidgets[j];\n                        nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n                        page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n                        nextBodyWidget.page = page;\n                        j--;\n                    }\n                    section.y = this.viewer.clientActiveArea.y;\n                    this.documentHelper.removeEmptyPages();\n                }\n            }\n        }\n        if (!isUpdatedClientArea) {\n            this.viewer.columnLayoutArea.setColumns(section.sectionFormat);\n            this.viewer.updateClientArea(section, section.page);\n            this.viewer.clientActiveArea.height -= section.y - this.viewer.clientActiveArea.y;\n            this.viewer.clientActiveArea.y = section.y;\n        }\n        this.addBodyWidget(this.viewer.clientActiveArea, section);\n        this.clearBlockWidget(section.childWidgets, true, true, true);\n        this.isMultiColumnLayout = true;\n        this.reLayoutMultiColumnBlock(section, nextSection, blockIndex);\n        this.isMultiColumnLayout = false;\n        this.isInitialLoad = false;\n        var splitSections = section.getSplitWidgets();\n        var lastSection = splitSections[splitSections.length - 1];\n        var firstBody = this.getBodyWidget(lastSection, true);\n        this.viewer.updateClientArea(firstBody, firstBody.page);\n        var height = this.getNextWidgetHeight(firstBody);\n        this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n        this.viewer.clientActiveArea.y = height;\n        if (!isNullOrUndefined(lastSection) && !isNullOrUndefined(lastSection.nextRenderedWidget)) {\n            nextSection = lastSection.nextRenderedWidget;\n            var clientY = this.documentHelper.viewer.clientActiveArea.y;\n            var clientHeight = this.documentHelper.viewer.clientActiveArea.height;\n            this.documentHelper.viewer.updateClientArea(nextSection, nextSection.page);\n            this.documentHelper.viewer.clientActiveArea.y = clientY;\n            this.documentHelper.viewer.clientActiveArea.height = clientHeight;\n            this.documentHelper.blockToShift = nextSection.firstChild;\n        }\n        if (isNullOrUndefined(lastSection.nextRenderedWidget) ||\n            (!isNullOrUndefined(lastSection.nextRenderedWidget) && lastSection.sectionFormat.breakCode !== 'NoBreak' && lastSection.nextRenderedWidget.sectionFormat.pageHeight !== lastSection.sectionFormat.pageHeight && lastSection.nextRenderedWidget.sectionFormat.pageWidth !== lastSection.sectionFormat.pageWidth)) {\n            this.documentHelper.blockToShift = undefined;\n        }\n    };\n    Layout.prototype.combineMultiColumnForRelayout = function (section) {\n        var splitSections = section.getSplitWidgets();\n        var firstSection = splitSections[0];\n        section = splitSections[splitSections.length - 1];\n        while (section !== firstSection) {\n            var prevSection = section.previousRenderedWidget;\n            var isPreviousSplit = false;\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget)\n                    && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget.previousSplitWidget)\n                    && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n                    isPreviousSplit = true;\n                }\n                if ((section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit)) {\n                    section.childWidgets[i].combineWidget(this.viewer);\n                    if (prevSection.lastChild instanceof TableWidget) {\n                        this.updateCellHeightInCombinedTable(prevSection.lastChild);\n                    }\n                    i--;\n                    continue;\n                }\n                prevSection.childWidgets.push(section.childWidgets[i]);\n                section.childWidgets[i].containerWidget = prevSection;\n                section.childWidgets[i].containerWidget.page = prevSection.page;\n                section.childWidgets.splice(0, 1);\n                i--;\n            }\n            section = section.previousRenderedWidget;\n        }\n        this.documentHelper.removeEmptyPages();\n    };\n    Layout.prototype.reLayoutMultiColumnBlock = function (section, nextSection, blockIndex) {\n        var block = section.firstChild;\n        var nextBlock;\n        do {\n            if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit) {\n                block.calculateGrid();\n            }\n            if (!isNullOrUndefined(block)) {\n                this.viewer.updateClientAreaForBlock(block, true, undefined, true);\n                nextBlock = this.layoutBlock(block, 0, block.index < blockIndex ? true : false);\n                this.viewer.updateClientAreaForBlock(block, false);\n                block = nextBlock;\n            }\n        } while (block && section.getSplitWidgets().indexOf(block.bodyWidget) !== -1);\n        block = section.firstChild;\n        if (this.viewer instanceof PageLayoutViewer && section.sectionFormat.numberOfColumns > 1 && !isNullOrUndefined(nextSection) && nextSection.sectionFormat.breakCode === 'NoBreak' && (section.sectionFormat.breakCode === 'NoBreak' || (section.sectionIndex === section.page.bodyWidgets[0].sectionIndex))) {\n            var splittedSection = section.getSplitWidgets();\n            var bodyWidget = splittedSection[splittedSection.length - 1];\n            if (this.getColumnBreak(section)) {\n                if (section.page !== bodyWidget.page) {\n                    this.splitBodyWidgetBasedOnColumn(bodyWidget);\n                }\n                else {\n                    var firstBody = this.getBodyWidget(bodyWidget, true);\n                    this.viewer.updateClientArea(firstBody, firstBody.page);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                }\n            }\n            else if (!isNullOrUndefined(section.page.nextPage)) {\n                this.splitBodyWidgetBasedOnColumn(bodyWidget);\n            }\n        }\n    };\n    Layout.prototype.splitBodyWidgetBasedOnColumn = function (section) {\n        section = this.getBodyWidget(section, true);\n        var firstSection = section;\n        this.isMultiColumnSplit = true;\n        if (!this.isInitialLoad && section.sectionFormat.equalWidth) {\n            var previousStartIndex = this.documentHelper.selection.startOffset;\n            var previousEndIndex = this.documentHelper.selection.endOffset;\n            this.combineMultiColumn(section);\n            this.layoutMultiColumnBody(section, false);\n            if (previousStartIndex !== this.documentHelper.selection.startOffset) {\n                this.documentHelper.selection.select(previousStartIndex, previousEndIndex);\n            }\n        }\n        this.combineMultiColumn(section);\n        var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n        var totalHeight = lineCountInfo.lineCount;\n        var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n        while (section) {\n            var lineCountInfo_1 = this.getCountOrLine(section, lineToBeSplit, true, false);\n            var line = lineCountInfo_1.lineWidget;\n            var lineIndexInCell = lineCountInfo_1.lineCount;\n            if (!isNullOrUndefined(line)) {\n                if (line.paragraph.containerWidget instanceof BodyWidget) {\n                    this.moveToNextLine(line, true, line.indexInOwner);\n                }\n                else if (line.paragraph.containerWidget instanceof TableCellWidget) {\n                    var table = [line.paragraph.containerWidget.ownerTable];\n                    var rows = [line.paragraph.containerWidget.ownerRow];\n                    var index = line.paragraph.containerWidget.index;\n                    if (table[table.length - 1].isInsideTable) {\n                        table[table.length - 1] = this.getParentTable(table[table.length - 1]);\n                        rows[rows.length - 1] = this.getParentRow(rows[rows.length - 1]);\n                    }\n                    this.updateWidgetsToTable(table, rows, rows[rows.length - 1], false, lineIndexInCell, index, true);\n                    var tableWidget = table[table.length - 1];\n                    var rowWidget = rows[rows.length - 1];\n                    var nextRow = rowWidget.nextRenderedWidget;\n                    while (nextRow) {\n                        this.clearRowWidget(nextRow, true, true, false);\n                        nextRow = this.layoutRow(table, nextRow);\n                        nextRow = nextRow.nextRenderedWidget;\n                    }\n                    if (!isNullOrUndefined(tableWidget.nextRenderedWidget) && section.sectionFormat.equalWidth) {\n                        this.documentHelper.blockToShift = tableWidget.nextRenderedWidget;\n                        this.documentHelper.layout.shiftLayoutedItems(false);\n                    }\n                }\n                var firstBody = this.getBodyWidget(line.paragraph.bodyWidget, true);\n                var lastBody = this.getBodyWidget(firstBody, false);\n                if (!firstBody.sectionFormat.equalWidth && lastBody.sectionFormat.numberOfColumns - 1 === lastBody.columnIndex) {\n                    var nonEqualBody = firstBody;\n                    var initialCount = (this.getCountOrLine(firstBody)).lineCount;\n                    this.layoutMultiColumnBody(nonEqualBody, true);\n                    var finalCount = (this.getCountOrLine(firstBody)).lineCount;\n                    if (initialCount !== finalCount) {\n                        this.splitBodyWidgetBasedOnColumn(firstBody);\n                    }\n                }\n                this.viewer.updateClientArea(firstBody, firstBody.page);\n                var height = this.getNextWidgetHeight(firstBody);\n                this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                this.viewer.clientActiveArea.y = height;\n                this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n                this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n            }\n            section = section.nextRenderedWidget;\n            if (!isNullOrUndefined(section) && section.columnIndex === section.sectionFormat.numberOfColumns - 1) {\n                break;\n            }\n        }\n        this.isMultiColumnSplit = false;\n        if (!this.isInitialLoad) {\n            section = this.getBodyWidget(firstSection, false);\n            if (!isNullOrUndefined(section.nextRenderedWidget)) {\n                this.documentHelper.blockToShift = section.nextRenderedWidget.firstChild;\n            }\n        }\n    };\n    /**\n   * @private\n   */\n    Layout.prototype.getColumnBreak = function (section) {\n        var firstBody = this.getBodyWidget(section, true);\n        if (firstBody.sectionFormat.numberOfColumns <= 1) {\n            return false;\n        }\n        while (firstBody) {\n            if (firstBody.lastChild instanceof ParagraphWidget && firstBody.lastChild.isEndsWithColumnBreak) {\n                return true;\n            }\n            if (isNullOrUndefined(firstBody.nextRenderedWidget) || firstBody.index !== firstBody.nextRenderedWidget.index) {\n                break;\n            }\n            firstBody = firstBody.nextRenderedWidget;\n        }\n        return false;\n    };\n    Layout.prototype.layoutMultiColumnBody = function (nonEqualBody, updatePosition) {\n        var skipPosition = false;\n        while (nonEqualBody) {\n            if (!skipPosition) {\n                this.viewer.updateClientArea(nonEqualBody, nonEqualBody.page);\n                this.viewer.clientActiveArea.height -= nonEqualBody.y - this.viewer.clientActiveArea.y;\n                if (nonEqualBody instanceof FootNoteWidget) {\n                    this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                    this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                }\n                else {\n                    this.viewer.clientActiveArea.y = nonEqualBody.y;\n                }\n            }\n            skipPosition = updatePosition ? false : true;\n            for (var i = 0; i < nonEqualBody.childWidgets.length; i++) {\n                var block = nonEqualBody.childWidgets[i];\n                if (block instanceof TableWidget) {\n                    this.clearTableWidget(block, true, true, true);\n                }\n                this.viewer.updateClientAreaForBlock(block, true);\n                var isUpdatedList = false;\n                if (block instanceof ParagraphWidget && !isNullOrUndefined(block.paragraphFormat)\n                    && block.paragraphFormat.listFormat.listId !== -1) {\n                    isUpdatedList = block.paragraphFormat.listFormat.listLevelNumber === 0 ? true : false;\n                }\n                this.layoutBlock(block, 0, isUpdatedList);\n                this.viewer.updateClientAreaForBlock(block, false);\n            }\n            if (nonEqualBody.columnIndex === nonEqualBody.sectionFormat.numberOfColumns - 1 || (!isNullOrUndefined(nonEqualBody.nextRenderedWidget) && nonEqualBody.sectionIndex !== nonEqualBody.nextRenderedWidget.sectionIndex)) {\n                break;\n            }\n            nonEqualBody = nonEqualBody.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.getNextWidgetHeight = function (body) {\n        var height = 0;\n        var updatedHeight = 0;\n        while (body && body.childWidgets.length > 0) {\n            height = body.lastChild.height;\n            if (body.lastChild instanceof TableWidget) {\n                height = this.getHeight(body.lastChild);\n            }\n            height += body.lastChild.y;\n            if (height > updatedHeight) {\n                updatedHeight = height;\n            }\n            if (!isNullOrUndefined(body) && body.columnIndex === body.sectionFormat.numberOfColumns - 1 || body.sectionFormat.numberOfColumns === 0 || (!isNullOrUndefined(body.nextRenderedWidget) && body.sectionIndex !== body.nextRenderedWidget.sectionIndex)) {\n                break;\n            }\n            body = body.nextRenderedWidget;\n        }\n        return updatedHeight;\n    };\n    Layout.prototype.getHeight = function (block) {\n        var height = 0;\n        for (var i = 0; i < block.childWidgets.length; i++) {\n            height += block.childWidgets[i].height;\n        }\n        return height;\n    };\n    Layout.prototype.getBookmarkMargin = function (lineWidget) {\n        var height = 0;\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            var element = lineWidget.children[i];\n            if (!isNullOrUndefined(element.margin) && element instanceof BookmarkElementBox) {\n                height = element.margin.top + element.margin.bottom;\n                break;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getCountOrLine = function (section, lineToBeSplit, isSplit, getHeight) {\n        var totalNoOflines = 0;\n        var line;\n        var count = 0;\n        var skip = false;\n        var maxHeight = 0;\n        var lineIndexInCell = 0;\n        var splitCountLine;\n        var lineMargin = 0;\n        while (section) {\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                var block = section.childWidgets[i];\n                if (block instanceof ParagraphWidget) {\n                    for (var j = 0; j < block.childWidgets.length; j++) {\n                        var lineWidget = block.childWidgets[j];\n                        lineMargin = 0;\n                        if (!isNullOrUndefined(lineWidget.margin)) {\n                            lineMargin = lineWidget.margin.top + lineWidget.margin.bottom + this.getBookmarkMargin(lineWidget);\n                        }\n                        if (!isSplit) {\n                            totalNoOflines++;\n                            maxHeight += lineWidget.height - lineMargin;\n                        }\n                        else {\n                            maxHeight += lineWidget.height - lineMargin;\n                            if (Math.round(lineToBeSplit) < Math.round(maxHeight)) {\n                                line = block.childWidgets[j];\n                                skip = true;\n                                count = 0;\n                                break;\n                            }\n                            else {\n                                count++;\n                            }\n                        }\n                    }\n                }\n                else if (block instanceof TableWidget) {\n                    splitCountLine = this.getCountOrLineTable(block, lineToBeSplit, isSplit, maxHeight, false, getHeight);\n                    if (getHeight) {\n                        maxHeight += splitCountLine.lineCount;\n                    }\n                    else if (!isSplit) {\n                        totalNoOflines += splitCountLine.lineCount;\n                    }\n                    else if (isNullOrUndefined(splitCountLine.lineWidget)) {\n                        //  count = splitCountLine.lineCount;\n                        maxHeight = splitCountLine.lineCount;\n                    }\n                    else {\n                        line = splitCountLine.lineWidget;\n                        lineIndexInCell = splitCountLine.lineCount;\n                        skip = true;\n                    }\n                }\n                if (skip && isSplit) {\n                    break;\n                }\n            }\n            if (skip && isSplit) {\n                break;\n            }\n            if (!isNullOrUndefined(section.nextRenderedWidget) && section.index !== section.nextRenderedWidget.index) {\n                break;\n            }\n            section = section.nextRenderedWidget;\n        }\n        if (getHeight) {\n            return { lineWidget: undefined, lineCount: maxHeight };\n        }\n        else if (!isSplit) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else {\n            return { lineWidget: line, lineCount: lineIndexInCell };\n        }\n    };\n    Layout.prototype.getCountOrLineTable = function (block, lineToBeSplit, isSplit, maxSplitHeight, isNested, getHeight) {\n        var lineIndexInCell = 0;\n        var skip = false;\n        var line;\n        var totalNoOflines = 0;\n        var totalHeight = 0;\n        var minCount = 0;\n        var maxCount = 0;\n        var minHeight = 0;\n        var maxHeight = 0;\n        var splitCountLine;\n        for (var i = 0; i < block.childWidgets.length; i++) {\n            var row = block.childWidgets[i];\n            var minCountCell = void 0;\n            var maxCountCell = void 0;\n            minCount = 0;\n            maxCount = 0;\n            minHeight = 0;\n            maxHeight = 0;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    var blocks = cell.childWidgets[k];\n                    if (blocks instanceof ParagraphWidget && blocks.childWidgets.length > 0) {\n                        for (var l = 0; l < blocks.childWidgets.length; l++) {\n                            minCount++;\n                            minCountCell = cell;\n                            minHeight += blocks.childWidgets[l].height;\n                        }\n                    }\n                    else {\n                        splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, true, getHeight);\n                        minCount += splitCountLine.lineCount;\n                        minHeight += splitCountLine.lineCount;\n                    }\n                }\n                if (maxCount < minCount) {\n                    maxCount = minCount;\n                    // maxCountCell = minCountCell;\n                }\n                if (maxHeight < minHeight) {\n                    maxHeight = minHeight;\n                    maxCountCell = minCountCell;\n                }\n                minCount = 0;\n                minHeight = 0;\n            }\n            if (!isSplit || isNested) {\n                totalNoOflines = totalNoOflines + maxCount;\n                totalHeight += maxHeight;\n            }\n            else {\n                var countInCell = 0;\n                for (var i_2 = 0; i_2 < maxCountCell.childWidgets.length; i_2++) {\n                    var blocks = maxCountCell.childWidgets[i_2];\n                    if (blocks instanceof ParagraphWidget) {\n                        for (var j = 0; j < blocks.childWidgets.length; j++) {\n                            maxSplitHeight += blocks.childWidgets[j].height;\n                            if (Math.round(lineToBeSplit) < Math.round(maxSplitHeight)) {\n                                line = blocks.childWidgets[j];\n                                skip = true;\n                                maxSplitHeight = 0;\n                                lineIndexInCell = countInCell;\n                                break;\n                            }\n                            else {\n                                countInCell++;\n                            }\n                            if (skip && isSplit) {\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        splitCountLine = this.getCountOrLineTable(blocks, lineToBeSplit, isSplit, maxSplitHeight, false, getHeight);\n                        if (isNullOrUndefined(splitCountLine.lineWidget)) {\n                            countInCell += splitCountLine.lineCount;\n                            // count = splitCountLine.lineCount;\n                            maxSplitHeight += blocks.height;\n                        }\n                        else {\n                            skip = true;\n                            maxSplitHeight = 0;\n                            line = splitCountLine.lineWidget;\n                            countInCell += splitCountLine.lineCount;\n                            lineIndexInCell = countInCell;\n                            break;\n                        }\n                    }\n                    if (skip && isSplit) {\n                        break;\n                    }\n                }\n            }\n            maxCount = 0;\n            if (skip && isSplit) {\n                break;\n            }\n        }\n        if (getHeight) {\n            return { lineWidget: undefined, lineCount: totalHeight };\n        }\n        else if (!isSplit) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else if (isSplit && isNullOrUndefined(line) && isNested) {\n            return { lineWidget: undefined, lineCount: totalNoOflines };\n        }\n        else if (isSplit && isNullOrUndefined(line) && !isNested) {\n            return { lineWidget: undefined, lineCount: maxSplitHeight };\n        }\n        else {\n            return { lineWidget: line, lineCount: lineIndexInCell };\n        }\n    };\n    /**\n       * @private\n       */\n    Layout.prototype.combineMultiColumn = function (section) {\n        section = this.getBodyWidget(section, false);\n        while (section && section.columnIndex !== 0) {\n            var prevSection = section.previousRenderedWidget;\n            if (prevSection.lastChild instanceof ParagraphWidget && prevSection.lastChild.isEndsWithColumnBreak) {\n                break;\n            }\n            var isPreviousSplit = false;\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                if (section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget)\n                    && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget.previousSplitWidget)\n                    && section.childWidgets[i].previousSplitWidget.bodyWidget.page !== section.childWidgets[i].previousSplitWidget.previousSplitWidget.bodyWidget.page) {\n                    isPreviousSplit = true;\n                }\n                if ((section.childWidgets[i] instanceof BlockWidget && !isNullOrUndefined(section.childWidgets[i].previousSplitWidget) && section.childWidgets[i].previousSplitWidget.bodyWidget.page === section.childWidgets[i].bodyWidget.page && !isPreviousSplit)) {\n                    section.childWidgets[i].combineWidget(this.viewer);\n                    if (prevSection.lastChild instanceof TableWidget) {\n                        this.updateCellHeightInCombinedTable(prevSection.lastChild);\n                    }\n                    i--;\n                    continue;\n                }\n                prevSection.childWidgets.push(section.childWidgets[i]);\n                section.childWidgets[i].containerWidget = prevSection;\n                section.childWidgets[i].containerWidget.page = prevSection.page;\n                section.childWidgets.splice(0, 1);\n                i--;\n            }\n            section = section.previousRenderedWidget;\n        }\n        this.documentHelper.removeEmptyPages();\n    };\n    Layout.prototype.updateCellHeightInCombinedTable = function (tableWidget) {\n        var maxCellHeight = 0;\n        var minCellHeight = 0;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var row = tableWidget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    minCellHeight += cell.childWidgets[k].height;\n                }\n                if (minCellHeight > maxCellHeight) {\n                    maxCellHeight = minCellHeight;\n                }\n                minCellHeight = 0;\n                for (var a = 0; a < row.childWidgets.length; a++) {\n                    row.childWidgets[a].height = maxCellHeight;\n                }\n            }\n            maxCellHeight = 0;\n        }\n    };\n    Layout.prototype.layoutHeaderFooter = function (section, viewer, page) {\n        //Header layout\n        var headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, true);\n        if (headerFooterWidget) {\n            var parentHeader = headerFooterWidget;\n            if (isNullOrUndefined(headerFooterWidget.page)) {\n                headerFooterWidget.page = page;\n                headerFooterWidget.height = 0;\n                this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n                viewer.updateHFClientArea(section.sectionFormat, true);\n                this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n            }\n            headerFooterWidget = parentHeader.clone();\n            headerFooterWidget.parentHeaderFooter = parentHeader;\n            this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n            var header = headerFooterWidget;\n            header.page = page;\n            header.height = 0;\n            this.updateRevisionsToHeaderFooter(header, page);\n            viewer.updateHFClientArea(section.sectionFormat, true);\n            page.headerWidget = this.layoutHeaderFooterItems(viewer, header);\n            //this.updateHeaderFooterToParent(header);\n            //When the vertical position is related to margin, then it should be adjusted based on the layouted header height. Not default header height.\n            if (section.sectionFormat.topMargin < page.boundingRectangle.bottom && page.headerWidget.floatingElements.length > 0 && page.headerWidget.floatingElements[0].textWrappingStyle !== \"Behind\") {\n                page.headerWidget = this.shiftItemsForVerticalAlignment(header);\n            }\n        }\n        //Footer Layout\n        headerFooterWidget = viewer.getCurrentPageHeaderFooter(section, false);\n        if (headerFooterWidget) {\n            var parentHeader = headerFooterWidget;\n            if (isNullOrUndefined(headerFooterWidget.page)) {\n                headerFooterWidget.page = page;\n                headerFooterWidget.height = 0;\n                this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n                viewer.updateHFClientArea(section.sectionFormat, false);\n                this.layoutHeaderFooterItems(viewer, headerFooterWidget);\n            }\n            headerFooterWidget = parentHeader.clone();\n            headerFooterWidget.parentHeaderFooter = parentHeader;\n            this.clearBlockWidget(headerFooterWidget.childWidgets, true, true, true);\n            var footer = headerFooterWidget;\n            footer.page = page;\n            footer.height = 0;\n            viewer.updateHFClientArea(section.sectionFormat, false);\n            this.updateRevisionsToHeaderFooter(footer, page);\n            page.footerWidget = this.layoutHeaderFooterItems(viewer, footer);\n        }\n    };\n    Layout.prototype.shiftItemsForVerticalAlignment = function (headerWidget) {\n        var floatingElements = headerWidget.floatingElements;\n        for (var i = 0; i < floatingElements.length; i++) {\n            var floatingItem = floatingElements[i];\n            var verticalOrigin = floatingItem.verticalOrigin;\n            var paragraph = floatingItem.paragraph;\n            // When a owner paragraph is inside the table, we have to skip the vertical alignment of the floating entity.\n            if (verticalOrigin === 'Margin' && !paragraph.isInsideTable) {\n                var yPosition = floatingItem.verticalPosition;\n                if (yPosition != 0) {\n                    yPosition += this.viewer.clientActiveArea.y;\n                    var diff = yPosition - floatingItem.y;\n                    floatingItem.y = yPosition;\n                    if (floatingItem instanceof ShapeElementBox) {\n                        for (var j = 0; j < floatingItem.textFrame.childWidgets.length; j++) {\n                            var block = floatingItem.textFrame.childWidgets[j];\n                            if (block instanceof ParagraphWidget) {\n                                block.y = block.y + diff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return headerWidget;\n    };\n    Layout.prototype.updateHeaderFooterToParent = function (node) {\n        var sectionIndex = node.page.sectionIndex;\n        var typeIndex = this.viewer.getHeaderFooter(node.headerFooterType);\n        var clone = node.clone();\n        this.documentHelper.headersFooters[sectionIndex][typeIndex] = clone;\n        for (var j = 0; j < clone.childWidgets.length; j++) {\n            var child = clone.childWidgets[j];\n            if (child instanceof TableWidget) {\n                this.clearTableWidget(child, false, true);\n            }\n        }\n        return clone;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Layout.prototype.updateRevisionsToHeaderFooter = function (clone, page) {\n        var childWidge = clone.childWidgets;\n        if (clone instanceof HeaderFooterWidget && childWidge.length > 0) {\n            for (var i = 0; i < childWidge.length; i++) {\n                if (childWidge[i].childWidgets.length > 0) {\n                    var lineWidge = childWidge[i].childWidgets;\n                    for (var j = 0; j < lineWidge.length; j++) {\n                        var childrens = lineWidge[j].children;\n                        if (childrens) {\n                            for (var k = 0; k < childrens.length; k++) {\n                                if (childrens[k].removedIds.length > 0) {\n                                    var removeId = childrens[k].removedIds;\n                                    for (var l = 0; l < removeId.length; l++) {\n                                        var revision = this.documentHelper.revisionsInternal.get(removeId[l]);\n                                        childrens[k].revisions[l] = revision;\n                                        this.updateRevisionRange(revision, page);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.updateRevisionRange = function (revision, page) {\n        for (var i = 0; i < revision.range.length; i++) {\n            var inline = revision.range[i];\n            if (!inline.line.paragraph.bodyWidget.page) {\n                inline.line.paragraph.bodyWidget.page = page;\n            }\n        }\n    };\n    Layout.prototype.linkFieldInHeaderFooter = function (widget) {\n        var firstChild = widget.firstChild;\n        do {\n            if (firstChild instanceof ParagraphWidget) {\n                this.linkFieldInParagraph(firstChild);\n            }\n            else {\n                this.linkFieldInTable(firstChild);\n            }\n            /* eslint-disable no-cond-assign */\n        } while (firstChild = firstChild.nextWidget);\n    };\n    Layout.prototype.linkFieldInParagraph = function (widget) {\n        for (var j = 0; j < widget.childWidgets.length; j++) {\n            var line = widget.childWidgets[j];\n            for (var i = 0; i < line.children.length; i++) {\n                var element = line.children[i];\n                if (element instanceof FieldElementBox && (element.fieldType !== 0 || (element.fieldType === 0 &&\n                    this.documentHelper.fields.indexOf(element) === -1))) {\n                    element.linkFieldCharacter(this.documentHelper);\n                }\n                if (element instanceof FieldTextElementBox &&\n                    !isNullOrUndefined(element.previousElement) &&\n                    element.previousElement instanceof FieldElementBox &&\n                    element.fieldBegin !== element.previousElement.fieldBegin) {\n                    element.fieldBegin = element.previousElement.fieldBegin;\n                }\n                if (element instanceof ShapeElementBox) {\n                    var firstBlock = element.textFrame.firstChild;\n                    if (firstBlock) {\n                        do {\n                            if (firstBlock instanceof ParagraphWidget) {\n                                this.linkFieldInParagraph(firstBlock);\n                            }\n                            else {\n                                this.linkFieldInTable(firstBlock);\n                            }\n                            /* eslint-disable no-cond-assign */\n                        } while (firstBlock = firstBlock.nextWidget);\n                    }\n                }\n                else if (element instanceof CommentCharacterElementBox) {\n                    var comment = this.getCommentById(this.documentHelper.comments, element.commentId);\n                    if (!isNullOrUndefined(comment)) {\n                        if (element.commentType === 0) {\n                            comment.commentStart = element;\n                        }\n                        else {\n                            comment.commentEnd = element;\n                        }\n                        element.comment = comment;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.getCommentById = function (commentsCollection, commentId) {\n        for (var i = 0; i < commentsCollection.length; i++) {\n            var comment = commentsCollection[i];\n            if (comment.commentId === commentId) {\n                return comment;\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.linkFieldInTable = function (widget) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var row = widget.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    var block = cell.childWidgets[k];\n                    if (block instanceof ParagraphWidget) {\n                        this.linkFieldInParagraph(block);\n                    }\n                    else {\n                        this.linkFieldInTable(block);\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.layoutHeaderFooterItems = function (viewer, widget) {\n        this.viewer.updateClientAreaLocation(widget, viewer.clientActiveArea);\n        if (widget.childWidgets.length === 0) {\n            var pargaraph = new ParagraphWidget();\n            var line = new LineWidget(pargaraph);\n            pargaraph.childWidgets.push(line);\n            widget.childWidgets.push(pargaraph);\n            pargaraph.containerWidget = widget;\n        }\n        this.linkFieldInHeaderFooter(widget);\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var block = widget.childWidgets[i];\n            if (block instanceof TableWidget && block.tableFormat.preferredWidthType === 'Auto'\n                && !block.tableFormat.allowAutoFit && !block.isGridUpdated) {\n                block.calculateGrid();\n            }\n            viewer.updateClientAreaForBlock(block, true);\n            this.layoutBlock(block, 0);\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        var type = widget.headerFooterType;\n        if (type === 'OddFooter' || type === 'EvenFooter' || type === 'FirstPageFooter') {\n            this.shiftChildLocation(viewer.clientArea.y - viewer.clientActiveArea.y, widget);\n        }\n        return widget;\n    };\n    Layout.prototype.shiftChildLocation = function (shiftTop, bodyWidget) {\n        var widgetTop = bodyWidget.y + shiftTop;\n        var footerMaxHeight = bodyWidget.page.boundingRectangle.height - (bodyWidget.page.boundingRectangle.height / 100) * 40;\n        widgetTop = Math.max(widgetTop, footerMaxHeight);\n        shiftTop = widgetTop - bodyWidget.y;\n        var childTop = bodyWidget.y = widgetTop;\n        for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n            var childWidget = bodyWidget.childWidgets[i];\n            if (childWidget instanceof ParagraphWidget) {\n                childWidget.x = childWidget.x;\n                childWidget.y = i === 0 ? childWidget.y + shiftTop : childTop;\n                childTop += childWidget.height;\n                for (var j = 0; j < childWidget.childWidgets.length; j++) {\n                    var widget = childWidget.childWidgets[j];\n                    for (var k = 0; k < widget.children.length; k++) {\n                        var element = widget.children[k];\n                        if (element instanceof ShapeBase && element.textWrappingStyle !== \"Inline\") {\n                            if (element.verticalOrigin === \"Paragraph\" || element.verticalOrigin === \"Line\") {\n                                element.y = childWidget.y + element.verticalPosition;\n                            }\n                            else {\n                                var position = this.getFloatingItemPoints(element);\n                                element.y = position.y;\n                            }\n                            if (element instanceof ShapeElementBox) {\n                                var topMargin = element.textFrame.marginTop;\n                                this.updateChildLocationForCellOrShape(element.y + topMargin, element);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                this.shiftChildLocationForTableWidget(childWidget, shiftTop);\n                childTop += childWidget.height;\n            }\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableWidget = function (tableWidget, shiftTop) {\n        tableWidget.y = tableWidget.y + shiftTop;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var childWidget = tableWidget.childWidgets[i];\n            if (childWidget instanceof TableRowWidget) {\n                this.shiftChildLocationForTableRowWidget(childWidget, shiftTop);\n            }\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableRowWidget = function (rowWidget, shiftTop) {\n        rowWidget.y = rowWidget.y + shiftTop;\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            this.shiftChildLocationForTableCellWidget(rowWidget.childWidgets[i], shiftTop);\n        }\n    };\n    Layout.prototype.shiftChildLocationForTableCellWidget = function (cellWidget, shiftTop) {\n        cellWidget.y = cellWidget.y + shiftTop;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n                cellWidget.childWidgets[i].x = cellWidget.childWidgets[i].x;\n                cellWidget.childWidgets[i].y = cellWidget.childWidgets[i].y + shiftTop;\n            }\n            else {\n                this.shiftChildLocationForTableWidget(cellWidget.childWidgets[i], shiftTop);\n            }\n        }\n    };\n    Layout.prototype.layoutBlock = function (block, index, isUpdatedList) {\n        var nextBlock;\n        if (block instanceof ParagraphWidget) {\n            block.splitTextRangeByScriptType(0);\n            block.splitLtrAndRtlText(0);\n            block.combineconsecutiveRTL(0);\n            nextBlock = this.layoutParagraph(block, index, isUpdatedList);\n            var nextBlockToLayout = this.checkAndRelayoutPreviousOverlappingBlock(block);\n            if (nextBlockToLayout) {\n                nextBlock = nextBlockToLayout;\n            }\n            // this.updateLinearIndex(block);\n            // if (block != nextBlock) {\n            //     this.updateLinearIndex(nextBlock);\n            // }\n        }\n        else {\n            nextBlock = this.layoutTable(block, index);\n            this.checkAndRelayoutPreviousOverlappingBlock(block);\n            this.updateTableYPositionBasedonTextWrap(nextBlock);\n        }\n        return nextBlock.nextRenderedWidget;\n    };\n    // /**\n    //  * @private\n    //  */\n    // private updateLinearIndex(block: BlockWidget, skipParaMark?: boolean): void {\n    //     if (!isNullOrUndefined(block) && block instanceof ParagraphWidget) {\n    //         let splittedWidgets = block.getSplitWidgets();\n    //         (splittedWidgets[0] as ParagraphWidget).length = block.getTotalLength();\n    //     }\n    // }\n    Layout.prototype.updateTableYPositionBasedonTextWrap = function (table) {\n        var _this = this;\n        if (!isNullOrUndefined(table.bodyWidget) && !(table.containerWidget instanceof TextFrame)) {\n            var tableY_1 = table.y;\n            var tableRect_1 = new Rect(table.x, table.y, table.width, table.height);\n            table.bodyWidget.floatingElements.forEach(function (shape) {\n                if (shape instanceof ShapeElementBox && !shape.paragraph.isInsideTable) {\n                    var shapeRect = new Rect(shape.x, shape.y, shape.width, shape.height);\n                    var considerShape = (shape.textWrappingStyle === 'TopAndBottom' || shape.textWrappingStyle === 'Square');\n                    if (considerShape && tableRect_1.isIntersecting(shapeRect)) {\n                        table.y = shape.y + shape.height + shape.distanceBottom;\n                        _this.updateChildLocationForTable(table.y, table);\n                        var height = table.y - tableY_1;\n                        _this.viewer.cutFromTop(_this.viewer.clientActiveArea.y + height);\n                    }\n                }\n            });\n        }\n    };\n    Layout.prototype.checkAndRelayoutPreviousOverlappingBlock = function (block) {\n        if (!(block.containerWidget instanceof TextFrame) && !this.isRelayoutOverlap) {\n            var preivousBlock = block.previousWidget;\n            if (block instanceof ParagraphWidget) {\n                if (block.floatingElements.length > 0) {\n                    var height = 0;\n                    for (var i = 0; i < block.floatingElements.length; i++) {\n                        var element = block.floatingElements[i];\n                        if (element.textWrappingStyle === 'InFrontOfText' || element.textWrappingStyle === 'Behind' || element.textWrappingStyle === 'Inline') {\n                            continue;\n                        }\n                        var shapeRect = new Rect(element.x, element.y, element.width, element.height);\n                        while (preivousBlock) {\n                            // if height exceeds the client area height. then the paragraph belongs to previous page.\n                            // So, we need to skip relayouting overlapping widgets.\n                            // Adding this condition for row splitting to multiple page scenario.\n                            if (block.isInsideTable && height > this.viewer.clientArea.height) {\n                                this.startOverlapWidget = undefined;\n                                this.endOverlapWidget = undefined;\n                                break;\n                            }\n                            if (preivousBlock instanceof ParagraphWidget) {\n                                var paraRect = new Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n                                if (shapeRect.isIntersecting(paraRect) &&\n                                    this.startOverlapWidget !== preivousBlock) {\n                                    this.startOverlapWidget = preivousBlock;\n                                    this.endOverlapWidget = block;\n                                }\n                            }\n                            height += preivousBlock.height;\n                            preivousBlock = preivousBlock.previousWidget;\n                        }\n                        preivousBlock = block.previousWidget;\n                    }\n                }\n                else {\n                    var widget = block.getSplitWidgets();\n                    if (widget) {\n                        return widget[widget.length - 1];\n                    }\n                }\n            }\n            else {\n                var table = block;\n                if (!table.wrapTextAround) {\n                    return table;\n                }\n                var tableRect = new Rect(table.x, table.y, table.getTableCellWidth(), table.height);\n                while (preivousBlock) {\n                    if (preivousBlock instanceof ParagraphWidget) {\n                        var blockRect = new Rect(preivousBlock.x, preivousBlock.y, preivousBlock.width, preivousBlock.height);\n                        if (tableRect.isIntersecting(blockRect) &&\n                            this.startOverlapWidget !== preivousBlock) {\n                            this.startOverlapWidget = preivousBlock;\n                            this.endOverlapWidget = block;\n                        }\n                    }\n                    preivousBlock = preivousBlock.previousWidget;\n                }\n                preivousBlock = block.previousWidget;\n            }\n            if (this.startOverlapWidget) {\n                this.isRelayoutOverlap = true;\n                this.skipRelayoutOverlap = true;\n                this.layoutStartEndBlocks(this.startOverlapWidget, block);\n                this.isRelayoutOverlap = false;\n                this.skipRelayoutOverlap = false;\n            }\n            this.startOverlapWidget = undefined;\n            this.endOverlapWidget = undefined;\n        }\n        return block;\n    };\n    Layout.prototype.addParagraphWidget = function (area, paragraphWidget) {\n        // const ownerParaWidget: ParagraphWidget = undefined;\n        if (paragraphWidget.isEmpty() && !isNullOrUndefined(paragraphWidget.paragraphFormat) &&\n            (paragraphWidget.paragraphFormat.textAlignment === 'Center' || paragraphWidget.paragraphFormat.textAlignment === 'Right'\n                || (paragraphWidget.paragraphFormat.textAlignment === 'Justify' && paragraphWidget.paragraphFormat.bidi))\n            && paragraphWidget.paragraphFormat.listFormat.listId === -1) {\n            this.updateXPositionForEmptyParagraph(area, paragraphWidget);\n            paragraphWidget.y = area.y;\n        }\n        else {\n            if (this.viewer.clientActiveArea.width <= 0 && this.viewer instanceof WebLayoutViewer) {\n                paragraphWidget.x = this.previousPara;\n            }\n            else {\n                paragraphWidget.x = area.x;\n                this.previousPara = paragraphWidget.x;\n            }\n            paragraphWidget.width = area.width;\n            paragraphWidget.y = area.y;\n            paragraphWidget.clientX = undefined;\n            if (paragraphWidget.hasOwnProperty('absoluteXPosition')) {\n                delete paragraphWidget['absoluteXPosition'];\n            }\n        }\n        return paragraphWidget;\n    };\n    // update the x position for bidi empty paragraph.\n    Layout.prototype.updateXPositionForEmptyParagraph = function (area, paragraph) {\n        if (paragraph.isEmpty() && !isNullOrUndefined(paragraph.paragraphFormat)) {\n            // const top: number = 0;\n            // const bottom: number = 0;\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n            paragraph.clientX = area.x;\n            var left = area.x;\n            paragraph['absoluteXPosition'] = { 'width': area.width, 'x': area.x };\n            if (paragraph.paragraphFormat.textAlignment === 'Center') {\n                left += (area.width - width) / 2;\n            }\n            else {\n                left += area.width - width;\n            }\n            paragraph.width = width;\n            paragraph.x = left;\n        }\n    };\n    Layout.prototype.addLineWidget = function (paragraphWidget) {\n        var line = undefined;\n        line = new LineWidget(paragraphWidget);\n        line.width = paragraphWidget.width;\n        paragraphWidget.childWidgets.push(line);\n        line.paragraph = paragraphWidget;\n        return line;\n    };\n    Layout.prototype.isFirstElementWithPageBreak = function (paragraphWidget) {\n        var isPageBreak = false;\n        if (this.viewer instanceof PageLayoutViewer) {\n            var lineWidget = paragraphWidget.childWidgets[0];\n            if (lineWidget) {\n                var element = lineWidget.children[0];\n                while (element) {\n                    if (element instanceof BookmarkElementBox && element.name.indexOf('_') >= 0) {\n                        element = element.nextElement;\n                        continue;\n                    }\n                    if (element instanceof TextElementBox && (element.text === '\\f' || element.text === String.fromCharCode(14))) {\n                        isPageBreak = true;\n                    }\n                    break;\n                }\n            }\n        }\n        return isPageBreak;\n    };\n    /**\n     * Layouts specified paragraph.\n     *\n     * @private\n     * @param footnote\n     */\n    Layout.prototype.layoutfootNote = function (footnote) {\n        if (this.documentHelper.owner.layoutType === 'Pages') {\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var clientArea = this.viewer.clientArea.clone();\n            if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && !this.isInitialLoad) {\n                this.updateColumnIndex(footnote.bodyWidgets[0], false);\n                this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n            }\n            if (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.numberOfColumns > 1) {\n                if (!this.isInitialLoad) {\n                    this.updateColumnIndex(footnote.bodyWidgets[0], false);\n                }\n                this.layoutMultiColumnBody(footnote.bodyWidgets[0], true);\n                this.viewer.clientActiveArea = clientActiveArea;\n            }\n            var clientWidth = 0;\n            if (footnote.sectionFormat.columns.length > 1 && footnote.footNoteType === 'Footnote') {\n                this.viewer.updateClientArea(footnote, footnote.page);\n                clientWidth = this.viewer.clientActiveArea.width;\n            }\n            if (footnote.footNoteType === 'Footnote') {\n                this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n                if (footnote.sectionFormat.columns.length > 1) {\n                    this.viewer.clientActiveArea.width = clientWidth;\n                    this.viewer.clientArea.width = clientWidth;\n                }\n            }\n            footnote.height = 0;\n            var block = void 0;\n            var height = 0;\n            this.isRelayoutFootnote = false;\n            var index = 0;\n            //        this.isfoot = true;\n            /* eslint-disable-next-line max-len */\n            if (this.viewer instanceof PageLayoutViewer && footnote.bodyWidgets.length > 0 && ((footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1) || (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[0].sectionFormat.columns.length > 1))) {\n                this.splitFootNoteWidgetBasedOnColumn(footnote.bodyWidgets[0]);\n            }\n            var footBody = footnote.bodyWidgets[0];\n            var clientX = 0;\n            for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n                if (footnote.bodyWidgets[i].columnIndex !== footBody.columnIndex && ((footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1) || (footnote.footNoteType === 'Endnote' && footnote.bodyWidgets[i].sectionFormat.columns.length > 1))) {\n                    this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page);\n                    clientWidth = this.viewer.clientActiveArea.width;\n                    clientX = this.viewer.clientActiveArea.x;\n                    if (footnote.footNoteType === 'Footnote') {\n                        this.viewer.updateFootnoteClientArea(footnote.sectionFormat, footnote);\n                    }\n                    this.viewer.clientActiveArea.x = clientX;\n                    this.viewer.clientArea.x = clientX;\n                    this.viewer.clientActiveArea.width = clientWidth;\n                    this.viewer.clientArea.width = clientWidth;\n                    this.viewer.cutFromTop(footnote.y + height);\n                }\n                if (i === 0) {\n                    var newPara = new ParagraphWidget();\n                    newPara.characterFormat = new WCharacterFormat();\n                    newPara.paragraphFormat = new WParagraphFormat();\n                    newPara.index = 0;\n                    var lineWidget = new LineWidget(newPara);\n                    newPara.childWidgets.push(lineWidget);\n                    height = this.documentHelper.textHelper.getParagraphMarkSize(newPara.characterFormat).Height;\n                    footnote.height += height;\n                    footnote.y = this.viewer.clientActiveArea.y;\n                    if (footnote.footNoteType === 'Endnote') {\n                        this.viewer.updateClientArea(footnote.bodyWidgets[i], footnote.bodyWidgets[i].page, true);\n                    }\n                    this.viewer.cutFromTop(footnote.y + height);\n                    footnote.margin = new Margin(0, height, 0, 0);\n                }\n                for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n                    block = footnote.bodyWidgets[i].childWidgets[j];\n                    block.index = index;\n                    index++;\n                    block.containerWidget = footnote.bodyWidgets[i];\n                    block.containerWidget.page = footnote.page;\n                    block.containerWidget.containerWidget = footnote;\n                    // paragraph.index = i > 1 ? i - 1 : 0;\n                    this.viewer.updateClientAreaForBlock(block, true);\n                    if (block instanceof TableWidget) {\n                        this.clearTableWidget(block, true, true, true);\n                        this.isRelayoutFootnote = true;\n                        this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                        this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                    }\n                    this.layoutBlock(block, 0);\n                    if (footnote.footNoteType === 'Footnote' && footnote.bodyWidgets[i].columnIndex === footBody.columnIndex) {\n                        footnote.height += block.height;\n                    }\n                    this.viewer.updateClientAreaForBlock(block, false);\n                }\n                footBody = footnote.bodyWidgets[i];\n            }\n            if (footnote.sectionFormat.columns.length > 1) {\n                var footHeight = this.getFootNoteBodyHeight(footnote.bodyWidgets[0]);\n                footnote.height = footHeight + height;\n            }\n            if (footnote.footNoteType === 'Footnote') {\n                this.shiftChildWidgetInFootnote(footnote);\n            }\n            if (footnote.footNoteType === 'Footnote' && footnote.sectionFormat.columns.length > 1 && footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1].sectionFormat.columns.length > 1) {\n                var section = this.getBodyWidget(footnote.page.bodyWidgets[footnote.page.bodyWidgets.length - 1], true);\n                var height_2 = this.getNextWidgetHeight(section);\n                if (height_2 > footnote.y) {\n                    this.footnoteHeight = footnote.height;\n                    this.layoutMultiColumnBody(section, true);\n                }\n            }\n            this.viewer.clientActiveArea = clientActiveArea;\n            this.viewer.clientArea = clientArea;\n            if (!this.islayoutFootnote) {\n                if (this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height > footnote.y) {\n                    this.viewer.clientActiveArea.height -= footnote.height;\n                    var sub = (this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - footnote.y);\n                    this.viewer.clientActiveArea.height -= sub;\n                }\n            }\n        }\n        this.footnoteHeight = 0;\n        return footnote;\n    };\n    Layout.prototype.getFootNoteBodyHeight = function (section) {\n        var height = 0;\n        while (section) {\n            if (section.columnIndex !== 0) {\n                break;\n            }\n            for (var i = 0; i < section.childWidgets.length; i++) {\n                height += section.childWidgets[i].height;\n            }\n            section = section.nextRenderedWidget;\n        }\n        return height;\n    };\n    Layout.prototype.splitFootNoteWidgetBasedOnColumn = function (section) {\n        var lineCountInfo = this.getCountOrLine(section, undefined, undefined, true);\n        var totalHeight = lineCountInfo.lineCount;\n        var lineToBeSplit = Math.round(totalHeight / section.sectionFormat.numberOfColumns);\n        while (section) {\n            var lineCountInfo_2 = this.getCountOrLine(section, lineToBeSplit, true, false);\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var clientArea = this.viewer.clientArea.clone();\n            if (lineCountInfo_2.lineWidget.paragraph.indexInOwner === 0 && lineCountInfo_2.lineWidget.indexInOwner === 0) {\n                this.updateColumnIndex(lineCountInfo_2.lineWidget.paragraph.bodyWidget, true);\n            }\n            else {\n                this.splitParagraph(lineCountInfo_2.lineWidget.paragraph, lineCountInfo_2.lineWidget.indexInOwner, undefined);\n                var nextBody = this.moveBlocksToNextPage(lineCountInfo_2.lineWidget.paragraph.previousRenderedWidget);\n                this.viewer.clientActiveArea = clientActiveArea;\n                this.viewer.clientArea = clientArea;\n                if (!isNullOrUndefined(nextBody.nextRenderedWidget)) {\n                    this.updateColumnIndex(nextBody.nextRenderedWidget, true);\n                }\n            }\n            if (lineCountInfo_2.lineWidget.paragraph.bodyWidget.columnIndex === lineCountInfo_2.lineWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns - 1) {\n                break;\n            }\n            section = section.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.updateColumnIndex = function (section, increase) {\n        while (section) {\n            if (increase) {\n                section.columnIndex++;\n            }\n            else {\n                section.columnIndex = 0;\n            }\n            section = section.nextRenderedWidget;\n        }\n    };\n    Layout.prototype.shiftChildWidgetInFootnote = function (footnote) {\n        var page = footnote.page;\n        var yPosition = footnote.y - footnote.height;\n        if (page.bodyWidgets[0].childWidgets.length === 1 && page.bodyWidgets[0].firstChild) {\n            var startY = page.bodyWidgets[0].firstChild.y;\n            var bodyWidgetHeight = this.getBodyWidgetHeight(page.bodyWidgets[0]);\n            if (yPosition < startY + bodyWidgetHeight) {\n                yPosition = startY + bodyWidgetHeight;\n            }\n        }\n        footnote.y = yPosition;\n        yPosition += footnote.margin.top;\n        var multiColumnY = yPosition;\n        var columnBody = footnote.bodyWidgets[0];\n        for (var i = 0; i < footnote.bodyWidgets.length; i++) {\n            if (footnote.bodyWidgets[i].columnIndex !== columnBody.columnIndex) {\n                yPosition = multiColumnY;\n            }\n            columnBody = footnote.bodyWidgets[i];\n            for (var j = 0; j < footnote.bodyWidgets[i].childWidgets.length; j++) {\n                var childWidget = footnote.bodyWidgets[i].childWidgets[j];\n                if (childWidget instanceof ParagraphWidget) {\n                    childWidget.y = yPosition;\n                    yPosition += childWidget.height;\n                }\n                else {\n                    this.shiftChildLocationForTableWidget(childWidget, yPosition - childWidget.y);\n                    yPosition += childWidget.height;\n                }\n            }\n        }\n    };\n    /**\n       * @private\n       */\n    Layout.prototype.getBodyWidgetHeight = function (bodyWidget) {\n        var height = 0;\n        for (var i = 0; i < bodyWidget.childWidgets.length; i++) {\n            height += bodyWidget.childWidgets[i].height;\n        }\n        return height;\n    };\n    // check whether the paragraph has the field separator or field end of the field begin.\n    Layout.prototype.checkParaHasField = function (paragraph) {\n        var hasField = false;\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var lineWidget = paragraph.childWidgets[i];\n            for (var j = 0; j < lineWidget.children.length; j++) {\n                var element = lineWidget.children[j];\n                if (element instanceof FieldElementBox && (element.fieldType === 2 || element.fieldType === 1)) {\n                    if (this.documentHelper.fieldStacks.length > 0 && element.fieldBegin === this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1]) {\n                        hasField = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return hasField;\n    };\n    // check whether the table has the field separator or field end of the field begin.\n    Layout.prototype.checkTableHasField = function (table) {\n        var hasField = false;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                for (var k = 0; k < cell.childWidgets.length; k++) {\n                    var block = cell.childWidgets[k];\n                    if (block instanceof ParagraphWidget) {\n                        hasField = this.checkParaHasField(block);\n                    }\n                    else {\n                        hasField = this.checkTableHasField(block);\n                    }\n                    if (hasField) {\n                        break;\n                    }\n                }\n            }\n        }\n        return hasField;\n    };\n    Layout.prototype.layoutParagraph = function (paragraph, lineIndex, isUpdatedList) {\n        if (this.isFieldCode && !this.checkParaHasField(paragraph)) {\n            paragraph.isFieldCodeBlock = true;\n            return paragraph;\n        }\n        this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n        var isListLayout = true;\n        var isFirstElmIsparagraph = this.isFirstElementWithPageBreak(paragraph);\n        if (!isFirstElmIsparagraph) {\n            this.layoutListItems(paragraph, isUpdatedList);\n            isListLayout = false;\n        }\n        if (paragraph.isEmpty()) {\n            this.layoutEmptyLineWidget(paragraph, true);\n        }\n        else {\n            var line = lineIndex < paragraph.childWidgets.length ?\n                paragraph.childWidgets[lineIndex] : undefined;\n            if (!this.isRelayoutOverlap && !(paragraph.containerWidget instanceof TextFrame)) {\n                this.layoutFloatElements(paragraph);\n            }\n            while (line instanceof LineWidget) {\n                if (paragraph !== line.paragraph && line.indexInOwner === 0 && isListLayout) {\n                    if (line.previousLine.isEndsWithColumnBreak) {\n                        this.viewer.updateClientAreaForBlock(paragraph, true);\n                        this.layoutListItems(line.paragraph);\n                        this.viewer.updateClientAreaForBlock(paragraph, false);\n                    }\n                    else {\n                        this.layoutListItems(line.paragraph);\n                    }\n                }\n                if (line.isFirstLine() && isNullOrUndefined(this.fieldBegin)) {\n                    if (!isNullOrUndefined(paragraph.paragraphFormat)) {\n                        var firstLineIndent = -HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n                        this.viewer.updateClientWidth(firstLineIndent);\n                    }\n                }\n                line.marginTop = 0;\n                //let bodyIndex: number = line.paragraph.bodyWidget.indexInOwner;\n                // if (!this.isInitialLoad && !this.isBidiReLayout && this.isContainsRtl(line)) {\n                //     this.reArrangeElementsForRtl(line, paragraph.paragraphFormat.bidi);\n                // }\n                line = this.layoutLine(line, 0);\n                // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n                //     line = undefined;\n                // }\n                // else {\n                paragraph = line.paragraph;\n                line = line.nextLine;\n                // }\n            }\n        }\n        this.updateWidgetToPage(this.viewer, paragraph);\n        paragraph.isLayouted = true;\n        // this.updateLinearIndex(paragraph);\n        paragraph.isFieldCodeBlock = false;\n        return paragraph;\n    };\n    Layout.prototype.clearLineMeasures = function () {\n        this.maxBaseline = 0;\n        this.maxTextBaseline = 0;\n        this.maxTextHeight = 0;\n    };\n    Layout.prototype.layoutFloatElements = function (paragraph) {\n        var _this = this;\n        paragraph.floatingElements.forEach(function (shape) {\n            if (shape instanceof ShapeBase && shape.textWrappingStyle !== 'Inline') {\n                if (!_this.isRelayoutOverlap) {\n                    _this.layoutShape(shape);\n                }\n            }\n        });\n    };\n    Layout.prototype.layoutShape = function (element) {\n        if (element instanceof ShapeElementBox && element.isHorizontalRule) {\n            return;\n        }\n        if (element.textWrappingStyle !== 'Inline') {\n            var position = this.getFloatingItemPoints(element);\n            element.x = position.x;\n            element.y = position.y;\n            if (!element.paragraph.isInsideTable && element.paragraph.indexInOwner !== 0 && element.verticalPosition >= 0 && Math.round(element.paragraph.y) >= Math.round(element.y) && this.viewer.clientArea.bottom <= element.y + element.height && (element.verticalOrigin == \"Line\" || element.verticalOrigin == \"Paragraph\") && element.textWrappingStyle !== \"InFrontOfText\" && element.textWrappingStyle !== \"Behind\") {\n                this.moveToNextPage(this.viewer, element.line);\n                this.updateShapeBaseLocation(element.line.paragraph);\n            }\n            var bodyWidget = element.paragraph.bodyWidget;\n            if (bodyWidget.floatingElements.indexOf(element) === -1) {\n                bodyWidget.floatingElements.push(element);\n                /* eslint:disable */\n                bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            }\n            if (element.paragraph.floatingElements.indexOf(element) === -1) {\n                element.paragraph.floatingElements.push(element);\n            }\n        }\n        else {\n            if (element.width === 0 && element.widthScale !== 0) {\n                var containerWidth = HelperMethods.convertPointToPixel(element.line.paragraph.getContainerWidth());\n                element.width = (containerWidth / 100) * element.widthScale;\n            }\n        }\n        var clientArea = this.viewer.clientArea;\n        var clientActiveArea = this.viewer.clientActiveArea;\n        if (element instanceof ShapeElementBox) {\n            var blocks = element.textFrame.childWidgets;\n            this.viewer.updateClientAreaForTextBoxShape(element, true);\n            for (var i = 0; i < blocks.length; i++) {\n                var block = blocks[i];\n                this.viewer.updateClientAreaForBlock(block, true);\n                if (block instanceof TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                }\n                this.layoutBlock(block, 0);\n                this.viewer.updateClientAreaForBlock(block, false);\n            }\n        }\n        this.viewer.clientActiveArea = clientActiveArea;\n        this.viewer.clientArea = clientArea;\n    };\n    Layout.prototype.moveElementFromNextLine = function (line) {\n        var nextLine = line.nextLine;\n        if (nextLine && !line.paragraph.bodyWidget.sectionFormat.equalWidth && line.paragraph.bodyWidget.columnIndex !== nextLine.paragraph.bodyWidget.columnIndex) {\n            nextLine = undefined;\n        }\n        while (nextLine instanceof LineWidget) {\n            if (nextLine.children.length > 0) {\n                var element = nextLine.children.splice(0, 1)[0];\n                line.children.push(element);\n                element.line = line;\n                break;\n            }\n            else {\n                if (nextLine.paragraph.childWidgets.length === 1) {\n                    nextLine.paragraph.destroy();\n                }\n                else {\n                    nextLine.paragraph.childWidgets.splice(nextLine.paragraph.childWidgets.indexOf(nextLine), 1);\n                }\n                nextLine = line.nextLine;\n            }\n        }\n    };\n    Layout.prototype.layoutLine = function (line, count) {\n        var paragraph = line.paragraph;\n        if (line.children.length === 0) {\n            this.moveElementFromNextLine(line);\n        }\n        var element = line.children[count];\n        var isNotEmptyField = true;\n        if (element instanceof FieldElementBox && line.children[line.children.length - 1] instanceof FieldElementBox) {\n            isNotEmptyField = false;\n            for (var i = 0; i < line.children.length; i++) {\n                if (line.children[i].fieldType == 2 && line.children[i].nextElement != undefined && !(line.children[i].nextElement instanceof FieldElementBox)) {\n                    isNotEmptyField = true;\n                    break;\n                }\n            }\n        }\n        this.clearLineMeasures();\n        line.marginTop = 0;\n        var bodyIndex = paragraph.bodyWidget.indexInOwner;\n        var lineIndex = line.indexInOwner;\n        while (element instanceof ElementBox) {\n            element.padding.left = 0;\n            if (!isNotEmptyField) {\n                this.layoutElement(element, paragraph, true);\n                isNotEmptyField = true;\n            }\n            else {\n                this.layoutElement(element, paragraph);\n            }\n            line = element.line;\n            if (element instanceof TextElementBox) {\n                var textElement = element;\n                if (!isNullOrUndefined(textElement.errorCollection) && textElement.errorCollection.length > 0) {\n                    textElement.ischangeDetected = true;\n                }\n            }\n            if (!this.isRTLLayout) {\n                var lineIndex_1 = paragraph.childWidgets.indexOf(element.line);\n                if (lineIndex_1 > 0 && this.hasFloatingElement) {\n                    this.hasFloatingElement = false;\n                    if (paragraph.bodyWidget.floatingElements.length > 0 && element instanceof TextElementBox && !(paragraph.containerWidget instanceof TableCellWidget)) {\n                        element = paragraph.childWidgets[lineIndex_1].children[0];\n                    }\n                }\n                else {\n                    this.hasFloatingElement = false;\n                    if (this.is2013Justification && !isNullOrUndefined(this.nextElementToLayout) && !(!isNullOrUndefined(element.paragraph.containerWidget.containerShape) && element.paragraph.containerWidget.containerShape === this.nextElementToLayout)) {\n                        element = this.nextElementToLayout;\n                    }\n                    else {\n                        // if (!line.paragraph.isInsideTable && bodyIndex !== line.paragraph.containerWidget.indexInOwner && !isNullOrUndefined(element.nextElement)) {\n                        //     if (element.nextElement.line.children.indexOf(element.nextElement) !== element.nextElement.line.children.length - 1) {\n                        //         element = undefined;\n                        //     }\n                        // }\n                        // if (!isNullOrUndefined(element)) {\n                        element = element.nextElement;\n                        // }\n                        if (element instanceof TextElementBox && element.text.indexOf(\" \") == 0 && element.text.length > 2) {\n                            if (isNullOrUndefined(element.nextElement) && element.text.trim().length > 0) {\n                                element.text = element.text.substring(1, element.text.length);\n                                var elementIndex = element.line.children.indexOf(element);\n                                element.line.children.splice(elementIndex, 1);\n                                var textElement = new TextElementBox();\n                                textElement.text = \" \";\n                                textElement.line = element.line;\n                                textElement.characterFormat.copyFormat(element.characterFormat);\n                                // Copy revisions\n                                if (element.revisions.length > 0) {\n                                    for (var m = 0; m < element.revisions.length; m++) {\n                                        var revision = element.revisions[m];\n                                        textElement.revisions.push(revision);\n                                        var rangeIndex = revision.range.indexOf(element);\n                                        if (rangeIndex < 0) {\n                                            revision.range.push(textElement);\n                                        }\n                                        else {\n                                            revision.range.splice(rangeIndex, 0, textElement);\n                                        }\n                                    }\n                                }\n                                element.line.children.splice(elementIndex, 0, textElement);\n                                element.line.children.splice(elementIndex + 1, 0, element);\n                                element = textElement;\n                            }\n                        }\n                    }\n                    this.nextElementToLayout = undefined;\n                }\n            }\n            else {\n                element = undefined;\n                this.isRTLLayout = false;\n            }\n        }\n        return line;\n    };\n    /* eslint-disable  */\n    Layout.prototype.layoutElement = function (element, paragraph, isEmptyField) {\n        if ((element.isPageBreak && paragraph.isInHeaderFooter) || (element instanceof ShapeElementBox && element.isHorizontalRule)) {\n            return;\n        }\n        var line = element.line;\n        var text = '';\n        var index = element.indexInOwner;\n        if (this.viewer.owner.editorModule && this.viewer.owner.editorHistoryModule && this.viewer.owner.editorHistoryModule.isRedoing && !isNullOrUndefined(element.paragraph.containerWidget.footNoteReference) && this.viewer.owner.enableTrackChanges && element.removedIds.length > 0) {\n            this.viewer.owner.editorModule.constructRevisionFromID(element, true);\n        }\n        if (element instanceof FieldElementBox) {\n            if (element.fieldType === 0) {\n                if (this.documentHelper.fields.indexOf(element) === -1) {\n                    this.documentHelper.fields.push(element);\n                }\n                if (!isNullOrUndefined(element.formFieldData) &&\n                    this.documentHelper.formFields.indexOf(element) === -1 && !this.isInsertFormField) {\n                    this.documentHelper.formFields.push(element);\n                }\n            }\n            this.layoutFieldCharacters(element);\n            if (element.line.isLastLine() && isNullOrUndefined(element.nextNode) && !this.isFieldCode) {\n                this.moveToNextLine(line);\n            }\n            else if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n                if (element.line.isLastLine() && isNullOrUndefined(element.nextNode) && !this.isFieldCode) {\n                    if (element.fieldType !== 2 && isNullOrUndefined(element.fieldSeparator)) {\n                        this.layoutEmptyLineWidget(paragraph, false, element.line);\n                    }\n                    this.moveToNextLine(line);\n                }\n            }\n            else if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n                this.moveToNextLine(line);\n                if (line.paragraph.lastChild === line && !isNullOrUndefined(line.nextLine) &&\n                    this.viewer.clientActiveArea.height >= 0) {\n                    this.moveFromNextPage(line);\n                }\n            }\n            else if (isEmptyField) {\n                var textHelper = this.documentHelper.textHelper.getHeight(paragraph.characterFormat);\n                element.height = textHelper.Height;\n            }\n            return;\n        }\n        if (element instanceof ListTextElementBox || this.isFieldCode || element instanceof BookmarkElementBox ||\n            element instanceof EditRangeEndElementBox || element instanceof EditRangeStartElementBox\n            || element instanceof ContentControl ||\n            (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n            if (element instanceof BookmarkElementBox) {\n                if (element.bookmarkType === 0 && !this.documentHelper.bookmarks.containsKey(element.name)) {\n                    this.documentHelper.bookmarks.add(element.name, element);\n                    if (!isNullOrUndefined(element.properties)) {\n                        var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n                        if (element.paragraph.isInsideTable) {\n                            var row = element.paragraph.associatedCell.ownerRow;\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n                            if (!isNullOrUndefined(cell)) {\n                                cell.isRenderBookmarkStart = true;\n                            }\n                        }\n                    }\n                }\n                else if (element.bookmarkType === 1 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                    var bookmrkElement = this.documentHelper.bookmarks.get(element.name);\n                    if (isNullOrUndefined(bookmrkElement.reference)\n                        || isNullOrUndefined(bookmrkElement.reference.paragraph)\n                        || isNullOrUndefined(bookmrkElement.reference.paragraph.bodyWidget)) {\n                        bookmrkElement.reference = element;\n                        element.reference = bookmrkElement;\n                    }\n                    if (isNullOrUndefined(bookmrkElement.properties)) {\n                        if (!isNullOrUndefined(this.documentHelper.selection) && this.documentHelper.selection.isRenderBookmarkAtEnd(bookmrkElement.reference)) {\n                            var cell = bookmrkElement.reference.paragraph.associatedCell;\n                            cell.isRenderBookmarkEnd = true;\n                        }\n                    }\n                    else {\n                        if (!isNullOrUndefined(element.paragraph.associatedCell)) {\n                            var lastPara = this.documentHelper.selection.getLastParagraph(element.paragraph.associatedCell);\n                            var lastLine = lastPara.lastChild;\n                            if (!isNullOrUndefined(lastLine)) {\n                                var lastElement = lastLine.children[lastLine.children.length - 1];\n                                if (lastElement == element) {\n                                    var columnLast = parseInt(element.reference.properties['columnLast']);\n                                    var endRow = element.paragraph.associatedCell.ownerRow;\n                                    var endCell = undefined;\n                                    var cellIndex = columnLast;\n                                    while (isNullOrUndefined(endCell) && cellIndex > -1) {\n                                        endCell = endRow.getCellUsingColumnIndex(endRow.rowIndex, cellIndex);\n                                        if (isNullOrUndefined(endCell)) {\n                                            cellIndex--;\n                                        }\n                                    }\n                                    if (!isNullOrUndefined(endCell)) {\n                                        endRow.isRenderBookmarkEnd = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (element.bookmarkType === 0 && this.documentHelper.bookmarks.containsKey(element.name)) {\n                    if (isNullOrUndefined(element.reference)) {\n                        this.documentHelper.bookmarks.remove(element.name);\n                    }\n                    if (!isNullOrUndefined(element.properties)) {\n                        var columnFirst = parseInt(element.properties[\"columnFirst\"]);\n                        if (element.paragraph.isInsideTable) {\n                            var row = element.paragraph.associatedCell.ownerRow;\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, columnFirst);\n                            if (!isNullOrUndefined(cell)) {\n                                cell.isRenderBookmarkStart = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n                if (element instanceof EditRangeStartElementBox && (this.documentHelper.owner.currentUser === element.user || (element.group === \"Everyone\" && element.user === \"\"))) {\n                    if (element.columnFirst != -1 && element.columnLast != -1) {\n                        var row = element.paragraph.associatedCell.ownerRow;\n                        var cell = row.getCellUsingColumnIndex(row.rowIndex, element.columnFirst);\n                        if (!isNullOrUndefined(cell)) {\n                            cell.isRenderEditRangeStart = true;\n                            row.editRangeID.add(element.editRangeId, element);\n                        }\n                    }\n                }\n                else if (element instanceof EditRangeEndElementBox && (this.documentHelper.owner.currentUser === element.editRangeStart.user || (element.editRangeStart.group === \"Everyone\" && element.editRangeStart.user === \"\"))) {\n                    if (element.editRangeStart.columnFirst != -1 && element.editRangeStart.columnLast != -1) {\n                        var row = element.paragraph.associatedCell.ownerRow;\n                        if (row.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n                            var cell = row.getCellUsingColumnIndex(row.rowIndex, element.editRangeStart.columnFirst);\n                            if (!isNullOrUndefined(cell)) {\n                                if (cell.isRenderEditRangeStart) {\n                                    cell.isRenderEditRangeEnd = true;\n                                }\n                            }\n                        }\n                        else {\n                            var table = element.paragraph.associatedCell.ownerTable;\n                            for (var i = row.rowIndex - 1; i >= 0; i--) {\n                                var previousRow = table.childWidgets[i];\n                                if (previousRow.editRangeID.containsKey(element.editRangeStart.editRangeId)) {\n                                    var previousCell = previousRow.getCellUsingColumnIndex(previousRow.rowIndex, element.editRangeStart.columnFirst);\n                                    if (!isNullOrUndefined(previousCell)) {\n                                        if (previousCell.isRenderEditRangeStart) {\n                                            previousCell.isRenderEditRangeEnd = true;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline' && paragraph.floatingElements.indexOf(element) == -1) {\n                if (element instanceof ShapeElementBox) {\n                    if (paragraph.floatingElements.indexOf(element) === -1) {\n                        paragraph.floatingElements.push(element);\n                    }\n                    if (paragraph.bodyWidget.floatingElements.indexOf(element) === -1) {\n                        paragraph.bodyWidget.floatingElements.push(element);\n                    }\n                }\n            }\n            if (element instanceof ContentControl && this.documentHelper.contentControlCollection.indexOf(element) === -1) {\n                if (element.type === 0) {\n                    this.documentHelper.contentControlCollection.push(element);\n                }\n                else if (element.type === 1) {\n                    var endPage = element.paragraph.bodyWidget.page;\n                    for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n                        var cCStart = this.documentHelper.contentControlCollection[i];\n                        var isInHeaderFooter = cCStart.line.paragraph.isInHeaderFooter;\n                        // Link content control present in same header.\n                        if (isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties\n                            && endPage === cCStart.line.paragraph.bodyWidget.page) {\n                            element.reference = cCStart;\n                            cCStart.reference = element;\n                        }\n                        else if (!isInHeaderFooter && element.contentControlProperties === cCStart.contentControlProperties) {\n                            element.reference = cCStart;\n                            cCStart.reference = element;\n                        }\n                    }\n                }\n            }\n            if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n            if (element.line.isLastLine() && isNullOrUndefined(element.nextElement)) {\n                if (this.hasValidElement(line.paragraph) && !paragraph.isContainsShapeAlone()) {\n                    this.moveToNextLine(line);\n                }\n                else if (!this.isInitialLoad && !this.hasValidElement(line.paragraph) && line.paragraph.paragraphFormat.bidi && line.paragraph.paragraphFormat.listFormat.listId !== -1) {\n                    this.moveToNextLine(line);\n                }\n                else {\n                    this.layoutEmptyLineWidget(line.paragraph, false, line, false);\n                }\n            }\n            return;\n        }\n        if (element instanceof TextElementBox && element.characterFormat.highlightColor != \"NoColor\" && element.text.trim() != \"\" && element.text != element.text.trim()) {\n            var firstLine = paragraph.firstChild;\n            var lastLine = paragraph.lastChild;\n            if (!isNullOrUndefined(firstLine) && firstLine instanceof LineWidget && firstLine.children.length > 0 && element === firstLine.children[0]) {\n                HelperMethods.splitSpaceInTextElementBox(element, true);\n            }\n            if (!isNullOrUndefined(lastLine) && lastLine instanceof LineWidget && lastLine.children.length > 0 && element === lastLine.children[lastLine.children.length - 1]) {\n                HelperMethods.splitSpaceInTextElementBox(element, false);\n            }\n        }\n        var width = element.width;\n        if (element instanceof FieldTextElementBox && !this.isTocField(element.fieldBegin)) {\n            text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n            if (text !== '') {\n                element.text = text;\n            }\n            else {\n                text = element.text;\n            }\n        }\n        else if (element instanceof FootnoteElementBox) {\n            text = this.startAt(element, text);\n            if (text !== '') {\n                element.text = text;\n            }\n        }\n        else if (element instanceof TextElementBox) {\n            // skip when cliked enter in first footnote element\n            if (!isNullOrUndefined(element.paragraph.containerWidget.footNoteReference)\n                && element.line.isFirstLine()\n                && element.paragraph.index === 0\n                && element.indexInOwner === 0\n                && !this.documentHelper.owner.editorModule.handleEnterKey) {\n                element.text = element.paragraph.containerWidget.footNoteReference.text;\n            }\n            this.checkAndSplitTabOrLineBreakCharacter(element.text, element);\n            //TODO: Need to update revision\n            // if (element.text.length > 1 && element.line.paragraph.bidi) {\n            //     let splittedText: string[] = this.splitTextByConsecutiveLtrAndRtl(element);\n            //     this.updateSplittedText(element, splittedText);\n            // }\n            text = element.text;\n        }\n        // Here field code width and height update need to skipped based on the hidden property.\n        if (element instanceof TextElementBox) {\n            // if (this.isRelayout) {\n            width = this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n            /*} else {\n                width = element.trimEndWidth;\n            }*/\n            if (element.text === '\\t') {\n                width = this.getTabWidth(paragraph, this.viewer, index, line, element);\n                element.width = width;\n            }\n            // As per MS word behavior, optional hyper Or column break is shown only when show paragraph mark properly is enabled\n            // We need to show this special character based on property `showHiddenMark`\n            else if (element.text === String.fromCharCode(31) || element.text === String.fromCharCode(14)) {\n                element.width = width = 0;\n            }\n        }\n        if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(element instanceof ShapeElementBox && element.textWrappingStyle == 'Inline') && !(paragraph.containerWidget instanceof TextFrame && !(element instanceof CommentCharacterElementBox)) &&\n            !(paragraph.containerWidget instanceof TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof TextFrame)) {\n            this.adjustPosition(element, element.line.paragraph.bodyWidget);\n        }\n        if (this.viewer instanceof PageLayoutViewer &&\n            ((element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline') || !(element instanceof ShapeElementBox))\n            && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            if ((element instanceof TextElementBox && (element.text !== '\\f' && element.text !== String.fromCharCode(14) || (element.text === '\\f' && paragraph.isPageBreak() && this.documentHelper.compatibilityMode === 'Word2013'))) || !(element instanceof TextElementBox)) {\n                //let bodyIndex: number = line.paragraph.containerWidget.indexInOwner;\n                this.moveToNextPage(this.viewer, line);\n                // if (bodyIndex !== line.paragraph.containerWidget.indexInOwner) {\n                //     return;\n                // }\n            }\n            if (element instanceof FieldTextElementBox) {\n                this.updateFieldText(element);\n            }\n            if (element.previousElement &&\n                ((element.previousElement instanceof ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline') ||\n                    !(element.previousElement instanceof ShapeElementBox))) {\n                this.cutClientWidth(element.previousElement);\n            }\n        }\n        if (element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline') {\n            if (paragraph.floatingElements.indexOf(element) === -1) {\n                paragraph.floatingElements.push(element);\n            }\n            if (element.width > this.viewer.clientActiveArea.width) {\n                this.splitElementForClientArea(paragraph, element);\n                this.checkLineWidgetWithClientArea(line, element);\n            }\n            var is2013Justification = this.is2013Justification;\n            this.layoutShape(element);\n            this.is2013Justification = is2013Justification;\n        }\n        // tslint:disable-next-line:max-line-length\n        if (element instanceof FootnoteElementBox && (!element.isLayout || this.isLayoutWhole) && this.documentHelper.owner.layoutType === 'Pages') {\n            this.layoutFootEndNoteElement(element);\n        }\n        if (element instanceof FootnoteElementBox) {\n            if (this.isfootMove) {\n                this.moveToNextPage(this.viewer, element.line);\n                if (element.previousElement &&\n                    ((element.previousElement instanceof ShapeElementBox && element.previousElement.textWrappingStyle === 'Inline') ||\n                        !(element.previousElement instanceof ShapeElementBox))) {\n                    this.cutClientWidth(element.previousElement);\n                }\n                this.isfootMove = false;\n            }\n            if (paragraph.paragraphFormat.keepWithNext && paragraph.paragraphFormat.keepLinesTogether && !(!element.isLayout || this.isLayoutWhole)) {\n                if (!isNullOrUndefined(paragraph.bodyWidget.page.footnoteWidget) && paragraph.bodyWidget.page.footnoteWidget.y !== 0 && paragraph.bodyWidget.page.footnoteWidget.y < this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height) {\n                    var findDiff = this.viewer.clientActiveArea.y + this.viewer.clientActiveArea.height - paragraph.bodyWidget.page.footnoteWidget.y;\n                    this.viewer.clientActiveArea.height -= findDiff;\n                }\n            }\n        }\n        if (parseFloat(width.toFixed(4)) <= parseFloat(this.viewer.clientActiveArea.width.toFixed(4)) || !this.viewer.textWrap) {\n            //Fits the text in current line.\n            this.addElementToLine(paragraph, element);\n            if (isNullOrUndefined(element.nextElement) && !element.line.isLastLine()) {\n                var nextLine = element.line.nextLine;\n                var nextElement = nextLine.children[0];\n                if (nextElement instanceof TextElementBox && nextElement.text.indexOf(\" \") == 0) {\n                    this.moveElementFromNextLine(line);\n                }\n            }\n            if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0 && !element.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n            else if (!element.line.isLastLine() && isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width === 0) {\n                this.moveToNextLine(line);\n                if (line.paragraph.lastChild === line && this.viewer.clientActiveArea.height >= 0) {\n                    this.moveFromNextPage(line);\n                }\n            }\n        }\n        else if (element instanceof TextElementBox) {\n            if (element.text === '\\t') {\n                var currentLine = element.line;\n                var isElementMoved = false;\n                // Added the condition to check While the tab element width is greater then clientActiveArea width and while it was first element of line should not move to next line\n                if (element.indexInOwner !== 0 && element instanceof TabElementBox) {\n                    isElementMoved = true;\n                    this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element) - 1);\n                }\n                else {\n                    if (this.isWrapText && this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width === this.viewer.clientActiveArea.right) {\n                        this.isWrapText = false;\n                    }\n                    this.addSplittedLineWidget(currentLine, currentLine.children.indexOf(element));\n                }\n                this.moveToNextLine(currentLine);\n                if (currentLine.paragraph.bodyWidget.floatingElements.length > 0 && isElementMoved) {\n                    this.nextElementToLayout = element;\n                    this.hasFloatingElement = true;\n                    return;\n                }\n                else {\n                    // Recalculates tab width based on new client active area X position\n                    element.width = this.getTabWidth(paragraph, this.viewer, index, element.line, element);\n                    if (isElementMoved) {\n                        this.addElementToLine(paragraph, element);\n                        if (isNullOrUndefined(element.nextElement) && this.viewer.clientActiveArea.width > 0\n                            && !element.line.isLastLine()) {\n                            this.moveElementFromNextLine(element.line);\n                        }\n                    }\n                }\n            }\n            else {\n                //Splits the text and arrange line by line, till end of text.\n                do {\n                    line = element.line;\n                    //Added the condition to skip line split while layouting dropDownFormField \n                    if (!(element.previousElement instanceof FieldElementBox && element.previousElement.fieldType == 2\n                        && !isNullOrUndefined(element.previousElement.fieldBeginInternal)\n                        && element.previousElement.fieldBeginInternal.formFieldData instanceof DropDownFormField)) {\n                        this.splitTextForClientArea(line, element, element.text, element.trimEndWidth, element.characterFormat);\n                    }\n                    this.checkLineWidgetWithClientArea(line, element);\n                    if (element instanceof FieldTextElementBox && !this.isInitialLoad) {\n                        this.updateFieldText(element);\n                    }\n                    if (element.line !== line && !isNullOrUndefined(this.nextElementToLayout) && this.is2013Justification) {\n                        return;\n                    }\n                } while (element.line !== line && this.cutClientWidth(element));\n            }\n        }\n        else {\n            do {\n                line = element.line;\n                this.splitElementForClientArea(paragraph, element);\n                this.checkLineWidgetWithClientArea(line, element);\n                if (element instanceof FieldTextElementBox) {\n                    this.updateFieldText(element);\n                }\n            } while (element.line !== line && this.cutClientWidth(element, true));\n        }\n        var contentControl;\n        if (!isNullOrUndefined(element.nextNode) && element.nextNode instanceof ContentControl) {\n            contentControl = element.nextNode;\n        }\n        if ((text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) && !contentControl) {\n            var elementIndex = line.children.indexOf(element);\n            if (elementIndex > -1) {\n                this.addSplittedLineWidget(line, elementIndex);\n            }\n        }\n        if (element.line.isLastLine() && isNullOrUndefined(element.nextElement) || text === '\\v' || text === '\\f' || text === '\\r' || text === String.fromCharCode(14)) {\n            if (this.isXPositionUpdated) {\n                this.isXPositionUpdated = false;\n                return;\n            }\n            this.moveToNextLine(element.line);\n            if (text === '\\v' && isNullOrUndefined(element.nextNode)) {\n                this.layoutEmptyLineWidget(paragraph, true, line, true);\n            }\n            else if ((text === '\\f' || text === String.fromCharCode(14)) && this.viewer instanceof PageLayoutViewer && !(element.line.paragraph.containerWidget instanceof TableCellWidget)) {\n                var isRTLLayout = this.isRTLLayout;\n                this.isRTLLayout = false;\n                if (isNullOrUndefined(element.nextNode) || element.nextNode instanceof ContentControl) {\n                    if (text === String.fromCharCode(14)) {\n                        this.moveToNextPage(this.viewer, element.line.nextLine, false);\n                        this.layoutEmptyLineWidget(element.line.nextLine.paragraph, false, element.line.nextLine, true);\n                    }\n                    else {\n                        this.moveToNextPage(this.viewer, element.line, true);\n                    }\n                }\n                else if (!isNullOrUndefined(element.line.nextLine)) {\n                    this.moveToNextPage(this.viewer, element.line.nextLine, false);\n                }\n                this.isRTLLayout = isRTLLayout;\n            }\n        }\n        this.isXPositionUpdated = false;\n    };\n    /**\n    * @private\n    */\n    Layout.prototype.adjustPosition = function (element, bodyWidget) {\n        var clientArea = this.viewer.clientActiveArea;\n        var previousLeft = this.viewer.clientActiveArea.x;\n        var previousTop = this.viewer.clientActiveArea.y;\n        var previousWidth = this.viewer.clientActiveArea.width;\n        var adjustedRect = this.adjustClientAreaBasedOnTextWrap(element, new Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height));\n        this.viewer.clientActiveArea.width = adjustedRect.width;\n        //Updated element padding for wrapping.\n        // if (this.isWrapText) {\n        var wrapDiff = this.viewer.clientActiveArea.x - previousLeft;\n        // if (element.indexInOwner === 0 && element.line.isFirstLine()) {\n        //     wrapDiff -= HelperMethods.convertPointToPixel(element.line.paragraph.paragraphFormat.firstLineIndent);\n        // }\n        if (element.line.isFirstLine() && this.getFirstElement(element.line) === element && wrapDiff > 0) {\n            wrapDiff += HelperMethods.convertPointToPixel(element.line.paragraph.paragraphFormat.firstLineIndent);\n        }\n        element.padding.left = wrapDiff > 0 ? wrapDiff : 0;\n        if (previousWidth !== this.viewer.clientActiveArea.width) {\n            var wrapPos = new WrapPosition(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.width);\n            this.updateWrapPosition(wrapPos);\n        }\n        //this.isWrapText = false;\n        // }\n        if (this.viewer.clientActiveArea.width === 0) {\n            this.isWrapText = false;\n        }\n        if (this.isYPositionUpdated) {\n            if (element.line.isFirstLine()) {\n                if (!isNullOrUndefined(element.line.paragraph.associatedCell)) {\n                    var previousRenderedWidget = element.line.paragraph.previousRenderedWidget;\n                    if (!isNullOrUndefined(previousRenderedWidget)) {\n                        element.line.paragraph.associatedCell.height += (this.viewer.clientActiveArea.y - previousRenderedWidget.y + previousRenderedWidget.height);\n                    }\n                    else {\n                        element.line.paragraph.associatedCell.height += (this.viewer.clientActiveArea.y - previousTop);\n                    }\n                }\n                element.line.paragraph.y = this.viewer.clientActiveArea.y;\n            }\n            else if (element.line.children[0] === element) {\n                element.line.marginTop += (this.viewer.clientActiveArea.y - previousTop);\n            }\n            if (element.line.paragraph.containerWidget instanceof HeaderFooterWidget) {\n                element.line.paragraph.containerWidget.height += (this.viewer.clientActiveArea.y - previousTop);\n            }\n            if (!(element instanceof ListTextElementBox)) {\n                this.isYPositionUpdated = false;\n            }\n        }\n    };\n    Layout.prototype.getFirstElement = function (line) {\n        for (var j = 0; j < line.children.length; j++) {\n            var element = line.children[j];\n            if (!(element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n                return element;\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.updateWrapPosition = function (wrapPos) {\n        for (var i = 0; i < this.wrapPosition.length; i++) {\n            var previousWrapPos = this.wrapPosition[i];\n            if (Math.abs(previousWrapPos.right - wrapPos.right) > 1) {\n                continue;\n            }\n            else {\n                return;\n            }\n        }\n        this.wrapPosition.push(wrapPos);\n    };\n    Layout.prototype.isFirstitemInPage = function (element, yposition) {\n        if (!element.line.paragraph.isInHeaderFooter && Math.round(yposition) === this.viewer.clientArea.y) {\n            return true;\n        }\n        return false;\n    };\n    Layout.prototype.isTextFitBelow = function (rect, top, element) {\n        //TODO: After shape implementation.\n        return false;\n    };\n    Layout.prototype.isNeedToWrapForTopAndBottom = function (currWidgetOwnerPara, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n        if (currWidgetOwnerPara.isInsideTable && textWrappingStyle === \"TopAndBottom\" && !(floatingEntity instanceof TableWidget)) {\n            var floatingItemOwnerPara = floatingEntity.paragraph;\n            if (!isNullOrUndefined(floatingItemOwnerPara) && !isNullOrUndefined(floatingItemOwnerPara.associatedCell)) {\n                var isLayoutInCell = floatingItemOwnerPara.isInsideTable;\n                var floatingItemOwnerCell = floatingItemOwnerPara.associatedCell;\n                var currParaOwnerCell = currWidgetOwnerPara.associatedCell;\n                if ((!isNullOrUndefined(floatingItemOwnerCell) && !isNullOrUndefined(currParaOwnerCell) && floatingItemOwnerCell !== currParaOwnerCell)\n                    || (!isLayoutInCell && this.documentHelper.compatibilityMode !== \"Word2013\"))\n                    return false;\n            }\n        }\n        return (wrapOwnerIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex\n            && textWrappingStyle === \"TopAndBottom\"\n            && ((rect.y >= textWrappingBounds.y\n                && rect.y < (textWrappingBounds.bottom))\n                || ((rect.y + height > textWrappingBounds.y\n                    || this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity))\n                    && (rect.y + height < (textWrappingBounds.bottom)))\n                || (rect.y < textWrappingBounds.y && rect.y + height > textWrappingBounds.bottom && textWrappingBounds.height > 0))\n            && !(allowOverlap && (isTextRangeInTextBox || ((elementBox instanceof ImageElementBox)\n                && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap))));\n    };\n    Layout.prototype.isNeedToWrapForSquareTightAndThrough = function (bodyWidget, elementBox, wrapOwnerIndex, wrapItemIndex, textWrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingEntity, isTextRangeInTextBox, rect, width, height) {\n        return (bodyWidget.floatingElements.length > 0\n            && wrapOwnerIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex\n            && textWrappingStyle !== 'Inline'\n            && textWrappingStyle !== 'Behind'\n            && textWrappingStyle !== 'TopAndBottom'\n            && textWrappingStyle !== 'InFrontOfText'\n            && (Math.round((rect.y + height)) > Math.round(textWrappingBounds.y) ||\n                this.isTextFitBelow(textWrappingBounds, rect.y + height, floatingEntity))\n            && Math.round(rect.y) < Math.round((textWrappingBounds.y + textWrappingBounds.height))\n            && !(allowOverlap && (isTextRangeInTextBox || ((elementBox instanceof ImageElementBox)\n                && elementBox.textWrappingStyle !== 'Inline' && elementBox.allowOverlap))));\n    };\n    Layout.prototype.isNeedToWrapForSquareTightAndThroughForTable = function (container, table, wrapIndex, wrapItemIndex, wrappingStyle, textWrappingBounds, allowOverlap, wrapCollectionIndex, floatingElemnt, isInTextBox, rect, width, height) {\n        return (container.floatingElements.length > 0 && wrapIndex !== wrapCollectionIndex\n            && wrapItemIndex !== wrapCollectionIndex && wrappingStyle !== 'Inline'\n            && wrappingStyle !== 'Behind' && wrappingStyle !== 'TopAndBottom'\n            && wrappingStyle !== 'InFrontOfText'\n            && ((Math.round(rect.y + height) >= Math.round(textWrappingBounds.y)\n                && Math.round(rect.y) < Math.round(textWrappingBounds.bottom))\n                //Checks whether the bottom of the table intersects with floating item.\n                || Math.round(rect.y + height) <= Math.round(textWrappingBounds.bottom)\n                    && Math.round(rect.y + height) >= Math.round(textWrappingBounds.y))\n            && !(allowOverlap && (isInTextBox)));\n    };\n    Layout.prototype.isNeedToWrapLeafWidget = function (pargaraph, elementBox) {\n        var IsNeedToWrap = true;\n        return (pargaraph.bodyWidget.floatingElements.length > 0\n            && (IsNeedToWrap || pargaraph.associatedCell)\n            && !(elementBox instanceof ShapeBase && (elementBox.textWrappingStyle === 'InFrontOfText' || elementBox.textWrappingStyle === 'Behind')));\n    };\n    Layout.prototype.getMinWidth = function (currTextRange, width, height, rect) {\n        var text = currTextRange.text;\n        var split = text.split(' ');\n        // Gets the minimum width from the text when it contains only empty space.\n        if (text !== '' && text.trim() === ''\n            && currTextRange && currTextRange.line.paragraph\n            && currTextRange.previousNode && currTextRange.nextNode\n            && currTextRange.line.paragraph.isEmpty) {\n            split = [''];\n        }\n        // Initialized the text with additional empty string.\n        // It avoids the minimum width calculation from next sibling (GetNextTextRangeWidth).\n        var minwidth = this.documentHelper.textHelper.measureText(split[0], currTextRange.characterFormat, currTextRange.scriptType).Width;\n        //Need to layout the unicode characters (chinese) character by character.\n        // if (DrawingContext.IsUnicodeText(text)) {\n        //     minwidth = DrawingContext.MeasureTextRange(currTextRange, text[0].ToString()).Width;\n        // }\n        var nextSibling = this.getNextSibling(currTextRange);\n        if (split.length === 1 && nextSibling) {\n            var nextSiblingText = nextSibling.text;\n            minwidth += this.getNextTextRangeWidth(nextSibling, nextSiblingText, width, height, rect);\n        } // Add the minimum character width of that paragraph, if this text range is para mark\n        return minwidth;\n    };\n    Layout.prototype.getNextTextRangeWidth = function (nextSiblingTextRange, nextSiblingText, width, height, rect) {\n        var nextsibling = nextSiblingTextRange;\n        // if (nextSiblingTextRange instanceof WFootnote)\n        //     nextsibling = ((nextSiblingTextRange as IWidget).LayoutInfo as LayoutFootnoteInfoImpl).TextRange;\n        var sizeNext = new Rect(0, 0, 0, 0);\n        var isNextSiblingSizeNeedToBeMeasure = this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextSiblingTextRange, rect, width, height);\n        while (isNextSiblingSizeNeedToBeMeasure\n            && this.isLeafWidgetNextSiblingIsTextRange(nextsibling)\n            && width + sizeNext.width < rect.width) {\n            nextsibling = this.getNextSibling(nextsibling);\n            if (!this.isNextSibligSizeNeedToBeMeasure(sizeNext, nextsibling, rect, width, height)) {\n                break;\n            }\n            nextSiblingText += nextsibling.text;\n        }\n        return sizeNext.width;\n    };\n    Layout.prototype.isLeafWidgetNextSiblingIsTextRange = function (textRange) {\n        var nextSiblingTextRange = this.getNextSibling(textRange);\n        if (nextSiblingTextRange && nextSiblingTextRange instanceof TextElementBox) {\n            return true;\n        }\n        return false;\n    };\n    Layout.prototype.isNextSibligSizeNeedToBeMeasure = function (sizeNext, nextSiblingwidget, rect, width, height) {\n        var text = null;\n        var nextSiblingTextRange = nextSiblingwidget;\n        if (nextSiblingTextRange) {\n            text = nextSiblingTextRange.text;\n            if (text.indexOf(' ') !== -1 || (text.indexOf('-') !== -1 || (text.indexOf('_') !== -1)\n                && ((width + sizeNext.width + (this.documentHelper.textHelper.measureText(text.split('-')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType)).Width) < rect.width))\n                || ((nextSiblingTextRange).text === '\\t')) {\n                var elementWidth = nextSiblingTextRange.width;\n                if (text !== text.split(' ')[0]) {\n                    elementWidth = this.documentHelper.textHelper.measureText(text.split(' ')[0], nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n                }\n                if ((width + sizeNext.width + elementWidth) > rect.width && text.indexOf('-')) {\n                    if (text !== text.split('-')[0] + '-') {\n                        elementWidth = this.documentHelper.textHelper.measureText(text.split('-')[0] + '-', nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType).Width;\n                    }\n                }\n                sizeNext.width += elementWidth;\n                return false;\n            }\n            else {\n                if (nextSiblingTextRange.text.length > 0) {\n                    var textInfo = this.documentHelper.textHelper.measureText(nextSiblingTextRange.text, nextSiblingTextRange.characterFormat, nextSiblingTextRange.scriptType);\n                    sizeNext.height += textInfo.Height;\n                    sizeNext.width += textInfo.Width;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.isNeedDoIntermediateWrapping = function (remainingClientWidth, textWrappingStyle, rect, width, paragraph, textWrappingBounds, leafWidget, minwidth, minimumWidthRequired) {\n        return (((remainingClientWidth > minimumWidthRequired)\n            && (((Math.round(rect.width) <= Math.round(minwidth)\n                || (rect.width < width && leafWidget.paragraph.isInsideTable))\n                && textWrappingStyle !== 'Left' // Skip to update width when the wrap type as left\n                && textWrappingStyle !== 'Largest')\n                || textWrappingStyle === 'Right' //To layout right side when the wrap type as right\n                || (rect.width < remainingClientWidth && textWrappingStyle === 'Largest'))) // Check whether the right side width is greater than the left side when the wrap type as largest\n            || ((Math.round(textWrappingBounds.x - paragraph.x + paragraph.leftIndent) < minimumWidthRequired // Check whether the left side of text wrap object is have minimum width to layout or not\n                || (leafWidget instanceof TextElementBox && this.isFloatingItemOnLeft(rect, minwidth, textWrappingBounds)))\n                && (textWrappingStyle !== 'Left' || remainingClientWidth < minimumWidthRequired)));\n    };\n    Layout.prototype.isFloatingItemOnLeft = function (rect, minWidth, bounds) {\n        return false;\n    };\n    Layout.prototype.getNextSibling = function (currentElementBox) {\n        var nextSibling = currentElementBox.nextNode;\n        var isFieldCode = false;\n        while (nextSibling) {\n            if ((nextSibling instanceof FieldElementBox) || (nextSibling instanceof BookmarkElementBox) || isFieldCode || nextSibling instanceof ListTextElementBox) {\n                if (nextSibling instanceof FieldElementBox) {\n                    if (nextSibling.fieldType === 0) {\n                        isFieldCode = true;\n                    }\n                    else if (nextSibling.fieldType === 2) {\n                        isFieldCode = false;\n                    }\n                }\n            }\n            else if (nextSibling instanceof TextElementBox) {\n                break;\n            }\n            nextSibling = nextSibling.nextNode;\n        }\n        return nextSibling;\n    };\n    Layout.prototype.adjustClientAreaBasedOnTextWrap = function (elementBox, rect) {\n        var ownerPara = elementBox.line.paragraph;\n        var bodyWidget = ownerPara.bodyWidget;\n        var yValue = 0;\n        var layouter = this.viewer;\n        var yposition = rect.y;\n        var isFirstItem = this.isFirstitemInPage(elementBox, yposition);\n        if (isFirstItem) {\n            yValue = yposition;\n        }\n        isFirstItem = isNullOrUndefined(ownerPara.previousWidget);\n        //Update Layout area based on text wrap\n        if (this.isNeedToWrapLeafWidget(ownerPara, elementBox)) {\n            var clientLayoutArea = layouter.clientArea;\n            //Need to handle sorting floating items.\n            // Sort based on Y position\n            bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            // Sort based on X position\n            bodyWidget.floatingElements.sort(function (a, b) { return a.x - b.x; });\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                var floatingItem = bodyWidget.floatingElements[i];\n                var allowOverlap = false;\n                if (floatingItem instanceof ShapeBase) {\n                    allowOverlap = floatingItem.allowOverlap;\n                }\n                else {\n                    allowOverlap = floatingItem.positioning.allowOverlap;\n                }\n                if (ownerPara.isInsideTable) {\n                    if (floatingItem instanceof TableWidget && !floatingItem.isInsideTable) {\n                        continue;\n                    }\n                }\n                if (this.isRelayout && !this.isRelayoutOverlap &&\n                    this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof TableWidget ? floatingItem : floatingItem.line.paragraph, elementBox.line.paragraph)\n                    || this.isRelayout && this.isRelayoutOverlap && this.viewer.documentHelper.selection.isExistAfter(floatingItem instanceof TableWidget ? floatingItem : floatingItem.line.paragraph, this.endOverlapWidget)) {\n                    continue;\n                }\n                // if (ownerPara.isInsideTable && allowOverlap\n                //     && (ownerPara.associatedCell.ownerTable.positioning.allowOverlap))\n                // {\n                //     WParagraph ownerParagraph = (m_lcOperator as Layouter).FloatingItems[i].OwnerParagraph;\n                //     if (!(ownerParagraph !== null\n                //         && ownerParagraph.IsInCell\n                //         && ownerPara.GetOwnerEntity() === ownerParagraph.GetOwnerEntity()))\n                //     {\n                //         continue;\n                //     }\n                // }\n                var xPosition = floatingItem.x;\n                var distanceLeft = 0;\n                var distanceTop = 0;\n                var distanceRight = 0;\n                var distanceBottom = 0;\n                var width = 0;\n                if (floatingItem instanceof ShapeBase) {\n                    distanceLeft = floatingItem.distanceLeft;\n                    distanceTop = floatingItem.distanceTop;\n                    distanceRight = floatingItem.distanceRight;\n                    distanceBottom = floatingItem.distanceBottom;\n                    width = floatingItem.width;\n                }\n                else {\n                    width = floatingItem.getTableCellWidth();\n                    distanceLeft = floatingItem.positioning.distanceLeft;\n                    distanceTop = floatingItem.positioning.distanceTop;\n                    distanceRight = floatingItem.positioning.distanceRight;\n                    distanceBottom = floatingItem.positioning.distanceBottom;\n                }\n                var textWrappingBounds = new Rect(floatingItem.x - distanceLeft, floatingItem.y - distanceTop, width + distanceLeft + distanceRight, floatingItem.height + distanceTop + distanceBottom);\n                var textWrappingStyle = floatingItem instanceof TableWidget ? 'Square' : floatingItem.textWrappingStyle;\n                var textWrappingType = floatingItem instanceof TableWidget ? 'Both' : floatingItem.textWrappingType;\n                //  //Need to skip the wrapping for line break when it is first item of corresponding paragraph and that paragraph contains First line indent as per Word 2010 and its lower version behavior.\n                //  if (IsLineBreakIntersectOnFloatingItem(leafWidget, textWrappingStyle, textWrappingBounds, rect, size, ownerPara))\n                //  continue;\n                var minimumWidthRequired = 24;\n                var bottom = layouter.clientArea.y + floatingItem.height;\n                // if (this.isNeedToWrapParaMarkToRightSide(elementBox, ownerPara, textWrappingBounds, bottom, layouter, this.viewer.clientArea, textWrappingType, minimumWidthRequired)) {\n                //     if (lineBreakPosition !== 0) {\n                //         this.viewer.clientArea.y = lineBreakPosition;\n                //         //m_layoutArea.UpdateBoundsBasedOnTextWrap(lineBreakPosition);\n                //     }\n                //     this.viewer.clientArea.x += textWrappingBounds.width;\n                //     //(LeafWidget as IWidget).LayoutInfo.IsLineBreak = false;\n                //     elementBox.height = 0;\n                //     elementBox.width = textWrappingBounds.width;\n                //     return;\n                // }\n                if (!(clientLayoutArea.x > (textWrappingBounds.right + minimumWidthRequired) || clientLayoutArea.right < textWrappingBounds.x - minimumWidthRequired)) {\n                    if (this.isNeedToWrapForSquareTightAndThrough(bodyWidget, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n                        var rightIndent = 0;\n                        var leftIndent = 0;\n                        var listLeftIndent = 0;\n                        var firstLineIndent = HelperMethods.convertPointToPixel(elementBox.paragraph.paragraphFormat.firstLineIndent);\n                        var paragraphLeftIndent = HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.leftIndent);\n                        var paragarphRightIndent = HelperMethods.convertPointToPixel(ownerPara.paragraphFormat.rightIndent);\n                        firstLineIndent = ((elementBox.indexInOwner === 0 && elementBox.line.isFirstLine()) && firstLineIndent > 0) ? firstLineIndent : 0;\n                        var currTextRange = elementBox instanceof TextElementBox || elementBox instanceof ListTextElementBox ? elementBox : null;\n                        var containerWidget = floatingItem instanceof TableWidget ? floatingItem.containerWidget : floatingItem.line.paragraph.containerWidget;\n                        var isnewline = false;\n                        if (elementBox.line.paragraph) {\n                            //Right indent is considered only if the rect.X greater than the floating item's X position and\n                            //Text wrapping style should not be left\n                            if (rect.x >= textWrappingBounds.x && textWrappingType !== 'Left') {\n                                rightIndent = paragarphRightIndent;\n                            }\n                            //Left indent is considered only if the rect.X less than the floating item's X position and\n                            //Text wrapping style should not be right\n                            if (rect.x < textWrappingBounds.x && textWrappingType !== 'Right') {\n                                leftIndent = paragraphLeftIndent;\n                            }\n                            var listFormat = ownerPara.paragraphFormat.listFormat;\n                            var listLevel = this.getListLevel(listFormat.list, listFormat.listLevelNumber);\n                            if (rect.x === (clientLayoutArea.x + paragraphLeftIndent)\n                                && listFormat && listFormat.baseStyle\n                                && listLevel && listLevel.paragraphFormat.leftIndent !== 0) {\n                                listLeftIndent = paragraphLeftIndent;\n                                isnewline = true; // to denote the current line is new line of the paragraph\n                            }\n                        }\n                        // if (this.isXPositionUpdated && textWrappingType === 'Both' && this.layoutState === 'Splitted') {\n                        //     rect.width = bodyWidget.width - this.viewer.clientActiveArea.x;\n                        //     rect.x = textWrappingBounds.right;\n                        //     this.viewer.updateClientAreaForTextWrap(rect);\n                        //     return rect;\n                        // }\n                        /* Since the Microsoft Word has different behavior to calculate minimum width required to fit a word to a side of Table,\n                        the minimum width required changes based upon table border value and table alignment.\n                        And this value even differ for different word version, such that 2013, will have different minimum required value, where all other version shares the same logic to calculate minimum width required */\n                        var border = 0;\n                        var isBorderValueZero = false;\n                        var table = void 0;\n                        var borderThickness = 0;\n                        var tableHorizontalPosition = void 0;\n                        if (floatingItem instanceof TableWidget) {\n                            table = floatingItem;\n                            tableHorizontalPosition = floatingItem.positioning.horizontalAlignment;\n                            border = this.getMaximumRightCellBorderWidth(floatingItem);\n                            isBorderValueZero = this.getDefaultBorderSpacingValue(border, isBorderValueZero, tableHorizontalPosition);\n                            borderThickness = floatingItem.tableFormat.borders.left.lineWidth / 2;\n                        }\n                        // Skip to update when the wrap type as left\n                        if (rect.x + borderThickness >= textWrappingBounds.x && rect.x < textWrappingBounds.right && textWrappingType !== 'Left') // Skip to update when the wrap type as left\n                         {\n                            rect.width = rect.width - (textWrappingBounds.right - rect.x) - rightIndent;\n                            this.isWrapText = true;\n                            var isEntityFitInCurrentLine = true;\n                            if (!isNullOrUndefined(table)) {\n                                minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n                            }\n                            //checks minimum width\n                            if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || (rect.width < elementBox.width && elementBox.text === '\\t')\n                                || (textWrappingBounds.x < ownerPara.x + paragraphLeftIndent)) // check whether the TextWrap X position is less than the paragraph X position\n                             {\n                                //TODO\n                                rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0);\n                                //checks minimum width of the single word\n                                var minwidth = 0;\n                                if (!isNullOrUndefined(currTextRange)) {\n                                    minwidth = this.getMinWidth(elementBox, elementBox.width, elementBox.height, rect);\n                                }\n                                else {\n                                    minwidth = elementBox.width;\n                                }\n                                if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                                    if (isEntityFitInCurrentLine && (textWrappingBounds.x - (ownerPara.x + ownerPara.leftIndent)) > minimumWidthRequired\n                                        && (this.viewer.clientArea.right - textWrappingBounds.right) > minimumWidthRequired) {\n                                        rect.width = 0;\n                                    }\n                                    else {\n                                        var topMarginValue = 0;\n                                        //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                        //layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var isPositionsUpdated = false;\n                                        //Check whether left side of current floating item has enoush place to fit current widget.\n                                        //If it has, need to fit left side of the floating item, instead of moving to bottom.\n                                        // if (layouter.clientArea.x + elementBox.width < floatingItem.x) {\n                                        //     //Current item should preserve below to the floating item,which preserved left side of the floating item.\n                                        //     //If left side has multiple items or none of items this may fail, need to handle this cases.\n                                        //     let tempBounds: Rect = GetIntersectingItemBounds(floatingItem, yposition);\n                                        //     if (tempBounds.bottom !== 0 && tempBounds.bottom <= textWrappingBounds.bottom) {\n                                        //         rect.x = clientLayoutArea.x;\n                                        //         rect.width = clientLayoutArea.width;\n                                        //         rect.y = tempBounds.bottom + topMarginValue;\n                                        //         rect.height = clientLayoutArea.bottom - tempBounds.bottom;\n                                        //         this.isYPositionUpdated = true;\n                                        //         isPositionsUpdated = true;\n                                        //     }\n                                        // }\n                                        if (!isPositionsUpdated) {\n                                            this.isYPositionUpdated = true;\n                                            rect.width = this.viewer.clientArea.width;\n                                            rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                            rect.y = textWrappingBounds.bottom + topMarginValue;\n                                        }\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect);\n                                    this.isWrapText = false;\n                                }\n                                else {\n                                    var xposition = rect.x;\n                                    //TabsLayoutInfo tabsInfo = null;\n                                    rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                                    rect.width -= firstLineIndent;\n                                    //When there is no space to fit the content in right, then update the y position.\n                                    if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var topMarginValue = 0;\n                                        this.isYPositionUpdated = true;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                        rect.y = textWrappingBounds.bottom + topMarginValue;\n                                        rect.x = xposition;\n                                    }\n                                    else {\n                                        // this.isXPositionUpdated = true;\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect); //\n                                    // if (!(leafWidget is Break))\n                                    // AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                                    // if (leafWidget != null)\n                                    //     tabsInfo = (leafWidget as ILeafWidget).LayoutInfo as TabsLayoutInfo;\n                                    //if (tabsInfo == null) {\n                                    //this.isWrapText = true;\n                                    //this.viewer.updateClientAreaForTextWrap(rect);//\n                                    // if (layouter.FloatingItems[i].FloatingEntity is WTable)\n                                    // layouter.FloatingTableBottom = textWrappingBounds.Bottom;\n                                    //}\n                                }\n                            }\n                            else {\n                                //Check whether the RightPositionOfTabStopInterSectingFloattingItems have the value or not.\n                                //if contains value means continue the layouting even x position exceeds the page right position.\n                                var xposition = rect.x;\n                                rect.x = textWrappingBounds.right + (isnewline ? listLeftIndent : 0) + firstLineIndent;\n                                rect.width = this.viewer.clientArea.right - textWrappingBounds.right - (isnewline ? listLeftIndent : 0) - firstLineIndent;\n                                //When there is no space to fit the content in right, then update the y position.\n                                if (textWrappingStyle === 'Square' && rect.width < 0 && elementBox.width > 0) {\n                                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                    var topMarginValue = 0;\n                                    this.isYPositionUpdated = true;\n                                    rect.width = this.viewer.clientArea.width;\n                                    rect.height -= (textWrappingBounds.bottom + topMarginValue - rect.y);\n                                    rect.y = textWrappingBounds.bottom + topMarginValue;\n                                    rect.x = xposition;\n                                }\n                                //else\n                                // this.isXPositionUpdated = true;\n                                // if (!(leafWidget is Break))\n                                //     AdjustClientAreaBasedOnExceededTab(leafWidget, size, ref rect, ownerPara);\n                                // //Microsoft Word 2013 doesn't split text character by character, when current line has floating item.\n                                // if (ownerPara != null && ownerPara.Document.Settings.CompatibilityMode == CompatibilityMode.Word2013)\n                                //     layouter.m_canSplitbyCharacter = false;\n                                this.isWrapText = true;\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                        else if (textWrappingBounds.x >= rect.x && rect.right > textWrappingBounds.x) {\n                            rect.width = textWrappingBounds.x - rect.x - rightIndent;\n                            //Remaining right side width\n                            var remainingClientWidth = this.viewer.clientArea.right - textWrappingBounds.right;\n                            remainingClientWidth = remainingClientWidth > 0 ? remainingClientWidth : 0;\n                            this.isWrapText = true;\n                            var isUpdateClientArea = false;\n                            //checks minimum width\n                            var minwidth = 0;\n                            if (!isNullOrUndefined(currTextRange)) {\n                                minwidth = this.getMinWidth(currTextRange, elementBox.width, elementBox.height, rect);\n                            }\n                            else {\n                                minwidth = elementBox.width;\n                            }\n                            if (!isNullOrUndefined(table)) {\n                                minimumWidthRequired = this.getMinimumWidthRequiredForTable(isBorderValueZero, tableHorizontalPosition, border);\n                            }\n                            if (this.isNeedDoIntermediateWrapping(remainingClientWidth, textWrappingType, rect, elementBox.width, elementBox.paragraph, textWrappingBounds, elementBox, minwidth, minimumWidthRequired)) {\n                                var leftMinimumWidthRequired = 24;\n                                rect.width = remainingClientWidth;\n                                this.isWrapText = true;\n                                if (rect.x + minwidth > textWrappingBounds.x || textWrappingType === 'Right' || clientLayoutArea.x > textWrappingBounds.x - leftMinimumWidthRequired) //Update X position when the wrap type as largest or right or the minimum width + rect.X > wrap x position\n                                 {\n                                    rect.x = textWrappingBounds.right;\n                                    // let listFormat: WListFormat = null;\n                                    // let listLevel: WListLevel = null;\n                                    // if (elementBox.line.isFirstLine\n                                    //    && (listFormat = ownerPara.GetListFormatValue()) != null\n                                    //    && listFormat.CurrentListStyle != null\n                                    //    && (listLevel = ownerPara.GetListLevel(listFormat)) != null\n                                    //    && listLevel.ParagraphFormat.LeftIndent != 0)\n                                    // {\n                                    //     float x = 0;\n                                    //     float width = rect.Width;\n                                    //     //Updates the paragraph firstline horizontal positions, such as first line indent and listtab value\n                                    //     UpdateParaFirstLineHorizontalPositions(paragraphLayoutInfo, ownerPara, ref x, ref width);\n                                    //     rect.X += (x + (float)paragraphLayoutInfo.Margins.Left);\n                                    //     rect.Width -= (x + (float)paragraphLayoutInfo.Margins.Left);\n                                    // }\n                                    // this.isXPositionUpdated = true;\n                                    // if (textWrappingStyle == TextWrappingStyle.Through\n                                    //     && layouter.FloatingItems[i].IsDoesNotDenotesRectangle) {\n                                    //     UpdateXposition(textWrappingBounds, i, ref rect, size, minwidth);\n                                    // }\n                                    if (rect.width > minwidth || textWrappingType === 'Right') {\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                    }\n                                    else if (rect.width < minwidth && elementBox.line.children[0] !== elementBox && textWrappingType === 'Both' && floatingItem instanceof ShapeBase) {\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        isUpdateClientArea = true;\n                                    }\n                                }\n                                if ((rect.width < minimumWidthRequired && !(minwidth < remainingClientWidth && ('Tight' === textWrappingStyle)))\n                                    || (rect.width < minwidth && Math.round(rect.right) === Math.round(this.viewer.clientArea.right)\n                                        && textWrappingType === 'Both')) {\n                                    var rect1 = textWrappingBounds;\n                                    if (Math.round(rect.x) === Math.round(bodyWidget.sectionFormat.leftMargin + ownerPara.paragraphFormat.leftIndent)) {\n                                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                                        var topMarginValue = 0;\n                                        //topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                                        rect.y = rect1.bottom + topMarginValue;\n                                        this.isYPositionUpdated = true;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height = rect.height - (rect1.height + topMarginValue);\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        this.isWrapText = false;\n                                    }\n                                    // Reset the rectangle position when the rectangle right position is equialent to layout area right position\n                                    else if (!isUpdateClientArea && Math.round(rect.right) >= Math.round(this.viewer.clientArea.right) && textWrappingType === 'Both') {\n                                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                                        var topMarginValue = 0;\n                                        // topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, floatingItem, rect.y);\n                                        rect.y = rect1.bottom + topMarginValue;\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.height = rect.height - (rect1.height + topMarginValue);\n                                        rect.x = this.viewer.clientArea.x + leftIndent;\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                        // this.isXPositionUpdated = true;\n                                        this.isYPositionUpdated = true;\n                                        this.isWrapText = false;\n                                    }\n                                    else {\n                                        rect.width = 0;\n                                        this.viewer.updateClientAreaForTextWrap(rect);\n                                    }\n                                }\n                            }\n                            else {\n                                //While text intersecting with SQUARE type floating item and there is no space\n                                //available to fit this text in current line then move the text to bottom\n                                //of the floating item and this behavior is applicable only for Word 2013.\n                                //Lower versions split the text character by character.\n                                if ((elementBox.line.isFirstLine() && elementBox.indexInOwner === 0 || remainingClientWidth === 0 && elementBox.line.children[0] === elementBox) && textWrappingStyle === 'Square'\n                                    && Math.round(rect.width) <= Math.round(minwidth)\n                                    && ownerPara.containerWidget === containerWidget) {\n                                    rect.x = clientLayoutArea.x;\n                                    rect.y = textWrappingBounds.bottom;\n                                    rect.width = clientLayoutArea.width;\n                                    rect.height -= (textWrappingBounds.bottom - rect.y);\n                                    this.isYPositionUpdated = true;\n                                }\n                                else if (Math.round(rect.width) <= Math.round(minwidth) && Math.round(rect.x - leftIndent) !== Math.round(this.viewer.clientArea.x)) {\n                                    rect.width = 0;\n                                }\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                        if (textWrappingType !== 'Both') {\n                            this.isWrapText = false;\n                        }\n                    }\n                    else if (this.isNeedToWrapForTopAndBottom(ownerPara, elementBox, -1, -1, textWrappingStyle, textWrappingBounds, allowOverlap, 1, floatingItem, false, rect, elementBox.width, elementBox.height)) {\n                        // if ((textWrappingStyle === TextWrappingStyle.Tight || textWrappingStyle === TextWrappingStyle.Through)\n                        //     && !(this.getBaseEntity(layouter.floatingItems[i].floatingEntity) instanceof HeaderFooter)\n                        //     && !layouter.floatingItems[i].isDoesNotDenotesRectangle) {\n                        //     //Gets the exact tight and throught floatting item's bottom position.\n                        //     let floattingItemBottomPosition = this.getFloattingItemBottom(layouter.floatingItems[i].floatingEntity, textWrappingBounds.bottom);\n                        //     textWrappingBounds = this.getBottomPositionForTightAndThrough(floattingItemBottomPosition, textWrappingBounds, ownerPara, rect.y, size.height);\n                        // }\n                        //Updates top margin of the paragraph when paragraph mark not wrap based on the floating table.\n                        var topMarginValue = 0;\n                        // topMarginValue = this.getTopMarginValueForFloatingTable(ownerPara,\n                        //     layouter.floatingItems[i].floatingEntity, rect.y);\n                        //previous floating item y position.\n                        var prevY = rect.y;\n                        rect.y = textWrappingBounds.bottom + topMarginValue;\n                        this.isYPositionUpdated = true;\n                        //Updating the rectangle height by reducing the previous floating item's y from the current floating item's bottom.\n                        rect.height = rect.height - (textWrappingBounds.bottom - prevY + topMarginValue);\n                        //Update the before spacing value once sets the floating item bottom position as paragraph y position\n                        if (rect.y !== yposition && elementBox instanceof TextElementBox && !(floatingItem instanceof TableWidget)\n                            && elementBox.line.isFirstLine()) {\n                            rect.y += elementBox.margin.top;\n                            yposition = rect.y;\n                        }\n                        this.viewer.updateClientAreaForTextWrap(rect);\n                    }\n                }\n            }\n        }\n        return rect;\n    };\n    Layout.prototype.adjustClientAreaBasedOnTextWrapForTable = function (table, rect) {\n        //let ownerPara: ParagraphWidget = elementBox.line.paragraph;\n        if (isNullOrUndefined(table.containerWidget) || isNullOrUndefined(table.bodyWidget)) {\n            return rect;\n        }\n        var bodyWidget = table.bodyWidget;\n        var yValue = 0;\n        var layouter = this.viewer;\n        var yposition = rect.y;\n        var isFirstItem = isNullOrUndefined(table.previousWidget);\n        if (isFirstItem) {\n            yValue = yposition;\n        }\n        if (bodyWidget.floatingElements.length > 0) {\n            var clientLayoutArea = layouter.clientActiveArea;\n            bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n            bodyWidget.floatingElements.sort(function (a, b) { return a.x - b.x; });\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                var floatingElement = bodyWidget.floatingElements[i];\n                var allowOverlap = false;\n                if (floatingElement instanceof ShapeBase) {\n                    allowOverlap = floatingElement.allowOverlap;\n                }\n                else {\n                    allowOverlap = floatingElement.positioning.allowOverlap;\n                }\n                if (table.isInsideTable) {\n                    if (floatingElement instanceof TableWidget && !floatingElement.isInsideTable) {\n                        continue;\n                    }\n                }\n                if (floatingElement instanceof TableWidget && floatingElement.wrapTextAround && floatingElement.positioning.allowOverlap) {\n                    if (table.wrapTextAround && table.positioning.allowOverlap) {\n                        continue;\n                    }\n                }\n                var tableWidth = table.getTableCellWidth();\n                var isShape = floatingElement instanceof ShapeBase;\n                var distanceLeft = isShape ? floatingElement.distanceLeft : floatingElement.positioning.distanceLeft;\n                var distanceTop = isShape ? floatingElement.distanceTop : floatingElement.positioning.distanceTop;\n                var distanceRight = isShape ? floatingElement.distanceRight : floatingElement.positioning.distanceRight;\n                var distanceBottom = isShape ? floatingElement.distanceBottom : floatingElement.positioning.distanceBottom;\n                var width = isShape ? floatingElement.width : floatingElement.getTableCellWidth();\n                var wrappingBounds = new Rect(floatingElement.x - distanceLeft, floatingElement.y - distanceTop, width + distanceLeft + distanceRight, floatingElement.height + distanceTop + distanceBottom);\n                var textWrappingStyle = floatingElement instanceof TableWidget ? 'Square' : floatingElement.textWrappingStyle;\n                var textWrappingType = floatingElement instanceof TableWidget ? 'Both' : floatingElement.textWrappingType;\n                var minimumWidthRequired = 24;\n                var tableHeight = table.childWidgets.length > 0 ? table.childWidgets[0].rowFormat.height : 0;\n                var lastNestedTable = this.getNestedTable(table);\n                var characterFormat = lastNestedTable.firstChild.firstChild.firstChild.characterFormat;\n                var size = this.documentHelper.textHelper.measureText(\" \", characterFormat);\n                if (tableHeight < size.Height) {\n                    tableHeight = size.Height;\n                }\n                if (!(clientLayoutArea.x > (wrappingBounds.right + minimumWidthRequired) || clientLayoutArea.right < wrappingBounds.x - minimumWidthRequired)) {\n                    if (this.isNeedToWrapForSquareTightAndThroughForTable(bodyWidget, table, -1, -1, textWrappingStyle, wrappingBounds, allowOverlap, 1, floatingElement, false, rect, tableWidth, tableHeight)) {\n                        // Skip to update when the wrap type as left\n                        if (rect.x >= wrappingBounds.x && rect.x < wrappingBounds.right && textWrappingType !== 'Left') // Skip to update when the wrap type as left\n                         {\n                            rect.width = rect.width - (wrappingBounds.right - rect.x);\n                            this.isWrapText = true;\n                            var isEntityFitInCurrentLine = true;\n                            if (!isEntityFitInCurrentLine || Math.round(rect.width) < minimumWidthRequired || (rect.width < tableWidth)\n                                || (wrappingBounds.x < table.x)) // check whether the TextWrap X position is less than the paragraph X position\n                             {\n                                rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                                var minwidth = tableWidth;\n                                if (Math.round(rect.width) < minimumWidthRequired || rect.width < minwidth) {\n                                    if (isEntityFitInCurrentLine && (wrappingBounds.x - (table.x)) > minimumWidthRequired\n                                        && (this.viewer.clientArea.right - wrappingBounds.right) > minimumWidthRequired) {\n                                        rect.width = 0;\n                                    }\n                                    else {\n                                        var topMarginValue = 0;\n                                        var isPositionsUpdated = false;\n                                        if (!isPositionsUpdated) {\n                                            this.isYPositionUpdated = true;\n                                            rect.width = this.viewer.clientArea.width;\n                                            rect.height -= (wrappingBounds.bottom + topMarginValue - rect.y);\n                                            rect.y = wrappingBounds.bottom + topMarginValue;\n                                        }\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect);\n                                    this.isWrapText = false;\n                                }\n                                else {\n                                    var xposition = rect.x;\n                                    //TabsLayoutInfo tabsInfo = null;\n                                    rect.x = wrappingBounds.right;\n                                    //When there is no space to fit the content in right, then update the y position.\n                                    if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                                        // let topMarginValue = GetTopMarginValueForFloatingTable(ownerPara, layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                        var marginTop = 0;\n                                        this.isYPositionUpdated = true;\n                                        rect.height -= (wrappingBounds.bottom + marginTop - rect.y);\n                                        rect.width = this.viewer.clientArea.width;\n                                        rect.y = wrappingBounds.bottom + marginTop;\n                                        rect.x = xposition;\n                                    }\n                                    this.viewer.updateClientAreaForTextWrap(rect); //\n                                }\n                            }\n                            else {\n                                var xposition = rect.x;\n                                rect.x = wrappingBounds.right + table.firstChild.firstChild.leftMargin;\n                                rect.width = this.viewer.clientArea.right - wrappingBounds.right;\n                                //When there is no space to fit the content in right, then update the y position.\n                                if (textWrappingStyle === 'Square' && rect.width < 0 && tableWidth > 0) {\n                                    // float topMarginValue = GetTopMarginValueForFloatingTable(ownerPara,\n                                    //     layouter.FloatingItems[i].FloatingEntity, rect.Y);\n                                    var topMarginValue = 0;\n                                    this.isYPositionUpdated = true;\n                                    rect.width = this.viewer.clientArea.width;\n                                    rect.height -= (wrappingBounds.bottom + topMarginValue - rect.y);\n                                    rect.y = wrappingBounds.bottom + topMarginValue;\n                                    rect.x = xposition;\n                                }\n                                this.viewer.updateClientAreaForTextWrap(rect); //\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return rect;\n    };\n    Layout.prototype.getNestedTable = function (tableWidget) {\n        var table = tableWidget;\n        while (table.firstChild.firstChild.firstChild instanceof TableWidget) {\n            table = table.firstChild.firstChild.firstChild;\n        }\n        return table;\n    };\n    Layout.prototype.startAt = function (element, text) {\n        if (element.footnoteType === 'Footnote') {\n            this.startat = element.paragraph.bodyWidget.sectionFormat.initialFootNoteNumber;\n            text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.footNoteNumberFormat, this.documentHelper.footnoteCollection.indexOf(element) + this.startat);\n        }\n        else {\n            this.startat = element.paragraph.bodyWidget.sectionFormat.initialEndNoteNumber;\n            text = this.getFootEndNote(element.paragraph.bodyWidget.sectionFormat.endnoteNumberFormat, this.documentHelper.endnoteCollection.indexOf(element) + this.startat);\n        }\n        return text;\n    };\n    Layout.prototype.layoutFootEndNoteElement = function (element) {\n        this.isFootnoteContentChanged = true;\n        var footnote;\n        var positionchanged = false;\n        var footIndex = this.documentHelper.footnoteCollection.indexOf(element);\n        var insertIndex = 1;\n        this.islayoutFootnote = true;\n        var isFitted;\n        var clientArea = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n        var clientActiveArea = new Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n        var bodyWidget = element.paragraph.bodyWidget;\n        var isCreated = false;\n        var height = 0;\n        if (bodyWidget.page.footnoteWidget) {\n            for (var j = 0; j < bodyWidget.page.footnoteWidget.bodyWidgets.length; j++) {\n                insertIndex = bodyWidget.page.footnoteWidget.bodyWidgets.length;\n                var currentIndex = this.documentHelper.footnoteCollection.indexOf((bodyWidget.page.footnoteWidget.bodyWidgets[j]).footNoteReference);\n                if (currentIndex > footIndex) {\n                    if (currentIndex - footIndex === 1) {\n                        insertIndex = j;\n                        positionchanged = true;\n                        break;\n                    }\n                }\n            }\n        }\n        element.isLayout = true;\n        if (element.footnoteType === 'Footnote') {\n            if (bodyWidget.page.footnoteWidget && bodyWidget.page.footnoteWidget instanceof FootNoteWidget) {\n                footnote = bodyWidget.page.footnoteWidget;\n            }\n            else {\n                isCreated = true;\n                footnote = new FootNoteWidget();\n                footnote.footNoteType = 'Footnote';\n                footnote.page = bodyWidget.page;\n                var newParagraph = new ParagraphWidget();\n                newParagraph.characterFormat = new WCharacterFormat();\n                newParagraph.paragraphFormat = new WParagraphFormat();\n                newParagraph.index = 0;\n                var lineWidget = new LineWidget(newParagraph);\n                newParagraph.childWidgets.push(lineWidget);\n                height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n                footnote.margin = new Margin(0, height, 0, 0);\n            }\n            this.isFootNoteLayoutStart = true;\n            if (isCreated) {\n                bodyWidget.page.footnoteWidget = footnote;\n            }\n            var body = element.bodyWidget;\n            this.viewer.updateClientArea(footnote, footnote.page);\n            this.viewer.clientArea.y = clientArea.y;\n            this.viewer.clientActiveArea.y = clientActiveArea.y;\n            for (var i = 0; i < element.bodyWidget.childWidgets.length; i++) {\n                var block = element.bodyWidget.childWidgets[i];\n                block.containerWidget = body;\n                body.page = bodyWidget.page;\n                body.sectionFormat = footnote.sectionFormat;\n                block.containerWidget.containerWidget = footnote;\n                this.viewer.updateClientAreaForBlock(block, true);\n                if (block instanceof TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                }\n                this.layoutBlock(block, 0);\n                height += block.height;\n                block.y = 0;\n                this.viewer.updateClientAreaForBlock(block, false);\n                body.height += block.height;\n            }\n            if (footnote.sectionFormat.columns.length > 1 && !(footnote.bodyWidgets.length === 0 && body.childWidgets.length <= 1 && body.childWidgets[0].childWidgets.length <= 1)) {\n                height = (height / footnote.sectionFormat.numberOfColumns);\n            }\n            this.isFootNoteLayoutStart = false;\n            isFitted = false;\n            if (height >= clientActiveArea.height) {\n                this.isfootMove = true;\n            }\n            if (positionchanged) {\n                footnote.bodyWidgets.splice(insertIndex, 0, body);\n            }\n            else {\n                footnote.bodyWidgets.push(body);\n            }\n            if (element.line.paragraph.isInsideTable) {\n                var table = this.getParentTable(element.line.paragraph.associatedCell.ownerTable);\n                if (isNullOrUndefined(table.footnoteElement)) {\n                    table.footnoteElement = [];\n                }\n                if (table.footnoteElement.indexOf(element) == -1) {\n                    table.footnoteElement.push(element);\n                    this.layoutedFootnoteElement.push(element);\n                }\n            }\n            footnote.height += height;\n            isFitted = true;\n            this.viewer.clientActiveArea = clientActiveArea;\n            this.viewer.clientActiveArea.height -= height;\n            this.footnoteHeight += height;\n            this.viewer.clientArea = clientArea;\n        }\n        return isFitted;\n    };\n    Layout.prototype.layoutEndNoteElement = function () {\n        var totalPage = this.documentHelper.pages.length;\n        if (this.documentHelper.endnoteCollection.length > 0) {\n            var foot = void 0;\n            var endNote = void 0;\n            var isCreated = void 0;\n            var lastPage = this.documentHelper.pages[totalPage - 1];\n            var bodyWidget = lastPage.bodyWidgets[0];\n            var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n            if (this.viewer instanceof PageLayoutViewer && lastSection.sectionFormat.numberOfColumns > 1) {\n                var firstSection = this.getBodyWidget(lastSection, true);\n                this.splitBodyWidgetBasedOnColumn(firstSection);\n            }\n            for (var i = 0; i < this.documentHelper.endnoteCollection.length; i++) {\n                foot = this.documentHelper.endnoteCollection[i];\n                if (bodyWidget.page.endnoteWidget instanceof FootNoteWidget && bodyWidget.page.endnoteWidget.footNoteType === 'Endnote') {\n                    endNote = bodyWidget.page.endnoteWidget;\n                }\n                else {\n                    isCreated = true;\n                    endNote = new FootNoteWidget();\n                    endNote.footNoteType = 'Endnote';\n                    endNote.page = bodyWidget.page;\n                }\n                var body = foot.bodyWidget;\n                body.page = endNote.page;\n                for (var j = 0; j < foot.bodyWidget.childWidgets.length; j++) {\n                    var block = foot.bodyWidget.childWidgets[j];\n                    block.containerWidget = body;\n                    block.containerWidget.containerWidget = endNote;\n                }\n                if (endNote.bodyWidgets.indexOf(body) === -1) {\n                    endNote.bodyWidgets.push(body);\n                    body.sectionFormat = endNote.page.bodyWidgets[endNote.page.bodyWidgets.length - 1].sectionFormat;\n                }\n                if (isCreated) {\n                    bodyWidget.page.endnoteWidget = endNote;\n                }\n            }\n            this.layoutfootNote(endNote);\n        }\n    };\n    Layout.prototype.hasValidElement = function (paragraph) {\n        var line = paragraph.firstChild;\n        if (line && !isNullOrUndefined(this.documentHelper.selection)) {\n            var elementBox = line.children[0];\n            while (elementBox) {\n                if (elementBox instanceof FieldElementBox) {\n                    elementBox = this.documentHelper.selection.getNextValidElementForField(elementBox);\n                    if (!isNullOrUndefined(elementBox) && !elementBox.line.paragraph.equals(paragraph)) {\n                        return false;\n                    }\n                }\n                if (elementBox instanceof TextElementBox || elementBox instanceof ImageElementBox) {\n                    return true;\n                }\n                if (!isNullOrUndefined(elementBox)) {\n                    elementBox = elementBox.nextNode;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.updateFieldText = function (element) {\n        var text = this.documentHelper.getFieldResult(element.fieldBegin, element.paragraph.bodyWidget.page);\n        if (text !== '') {\n            element.text = text;\n            this.documentHelper.textHelper.getTextSize(element, element.characterFormat);\n        }\n    };\n    Layout.prototype.checkLineWidgetWithClientArea = function (line, element) {\n        if (line !== element.line || element.line === line && isNullOrUndefined(element.nextElement)\n            && !element.line.isLastLine()) {\n            this.moveToNextLine(line);\n            if (this.documentHelper.compatibilityMode !== 'Word2013' && this.isOverlapFloatTable) {\n                var table = void 0;\n                if (element.line.paragraph.previousRenderedWidget instanceof TableWidget && element.line.paragraph.previousRenderedWidget.wrapTextAround) {\n                    table = element.line.paragraph.previousRenderedWidget;\n                    this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                        HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n                }\n                this.viewer.clientActiveArea.x += line.paragraph.leftIndent;\n                this.isOverlapFloatTable = false;\n            }\n            if (line !== element.line) {\n                this.isRTLLayout = false;\n            }\n        }\n        if (element.line !== line && this.viewer instanceof PageLayoutViewer\n            && this.viewer.clientActiveArea.height < element.height &&\n            this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            this.moveToNextPage(this.viewer, element.line);\n        }\n        else if (element.line === line && isNullOrUndefined(element.nextElement)\n            && line.paragraph.lastChild === line && !line.isLastLine() && this.viewer.clientActiveArea.height >= 0) {\n            this.moveFromNextPage(line);\n        }\n    };\n    Layout.prototype.checkAndSplitTabOrLineBreakCharacter = function (text, element) {\n        var char = ['\\t', '\\v', '\\f'];\n        var index = HelperMethods.indexOfAny(text, char);\n        if (index > -1) {\n            var character = text[index];\n            if ((character === '\\t' && text !== '\\t') || (character === '\\v' && text !== '\\v')\n                || (character === '\\f' && text !== '\\f')) {\n                this.splitByLineBreakOrTab(this.viewer, element, index, character);\n            }\n        }\n    };\n    Layout.prototype.moveFromNextPage = function (line) {\n        var nextLine = line.nextLine;\n        if (nextLine && line.paragraph.childWidgets.indexOf(nextLine) === -1) {\n            var splittedParagraph = nextLine.paragraph;\n            nextLine.paragraph.childWidgets.splice(nextLine.indexInOwner, 1);\n            line.paragraph.childWidgets.push(nextLine);\n            nextLine.paragraph = line.paragraph;\n            // this.updateLinearIndex(nextLine.paragraph);\n            if (splittedParagraph.childWidgets.length === 0) {\n                splittedParagraph.destroy();\n            }\n            else {\n                //     this.updateLinearIndex(splittedParagraph);\n            }\n        }\n    };\n    Layout.prototype.cutClientWidth = function (currentElement, isNeedToLayoutShape) {\n        if (this.is2013Justification) {\n            return false;\n        }\n        this.clearLineMeasures();\n        var line = currentElement.line;\n        line.marginTop = 0;\n        var width = 0;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (isNeedToLayoutShape && element instanceof ShapeElementBox && element.textWrappingStyle === 'Inline') {\n                this.layoutShape(element);\n            }\n            width += element.width;\n            if (currentElement === element) {\n                break;\n            }\n        }\n        var splitCurrentWidget = this.viewer.clientActiveArea.width - width < 0;\n        var paragarph = currentElement.line.paragraph;\n        var bodyWidget = paragarph.bodyWidget;\n        if (bodyWidget && bodyWidget.floatingElements.length > 0) {\n            this.hasFloatingElement = true;\n            this.isXPositionUpdated = true;\n            return false;\n        }\n        if (!splitCurrentWidget) {\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + width);\n            if (currentElement.line.paragraph.paragraphFormat.textAlignment === 'Justify' &&\n                currentElement instanceof TextElementBox) {\n                this.splitTextElementWordByWord(currentElement);\n            }\n            if (isNullOrUndefined(currentElement.nextElement) && this.viewer.clientActiveArea.width > 0\n                && !currentElement.line.isLastLine()) {\n                this.moveElementFromNextLine(line);\n            }\n        }\n        else if (currentElement.previousElement) {\n            this.cutClientWidth(currentElement.previousElement);\n        }\n        return splitCurrentWidget;\n    };\n    Layout.prototype.layoutFieldCharacters = function (element) {\n        if (element.fieldType === 0) {\n            if (!isNullOrUndefined(element.formFieldData) && this.isInitialLoad) {\n                this.checkAndUpdateFieldData(element);\n            }\n            if (!this.isFieldCode && (!isNullOrUndefined(element.fieldEnd) || element.hasFieldEnd)) {\n                if (this.documentHelper.fieldStacks.indexOf(element) === -1) {\n                    this.documentHelper.fieldStacks.push(element);\n                }\n                if (this.isRelayout) {\n                    var fieldCode = HelperMethods.trimEnd(this.documentHelper.selection.getFieldCode(element));\n                    this.isIFfield = HelperMethods.startsWith(fieldCode, 'IF');\n                }\n                this.isFieldCode = true;\n                element.hasFieldEnd = true;\n            }\n        }\n        else if (this.documentHelper.fieldStacks.length > 0) {\n            if (element.fieldType === 2) {\n                var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n                if (field.fieldSeparator === element && (!isNullOrUndefined(field.fieldEnd) || field.hasFieldEnd)) {\n                    this.isFieldCode = false;\n                }\n            }\n            else {\n                var field = this.documentHelper.fieldStacks[this.documentHelper.fieldStacks.length - 1];\n                if (element === field.fieldEnd) {\n                    this.documentHelper.fieldStacks.pop();\n                    this.isFieldCode = false;\n                    this.isIFfield = false;\n                }\n            }\n        }\n    };\n    Layout.prototype.checkAndUpdateFieldData = function (fieldBegin) {\n        if (fieldBegin.hasFieldEnd && !isNullOrUndefined(fieldBegin.fieldEnd)) {\n            if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                var seperator = new FieldElementBox(2);\n                seperator.fieldBegin = fieldBegin;\n                seperator.fieldEnd = fieldBegin.fieldEnd;\n                seperator.line = fieldBegin.line;\n                fieldBegin.line.children.splice(fieldBegin.fieldEnd.indexInOwner, 0, seperator);\n                fieldBegin.fieldSeparator = seperator;\n                fieldBegin.fieldEnd.fieldSeparator = seperator;\n            }\n            var previousNode = fieldBegin.fieldEnd.previousNode;\n            if (previousNode instanceof FieldElementBox && previousNode.fieldType === 2) {\n                var formFieldData = fieldBegin.formFieldData;\n                if (formFieldData instanceof CheckBoxFormField) {\n                    var checkBoxTextElement = new TextElementBox();\n                    checkBoxTextElement.skipformFieldLength = true;\n                    checkBoxTextElement.line = fieldBegin.line;\n                    var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n                    fieldBegin.line.children.splice(index, 0, checkBoxTextElement);\n                    checkBoxTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n                    if (formFieldData.checked) {\n                        checkBoxTextElement.text = String.fromCharCode(9745);\n                    }\n                    else {\n                        checkBoxTextElement.text = String.fromCharCode(9744);\n                    }\n                    this.setCheckBoxFontSize(formFieldData, checkBoxTextElement.characterFormat);\n                }\n                else if (formFieldData instanceof DropDownFormField) {\n                    var dropDownTextElement = new TextElementBox();\n                    dropDownTextElement.skipformFieldLength = true;\n                    dropDownTextElement.characterFormat.copyFormat(fieldBegin.characterFormat);\n                    dropDownTextElement.line = fieldBegin.line;\n                    if (formFieldData.dropdownItems.length > 0) {\n                        dropDownTextElement.text = formFieldData.dropdownItems[formFieldData.selectedIndex];\n                    }\n                    else {\n                        dropDownTextElement.text = this.documentHelper.textHelper.repeatChar(this.documentHelper.textHelper.getEnSpaceCharacter(), 5);\n                    }\n                    var index = fieldBegin.line.children.indexOf(fieldBegin.fieldEnd);\n                    fieldBegin.line.children.splice(index, 0, dropDownTextElement);\n                }\n            }\n        }\n    };\n    /**\n     * Set the checkbox font size\n     * @returns {void}\n     */\n    Layout.prototype.setCheckBoxFontSize = function (formFieldData, format) {\n        if (formFieldData.sizeType !== 'Auto') {\n            format.fontSize = formFieldData.size * CHECK_BOX_FACTOR;\n        }\n        else {\n            format.fontSize = format.fontSize * CHECK_BOX_FACTOR;\n        }\n    };\n    Layout.prototype.layoutEmptyLineWidget = function (paragraph, isEmptyLine, line, isShiftEnter) {\n        this.clearLineMeasures();\n        var paraFormat = paragraph.paragraphFormat;\n        var subWidth = 0;\n        var whiteSpaceCount = 0;\n        isShiftEnter = isNullOrUndefined(isShiftEnter) ? false : isShiftEnter;\n        var borders = paraFormat.borders;\n        var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n        //Calculate line height and descent based on formatting defined in paragraph.\n        var paragraphMarkSize = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n        var maxHeight = paragraphMarkSize.Height;\n        var beforeSpacing = this.getBeforeSpacing(paragraph);\n        var lineWidget;\n        if (paragraph.childWidgets.length > 0 && !isShiftEnter) {\n            this.isUpdateMarginForCurrentLine(line);\n            lineWidget = paragraph.childWidgets[0];\n            if (lineWidget.children.length > 0) {\n                if ((paraFormat.bidi || this.isContainsRtl(lineWidget))) {\n                    this.shiftElementsForRTLLayouting(lineWidget, paraFormat.bidi);\n                }\n                var isParagraphStart = lineWidget.isFirstLine();\n                var isParagraphEnd = lineWidget.isLastLine();\n                var firstLineIndent = 0;\n                if (isParagraphStart) {\n                    beforeSpacing = this.getBeforeSpacing(paragraph);\n                    firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n                }\n                var textAlignment = paraFormat.textAlignment;\n                if (textAlignment !== 'Left' && this.viewer.textWrap\n                    && (!(textAlignment === 'Justify' && isParagraphEnd)\n                        || (textAlignment === 'Justify' && paraFormat.bidi))) {\n                    var getWidthAndSpace = this.getSubWidth(lineWidget, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n                    subWidth = getWidthAndSpace[0].subWidth;\n                    whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n                }\n            }\n        }\n        else {\n            lineWidget = isEmptyLine ? this.addLineWidget(paragraph) : line;\n        }\n        if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(paragraph.containerWidget instanceof TextFrame) && !(paragraph.containerWidget instanceof TableCellWidget && paragraph.containerWidget.ownerTable.containerWidget instanceof TextFrame)) {\n            var elementBox = new TextElementBox();\n            elementBox.line = lineWidget;\n            lineWidget.children.push(elementBox);\n            elementBox.text = '¶';\n            elementBox.characterFormat = paragraph.characterFormat;\n            elementBox.width = this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n            this.adjustPosition(elementBox, paragraph.bodyWidget);\n            paragraph.x += elementBox.padding.left;\n            if (isEmptyLine) {\n                this.checkInbetweenShapeOverlap(lineWidget);\n            }\n            lineWidget.children.splice(elementBox.indexInOwner, 1);\n        }\n        //isNullOrUndefined(this.viewer.currentHeaderFooter) &&\n        if (this.viewer instanceof PageLayoutViewer\n            && this.viewer.clientActiveArea.height < beforeSpacing + maxHeight\n            && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y\n            && !(lineWidget.isFirstLine() && isNullOrUndefined(lineWidget.paragraph.previousWidget)) && !paragraph.isSectionBreak) {\n            this.moveToNextPage(this.viewer, lineWidget);\n        }\n        //Gets line spacing.\n        var lineSpacing = this.getLineSpacing(paragraph, maxHeight);\n        //let maxDescent: number = maxHeight - paragraphMarkSize.BaselineOffset;\n        //Calculate the bottom position of current line - max height + line spacing.\n        if (!isNaN(this.maxTextHeight)\n            && maxHeight < this.maxTextHeight) {\n            maxHeight = this.maxTextHeight;\n            //maxDescent = maxHeight - this.maxTextBaseline;\n        }\n        var topMargin = 0;\n        var bottomMargin = 0;\n        var leftMargin = 0;\n        var height = maxHeight;\n        var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n        if (lineSpacingType === 'Multiple') {\n            if (lineSpacing > maxHeight) {\n                bottomMargin += lineSpacing - maxHeight;\n            }\n            else {\n                topMargin += lineSpacing - maxHeight;\n            }\n        }\n        else if (lineSpacingType === 'Exactly') {\n            topMargin += lineSpacing - (topMargin + height + bottomMargin);\n        }\n        else if (lineSpacing > topMargin + height + bottomMargin) {\n            topMargin += lineSpacing - (topMargin + height + bottomMargin);\n        }\n        topMargin += beforeSpacing;\n        bottomMargin += HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n        if (borders.top.lineStyle != 'None') {\n            if (lineWidget.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n                topMargin += HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n            }\n        }\n        if (borders.bottom.lineStyle != 'None') {\n            if (lineWidget.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n                bottomMargin += HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n            }\n        }\n        var renderedElements = lineWidget.renderedElements;\n        for (var i = 0; i < renderedElements.length; i++) {\n            var element = renderedElements[i];\n            if (i === 0 && element instanceof ListTextElementBox || (paragraph.paragraphFormat.bidi && renderedElements[renderedElements.length - 1] instanceof ListTextElementBox)) {\n                var textAlignment = paragraph.paragraphFormat.textAlignment;\n                if (textAlignment === 'Right') { //Aligns the text as right justified.\n                    leftMargin = subWidth;\n                }\n                else if (textAlignment === 'Center') { //Aligns the text as center justified.\n                    leftMargin = subWidth / 2;\n                }\n                element.margin = new Margin(leftMargin, topMargin, 0, bottomMargin);\n                element.line = lineWidget;\n                lineWidget.height = topMargin + height + bottomMargin;\n                break;\n            }\n        }\n        lineWidget.margin = new Margin(0, topMargin, 0, bottomMargin);\n        lineWidget.height = topMargin + height + bottomMargin;\n        this.adjustPositionBasedOnTopAndBottom(lineWidget);\n        if (isNullOrUndefined(paragraph.nextRenderedWidget) && paragraph.isInsideTable\n            && paragraph.previousRenderedWidget instanceof TableWidget && paragraph.childWidgets.length == 1) {\n            //Special behavior for empty cell mark after nested table, preserved with zero height by default.\n            //Empty line is displayed in cell for the last empty paragraph (Cell mark - last paragraph in cell) after a nested table.\n            lineWidget.height = 0;\n        }\n        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + lineWidget.height);\n        this.wrapPosition = [];\n        //Clears the previous line elements from collection.\n    };\n    Layout.prototype.isUpdateMarginForCurrentLine = function (line) {\n        var isUpdate = true;\n        if (!isNullOrUndefined(line) && !line.isFirstLine()) {\n            for (var i = 0; i < line.children.length; i++) {\n                if (!(line.children[i] instanceof EditRangeStartElementBox || line.children[i] instanceof EditRangeEndElementBox)) {\n                    isUpdate = false;\n                    break;\n                }\n            }\n            if (isUpdate) {\n                line.margin = new Margin(0, 0, 0, 0);\n            }\n        }\n    };\n    Layout.prototype.adjustPositionBasedOnTopAndBottom = function (lineWidget) {\n        if (!isNullOrUndefined(lineWidget.paragraph.bodyWidget) && !isNullOrUndefined(lineWidget.paragraph.bodyWidget.page.headerWidget)\n            && lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements.length > 0\n            && lineWidget.paragraph === lineWidget.paragraph.bodyWidget.childWidgets[0]\n            && lineWidget.indexInOwner === 0) {\n            //To check whether first para in the page overlaps with shape in Header.\n            this.checkInbetweenShapeOverlap(lineWidget, lineWidget.paragraph.bodyWidget.page.headerWidget.floatingElements);\n        }\n    };\n    Layout.prototype.layoutListItems = function (paragraph, isUpdatedList) {\n        if (!this.isFieldCode) {\n            if (!isNullOrUndefined(paragraph.paragraphFormat)\n                && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)\n                && !isNullOrUndefined(this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId)) &&\n                paragraph.paragraphFormat.listFormat.listLevelNumber >= 0\n                && paragraph.paragraphFormat.listFormat.listLevelNumber < 9 && !isUpdatedList) {\n                this.clearListElementBox(paragraph);\n                this.layoutList(paragraph, this.documentHelper);\n            }\n            else if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId === -1) {\n                this.clearListElementBox(paragraph);\n            }\n        }\n    };\n    Layout.prototype.layoutList = function (paragraph, documentHelper) {\n        var list = documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n        var listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n        var currentListLevel = this.getListLevel(list, listLevelNumber);\n        if (isNullOrUndefined(currentListLevel) || isNullOrUndefined(currentListLevel.numberFormat)) {\n            return;\n        }\n        var lineWidget = paragraph.childWidgets[0];\n        if (isNullOrUndefined(lineWidget)) {\n            lineWidget = new LineWidget(paragraph);\n            paragraph.childWidgets.push(lineWidget);\n        }\n        var element = new ListTextElementBox(currentListLevel, false);\n        element.line = lineWidget;\n        if (currentListLevel.listLevelPattern === 'Bullet') {\n            element.text = currentListLevel.numberFormat;\n            this.updateListValues(list, listLevelNumber);\n        }\n        else {\n            element.text = this.getListNumber(paragraph.paragraphFormat.listFormat);\n        }\n        if (currentListLevel.numberFormat === '') {\n            return;\n        }\n        this.viewer.updateClientWidth(-HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n        if (this.documentHelper.isIosDevice) {\n            var text = element.text;\n            text = text === String.fromCharCode(61623) ? String.fromCharCode(9679) : text === String.fromCharCode(61551) + String.fromCharCode(32) ? String.fromCharCode(9675) : text;\n            if (text !== element.text) {\n                element.text = text;\n            }\n        }\n        documentHelper.textHelper.updateTextSize(element, paragraph);\n        var moveToNextPage;\n        if (this.viewer instanceof PageLayoutViewer\n            && this.viewer.clientActiveArea.height < element.height && this.viewer.clientActiveArea.y !== this.viewer.clientArea.y) {\n            moveToNextPage = true;\n        }\n        this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n        var previousElement = element;\n        //Adds the text element to the line\n        lineWidget.children.splice(0, 0, element);\n        if (currentListLevel.followCharacter !== 'None') {\n            element = new ListTextElementBox(currentListLevel, true);\n            if (currentListLevel.followCharacter === 'Tab') {\n                element.text = '\\t';\n                var index = lineWidget.children.indexOf(element);\n                var tabWidth = this.getTabWidth(paragraph, this.viewer, index, lineWidget, element);\n                documentHelper.textHelper.updateTextSize(element, paragraph);\n                element.width = tabWidth;\n            }\n            else {\n                element.text = ' ';\n                documentHelper.textHelper.updateTextSize(element, paragraph);\n            }\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n            //Adds the tabSpace to the line\n            lineWidget.children.splice(1, 0, element);\n            element.line = lineWidget;\n        }\n        if (!isNullOrUndefined(paragraph.containerWidget) && paragraph.bodyWidget.floatingElements.length > 0 &&\n            !(previousElement instanceof ShapeElementBox) && !(paragraph.containerWidget instanceof TextFrame)) {\n            this.adjustPosition(previousElement, previousElement.line.paragraph.bodyWidget);\n            if (this.isYPositionUpdated) {\n                if (this.viewer.clientActiveArea.width > (previousElement.width + element.width)) {\n                    this.viewer.clientActiveArea.width -= (previousElement.width + element.width);\n                }\n                this.isYPositionUpdated = false;\n            }\n        }\n        if (moveToNextPage) {\n            this.moveToNextPage(this.viewer, lineWidget, undefined, true);\n            this.cutClientWidth(element);\n            this.hasFloatingElement = false;\n            this.isXPositionUpdated = false;\n            return;\n        }\n        if (currentListLevel.followCharacter !== 'None') {\n            this.viewer.updateClientWidth(HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent));\n        }\n    };\n    Layout.prototype.addBodyWidget = function (area, widget) {\n        var bodyWidget;\n        if (widget) {\n            bodyWidget = widget;\n        }\n        else {\n            bodyWidget = new BodyWidget();\n        }\n        bodyWidget.width = area.width;\n        bodyWidget.x = area.x;\n        bodyWidget.y = area.y;\n        // this.addSectionInDictionary(this.viewer, section, bodyWidget);\n        return bodyWidget;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.addListLevels = function (abstractList) {\n        for (var i = abstractList.levels.length; i < 9; i++) {\n            var listLevel = new WListLevel(abstractList);\n            var val = i % 3;\n            if (abstractList.levels[0].listLevelPattern === 'Bullet') {\n                listLevel.listLevelPattern = 'Bullet';\n                listLevel.numberFormat = val === 0 ? String.fromCharCode(61623) : val === 1 ? String.fromCharCode(61551) + String.fromCharCode(32) : String.fromCharCode(61607);\n                listLevel.characterFormat.fontFamily = listLevel.numberFormat === String.fromCharCode(61607) ? 'Wingdings' : 'Symbol';\n            }\n            else {\n                listLevel.listLevelPattern = this.getListLevelPattern(val);\n                listLevel.numberFormat = '%' + (i + 1).toString() + '.';\n                listLevel.startAt = 1;\n                listLevel.restartLevel = i;\n            }\n            listLevel.paragraphFormat = new WParagraphFormat(undefined);\n            listLevel.paragraphFormat.leftIndent = 48 * (i + 1);\n            listLevel.paragraphFormat.firstLineIndent = -24;\n            abstractList.levels.push(listLevel);\n        }\n    };\n    Layout.prototype.addSplittedLineWidget = function (lineWidget, elementIndex, splittedElementBox) {\n        var index = elementIndex;\n        if (this.isWrapText) {\n            if (!isNullOrUndefined(splittedElementBox)) {\n                lineWidget.children.splice(index + 1, 0, splittedElementBox);\n                splittedElementBox.line = lineWidget;\n            }\n            return;\n        }\n        var columneBreak = false;\n        var paragraph = lineWidget.paragraph;\n        var movedElementBox = [];\n        var lineIndex = paragraph.childWidgets.indexOf(lineWidget);\n        if (!isNullOrUndefined(splittedElementBox)) {\n            movedElementBox.push(splittedElementBox);\n        }\n        var newLineWidget = undefined;\n        var previousElement = lineWidget.children[index];\n        if (previousElement instanceof CommentCharacterElementBox && previousElement.commentType === 0 && index != 0) {\n            index = index - 1;\n        }\n        else if (previousElement.isColumnBreak && isNullOrUndefined(previousElement.nextNode)) {\n            columneBreak = true;\n        }\n        //Move Next element box to temp collection\n        for (var i = index + 1; i < lineWidget.children.length; i++) {\n            movedElementBox.push(lineWidget.children[i]);\n        }\n        if (movedElementBox.length > 0 || columneBreak) {\n            if (lineIndex === paragraph.childWidgets.length - 1) {\n                newLineWidget = new LineWidget(paragraph);\n            }\n            else {\n                newLineWidget = paragraph.childWidgets[lineIndex + 1];\n            }\n            for (var j = 0; j < movedElementBox.length; j++) {\n                movedElementBox[j].line = newLineWidget;\n            }\n            if (movedElementBox.length > 0) {\n                lineWidget.children.splice(index + 1, lineWidget.children.length - 1);\n                if (!isNullOrUndefined(lineWidget.layoutedElements) && lineWidget.layoutedElements.length > 0) {\n                    lineWidget.layoutedElements.splice(index + 1, lineWidget.layoutedElements.length - 1);\n                }\n                newLineWidget.children = movedElementBox.concat(newLineWidget.children);\n            }\n            if (paragraph.childWidgets.indexOf(newLineWidget) === -1) {\n                paragraph.childWidgets.splice(lineIndex + 1, 0, newLineWidget);\n            }\n        }\n    };\n    Layout.prototype.addElementToLine = function (paragraph, element) {\n        if (!(element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n            if (this.isWrapText) {\n                this.isWrapText = false;\n                this.viewer.clientActiveArea.width = this.viewer.clientArea.right - this.viewer.clientActiveArea.x;\n            }\n            this.viewer.cutFromLeft(this.viewer.clientActiveArea.x + element.width);\n        }\n        if (paragraph.paragraphFormat.textAlignment === 'Justify' && element instanceof TextElementBox) {\n            this.splitTextElementWordByWord(element);\n        }\n        if (element instanceof ImageElementBox) {\n            element.line.skipClipImage = !element.isInlineImage;\n        }\n    };\n    Layout.prototype.splitElementForClientArea = function (paragraph, element) {\n        //const line: LineWidget = element.line;\n        if (element.line.children.length > 0) {\n            var previousElement = element.previousElement;\n            var index = element.indexInOwner;\n            // if line widget contain only single image element box need to skip this from splitting\n            // else move element to next line\n            if (element.line.children.length > 1) {\n                if (previousElement && this.viewer.clientActiveArea.x !== this.viewer.clientArea.x) {\n                    index -= 1;\n                }\n            }\n            this.addSplittedLineWidget(element.line, index);\n        }\n    };\n    Layout.prototype.splitByWord = function (lineWidget, paragraph, elementBox, text, width, characterFormat) {\n        var index = this.getSplitIndexByWord(this.viewer.clientActiveArea.width, text, width, characterFormat, elementBox.scriptType);\n        if (index > 0 && index < elementBox.length) {\n            var indexOf = lineWidget.children.indexOf(elementBox);\n            //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n            var splittedElementBox = new TextElementBox();\n            text = text.substring(index);\n            splittedElementBox.text = text;\n            if (text[0] === ' ') {\n                var prevLength = text.length;\n                text = HelperMethods.trimStart(text); //To trim white space at starting of the text.\n                index += prevLength - text.length;\n            }\n            splittedElementBox.characterFormat.copyFormat(elementBox.characterFormat);\n            splittedElementBox.width = this.documentHelper.textHelper.getWidth(splittedElementBox.text, characterFormat, splittedElementBox.scriptType);\n            splittedElementBox.trimEndWidth = splittedElementBox.width;\n            splittedElementBox.characterRange = elementBox.characterRange;\n            //splittedElementBox.revisions = splittedElementBox.revisions;\n            elementBox.text = elementBox.text.substr(0, index);\n            if (elementBox.text !== ' ' && HelperMethods.endsWith(elementBox.text) && characterFormat.bidi\n                && elementBox.characterRange === CharacterRangeType.RightToLeft && !this.isWrapText) {\n                var textElement = this.spitTextElementByWhitespace(elementBox, characterFormat);\n                indexOf = lineWidget.children.indexOf(textElement);\n            }\n            elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, elementBox.characterFormat, elementBox.scriptType);\n            elementBox.trimEndWidth = this.documentHelper.textHelper.getWidth(HelperMethods.trimEnd(elementBox.text), elementBox.characterFormat, elementBox.scriptType);\n            if (elementBox.revisions.length > 0) {\n                this.updateRevisionForSplittedElement(elementBox, splittedElementBox, true);\n                splittedElementBox.isMarkedForRevision = elementBox.isMarkedForRevision;\n            }\n            splittedElementBox.height = elementBox.height;\n            splittedElementBox.baselineOffset = elementBox.baselineOffset;\n            this.splitErrorCollection(elementBox, splittedElementBox);\n            this.addSplittedLineWidget(lineWidget, indexOf, splittedElementBox);\n            this.addElementToLine(paragraph, elementBox);\n            if (elementBox.width === 0) {\n                lineWidget.children.splice(indexOf, 1);\n            }\n        }\n    };\n    Layout.prototype.spitTextElementByWhitespace = function (textElement, format) {\n        var lineWidget = textElement.line;\n        var indexOf = lineWidget.children.indexOf(textElement);\n        var text = textElement.text;\n        var elementBox = new TextElementBox();\n        var index = text.length - 1;\n        textElement.text = text.substring(0, index);\n        elementBox.text = text.substring(index);\n        elementBox.characterFormat.copyFormat(textElement.characterFormat);\n        elementBox.line = lineWidget;\n        elementBox.characterRange = CharacterRangeType.WordSplit;\n        elementBox.scriptType = FontScriptType.English;\n        elementBox.height = textElement.height;\n        elementBox.baselineOffset = textElement.baselineOffset;\n        elementBox.width = this.documentHelper.textHelper.getWidth(elementBox.text, format, elementBox.scriptType);\n        lineWidget.children.splice(indexOf + 1, 0, elementBox);\n        if (textElement.revisions.length > 0) {\n            this.updateRevisionForSplittedElement(textElement, elementBox, index > 0, true);\n            elementBox.isMarkedForRevision = textElement.isMarkedForRevision;\n        }\n        return elementBox;\n    };\n    Layout.prototype.splitErrorCollection = function (elementBox, splittedBox) {\n        if (elementBox.errorCollection.length > 0) {\n            var errorCollection = [];\n            var ignoreItems = elementBox.ignoreOnceItems;\n            for (var i = 0; i < elementBox.errorCollection.length; i++) {\n                errorCollection.push(elementBox.errorCollection[i]);\n            }\n            for (var j = 0; j < elementBox.errorCollection.length; j++) {\n                var index = elementBox.text.indexOf(elementBox.errorCollection[j].text);\n                var textElement = elementBox.errorCollection[j];\n                if (index < 0) {\n                    errorCollection.splice(0, 1);\n                    splittedBox.errorCollection.push(textElement);\n                }\n                else if (splittedBox.text.indexOf(textElement.text) > 0) {\n                    splittedBox.errorCollection.push(textElement);\n                }\n            }\n            splittedBox.ignoreOnceItems = ignoreItems;\n            elementBox.ignoreOnceItems = [];\n            elementBox.errorCollection = errorCollection;\n        }\n    };\n    Layout.prototype.splitByCharacter = function (lineWidget, textElement, text, width, characterFormat) {\n        var paragraph = lineWidget.paragraph;\n        var atleastSpacing = paragraph.paragraphFormat.lineSpacingType === 'AtLeast' ? paragraph.paragraphFormat.afterSpacing : 0;\n        var index = this.getTextSplitIndexByCharacter(this.viewer.clientArea.width, this.viewer.clientActiveArea.width, text, width, characterFormat, textElement.scriptType);\n        // if the index is zero, no need to split text by character. so, we can avoid the empty text element creation.\n        if (index === 0 && textElement.previousNode instanceof ImageElementBox && textElement.previousNode.textWrappingType === \"Right\") {\n            return;\n        }\n        else if (index === 0 && !isNullOrUndefined(textElement) && textElement.length > 0 && (Math.max(textElement.height, atleastSpacing) <= this.viewer.clientArea.height)\n            && this.viewer.clientActiveArea.width === 0 && lineWidget.children.indexOf(textElement) === 0) {\n            //Eventhough, there is zero remaining client area width and fit atleast one character of word in a line only if there is no item fitted in same line.\n            index = 1;\n        }\n        var splitWidth = 0;\n        if (index < textElement.length) {\n            splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, index), characterFormat, textElement.scriptType);\n            text = text.substring(index);\n        }\n        if (splitWidth > this.viewer.clientActiveArea.width && textElement.indexInOwner > 0) {\n            this.addSplittedLineWidget(lineWidget, textElement.indexInOwner - 1);\n            return;\n        }\n        var indexOf = lineWidget.children.indexOf(textElement);\n        if (index < textElement.length) {\n            //const lineIndex: number = paragraph.childWidgets.indexOf(lineWidget);\n            var splittedElement = new TextElementBox();\n            splittedElement.text = text;\n            splittedElement.errorCollection = textElement.errorCollection;\n            textElement.text = textElement.text.substr(0, index);\n            splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n            splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, characterFormat, splittedElement.scriptType);\n            splittedElement.trimEndWidth = splittedElement.width;\n            splittedElement.characterRange = textElement.characterRange;\n            textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, characterFormat, textElement.scriptType);\n            textElement.trimEndWidth = textElement.width;\n            splittedElement.height = textElement.height;\n            splittedElement.baselineOffset = textElement.baselineOffset;\n            lineWidget.children.splice(textElement.indexInOwner + 1, 0, splittedElement);\n            if (textElement.revisions.length > 0) {\n                this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0);\n                splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n            }\n            this.addElementToLine(paragraph, textElement);\n            this.addSplittedLineWidget(lineWidget, indexOf);\n            if (textElement.width === 0) {\n                lineWidget.children.splice(indexOf, 1);\n            }\n        }\n        else {\n            //Adds the last text element on inline to line elements collection\n            this.addSplittedLineWidget(lineWidget, indexOf);\n            this.addElementToLine(paragraph, textElement);\n        }\n    };\n    Layout.prototype.updateRevisionForSplittedElement = function (item, splittedElement, isSplitted, isJustify) {\n        if (item.revisions.length > 0) {\n            for (var i = 0; i < item.revisions.length; i++) {\n                var currentRevision = item.revisions[i];\n                if (isSplitted) {\n                    splittedElement.revisions.push(currentRevision);\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    if (rangeIndex < 0) {\n                        currentRevision.range.push(splittedElement);\n                    }\n                    else {\n                        if (isJustify) {\n                            currentRevision.range.splice(rangeIndex, 0, splittedElement);\n                        }\n                        else {\n                            currentRevision.range.splice(rangeIndex + 1, 0, splittedElement);\n                        }\n                    }\n                }\n                else {\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    currentRevision.range.splice(rangeIndex, 1);\n                    currentRevision.range.splice(rangeIndex, 0, splittedElement);\n                    splittedElement.revisions.push(currentRevision);\n                }\n            }\n        }\n    };\n    Layout.prototype.splitTextElementWordByWord = function (textElement) {\n        var lineWidget = textElement.line;\n        var indexOf = lineWidget.children.indexOf(textElement);\n        var startIndex = indexOf;\n        var paddingLeft = textElement.padding.left;\n        textElement.padding.left = 0;\n        var text = textElement.text;\n        var format;\n        var characterUptoWs = text.trim().indexOf(' ');\n        if (characterUptoWs >= 0) {\n            lineWidget.children.splice(indexOf, 1);\n            format = textElement.characterFormat;\n            //const fontSize: number = format.fontSize;\n            var index = textElement.length - HelperMethods.trimStart(text).length; //Trim start\n            while (index < textElement.length) {\n                index = this.getTextIndexAfterSpace(text, index);\n                if (index === 0 || index === textElement.length) {\n                    break;\n                }\n                if (index < textElement.length) {\n                    var splittedElement = new TextElementBox();\n                    var splittedText = text.substring(0, index);\n                    text = text.substring(index);\n                    if (text.substring(0, 1) === ' ') {\n                        // start of the text is trimmed and its length is reduced from text length.\n                        index += text.length - HelperMethods.trimStart(text).length;\n                    }\n                    splittedElement.text = splittedText;\n                    splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n                    splittedElement.line = lineWidget;\n                    splittedElement.height = textElement.height;\n                    splittedElement.baselineOffset = textElement.baselineOffset;\n                    splittedElement.characterRange = textElement.characterRange;\n                    lineWidget.children.splice(indexOf, 0, splittedElement);\n                    if (textElement.revisions.length > 0) {\n                        this.updateRevisionForSplittedElement(textElement, splittedElement, index > 0, true);\n                        splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n                    }\n                    if (splittedElement.text !== ' ' && HelperMethods.endsWith(splittedElement.text) && format.bidi && splittedElement.characterRange === CharacterRangeType.RightToLeft) {\n                        var elementBox = this.spitTextElementByWhitespace(splittedElement, format);\n                        indexOf = lineWidget.children.indexOf(elementBox);\n                    }\n                    splittedElement.width = this.documentHelper.textHelper.getWidth(splittedElement.text, format, splittedElement.scriptType);\n                    splittedElement.trimEndWidth = splittedElement.width;\n                    textElement.text = text;\n                    textElement.width = this.documentHelper.textHelper.getWidth(textElement.text, textElement.characterFormat, textElement.scriptType);\n                    textElement.trimEndWidth = textElement.width;\n                    if (textElement.width === 0 && lineWidget.children.indexOf(textElement) !== -1) {\n                        lineWidget.children.splice(lineWidget.children.indexOf(textElement), 1);\n                    }\n                    index = 0;\n                    indexOf++;\n                }\n            }\n            textElement.text = text;\n            lineWidget.children.splice(indexOf, 0, textElement);\n        }\n        lineWidget.children[startIndex].padding.left = paddingLeft;\n    };\n    Layout.prototype.isSplitByHyphen = function (element, text) {\n        if (!isNullOrUndefined(element.previousElement)) {\n            if (element.previousElement instanceof TextElementBox || element.previousElement instanceof ListTextElementBox) {\n                var test = element.previousElement.text;\n                return (text.substring(0, 1) === '-') && (test.substring(test.length - 1, test.length) !== ' ');\n            }\n        }\n        return (text.substring(0, 1) === '-');\n    };\n    Layout.prototype.splitTextForClientArea = function (lineWidget, element, text, width, characterFormat) {\n        var paragraph = lineWidget.paragraph;\n        var isSplitByWord = true;\n        var index = -1;\n        if (!(text.substring(0, 1) === ' ') && !this.isSplitByHyphen(element, text)) {\n            var textWidth = width;\n            var characterUptoWS = 0;\n            characterUptoWS = HelperMethods.trimEnd(text).indexOf(' ') + 1;\n            if (characterUptoWS == 0) {\n                characterUptoWS = HelperMethods.trimEnd(text).indexOf('-') + 1;\n            }\n            index = characterUptoWS;\n            //Checks whether text not starts with white space. If starts with white space, no need to check previous text blocks.\n            if (index > 0) {\n                textWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, index), characterFormat, element.scriptType);\n            }\n            if (this.viewer.clientActiveArea.width < textWidth && !this.documentHelper.textHelper.isUnicodeText(text, element.scriptType)\n                && !this.isWordFittedByJustification(element, textWidth)) {\n                //Check and split the previous text elements to next line.\n                isSplitByWord = this.checkPreviousElement(lineWidget, lineWidget.children.indexOf(element));\n                if (isSplitByWord) {\n                    //lineWidget = paragraph.childWidgets[paragraph.childWidgets.indexOf(lineWidget) + 1] as LineWidget;\n                    //isSplitByWord = textWidth <= this.viewer.clientActiveArea.width;\n                    return;\n                }\n            }\n        }\n        else {\n            index = 1;\n        }\n        if (width <= this.viewer.clientActiveArea.width) {\n            //Fits the text in current line.\n            this.addElementToLine(paragraph, element);\n        }\n        else if (isSplitByWord && (index > 0 || text.indexOf(' ') !== -1 || text.indexOf('-') !== -1)) {\n            this.splitByWord(lineWidget, paragraph, element, text, width, characterFormat);\n        }\n        else {\n            this.splitByCharacter(lineWidget, element, text, width, characterFormat);\n        }\n    };\n    Layout.prototype.splitByLineBreakOrTab = function (viewer, span, index, spiltBy) {\n        // Splits tab character to separate SpanAdv\n        var inlineIndex = span.line.children.indexOf(span);\n        var value = span.text;\n        var remainder = value.substring(index);\n        var newSpan = spiltBy === '\\t' ? new TabElementBox() : new TextElementBox();\n        newSpan.line = span.line;\n        this.updateRevisionForSplittedElement(span, newSpan, true);\n        newSpan.characterFormat.copyFormat(span.characterFormat);\n        newSpan.characterRange = span.characterRange;\n        span.line.children.splice(inlineIndex + 1, 0, newSpan);\n        if (index > 0 && remainder.length === 1) {\n            newSpan.text = value.substring(index);\n            span.text = value.substring(0, index);\n        }\n        else if (index > 0) {\n            newSpan.text = spiltBy;\n            var newText = new TextElementBox();\n            newText.line = span.line;\n            newText.text = value.substring(index + 1);\n            this.updateRevisionForSplittedElement(span, newText, true);\n            newText.characterFormat.copyFormat(span.characterFormat);\n            newText.characterRange = span.characterRange;\n            span.line.children.splice(inlineIndex + 2, 0, newText);\n            span.text = value.substring(0, index);\n        }\n        else if (remainder !== '') {\n            newSpan.text = value.substring(index + 1);\n            span.text = spiltBy;\n        }\n    };\n    /* eslint-disable  */\n    Layout.prototype.moveToNextLine = function (line, isMultiColumnSplit, index) {\n        var paragraph = line.paragraph;\n        var paraFormat = paragraph.paragraphFormat;\n        var isParagraphStart = line.isFirstLine();\n        var isParagraphEnd = line.isLastLine();\n        var height = 0;\n        var maxDescent = 0;\n        var afterSpacing = 0;\n        var beforeSpacing = 0;\n        var lineSpacing = 0;\n        var firstLineIndent = 0;\n        var borders = paraFormat.borders;\n        this.updateLineWidget(line);\n        height = this.maxTextHeight;\n        maxDescent = height - this.maxTextBaseline;\n        var pageIndex = 0;\n        var skip2013Justification = false;\n        var canRenderParagraphBorders = this.documentHelper.canRenderBorder(paragraph);\n        if (paragraph.bodyWidget && !(paragraph.bodyWidget instanceof HeaderFooterWidget)) {\n            pageIndex = this.documentHelper.pages.indexOf(paragraph.bodyWidget.page);\n        }\n        //Updates before spacing at the top of Paragraph first line.\n        if (isParagraphStart) {\n            beforeSpacing = this.getBeforeSpacing(paragraph, pageIndex);\n            firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        //Updates after spacing at the bottom of Paragraph last line.\n        if (isParagraphEnd) {\n            afterSpacing = HelperMethods.convertPointToPixel(this.getAfterSpacing(paragraph));\n        }\n        if ((paraFormat.bidi || this.isContainsRtl(line))) {\n            this.shiftElementsForRTLLayouting(line, paraFormat.bidi);\n            // this.reArrangeElementsForRtl(line, paraFormat.bidi);\n            this.isRTLLayout = true;\n        }\n        if (isNaN(this.maxTextHeight)) {\n            //Calculate line height and descent based on formatting defined in paragraph.\n            var measurement = this.documentHelper.textHelper.measureText('a', paragraph.characterFormat);\n            height = measurement.Height;\n            maxDescent = height - measurement.BaselineOffset;\n        }\n        else {\n            height = this.maxTextHeight;\n            maxDescent = height - this.maxTextBaseline;\n        }\n        // Gets line spacing.\n        lineSpacing = this.getLineSpacing(paragraph, height);\n        if ((line.skipClipImage || paragraph.paragraphFormat.lineSpacing >= 14 || lineSpacing < 0) && paraFormat.lineSpacingType === 'Exactly'\n            && lineSpacing < maxDescent + this.maxBaseline) {\n            lineSpacing = maxDescent + this.maxBaseline;\n        }\n        var subWidth = 0;\n        var whiteSpaceCount = 0;\n        var getWidthAndSpace;\n        var textAlignment = paraFormat.textAlignment;\n        var totalSpaceCount = 0;\n        var trimmedSpaceWidth = 0;\n        // calculates the sub width, for text alignments - Center, Right, Justify.\n        // if the element is paragraph end and para bidi is true and text alignment is justify\n        // we need to calculate subwidth and add it to the left margin of the element.\n        if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd)\n            || (textAlignment === 'Justify' && paraFormat.bidi) || (this.is2013Justification && isParagraphEnd))) {\n            getWidthAndSpace = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n            subWidth = getWidthAndSpace[0].subWidth;\n            whiteSpaceCount = getWidthAndSpace[0].spaceCount;\n            totalSpaceCount = getWidthAndSpace[0].totalSpaceCount;\n            trimmedSpaceWidth = getWidthAndSpace[0].trimmedSpaceWidth;\n            skip2013Justification = line.isEndsWithPageBreak || line.isEndsWithColumnBreak || line.isEndsWithLineBreak || line.paragraph.bidi || this.isRTLLayout;\n        }\n        if (!skip2013Justification && (getWidthAndSpace && getWidthAndSpace.length === 1) && this.viewer.clientActiveArea.width > 0 &&\n            !isParagraphEnd && !this.is2013Justification && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013') {\n            var availableWidth = this.viewer.clientActiveArea.width;\n            var totalSpaceWidth = this.getTotalSpaceWidth(line);\n            var averageWidthOfSpace = totalSpaceWidth / totalSpaceCount;\n            var avgAvailableLineWidthForSpace = (availableWidth) / totalSpaceCount;\n            var diffFactor = (avgAvailableLineWidthForSpace / averageWidthOfSpace) * 100;\n            var widthForAdjustment = 0;\n            if (diffFactor <= 33) {\n                widthForAdjustment = totalSpaceWidth / 8;\n            }\n            else {\n                widthForAdjustment = totalSpaceWidth / 4;\n            }\n            this.viewer.clientActiveArea.x -= widthForAdjustment;\n            this.viewer.clientActiveArea.width += widthForAdjustment;\n            this.is2013Justification = true;\n            if (isMultiColumnSplit) {\n                this.splitParagraphForMultiColumn(line, index);\n            }\n            else {\n                this.moveElementFromNextLine(line);\n                this.nextElementToLayout = line.children[line.children.length - 1];\n            }\n            return;\n        }\n        else {\n            if (this.is2013Justification && isParagraphEnd) {\n                if (subWidth > 0) {\n                    subWidth = 0;\n                    whiteSpaceCount = 0;\n                }\n            }\n            this.is2013Justification = false;\n            this.nextElementToLayout = undefined;\n        }\n        var addSubWidth = false;\n        var wrapIndex = 0;\n        var lineSpacingType = paraFormat.lineSpacingType;\n        var isStarted = false;\n        var children = line.renderedElements;\n        var maxElementHeight = 0;\n        var maxElementBottomMargin = 0;\n        var maxElementTopMargin = 0;\n        var elementLeft = this.viewer.clientArea.x;\n        for (var i = 0; i < children.length; i++) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var leftMargin = 0;\n            var elementBox = children[i];\n            if (!isNullOrUndefined(getWidthAndSpace) && isStarted && elementBox.padding.left > 0 &&\n                (getWidthAndSpace.length > wrapIndex + 1)) {\n                var previousWidth = subWidth;\n                if (textAlignment === \"Justify\") {\n                    previousWidth = subWidth * getWidthAndSpace[wrapIndex].spaceCount;\n                }\n                else if (textAlignment === \"Center\") {\n                    previousWidth = subWidth / 2;\n                }\n                elementBox.padding.left = elementBox.padding.left - previousWidth;\n                var subWidthInfo = getWidthAndSpace[++wrapIndex];\n                subWidth = subWidthInfo.subWidth;\n                whiteSpaceCount = subWidthInfo.spaceCount;\n            }\n            if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            isStarted = true;\n            var alignElements = this.alignLineElements(elementBox, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, i === children.length - 1);\n            if (textAlignment === \"Justify\" && elementBox instanceof ShapeBase && elementBox.textWrappingStyle === 'Inline' && subWidth !== 0) {\n                elementBox.x = elementLeft;\n                if (elementBox instanceof ShapeElementBox) {\n                    for (var i_3 = 0; i_3 < elementBox.textFrame.childWidgets.length; i_3++) {\n                        var widget = elementBox.textFrame.childWidgets[i_3];\n                        var indent = widget.bidi ? widget.rightIndent : widget.leftIndent;\n                        widget.x = elementLeft + HelperMethods.convertPointToPixel(indent + elementBox.textFrame.marginLeft);\n                    }\n                }\n            }\n            elementLeft += elementBox.width;\n            line.maxBaseLine = this.maxBaseline;\n            topMargin = alignElements.topMargin;\n            bottomMargin = alignElements.bottomMargin;\n            addSubWidth = alignElements.addSubWidth;\n            whiteSpaceCount = alignElements.whiteSpaceCount;\n            //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n            if (lineSpacingType === 'Multiple') {\n                if (lineSpacing > height) {\n                    bottomMargin += lineSpacing - height;\n                }\n                else {\n                    topMargin += lineSpacing - height;\n                }\n            }\n            else if (lineSpacingType === 'Exactly') {\n                topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n            }\n            else if (lineSpacing > topMargin + elementBox.height + bottomMargin) {\n                topMargin += lineSpacing - (topMargin + elementBox.height + bottomMargin);\n            }\n            if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0] && this.documentHelper.pages[pageIndex].sectionIndex === this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n                topMargin += 0;\n            }\n            else {\n                topMargin += beforeSpacing;\n            }\n            if (borders.top.lineStyle != 'None') {\n                if (line.isFirstLine() && !canRenderParagraphBorders.skipTopBorder) {\n                    topMargin += HelperMethods.convertPointToPixel(borders.top.lineWidth + borders.top.space);\n                }\n            }\n            if (borders.bottom.lineStyle != 'None') {\n                if (line.isLastLine() && !canRenderParagraphBorders.skipBottomBorder) {\n                    bottomMargin += HelperMethods.convertPointToPixel(borders.bottom.lineWidth + borders.bottom.space);\n                }\n            }\n            bottomMargin += afterSpacing;\n            var previousElement = i > 0 ? children[i - 1] : undefined;\n            if (i === 0 || (!(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') &&\n                previousElement instanceof ShapeBase && previousElement.textWrappingStyle !== 'Inline' && previousElement.indexInOwner < elementBox.indexInOwner)\n                || elementBox.padding.left > 0) {\n                line.height = topMargin + elementBox.height + bottomMargin;\n                if (textAlignment === 'Right' || (textAlignment === 'Justify' && paraFormat.bidi && (isParagraphEnd || trimmedSpaceWidth < 0))) {\n                    //Aligns the text as right justified and consider subwidth for bidirectional paragrph with justify.\n                    if (trimmedSpaceWidth < 0) {\n                        leftMargin = trimmedSpaceWidth;\n                    }\n                    else {\n                        leftMargin = subWidth;\n                    }\n                }\n                else if (textAlignment === 'Center') {\n                    //Aligns the text as center justified.\n                    if (subWidth < 0) {\n                        leftMargin = subWidth;\n                    }\n                    else {\n                        leftMargin = subWidth / 2;\n                    }\n                }\n            }\n            elementBox.margin = new Margin(leftMargin, topMargin, 0, bottomMargin);\n            elementBox.line = line;\n            if (maxElementHeight < elementBox.height) {\n                maxElementHeight = elementBox.height;\n                maxElementBottomMargin = elementBox.margin.bottom;\n                maxElementTopMargin = elementBox.margin.top;\n            }\n            if (elementBox instanceof ShapeElementBox && elementBox.textWrappingStyle === \"Inline\") {\n                if (i !== 0 || elementBox.margin.left > 0) {\n                    var elementLeftMargin = children[0].margin.left;\n                    elementBox.x += elementLeftMargin;\n                    for (var i_4 = 0; i_4 < elementBox.textFrame.childWidgets.length; i_4++) {\n                        var widget = elementBox.textFrame.childWidgets[i_4];\n                        if (widget instanceof TableWidget) {\n                            widget.updateChildWidgetLeft(widget.x + elementLeftMargin, true);\n                        }\n                        else {\n                            widget.x += elementLeftMargin;\n                        }\n                    }\n                }\n                this.updateShapeYPosition(elementBox);\n            }\n        }\n        line.margin = new Margin(0, maxElementTopMargin, 0, maxElementBottomMargin);\n        this.adjustPositionBasedOnTopAndBottom(line);\n        this.checkInbetweenShapeOverlap(line);\n        if (!isMultiColumnSplit && line.isLastLine() && line.indexInOwner === 0 && line.paragraph.paragraphFormat.widowControl) {\n            var previousSplitWidget = line.paragraph.previousSplitWidget;\n            if (!isNullOrUndefined(previousSplitWidget) && !previousSplitWidget.isEndsWithPageBreak && !previousSplitWidget.isEndsWithColumnBreak && previousSplitWidget.indexInOwner !== 0) {\n                var startLineIndex = previousSplitWidget.childWidgets.length - 1;\n                if (previousSplitWidget.childWidgets.length === 2) {\n                    startLineIndex = 0;\n                }\n                this.splitParagraph(previousSplitWidget, startLineIndex, line.paragraph);\n                this.updateClientAreaForNextBlock(line, line.paragraph);\n            }\n        }\n        else if (isMultiColumnSplit) {\n            this.splitParagraphForMultiColumn(line, index);\n        }\n        if (!isMultiColumnSplit) {\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + line.height);\n        }\n        this.wrapPosition = [];\n    };\n    Layout.prototype.updateShapeYPosition = function (elementBox) {\n        if (elementBox.margin.top > 0) {\n            elementBox.y += elementBox.margin.top;\n            for (var j = 0; j < elementBox.textFrame.childWidgets.length; j++) {\n                elementBox.textFrame.childWidgets[j].y += elementBox.margin.top;\n            }\n        }\n    };\n    Layout.prototype.getBodyWidget = function (section, isFirstBody) {\n        if (isFirstBody) {\n            while (section && section.columnIndex !== 0) {\n                section = section.previousRenderedWidget;\n            }\n        }\n        else {\n            while (section) {\n                if (isNullOrUndefined(section.nextRenderedWidget) || section.columnIndex === section.sectionFormat.numberOfColumns - 1 || section.index !== section.nextRenderedWidget.index) {\n                    break;\n                }\n                section = section.nextRenderedWidget;\n            }\n        }\n        return section;\n    };\n    Layout.prototype.splitParagraphForMultiColumn = function (line, index) {\n        this.splitParagraph(line.paragraph, index, undefined);\n        if ((isNullOrUndefined(line.paragraph.previousRenderedWidget) && index == 0) ||\n            (!isNullOrUndefined(line.paragraph.previousRenderedWidget) && line.paragraph.previousRenderedWidget.bodyWidget.sectionIndex !== line.paragraph.bodyWidget.sectionIndex)) {\n            this.moveBlocksToNextPage(line.paragraph);\n        }\n        else {\n            this.moveBlocksToNextPage(line.paragraph.previousRenderedWidget);\n        }\n        this.viewer.updateClientArea(line.paragraph.bodyWidget, line.paragraph.bodyWidget.page);\n        this.viewer.clientActiveArea.y = line.paragraph.bodyWidget.y;\n        if (line.paragraph.bodyWidget.sectionFormat.equalWidth) {\n            var parawidget = line.paragraph;\n            this.documentHelper.blockToShift = parawidget;\n            this.shiftLayoutedItems(false, true);\n        }\n    };\n    //Checks Inbetween Overlap & Updates Line marginTop\n    Layout.prototype.checkInbetweenShapeOverlap = function (line, floatingElements) {\n        var _this = this;\n        if (!(line.paragraph.containerWidget instanceof TextFrame) && line.paragraph.bodyWidget) {\n            var overlapShape_1;\n            var lineY_1 = this.getLineY(line);\n            var isInsideTable_1 = line.paragraph.isInsideTable;\n            var emptyParaPosition_1 = line.paragraph.y;\n            var isFloatingElementPresent_1 = true;\n            if (isNullOrUndefined(floatingElements)) {\n                isFloatingElementPresent_1 = false;\n                floatingElements = line.paragraph.bodyWidget.floatingElements;\n            }\n            /* eslint:disable */\n            floatingElements.sort(function (a, b) { return a.y - b.y; });\n            floatingElements.forEach(function (shape) {\n                if (isInsideTable_1 && shape.line && !shape.line.paragraph.isInsideTable || isNullOrUndefined(shape.line)) {\n                    return;\n                }\n                var lineRect;\n                if (shape.textWrappingStyle === 'TopAndBottom' && shape instanceof ImageElementBox && !line.paragraph.isEmpty()) {\n                    lineRect = new Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.children[0].height);\n                }\n                else {\n                    lineRect = new Rect(line.paragraph.x, _this.viewer.clientActiveArea.y, line.paragraph.width, line.height);\n                }\n                var shapeRect = new Rect(shape.x, shape.y - shape.distanceTop, shape.width, shape.height);\n                if (shape.line && _this.isRelayout && !_this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, line.paragraph)\n                    || _this.isRelayout && _this.isRelayoutOverlap && _this.viewer.documentHelper.selection.isExistAfter(shape.line.paragraph, _this.endOverlapWidget)) {\n                    return;\n                }\n                var considerShape = (shape.textWrappingStyle === 'TopAndBottom');\n                var updatedFloatPosition = ((shape.y + shape.height + shape.distanceBottom) - lineY_1);\n                if (overlapShape_1 && considerShape &&\n                    overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom + line.height > shape.y - shape.distanceTop &&\n                    overlapShape_1.y - overlapShape_1.distanceTop < shape.y - shape.distanceTop &&\n                    shape.y + shape.height + shape.distanceBottom > overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom) {\n                    overlapShape_1 = shape;\n                    if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n                        line.paragraph.y = emptyParaPosition_1;\n                        line.paragraph.y += updatedFloatPosition;\n                    }\n                    else {\n                        line.marginTop = updatedFloatPosition;\n                    }\n                }\n                else if (considerShape && !overlapShape_1 && lineRect.isIntersecting(shapeRect)) {\n                    overlapShape_1 = shape;\n                    if (line.paragraph.isEmpty() && isFloatingElementPresent_1) {\n                        line.paragraph.y += updatedFloatPosition;\n                    }\n                    else {\n                        line.marginTop = updatedFloatPosition;\n                    }\n                }\n            });\n            if (overlapShape_1) {\n                this.viewer.cutFromTop(overlapShape_1.y + overlapShape_1.height + overlapShape_1.distanceBottom);\n            }\n            else if (this.isRelayoutOverlap) {\n                line.marginTop = 0;\n            }\n        }\n    };\n    Layout.prototype.getLineY = function (line) {\n        var para = line.paragraph;\n        var lineY = para.y;\n        if (!para.isEmpty()) {\n            var lineWidget = para.firstChild;\n            while (lineWidget !== line) {\n                lineY = lineY + lineWidget.height + lineWidget.marginTop;\n                lineWidget = lineWidget.nextLine;\n            }\n        }\n        return lineY;\n    };\n    Layout.prototype.updateLineWidget = function (line) {\n        var spaceHeight = 0;\n        var spaceBaseline = 0;\n        var isContainsImage = false;\n        var isFieldCode = false;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof FieldElementBox && element.fieldType === 2) {\n                isFieldCode = false;\n            }\n            if (isFieldCode) {\n                continue;\n            }\n            if (element instanceof FieldElementBox && element.fieldType === 0) {\n                isFieldCode = true;\n            }\n            if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            if (element instanceof TextElementBox && element.text.replace(/\\s+/g, '').length === 0 && element.text !== String.fromCharCode(160)) {\n                if (spaceHeight < element.height) {\n                    spaceHeight = element.height;\n                    spaceBaseline = element.baselineOffset;\n                }\n                continue;\n            }\n            if (element instanceof TextElementBox || element instanceof ListTextElementBox) {\n                var elementHeight = element.height;\n                var baselineOffset = element.baselineOffset;\n                var isCellContentControl = false;\n                //We have increased the checkbox form field font size using a constant factor `CHECK_BOX_FACTOR`\n                //To match the MS Word check box rendering size.\n                //Due to it line height also get increased. So, handled adjusting height while updating line height.\n                if (element instanceof TextElementBox && element.isCheckBoxElement && !isNullOrUndefined(element.previousNode) && element.previousNode instanceof ContentControl && (element.previousNode.contentControlWidgetType === 'Cell' || element.previousNode.contentControlWidgetType === 'Inline')) {\n                    isCellContentControl = true;\n                }\n                if (element instanceof TextElementBox && element.isCheckBoxElement && !isCellContentControl) {\n                    elementHeight = elementHeight / CHECK_BOX_FACTOR;\n                    baselineOffset = baselineOffset / CHECK_BOX_FACTOR;\n                }\n                if (this.maxTextHeight < elementHeight) {\n                    this.maxTextHeight = elementHeight;\n                    this.maxTextBaseline = baselineOffset;\n                }\n                if (this.maxBaseline < this.maxTextBaseline) {\n                    this.maxBaseline = this.maxTextBaseline;\n                }\n            }\n            else if (this.maxBaseline < element.height) {\n                this.maxBaseline = element.height;\n                if (element instanceof ImageElementBox) {\n                    isContainsImage = true;\n                }\n            }\n        }\n        if (this.maxTextHeight === 0 && spaceHeight !== 0) {\n            if (isContainsImage) {\n                this.maxTextHeight = 0;\n                this.maxTextBaseline = 0;\n            }\n            else {\n                if (line.isLastLine() && this.documentHelper.selection) {\n                    var paragraphMarkSize = this.documentHelper.selection.getParagraphMarkSize(line.paragraph, 0, 0);\n                    this.maxTextHeight = paragraphMarkSize.height;\n                    this.maxTextBaseline = spaceBaseline;\n                }\n                else {\n                    this.maxTextHeight = spaceHeight;\n                    this.maxTextBaseline = spaceBaseline;\n                }\n                if (this.maxBaseline < this.maxTextBaseline) {\n                    this.maxBaseline = this.maxTextBaseline;\n                }\n            }\n        }\n    };\n    Layout.prototype.moveToNextPage = function (viewer, line, isPageBreak, isList) {\n        if (this.isFootNoteLayoutStart) {\n            return;\n        }\n        var paragraphWidget = line.paragraph;\n        var startBlock;\n        var startIndex = 0;\n        var keepLinesTogether = false;\n        var keepWithNext = false;\n        if (paragraphWidget && !(!isNullOrUndefined(paragraphWidget.containerWidget) && !isNullOrUndefined(paragraphWidget.containerWidget.containerWidget) && paragraphWidget.containerWidget.containerWidget instanceof FootNoteWidget)) {\n            var index = 0;\n            if (paragraphWidget instanceof FootNoteWidget) {\n                return;\n            }\n            if (!isNullOrUndefined(line)) {\n                index = paragraphWidget.childWidgets.indexOf(line);\n                if (index !== 0) {\n                    if (paragraphWidget.paragraphFormat.keepLinesTogether && !isNullOrUndefined(paragraphWidget.previousWidget) && !line.previousLine.isEndsWithColumnBreak) {\n                        index = 0;\n                        keepLinesTogether = true;\n                    }\n                    else if (index == 1 && !line.previousLine.isEndsWithPageBreak && !line.previousLine.isEndsWithColumnBreak && paragraphWidget.paragraphFormat.widowControl &&\n                        !isNullOrUndefined(paragraphWidget.previousWidget)) {\n                        index = 0;\n                        keepLinesTogether = true;\n                    }\n                }\n                if (index > 0 || isPageBreak) {\n                    paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n                }\n                if (index === 0 && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak) {\n                    var blockInfo = this.alignBlockElement(paragraphWidget);\n                    if (!isNullOrUndefined(blockInfo.node)) {\n                        startBlock = blockInfo.node instanceof TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n                        startIndex = startBlock instanceof TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n                        paragraphWidget = startBlock;\n                        index = startIndex;\n                        keepLinesTogether = false;\n                        keepWithNext = true;\n                        if (paragraphWidget instanceof ParagraphWidget) {\n                            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !paragraphWidget.paragraphFormat.keepWithNext && !isList) {\n                                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n                            }\n                        }\n                        else {\n                            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isList) {\n                                this.viewer.owner.editorModule.updateWholeListItems(paragraphWidget);\n                            }\n                        }\n                    }\n                }\n            }\n            /* eslint-disable-next-line max-len */\n            if (!isNullOrUndefined(paragraphWidget.bodyWidget) && !isNullOrUndefined(paragraphWidget.bodyWidget.containerWidget) && !(paragraphWidget.bodyWidget.containerWidget instanceof FootNoteWidget) && paragraphWidget.bodyWidget.page.footnoteWidget !== undefined) {\n                // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, true);\n                this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n                // this.viewer.updateClientAreaForBlock(paragraphWidget.bodyWidget.page.footnoteWidget.block, false);\n            }\n            if (this.isMultiColumnSplit) {\n                var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(paragraphWidget.bodyWidget);\n                if (isNullOrUndefined(nextColumn)) {\n                    return;\n                }\n            }\n            var prevPage = paragraphWidget.bodyWidget.page;\n            if (isPageBreak && index === 0 && !isNullOrUndefined(paragraphWidget.bodyWidget.lastChild) && paragraphWidget === paragraphWidget.bodyWidget.lastChild && this.endOverlapWidget) {\n                this.isRelayoutOverlap = false;\n            }\n            var nextBody = this.moveBlocksToNextPage(paragraphWidget, index === 0, index);\n            if (prevPage !== nextBody.page) {\n                this.viewer.updateClientArea(nextBody, nextBody.page);\n            }\n            this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n            if (index > 0) {\n                if (line.isLastLine() && isPageBreak) {\n                    return;\n                }\n                var nextParagraph = void 0;\n                if (nextBody.firstChild instanceof ParagraphWidget && nextBody.firstChild.equals(paragraphWidget)) {\n                    nextParagraph = nextBody.firstChild;\n                }\n                else {\n                    nextParagraph = new ParagraphWidget();\n                }\n                nextParagraph = this.moveChildsToParagraph(paragraphWidget, index, nextParagraph);\n                // this.updateLinearIndex(paragraphWidget);\n                // this.updateLinearIndex(nextParagraph);\n                nextParagraph.containerWidget = nextBody;\n                for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n                    var element = nextParagraph.floatingElements[m];\n                    if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n                        paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n                    }\n                }\n                var footWidget = this.getFootNoteWidgetsOf(nextParagraph);\n                this.moveFootNotesToPage(footWidget, paragraphWidget.bodyWidget, nextBody);\n                paragraphWidget = nextParagraph;\n                this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footWidget);\n            }\n            else if (!isPageBreak) {\n                paragraphWidget.containerWidget.removeChild(paragraphWidget.indexInOwner);\n                if (paragraphWidget instanceof ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n                    this.addRemoveFloatElementsFromBody(paragraphWidget, paragraphWidget.containerWidget, false);\n                }\n            }\n            if (!isPageBreak) {\n                if (nextBody.childWidgets.indexOf(paragraphWidget) === -1) {\n                    nextBody.childWidgets.splice(0, 0, paragraphWidget);\n                    if (paragraphWidget instanceof ParagraphWidget && paragraphWidget.floatingElements.length > 0) {\n                        this.addRemoveFloatElementsFromBody(paragraphWidget, nextBody, true);\n                    }\n                }\n                paragraphWidget.containerWidget = nextBody;\n                this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n                if (keepLinesTogether || keepWithNext) {\n                    if (paragraphWidget.bodyWidget.page.footnoteWidget) {\n                        this.layoutfootNote(paragraphWidget.bodyWidget.page.footnoteWidget);\n                    }\n                    if (line.paragraph !== paragraphWidget || (paragraphWidget.paragraphFormat.widowControl && this.isImagePresent(paragraphWidget))) {\n                        if (paragraphWidget instanceof TableWidget) {\n                            this.clearTableWidget(paragraphWidget, true, true, false);\n                        }\n                        this.layoutBlock(paragraphWidget, 0, true);\n                        viewer.updateClientAreaForBlock(paragraphWidget, false);\n                    }\n                    var lastBlock = line.paragraph;\n                    if (keepWithNext) {\n                        var nextBlock = paragraphWidget.nextWidget;\n                        if (!isNullOrUndefined(nextBlock)) {\n                            do {\n                                viewer.updateClientAreaForBlock(nextBlock, true);\n                                if (nextBlock !== lastBlock) {\n                                    if (nextBlock instanceof TableWidget) {\n                                        this.clearTableWidget(nextBlock, true, true, false);\n                                    }\n                                    this.layoutBlock(nextBlock, 0, true);\n                                    viewer.updateClientAreaForBlock(nextBlock, false);\n                                }\n                                else {\n                                    this.viewer.updateClientAreaLocation(nextBlock, this.viewer.clientActiveArea);\n                                    break;\n                                }\n                                nextBlock = nextBlock.nextWidget;\n                            } while (nextBlock);\n                        }\n                    }\n                    this.updateClientAreaForNextBlock(line, lastBlock);\n                }\n                if (line.isFirstLine() && line.indexInOwner === 0 && !(line.children[0] instanceof ListTextElementBox)) {\n                    var firstLineIndent = -HelperMethods.convertPointToPixel(line.paragraph.paragraphFormat.firstLineIndent);\n                    this.viewer.updateClientWidth(firstLineIndent);\n                }\n            }\n        }\n        if (!isPageBreak) {\n            this.updateShapeBaseLocation(paragraphWidget);\n        }\n        if (this.isRelayoutOverlap && this.endOverlapWidget && (!this.skipRelayoutOverlap || (this.endOverlapWidget instanceof TableWidget && this.endOverlapWidget.wrapTextAround))) {\n            var block_1 = this.endOverlapWidget.previousRenderedWidget;\n            var para = line.paragraph;\n            this.startOverlapWidget = para;\n            line = this.endOverlapWidget.childWidgets[0];\n            para = line.paragraph;\n            while (para) {\n                para.floatingElements.forEach(function (shape) {\n                    if (block_1.bodyWidget.floatingElements.indexOf(shape) !== -1 && shape.textWrappingStyle !== 'Inline') {\n                        block_1.bodyWidget.floatingElements.splice(block_1.bodyWidget.floatingElements.indexOf(shape), 1);\n                        line.paragraph.bodyWidget.floatingElements.push(shape);\n                    }\n                });\n                para = para !== this.endOverlapWidget ? para.nextWidget : undefined;\n            }\n            this.layoutStartEndBlocks(this.startOverlapWidget, this.endOverlapWidget);\n            this.startOverlapWidget = undefined;\n            this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - this.endOverlapWidget.y;\n            this.viewer.clientActiveArea.y = this.endOverlapWidget.y;\n        }\n    };\n    Layout.prototype.isImagePresent = function (paragraph) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var j = 0; j < line.children.length; j++) {\n                if (line.children[j] instanceof ImageElementBox) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.updateShapeBaseLocation = function (paragraphWidget) {\n        if (paragraphWidget instanceof ParagraphWidget &&\n            paragraphWidget.floatingElements.length > 0) {\n            for (var m = 0; m < paragraphWidget.floatingElements.length; m++) {\n                var shape = paragraphWidget.floatingElements[m];\n                var position = this.getFloatingItemPoints(shape);\n                shape.y = position.y;\n                shape.x = position.x;\n                if (shape instanceof ShapeElementBox)\n                    this.updateChildLocationForCellOrShape(shape.y, shape);\n            }\n        }\n    };\n    Layout.prototype.moveChildsToParagraph = function (srcParagraph, childStartIndex, nextParagraph) {\n        nextParagraph = this.addParagraphWidget(this.viewer.clientActiveArea, nextParagraph);\n        var insertIndex = 0;\n        for (var i = childStartIndex; i < srcParagraph.childWidgets.length; i++) {\n            var lineWidget = srcParagraph.childWidgets[i];\n            lineWidget.paragraph = nextParagraph;\n            nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n            lineWidget.paragraph = nextParagraph;\n            insertIndex++;\n        }\n        nextParagraph.paragraphFormat = srcParagraph.paragraphFormat;\n        nextParagraph.characterFormat = srcParagraph.characterFormat;\n        nextParagraph.index = srcParagraph.index;\n        srcParagraph.childWidgets.splice(childStartIndex);\n        for (var i = 0; i < srcParagraph.floatingElements.length; i++) {\n            var element = srcParagraph.floatingElements[i];\n            if (element.line.paragraph !== srcParagraph) {\n                nextParagraph.floatingElements.push(element);\n                srcParagraph.floatingElements.splice(srcParagraph.floatingElements.indexOf(element), 1);\n                i--;\n            }\n        }\n        return nextParagraph;\n    };\n    /**\n     * @param {ParagraphWidget} paragarph - the paragraph\n     * @param {BodyWidget} body - the bodyWidget\n     * @param {boolean} add - to specify add or remove floating elements from body widget.\n     */\n    Layout.prototype.addRemoveFloatElementsFromBody = function (paragarph, body, add) {\n        if (paragarph.floatingElements.length > 0) {\n            for (var x = 0; x < paragarph.floatingElements.length; x++) {\n                if (add) {\n                    if (body.floatingElements.indexOf(paragarph.floatingElements[x]) === -1 && paragarph.floatingElements[x].textWrappingStyle !== 'Inline') {\n                        body.floatingElements.push(paragarph.floatingElements[x]);\n                    }\n                }\n                else {\n                    if (body.floatingElements.indexOf(paragarph.floatingElements[x]) !== -1) {\n                        body.floatingElements.splice(body.floatingElements.indexOf(paragarph.floatingElements[x]), 1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Align block based on keep with next and keep lines together property.\n     */\n    Layout.prototype.alignBlockElement = function (block) {\n        if (block instanceof ParagraphWidget && (block.isEndsWithPageBreak || block.isEndsWithColumnBreak)) {\n            return { node: undefined, position: { index: '' } };\n        }\n        var startBlock;\n        var startIndex = 0;\n        // Check previous block has keep with next property.\n        var previousBlock = this.getPreviousBlock(block);\n        while (previousBlock) {\n            if (previousBlock instanceof ParagraphWidget) {\n                if (!previousBlock.paragraphFormat.keepWithNext || previousBlock.isEndsWithPageBreak || previousBlock.isEndsWithColumnBreak) {\n                    break;\n                }\n                startBlock = previousBlock;\n                if (previousBlock.paragraphFormat.keepLinesTogether) {\n                    if (isNullOrUndefined(this.getPreviousBlock(previousBlock))) {\n                        startBlock = undefined;\n                    }\n                    else {\n                        startIndex = 0;\n                    }\n                }\n                else {\n                    if (isNullOrUndefined(this.getPreviousBlock(previousBlock))\n                        && previousBlock.childWidgets.length === 1) {\n                        startBlock = undefined;\n                    }\n                    else {\n                        if (!previousBlock.paragraphFormat.widowControl) {\n                            startIndex = previousBlock.lastChild.indexInOwner;\n                            if (startIndex !== 0) {\n                                break;\n                            }\n                        }\n                        else {\n                            startIndex = previousBlock.lastChild.indexInOwner - 1;\n                            if (startIndex === 1 || startIndex < 0) {\n                                // Move entire block to next page based on widow control.\n                                startIndex = 0;\n                            }\n                            if (startIndex !== 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (previousBlock instanceof TableRowWidget) {\n                var childWidget = previousBlock.childWidgets[0];\n                if (childWidget.childWidgets.length > 0) {\n                    var firstBlock = this.documentHelper.getFirstParagraphInCell(childWidget);\n                    if (!firstBlock.paragraphFormat.keepWithNext) {\n                        break;\n                    }\n                    if (firstBlock.paragraphFormat.keepWithNext) {\n                        if (isNullOrUndefined(this.getPreviousBlock(previousBlock))) {\n                            startBlock = undefined;\n                        }\n                        else {\n                            startBlock = previousBlock;\n                            startIndex = startBlock.indexInOwner;\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n                // TODO: Table row splitting case\n            }\n            previousBlock = this.getPreviousBlock(previousBlock);\n        }\n        if (!isNullOrUndefined(startBlock) && startBlock instanceof ParagraphWidget && startBlock.indexInOwner === 0 && startBlock.paragraphFormat.keepWithNext && startBlock.paragraphFormat.widowControl) {\n            startBlock = block;\n        }\n        return { node: startBlock, position: { index: startIndex.toString() } };\n    };\n    Layout.prototype.getPreviousBlock = function (block) {\n        var previousBlock;\n        if (block instanceof ParagraphWidget) {\n            previousBlock = block.previousWidget;\n            if (!this.isInitialLoad && isNullOrUndefined(previousBlock) && block.containerWidget instanceof BodyWidget && !isNullOrUndefined(block.containerWidget.previousRenderedWidget) && block.containerWidget.sectionIndex === block.containerWidget.previousRenderedWidget.sectionIndex) {\n                if (!isNullOrUndefined(block.previousRenderedWidget) && block.previousRenderedWidget instanceof ParagraphWidget) {\n                    previousBlock = block.previousRenderedWidget;\n                }\n            }\n        }\n        else if (block instanceof TableRowWidget) {\n            previousBlock = block.previousWidget;\n            if (isNullOrUndefined(previousBlock)) {\n                previousBlock = block.ownerTable.previousWidget;\n            }\n        }\n        if (previousBlock instanceof TableWidget) {\n            previousBlock = previousBlock.lastChild;\n        }\n        return previousBlock;\n    };\n    Layout.prototype.splitRow = function (startRow) {\n        var table = startRow.ownerTable;\n        if (startRow.indexInOwner === 0) {\n            return table;\n        }\n        var newTable = this.createTableWidget(table);\n        for (var i = startRow.indexInOwner; i < table.childWidgets.length;) {\n            var rowWidget = table.childWidgets.splice(i, 1)[0];\n            newTable.childWidgets.push(rowWidget);\n            rowWidget.containerWidget = newTable;\n            table.height -= rowWidget.height;\n            newTable.height += rowWidget.height;\n        }\n        table.containerWidget.childWidgets.splice(table.indexInOwner + 1, 0, newTable);\n        newTable.containerWidget = table.containerWidget;\n        return newTable;\n    };\n    Layout.prototype.splitParagraph = function (paragarph, index, nextParagraph) {\n        if (index === 0 && isNullOrUndefined(nextParagraph)) {\n            return paragarph;\n        }\n        var isMoveCurrentBlock = false;\n        if (isNullOrUndefined(nextParagraph)) {\n            nextParagraph = new ParagraphWidget();\n            nextParagraph.containerWidget = paragarph.containerWidget;\n            paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner + 1, 0, nextParagraph);\n            nextParagraph.paragraphFormat = paragarph.paragraphFormat;\n            nextParagraph.characterFormat = paragarph.characterFormat;\n            nextParagraph.index = paragarph.index;\n        }\n        else if (index === 0) {\n            isMoveCurrentBlock = true;\n            var temp = paragarph;\n            paragarph = nextParagraph;\n            nextParagraph = temp;\n        }\n        var insertIndex = 0;\n        for (var i = index; i < paragarph.childWidgets.length; i++) {\n            var lineWidget = paragarph.childWidgets[i];\n            lineWidget.paragraph = nextParagraph;\n            if (isMoveCurrentBlock) {\n                nextParagraph.childWidgets.push(lineWidget);\n            }\n            else {\n                nextParagraph.childWidgets.splice(insertIndex, 0, lineWidget);\n            }\n            nextParagraph.height += lineWidget.height;\n            paragarph.height -= lineWidget.height;\n            lineWidget.paragraph = nextParagraph;\n            insertIndex++;\n        }\n        nextParagraph.width = paragarph.width;\n        if (isMoveCurrentBlock) {\n            nextParagraph.containerWidget.childWidgets.splice(nextParagraph.indexInOwner, 1);\n            nextParagraph.y = paragarph.y;\n            nextParagraph.x = paragarph.x;\n            nextParagraph.containerWidget = paragarph.containerWidget;\n            paragarph.containerWidget.childWidgets.unshift(nextParagraph);\n        }\n        else {\n            paragarph.childWidgets.splice(index);\n        }\n        if (paragarph.childWidgets.length === 0 || isMoveCurrentBlock) {\n            paragarph.containerWidget.childWidgets.splice(paragarph.indexInOwner, 1);\n        }\n        // this.updateLinearIndex(paragarph);\n        // this.updateLinearIndex(nextParagraph);\n        return nextParagraph;\n    };\n    Layout.prototype.updateClientPositionForBlock = function (block, currentBlock) {\n        var startBlock = (block instanceof TableRowWidget) ? block.ownerTable : block;\n        var isClientAreaUpdated = false;\n        do {\n            this.viewer.updateClientAreaForBlock(startBlock, true);\n            if (startBlock instanceof ParagraphWidget) {\n                if (currentBlock instanceof ParagraphWidget && currentBlock.equals(startBlock)) {\n                    isClientAreaUpdated = true;\n                    break;\n                }\n                this.addParagraphWidget(this.viewer.clientActiveArea, startBlock);\n                this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n                this.viewer.updateClientAreaForBlock(startBlock, false);\n            }\n            else if (startBlock instanceof TableWidget) {\n                if (this.documentHelper.compatibilityMode !== 'Word2013' && !startBlock.isInsideTable) {\n                    this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                        HelperMethods.convertPointToPixel(startBlock.firstChild.firstChild.leftMargin);\n                }\n                this.addTableWidget(this.viewer.clientActiveArea, [startBlock]);\n                var nextRow = startBlock.firstChild;\n                if (currentBlock instanceof TableRowWidget && startBlock.equals(currentBlock.ownerTable) && !isNullOrUndefined(nextRow)) {\n                    do {\n                        if (nextRow.equals(currentBlock)) {\n                            isClientAreaUpdated = true;\n                            break;\n                        }\n                        this.addTableRowWidget(this.viewer.clientActiveArea, [nextRow]);\n                        this.updateChildLocationForRow(this.viewer.clientActiveArea.y, nextRow);\n                        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + nextRow.height);\n                        startBlock.height += nextRow.height;\n                        nextRow = nextRow.nextWidget;\n                    } while (nextRow);\n                }\n                else {\n                    this.updateChildLocationForTable(startBlock.y, startBlock);\n                    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + startBlock.height);\n                    this.viewer.updateClientAreaForBlock(startBlock, false);\n                }\n            }\n            startBlock = startBlock.nextWidget;\n        } while (startBlock && !isClientAreaUpdated);\n    };\n    Layout.prototype.updateClientAreaForNextBlock = function (line, paragraphWidget) {\n        for (var m = 0; m < paragraphWidget.childWidgets.length; m++) {\n            var child = paragraphWidget.childWidgets[m];\n            if (line === child) {\n                break;\n            }\n            this.updateShapeBaseLocation(paragraphWidget);\n            this.checkInbetweenShapeOverlap(child);\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + child.height);\n        }\n    };\n    Layout.prototype.layoutStartEndBlocks = function (startBlock, endBlock) {\n        var block = startBlock;\n        this.isOverlapFloatTable = true;\n        this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - startBlock.y;\n        this.viewer.clientActiveArea.y = startBlock.y;\n        var startParagaraph;\n        if (startBlock instanceof TableWidget) {\n            startParagaraph = this.documentHelper.getFirstParagraphInFirstCell(startBlock);\n        }\n        else {\n            startParagaraph = startBlock;\n        }\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n            this.viewer.owner.editorModule.updateWholeListItems(startParagaraph);\n        }\n        while (block) {\n            this.viewer.updateClientAreaForBlock(block, true);\n            if (block instanceof ParagraphWidget) {\n                this.layoutParagraph(block, 0);\n            }\n            else {\n                this.clearTableWidget(block, true, true, true);\n                this.layoutTable(block, 0);\n            }\n            this.viewer.updateClientAreaForBlock(block, false);\n            var isTableHasParaVerticalOrigin = (!isNullOrUndefined(block.nextWidget) && block.nextWidget instanceof TableWidget && block.nextWidget === endBlock && (block.nextWidget.positioning.verticalOrigin === 'Paragraph'));\n            block = block !== endBlock && !isTableHasParaVerticalOrigin ? block.nextWidget : undefined;\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.alignLineElements = function (element, topMargin, bottomMargin, maxDescent, addSubWidth, subWidth, textAlignment, whiteSpaceCount, isLastElement) {\n        if (element.width > 0 && (element instanceof TextElementBox || element instanceof ListTextElementBox)) {\n            var textElement = element instanceof TextElementBox ? element : undefined;\n            //Updates the text to base line offset.\n            var baselineOffset = element instanceof TextElementBox ? textElement.baselineOffset : element.baselineOffset;\n            topMargin += this.maxBaseline - baselineOffset;\n            bottomMargin += maxDescent - (element.height - baselineOffset);\n            //Updates the text to base line offset.\n            if (!isNullOrUndefined(textElement) && textAlignment === 'Justify' && whiteSpaceCount > 0) {\n                //Aligns the text as Justified.\n                var width = textElement.width;\n                var text = textElement.text;\n                if (!addSubWidth) {\n                    text = HelperMethods.trimStart(text); // trim start\n                    addSubWidth = (text.length > 0);\n                }\n                if (addSubWidth) {\n                    var spaceCount = text.length - HelperMethods.removeSpace(text).length;\n                    if (isLastElement) {\n                        spaceCount -= text.length - HelperMethods.trimEnd(text).length;\n                    }\n                    if (whiteSpaceCount < spaceCount) {\n                        width = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text, textElement.characterFormat, textElement.scriptType);\n                        spaceCount = whiteSpaceCount;\n                    }\n                    if (spaceCount > 0) {\n                        textElement.width = width + subWidth * spaceCount;\n                        whiteSpaceCount -= spaceCount;\n                    }\n                }\n            }\n        }\n        else {\n            addSubWidth = true;\n            //Updates the Image/UIElement to base line offset.\n            topMargin += this.maxBaseline - element.height;\n            bottomMargin += maxDescent;\n        }\n        return { 'topMargin': topMargin, 'bottomMargin': bottomMargin, 'addSubWidth': addSubWidth, 'whiteSpaceCount': whiteSpaceCount };\n    };\n    Layout.prototype.updateWidgetToPage = function (viewer, paragraphWidget) {\n        if (paragraphWidget.isInsideTable) {\n            var cellWidget = paragraphWidget.associatedCell;\n            paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n            // if (viewer instanceof PageLayoutViewer) {\n            if (isNullOrUndefined(paragraphWidget.associatedCell) || isNullOrUndefined(paragraphWidget.associatedCell.ownerRow)\n                || isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.rowFormat)) {\n                return;\n            }\n            if (paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'Exactly') {\n                cellWidget.height = HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height);\n            }\n            else {\n                if ([cellWidget].length <= 1 && paragraphWidget.associatedCell.ownerRow.rowFormat.heightType === 'AtLeast') {\n                    cellWidget.height = Math.max(HelperMethods.convertPointToPixel(paragraphWidget.associatedCell.ownerRow.rowFormat.height), this.getCellContentHeight(cellWidget));\n                }\n                else {\n                    cellWidget.height = cellWidget.height + paragraphWidget.height;\n                }\n            }\n            // } else {\n            //     cellWidget.height = cellWidget.height + paragraphWidget.height;\n            // }\n            // cellWidget.childWidgets.push(paragraphWidget);\n            paragraphWidget.containerWidget = cellWidget;\n        }\n        else {\n            if (!paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak || viewer instanceof WebLayoutViewer) {\n                paragraphWidget.height = viewer.clientActiveArea.y - paragraphWidget.y;\n            }\n            //Adds the paragraph widget to the Header Footer/ Body widget.\n            // this.updateWidgetsToBody(paragraphWidget, viewer, paragraphWidget);\n            //For canvas no need to render paragraph widget here. In case of div, need to render paragraph here.\n            // this.render.renderParagraphWidget((paragraphWidget.containerWidget as BodyWidget).page, paragraphWidget);\n        }\n        if (this.isRelayoutFootnote && paragraphWidget.bodyWidget instanceof FootNoteWidget) {\n            if (!paragraphWidget.isInsideTable) {\n                paragraphWidget.containerWidget.height += paragraphWidget.height;\n            }\n            //this.isRelayoutFootnote = false;\n            this.shiftFootnoteChildLocation(paragraphWidget.bodyWidget, this.viewer);\n        }\n        if (paragraphWidget.bodyWidget instanceof HeaderFooterWidget) {\n            if (!paragraphWidget.isInsideTable) {\n                paragraphWidget.containerWidget.height += paragraphWidget.height;\n            }\n            if (this.viewer.owner.enableHeaderAndFooter && paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n                this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n            }\n        }\n        if (viewer instanceof WebLayoutViewer && paragraphWidget.containerWidget instanceof BodyWidget) {\n            paragraphWidget.containerWidget.height += paragraphWidget.height;\n        }\n    };\n    Layout.prototype.shiftFooterChildLocation = function (widget, viewer) {\n        var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n        if (widget.headerFooterType.indexOf('Footer') !== -1) {\n            var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n            var height = HelperMethods.convertPointToPixel(pageHeight - footerDistance);\n            var top_1;\n            if (widget.y + widget.height > height) {\n                top_1 = height - (widget.y + widget.height);\n            }\n            else if (widget.y + widget.height < height) {\n                top_1 = (widget.y + widget.height) - height;\n            }\n            if (!isNullOrUndefined(top_1)) {\n                top_1 = height - (widget.y + widget.height);\n                this.shiftChildLocation(top_1, widget);\n                viewer.clientActiveArea.y += top_1;\n            }\n        }\n    };\n    Layout.prototype.shiftFootnoteChildLocation = function (widget, viewer) {\n        var pageHeight = widget.page.bodyWidgets[0].sectionFormat.pageHeight;\n        var footerDistance = widget.page.bodyWidgets[0].sectionFormat.footerDistance;\n        var bottomMargin = widget.page.bodyWidgets[0].sectionFormat.bottomMargin;\n        var height = HelperMethods.convertPointToPixel(pageHeight - bottomMargin);\n        var top;\n        if (widget.y + widget.height > height) {\n            top = height - (widget.y + widget.height);\n        }\n        else if (widget.y + widget.height < height) {\n            top = (widget.y + widget.height) - height;\n        }\n        if (!isNullOrUndefined(top)) {\n            top = height - (widget.y + widget.height);\n            this.shiftChildLocation(top, widget);\n            viewer.clientActiveArea.y += top;\n        }\n    };\n    Layout.prototype.checkPreviousElement = function (line, index) {\n        var paragraph = line.paragraph;\n        var isSplitByWord = false;\n        var lastTextElement = 0;\n        for (var i = index - 1; i >= 0; i--) {\n            var textElement = line.children[i];\n            if (textElement instanceof TextElementBox && textElement.width > 0) {\n                var text = textElement.text;\n                lastTextElement = i;\n                if (text.length > 0 && (text[text.length - 1] === ' ' || text[text.length - 1] === '-')) {\n                    if (i === index - 1) {\n                        this.addSplittedLineWidget(line, index - 1);\n                        return true;\n                    }\n                    isSplitByWord = true;\n                    break;\n                }\n                else if (text === '\\t' || this.documentHelper.textHelper.isUnicodeText(text, textElement.scriptType)) {\n                    return false;\n                }\n                else if (text.indexOf(' ') >= 0) {\n                    isSplitByWord = true;\n                    var index_1 = text.lastIndexOf(' ') + 1;\n                    //Splits the text element by space.\n                    var splittedElement = new TextElementBox();\n                    splittedElement.text = text.substr(index_1);\n                    splittedElement.characterFormat.copyFormat(textElement.characterFormat);\n                    splittedElement.characterRange = textElement.characterRange;\n                    if (textElement.revisions.length > 0) {\n                        this.updateRevisionForSplittedElement(textElement, splittedElement, index_1 > 0);\n                        splittedElement.isMarkedForRevision = textElement.isMarkedForRevision;\n                    }\n                    textElement.text = text.substr(0, index_1);\n                    this.documentHelper.textHelper.getTextSize(splittedElement, textElement.characterFormat);\n                    textElement.width -= splittedElement.width;\n                    textElement.trimEndWidth = textElement.width;\n                    textElement.height = splittedElement.height;\n                    if (textElement.width === 0) {\n                        line.children.splice(i, 1);\n                        if (!isNullOrUndefined(line.layoutedElements) && line.layoutedElements.length > 0) {\n                            line.layoutedElements.splice(i, 1);\n                        }\n                    }\n                    //Adds the text element to the line\n                    line.children.splice(i + 1, 0, splittedElement);\n                    if (!isNullOrUndefined(line.layoutedElements)) {\n                        line.layoutedElements.splice(i + 1, 0, splittedElement);\n                    }\n                    break;\n                }\n            }\n            else if (!(textElement instanceof ListTextElementBox || textElement instanceof FieldElementBox\n                // to skip field code\n                || textElement instanceof TextElementBox && textElement.width === 0 || textElement instanceof CommentCharacterElementBox || textElement instanceof ContentControl)) {\n                //Handled for inline images/UIelements.\n                lastTextElement = i;\n                isSplitByWord = true;\n                break;\n            }\n        }\n        if (isSplitByWord) {\n            lastTextElement++;\n            if (lastTextElement < line.children.length) {\n                var splitWidth = 0;\n                for (var i = lastTextElement; i < line.children.length; i++) {\n                    splitWidth += line.children[i].width;\n                    this.addSplittedLineWidget(line, i - 1);\n                    i--;\n                }\n                var is2013Justification = paragraph.paragraphFormat.textAlignment === 'Justify' &&\n                    this.documentHelper.compatibilityMode === 'Word2013';\n                if (!is2013Justification) {\n                    this.viewer.updateClientWidth(splitWidth);\n                }\n            }\n        }\n        return isSplitByWord;\n    };\n    Layout.prototype.clearListElementBox = function (paragraph) {\n        if (paragraph.childWidgets.length === 0) {\n            return;\n        }\n        var line = paragraph.childWidgets[0];\n        if (isNullOrUndefined(line.children)) {\n            return;\n        }\n        for (var i = line.children.length - 1; i > 0; i--) {\n            if (line.children[i] instanceof ListTextElementBox) {\n                line.children.splice(i, 1);\n            }\n            else {\n                break;\n            }\n        }\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof ListTextElementBox) {\n                line.children.splice(i, 1);\n                i--;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /**\n * @private\n */\n    Layout.prototype.clearInvalidList = function (list) {\n        if (list) {\n            if (list.abstractListId === -1 && this.documentHelper.abstractLists.indexOf(list.abstractList) !== -1) {\n                this.documentHelper.abstractLists.splice(this.documentHelper.abstractLists.indexOf(list.abstractList), 1);\n            }\n            if (list.listId === -1 && this.documentHelper.lists.indexOf(list) !== -1) {\n                this.documentHelper.lists.splice(this.documentHelper.lists.indexOf(list), 1);\n            }\n        }\n    };\n    Layout.prototype.getListNumber = function (listFormat, isAutoList) {\n        var list = this.documentHelper.getListById(listFormat.listId);\n        var levelNumber = listFormat.listLevelNumber;\n        var listLevel = this.getListLevel(list, listFormat.listLevelNumber);\n        var levelOverride = !isNullOrUndefined(list.levelOverrides) ? list.levelOverrides[levelNumber] : undefined;\n        // If LevelOverride exists and have either override list level or StartAtOverride, then only list numbering will be restarted.\n        if (!isNullOrUndefined(levelOverride) && this.documentHelper.renderedLevelOverrides.indexOf(levelOverride) === -1 && isNullOrUndefined(levelOverride.overrideListLevel)) {\n            //Add List Override style\n            this.documentHelper.renderedLevelOverrides.push(levelOverride);\n            var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n            if (this.documentHelper.renderedLists.containsKey(abstractList)) {\n                var levels = this.documentHelper.renderedLists.get(abstractList);\n                if (levels.containsKey(levelNumber)) {\n                    levels.remove(levelNumber);\n                    this.ClearSubListLevelValues(list, abstractList, levelNumber);\n                }\n            }\n        }\n        if (isNullOrUndefined(isAutoList)) {\n            this.updateListValues(list, levelNumber);\n        }\n        return this.getListText(list, levelNumber, listLevel);\n    };\n    Layout.prototype.ClearSubListLevelValues = function (list, abstractList, levelNumber) {\n        var levels = this.documentHelper.renderedLists.get(abstractList);\n        var levelNumberTemp = levelNumber + 1;\n        while (levelNumberTemp < abstractList.levels.length) {\n            var listLevel = this.getListLevel(list, levelNumberTemp);\n            if (levels.containsKey(levelNumberTemp) && listLevel.restartLevel > levelNumber) {\n                levels.remove(levelNumberTemp);\n            }\n            levelNumberTemp++;\n        }\n    };\n    Layout.prototype.getListStartValue = function (listLevelNumber, list) {\n        var levelOverride = !isNullOrUndefined(list.levelOverrides) ? list.levelOverrides[listLevelNumber] : undefined;\n        if (!isNullOrUndefined(levelOverride) && isNullOrUndefined(levelOverride.overrideListLevel)) {\n            return levelOverride.startAt;\n        }\n        var listLevel = this.getListLevel(list, listLevelNumber);\n        if (isNullOrUndefined(listLevel)) {\n            return 0;\n        }\n        else {\n            return listLevel.startAt;\n        }\n    };\n    Layout.prototype.updateListValues = function (list, listLevelNumber) {\n        var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n        var currentListLevel = this.getListLevel(list, listLevelNumber);\n        if (!this.documentHelper.renderedLists.containsKey(abstractList)) {\n            var startVal = new Dictionary();\n            this.documentHelper.renderedLists.add(abstractList, startVal);\n            var listLevel = this.getListLevel(list, listLevelNumber);\n            for (var i = 0; i <= listLevelNumber; i++) {\n                startVal.add(i, this.getListStartValue(i, list));\n            }\n        }\n        else {\n            var levels = this.documentHelper.renderedLists.get(abstractList);\n            if (levels.containsKey(listLevelNumber)) {\n                var startAt = levels.get(listLevelNumber);\n                levels.set(listLevelNumber, startAt + 1);\n                var levelNumber = listLevelNumber + 1;\n                while (levelNumber < this.documentHelper.getAbstractListById(list.abstractListId).levels.length) {\n                    var listLevel = this.getListLevel(list, levelNumber);\n                    // if (!isNullOrUndefined(listLevel)) {\n                    if (levels.containsKey(levelNumber) && (listLevel.restartLevel > listLevelNumber || currentListLevel.listLevelPattern === \"Bullet\")) {\n                        levels.remove(levelNumber);\n                        // if (document.renderedListLevels.indexOf(listLevel) > -1) {\n                        //     document.renderedListLevels.pop();\n                        // }\n                    }\n                    // }\n                    levelNumber++;\n                }\n            }\n            else {\n                var levelNumber = listLevelNumber;\n                while (!levels.containsKey(levelNumber - 1) && levelNumber > 0) {\n                    var listLevel = this.getListLevel(list, levelNumber - 1);\n                    // if (!isNullOrUndefined(listLevel)) {\n                    levels.add(levelNumber - 1, this.getListStartValue(levelNumber - 1, list));\n                    // if (document.renderedListLevels.indexOf(listLevel) !== -1) {\n                    //     document.renderedListLevels.push(listLevel);\n                    // }\n                    // }\n                    levelNumber--;\n                }\n                var startAt = this.getListStartValue(listLevelNumber, list);\n                levels.add(listLevelNumber, startAt);\n            }\n        }\n    };\n    Layout.prototype.getListText = function (listAdv, listLevelNumber, currentListLevel) {\n        var listText = currentListLevel.numberFormat;\n        if (this.documentHelper.renderedLists.containsKey(this.documentHelper.getAbstractListById(listAdv.abstractListId))) {\n            var levels = this.documentHelper.renderedLists.get(this.documentHelper.getAbstractListById(listAdv.abstractListId));\n            var keys = levels.keys;\n            for (var i = 0; i < keys.length; i++) {\n                var levelNumber = keys[i];\n                var levelKey = '%' + (levelNumber + 1).toString();\n                // if isLegalStyleNumber boolean is true, consider the currentlistlevel for getting the replace text else use the levels from starting.\n                var listLevel = this.getListLevel(listAdv, levelNumber);\n                var pattern = i < listLevelNumber ? listLevel.listLevelPattern !== 'LeadingZero' ? 'Arabic' : listLevel.listLevelPattern : undefined;\n                if (listText.match(levelKey)) {\n                    if (levelNumber > listLevelNumber) {\n                        return '';\n                    }\n                    else if (levels.containsKey(levelNumber) && !isNullOrUndefined(listLevel)) {\n                        listText = listText.replace(levelKey, this.getListTextListLevel(listLevel, levels.get(levelNumber), currentListLevel.isLegalStyleNumbering ? pattern : undefined));\n                    }\n                    else {\n                        listText = listText.replace(levelKey, '0');\n                    }\n                }\n            }\n        }\n        return listText;\n    };\n    Layout.prototype.getAsLetter = function (number) {\n        // if (number <= 0) {\n        //     return '';\n        // }\n        var quotient = number / 26;\n        var remainder = number % 26;\n        if (remainder === 0) {\n            //If number denotes the factor of 26, then reduce quotient by 1 and set remainder as 26.\n            remainder = 26;\n            quotient--;\n        }\n        //Index of A char in the ASCII table.     \n        var letter = String.fromCharCode(65 - 1 + remainder);\n        var listValue = '';\n        while (quotient >= 0) {\n            listValue = listValue + letter.toString();\n            quotient--;\n        }\n        return listValue;\n    };\n    Layout.prototype.getListTextListLevel = function (listLevel, listValue, customPattern) {\n        switch (!isNullOrUndefined(customPattern) ? customPattern : listLevel.listLevelPattern) {\n            case 'UpRoman':\n                return this.getAsRoman(listValue).toUpperCase();\n            case 'LowRoman':\n                return this.getAsRoman(listValue).toLowerCase();\n            case 'UpLetter':\n                return this.getAsLetter(listValue).toUpperCase();\n            case 'LowLetter':\n                return this.getAsLetter(listValue).toLowerCase();\n            case 'Arabic':\n                return (listValue).toString();\n            case 'LeadingZero':\n                return this.getAsLeadingZero(listValue);\n            case 'Number':\n                return (listValue).toString();\n            case 'OrdinalText':\n                if (listLevel.characterFormat.localeIdAscii === 3082 || this.documentHelper.characterFormat.localeIdAscii === 3082) {\n                    return this.getOrdinalTextInSpanish(true, listValue.toString()).toUpperCase();\n                }\n                else {\n                    return this.getOrdinalText(true, listValue.toString()).toUpperCase();\n                }\n            case 'Ordinal':\n                return this.getAsOrdinal(listValue, listLevel.characterFormat).toString();\n            case 'FarEast':\n                return (listValue).toString();\n            case 'Special':\n                return (listValue).toString();\n            default:\n                return '';\n        }\n    };\n    Layout.prototype.getFootEndNote = function (numberFormat, value) {\n        switch (numberFormat) {\n            case 'UpperCaseRoman':\n                return this.getAsRoman(value).toUpperCase();\n            case 'LowerCaseRoman':\n                return this.getAsRoman(value).toLowerCase();\n            case 'UpperCaseLetter':\n                return this.getAsLetter(value).toUpperCase();\n            case 'LowerCaseLetter':\n                return this.getAsLetter(value).toLowerCase();\n            default:\n                return (value).toString();\n        }\n    };\n    Layout.prototype.generateNumber = function (number, magnitude, letter) {\n        var numberstring = '';\n        while (number >= magnitude) {\n            number -= magnitude;\n            numberstring += letter;\n            this.value = number;\n        }\n        return numberstring.toString();\n    };\n    Layout.prototype.getAsLeadingZero = function (listValue) {\n        if (listValue < 10) {\n            return '0' + listValue.toString();\n        }\n        else {\n            return listValue.toString();\n        }\n    };\n    Layout.prototype.getAsRoman = function (number) {\n        var retval = '';\n        this.value = number;\n        retval += this.generateNumber(this.value, 1000, 'M');\n        retval += this.generateNumber(this.value, 900, 'CM');\n        retval += this.generateNumber(this.value, 500, 'D');\n        retval += this.generateNumber(this.value, 400, 'CD');\n        retval += this.generateNumber(this.value, 100, 'C');\n        retval += this.generateNumber(this.value, 90, 'XC');\n        retval += this.generateNumber(this.value, 50, 'L');\n        retval += this.generateNumber(this.value, 40, 'XL');\n        retval += this.generateNumber(this.value, 10, 'X');\n        retval += this.generateNumber(this.value, 9, 'IX');\n        retval += this.generateNumber(this.value, 5, 'V');\n        retval += this.generateNumber(this.value, 4, 'IV');\n        retval += this.generateNumber(this.value, 1, 'I');\n        return retval.toString();\n    };\n    Layout.prototype.getOrdinalText = function (ordinalString, text) {\n        //Check whether the text contain alphabet or not\n        if (ordinalString) {\n            text = text.trim();\n            for (var i = 0; i < text.length; i++) {\n                if (/[a-zA-Z]/.test(text.charAt(i))) {\n                    ordinalString = false;\n                    break;\n                }\n            }\n            //Get ordinal string\n            if (ordinalString) {\n                text = this.numberToWords(parseInt(text), false);\n            }\n        }\n        return text;\n    };\n    Layout.prototype.numberToWords = function (number, isCardText) {\n        if (number === 0)\n            return \"zero\";\n        var words = '';\n        if (Math.floor(number / 1000000) > 0) {\n            words += this.numberToWords(Math.floor(number / 1000000), isCardText) + \" million \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 1000000;\n        }\n        if (Math.floor(number / 1000) > 0) {\n            words += this.numberToWords(Math.floor(number / 1000), isCardText) + \" thousand \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 1000;\n        }\n        if (Math.floor(number / 100) > 0) {\n            words += this.numberToWords(Math.floor(number / 100), isCardText) + \" hundred \";\n            if (!isCardText && number % 10 === 0)\n                words += \"th \";\n            number %= 100;\n        }\n        if (number > 0) {\n            if (words !== '' && isCardText)\n                words += \"and \";\n            var unitsValue = null;\n            if (isCardText) {\n                unitsValue = [\n                    \"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\",\n                    \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"\n                ];\n            }\n            else {\n                unitsValue = [\n                    \"\", \"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\",\n                    \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\",\n                    \"seventeenth\", \"eighteenth\", \"nineteenth\"\n                ];\n            }\n            var tensValue = [\n                \"\", \"ten\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\",\n                \"ninety\"\n            ];\n            var tensValue_ith = [\n                \"\", \"tenth\", \"twentieth\", \"thirtieth\", \"fortieth\", \"fiftieth\", \"sixtieth\", \"seventieth\",\n                \"eightieth\", \"ninetieth\"\n            ];\n            if (number < 20)\n                words += unitsValue[number];\n            else {\n                if (isCardText || number % 10 > 0)\n                    words += tensValue[Math.floor(number / 10)];\n                if (number % 10 === 0 && !isCardText)\n                    words += tensValue_ith[Math.floor(number / 10)];\n                else if (number % 10 > 0)\n                    words += \"-\" + unitsValue[number % 10];\n            }\n        }\n        return words;\n    };\n    Layout.prototype.getOrdinalTextInSpanish = function (ordinalString, text) {\n        //Check whether the text contain alphabet or not\n        if (ordinalString) {\n            text = text.trim();\n            for (var i = 0; i < text.length; i++) {\n                if (/[a-zA-Z]/.test(text.charAt(i))) {\n                    ordinalString = false;\n                    break;\n                }\n            }\n            //Get ordinal string\n            if (ordinalString) {\n                text = this.numberToSpanishWords(parseInt(text), false);\n            }\n        }\n        return text;\n    };\n    Layout.prototype.numberToSpanishWords = function (number, isCardText) {\n        if (number === 0 && isCardText)\n            return \"cero\";\n        var words = '';\n        if (Math.floor(number / 1000) > 0 && number <= 10000) {\n            var thousandCardinalValue = [\n                \"\", \"mil\", \"dos mil\", \"tres mil\", \"cuatro mil\", \"cinco mil\", \"seis mil\", \"siete mil\", \"ocho mil\",\n                \"nueve mil\", \"diez mil\"\n            ];\n            var thousandOrdinalValue = [\n                \"\", \"milésimo\", \"dosmilésimo\", \"tresmilésimo\", \"cuatromilésimo\", \"cincomilésimo\", \"seismilésimo\", \"sietemilésimo\",\n                \"ochomilésimo\", \"nuevemilésimo\", \"diezmilésimo\"\n            ];\n            if (isCardText)\n                words += thousandCardinalValue[Math.floor(number / 1000)];\n            else\n                words += thousandOrdinalValue[Math.floor(number / 1000)];\n            number %= 1000;\n        }\n        if (Math.floor(number / 100) > 0) {\n            if (words !== '')\n                words += \" \";\n            var cardinalHundredsValue = [\n                \"\", \"ciento\", \"doscientos\", \"trescientos\", \"cuatrocientos\", \"quinientos\", \"seiscientos\", \"setecientos\",\n                \"ochocientos\", \"novecientos\"\n            ];\n            var ordinalHundredsValue = [\n                \"\", \"centésimo\", \"ducentésimo\", \"tricentésimo\", \"cuadringentésimo\", \"quingentésimo\", \"sexcentésimo\",\n                \"septingentésimo\", \"octingentésimo\", \"noningentésimo\"\n            ];\n            if (isCardText)\n                words += cardinalHundredsValue[Math.floor(number / 100)];\n            else\n                words += ordinalHundredsValue[Math.floor(number / 100)];\n            number %= 100;\n        }\n        if (number > 0 && number < 100) {\n            if (words !== '')\n                words += \" \";\n            var unitsValue = null;\n            if (isCardText) {\n                unitsValue = [\n                    \"\", \"uno\", \"dos\", \"tres\", \"cuatro\", \"cinco\", \"seis\", \"siete\", \"ocho\", \"nueve\", \"diez\", \"once\",\n                    \"doce\", \"trece\", \"catorce\", \"quince\", \"dieciséis\", \"diecisiete\", \"dieciocho\", \"diecinueve\"\n                ];\n            }\n            else {\n                unitsValue = [\n                    \"\", \"primero\", \"segundo\", \"tercero\", \"cuarto\", \"quinto\", \"sexto\", \"séptimo\", \"octavo\",\n                    \"noveno\", \"décimo\", \"undécimo\", \"duodécimo\", \"decimotercero\", \"decimocuarto\", \"decimoquinto\",\n                    \"decimosexto\", \"decimoséptimo\", \"decimoctavo\", \"decimonoveno\"\n                ];\n            }\n            var tensValue = [\n                \"\", \"diez\", \"veinte\", \"treinta\", \"cuarenta\", \"cincuenta\", \"sesenta\", \"setenta\", \"ochenta\",\n                \"noventa\"\n            ];\n            var tensValue_Ordinal = [\n                \"\", \"décimo\", \"vigésimo\", \"trigésimo\", \"cuadragésimo\", \"quincuagésimo\", \"sexagésimo\", \"septuagésimo\",\n                \"octogésimo\", \"nonagésimo\"\n            ];\n            var cardNumberFrom21to29Value = [\n                \"\", \"veintiuno\", \"veintidós\", \"veintitrés\", \"veinticuatro\", \"veinticinco\", \"veintiséis\", \"veintisiete\",\n                \"veintiocho\", \"veintinueve\"\n            ];\n            if (number < 20)\n                words += unitsValue[number];\n            else if (number > 20 && number < 30 && isCardText) {\n                words += cardNumberFrom21to29Value[number % 10];\n            }\n            else {\n                if (isCardText && number % 10 > 0)\n                    words += tensValue[Math.floor(number / 10)];\n                else if (isCardText && number % 10 === 0)\n                    words += tensValue[Math.floor(number / 10)];\n                if (number % 10 > 0 && !isCardText)\n                    words += tensValue_Ordinal[Math.floor(number / 10)];\n                if (number % 10 === 0 && !isCardText)\n                    words += tensValue_Ordinal[Math.floor(number / 10)];\n                else if (number % 10 > 0)\n                    if (isCardText)\n                        words += \" y \" + unitsValue[number % 10];\n                    else\n                        words += \" \" + unitsValue[number % 10];\n            }\n        }\n        return words;\n    };\n    Layout.prototype.getAsOrdinal = function (number, characterFormat) {\n        switch (characterFormat.localeIdAscii) {\n            case 1069:\n            case 8218:\n            case 5146:\n            case 4122:\n            case 1050:\n            case 1029:\n            case 1061:\n            case 1035:\n            case 3079:\n            case 1031:\n            case 5127:\n            case 4103:\n            case 2055:\n            case 1038:\n            case 1060:\n            case 1055:\n            case 1044:\n            case 2068:\n            case 1045:\n            case 6170:\n            case 2074:\n                //Returns ordinal in Czech\n                return number.toString() + \".\";\n            case 2060:\n            case 11276:\n            case 3084:\n            case 9228:\n            case 12300:\n            case 1036:\n            case 15372:\n            case 5132:\n            case 13324:\n            case 6156:\n            case 14348:\n            case 8204:\n            case 10252:\n            case 4108:\n                //Returns Ordinal in French\n                if (number == 1)\n                    return number.toString() + \"er\";\n                else\n                    return number.toString() + \"e\";\n            case 2067:\n            case 1043:\n                //Returns Ordinal in Dutch\n                return number.toString() + \"e\";\n            case 1032:\n                //Returns Ordinal in Greek \n                return number.toString() + \"o\";\n            case 1040:\n            case 2064:\n                //Returns Ordinal in Italian\n                return number.toString() + String.fromCharCode(176);\n            case 5130:\n            case 7178:\n            case 12298:\n            case 17418:\n            case 4106:\n            case 1046:\n            case 2070:\n            case 11274:\n            case 16394:\n            case 13322:\n            case 9226:\n            case 18442:\n            case 2058:\n            case 19466:\n            case 6154:\n            case 15370:\n            case 10250:\n            case 20490:\n            case 3082:\n            case 1034:\n            case 21514:\n            case 14346:\n            case 8202:\n                //Returns Ordinal in Spanish\n                return number.toString() + String.fromCharCode(186);\n            case 1049:\n            case 2073:\n                //Returns Ordinal in Russian\n                return number.toString() + \"-\" + String.fromCharCode(1081);\n            case 2077:\n            case 1053:\n                //Returns Ordinal in Swedish\n                return this.getOrdinalInSwedish(number);\n            case 1027:\n                //Returns Ordinal in Catalan\n                return this.getOrdinalInCatalan(number);\n            case 1030:\n                //Returns Ordinal in Danish\n                return this.getOrdinalInDanish(number);\n            default:\n                //Returns Ordinal in English (Default)\n                return this.getOrdinalInEnglish(number);\n        }\n    };\n    Layout.prototype.getOrdinalInEnglish = function (number) {\n        switch (number % 100) {\n            case 11:\n            case 12:\n            case 13:\n                return number.toString() + \"th\";\n        }\n        switch (number % 10) {\n            case 1:\n                return number.toString() + \"st\";\n            case 2:\n                return number.toString() + \"nd\";\n            case 3:\n                return number.toString() + \"rd\";\n            default:\n                return number.toString() + \"th\";\n        }\n    };\n    Layout.prototype.getOrdinalInSwedish = function (number) {\n        if (number == 11 || number == 12) {\n            return number.toString() + \":e\";\n        }\n        else if ((number % 10) == 1 || (number % 10) == 2) {\n            return number.toString() + \":a\";\n        }\n        else\n            return number.toString() + \":e\";\n    };\n    Layout.prototype.getOrdinalInCatalan = function (number) {\n        switch (number) {\n            case 1:\n                return number.toString() + \".\";\n            case 2:\n                return number.toString() + \"n\";\n            case 3:\n                return number.toString() + \"r\";\n            case 4:\n                return number.toString() + \"t\";\n            case 14:\n                return number.toString() + String.fromCharCode(232) + \"h\";\n            default:\n                return number.toString() + String.fromCharCode(232);\n        }\n    };\n    Layout.prototype.getOrdinalInDanish = function (number) {\n        if (number == 0)\n            return number.toString() + \"te\";\n        switch (number % 100) {\n            case 0:\n                return number.toString() + \"ende\";\n            case 1:\n                return number.toString() + \"ste\";\n            case 2:\n                return number.toString() + \"nden\";\n            case 3:\n                return number.toString() + \"dje\";\n            case 4:\n                return number.toString() + \"rde\";\n            case 5:\n            case 6:\n            case 11:\n            case 12:\n            case 30:\n                return number.toString() + \"te\";\n            default:\n                return number.toString() + \"nde\";\n        }\n    };\n    Layout.prototype.getListLevel = function (list, listLevelNumber) {\n        if (!isNullOrUndefined(list)) {\n            var abstractList = this.documentHelper.getAbstractListById(list.abstractListId);\n            if (!isNullOrUndefined(list) && abstractList.levels.length <= listLevelNumber\n                && listLevelNumber >= 0 && listLevelNumber < 9) {\n                this.addListLevels(abstractList);\n            }\n            var levelOverrideAdv = undefined;\n            var level = false;\n            level = (!isNullOrUndefined(list.levelOverrides))\n                && !isNullOrUndefined((levelOverrideAdv = this.getOverrideListLevel(list.levelOverrides, listLevelNumber)))\n                && (!isNullOrUndefined(levelOverrideAdv.overrideListLevel));\n            if (level) {\n                if (isNullOrUndefined(levelOverrideAdv.startAt)) {\n                    levelOverrideAdv.overrideListLevel.startAt = abstractList.levels[listLevelNumber].startAt;\n                }\n                return levelOverrideAdv.overrideListLevel;\n            }\n            else if (!isNullOrUndefined(abstractList) && listLevelNumber >= 0 && listLevelNumber < abstractList.levels.length) {\n                return abstractList.levels[listLevelNumber];\n            }\n        }\n        return undefined;\n    };\n    Layout.prototype.getOverrideListLevel = function (levelOverrides, listLevelNumber) {\n        for (var i = 0; i < levelOverrides.length; i++) {\n            if (levelOverrides[i].levelNumber == listLevelNumber)\n                return levelOverrides[i];\n        }\n        return undefined;\n    };\n    Layout.prototype.getTabWidth = function (paragraph, viewer, index, lineWidget, element) {\n        var fPosition = 0;\n        var isCustomTab = false;\n        var tabs = paragraph.paragraphFormat.getUpdatedTabs();\n        var isList = false;\n        var sectionFormat = paragraph.bodyWidget.sectionFormat;\n        var leftMargin = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n        var tabBeforeLeftIndent = false;\n        if (!isNullOrUndefined(paragraph.paragraphFormat.listFormat.listLevel) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat)) {\n            var listFormat = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat;\n            if (paragraph.paragraphFormat.leftIndent !== listFormat.leftIndent) {\n                isList = true;\n            }\n        }\n        var clientWidth = 0;\n        var clientActiveX = viewer.clientActiveArea.x;\n        var firstLineIndent = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n        var leftIndent = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent);\n        if (!isNullOrUndefined(element) && lineWidget.isFirstLine()) {\n            clientWidth = this.viewer.clientArea.x + firstLineIndent;\n            if (isList) {\n                clientActiveX = clientActiveX + firstLineIndent;\n            }\n        }\n        else {\n            clientWidth = this.viewer.clientArea.x;\n        }\n        if (clientActiveX < clientWidth && (this.documentHelper.compatibilityMode !== 'Word2003' || tabs.length === 0)) {\n            return viewer.clientArea.x - viewer.clientActiveArea.x;\n        }\n        var position = viewer.clientActiveArea.x -\n            (viewer.clientArea.x - HelperMethods.convertPointToPixel(paragraph.paragraphFormat.leftIndent));\n        for (var i = 0; i < tabs.length; i++) {\n            var tabStop = tabs[i];\n            var tabStopPosition = HelperMethods.convertPointToPixel(tabStop.position);\n            if (tabStopPosition < leftIndent) {\n                if (parseFloat(position.toFixed(2)) < parseFloat(tabStopPosition.toFixed(2))) {\n                    tabBeforeLeftIndent = true;\n                }\n                else {\n                    tabBeforeLeftIndent = false;\n                }\n            }\n        }\n        if (lineWidget.isFirstLine() && leftIndent > 0 && firstLineIndent < 0\n            && (element instanceof ListTextElementBox || !tabBeforeLeftIndent)) {\n            if ((viewer.clientArea.x - viewer.clientActiveArea.x) > 0) {\n                return viewer.clientArea.x - viewer.clientActiveArea.x;\n            }\n            else if (tabs.length === 0 && paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listLevel) {\n                tabs = paragraph.paragraphFormat.listFormat.listLevel.paragraphFormat.tabs;\n            }\n        }\n        // Calculates tabwidth based on pageleftmargin and defaulttabwidth property\n        var defaultTabWidth = HelperMethods.convertPointToPixel(this.documentHelper.defaultTabWidth);\n        if (tabs.length === 0 && (position > 0 && defaultTabWidth > Math.round(position) && isList ||\n            defaultTabWidth === this.defaultTabWidthPixel && defaultTabWidth > Math.round(position))) {\n            return defaultTabWidth - position;\n        }\n        else {\n            var breaked = false;\n            if (tabs.length > 0) {\n                for (var i = tabs.length - 1; i > -1; i--) {\n                    var tabStop = tabs[i];\n                    var tabPosition = HelperMethods.convertPointToPixel(tabStop.position);\n                    if (!(parseFloat(tabPosition.toFixed(2)) > parseFloat(position.toFixed(2)))) {\n                        if (i > 0 && (HelperMethods.convertPointToPixel(tabs[i - 1].position) > parseFloat(position.toFixed(2)))) {\n                            continue;\n                        }\n                        if (i != tabs.length - 1) {\n                            var tabInfo = this.getJustificationTabWidth(tabs[i + 1], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n                            defaultTabWidth = tabInfo.defaultTabWidth;\n                            fPosition = tabInfo.fPosition;\n                            position = tabInfo.position;\n                            isCustomTab = true;\n                        }\n                        breaked = true;\n                        break;\n                    }\n                }\n                if (!breaked) {\n                    var tabJustification = this.getJustificationTabWidth(tabs[0], element, lineWidget, paragraph, defaultTabWidth, position, fPosition);\n                    defaultTabWidth = tabJustification.defaultTabWidth;\n                    fPosition = tabJustification.fPosition;\n                    position = tabJustification.position;\n                    isCustomTab = true;\n                }\n            }\n            if (!isCustomTab) {\n                var diff = parseFloat(((position * 100) % (defaultTabWidth * 100) / 100).toFixed(2));\n                var cnt = (position - diff) / defaultTabWidth;\n                fPosition = (cnt + 1) * defaultTabWidth;\n            }\n            if (parseFloat(fPosition.toFixed(1)) === parseFloat(position.toFixed(1))) {\n                return defaultTabWidth;\n            }\n            return (fPosition - position) > 0 ? fPosition - position : defaultTabWidth;\n        }\n    };\n    Layout.prototype.getJustificationTabWidth = function (tab, element, lineWidget, paragraph, defaultTabWidth, position, fPosition) {\n        var elementWidth = element ? this.documentHelper.textHelper.getTextSize(element, element.characterFormat) : 0;\n        if (tab.tabJustification === 'Left' || tab.tabJustification === 'List') {\n            fPosition = HelperMethods.convertPointToPixel(tab.position);\n            if (element instanceof TabElementBox) {\n                element.tabLeader = tab.tabLeader;\n                element.tabText = '';\n            }\n        }\n        else {\n            var tabWidth = HelperMethods.convertPointToPixel(tab.position) - position;\n            var width = this.getRightTabWidth(element.indexInOwner + 1, lineWidget, paragraph);\n            if (width < tabWidth && tab.tabJustification != 'Decimal') {\n                if (tab.tabJustification === 'Right') {\n                    defaultTabWidth = tabWidth - width;\n                    var rightIndent = HelperMethods.convertPointToPixel(paragraph.rightIndent);\n                    var areaWidth = this.viewer.clientActiveArea.width + rightIndent - defaultTabWidth;\n                    this.viewer.clientActiveArea.width += rightIndent;\n                    if (areaWidth < 0) {\n                        defaultTabWidth += areaWidth - width;\n                    }\n                    else if (width > areaWidth) {\n                        defaultTabWidth -= width - areaWidth;\n                    }\n                }\n                else {\n                    defaultTabWidth = tabWidth - width / 2;\n                }\n            }\n            else if (tab.tabJustification === 'Center' && (width / 2) < tabWidth) {\n                defaultTabWidth = tabWidth - width / 2;\n            }\n            else if (tab.tabJustification === 'Decimal') {\n                if (!isNullOrUndefined(element.nextElement) && element.nextElement instanceof TextElementBox) {\n                    var nextElement = element.nextElement;\n                    if (nextElement.text.indexOf(\".\") != -1) {\n                        var index = nextElement.text.indexOf(\".\");\n                        var text = nextElement.text.substring(0, index);\n                        var textWidth = this.documentHelper.textHelper.getWidth(text, nextElement.characterFormat, nextElement.scriptType);\n                        defaultTabWidth = tabWidth - textWidth;\n                    }\n                    else if (width < tabWidth) {\n                        defaultTabWidth = tabWidth - width;\n                    }\n                    else {\n                        defaultTabWidth = tabWidth;\n                    }\n                }\n                else {\n                    defaultTabWidth = tabWidth;\n                }\n            }\n            else {\n                defaultTabWidth = tab.tabJustification === 'Right' ? 0 : elementWidth;\n            }\n            fPosition = position;\n            if (element instanceof TabElementBox) {\n                element.tabLeader = tab.tabLeader;\n                element.tabText = '';\n            }\n        }\n        return {\n            defaultTabWidth: defaultTabWidth,\n            fPosition: fPosition,\n            position: position\n        };\n    };\n    Layout.prototype.getRightTabWidth = function (index, lineWidget, paragraph) {\n        var width = 0;\n        var isFieldCode = false;\n        var elementBox = lineWidget.children[index];\n        while (elementBox) {\n            if ((elementBox instanceof FieldElementBox) || (elementBox instanceof BookmarkElementBox) || isFieldCode) {\n                if (elementBox instanceof FieldElementBox) {\n                    if (elementBox.fieldType === 0) {\n                        isFieldCode = true;\n                    }\n                    else if (elementBox.fieldType === 2) {\n                        isFieldCode = false;\n                    }\n                }\n                elementBox.width = 0;\n            }\n            else {\n                if (elementBox instanceof FieldTextElementBox && !this.isTocField(elementBox.fieldBegin)) {\n                    var text = this.documentHelper.getFieldResult(elementBox.fieldBegin, elementBox.paragraph.bodyWidget.page);\n                    if (text !== '') {\n                        elementBox.text = text;\n                    }\n                }\n                if (elementBox instanceof TextElementBox) {\n                    this.documentHelper.textHelper.getTextSize(elementBox, elementBox.characterFormat);\n                }\n            }\n            if (elementBox instanceof TextElementBox && elementBox.text === '\\t') {\n                return width;\n            }\n            else {\n                width = width + elementBox.width;\n            }\n            elementBox = elementBox.nextNode;\n        }\n        return width;\n    };\n    Layout.prototype.getSplitIndexByWord = function (clientActiveWidth, text, width, characterFormat, scriptType) {\n        var index = 0;\n        var length = text.length;\n        while (index < length) {\n            var nextIndex = this.getTextIndexAfterSpace(text, index);\n            if (nextIndex === 0 || nextIndex === length) {\n                nextIndex = length - 1;\n            }\n            var splitWidth = width;\n            if ((nextIndex < length - 1 || (nextIndex === length - 1 && text[nextIndex - 1] === ' ')) && index !== nextIndex) {\n                splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.slice(0, nextIndex), characterFormat, scriptType);\n            }\n            if (splitWidth <= clientActiveWidth) {\n                index = nextIndex;\n            }\n            else {\n                if (index === 0 && text[0] === ' ') {\n                    index = this.getTextIndexAfterSpace(text, 0);\n                }\n                break;\n            }\n        }\n        return index;\n    };\n    Layout.prototype.getTextSplitIndexByCharacter = function (totalClientWidth, clientActiveAreaWidth, text, width, characterFormat, scriptType) {\n        var length = text.length;\n        for (var i = 0; i < length; i++) {\n            var splitWidth = width;\n            if (i + 1 < length) {\n                splitWidth = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(text.substring(0, i + 1), characterFormat, scriptType);\n            }\n            if (splitWidth > clientActiveAreaWidth) {\n                if (i === 0 && splitWidth > totalClientWidth) {\n                    //Handle for cell/section having client width less than a character's width.\n                    return (length > 1 && text[1] === ' ') ? this.getTextIndexAfterSpace(text, 1) : 1;\n                }\n                else if (text[i] === ' ') {\n                    // If the character is space, then split the text from next character.\n                    return this.getTextIndexAfterSpace(text, i);\n                }\n                return i;\n            }\n        }\n        return 0;\n    };\n    Layout.prototype.getSubWidth = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n        var width = 0;\n        var trimSpace = true;\n        var lineText = '';\n        var trimmedSpaceWidth = 0;\n        var isBidi = lineWidget.paragraph.paragraphFormat.bidi;\n        if (this.wrapPosition.length > 0) {\n            var subWidths = this.getSubWidthBasedOnTextWrap(lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd);\n            if (subWidths.length > 0) {\n                return subWidths;\n            }\n        }\n        var renderElementBox = lineWidget.renderedElements;\n        for (var i = renderElementBox.length - 1; i >= 0; i--) {\n            var element = renderElementBox[i];\n            if (element.width > 0 && element instanceof TextElementBox) {\n                var elementText = element.text;\n                lineText = elementText + lineText;\n                if (justify && isBidi) {\n                    if (elementText === ' ' && i - 1 >= 0 && renderElementBox[i - 1].text === ' ') {\n                        trimSpace = true;\n                    }\n                    else {\n                        trimSpace = false;\n                    }\n                }\n                if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n                    if (HelperMethods.endsWith(elementText)) {\n                        var widthExcludeSpace = this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, element.characterFormat, element.scriptType);\n                        width += widthExcludeSpace;\n                        // Trimmed space width can be found by subtracting the actual width and width exclude end space.\n                        trimmedSpaceWidth += element.width - widthExcludeSpace;\n                    }\n                    else {\n                        width += element.width;\n                    }\n                    trimSpace = false;\n                }\n                else if (!trimSpace) {\n                    width += element.width;\n                }\n                else {\n                    ////Add the width of the textelement which contains space alone and present at end of the line.\n                    trimmedSpaceWidth += element.width;\n                }\n            }\n            else {\n                lineText = 'a' + lineText;\n                trimSpace = false;\n                if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n                    continue;\n                }\n                width += element.width;\n            }\n            if (!justify) {\n                width = Math.round(width);\n            }\n            else {\n                width = width;\n            }\n        }\n        var totalSpaceCount = lineText.length - HelperMethods.removeSpace(lineText).length;\n        lineText = lineText.trim();\n        spaceCount = lineText.length - HelperMethods.removeSpace(lineText).length;\n        var subWidth = (this.viewer.clientArea.width - firstLineIndent - width);\n        var totalSubWidth = (this.viewer.clientArea.width - firstLineIndent - (width + trimmedSpaceWidth));\n        if (isBidi && justify) {\n            if (totalSubWidth < 0) {\n                trimmedSpaceWidth = -trimmedSpaceWidth;\n            }\n            else {\n                subWidth = totalSubWidth;\n            }\n        }\n        if ((subWidth <= 0 && !this.is2013Justification) || (spaceCount === 0 && justify && !isBidi)) {\n            spaceCount = 0;\n            subWidth = 0;\n        }\n        else if (justify) {\n            // For justify alignment, element width will be updated based space count value.\n            // So when the element is paragraph end, need to set space count to zero.\n            if (!isParagraphEnd && spaceCount > 0 || (isParagraphEnd && this.is2013Justification && spaceCount > 0)) {\n                subWidth = subWidth / spaceCount;\n            }\n            else {\n                spaceCount = 0;\n            }\n        }\n        ////Generally, trailing space of line should get trimmed, if alignment type is Right or Left.\n        ////But, if right-to-left rendering is enabled and it is last line of paragraph than the trailing space should be preserved.\n        ////So, subtracted the trimmedSpaceWidth from subWidth.\n        else if (trimmedSpaceWidth > 0 && isBidi && isParagraphEnd) {\n            subWidth -= trimmedSpaceWidth;\n        }\n        // So set sub width to zero to layout the element in left alignment\n        // Need to remove is once after implementing subwidth update separatly\n        return [{ 'trimmedSpaceWidth': trimmedSpaceWidth, 'subWidth': subWidth, 'spaceCount': spaceCount, 'totalSpaceCount': totalSpaceCount }];\n    };\n    Layout.prototype.getSubWidthBasedOnTextWrap = function (lineWidget, justify, spaceCount, firstLineIndent, isParagraphEnd) {\n        var subWidths = [];\n        var width = 0;\n        var lineContent = '';\n        var wrapIndex = this.wrapPosition.length - 1;\n        var trimSpace = true;\n        for (var z = lineWidget.children.length - 1; z >= 0; z--) {\n            var elementBox = lineWidget.children[z];\n            if (elementBox.width > 0 && elementBox instanceof TextElementBox) {\n                var elementText = elementBox.text;\n                lineContent = elementText + lineContent;\n                if (trimSpace && (elementText.trim() !== '' || elementText === '\\t')) {\n                    if (HelperMethods.endsWith(elementText)) {\n                        width += this.documentHelper.textHelper.measureTextExcludingSpaceAtEnd(elementText, elementBox.characterFormat, elementBox.scriptType);\n                    }\n                    else {\n                        width += elementBox.width;\n                    }\n                    trimSpace = false;\n                }\n                else if (!trimSpace) {\n                    width += elementBox.width;\n                }\n            }\n            else {\n                lineContent = 'a' + lineContent;\n                trimSpace = false;\n                if (!(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n                    width += elementBox.width;\n                }\n            }\n            if ((elementBox.padding.left > 0 || z === 0) && (wrapIndex >= 0)) {\n                var wrapPosition = this.wrapPosition[wrapIndex--];\n                while (wrapPosition.width <= 0 && (wrapIndex >= 0)) {\n                    wrapPosition = this.wrapPosition[wrapIndex--];\n                }\n                var info = this.getSubWidthInfo(lineWidget, wrapPosition.width, width, lineContent, spaceCount, justify, isParagraphEnd);\n                if (!isNullOrUndefined(info)) {\n                    width = 0;\n                    lineContent = '';\n                    subWidths.unshift(info);\n                }\n            }\n        }\n        return subWidths;\n    };\n    /* eslint-disable  */\n    Layout.prototype.isWordFittedByJustification = function (element, nextWordWidth) {\n        var line = element.line;\n        var paragraph = line.paragraph;\n        var paraFormat = paragraph.paragraphFormat;\n        var textAlignment = paraFormat.textAlignment;\n        var isParagraphEnd = line.isLastLine();\n        var firstLineIndent = 0;\n        if (line.isFirstLine()) {\n            firstLineIndent = HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        var availableLineWidth = this.viewer.clientActiveArea.width;\n        if (nextWordWidth != 0 && availableLineWidth >= nextWordWidth / 2) {\n            var whiteSpaceCount = 0;\n            var widthInfo = void 0;\n            var totalSpaceCount = 0;\n            if (textAlignment !== 'Left' && this.viewer.textWrap && (!(textAlignment === 'Justify' && isParagraphEnd)\n                || (textAlignment === 'Justify' && paraFormat.bidi) || (this.is2013Justification && isParagraphEnd))) {\n                widthInfo = this.getSubWidth(line, textAlignment === 'Justify', whiteSpaceCount, firstLineIndent, isParagraphEnd);\n                whiteSpaceCount = widthInfo[0].spaceCount;\n                totalSpaceCount = widthInfo[0].totalSpaceCount;\n            }\n            if (!isNullOrUndefined(widthInfo) && widthInfo.length == 1 && availableLineWidth > 0\n                && textAlignment === 'Justify' && this.documentHelper.compatibilityMode === 'Word2013' && !this.is2013Justification\n                && paraFormat.rightIndent === 0 && paraFormat.leftIndent === 0) {\n                var effectiveWidth = 0;\n                var totalSpaceWidth = this.getTotalSpaceWidth(line, totalSpaceCount);\n                var normalWidth = totalSpaceWidth / totalSpaceCount;\n                var justifyWidth = (availableLineWidth + totalSpaceWidth) / totalSpaceCount;\n                var diffFactor = ((justifyWidth - normalWidth) / normalWidth) * 100;\n                if (diffFactor <= 33) {\n                    effectiveWidth = totalSpaceWidth / 8;\n                }\n                else {\n                    effectiveWidth = totalSpaceWidth / 4;\n                }\n                if (availableLineWidth + effectiveWidth >= nextWordWidth) {\n                    this.viewer.clientActiveArea.x -= effectiveWidth;\n                    this.viewer.clientActiveArea.width += effectiveWidth;\n                    this.is2013Justification = true;\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the total space width in line widget.\n     * @param {LineWidget} lineWidget - the line widget\n     * @param {number} count - the space count to be considered.\n     * @returns {number} the total space width.\n     */\n    Layout.prototype.getTotalSpaceWidth = function (lineWidget, count) {\n        var totalSpaceWidth = 0;\n        var totalSpaceCount = 0;\n        if (lineWidget) {\n            for (var i = 0; i < lineWidget.children.length; i++) {\n                var currentWidget = lineWidget.children[i];\n                if (currentWidget instanceof TextElementBox) {\n                    var spaceCount = currentWidget.text.length - HelperMethods.removeSpace(currentWidget.text).length;\n                    if (spaceCount > 0) {\n                        var spaceWidth = this.documentHelper.textHelper.getWidth(' ', currentWidget.characterFormat, currentWidget.scriptType);\n                        totalSpaceWidth += spaceCount * spaceWidth;\n                        totalSpaceCount += spaceCount;\n                    }\n                }\n                if (!isNullOrUndefined(count) && totalSpaceCount >= count) {\n                    break;\n                }\n            }\n        }\n        return totalSpaceWidth;\n    };\n    Layout.prototype.getSubWidthInfo = function (lineWidget, lastWrapPositionWidth, width, lineContent, spaceCount, justify, isParagraphEnd) {\n        if (lastWrapPositionWidth > 0) {\n            var wrappedSubWidth = lastWrapPositionWidth - width;\n            lineContent = lineContent.trim();\n            spaceCount = lineContent.length - HelperMethods.removeSpace(lineContent).length;\n            // TODO: Consider first line indent.\n            var totalSubWidth = wrappedSubWidth;\n            if (totalSubWidth <= 0 || (spaceCount === 0 && justify && !lineWidget.paragraph.paragraphFormat.bidi)) {\n                spaceCount = 0;\n                totalSubWidth = 0;\n            }\n            else if (justify) {\n                // For justify alignment, element width will be updated based space count value.\n                // So when the element is paragraph end, need to set space count to zero.\n                if (!isParagraphEnd && spaceCount > 0) {\n                    totalSubWidth = totalSubWidth / spaceCount;\n                }\n                else {\n                    spaceCount = 0;\n                }\n            }\n            return { 'trimmedSpaceWidth': 0, 'subWidth': totalSubWidth, 'spaceCount': spaceCount, 'totalSpaceCount': spaceCount };\n        }\n        return undefined;\n    };\n    Layout.prototype.getBeforeSpacing = function (paragraph, pageIndex) {\n        var beforeSpacing = 0;\n        if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing) {\n            var previousBlock = paragraph.previousWidget;\n            if (previousBlock instanceof ParagraphWidget) {\n                var afterSpacing = this.getAfterSpacing(previousBlock);\n                var before = paragraph.paragraphFormat.beforeSpacing;\n                if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                    before = 14;\n                }\n                if (afterSpacing < before) {\n                    beforeSpacing = before - afterSpacing;\n                }\n            }\n            else if (previousBlock instanceof TableWidget) {\n                if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                    beforeSpacing = 14;\n                }\n                else {\n                    beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                }\n            }\n            else {\n                if (pageIndex > 0 && paragraph === paragraph.bodyWidget.childWidgets[0]) {\n                    if (this.documentHelper.pages[pageIndex].sectionIndex !== this.documentHelper.pages[pageIndex - 1].sectionIndex) {\n                        if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                            beforeSpacing = 14;\n                        }\n                        else {\n                            beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                        }\n                    }\n                }\n                else {\n                    if (paragraph.paragraphFormat.spaceBeforeAuto) {\n                        beforeSpacing = 0;\n                    }\n                    else {\n                        beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n                    }\n                }\n            }\n        }\n        else {\n            beforeSpacing = paragraph.paragraphFormat.beforeSpacing;\n        }\n        if (this.isSameStyle(paragraph, false)) {\n            return 0;\n        }\n        else {\n            return HelperMethods.convertPointToPixel(beforeSpacing);\n        }\n    };\n    Layout.prototype.getAfterSpacing = function (paragraph) {\n        var afterSpacing = paragraph.paragraphFormat.afterSpacing;\n        if (!this.documentHelper.dontUseHtmlParagraphAutoSpacing && paragraph.paragraphFormat.spaceAfterAuto) {\n            if (isNullOrUndefined(paragraph.nextWidget) && paragraph.isInsideTable) {\n                afterSpacing = 0;\n            }\n            else {\n                afterSpacing = 14;\n            }\n        }\n        if (this.isSameStyle(paragraph, true)) {\n            return 0;\n        }\n        else {\n            return afterSpacing;\n        }\n    };\n    Layout.prototype.getLineSpacing = function (paragraph, maxHeight, alterLineSpacing) {\n        if (isNullOrUndefined(paragraph.paragraphFormat)) {\n            return 0;\n        }\n        var lineSpacing = 0;\n        switch (paragraph.paragraphFormat.lineSpacingType) {\n            case 'AtLeast':\n            case 'Exactly':\n                lineSpacing = HelperMethods.convertPointToPixel(paragraph.paragraphFormat.lineSpacing);\n                break;\n            default:\n                lineSpacing = paragraph.paragraphFormat.lineSpacing;\n                if (alterLineSpacing) {\n                    lineSpacing = lineSpacing - 1;\n                }\n                lineSpacing = lineSpacing * maxHeight;\n                break;\n        }\n        return lineSpacing;\n    };\n    Layout.prototype.isParagraphFirstLine = function (paragraph, line) {\n        var widget = paragraph;\n        if (isNullOrUndefined(widget.childWidgets) || widget.childWidgets.indexOf(line) === 0) {\n            //If the line elements conatins the elements from previous paragraph then need to retun false.\n            //Example scenario, Field start and field end in different paragraphs.\n            if (line.children.length > 0 && !isNullOrUndefined(paragraph.previousWidget)\n                && paragraph.previousWidget instanceof ParagraphWidget) {\n                return line.paragraph.index !== paragraph.previousWidget.index;\n            }\n            return true; //If the line elements count is zero then also need to return true.\n        }\n        return false;\n    };\n    Layout.prototype.isParagraphLastLine = function (element) {\n        var paragraph = element.line.paragraph;\n        var lastLineWidget = paragraph.childWidgets[paragraph.childWidgets.length - 1];\n        var lastInline = lastLineWidget.children[lastLineWidget.children.length - 1];\n        if (element === lastInline) {\n            return (lastInline instanceof FieldElementBox) || ((!(lastInline instanceof TextElementBox && lastInline.text === '\\v')));\n        }\n        return false;\n    };\n    Layout.prototype.getTextIndexAfterSpace = function (text, startIndex) {\n        var length = text.length;\n        var index = 0;\n        var hyphenIndex = 0;\n        index = text.indexOf(' ', startIndex) + 1;\n        hyphenIndex = text.indexOf('-', startIndex) + 1;\n        if (hyphenIndex == 1) {\n            hyphenIndex = text.indexOf('-', (hyphenIndex + 1)) + 1;\n        }\n        if (hyphenIndex > 0 && index > 0) {\n            index = Math.min(index, hyphenIndex);\n        }\n        else if (hyphenIndex > 0 && index == 0) {\n            index = hyphenIndex;\n        }\n        var nextIndex = index;\n        if (nextIndex === 0 || nextIndex === length) {\n            return nextIndex;\n        }\n        while (text[nextIndex] === ' ') {\n            nextIndex++;\n            if (nextIndex === length) {\n                break;\n            }\n        }\n        return nextIndex;\n    };\n    //#region Table\n    Layout.prototype.moveNextWidgetsToTable = function (tableWidget, currentRow, moveFromNext) {\n        var rowIndex = currentRow.indexInOwner;\n        var currentTable = tableWidget[tableWidget.length - 1];\n        if (moveFromNext) {\n            rowIndex += 1;\n        }\n        var nextWidgets = currentRow.containerWidget.childWidgets.splice(rowIndex);\n        for (var i = 0; i < nextWidgets.length; i++) {\n            currentTable.childWidgets.push(nextWidgets[i]);\n            nextWidgets[i].containerWidget = currentTable;\n        }\n    };\n    Layout.prototype.addTableCellWidget = function (cell, area, maxCellMarginTop, maxCellMarginBottom) {\n        //let tableCellWidget: TableCellWidget = new TableCellWidget(cell);\n        var prevColumnIndex = 0;\n        var cellspace = 0;\n        var left = 0;\n        var top = maxCellMarginTop;\n        var right = 0;\n        var bottom = maxCellMarginBottom;\n        if (!isNullOrUndefined(cell.cellFormat)) {\n            if (cell.cellFormat.containsMargins()) {\n                left = isNullOrUndefined(cell.cellFormat.leftMargin) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin) : HelperMethods.convertPointToPixel(cell.cellFormat.leftMargin);\n                right = isNullOrUndefined(cell.cellFormat.rightMargin) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin) : HelperMethods.convertPointToPixel(cell.cellFormat.rightMargin);\n            }\n            else {\n                if (cell.columnIndex === 0 && cell.ownerRow.rowFormat.hasValue('leftMargin')) {\n                    left = HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.leftMargin);\n                }\n                else {\n                    left = HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.leftMargin);\n                }\n                if (cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 &&\n                    cell.ownerRow.rowFormat.hasValue('rightMargin')) {\n                    right = HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.rightMargin);\n                }\n                else {\n                    right = HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.rightMargin);\n                }\n            }\n        }\n        cell.margin = new Margin(left, top, right, bottom);\n        var autofit = cell.ownerTable.tableFormat.allowAutoFit;\n        var cellWidth = cell.cellFormat.cellWidth;\n        if (cell.cellFormat.preferredWidthType === 'Percent' && cell.cellFormat.preferredWidth !== 0 && cellWidth <= 0) {\n            var width = HelperMethods.convertPointToPixel(cell.ownerTable.getTableClientWidth(cell.ownerTable.getContainerWidth()));\n            cellWidth = cell.ownerTable.getCellWidth(cell.cellFormat.preferredWidth, cell.cellFormat.preferredWidthType, width, cell);\n        }\n        // if (cellWidth > cell.cellFormat.preferredWidth && cell.cellFormat.preferredWidth !== 0 && cell.cellFormat.preferredWidthType !== 'Percent' && cell.ownerTable.tableFormat.preferredWidthType !== 'Percent' && isNullOrUndefined(cell.ownerTable.positioning) && (!cell.ownerTable.isContainInsideTable) && (!(cell.ownerTable.containerWidget instanceof TableCellWidget))) {\n        //     cellWidth = cell.cellFormat.preferredWidth;\n        // }\n        cell.width = HelperMethods.convertPointToPixel(cellWidth);\n        if (!isNullOrUndefined(cell.previousWidget)) {\n            prevColumnIndex = cell.previousWidget.columnIndex + cell.previousWidget.cellFormat.columnSpan;\n        }\n        cellspace = !isNullOrUndefined(cell.ownerTable) && !isNullOrUndefined(cell.ownerTable.tableFormat) ? HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) : 0;\n        var prevSpannedCellWidth = 0;\n        if (prevColumnIndex < cell.columnIndex) {\n            prevSpannedCellWidth = HelperMethods.convertPointToPixel(cell.ownerTable.tableHolder.getPreviousSpannedCellWidth(prevColumnIndex, cell.columnIndex));\n            if (prevColumnIndex === 0) {\n                prevSpannedCellWidth = prevSpannedCellWidth - cellspace / 2;\n            }\n        }\n        cell.x = area.x + prevSpannedCellWidth + cell.margin.left;\n        cell.y = area.y + cell.margin.top + cellspace;\n        cell.width = cell.width - cell.margin.left - cell.margin.right;\n        if (cellspace > 0) {\n            cell.x += cellspace;\n            if (cell.ownerTable.tableHolder.columns.length === 1) {\n                cell.width -= cellspace * 2;\n            }\n            else if (cell.columnIndex === 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1) {\n                cell.width -= ((cellspace * 2) - cellspace / 2);\n            }\n            else {\n                cell.width -= cellspace;\n            }\n        }\n        var leftBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellLeftBorder(cell).getLineWidth());\n        var rightBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellRightBorder(cell).getLineWidth());\n        // update the margins values respect to layouting of borders.\n        // for normal table cells only left border is rendred. for last cell left and right border is rendred.\n        // this border widths are not included in margins.\n        var linestyle = false;\n        cell.leftBorderWidth = !cell.ownerTable.isBidiTable ? leftBorderWidth : rightBorderWidth;\n        var isLeftStyleNone = (cell.cellFormat.borders.left.lineStyle === 'None');\n        var isRightStyleNone = (cell.cellFormat.borders.right.lineStyle === 'None');\n        cell.x += (!isLeftStyleNone) ? 0 : (cell.leftBorderWidth > 0) ? 0 : cell.leftBorderWidth;\n        cell.width -= (!isLeftStyleNone) ? 0 : (cell.leftBorderWidth > 0) ? 0 : cell.leftBorderWidth;\n        var lastCell = !cell.ownerTable.isBidiTable ? cell.cellIndex === cell.ownerRow.childWidgets.length - 1\n            : cell.cellIndex === 0;\n        if (cellspace > 0 || cell.columnIndex === cell.ownerTable.tableHolder.columns.length - 1 ||\n            cell.index === cell.containerWidget.childWidgets.length - 1) {\n            cell.rightBorderWidth = !cell.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n            if (!cell.ownerTable.tableFormat.allowAutoFit) {\n                cell.width -= cell.rightBorderWidth;\n            }\n            if (!this.isInsertTable()) {\n                linestyle = this.checkPreviousMargins(cell.ownerTable);\n            }\n        }\n        //Add the border widths to respective margin side.\n        //cell.margin.left += (isLeftStyleNone) ? 0 : (cell.leftBorderWidth);\n        cell.margin.right += (isRightStyleNone && !linestyle) ? 0 : (cell.rightBorderWidth);\n        //cell.ownerWidget = owner;\n        if (cell.width < cell.sizeInfo.minimumWidth / 2 && !this.isInitialLoad) {\n            cell.width = cell.sizeInfo.minimumWidth / 2;\n        }\n        return cell;\n    };\n    Layout.prototype.checkPreviousMargins = function (table) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[row.childWidgets.length - 1];\n                if (cell.cellFormat.borders.right.lineStyle !== 'None') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.addWidgetToTable = function (viewer, tableCollection, rowCollection, row, footnotes, endRowWidget, isInitialLayout, startRowIndex, isRepeatRowHeader) {\n        //Adds table row widget to owner table widget.\n        var tableWidget = tableCollection[0];\n        var index = tableWidget.childWidgets.length;\n        var prevWidget = undefined;\n        var rowWidgetIndex = rowCollection.indexOf(row);\n        var footnoteWidgets = [];\n        if (rowWidgetIndex > 0) {\n            prevWidget = rowCollection[rowWidgetIndex - 1];\n            // Need to update on this further\n        }\n        else if (row.previousRenderedWidget instanceof TableRowWidget &&\n            row.previousRenderedWidget.ownerTable.equals(row.ownerTable)) {\n            // Need to update on this further\n            prevWidget = row.previousRenderedWidget;\n        }\n        if (!isNullOrUndefined(prevWidget)) {\n            tableWidget = prevWidget.containerWidget;\n            // index = tableWidget.childWidgets.length;\n            index = tableWidget.childWidgets.indexOf(prevWidget) + 1;\n            if (Math.round(row.y) !== Math.round(prevWidget.y + prevWidget.height)) {\n                var prevIndex = tableCollection.indexOf(tableWidget);\n                if (prevIndex + 1 >= tableCollection.length) {\n                    //Creates new table widget for splitted rows.\n                    this.addTableWidget(viewer.clientActiveArea, tableCollection, true);\n                }\n                tableWidget = tableCollection[prevIndex + 1];\n                index = tableWidget.childWidgets.length;\n            }\n            if (rowWidgetIndex > 0) {\n                index = 0;\n            }\n        }\n        this.updateRowHeightBySpannedCell(tableWidget, row, index);\n        this.updateRowHeightByCellSpacing(tableCollection, row, viewer);\n        //Remove widget from previous container after splitteing\n        if (row.containerWidget && row.containerWidget !== tableWidget &&\n            row.containerWidget.childWidgets.indexOf(row) !== -1) {\n            row.containerWidget.childWidgets.splice(row.containerWidget.childWidgets.indexOf(row), 1);\n        }\n        if (tableWidget.childWidgets.indexOf(row) === -1) {\n            tableWidget.childWidgets.splice(index, 0, row);\n            if (isRepeatRowHeader) {\n                tableWidget.bodyWidget.page.repeatHeaderRowTableWidget = true;\n            }\n        }\n        row.containerWidget = tableWidget;\n        if (!row.ownerTable.isInsideTable) {\n            if (footnotes.length > 0) {\n                if (!isNullOrUndefined(footnotes)) {\n                    footnoteWidgets = this.getFootnoteBody(footnotes);\n                }\n            }\n            else {\n                if (!isNullOrUndefined(row)) {\n                    for (var i = 0; i < row.childWidgets.length; i++) {\n                        var cell = row.childWidgets[i];\n                        for (var j = 0; j < cell.childWidgets.length; j++) {\n                            var footnoteCollection = this.getFootNoteWidgetsOf(cell.childWidgets[j], true);\n                            for (var k = 0; k < footnoteCollection.length; k++) {\n                                footnoteWidgets.splice(footnoteWidgets.length, 0, footnoteCollection[k]);\n                            }\n                        }\n                    }\n                }\n            }\n            if (footnoteWidgets.length > 0 && isNullOrUndefined(footnoteWidgets[0].containerWidget)) {\n                this.layoutFootnoteInSplittedRow(row, footnoteWidgets);\n            }\n            else if (!isNullOrUndefined(footnoteWidgets) && footnoteWidgets.length > 0 && row.bodyWidget.previousRenderedWidget !== undefined && startRowIndex !== row.bodyWidget.page.index && footnoteWidgets[0].containerWidget.page.index !== row.bodyWidget.page.index) {\n                this.moveFootNotesToPage(footnoteWidgets, footnoteWidgets[0].containerWidget.page.bodyWidgets[0], row.bodyWidget);\n            }\n            else if (footnoteWidgets.length > 0 && !this.isInitialLoad && !isNullOrUndefined(row.bodyWidget.page.footnoteWidget)) {\n                this.layoutfootNote(row.bodyWidget.page.footnoteWidget);\n            }\n            footnotes.length = 0;\n        }\n        tableWidget.height = tableWidget.height + row.height;\n        if (this.viewer instanceof PageLayoutViewer) {\n            if (!isNullOrUndefined(tableWidget.containerWidget)\n                && tableWidget.containerWidget.childWidgets.indexOf(tableWidget) >= 0 &&\n                !(tableWidget.containerWidget instanceof HeaderFooterWidget)) {\n                tableWidget.containerWidget.height += row.height;\n            }\n        }\n        this.updateHeightForRowWidget(viewer, false, tableCollection, rowCollection, row, false, endRowWidget, isInitialLayout);\n        viewer.cutFromTop(row.y + row.height);\n        this.viewer.clientActiveArea.height -= this.getFootNoteHeight(footnoteWidgets);\n        this.existFootnoteHeight = 0;\n    };\n    Layout.prototype.layoutFootnoteInSplittedRow = function (row, footnoteWidgets) {\n        if (footnoteWidgets && footnoteWidgets.length > 0) {\n            if (isNullOrUndefined(row.ownerTable.bodyWidget.page.footnoteWidget)) {\n                this.addEmptyFootNoteToBody(row.ownerTable.bodyWidget);\n            }\n            var footnoteWidget = row.ownerTable.bodyWidget.page.footnoteWidget;\n            if (footnoteWidget) {\n                for (var j = 0; j < footnoteWidgets.length; j++) {\n                    footnoteWidget.bodyWidgets.push(footnoteWidgets[j]);\n                    footnoteWidgets[j].containerWidget = footnoteWidget;\n                }\n                this.layoutfootNote(footnoteWidget);\n            }\n        }\n    };\n    Layout.prototype.getFootNoteHeight = function (footnoteWidgets) {\n        var height = 0;\n        if (Array.isArray(footnoteWidgets)) {\n            for (var i = 0; i < footnoteWidgets.length; i++) {\n                height += this.getFootnoteHeightInternal(footnoteWidgets[i]);\n            }\n        }\n        else {\n            height = this.getFootnoteHeightInternal(footnoteWidgets);\n        }\n        return height;\n    };\n    Layout.prototype.getFootnoteHeightInternal = function (footnoteWidgets) {\n        var height = 0;\n        for (var i = 0; i < footnoteWidgets.childWidgets.length; i++) {\n            height += footnoteWidgets.childWidgets[i].height;\n            if (footnoteWidgets.indexInOwner === 0 && i === 0) {\n                height += footnoteWidgets.containerWidget.margin.top;\n            }\n        }\n        return height;\n    };\n    Layout.prototype.updateRowHeightBySpannedCell = function (tableWidget, row, insertIndex) {\n        var rowSpan = 1;\n        if (tableWidget.childWidgets.length === 0 || insertIndex === 0) {\n            this.updateRowHeight(row, row);\n            return;\n        }\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            rowSpan = (isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat)) ? rowSpan : cellWidget.cellFormat.rowSpan;\n            this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n        }\n        if (!isNullOrUndefined(row.ownerTable)) {\n            for (var i = 0; i < row.ownerTable.spannedRowCollection.length; i++) {\n                if (row.ownerTable.spannedRowCollection.keys[i] === row.index) {\n                    // Back track to previous table row widgets and update it height if vertical merge ends with this row.\n                    for (var j = 0; j < insertIndex; j++) {\n                        var prevRowWidget = tableWidget.childWidgets[j];\n                        this.updateRowHeight(prevRowWidget, row);\n                    }\n                    row.ownerTable.spannedRowCollection.remove(row.ownerTable.spannedRowCollection.keys[i]);\n                    break;\n                }\n            }\n        }\n    };\n    Layout.prototype.updateRowHeight = function (prevRowWidget, row) {\n        var rowIndex = row.index;\n        var rowSpan = 1;\n        for (var i = 0; i < prevRowWidget.childWidgets.length; i++) {\n            var cellWidget = prevRowWidget.childWidgets[i];\n            rowSpan = (isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat)) ? rowSpan : cellWidget.cellFormat.rowSpan;\n            //To update Row height- if row has row span value greater than 1, need to add it in spannedRowCollection            \n            this.updateSpannedRowCollection(rowSpan, row, cellWidget);\n            if (rowIndex - cellWidget.rowIndex === rowSpan - 1) {\n                var mergedCellHeight = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - row.y;\n                if ((row.rowFormat.heightType !== 'Exactly' || (row.rowFormat.heightType === 'Exactly' && row.rowFormat.height > mergedCellHeight)) && row.height < mergedCellHeight) {\n                    row.height = mergedCellHeight;\n                }\n            }\n        }\n    };\n    //if row has row span value greater than 1, need to add it in spannedRowCollection\n    Layout.prototype.updateSpannedRowCollection = function (rowSpan, row, cellWidget) {\n        if (rowSpan > 1 && !isNullOrUndefined(row.ownerTable)) {\n            //Checks the rowspan is already exist in the list\n            if (!row.ownerTable.spannedRowCollection.containsKey(row.index + rowSpan - 1)) {\n                row.ownerTable.spannedRowCollection.add(row.index + rowSpan - 1, row.index);\n            }\n        }\n    };\n    Layout.prototype.updateRowHeightByCellSpacing = function (tableCollection, row, viewer) {\n        if (row.ownerTable.tableFormat.cellSpacing > 0) {\n            // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page. \n            // In such case we have update the row height with half of cell spacing.\n            // Remaining cases we have to update the entire hight\n            if (tableCollection.length > 1 && row.y === viewer.clientArea.y && viewer instanceof PageLayoutViewer) {\n                row.height = row.height - HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) / 2;\n            }\n        }\n    };\n    Layout.prototype.isRowSpanEnd = function (row, viewer) {\n        var rowIndex = row.index;\n        var rowSpan = 1;\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            var splittedCell = this.documentHelper.splittedCellWidgets[i];\n            rowSpan = (isNullOrUndefined(splittedCell) || isNullOrUndefined(splittedCell.cellFormat)) ? rowSpan : splittedCell.cellFormat.rowSpan;\n            if (rowIndex - splittedCell.rowIndex === rowSpan - 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isVerticalMergedCellContinue = function (row) {\n        var colIndex = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            if (colIndex < cell.columnIndex) {\n                return true;\n            }\n            colIndex += cell.cellFormat.columnSpan;\n        }\n        return colIndex < row.ownerTable.tableHolder.columns.length;\n    };\n    Layout.prototype.splitWidgets = function (tableRowWidget, viewer, tableCollection, rowCollection, splittedWidget, isLastRow, footNoteCollection, lineIndexInCell, cellIndex, isMultiColumnSplit, isRowSpan) {\n        if (!(isMultiColumnSplit && lineIndexInCell === 0) && (this.isFirstLineFitForRow(viewer.clientArea.bottom, tableRowWidget) && tableRowWidget.childWidgets.length > 0)) {\n            splittedWidget = this.getSplittedWidgetForRow(viewer.clientArea.bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, undefined, isRowSpan);\n            if (this.documentHelper.splittedCellWidgets.length > 0 || splittedWidget !== tableRowWidget) {\n                if (isLastRow) {\n                    for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n                        var cell = splittedWidget.childWidgets[i];\n                        if (cell.rowIndex !== splittedWidget.index) {\n                            splittedWidget.childWidgets.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n                this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n            }\n        }\n        else {\n            //Adds the splitted widget of a vertical merged cell, to next row widget in the next page.\n            this.insertSplittedCellWidgets(viewer, tableCollection, splittedWidget, tableRowWidget.index - 1);\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getSplittedWidgetForRow = function (bottom, tableCollection, rowCollection, tableRowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isRowSpan) {\n        var splittedWidget = undefined;\n        var rowIndex = tableRowWidget.index;\n        this.isRelayoutneed = false;\n        var issplit = false;\n        var cellHeight = tableRowWidget.height;\n        var previousHeight = cellHeight;\n        var maximumCellWidgetHeight = 0;\n        for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n            var cellWidget = tableRowWidget.childWidgets[i];\n            var splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n            if (isMultiColumnSplit && !isNullOrUndefined(splittedCell) && splittedCell.childWidgets.length !== 0 && cellHeight > cellWidget.height) {\n                cellHeight = cellWidget.height;\n            }\n            footNoteCollection = [];\n            if (isNullOrUndefined(splittedCell) && cellWidget === tableRowWidget.childWidgets[tableRowWidget.childWidgets.length - 1] && this.isVerticalMergedCellContinue(tableRowWidget) && this.isRowSpanEnd(tableRowWidget, this.viewer) && this.documentHelper.splittedCellWidgets.length > 0 && isRowSpan) {\n                splittedWidget = this.getSplittedWidgetForSpannedRow(bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection);\n                splittedCell = undefined;\n            }\n            if (!isNullOrUndefined(splittedCell)) {\n                if (splittedCell === cellWidget) {\n                    //Returns if the whole content of the row does not fit in current page.\n                    return tableRowWidget;\n                }\n                if (cellWidget.height > maximumCellWidgetHeight) {\n                    maximumCellWidgetHeight = cellWidget.height;\n                }\n                if (tableRowWidget.childWidgets.indexOf(splittedCell) !== -1) {\n                    tableRowWidget.childWidgets.splice(tableRowWidget.childWidgets.indexOf(splittedCell), 1);\n                }\n                tableRowWidget.height -= splittedCell.height;\n                if (i === 0 || tableRowWidget.height < maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom) {\n                    tableRowWidget.height = maximumCellWidgetHeight + cellWidget.margin.top + cellWidget.margin.bottom;\n                }\n                if (isNullOrUndefined(splittedWidget)) {\n                    //Creates new widget, to hold the splitted contents.\n                    splittedWidget = new TableRowWidget();\n                    splittedWidget.containerWidget = tableRowWidget.containerWidget;\n                    splittedWidget.index = tableRowWidget.index;\n                    splittedWidget.rowFormat = tableRowWidget.rowFormat;\n                    splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n                    this.updateWidgetLocation(tableRowWidget, splittedWidget);\n                    // splittedWidget.height = 0;\n                    rowCollection.push(splittedWidget);\n                }\n                var rowSpan = 1;\n                rowSpan = (isNullOrUndefined(splittedCell) || isNullOrUndefined(splittedCell.cellFormat)) ? rowSpan : splittedCell.cellFormat.rowSpan;\n                if (rowIndex - splittedCell.rowIndex === rowSpan - 1\n                    && splittedWidget.height < splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom) {\n                    splittedWidget.height = splittedCell.height + splittedCell.margin.top + splittedCell.margin.bottom;\n                }\n                else {\n                    if (tableRowWidget.rowFormat.heightType === 'Exactly' || (tableRowWidget.rowFormat.heightType === 'AtLeast' &&\n                        splittedWidget.height < tableRowWidget.rowFormat.height)) {\n                        //Sets the height for row widget if height type is exact or at least.\n                        splittedWidget.height = tableRowWidget.rowFormat.height;\n                    }\n                }\n                splittedWidget.childWidgets.push(splittedCell);\n                splittedCell.containerWidget = splittedWidget;\n                this.isRelayoutneed = true;\n                var count_1 = i;\n                while (count_1 > 0 && !issplit) {\n                    var cellWidget_1 = tableRowWidget.childWidgets[count_1 - 1];\n                    splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget_1, footNoteCollection);\n                    splittedWidget.childWidgets.splice(0, 0, splittedCell);\n                    splittedCell.containerWidget = splittedWidget;\n                    count_1--;\n                }\n                issplit = true;\n            }\n        }\n        if (isMultiColumnSplit && cellHeight !== previousHeight) {\n            for (var i = 0; i < tableRowWidget.childWidgets.length; i++) {\n                tableRowWidget.childWidgets[i].height = cellHeight;\n            }\n            tableRowWidget.height = cellHeight;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getSplittedWidgetForSpannedRow = function (bottom, tableRowWidget, tableCollection, rowCollection, footNoteCollection) {\n        var splittedWidget = undefined;\n        var splittedCell = undefined;\n        var issplit = false;\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            splittedCell = this.documentHelper.splittedCellWidgets[i];\n            if (tableRowWidget.childWidgets.length < splittedCell.index) {\n                break;\n            }\n            if (isNullOrUndefined(splittedWidget)) {\n                splittedWidget = new TableRowWidget();\n                splittedWidget.containerWidget = tableRowWidget.containerWidget;\n                splittedWidget.index = tableRowWidget.index;\n                splittedWidget.rowFormat = tableRowWidget.rowFormat;\n                splittedWidget.isRenderBookmarkEnd = tableRowWidget.isRenderBookmarkEnd;\n                this.updateWidgetLocation(tableRowWidget, splittedWidget);\n                rowCollection.push(splittedWidget);\n            }\n            splittedWidget.childWidgets.push(splittedCell);\n            splittedCell.containerWidget = splittedWidget;\n            this.isRelayoutneed = true;\n            var count = this.documentHelper.splittedCellWidgets[i].index;\n            while (count > 0 && !issplit) {\n                var cellWidget = tableRowWidget.childWidgets[count - 1];\n                splittedCell = this.getSplittedWidget(bottom, true, tableCollection, rowCollection, cellWidget, footNoteCollection);\n                splittedWidget.childWidgets.splice(0, 0, splittedCell);\n                splittedCell.containerWidget = splittedWidget;\n                count--;\n            }\n            issplit = true;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getFootNoteHeightInLine = function (line) {\n        var height = 0;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof FootnoteElementBox) {\n                height += this.getFootNoteHeight(element.bodyWidget);\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getFootnoteFromLine = function (line, footNoteCollection) {\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof FootnoteElementBox) {\n                footNoteCollection.push(line.children[i]);\n            }\n        }\n    };\n    Layout.prototype.updateWidgetsToTable = function (tableWidgets, rowWidgets, row, rearrangeRow, lineIndexInCell, cellIndex, isMultiColumnSplit) {\n        var startRowIndex = row.bodyWidget.page.index;\n        var rowHeight = this.getRowHeight(row, [row]);\n        var viewer = this.viewer;\n        //initializing row properties with default values.\n        var isHeader = row.rowFormat.isHeader;\n        var headerRow = undefined;\n        var isAllowBreakAcrossPages = row.rowFormat.allowBreakAcrossPages;\n        var heightType = row.rowFormat.heightType;\n        var cellSpacing = 0;\n        var count = 0;\n        var tableRowWidget = row;\n        var moveRowToNextTable = false;\n        var footnoteElements = this.layoutedFootnoteElement;\n        var isRepeatRowHeader = false;\n        if (tableRowWidget.bodyWidget.page.footnoteWidget !== undefined) {\n            this.footHeight = tableRowWidget.bodyWidget.page.footnoteWidget.height;\n            if (this.footnoteHeight === 0) {\n                this.footnoteHeight = this.footHeight;\n            }\n        }\n        else {\n            this.footHeight = 0;\n        }\n        if (row.ownerTable.continueHeader && !isHeader) {\n            row.ownerTable.continueHeader = false;\n        }\n        var isInitialLayout = row.ownerTable.isInsideTable;\n        var isLastRow = false;\n        cellSpacing = (!isNullOrUndefined(row.ownerTable) && !isNullOrUndefined(row.ownerTable.tableFormat)) ? HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.cellSpacing) : 0;\n        while (count < rowWidgets.length) {\n            count = rowWidgets.length;\n            if (this.isRowSpanEnd(row, viewer) && row.rowFormat.heightType === 'Exactly' && this.documentHelper.splittedCellWidgets.length === 1) {\n                this.documentHelper.splittedCellWidgets = [];\n            }\n            if (!isMultiColumnSplit && (row.ownerTable.isInsideTable || (this.documentHelper.splittedCellWidgets.length === 0 && tableRowWidget.y + tableRowWidget.height + cellSpacing + this.footnoteHeight <= viewer.clientArea.bottom))) {\n                if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y\n                    || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n                    this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n                }\n                this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, undefined, isInitialLayout, startRowIndex, isRepeatRowHeader);\n                if (this.documentHelper.splittedCellWidgets.length > 0 && isNullOrUndefined(rowWidgets[rowWidgets.length - 1].nextRow)) {\n                    count--;\n                    isLastRow = true;\n                }\n                isInitialLayout = false;\n            }\n            else {\n                footnoteElements = [];\n                isInitialLayout = false;\n                //Split widget for next page\n                if (this.documentHelper.splittedCellWidgets.length > 0 && tableRowWidget.y + tableRowWidget.height + this.footHeight <= viewer.clientArea.bottom) {\n                    var isRowSpanEnd = this.isRowSpanEnd(row, viewer);\n                    if (!isRowSpanEnd) {\n                        if (this.isVerticalMergedCellContinue(row) && (tableRowWidget.y === viewer.clientArea.y\n                            || tableRowWidget.y === this.viewer.clientArea.y + tableRowWidget.ownerTable.headerHeight)) {\n                            this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.index - 1);\n                        }\n                        this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                        continue;\n                    }\n                }\n                var splittedWidget = tableRowWidget;\n                var tableWidget = tableWidgets[tableWidgets.length - 1];\n                if (isMultiColumnSplit || rowHeight + tableRowWidget.y + this.footHeight > viewer.clientArea.bottom) {\n                    if (!isAllowBreakAcrossPages || (isHeader && row.ownerTable.continueHeader) || (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientArea.bottom)) {\n                        if ((heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) < viewer.clientActiveArea.height && isAllowBreakAcrossPages) || (heightType !== 'Exactly' && tableRowWidget.y === viewer.clientArea.y) || (heightType === 'Auto' && isAllowBreakAcrossPages)) {\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                            if (isNullOrUndefined(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                                this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            }\n                            else if (isNullOrUndefined(splittedWidget) && heightType === 'AtLeast' && tableRowWidget.containerWidget.lastChild !== tableRowWidget) {\n                                splittedWidget = tableRowWidget;\n                            }\n                        }\n                        // if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0) {\n                        //     splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n                        // }\n                        // if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientActiveArea.height && isAllowBreakAcrossPages && tableRowWidget.ownerTable.tableHolder.columns.length > this.getTotalColumnSpan(tableRowWidget)) {\n                        //     tableRowWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow);\n                        //     splittedWidget = tableRowWidget;\n                        // }\n                        if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                        }\n                        if (isHeader && row.ownerTable.continueHeader) {\n                            row.ownerTable.header = false;\n                            row.ownerTable.headerHeight = 0;\n                            var pages = undefined;\n                            if (viewer instanceof PageLayoutViewer) {\n                                pages = this.documentHelper.pages;\n                            }\n                            if (!isNullOrUndefined(pages)) {\n                                for (var i = 0; i < pages.length; i++) {\n                                    if (pages[i].repeatHeaderRowTableWidget && !isNullOrUndefined(pages[i].bodyWidgets[0].firstChild) && !(pages[i].bodyWidgets[0].firstChild instanceof TableWidget && pages[i].bodyWidgets[0].firstChild.header)) {\n                                        pages[i].repeatHeaderRowTableWidget = false;\n                                        row.ownerTable.continueHeader = false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if ((heightType === 'Auto' || heightType === 'AtLeast') && isAllowBreakAcrossPages) {\n                            if (!(HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom) || tableRowWidget.y === viewer.clientArea.y) {\n                                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                                if (isNullOrUndefined(splittedWidget) && tableRowWidget.y === viewer.clientArea.y) {\n                                    this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                                }\n                            }\n                            else if (heightType === 'AtLeast' && HelperMethods.convertPointToPixel(row.rowFormat.height) > viewer.clientArea.bottom && tableRowWidget.ownerTable.wrapTextAround && tableRowWidget.y - HelperMethods.convertPointToPixel(tableRowWidget.ownerTable.positioning.verticalPosition) === viewer.clientArea.y && tableRowWidget.bodyWidget.firstChild === tableRowWidget.ownerTable) {\n                                splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit);\n                                if (isNullOrUndefined(splittedWidget)) {\n                                    this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                                    count++;\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (heightType === 'Exactly' && tableRowWidget.y === viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                        }\n                    }\n                }\n                else {\n                    var isInsertSplittedWidgets = false;\n                    var headerHeight = 0;\n                    if (!isNullOrUndefined(tableRowWidget.ownerTable.headerHeight)) {\n                        headerHeight = tableRowWidget.ownerTable.headerHeight;\n                    }\n                    // Splitting handled for the merged cell with allowRowBreakAcross pages. \n                    if (this.isVerticalMergedCellContinue(row) && (isAllowBreakAcrossPages ||\n                        (isInsertSplittedWidgets = (tableRowWidget.y === viewer.clientArea.y\n                            || tableRowWidget.y === this.viewer.clientArea.y + headerHeight)))) {\n                        if (isInsertSplittedWidgets) {\n                            this.insertSplittedCellWidgets(viewer, tableWidgets, splittedWidget, tableRowWidget.indexInOwner - 1);\n                        }\n                        else {\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, undefined, undefined, undefined, true);\n                            if (isNullOrUndefined(splittedWidget)) {\n                                isInsertSplittedWidgets = (tableRowWidget.y === viewer.clientArea.y\n                                    || tableRowWidget.y === this.viewer.clientArea.y + headerHeight);\n                                if (isInsertSplittedWidgets) {\n                                    this.insertSplittedCellWidgets(viewer, tableWidgets, tableRowWidget, tableRowWidget.indexInOwner - 1);\n                                    count--;\n                                    continue;\n                                }\n                                if (this.isRowSpanEnd(row, viewer)) {\n                                    splittedWidget = tableRowWidget;\n                                }\n                            }\n                        }\n                    }\n                    else if (isLastRow && !isAllowBreakAcrossPages) {\n                        splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements);\n                    }\n                    else if (this.isRowSpanEnd(row, viewer) && !isAllowBreakAcrossPages) {\n                        if (heightType === 'AtLeast' && row.ownerTable.spannedRowCollection.keys.length > 0)\n                            splittedWidget = this.splitWidgets(tableRowWidget, viewer, tableWidgets, rowWidgets, splittedWidget, isLastRow, footnoteElements, lineIndexInCell, cellIndex, isMultiColumnSplit, true);\n                        if (isNullOrUndefined(splittedWidget)) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                        }\n                    }\n                }\n                //Create New table for splitted widget\n                if (!isNullOrUndefined(splittedWidget) && (isNullOrUndefined(this.documentHelper.owner.editorModule) || this.documentHelper.owner.editorModule && !this.documentHelper.owner.editorModule.isTableInsert) && !(splittedWidget.bodyWidget.containerWidget instanceof FootNoteWidget)) {\n                    if (splittedWidget !== tableRowWidget) {\n                        this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements, tableRowWidget.nextRow, undefined, undefined, isRepeatRowHeader);\n                        //Updates the fitted table rows to current page.\n                        this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, tableRowWidget.nextRow);\n                        var index_2 = tableWidgets.indexOf(tableRowWidget.containerWidget);\n                        if (index_2 + 1 >= tableWidgets.length) {\n                            //Creates new table widget for splitted rows.\n                            this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                        }\n                        tableRowWidget = splittedWidget;\n                    }\n                    else {\n                        if (row.index > 0) {\n                            //Updates the fitted table rows to current page.\n                            this.updateWidgetsToPage(tableWidgets, rowWidgets, row.ownerTable, rearrangeRow, row);\n                            // Need to update on this further\n                            if (row.previousRenderedWidget instanceof TableRowWidget) {\n                                // Need to update on this further\n                                var prevWidget = row.previousRenderedWidget;\n                                if (HelperMethods.round(tableRowWidget.y, 2) === HelperMethods.round(prevWidget.y + prevWidget.height, 2)) {\n                                    var prevIndex = tableWidgets.indexOf(prevWidget.containerWidget);\n                                    if (prevIndex + 1 >= tableWidgets.length) {\n                                        //Creates new table widget for splitted rows.\n                                        this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                                    }\n                                }\n                                else {\n                                    //Creates new table widget for splitted rows.\n                                    this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                                }\n                            }\n                            else {\n                                //Creates new table widget for splitted rows.\n                                this.addTableWidget(viewer.clientActiveArea, tableWidgets, true);\n                            }\n                        }\n                        else if (heightType === 'Exactly' && rowHeight + tableRowWidget.y + this.footHeight < viewer.clientArea.bottom && tableRowWidget.y >= viewer.clientArea.y) {\n                            this.addWidgetToTable(viewer, tableWidgets, rowWidgets, tableRowWidget, footnoteElements);\n                            count++;\n                            continue;\n                        }\n                        moveRowToNextTable = true;\n                        count--;\n                    }\n                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                    var rowToMove = row;\n                    var keepNext = false;\n                    var index = row.ownerTable.containerWidget.index;\n                    var isTableFirstRow = false;\n                    var bodyWidget = void 0;\n                    var block = void 0;\n                    if (moveRowToNextTable && tableWidgets.length === 1) {\n                        block = tableWidgets[tableWidgets.length - 1];\n                    }\n                    else {\n                        block = tableWidgets[tableWidgets.length - 2];\n                    }\n                    var removeTable = true;\n                    //Move Next RowWidge to next page\n                    if (moveRowToNextTable && rowWidgets.length === 1) {\n                        var prev = this.alignBlockElement(row);\n                        if (!isNullOrUndefined(prev.node)) {\n                            var previousRow = prev.node;\n                            if (previousRow instanceof TableRowWidget\n                                && previousRow.indexInOwner === 0) {\n                                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                                    tableWidgets.pop();\n                                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                                    tableWidget.height = 0;\n                                }\n                            }\n                            else if (prev.node instanceof ParagraphWidget) {\n                                var previousWidget = this.splitParagraph(prev.node, parseInt(prev.position.index, 10));\n                                block = previousWidget;\n                                if (tableWidgets.length > 1 && tableWidgets[tableWidgets.length - 1].childWidgets.length === 0) {\n                                    tableWidgets.pop();\n                                    tableWidget = tableWidgets[tableWidgets.length - 1];\n                                }\n                                removeTable = false;\n                            }\n                            if (previousRow instanceof TableRowWidget) {\n                                isTableFirstRow = previousRow.indexInOwner === 0;\n                                rowToMove = previousRow;\n                                if (!rowToMove.ownerTable.equals(row.ownerTable)) {\n                                    block = rowToMove.ownerTable;\n                                    removeTable = false;\n                                }\n                            }\n                            keepNext = true;\n                        }\n                    }\n                    bodyWidget = this.moveBlocksToNextPage(block instanceof ParagraphWidget ? block.previousWidget :\n                        (keepNext && isTableFirstRow) ? !isNullOrUndefined(block.previousWidget) ? block.previousWidget : block : block, keepNext);\n                    var curretTable = tableWidgets[tableWidgets.length - 1];\n                    //Move Next RowWidge to next page\n                    if (moveRowToNextTable && removeTable) {\n                        if (rowToMove.index === 0 && curretTable.containerWidget && curretTable.containerWidget.childWidgets.indexOf(curretTable) !== -1) {\n                            curretTable.containerWidget.childWidgets.splice(curretTable.containerWidget.childWidgets.indexOf(curretTable), 1);\n                        }\n                    }\n                    if (removeTable) {\n                        if (bodyWidget.childWidgets.indexOf(curretTable) !== -1) {\n                            bodyWidget.childWidgets.splice(bodyWidget.childWidgets.indexOf(curretTable), 1);\n                        }\n                        bodyWidget.childWidgets.unshift(curretTable);\n                        this.shiftFloatingItemsFromTable(curretTable, bodyWidget);\n                    }\n                    curretTable.containerWidget = bodyWidget;\n                    if (moveRowToNextTable && rowToMove.index > 0 || rowWidgets.length > 1) {\n                        var currentRow = !moveRowToNextTable ? rowWidgets[rowWidgets.length - 2] : rowWidgets[rowWidgets.length - 1];\n                        if (keepNext) {\n                            currentRow = rowToMove;\n                        }\n                        this.moveNextWidgetsToTable(tableWidgets, currentRow, !moveRowToNextTable);\n                        rowToMove = row;\n                    }\n                    if (keepNext) {\n                        this.updateClientPositionForBlock(removeTable ? curretTable : block, row);\n                    }\n                    moveRowToNextTable = false;\n                    var insertHeaderRow = false;\n                    var bottom = this.documentHelper.viewer.clientArea.bottom - tableRowWidget.bottomBorderWidth - cellSpacing;\n                    if (rowToMove.ownerTable.header) {\n                        //Checks if the splitted row widget can fit in along with header row.\n                        //Based on the result header row is repeated and infinite looping of not fitted state is avoided.\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = this.viewer.clientArea.y + tableWidget.headerHeight;\n                        this.updateChildLocationForRow(splittedWidget.y, splittedWidget);\n                        insertHeaderRow = this.isFirstLineFitForRow(bottom, splittedWidget);\n                    }\n                    if (insertHeaderRow && rowToMove.ownerTable.header && !keepNext) {\n                        if (viewer instanceof PageLayoutViewer) {\n                            tableRowWidget.bodyWidget.page.repeatHeaderRowTableWidget = true;\n                            isRepeatRowHeader = true;\n                        }\n                        //Updates table widgets location.\n                        viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n                        //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = tableWidget.y + rowToMove.ownerTable.headerHeight;\n                        // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n                        var cellspace = cellSpacing / 2;\n                        this.updateChildLocationForRow(tableWidget.y + rowToMove.ownerTable.headerHeight - cellspace, splittedWidget, tableWidget.containerWidget);\n                    }\n                    else {\n                        //Updates table widgets location.\n                        viewer.updateClientAreaForBlock(rowToMove.ownerTable, true, tableWidgets);\n                        //Update splitted row widget location. if header is repeated update the y position of splitted widget to header height.\n                        if (splittedWidget.bodyWidget.sectionFormat.columns.length > 1) {\n                            var clientArea = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n                            var clientActiveArea = new Rect(this.viewer.clientActiveArea.x, this.viewer.clientActiveArea.y, this.viewer.clientActiveArea.width, this.viewer.clientActiveArea.height);\n                            splittedWidget.x = this.viewer.clientActiveArea.x;\n                            splittedWidget.y = this.viewer.clientActiveArea.y;\n                            var topMargin = this.getMaxTopCellMargin(splittedWidget);\n                            var bottomMargin = this.getMaxBottomCellMargin(splittedWidget);\n                            for (var i = 0; i < splittedWidget.childWidgets.length; i++) {\n                                var cell = splittedWidget.childWidgets[i];\n                                cell.height = 0;\n                                this.addTableCellWidget(cell, this.viewer.clientActiveArea, topMargin + splittedWidget.topBorderWidth, bottomMargin + splittedWidget.bottomBorderWidth);\n                                this.viewer.updateClientAreaForCell(cell, true);\n                                for (var j = 0; j < cell.childWidgets.length; j++) {\n                                    var block_2 = cell.childWidgets[j];\n                                    viewer.updateClientAreaForBlock(block_2, true);\n                                    block_2.containerWidget = cell;\n                                    this.layoutBlock(block_2, 0);\n                                    viewer.updateClientAreaForBlock(block_2, false);\n                                }\n                                this.viewer.updateClientAreaForCell(cell, false);\n                            }\n                            this.viewer.clientActiveArea = clientActiveArea;\n                            this.viewer.clientArea = clientArea;\n                        }\n                        splittedWidget.x = splittedWidget.x;\n                        splittedWidget.y = tableWidget.y;\n                        // let cellspace: number = viewer instanceof PageLayoutViewer ? cellspacing / 2 : cellspacing;\n                        var cellspace = cellSpacing / 2;\n                        this.updateChildLocationForRow(tableWidget.y - cellspace, splittedWidget, tableWidget.containerWidget, true);\n                    }\n                    if (removeTable && this.shiftedFloatingItemsFromTable.length > 0) {\n                        for (var i = 0; i < this.shiftedFloatingItemsFromTable.length; i++) {\n                            var floatingItem = this.shiftedFloatingItemsFromTable[i];\n                            var position = this.getFloatingItemPoints(floatingItem);\n                            floatingItem.y = position.y;\n                            floatingItem.x = position.x;\n                            if (floatingItem instanceof ShapeElementBox) {\n                                this.updateChildLocationForCellOrShape(floatingItem.y, floatingItem);\n                            }\n                        }\n                        this.shiftedFloatingItemsFromTable = [];\n                    }\n                }\n                isLastRow = false;\n            }\n            if (isHeader) {\n                if (row.ownerTable.continueHeader) {\n                    row.ownerTable.header = true;\n                    row.ownerTable.headerHeight = rowHeight + row.ownerTable.headerHeight;\n                }\n                headerRow = this.getHeader(row.ownerTable);\n                if (!isNullOrUndefined(headerRow) && row.index === headerRow.index) {\n                    var headerHeight = this.getHeaderHeight(row.ownerTable, row, rowWidgets);\n                    if (headerHeight > row.ownerTable.headerHeight || headerHeight > row.ownerTable.headerHeight) {\n                        row.ownerTable.headerHeight = headerHeight;\n                    }\n                    if (row.ownerTable.headerHeight > viewer.clientArea.height) {\n                        row.ownerTable.header = false;\n                        row.ownerTable.continueHeader = false;\n                        row.ownerTable.headerHeight = 0;\n                        var pages = this.documentHelper.pages;\n                        for (var i = 0; i < pages.length; i++) {\n                            if (pages[i].repeatHeaderRowTableWidget) {\n                                pages[i].repeatHeaderRowTableWidget = false;\n                            }\n                        }\n                    }\n                }\n            }\n            isMultiColumnSplit = false;\n            if (tableWidgets.length > 2 && row.ownerTable.header && tableRowWidget.height < viewer.clientActiveArea.bottom &&\n                !viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget) {\n                viewer.documentHelper.currentRenderingPage.repeatHeaderRowTableWidget = true;\n            }\n        }\n    };\n    Layout.prototype.getHeader = function (table) {\n        var header = undefined;\n        var flag = true;\n        table = table.getSplitWidgets()[0];\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.rowFormat.isHeader) {\n                header = row;\n            }\n            else {\n                flag = false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return header;\n    };\n    Layout.prototype.getHeaderHeight = function (ownerTable, row, rowCollection) {\n        var height = 0;\n        if (row.ownerTable.childWidgets.length > 0 && ownerTable.childWidgets[0].rowFormat.isHeader) {\n            for (var i = 0; i < ownerTable.childWidgets.length; i++) {\n                var row_1 = ownerTable.childWidgets[i];\n                if (row_1.rowFormat.isHeader) {\n                    height = height + row_1.height;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.getHeaderHeightForSpannedRow = function (table) {\n        var height = 0;\n        var rowSpan = 1;\n        var headerRow = this.getHeader(table);\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.rowFormat.isHeader) {\n                height = height + row.height;\n                if (row == headerRow) {\n                    for (var j = 0; j < headerRow.childWidgets.length; j++) {\n                        var cell = headerRow.childWidgets[j];\n                        rowSpan = Math.max(rowSpan, cell.cellFormat.rowSpan);\n                    }\n                    if (rowSpan > 1 && i + rowSpan < table.childWidgets.length) {\n                        for (var k = 1; k < rowSpan; k++) {\n                            var nextRow = table.childWidgets[i + k];\n                            if (!isNullOrUndefined(nextRow)) {\n                                height = height + nextRow.height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.updateWidgetToRow = function (cell) {\n        //const viewer: LayoutViewer = this.viewer;\n        //Adds table cell widget to owner row widget.\n        var rowWidget = cell.ownerRow;\n        // let cellLeft: number = rowWidget.x;\n        // if (rowWidget.childWidgets.length > 0) {\n        //     const lastWidget: TableCellWidget = rowWidget.childWidgets[rowWidget.childWidgets.length - 1] as TableCellWidget;\n        //     cellLeft = lastWidget.x + lastWidget.width + lastWidget.margin.right;\n        // }\n        // rowWidget.childWidgets.push(cell);\n        cell.containerWidget = rowWidget;\n        //If the row height is set as Atleast then height is set to atleast height for the first cell of the row.\n        if (!isNullOrUndefined(cell.ownerRow) && cell.ownerRow.rowFormat.heightType !== 'Exactly' && HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height) > 0 && cell.cellIndex === 0) {\n            rowWidget.height = rowWidget.height + HelperMethods.convertPointToPixel(cell.ownerRow.rowFormat.height);\n        }\n        //Add condition not cell merged vertically.\n        if (cell.cellFormat.rowSpan === 1) {\n            var cellHeight = void 0;\n            if (rowWidget.rowFormat.heightType === 'Exactly') {\n                cellHeight = cell.height + cell.margin.bottom;\n            }\n            else {\n                cellHeight = cell.height + cell.margin.top + cell.margin.bottom;\n            }\n            if (rowWidget.height - HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing) < cellHeight) {\n                rowWidget.height = cellHeight + HelperMethods.convertPointToPixel(cell.ownerTable.tableFormat.cellSpacing);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForRowWidget = function (viewer, isUpdateVerticalPosition, tableCollection, rowCollection, rowWidget, isLayouted, endRowWidget, isInitialLayout) {\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellspacing = 0;\n            var cellWidget = undefined;\n            var childWidget = rowWidget.childWidgets[i];\n            // if (childWidget instanceof TableCellWidget) {\n            cellWidget = childWidget;\n            // }\n            var rowSpan = 1;\n            rowSpan = cellWidget.cellFormat.rowSpan;\n            cellspacing = HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing);\n            if (rowSpan > 1) {\n                var currentRowWidgetIndex = rowWidget.containerWidget.childWidgets.indexOf(rowWidget);\n                var rowSpanWidgetEndIndex = currentRowWidgetIndex + rowSpan - 1 - (rowWidget.index - cellWidget.rowIndex);\n                if (!isInitialLayout && (viewer.clientArea.bottom < cellWidget.y + cellWidget.height + cellWidget.margin.bottom\n                    || rowSpanWidgetEndIndex >= currentRowWidgetIndex + 1) && (rowCollection.length === 1\n                    || rowCollection.length >= 1 && rowWidget === rowCollection[rowCollection.length - 1])) {\n                    this.splitSpannedCellWidget(cellWidget, tableCollection, rowCollection, viewer);\n                }\n                var spanEndRowWidget = rowWidget;\n                if (rowSpanWidgetEndIndex > 0) {\n                    if (rowSpanWidgetEndIndex < rowWidget.containerWidget.childWidgets.length) {\n                        var childWidget_1 = rowWidget.containerWidget.childWidgets[rowSpanWidgetEndIndex];\n                        if (childWidget_1 instanceof TableRowWidget) {\n                            spanEndRowWidget = childWidget_1;\n                            if (spanEndRowWidget === endRowWidget) {\n                                spanEndRowWidget = rowWidget;\n                            }\n                        }\n                    }\n                    else {\n                        /* eslint-disable-next-line max-len */\n                        spanEndRowWidget = rowWidget.containerWidget.childWidgets[rowWidget.containerWidget.childWidgets.length - 1];\n                    }\n                }\n                if (cellWidget.y + cellWidget.height + cellWidget.margin.bottom < spanEndRowWidget.y + spanEndRowWidget.height) {\n                    cellWidget.height = spanEndRowWidget.y + spanEndRowWidget.height - cellWidget.y - cellWidget.margin.bottom;\n                    /* eslint-disable-next-line max-len */\n                }\n                else if (isLayouted && spanEndRowWidget && (spanEndRowWidget.y !== 0 && spanEndRowWidget.height !== 0) && cellWidget.y + cellWidget.height + cellWidget.margin.bottom > spanEndRowWidget.y + spanEndRowWidget.height) {\n                    if (spanEndRowWidget.rowFormat.heightType !== 'Exactly' || (spanEndRowWidget.rowFormat.heightType === 'Exactly' && spanEndRowWidget.rowFormat.height > cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y)) {\n                        spanEndRowWidget.height = cellWidget.y + cellWidget.height + cellWidget.margin.bottom - spanEndRowWidget.y;\n                    }\n                    else {\n                        cellWidget.height = (spanEndRowWidget.y - cellWidget.y) + spanEndRowWidget.height;\n                    }\n                    //Update the next rowlayout widget location. Reason for the updation is previous row height is updated when cell height is greater. So already layouted next row location has to be updated again.\n                    // if (rowWidget === spanEndRowWidget && rowWidget.nextWidget instanceof TableRowWidget) {\n                    //     let nextRow: TableRowWidget = rowWidget.nextWidget as TableRowWidget;\n                    //     // Need to update on this further\n                    //     // if (viewer.renderedElements.containsKey(nextRow)) {\n                    //     //     let nextWidget: TableRowWidget[] = viewer.renderedElements.get(nextRow) as TableRowWidget[];\n                    //     //     if (nextWidget.length > 0) {\n                    //     //         nextWidget[0].x = nextWidget[0].x;\n                    //     //         nextWidget[0].y = rowWidget.y + rowWidget.height;\n                    //     //     }\n                    //     // }\n                    // }\n                }\n            }\n            else {\n                if (cellspacing > 0) {\n                    // In the Case of tableWidget is greater than one and rowWidget is start at the Top Position of the page.\n                    // In such case we have update the cell height with half of cell spacing.\n                    // Remaining cases we have to update the entire hight\n                    if (tableCollection.length > 1 && rowWidget.y === viewer.clientArea.y && viewer instanceof PageLayoutViewer) {\n                        cellspacing = cellspacing / 2;\n                    }\n                }\n                cellWidget.height = rowWidget.height - cellWidget.margin.top - cellWidget.margin.bottom - cellspacing;\n            }\n            this.updateHeightForCellWidget(viewer, tableCollection, rowCollection, cellWidget);\n            var widget = rowWidget.containerWidget;\n            while (widget.containerWidget instanceof Widget) {\n                widget = widget.containerWidget;\n            }\n            var page = undefined;\n            if (widget instanceof BodyWidget) {\n                page = widget.page;\n            }\n            /* eslint-disable-next-line max-len */\n            if ((viewer instanceof PageLayoutViewer && viewer.visiblePages.indexOf(page) !== -1) || isUpdateVerticalPosition) {\n                this.updateCellVerticalPosition(cellWidget, false, cellWidget.ownerTable.isInsideTable);\n            }\n            //Renders the current table row contents, after relayout based on editing.\n            // if (viewer instanceof PageLayoutViewer && (viewer as PageLayoutViewer).visiblePages.indexOf(page) !== -1) {\n            //     //Added proper undefined condition check for Asynchronous operation.\n            //     if (!isNullOrUndefined(rowWidget.tableRow) && !isNullOrUndefined(rowWidget.tableRow.rowFormat)) {\n            //         this.viewer.updateScrollBars();\n            //         //this.render.renderTableCellWidget(page, cellWidget);\n            //     }\n            // }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForCellWidget = function (viewer, tableWidget, rowCollection, cellWidget) {\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof TableWidget) {\n                this.updateHeightForTableWidget(tableWidget, rowCollection, cellWidget.childWidgets[i]);\n            }\n        }\n    };\n    Layout.prototype.getRowHeight = function (row, rowCollection) {\n        var height = 0;\n        if (row.rowFormat.heightType === 'Exactly') {\n            height = row.rowFormat.height;\n        }\n        else {\n            for (var i = 0; i < rowCollection.length; i++) {\n                if (rowCollection[i] instanceof TableRowWidget) {\n                    height = rowCollection[i].height + height;\n                }\n            }\n            height = Math.max(height, row.rowFormat.height);\n        }\n        return height;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.splitSpannedCellWidget = function (cellWidget, tableCollection, rowCollection, viewer) {\n        /* eslint-disable-next-line max-len */\n        var splittedCell = this.getSplittedWidget(viewer.clientArea.bottom, false, tableCollection, rowCollection, cellWidget, undefined, undefined, undefined, undefined, true);\n        if (!isNullOrUndefined(splittedCell)) {\n            //Adds the splitted contents of a vertical merged cell, in order preserve in next page.\n            this.documentHelper.splittedCellWidgets.push(splittedCell);\n            splittedCell.isSplittedCell = true;\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.insertSplittedCellWidgets = function (viewer, tableCollection, rowWidget, previousRowIndex) {\n        if (!isNullOrUndefined(rowWidget)) {\n            var left = rowWidget.x;\n            var tableWidth = 0;\n            var cellspace = 0;\n            var linestyle = false;\n            tableWidth = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableHolder.tableWidth);\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                var cellWidget = rowWidget.childWidgets[i];\n                var isRightStyleNone = (cellWidget.cellFormat.borders.right.lineStyle === 'None');\n                cellspace = !isNullOrUndefined(cellWidget.ownerTable) && !isNullOrUndefined(cellWidget.ownerTable.tableFormat) ? HelperMethods.convertPointToPixel(cellWidget.ownerTable.tableFormat.cellSpacing) : 0;\n                if (Math.round(left) < Math.round(cellWidget.x - cellWidget.margin.left - cellspace)) {\n                    if (this.insertRowSpannedWidget(rowWidget, viewer, left, i)) {\n                        i--;\n                        continue;\n                    }\n                    // Bug 871725: Empty cell widget must be inserted if the table split into next page.\n                    if (tableCollection.length == 1) {\n                        break;\n                    }\n                    var length_1 = rowWidget.childWidgets.length;\n                    this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i, previousRowIndex);\n                    if (length_1 < rowWidget.childWidgets.length) {\n                        i--;\n                        continue;\n                    }\n                }\n                left += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n                if (cellspace > 0 || cellWidget.columnIndex === cellWidget.ownerTable.tableHolder.columns.length - 1 ||\n                    cellWidget.index === cellWidget.containerWidget.childWidgets.length - 1) {\n                    if (!cellWidget.ownerTable.tableFormat.allowAutoFit) {\n                        var leftBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellLeftBorder(cellWidget).getLineWidth());\n                        var rightBorderWidth = HelperMethods.convertPointToPixel(TableCellWidget.getCellRightBorder(cellWidget).getLineWidth());\n                        cellWidget.rightBorderWidth = !cellWidget.ownerTable.isBidiTable ? rightBorderWidth : leftBorderWidth;\n                        left += cellWidget.rightBorderWidth;\n                    }\n                    if (!this.isInsertTable()) {\n                        linestyle = this.checkPreviousMargins(cellWidget.ownerTable);\n                    }\n                }\n                left -= (isRightStyleNone && !linestyle) ? 0 : (cellWidget.rightBorderWidth);\n                if (i === rowWidget.childWidgets.length - 1 && Math.round(left) < Math.round(rowWidget.x + tableWidth)) {\n                    if (this.insertRowSpannedWidget(rowWidget, viewer, left, i + 1)) {\n                        continue;\n                    }\n                    this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, i + 1, previousRowIndex);\n                    continue;\n                }\n            }\n            // Special case: when the child widgets of row is equal to 0 then the splitted widgets in the viewer is added in the table row widgets.\n            /* eslint-disable-next-line max-len */\n            if ((isNullOrUndefined(rowWidget.childWidgets) || rowWidget.childWidgets.length === 0) && this.documentHelper.splittedCellWidgets.length > 0) {\n                for (var j = 0; j < this.documentHelper.splittedCellWidgets.length; j++) {\n                    var widget = this.documentHelper.splittedCellWidgets[j];\n                    if (Math.round(left) <= Math.round(widget.x - widget.margin.left)) {\n                        if (this.insertRowSpannedWidget(rowWidget, viewer, left, j)) {\n                            j--;\n                            continue;\n                        }\n                        var count = rowWidget.childWidgets.length;\n                        this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j, previousRowIndex);\n                        if (count < rowWidget.childWidgets.length) {\n                            j--;\n                            continue;\n                        }\n                    }\n                    left += widget.margin.left + widget.width + widget.margin.right;\n                    if (j === rowWidget.childWidgets.length - 1 && Math.round(left) <\n                        Math.round(rowWidget.x + tableWidth)) {\n                        if (this.insertRowSpannedWidget(rowWidget, viewer, left, j + 1)) {\n                            continue;\n                        }\n                        this.insertEmptySplittedCellWidget(rowWidget, tableCollection, left, j + 1, previousRowIndex);\n                        continue;\n                    }\n                }\n            }\n            if (this.documentHelper.splittedCellWidgets.length > 0) {\n                this.documentHelper.splittedCellWidgets = [];\n            }\n        }\n    };\n    Layout.prototype.insertRowSpannedWidget = function (rowWidget, viewer, left, index) {\n        var cellSpacing = 0;\n        if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            cellSpacing = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n        }\n        for (var i = 0; i < this.documentHelper.splittedCellWidgets.length; i++) {\n            var splittedCell = this.documentHelper.splittedCellWidgets[i];\n            if (Math.round(left) === Math.round(splittedCell.x - splittedCell.margin.left)) {\n                rowWidget.childWidgets.splice(index, 0, splittedCell);\n                splittedCell.containerWidget = rowWidget;\n                if (splittedCell.height > rowWidget.height) {\n                    rowWidget.height = splittedCell.height;\n                }\n                //If the splitted cell location differs from expected location update the location of row child widgets.\n                if (splittedCell.y !== rowWidget.y + splittedCell.margin.top + cellSpacing) {\n                    this.updateChildLocationForRow(rowWidget.y, rowWidget);\n                }\n                this.documentHelper.splittedCellWidgets.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.insertEmptySplittedCellWidget = function (currentRow, tableCollection, left, index, previousRowIndex) {\n        var tableWidget = tableCollection[tableCollection.length - 1];\n        var previousRow;\n        for (var j = tableCollection.length - 1; j >= 0; j--) {\n            var table = tableCollection[j];\n            for (var z = table.childWidgets.length - 1; z >= 0; z--) {\n                var row = table.childWidgets[z];\n                if (row.index === previousRowIndex) {\n                    previousRow = row;\n                    break;\n                }\n            }\n        }\n        if (previousRow) {\n            tableWidget = previousRow.ownerTable;\n            previousRowIndex = previousRow.indexInOwner;\n        }\n        for (var i = previousRowIndex; i >= 0; i--) {\n            var rowWidget = tableWidget.childWidgets[i];\n            var previousLeft = rowWidget.x;\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                var rowSpan = 1;\n                var cellWidget = rowWidget.childWidgets[j];\n                if (Math.round(left) === Math.round(previousLeft)) {\n                    rowSpan = (isNullOrUndefined(cellWidget) || isNullOrUndefined(cellWidget.cellFormat)) ? rowSpan :\n                        cellWidget.cellFormat.rowSpan;\n                    if (rowSpan > 1 && (rowWidget.firstChild.columnIndex === 0)) {\n                        if (this.isVerticalMergedCellContinue(currentRow) && !isNullOrUndefined(currentRow.previousRenderedWidget) && currentRow.previousRenderedWidget instanceof TableRowWidget && this.isVerticalMergedCellContinue(currentRow.previousRenderedWidget) && currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height < cellWidget.y + cellWidget.height) {\n                            var splittedCell = this.getSplittedWidget(currentRow.previousRenderedWidget.y + currentRow.previousRenderedWidget.height, true, tableCollection, undefined, cellWidget, undefined, undefined, undefined, undefined, true);\n                            currentRow.childWidgets.splice(index, 0, splittedCell);\n                            splittedCell.containerWidget = currentRow;\n                            this.updateChildLocationForRow(currentRow.y, currentRow);\n                            return;\n                        }\n                        else {\n                            //if (!isNullOrUndefined(currentRow.childWidgets[index])) {\n                            var emptyCellWidget = this.createCellWidget(cellWidget);\n                            //if (emptyCellWidget.x < (currentRow.childWidgets[index] as TableCellWidget).x) {\n                            currentRow.childWidgets.splice(index, 0, emptyCellWidget);\n                            emptyCellWidget.containerWidget = currentRow;\n                            this.updateChildLocationForRow(currentRow.y, currentRow);\n                            return;\n                        }\n                        //}\n                        //}\n                    }\n                }\n                previousLeft += cellWidget.margin.left + cellWidget.width + cellWidget.margin.right;\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.getSplittedWidget = function (bottom, splitMinimalWidget, tableCollection, rowCollection, cellWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, nestedCount, splitSpannedCellWidget) {\n        var splittedWidget = undefined;\n        var footnoteHeight = 0;\n        if (isMultiColumnSplit || cellWidget.y + cellWidget.height > bottom - this.footHeight - cellWidget.margin.bottom) {\n            for (var i = 0; i < cellWidget.ownerRow.childWidgets.length; i++) {\n                var tableCellWidget = cellWidget.ownerRow.childWidgets[i];\n                if (tableCellWidget.y + tableCellWidget.height < bottom - this.footHeight - tableCellWidget.margin.bottom) {\n                    for (var j = 0; j < tableCellWidget.childWidgets.length; j++) {\n                        if (tableCellWidget.childWidgets[j] instanceof ParagraphWidget) {\n                            var paragraphWidget = tableCellWidget.childWidgets[j];\n                            for (var k = 0; k < paragraphWidget.childWidgets.length; k++) {\n                                var lineWidget = paragraphWidget.childWidgets[k];\n                                var height = this.getFootNoteHeightInLine(lineWidget);\n                                this.existFootnoteHeight += height;\n                                footnoteHeight += height;\n                            }\n                        }\n                    }\n                }\n            }\n            var count = 0;\n            if (cellWidget.ownerTable.isInsideTable) {\n                count = nestedCount;\n            }\n            var isCellSplit = false;\n            for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n                    var paragraphWidget = cellWidget.childWidgets[i];\n                    var splittedPara = this.getSplittedWidgetForPara(bottom - cellWidget.margin.bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isCellSplit);\n                    if (isMultiColumnSplit) {\n                        count = count + paragraphWidget.childWidgets.length;\n                    }\n                    if (!isNullOrUndefined(splittedPara)) {\n                        isCellSplit = true;\n                        if (i === 0 && splittedPara === paragraphWidget && !splitSpannedCellWidget) {\n                            if (splitMinimalWidget && this.isRelayoutneed) {\n                                splittedWidget = this.createCellWidget(cellWidget);\n                                return splittedWidget;\n                            }\n                            //Returns if the whole content of the cell does not fit in current page.\n                            return cellWidget;\n                        }\n                        if (cellWidget.childWidgets.indexOf(splittedPara) !== -1) {\n                            cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedPara), 1);\n                            i--;\n                        }\n                        cellWidget.height -= splittedPara.height;\n                        if (isNullOrUndefined(splittedWidget)) {\n                            //Creates new widget, to hold the splitted contents.\n                            splittedWidget = this.createCellWidget(cellWidget);\n                        }\n                        splittedWidget.height += splittedPara.height;\n                        splittedWidget.childWidgets.push(splittedPara);\n                        splittedPara.containerWidget = splittedWidget;\n                    }\n                }\n                else {\n                    var tableWidget = cellWidget.childWidgets[i];\n                    var tableCol = [tableWidget];\n                    //Check for nested table.\n                    if (isMultiColumnSplit || bottom - cellWidget.margin.bottom < tableWidget.y + tableWidget.height) {\n                        var tableHeight = tableWidget.height;\n                        /* eslint-disable-next-line max-len */\n                        var splittedTable = this.getSplittedWidgetForTable(bottom - cellWidget.margin.bottom, tableCol, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n                        if (isNullOrUndefined(splittedTable) &&\n                            !(tableWidget.childWidgets[0].rowFormat.allowBreakAcrossPages)) {\n                            splittedTable = tableWidget;\n                        }\n                        if (!isNullOrUndefined(splittedTable)) {\n                            if (i === 0 && splittedTable === tableWidget) {\n                                //Returns if the whole table does not fit in current page.\n                                return cellWidget;\n                            }\n                            if (cellWidget.childWidgets.indexOf(splittedTable) !== -1) {\n                                cellWidget.childWidgets.splice(cellWidget.childWidgets.indexOf(splittedTable), 1);\n                                i--;\n                                cellWidget.height -= splittedTable.height;\n                            }\n                            else {\n                                cellWidget.height -= tableHeight - tableWidget.height;\n                            }\n                            if (isNullOrUndefined(splittedWidget)) {\n                                //Creates new widget, to hold the splitted contents.\n                                splittedWidget = this.createCellWidget(cellWidget);\n                            }\n                            splittedWidget.height += splittedTable.height;\n                            splittedWidget.childWidgets.push(splittedTable);\n                            splittedTable.containerWidget = splittedWidget;\n                        }\n                    }\n                }\n            }\n        }\n        this.existFootnoteHeight -= footnoteHeight;\n        if (isNullOrUndefined(splittedWidget) && splitMinimalWidget && this.isRelayoutneed) {\n            //Creates new widget, to hold the splitted contents.\n            splittedWidget = this.createCellWidget(cellWidget);\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.getListLevelPattern = function (value) {\n        switch (value) {\n            case 0:\n                return 'Arabic';\n            case 1:\n                return 'LowLetter';\n            case 2:\n                return 'LowRoman';\n            case 3:\n                return 'UpLetter';\n            case 4:\n                return 'UpRoman';\n            case 5:\n                return 'Ordinal';\n            case 6:\n                return 'Number';\n            case 7:\n                return 'OrdinalText';\n            case 8:\n                return 'LeadingZero';\n            case 9:\n                return 'Bullet';\n            case 10:\n                return 'FarEast';\n            case 11:\n                return 'Special';\n            default:\n                return 'None';\n        }\n    };\n    Layout.prototype.createCellWidget = function (cell) {\n        var cellWidget = new TableCellWidget();\n        cellWidget.cellFormat = cell.cellFormat;\n        cellWidget.index = cell.index;\n        cellWidget.rowIndex = cell.rowIndex;\n        cellWidget.columnIndex = cell.columnIndex;\n        cellWidget.containerWidget = cell.containerWidget;\n        this.updateWidgetLocation(cell, cellWidget);\n        cellWidget.margin = cell.margin;\n        cellWidget.leftBorderWidth = cell.leftBorderWidth;\n        cellWidget.rightBorderWidth = cell.rightBorderWidth;\n        return cellWidget;\n    };\n    Layout.prototype.createTableWidget = function (table) {\n        var newTable = new TableWidget();\n        if (table.header) {\n            newTable.header = table.header;\n            var height = this.getHeaderHeightForSpannedRow(table);\n            newTable.headerHeight = height > table.headerHeight ? height : table.headerHeight;\n        }\n        newTable.index = table.index;\n        newTable.tableFormat = table.tableFormat;\n        newTable.tableHolder = table.tableHolder;\n        newTable.footnoteElement = table.footnoteElement;\n        newTable.isGridUpdated = table.isGridUpdated;\n        newTable.wrapTextAround = table.wrapTextAround;\n        newTable.positioning = table.positioning;\n        newTable.isContainInsideTable = table.isContainInsideTable;\n        newTable.isBidiTable = table.isBidiTable;\n        return newTable;\n    };\n    Layout.prototype.getSplittedWidgetForPara = function (bottom, paragraphWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count, isCellSplit) {\n        var lineBottom = paragraphWidget.y;\n        var splittedWidget = undefined;\n        var moveEntireBlock = false;\n        for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n            var lineWidget = paragraphWidget.childWidgets[i];\n            var height = this.getFootNoteHeightInLine(lineWidget);\n            height += this.existFootnoteHeight;\n            if (!isNullOrUndefined(footNoteCollection)) {\n                for (var j = 0; j < footNoteCollection.length; j++) {\n                    height += this.getFootNoteHeight(footNoteCollection[j].bodyWidget);\n                }\n            }\n            var lineHeight = 0;\n            if (lineWidget.children[0] instanceof ShapeBase) {\n                lineHeight = lineWidget.children[0].height;\n            }\n            else {\n                lineHeight = lineWidget.height;\n            }\n            if (!isNullOrUndefined(paragraphWidget.associatedCell) && paragraphWidget.associatedCell.index === 0 && paragraphWidget.index === 0\n                && isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousSplitWidget) && isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousWidget)\n                && paragraphWidget.paragraphFormat.keepWithNext) {\n                moveEntireBlock = true;\n                lineWidget = paragraphWidget.childWidgets[0];\n                return paragraphWidget;\n            }\n            if ((isMultiColumnSplit && count >= lineIndexInCell) || bottom < lineBottom + height + lineHeight || isCellSplit) {\n                if (paragraphWidget.paragraphFormat.keepLinesTogether && (paragraphWidget.index !== 0 ||\n                    (paragraphWidget.index === 0 && !isNullOrUndefined(paragraphWidget.associatedCell.ownerRow.previousWidget)))) {\n                    moveEntireBlock = true;\n                    i = 0;\n                    lineWidget = paragraphWidget.childWidgets[0];\n                }\n                else if (paragraphWidget.paragraphFormat.widowControl) {\n                    if (i === 1) {\n                        moveEntireBlock = true;\n                        i = 0;\n                        lineWidget = paragraphWidget.childWidgets[0];\n                    }\n                }\n                if (i === 0) {\n                    if (lineWidget.paragraph.containerWidget instanceof TableCellWidget && !moveEntireBlock && !isMultiColumnSplit) {\n                        //checks first line of the page is exceed the page height\n                        if (lineWidget.paragraph.containerWidget.y === paragraphWidget.y) {\n                            lineBottom += lineWidget.height;\n                            continue;\n                        }\n                    }\n                    splittedWidget = paragraphWidget;\n                    break;\n                }\n                if (paragraphWidget.childWidgets.indexOf(lineWidget) !== -1) {\n                    paragraphWidget.childWidgets.splice(paragraphWidget.childWidgets.indexOf(lineWidget), 1);\n                    i--;\n                }\n                paragraphWidget.height -= lineWidget.height;\n                if (isNullOrUndefined(splittedWidget)) {\n                    //Creates new widget, to hold the splitted contents.\n                    splittedWidget = new ParagraphWidget();\n                    splittedWidget.characterFormat = paragraphWidget.characterFormat;\n                    splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n                    splittedWidget.index = paragraphWidget.index;\n                    this.updateWidgetLocation(paragraphWidget, splittedWidget);\n                    splittedWidget.height = lineWidget.height;\n                }\n                else {\n                    splittedWidget.height += lineWidget.height;\n                }\n                splittedWidget.childWidgets.push(lineWidget);\n                lineWidget.paragraph = splittedWidget;\n            }\n            this.getFootnoteFromLine(lineWidget, footNoteCollection);\n            lineBottom += lineWidget.height;\n            count++;\n        }\n        // this.updateLinearIndex(splittedWidget);\n        return splittedWidget;\n    };\n    Layout.prototype.getSplittedWidgetForTable = function (bottom, tableCollection, tableWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) {\n        var rowBottom = tableWidget.y;\n        var splittedWidget = undefined;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = undefined;\n            var childWidget = tableWidget.childWidgets[i];\n            // if (childWidget instanceof TableRowWidget) {\n            rowWidget = childWidget;\n            // }\n            var rowHeight = rowWidget.height;\n            if (isMultiColumnSplit || bottom < rowBottom + rowHeight || !isNullOrUndefined(splittedWidget)) {\n                //ToDo: Check whether row included in vertical merge or AllowRowSplitbyPage is true, if so split row.\n                //Checks if atleast first line fits in the client area.\n                var splittedRow = undefined;\n                var allowRowBreakAcrossPages = true;\n                if (!isNullOrUndefined(rowWidget) && !isNullOrUndefined(rowWidget.rowFormat)) {\n                    allowRowBreakAcrossPages = rowWidget.rowFormat.allowBreakAcrossPages;\n                }\n                if (allowRowBreakAcrossPages) {\n                    /* eslint-disable-next-line max-len */\n                    splittedRow = (isNullOrUndefined(splittedWidget) && this.isFirstLineFitForRow(bottom, rowWidget)) ? this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count) : rowWidget;\n                }\n                else {\n                    if ((isNullOrUndefined(tableWidget.containerWidget.containerWidget.previousWidget)\n                        && this.isFirstLineFitForRow(bottom, rowWidget))\n                        || (tableWidget.isInsideTable\n                            && !(tableWidget.containerWidget.containerWidget.rowFormat.allowBreakAcrossPages))) {\n                        splittedRow = this.getSplittedWidgetForRow(bottom, tableCollection, [rowWidget], rowWidget, footNoteCollection, lineIndexInCell, isMultiColumnSplit, count);\n                    }\n                    else if (!isNullOrUndefined(tableWidget.containerWidget.containerWidget.previousWidget)) {\n                        splittedRow = rowWidget;\n                    }\n                }\n                if (!isNullOrUndefined(splittedRow)) {\n                    if (i === 0 && splittedRow === rowWidget) {\n                        //Returns if the whole table does not fit in current page.\n                        return tableWidget;\n                    }\n                    if (tableWidget.childWidgets.indexOf(splittedRow) !== -1) {\n                        tableWidget.childWidgets.splice(tableWidget.childWidgets.indexOf(splittedRow), 1);\n                        i--;\n                        tableWidget.height -= splittedRow.height;\n                    }\n                    else {\n                        tableWidget.height -= rowHeight - rowWidget.height;\n                    }\n                    if (isNullOrUndefined(splittedWidget)) {\n                        //Creates new widget, to hold the splitted contents.\n                        splittedWidget = this.createTableWidget(tableWidget);\n                        this.updateWidgetLocation(tableWidget, splittedWidget);\n                        splittedWidget.height = splittedRow.height;\n                    }\n                    else {\n                        splittedWidget.height += splittedRow.height;\n                    }\n                    splittedWidget.childWidgets.push(splittedRow);\n                    splittedRow.containerWidget = splittedWidget;\n                }\n            }\n            rowBottom += rowWidget.height;\n        }\n        return splittedWidget;\n    };\n    Layout.prototype.isFirstLineFitForPara = function (bottom, paraWidget) {\n        var lineWidget = paraWidget.childWidgets[0];\n        var lineHeight = lineWidget.height;\n        var height = this.getFootNoteHeightInLine(lineWidget);\n        height += this.existFootnoteHeight;\n        lineHeight += height;\n        var cellwidget = lineWidget.paragraph.containerWidget;\n        if (paraWidget.paragraphFormat.keepLinesTogether && Math.floor(cellwidget.containerWidget.y) !== this.viewer.clientArea.y) {\n            lineHeight = paraWidget.height;\n        }\n        // let document: WordDocument = undefined;\n        // if (!isNullOrUndefined(lineWidget.paragraph.currentNode) && !isNullOrUndefined(cellwidget.containerWidget)) {\n        //     document = WordDocument.getDocumentOf(lineWidget.paragraph.currentNode);\n        // }\n        //checks first line of the page is exceed the page height\n        if (this.documentHelper.isFirstLineFitInShiftWidgets) {\n            /* eslint-disable-next-line max-len */\n            if (this.viewer.clientActiveArea.y === this.viewer.clientArea.y && paraWidget.y + lineHeight >= bottom) {\n                return true;\n            }\n        }\n        else if (!cellwidget.ownerTable.isInsideTable && cellwidget.containerWidget.y === this.viewer.clientArea.y\n            && paraWidget.y + lineHeight >= bottom) {\n            return true;\n        }\n        return (paraWidget.y + lineHeight <= bottom);\n    };\n    Layout.prototype.isFirstLineFitForTable = function (bottom, tableWidget) {\n        var rowWidget = undefined;\n        var isFit = false;\n        var childWidget = tableWidget.childWidgets[0];\n        // if (childWidget instanceof TableRowWidget) {\n        rowWidget = childWidget;\n        // }\n        if (!isNullOrUndefined(rowWidget)) {\n            isFit = this.isFirstLineFitForRow(bottom, rowWidget);\n        }\n        return isFit;\n    };\n    Layout.prototype.isFirstLineFitForRow = function (bottom, rowWidget) {\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellWidget = rowWidget.childWidgets[i];\n            if (!this.isFirstLineFitForCell(bottom, cellWidget)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Layout.prototype.isFirstLineFitForCell = function (bottom, cellWidget) {\n        if (cellWidget.childWidgets.length === 0) {\n            return true;\n        }\n        if (cellWidget.childWidgets[0] instanceof ParagraphWidget) {\n            var paraWidget = cellWidget.childWidgets[0];\n            return this.isFirstLineFitForPara(bottom - cellWidget.margin.bottom, paraWidget);\n        }\n        else {\n            var tableWidget = cellWidget.childWidgets[0];\n            return this.isFirstLineFitForTable(bottom - cellWidget.margin.bottom, tableWidget);\n        }\n    };\n    Layout.prototype.updateWidgetLocation = function (widget, table) {\n        table.x = widget.x;\n        table.y = widget.y;\n        table.width = widget.width;\n    };\n    Layout.prototype.updateChildLocationForTable = function (top, tableWidget, bodyWidget, updatePosition) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            //rowWidget.x = rowWidget.x;\n            rowWidget.y = top;\n            this.updateChildLocationForRow(top, rowWidget, bodyWidget, updatePosition);\n            top += rowWidget.height;\n        }\n    };\n    Layout.prototype.updateChildLocationForRow = function (top, rowWidget, bodyWidget, updatePosition) {\n        var spacing = 0;\n        if (rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            spacing = HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n        }\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var cellWidget = rowWidget.childWidgets[i];\n            //cellWidget.x = cellWidget.x;\n            cellWidget.index = cellWidget.cellIndex;\n            cellWidget.y = top + cellWidget.margin.top + spacing;\n            this.updateChildLocationForCellOrShape(cellWidget.y, cellWidget, bodyWidget, updatePosition);\n        }\n    };\n    Layout.prototype.updateChildLocationForCellOrShape = function (top, widget, bodyWidget, updatePosition, updateShapeYPosition) {\n        var container = widget;\n        if (widget instanceof ShapeElementBox) {\n            container = widget.textFrame;\n        }\n        for (var i = 0; i < container.childWidgets.length; i++) {\n            var skipHeight = false;\n            if (container.childWidgets[i] instanceof TableWidget && container.childWidgets[i].wrapTextAround\n                && !isNullOrUndefined(container.childWidgets[i + 1]) && container.childWidgets[i + 1].y > container.childWidgets[i].y\n                && container.childWidgets[i + 1].y < (container.childWidgets[i].y + container.childWidgets[i].height)) {\n                skipHeight = true;\n            }\n            if (!isNullOrUndefined(container.childWidgets[i].floatingElements) && container.childWidgets[i].floatingElements.length > 0 && updatePosition) {\n                this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - top;\n                this.viewer.clientActiveArea.y = top;\n            }\n            container.childWidgets[i].x = container.childWidgets[i].x;\n            container.childWidgets[i].y = top;\n            if (widget instanceof ShapeElementBox && widget.textWrappingStyle == \"Inline\" && updateShapeYPosition) {\n                this.updateShapeYPosition(widget);\n            }\n            if (!isNullOrUndefined(bodyWidget) && widget instanceof TableCellWidget && container.childWidgets[i] instanceof ParagraphWidget) {\n                var paragraph = container.childWidgets[i];\n                var prevBodyWidgetFloatingElements = widget.ownerTable.bodyWidget.floatingElements;\n                var isRowMovedToNextTable = false;\n                if (widget.ownerTable.bodyWidget === bodyWidget && !isNullOrUndefined(widget.ownerTable.previousSplitWidget)) {\n                    prevBodyWidgetFloatingElements = widget.ownerTable.previousSplitWidget.bodyWidget.floatingElements;\n                    isRowMovedToNextTable = true;\n                }\n                if (paragraph.floatingElements.length > 0) {\n                    for (var j = 0; j < paragraph.floatingElements.length; j++) {\n                        var element = paragraph.floatingElements[j];\n                        var prevClientActiveAreaX = this.viewer.clientActiveArea.x;\n                        this.viewer.clientActiveArea.x = element.x;\n                        this.layoutShape(element);\n                        this.viewer.clientActiveArea.x = prevClientActiveAreaX;\n                        if (!isNullOrUndefined(paragraph.firstChild)) {\n                            var firstLine = paragraph.childWidgets[0];\n                            for (var k = 0; k < firstLine.children.length; k++) {\n                                var elementBox = firstLine.children[k];\n                                if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle == 'Inline') {\n                                    this.adjustPosition(elementBox, widget.ownerTable.bodyWidget);\n                                    top = paragraph.y;\n                                }\n                            }\n                        }\n                        if (prevBodyWidgetFloatingElements.indexOf(element) > -1 && element.textWrappingStyle !== 'Inline') {\n                            if (!isRowMovedToNextTable) {\n                                bodyWidget.floatingElements.push(element);\n                                var previousBodyWidget = bodyWidget.previousSplitWidget;\n                                if (!isNullOrUndefined(previousBodyWidget) && previousBodyWidget.floatingElements.indexOf(element) !== -1) {\n                                    previousBodyWidget.floatingElements.splice(previousBodyWidget.floatingElements.indexOf(element), 1);\n                                }\n                            }\n                            if (prevBodyWidgetFloatingElements.indexOf(element) !== -1) {\n                                prevBodyWidgetFloatingElements.splice(prevBodyWidgetFloatingElements.indexOf(element), 1);\n                            }\n                        }\n                    }\n                }\n            }\n            if (container.childWidgets[i] instanceof TableWidget) {\n                this.updateChildLocationForTable(top, container.childWidgets[i], bodyWidget, updatePosition);\n            }\n            if (!skipHeight) {\n                top += container.childWidgets[i].height;\n            }\n        }\n    };\n    Layout.prototype.updateCellVerticalPosition = function (cellWidget, isUpdateToTop, isInsideTable) {\n        var containerWidget = cellWidget.ownerTable.containerWidget;\n        if (containerWidget instanceof BlockContainer || containerWidget instanceof TextFrame || isInsideTable) {\n            var displacement = this.getDisplacement(cellWidget, isUpdateToTop);\n            //Update Y position alone for the child widget of cell\n            this.updateCellContentVerticalPosition(cellWidget, displacement, isUpdateToTop);\n        }\n    };\n    Layout.prototype.updateCellContentVerticalPosition = function (cellWidget, displacement, isUpdateToTop) {\n        if (displacement === 0) {\n            return;\n        }\n        var location = cellWidget.y + displacement;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n                var para = cellWidget.childWidgets[i];\n                para.y = location;\n                this.updateShapeInsideCell(para, displacement);\n            }\n            else {\n                this.updateTableWidgetLocation(cellWidget.childWidgets[i], location, isUpdateToTop);\n            }\n            location = location + cellWidget.childWidgets[i].height;\n        }\n    };\n    Layout.prototype.updateShapeInsideCell = function (paragraph, displacement) {\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var floatElement = paragraph.floatingElements[i];\n            floatElement.y += displacement;\n            if (floatElement instanceof ShapeElementBox) {\n                this.updateChildLocationForCellOrShape(floatElement.y, floatElement);\n            }\n        }\n    };\n    Layout.prototype.updateTableWidgetLocation = function (tableWidget, location, isUpdateToTop) {\n        tableWidget.y = location = location + tableWidget.topBorderWidth;\n        var cellSpacing = 0;\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            rowWidget.y = location;\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                var cellWidget = rowWidget.childWidgets[j];\n                cellWidget.y = location + cellWidget.margin.top + cellSpacing;\n                this.updateCellVerticalPosition(cellWidget, isUpdateToTop, true);\n            }\n            location = location + rowWidget.height;\n        }\n        return location;\n    };\n    Layout.prototype.getDisplacement = function (cellWidget, isUpdateToTop) {\n        //Gets the height of row\n        var rowHeight = 0;\n        var rowWidget = cellWidget.containerWidget;\n        var padding = cellWidget.margin.top + cellWidget.margin.bottom;\n        if (!isNullOrUndefined(cellWidget.cellFormat) && cellWidget.cellFormat.rowSpan > 1) {\n            rowHeight = cellWidget.height;\n        }\n        else {\n            rowHeight = ((!isNullOrUndefined(rowWidget) ? rowWidget.height : 0) - padding);\n        }\n        //Gets the height of content within the cell\n        var cellContentHeight = this.getCellContentHeight(cellWidget, true);\n        //Displacement field holds the value which has reduced from rowHeight and cellContentHeight\n        var displacement = 0;\n        if (rowHeight > cellContentHeight && rowHeight <= this.viewer.clientArea.height) {\n            displacement = rowHeight - cellContentHeight;\n            if (cellWidget.cellFormat.verticalAlignment === 'Center') {\n                displacement = displacement / 2;\n            }\n            else if ((cellWidget.cellFormat.verticalAlignment === 'Top' || isUpdateToTop)) {\n                displacement = 0;\n            }\n        }\n        return displacement;\n    };\n    Layout.prototype.getCellContentHeight = function (cellWidget, isDisplacement) {\n        if (isNullOrUndefined(cellWidget.childWidgets)) {\n            return 0;\n        }\n        var contentHeight = 0;\n        var cellY = cellWidget.y;\n        var withShapeContentHeight = 0;\n        var withShapeBottom = 0;\n        var considerShapeHeight = false;\n        var considerAsTop = false;\n        for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            if (cellWidget.childWidgets[i] instanceof ParagraphWidget) {\n                var para = cellWidget.childWidgets[i];\n                contentHeight += cellWidget.childWidgets[i].height;\n                if (!isDisplacement) {\n                    var totalShapeHeight = this.getFloatingItemsHeight(para, cellWidget);\n                    contentHeight += totalShapeHeight;\n                }\n                for (var k = 0; k < para.floatingElements.length; k++) {\n                    considerShapeHeight = true;\n                    var floatElement = para.floatingElements[k];\n                    var textWrappingStyle = floatElement.textWrappingStyle;\n                    var shapeBottom = floatElement.y + floatElement.height;\n                    var paraBottom = para.y + para.height;\n                    if ((cellY + cellWidget.containerWidget.height) > shapeBottom && shapeBottom > withShapeBottom) {\n                        withShapeContentHeight = Math.abs(cellY - shapeBottom);\n                        withShapeBottom = shapeBottom;\n                        considerAsTop = false;\n                    }\n                    else if (shapeBottom > paraBottom && para.x + para.width > floatElement.x && shapeBottom > withShapeBottom\n                        && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind'\n                        && (this.documentHelper.compatibilityMode === 'Word2013' || para.floatingElements[k].layoutInCell)) {\n                        var height = (withShapeBottom === 0) ? shapeBottom - paraBottom : shapeBottom - withShapeBottom;\n                        contentHeight += height;\n                        withShapeBottom = shapeBottom;\n                    }\n                    else {\n                        considerAsTop = true;\n                    }\n                }\n            }\n            else {\n                if (this.considerPositionTableHeight(cellWidget, cellWidget.childWidgets[i])) {\n                    contentHeight += cellWidget.childWidgets[i].height;\n                }\n            }\n        }\n        if ((cellY + contentHeight) > withShapeBottom) {\n            considerShapeHeight = false;\n        }\n        return (isDisplacement && considerShapeHeight) ? withShapeContentHeight :\n            (isDisplacement && considerAsTop ? cellWidget.ownerRow.height : contentHeight);\n    };\n    Layout.prototype.getFloatingItemsHeight = function (paragraph, cellWidget) {\n        var withShapeBottom = 0;\n        var totalShapeHeight = 0;\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var floatElement = paragraph.floatingElements[i];\n            var textWrappingStyle = floatElement.textWrappingStyle;\n            var shapeBottom = floatElement.y + floatElement.height;\n            var paraBottom = paragraph.y + paragraph.height;\n            if (shapeBottom < this.viewer.clientArea.bottom && floatElement.y !== paragraph.y && paraBottom > shapeBottom && paragraph.x + paragraph.width > floatElement.x && shapeBottom > withShapeBottom\n                && textWrappingStyle !== 'InFrontOfText' && textWrappingStyle !== 'Behind' && textWrappingStyle !== 'Inline'\n                && (this.documentHelper.compatibilityMode === 'Word2013' || paragraph.floatingElements[i].layoutInCell)) {\n                var height = (withShapeBottom === 0) ? shapeBottom - cellWidget.y : shapeBottom - withShapeBottom;\n                totalShapeHeight += height;\n                withShapeBottom = shapeBottom;\n            }\n        }\n        return totalShapeHeight;\n    };\n    Layout.prototype.considerPositionTableHeight = function (cellWidget, nestedWrapTable) {\n        if (nestedWrapTable.isLayouted && nestedWrapTable.wrapTextAround) {\n            for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                var blockWidget = cellWidget.childWidgets[i];\n                if (nestedWrapTable !== blockWidget && (blockWidget.y === nestedWrapTable.y\n                    || (blockWidget.y + blockWidget.height) < nestedWrapTable.y)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.getTableLeftBorder = function (borders) {\n        if (!isNullOrUndefined(borders.left)) {\n            return borders.left;\n        }\n        else {\n            var border = new WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableRightBorder = function (borders) {\n        if (!isNullOrUndefined(borders.right)) {\n            return borders.right;\n        }\n        else {\n            var border = new WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableTopBorder = function (borders) {\n        if (!isNullOrUndefined(borders.top)) {\n            return borders.top;\n        }\n        else {\n            var border = new WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getTableBottomBorder = function (borders) {\n        if (!isNullOrUndefined(borders.bottom)) {\n            return borders.bottom;\n        }\n        else {\n            var border = new WBorder(borders);\n            border.lineStyle = 'Single';\n            border.lineWidth = 0.66;\n            return border;\n        }\n    };\n    Layout.prototype.getCellDiagonalUpBorder = function (tableCell) {\n        var diagonalUpBorder = undefined;\n        var cellBorder = undefined;\n        cellBorder = tableCell.cellFormat.borders;\n        diagonalUpBorder = cellBorder.diagonalUp;\n        return diagonalUpBorder;\n    };\n    Layout.prototype.getCellDiagonalDownBorder = function (tableCell) {\n        var diagonalDownBorder = undefined;\n        var cellBorder = undefined;\n        cellBorder = tableCell.cellFormat.borders;\n        diagonalDownBorder = cellBorder.diagonalDown;\n        return diagonalDownBorder;\n    };\n    Layout.prototype.getTableWidth = function (table) {\n        var width = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            var rowWidth = 0;\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                rowWidth += HelperMethods.convertPointToPixel(cell.cellFormat.cellWidth);\n            }\n            if (width < rowWidth) {\n                width = rowWidth;\n            }\n        }\n        return width;\n    };\n    //#region shifting\n    Layout.prototype.layoutNextItemsBlock = function (blockAdv, viewer, isFootnoteReLayout) {\n        var sectionIndex = blockAdv.bodyWidget.sectionIndex;\n        var block = blockAdv;\n        var splittedWidget = block.getSplitWidgets();\n        var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        if (isNullOrUndefined(nextBlock) || this.documentHelper.blockToShift === block) {\n            this.documentHelper.blockToShift = undefined;\n        }\n        var updateNextBlockList = true;\n        while (nextBlock instanceof BlockWidget && (nextBlock.bodyWidget.sectionIndex === sectionIndex || (nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight))) {\n            if (!isNullOrUndefined(isFootnoteReLayout) && isFootnoteReLayout && !nextBlock.isLayouted && this.isInitialLoad) {\n                break;\n            }\n            var currentWidget = undefined;\n            var blocks = block.getSplitWidgets();\n            currentWidget = blocks[blocks.length - 1];\n            // if (viewer.fieldEndParagraph === block) {\n            //     //Sets field end paragraph to undefined, inorder to hold reLayouting with this paragraph.\n            //     viewer.fieldEndParagraph = undefined;\n            // }\n            block = nextBlock;\n            if (this.documentHelper.blockToShift === block) {\n                this.documentHelper.blockToShift = undefined;\n            }\n            updateNextBlockList = false;\n            var nextWidget = undefined;\n            nextWidget = block.getSplitWidgets()[0];\n            /* eslint-disable-next-line max-len */\n            if (this.documentHelper.fieldStacks.length === 0 && !isNullOrUndefined(nextWidget) && currentWidget.containerWidget === nextWidget.containerWidget\n                && (HelperMethods.round(nextWidget.y, 2) === HelperMethods.round(currentWidget.y + currentWidget.height, 2))) {\n                if (!isNullOrUndefined(this.documentHelper.blockToShift) || this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n                    this.documentHelper.blockToShift = block;\n                }\n                else if (nextWidget.bodyWidget) {\n                    var floatingElementLength = nextWidget.bodyWidget.floatingElements.length;\n                    if (floatingElementLength > 0 || (floatingElementLength === 0 && isNullOrUndefined(this.documentHelper.blockToShift)\n                        && nextWidget instanceof ParagraphWidget && nextWidget.isEmpty() && currentWidget instanceof TableWidget)) {\n                        this.documentHelper.blockToShift = block;\n                    }\n                }\n                break;\n            }\n            updateNextBlockList = true;\n            if ((viewer.owner.isShiftingEnabled && this.documentHelper.fieldStacks.length === 0) || this.isIFfield) {\n                this.documentHelper.blockToShift = block;\n                break;\n            }\n            else if (isNullOrUndefined(this.viewer.owner.editorModule) || !this.viewer.owner.editorModule.isInsertingTOC) {\n                block = block.combineWidget(this.viewer);\n                //let paragraph: ParagraphWidget;\n                if (currentWidget.containerWidget !== block.containerWidget) {\n                    if (!(currentWidget instanceof ParagraphWidget) ||\n                        (currentWidget instanceof ParagraphWidget) && !currentWidget.isEndsWithPageBreak && !currentWidget.isEndsWithColumnBreak && currentWidget.containerWidget.page !== block.containerWidget.page && !(block.bodyWidget instanceof BodyWidget && block.bodyWidget.sectionFormat.breakCode === 'NoBreak')) {\n                        /* eslint-disable-next-line max-len */\n                        this.updateContainerWidget(block, currentWidget.containerWidget, currentWidget.indexInOwner + 1, false);\n                    }\n                }\n                if (block instanceof TableWidget) {\n                    this.clearTableWidget(block, true, true);\n                    block.isGridUpdated = false;\n                    //paragraph = this.documentHelper.selection.getFirstParagraphInFirstCell(block as TableWidget);\n                }\n                else {\n                    //paragraph = block as ParagraphWidget;\n                }\n                //if ((this.viewer.owner.isDocumentLoaded) && this.viewer.owner.editorModule) {\n                //    this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n                //}\n                viewer.updateClientAreaForBlock(block, true);\n                if (this.viewer instanceof WebLayoutViewer || block.bodyWidget instanceof HeaderFooterWidget) {\n                    block.containerWidget.height -= block.height;\n                }\n                this.documentHelper.layout.layoutBlock(block, 0);\n                viewer.updateClientAreaForBlock(block, false);\n            }\n            splittedWidget = nextBlock.getSplitWidgets();\n            nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        }\n        if (!viewer.owner.isShiftingEnabled || (this.documentHelper.blockToShift !== block)) {\n            this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n        }\n    };\n    /**\n     * Update the client area for the line widget.\n     *\n     * @param {LineWidget} startLineWidget LineWidget instance.\n     * @private\n     */\n    Layout.prototype.updateClientAreaForLine = function (startLineWidget) {\n        startLineWidget.marginTop = 0;\n        //Clears the line widget starting from current line.\n        var top = this.documentHelper.selection.getTop(startLineWidget);\n        var left = this.viewer.clientArea.x;\n        this.viewer.cutFromTop(top);\n        this.viewer.cutFromLeft(left);\n    };\n    Layout.prototype.getParentTable = function (block) {\n        var widget = block;\n        while (widget.containerWidget) {\n            if (widget.containerWidget instanceof BlockContainer || widget.containerWidget instanceof TextFrame) {\n                return widget;\n            }\n            widget = widget.containerWidget;\n        }\n        return undefined;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.reLayoutParagraph = function (paragraphWidget, lineIndex, elementBoxIndex, isBidi, isSkip) {\n        if (this.isReplaceAll) {\n            return;\n        }\n        this.isRelayout = true;\n        if (paragraphWidget.containerWidget instanceof TextFrame\n            && paragraphWidget.containerWidget.containerShape.textWrappingStyle === 'Inline') {\n            lineIndex = paragraphWidget.containerWidget.containerShape.line.indexInOwner;\n            paragraphWidget = paragraphWidget.containerWidget.containerShape.paragraph;\n        }\n        isBidi = isNullOrUndefined(isBidi) ? false : isBidi;\n        this.isRelayout = true;\n        if (this.documentHelper.blockToShift === paragraphWidget) {\n            this.layoutBodyWidgetCollection(paragraphWidget.index, paragraphWidget.containerWidget, paragraphWidget, false);\n            this.isBidiReLayout = true;\n        }\n        else {\n            if (this.isBidiReLayout) {\n                this.isBidiReLayout = false;\n            }\n        }\n        // let isElementMoved: boolean = elementBoxIndex > 0;\n        if (paragraphWidget.isInsideTable) {\n            this.isBidiReLayout = true;\n            if (!this.isReplacingAll) {\n                this.reLayoutTable(paragraphWidget);\n            }\n            /* eslint-disable-next-line max-len */\n            if (this.isFootnoteContentChanged && (!isNullOrUndefined(paragraphWidget.bodyWidget)) && !isNullOrUndefined(paragraphWidget.bodyWidget.page.footnoteWidget)) {\n                var foot = paragraphWidget.bodyWidget.page.footnoteWidget;\n                this.layoutfootNote(foot);\n            }\n            this.isBidiReLayout = false;\n        }\n        else {\n            // this.isRelayout = true;\n            this.reLayoutLine(paragraphWidget, lineIndex, isBidi, isSkip);\n        }\n        if (paragraphWidget.bodyWidget instanceof HeaderFooterWidget &&\n            paragraphWidget.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n            this.shiftFooterChildLocation(paragraphWidget.bodyWidget, this.viewer);\n        }\n        // this.updateLinearIndex(paragraphWidget);\n    };\n    Layout.prototype.getParentRow = function (block) {\n        var cell = block;\n        while (cell.ownerTable !== null && cell.ownerTable.isInsideTable) {\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell.ownerRow;\n    };\n    Layout.prototype.reLayoutRow = function (block) {\n        if (block instanceof ParagraphWidget) {\n            block = block.associatedCell;\n        }\n        var currentRow = this.getParentRow(block).getSplitWidgets()[0];\n        if (!isNullOrUndefined(currentRow) && !currentRow.ownerTable.tableFormat.allowAutoFit) {\n            var currentTable = currentRow.ownerTable.getSplitWidgets()[0].combineWidget(this.viewer);\n            var startRow = currentRow;\n            while (this.isVerticalMergedCellContinue(startRow)) {\n                var previousRow = startRow.previousWidget;\n                if (isNullOrUndefined(previousRow)) {\n                    break;\n                }\n                startRow = previousRow;\n            }\n            var bodyWidget = currentTable.containerWidget;\n            if (this.viewer instanceof WebLayoutViewer) {\n                bodyWidget.height -= currentTable.height;\n            }\n            if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n                block.bodyWidget.isEmpty = false;\n                bodyWidget.height -= currentTable.height;\n                /* eslint-disable-next-line max-len */\n                this.viewer.updateHeaderFooterClientAreaWithTop(currentTable.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(currentTable), bodyWidget.page);\n            }\n            else if (bodyWidget instanceof TextFrame) {\n                this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n            }\n            else {\n                this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n            }\n            /* eslint-disable-next-line max-len */\n            var area = new Rect(this.viewer.clientArea.x, this.viewer.clientArea.y, this.viewer.clientArea.width, this.viewer.clientArea.height);\n            var clientArea = new Rect(area.x, area.y, area.width, area.height);\n            if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n                var block_3 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n                this.viewer.owner.editorModule.updateWholeListItems(block_3);\n            }\n            this.viewer.updateClientAreaForBlock(currentTable, true);\n            this.viewer.cutFromTop(startRow.y);\n            this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n            //Clear Hieght for all the content\n            currentTable.height = 0;\n            do {\n                this.clearRowWidget(currentRow, true, true, true);\n                this.layoutRow([currentTable], currentRow, true);\n                if (startRow === currentRow) {\n                    break;\n                }\n                startRow = startRow.nextRow;\n            } while (startRow && startRow !== currentRow);\n            this.updateChildLocationForTable(currentTable.y, currentTable);\n            this.viewer.clientArea = clientArea;\n            this.viewer.clientActiveArea = new Rect(clientArea.x, clientArea.y, clientArea.width, clientArea.height);\n            this.viewer.updateClientAreaForBlock(currentTable, true);\n            currentTable.x -= currentTable.leftBorderWidth;\n            currentTable.y -= currentTable.topBorderWidth;\n            this.viewer.cutFromTop(currentTable.y);\n            this.shiftTableWidget(currentTable, this.viewer, true);\n            this.layoutNextItemsBlock(currentTable, this.viewer);\n        }\n        else {\n            this.currentCell = block;\n            this.reLayoutTable(block);\n            this.currentCell = undefined;\n        }\n    };\n    Layout.prototype.reLayoutTable = function (block, isFootnoteReLayout) {\n        //Get Top level owner of block\n        var table = this.getParentTable(block);\n        if (table.header) {\n            var tableCollection = table.getSplitWidgets();\n            for (var i = 1; i < tableCollection.length; i++) {\n                tableCollection[i].bodyWidget.page.repeatHeaderRowTableWidget = false;\n            }\n        }\n        //Combine splitted table in to single table\n        var currentTable = table.combineWidget(this.viewer);\n        var bodyWidget = currentTable.containerWidget;\n        if (this.viewer instanceof WebLayoutViewer) {\n            bodyWidget.height -= currentTable.height;\n        }\n        if ((this.viewer.owner.enableHeaderAndFooter || block.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n            block.bodyWidget.isEmpty = false;\n            bodyWidget.height -= currentTable.height;\n            /* eslint-disable-next-line max-len */\n            this.viewer.updateHeaderFooterClientAreaWithTop(table.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(table), bodyWidget.page);\n        }\n        else if (bodyWidget instanceof TextFrame) {\n            this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n        }\n        else {\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page);\n        }\n        //Clear Hieght for all the content\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule) {\n            var block_4 = this.documentHelper.getFirstParagraphInFirstCell(currentTable);\n            this.viewer.owner.editorModule.updateWholeListItems(block_4);\n        }\n        this.viewer.updateClientAreaForBlock(currentTable, true);\n        //Remove border width\n        currentTable.x -= currentTable.leftBorderWidth;\n        currentTable.y -= currentTable.topBorderWidth;\n        //Update Client area for current position\n        var yPos = this.getYPosition(currentTable);\n        this.viewer.cutFromTop(yPos);\n        this.clearTableWidget(currentTable, true, true, true, true);\n        this.isBidiReLayout = true;\n        this.layoutBlock(currentTable, 0);\n        this.viewer.updateClientAreaForBlock(currentTable, false);\n        this.layoutNextItemsBlock(currentTable, this.viewer, isFootnoteReLayout);\n    };\n    Layout.prototype.getYPosition = function (table) {\n        if (table.wrapTextAround) {\n            var prevWidget = table.previousWidget;\n            while (prevWidget) {\n                if (prevWidget instanceof ParagraphWidget) {\n                    return prevWidget.y + prevWidget.height;\n                }\n                else if (prevWidget instanceof TableWidget) {\n                    if (prevWidget.wrapTextAround) {\n                        prevWidget = prevWidget.previousWidget;\n                    }\n                    else {\n                        return prevWidget.y + prevWidget.height;\n                    }\n                }\n            }\n            return this.viewer.clientActiveArea.y;\n        }\n        return table.y;\n    };\n    Layout.prototype.clearFootnoteReference = function (table, updateClientHeight) {\n        if (table.footnoteElement && table.footnoteElement.length > 0) {\n            var startPage = table.bodyWidget.page;\n            for (var i = table.footnoteElement.length - 1; i >= 0; i--) {\n                var footnote = table.footnoteElement[i];\n                footnote.isLayout = false;\n                var footNoteWidget = footnote.bodyWidget.containerWidget;\n                if (footNoteWidget && footNoteWidget.bodyWidgets.indexOf(footnote.bodyWidget) !== -1) {\n                    var footnoteHeight = this.getFootNoteHeight(footnote.bodyWidget);\n                    footNoteWidget.height -= footnoteHeight;\n                    footNoteWidget.bodyWidgets.splice(footnote.bodyWidget.indexInOwner, 1);\n                    if (updateClientHeight && footNoteWidget.page === startPage) {\n                        this.viewer.clientActiveArea.height += footnoteHeight;\n                        this.viewer.clientArea.height += footnoteHeight;\n                    }\n                }\n                if (footNoteWidget.bodyWidgets.length === 0 && footNoteWidget.page) {\n                    footNoteWidget.page.footnoteWidget = undefined;\n                }\n                footnote.bodyWidget.containerWidget = undefined;\n            }\n            table.footnoteElement = [];\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearTableWidget = function (table, clearPosition, clearHeight, clearGrid, updateClientHeight) {\n        table.height = 0;\n        if (clearGrid) {\n            table.isGridUpdated = false;\n        }\n        if (clearPosition) {\n            table.y = 0;\n            table.x = 0;\n            if (table.footnoteElement && table.footnoteElement.length > 0) {\n                this.clearFootnoteReference(table, updateClientHeight);\n            }\n        }\n        table.leftBorderWidth = 0;\n        table.rightBorderWidth = 0;\n        table.topBorderWidth = 0;\n        table.bottomBorderWidth = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            this.clearRowWidget(row, clearPosition, clearHeight, clearGrid);\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearRowWidget = function (row, clearPosition, clearHeight, clearGrid) {\n        row.height = 0;\n        if (clearPosition) {\n            row.y = 0;\n            row.x = 0;\n        }\n        row.topBorderWidth = 0;\n        row.bottomBorderWidth = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            this.clearCellWidget(cell, clearPosition, clearHeight, clearGrid);\n        }\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearCellWidget = function (cell, clearPosition, clearHeight, clearGrid) {\n        cell.height = 0;\n        if (clearPosition) {\n            cell.y = 0;\n            cell.x = 0;\n        }\n        cell.leftBorderWidth = 0;\n        cell.rightBorderWidth = 0;\n        this.clearBlockWidget(cell.childWidgets, clearPosition, clearHeight, clearGrid);\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.clearBlockWidget = function (blocks, clearPosition, clearHeight, clearGrid) {\n        for (var i = 0; i < blocks.length; i++) {\n            var block = blocks[i];\n            if (block instanceof ParagraphWidget) {\n                if (clearPosition) {\n                    block.y = 0;\n                    block.x = 0;\n                }\n                if (clearHeight) {\n                    block.height = 0;\n                }\n            }\n            else {\n                this.clearTableWidget(block, clearPosition, clearHeight, clearGrid);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.layoutBodyWidgetCollection = function (blockIndex, bodyWidget, block, shiftNextWidget, isSkipShifting) {\n        if (!isNullOrUndefined(block) && block.isFieldCodeBlock) {\n            return;\n        }\n        if (!isNullOrUndefined(this.documentHelper.owner)\n            && this.documentHelper.owner.isLayoutEnabled) {\n            if (bodyWidget instanceof BlockContainer || bodyWidget instanceof TextFrame) {\n                var curretBlock = this.checkAndGetBlock(bodyWidget, blockIndex);\n                if (bodyWidget instanceof BodyWidget && isNullOrUndefined(curretBlock) && !isNullOrUndefined(bodyWidget.nextRenderedWidget) && bodyWidget.nextRenderedWidget.sectionFormat.breakCode === 'NoBreak') {\n                    curretBlock = bodyWidget.nextRenderedWidget.firstChild;\n                    bodyWidget = bodyWidget.nextRenderedWidget;\n                }\n                if (isNullOrUndefined(curretBlock)) {\n                    return;\n                }\n                if (this.viewer instanceof WebLayoutViewer) {\n                    curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                if (bodyWidget instanceof HeaderFooterWidget) {\n                    bodyWidget.isEmpty = false;\n                    this.viewer.updateHeaderFooterClientAreaWithTop(bodyWidget.sectionFormat, bodyWidget.headerFooterType.indexOf('Header') !== -1, bodyWidget.page);\n                    curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                else if (bodyWidget instanceof TextFrame) {\n                    this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true, !shiftNextWidget);\n                }\n                else if (!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget) {\n                    this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                    if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n                        this.isRelayoutFootnote = true;\n                        this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n                        this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n                        //curretBlock.containerWidget.height -= curretBlock.height;\n                        this.viewer.clientActiveArea.y = curretBlock.containerWidget.containerWidget.y;\n                    }\n                    else {\n                        this.viewer.cutFromTop(bodyWidget.containerWidget.y);\n                        this.layoutfootNote(bodyWidget.containerWidget);\n                        return;\n                    }\n                    // curretBlock.containerWidget.height -= curretBlock.height;\n                }\n                else {\n                    if (!isNullOrUndefined(bodyWidget.page.footnoteWidget)) {\n                        if (bodyWidget.page.footnoteWidget.footNoteType === 'Footnote') {\n                            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                        }\n                        else {\n                            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                        }\n                    }\n                    else {\n                        this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n                    }\n                    // if (bodyWidget.page.footnoteWidget) {\n                    //     this.viewer.clientActiveArea.height -= bodyWidget.page.footnoteWidget.height;\n                    //     this.viewer.clientArea.height -= bodyWidget.page.footnoteWidget.height;\n                    // }\n                }\n                if (blockIndex > 0 || (curretBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && curretBlock.bodyWidget.index !== 0 && curretBlock === bodyWidget.firstChild)) {\n                    curretBlock = curretBlock.combineWidget(this.viewer);\n                    var prevWidget = curretBlock.getSplitWidgets()[0].previousRenderedWidget;\n                    if (!isNullOrUndefined(prevWidget) && prevWidget.wrapTextAround && !isNullOrUndefined(prevWidget.getSplitWidgets()[0].previousRenderedWidget) && prevWidget.y < prevWidget.getSplitWidgets()[0].previousRenderedWidget.y) {\n                        prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n                    }\n                    while (prevWidget instanceof BlockWidget && prevWidget.isFieldCodeBlock) {\n                        prevWidget = prevWidget.getSplitWidgets()[0].previousRenderedWidget;\n                    }\n                    if (!(isNullOrUndefined(prevWidget) || prevWidget instanceof ParagraphWidget) ||\n                        (prevWidget instanceof ParagraphWidget) && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak) {\n                        if (isNullOrUndefined(isSkipShifting) && curretBlock.containerWidget !== prevWidget.containerWidget) {\n                            /* eslint-disable-next-line max-len */\n                            var prevBodyWidget = curretBlock.containerWidget;\n                            var newBodyWidget = prevWidget.containerWidget;\n                            var footWidgets = this.getFootNoteWidgetsOf(curretBlock);\n                            this.moveFootNotesToPage(footWidgets, prevBodyWidget, newBodyWidget);\n                            if (curretBlock.bodyWidget.sectionFormat.breakCode !== 'NoBreak' || (curretBlock.bodyWidget.index === prevWidget.bodyWidget.index)) {\n                                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                                this.updateContainerWidget(curretBlock, newBodyWidget, prevWidget.indexInOwner + 1, false);\n                            }\n                            else if (curretBlock.bodyWidget.sectionIndex !== prevWidget.bodyWidget.sectionIndex && prevWidget.bodyWidget.sectionFormat.numberOfColumns > 1 && curretBlock.bodyWidget.page === prevWidget.bodyWidget.page) {\n                                var firstBody = this.getBodyWidget(prevWidget.bodyWidget, true);\n                                var height = this.getNextWidgetHeight(firstBody);\n                                this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                                this.viewer.clientActiveArea.y = height;\n                                this.viewer.clientArea.y = this.viewer.clientActiveArea.y;\n                                this.viewer.clientArea.height = this.viewer.clientActiveArea.height;\n                            }\n                            else {\n                                this.viewer.updateClientArea(curretBlock.bodyWidget, curretBlock.bodyWidget.page, true);\n                                this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                            }\n                        }\n                        else {\n                            if (prevWidget instanceof ParagraphWidget && prevWidget.height <= 0 && this.isMultiColumnDoc) {\n                                var prevPara = prevWidget;\n                                this.viewer.updateClientAreaForBlock(prevPara, true);\n                                this.layoutParagraph(prevPara, 0);\n                                this.viewer.updateClientArea(prevPara.bodyWidget, prevPara.bodyWidget.page, true);\n                            }\n                            this.viewer.cutFromTop(prevWidget.y + prevWidget.height);\n                        }\n                    }\n                    else if (prevWidget instanceof ParagraphWidget && (prevWidget.isEndsWithPageBreak || prevWidget.isEndsWithColumnBreak) &&\n                        prevWidget.containerWidget === curretBlock.containerWidget) {\n                        this.moveBlocksToNextPage(prevWidget, false);\n                    }\n                }\n                var currentParagraph = void 0;\n                curretBlock = curretBlock.combineWidget(this.viewer);\n                if (curretBlock instanceof TableWidget) {\n                    this.clearTableWidget(curretBlock, true, true);\n                    curretBlock.isGridUpdated = false;\n                    currentParagraph = this.documentHelper.getFirstParagraphInFirstCell(curretBlock);\n                }\n                else {\n                    currentParagraph = curretBlock;\n                }\n                if ((this.viewer.owner.isDocumentLoaded) && this.viewer.owner.editorModule) {\n                    this.viewer.owner.editorModule.updateWholeListItems(currentParagraph);\n                }\n                this.viewer.updateClientAreaForBlock(curretBlock, true, undefined, false, true);\n                this.isRelayout = true;\n                this.documentHelper.layout.layoutBlock(curretBlock, 0);\n                this.isRelayout = false;\n                this.viewer.updateClientAreaForBlock(curretBlock, false);\n                if (!isNullOrUndefined(bodyWidget.containerWidget) && bodyWidget.containerWidget instanceof FootNoteWidget) {\n                    if (bodyWidget.containerWidget.footNoteType === 'Footnote') {\n                        this.layoutfootNote(bodyWidget.containerWidget);\n                    }\n                }\n                if (shiftNextWidget) {\n                    this.shiftNextWidgets(curretBlock);\n                }\n                else {\n                    this.layoutNextItemsBlock(curretBlock, this.viewer);\n                }\n            }\n            else if (bodyWidget instanceof TableCellWidget) {\n                /* eslint-disable-next-line max-len */\n                var table = this.documentHelper.layout.getParentTable(bodyWidget.ownerTable).getSplitWidgets()[0];\n                this.reLayoutTable(bodyWidget.ownerTable);\n                this.layoutNextItemsBlock(table, this.viewer);\n            }\n        }\n        this.isRelayoutFootnote = false;\n    };\n    /**\n     * @private\n     */\n    Layout.prototype.checkAndGetBlock = function (containerWidget, blockIndex) {\n        if (containerWidget instanceof TextFrame) {\n            return containerWidget.childWidgets[blockIndex];\n        }\n        else {\n            var sectionIndex = containerWidget.indexInOwner;\n            if (containerWidget.page.bodyWidgets.length <= 1) {\n                while (containerWidget && containerWidget.indexInOwner === sectionIndex) {\n                    if (containerWidget.childWidgets.length > 0 && containerWidget.firstChild.index <= blockIndex &&\n                        containerWidget.lastChild.index >= blockIndex) {\n                        for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n                            var block = containerWidget.childWidgets[i];\n                            if (block.index === blockIndex) {\n                                return block;\n                            }\n                        }\n                    }\n                    if (containerWidget instanceof BodyWidget) {\n                        containerWidget = containerWidget.nextRenderedWidget;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                while (containerWidget) {\n                    if (containerWidget.childWidgets.length > 0) {\n                        for (var i = 0; i < containerWidget.childWidgets.length; i++) {\n                            var block = containerWidget.childWidgets[i];\n                            if (block.index === blockIndex) {\n                                return block;\n                            }\n                        }\n                    }\n                    if (containerWidget instanceof BodyWidget) {\n                        containerWidget = containerWidget.nextRenderedWidget;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    //#endregion\n    //#region Table\n    Layout.prototype.layoutTable = function (table, startIndex) {\n        if (this.isFieldCode && !this.checkTableHasField(table) && !this.isRelayout) {\n            table.isFieldCodeBlock = true;\n            return table;\n        }\n        if (!isNullOrUndefined(table.previousWidget) && this.viewer.clientActiveArea.height < 0 && !table.wrapTextAround) {\n            this.moveBlocksToNextPage(table.previousWidget, false);\n        }\n        table.isBidiTable = table.bidi;\n        if (!table.isGridUpdated) {\n            table.buildTableColumns();\n            table.isGridUpdated = true;\n        }\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !isNullOrUndefined(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        var tableView = [table];\n        this.addTableWidget(this.viewer.clientActiveArea, tableView);\n        this.viewer.updateClientAreaTopOrLeft(table, true);\n        var clientActiveAreaForTableWrap;\n        var clientAreaForTableWrap;\n        var wrapDiff = 0;\n        if (table.wrapTextAround) {\n            clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n            clientAreaForTableWrap = this.viewer.clientArea.clone();\n            this.updateClientAreaForWrapTable(tableView, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        else if (!(table.containerWidget instanceof TextFrame)) {\n            this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n            if (this.isWrapText) {\n                wrapDiff = this.viewer.clientActiveArea.x - this.viewer.clientArea.x;\n                this.isWrapText = false;\n                table.x = this.viewer.clientActiveArea.x;\n            }\n        }\n        if (table.childWidgets.length > 0) {\n            var isHeader = table.childWidgets[0].rowFormat.isHeader;\n            table.header = isHeader;\n            table.continueHeader = isHeader;\n            table.headerHeight = 0;\n        }\n        var row = table.childWidgets[startIndex];\n        var index = tableView.length;\n        while (row) {\n            row = this.layoutRow(tableView, row);\n            row = row.nextRow;\n        }\n        if (this.documentHelper.viewer instanceof PageLayoutViewer && table.wrapTextAround && (table.positioning.verticalAlignment === 'Bottom' || table.positioning.verticalAlignment === 'Center' || table.positioning.verticalAlignment === 'Outside')) {\n            this.updateTableFloatPoints(table);\n            this.updateChildLocationForTable(table.y, table);\n        }\n        this.updateWidgetsToPage(tableView, [], table, true);\n        if (wrapDiff > 0) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x - wrapDiff;\n        }\n        var tableWidget = table.getSplitWidgets();\n        if (table.wrapTextAround && table.bodyWidget && table.bodyWidget.lastChild !== tableWidget[tableWidget.length - 1]) {\n            this.updateClientAreaForWrapTable(tableView, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        tableView[tableView.length - 1].isLayouted = true;\n        tableView[tableView.length - 1].isFieldCodeBlock = false;\n        if (this.documentHelper.compatibilityMode !== 'Word2013'\n            && !table.isInsideTable\n            && !table.wrapTextAround\n            && !isNullOrUndefined(table.firstChild.firstChild.leftMargin)) {\n            this.viewer.clientArea.x = this.viewer.clientArea.x + HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        return tableView[tableView.length - 1];\n    };\n    Layout.prototype.updateClientAreaForWrapTable = function (tables, table, beforeLayout, clientActiveAreaForTableWrap, clientAreaForTableWrap) {\n        if (beforeLayout) {\n            if (table.wrapTextAround) {\n                this.updateTableFloatPoints(table);\n                var clienactare = this.viewer.clientActiveArea.clone();\n                var rect = this.adjustClientAreaBasedOnTextWrapForTable(table, this.viewer.clientActiveArea);\n                if (clienactare.x !== rect.x) {\n                    table.x = this.viewer.clientActiveArea.x;\n                }\n                if (clienactare.y !== rect.y) {\n                    table.y = this.viewer.clientActiveArea.y;\n                }\n            }\n        }\n        else {\n            if (table.wrapTextAround && table.bodyWidget) {\n                if (tables.length == 1) {\n                    if (!isNullOrUndefined(table.previousWidget) || table.isInHeaderFooter || table.isInsideTable) {\n                        this.viewer.clientActiveArea = clientActiveAreaForTableWrap.clone();\n                        this.viewer.clientArea = clientAreaForTableWrap.clone();\n                        if (!table.isLayouted && this.viewer.clientActiveArea.height < table.height && table.width >= this.viewer.clientActiveArea.width) {\n                            this.moveBlocksToNextPage(table.previousWidget, false);\n                        }\n                    }\n                    else {\n                        this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n                    }\n                    if (table.bodyWidget.floatingElements.indexOf(table) === -1) {\n                        table.bodyWidget.floatingElements.push(table);\n                    }\n                }\n                else {\n                    this.documentHelper.tableLefts.pop();\n                    this.viewer.updateClientArea(table.bodyWidget, table.bodyWidget.page);\n                    for (var z = 0; z < tables.length; z++) {\n                        var bodyWidget = tables[z].bodyWidget;\n                        if (!isNullOrUndefined(bodyWidget) && bodyWidget.floatingElements.indexOf(tables[z]) === -1) {\n                            bodyWidget.floatingElements.push(tables[z]);\n                        }\n                    }\n                    var splittedTable = tables[tables.length - 1];\n                    this.viewer.cutFromTop(this.viewer.clientActiveArea.y + splittedTable.height + splittedTable.tableFormat.borders.bottom.lineWidth);\n                }\n            }\n        }\n    };\n    Layout.prototype.addTableWidget = function (area, table, create) {\n        var tableWidget = table[table.length - 1];\n        if (create) {\n            tableWidget = this.createTableWidget(tableWidget);\n            table.push(tableWidget);\n        }\n        tableWidget.width = area.width;\n        tableWidget.x = area.x;\n        tableWidget.y = area.y;\n        //Update the table height of tableWidget when cell spacing has been defined.\n        if (tableWidget.tableFormat.cellSpacing > 0) {\n            tableWidget.height = tableWidget.height + HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n            if (!tableWidget.isBidiTable) {\n                /* eslint-disable-next-line max-len */\n                tableWidget.leftBorderWidth = HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n                /* eslint-disable-next-line max-len */\n                tableWidget.rightBorderWidth = HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n            }\n            else { // Right to left direction table.\n                /* eslint-disable-next-line max-len */\n                tableWidget.leftBorderWidth = HelperMethods.convertPointToPixel(this.getTableRightBorder(tableWidget.tableFormat.borders).getLineWidth());\n                /* eslint-disable-next-line max-len */\n                tableWidget.rightBorderWidth = HelperMethods.convertPointToPixel(this.getTableLeftBorder(tableWidget.tableFormat.borders).getLineWidth());\n            }\n            /* eslint-disable-next-line max-len */\n            tableWidget.topBorderWidth = HelperMethods.convertPointToPixel(this.getTableTopBorder(tableWidget.tableFormat.borders).getLineWidth());\n            /* eslint-disable-next-line max-len */\n            tableWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(this.getTableBottomBorder(tableWidget.tableFormat.borders).getLineWidth());\n            tableWidget.x += tableWidget.leftBorderWidth;\n            tableWidget.y += tableWidget.topBorderWidth;\n            tableWidget.width -= tableWidget.leftBorderWidth;\n            tableWidget.width -= tableWidget.rightBorderWidth;\n            tableWidget.height += tableWidget.bottomBorderWidth;\n        }\n        return tableWidget;\n    };\n    Layout.prototype.updateWidgetsToPage = function (tables, rows, table, rearrangeRow, endRowWidget) {\n        var viewer = this.viewer;\n        var tableWidget = tables[tables.length - 1];\n        if (!table.isInsideTable) {\n            for (var i = 0; i < tables.length; i++) {\n                this.updateHeightForTableWidget(tables, rows, tables[i], endRowWidget);\n            }\n            if (tableWidget.childWidgets.length > 0 && tableWidget.y !== tableWidget.childWidgets[0].y) {\n                tableWidget.y = tableWidget.childWidgets[0].y;\n            }\n            // Need to update on this further\n            //Adds the table widget to owner cell widget.\n            // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).childWidgets.push(tableWidget);\n            // tableWidget.containerWidget = viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as BodyWidget;\n            // (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height = (viewer.renderedElements.get(table.associatedCell)[viewer.renderedElements.get(table.associatedCell).length - 1] as TableCellWidget).height + tableWidget.height;\n        }\n        // Shift the widgets for Right to left directed table.\n        if (table.isBidiTable && rearrangeRow) {\n            for (var i = 0; i < tables.length; i++) {\n                var layoutedTable = tables[i];\n                for (var j = 0; j < layoutedTable.childWidgets.length; j++) {\n                    var layoutedRow = layoutedTable.childWidgets[j];\n                    layoutedRow.shiftWidgetForRtlTable();\n                }\n            }\n        }\n        if (table.tableFormat.cellSpacing > 0) {\n            /* eslint-disable-next-line max-len */\n            if (tableWidget.y + tableWidget.height + HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) > viewer.clientArea.bottom && viewer instanceof WebLayoutViewer) {\n                //update the table height when split to next page. Which is equivalent Ms Word Behaviour.\n                //In Ms Word if the Table Split to next page the bottom spacing of the table will be half of the current spacing.\n                //And the Remaining space will be used in next page top of the table.\n                tableWidget.height = tableWidget.height - HelperMethods.convertPointToPixel(table.tableFormat.cellSpacing) / 2;\n            }\n            //Update the current Y position of current clientactivearea.\n            viewer.cutFromTop(tableWidget.y + tableWidget.height);\n        }\n        if (this.viewer instanceof WebLayoutViewer) {\n            table.containerWidget.height += table.height;\n        }\n        if (table.bodyWidget instanceof HeaderFooterWidget && !table.wrapTextAround) {\n            table.containerWidget.height += table.height;\n            if (this.viewer.owner.enableHeaderAndFooter && table.bodyWidget.headerFooterType.indexOf('Footer') !== -1) {\n                this.shiftFooterChildLocation(table.bodyWidget, this.viewer);\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.updateHeightForTableWidget = function (tables, rows, tableWidget, endRowWidget) {\n        for (var i = 0; i < tableWidget.childWidgets.length; i++) {\n            var rowWidget = tableWidget.childWidgets[i];\n            if (rowWidget === endRowWidget) {\n                break;\n            }\n            this.updateHeightForRowWidget(this.viewer, true, tables, rows, rowWidget, false, endRowWidget);\n        }\n    };\n    //#endregion\n    //#region Row\n    Layout.prototype.layoutRow = function (tableWidget, row, isRowLayout) {\n        var isNestedTable = row.ownerTable.isInsideTable;\n        if (!isNestedTable) {\n            this.updateExistingFootnoteHeight(row);\n        }\n        var viewer = this.viewer;\n        var rowWidgets = [row];\n        this.addTableRowWidget(viewer.clientActiveArea, rowWidgets);\n        viewer.updateClientAreaForRow(row, true);\n        var topMargin = this.getMaxTopCellMargin(row);\n        var bottomMargin = this.getMaxBottomCellMargin(row);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            this.layoutCell(cell, topMargin + row.topBorderWidth, bottomMargin + row.bottomBorderWidth);\n        }\n        viewer.updateClientAreaForRow(row, false);\n        var rows = [row];\n        if (!isRowLayout) {\n            this.updateWidgetsToTable(tableWidget, rows, row, false);\n        }\n        if (!isNestedTable) {\n            this.layoutedFootnoteElement = [];\n        }\n        return rows[rows.length - 1];\n    };\n    Layout.prototype.updateExistingFootnoteHeight = function (row) {\n        this.layoutedFootnoteElement = [];\n        if (!isNullOrUndefined(row.bodyWidget.page.footnoteWidget) && row.bodyWidget.page.footnoteWidget.bodyWidgets.length !== 0) {\n            this.existFootnoteHeight = row.bodyWidget.page.footnoteWidget.height;\n        }\n        else {\n            this.existFootnoteHeight = 0;\n        }\n    };\n    Layout.prototype.isIntersecting = function (startPosition, endPosition, adjacentStartPosition, adjacentEndPosition) {\n        return ((HelperMethods.round(adjacentStartPosition, 2) <= HelperMethods.round(startPosition, 2) || HelperMethods.round(adjacentStartPosition, 2) < HelperMethods.round(endPosition, 2))\n            && HelperMethods.round(adjacentEndPosition, 2) > HelperMethods.round(startPosition, 2));\n    };\n    Layout.prototype.getAdjacentRowCell = function (cell, cellStartPos, cellEndPos, rowIndex) {\n        var adjCells = [];\n        var columnLength = cell.ownerTable.tableHolder.columns.length;\n        var adjRow = cell.ownerTable.childWidgets[rowIndex];\n        if (isNullOrUndefined(adjRow)) {\n            return adjCells;\n        }\n        var prevCellEndPos = 0;\n        var prevCellEndIndex = 0;\n        var colSpan = cell.cellFormat.columnSpan;\n        var columnIndex = cell.columnIndex;\n        if (adjRow.rowFormat.gridBefore > 0) {\n            if (adjRow.rowFormat.gridBefore > columnIndex + colSpan) {\n                //When previous rows Grid before occupies more than cell width, returns empty collection.\n                return adjCells;\n            }\n            prevCellEndPos = adjRow.rowFormat.beforeWidth;\n            prevCellEndIndex = adjRow.rowFormat.gridBefore;\n        }\n        for (var i = 0; i < adjRow.childWidgets.length; i++) {\n            var adjCell = adjRow.childWidgets[i];\n            var adjCellStartPos = adjCell.x - adjCell.margin.left;\n            var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n            var adjCellEndIndex = adjCell.columnIndex + adjCell.cellFormat.columnSpan;\n            if (i == adjRow.childWidgets.length - 1 ||\n                (HelperMethods.round(adjCellStartPos, 2) > HelperMethods.round(prevCellEndPos, 2)\n                    && HelperMethods.round(adjCellStartPos, 2) > HelperMethods.round(cellStartPos, 2))) {\n                if (i == adjRow.childWidgets.length - 1 && adjRow.rowFormat.gridAfter > 0\n                    && adjCellEndIndex + adjRow.rowFormat.gridAfter === columnLength) {\n                    //Only grid after present after this adjacent cell, no need to continue next.\n                    return adjCells;\n                }\n                //When there is difference in adjacent cell start position and previous cell end position, there is an vertical merge continued cell.\n                //Iterates with the previous end cell column index till adjacent cell's column index to retrieve the vertical merge start cell in that region.\n                if (this.isIntersecting(cellStartPos, cellEndPos, prevCellEndPos, adjCellStartPos)) {\n                    while (colSpan > 0) {\n                        var prevRowAdjCell = adjRow.getVerticalMergeStartCell(columnIndex, colSpan);\n                        var prevRowAdjCellEndPos = 0;\n                        if (!isNullOrUndefined(prevRowAdjCell)) {\n                            var adjCellColumnSpan = prevRowAdjCell.cellFormat.columnSpan;\n                            adjCells.push(prevRowAdjCell);\n                            prevRowAdjCellEndPos = prevRowAdjCell.x + prevRowAdjCell.width + prevRowAdjCell.margin.right;\n                            cellStartPos = prevRowAdjCellEndPos;\n                            prevCellEndIndex = prevRowAdjCell.columnIndex + adjCellColumnSpan;\n                            colSpan -= prevCellEndIndex - columnIndex;\n                            columnIndex = prevCellEndIndex;\n                            if (HelperMethods.round(prevRowAdjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n                                break;\n                            }\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.isIntersecting(cellStartPos, cellEndPos, adjCellStartPos, adjCellEndPos)) {\n                adjCells.push(adjCell);\n                cellStartPos = adjCellEndPos;\n                colSpan -= adjCellEndIndex - columnIndex;\n                columnIndex = adjCellEndIndex;\n            }\n            if (HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n                //Once Adjacent cell end position reaches the current cell end position, no need to iterate next.\n                break;\n            }\n            prevCellEndPos = adjCellEndPos;\n            prevCellEndIndex = adjCellEndIndex;\n        }\n        return adjCells;\n    };\n    Layout.prototype.addTableRowWidget = function (area, row) {\n        var rowWidget = row[row.length - 1];\n        if ((rowWidget.rowFormat.beforeWidth !== 0 || rowWidget.rowFormat.gridBeforeWidth !== 0) && ((this.documentHelper.alignTablesRowByRow) ? rowWidget.ownerTable.tableFormat.tableAlignment === 'Left' : true)) {\n            rowWidget.x += (rowWidget.rowFormat.beforeWidth !== 0) ? rowWidget.rowFormat.beforeWidth : rowWidget.rowFormat.gridBeforeWidth;\n        }\n        else {\n            rowWidget.x = area.x;\n        }\n        rowWidget.y = area.y;\n        rowWidget.width = area.width;\n        var borderWidth = 0;\n        if (!isNullOrUndefined(rowWidget.ownerTable) && !isNullOrUndefined(rowWidget.ownerTable.tableFormat)\n            && rowWidget.ownerTable.tableFormat.cellSpacing > 0) {\n            rowWidget.height = rowWidget.height + HelperMethods.convertPointToPixel(rowWidget.ownerTable.tableFormat.cellSpacing);\n            //Update the table height with the border width to layout the border when the cell spacing is defined..\n            for (var j = 0; j < rowWidget.childWidgets.length; j++) {\n                if (!isNullOrUndefined(rowWidget.childWidgets[j].cellFormat)\n                    && !isNullOrUndefined(rowWidget.childWidgets[j].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var width = TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[j]).getLineWidth();\n                    if (width > borderWidth) {\n                        borderWidth = width;\n                    }\n                }\n            }\n            //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n            rowWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n            if (rowWidget.index > 0 && !isNullOrUndefined(rowWidget.previousWidget)) {\n                var prevRow = rowWidget.previousWidget;\n                borderWidth = 0;\n                for (var i = 0; i < prevRow.childWidgets.length; i++) {\n                    /* eslint-disable-next-line max-len */\n                    if (!isNullOrUndefined(prevRow.childWidgets[i].cellFormat) && !isNullOrUndefined(prevRow.childWidgets[i].cellFormat.borders)) {\n                        /* eslint-disable-next-line max-len */\n                        var value = TableCellWidget.getCellBottomBorder(prevRow.childWidgets[i]).getLineWidth();\n                        if (value > borderWidth) {\n                            borderWidth = value;\n                        }\n                    }\n                }\n                //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n                rowWidget.topBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n            }\n        }\n        if (!isNullOrUndefined(rowWidget.childWidgets)) {\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                if (!isNullOrUndefined(rowWidget.childWidgets[i].cellFormat) && !isNullOrUndefined(rowWidget.childWidgets[i].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var topBorderWidth = TableCellWidget.getCellTopBorder(rowWidget.childWidgets[i]).getLineWidth();\n                    if (topBorderWidth > borderWidth) {\n                        borderWidth = topBorderWidth;\n                    }\n                }\n            }\n        }\n        //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n        rowWidget.topBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n        //Update the table height of tableWidget when cell spacing has been defined.\n        /* eslint-disable-next-line max-len */\n        if (!isNullOrUndefined(rowWidget.ownerTable) && !isNullOrUndefined(rowWidget.ownerTable.tableFormat) && rowWidget.ownerTable.tableFormat.cellSpacing <= 0 && rowWidget.rowIndex === rowWidget.ownerTable.childWidgets.length - 1) {\n            // Update the bottom width for last row .\n            for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                if (!isNullOrUndefined(rowWidget.childWidgets[i].cellFormat) && !isNullOrUndefined(rowWidget.childWidgets[i].cellFormat.borders)) {\n                    /* eslint-disable-next-line max-len */\n                    var bottomBorderWidth = TableCellWidget.getCellBottomBorder(rowWidget.childWidgets[i]).getLineWidth();\n                    if (bottomBorderWidth > borderWidth) {\n                        borderWidth = bottomBorderWidth;\n                    }\n                }\n            }\n            //Maximum border width is calculated and hold it in a variable to add with the padding of the cells.\n            rowWidget.bottomBorderWidth = HelperMethods.convertPointToPixel(borderWidth);\n        }\n        //tableRowWidget.ownerWidget = owner;\n        return rowWidget;\n    };\n    Layout.prototype.getMaxTopCellMargin = function (row) {\n        if (isNullOrUndefined(row.childWidgets)) {\n            return 0;\n        }\n        var value = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            var topMargin = 0;\n            if (cell.cellFormat.hasValue('topMargin')) {\n                topMargin = HelperMethods.convertPointToPixel(cell.cellFormat.topMargin);\n            }\n            else if (row.rowFormat.hasValue('topMargin')) {\n                topMargin = HelperMethods.convertPointToPixel(row.rowFormat.topMargin);\n            }\n            else {\n                topMargin = HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.topMargin);\n            }\n            if (topMargin > value) {\n                value = topMargin;\n            }\n        }\n        return value;\n    };\n    Layout.prototype.getMaxBottomCellMargin = function (row) {\n        if (isNullOrUndefined(row.childWidgets)) {\n            return 0;\n        }\n        var value = 0;\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            var bottomMargin = 0;\n            if (cell.cellFormat.hasValue('bottomMargin')) {\n                bottomMargin = HelperMethods.convertPointToPixel(cell.cellFormat.bottomMargin);\n            }\n            else if (row.rowFormat.hasValue('bottomMargin')) {\n                bottomMargin = HelperMethods.convertPointToPixel(row.rowFormat.bottomMargin);\n            }\n            else {\n                bottomMargin = HelperMethods.convertPointToPixel(row.ownerTable.tableFormat.bottomMargin);\n            }\n            if (bottomMargin > value) {\n                value = bottomMargin;\n            }\n        }\n        return value;\n    };\n    //#endregion Row\n    //#region cell\n    Layout.prototype.layoutCell = function (cell, maxCellMarginTop, maxCellMarginBottom) {\n        var viewer = this.viewer;\n        this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n        this.updateTopBorders(cell);\n        viewer.updateClientAreaForCell(cell, true);\n        if (cell.childWidgets.length === 0) {\n            var paragraphWidget = new ParagraphWidget();\n            paragraphWidget.characterFormat = new WCharacterFormat();\n            paragraphWidget.paragraphFormat = new WParagraphFormat();\n            paragraphWidget.index = 0;\n            var lineWidget = new LineWidget(paragraphWidget);\n            paragraphWidget.childWidgets.push(lineWidget);\n            cell.childWidgets.push(paragraphWidget);\n            paragraphWidget.paragraphFormat.borders = new WBorders();\n        }\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            viewer.updateClientAreaForBlock(block, true);\n            block.containerWidget = cell;\n            this.layoutBlock(block, 0);\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        this.updateWidgetToRow(cell);\n        viewer.updateClientAreaForCell(cell, false);\n    };\n    Layout.prototype.isInsertTable = function () {\n        if (this.documentHelper.owner.editorHistoryModule && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'InsertTable')\n            return true;\n        else\n            return false;\n    };\n    Layout.prototype.updateTopBorders = function (cell) {\n        cell.updatedTopBorders = [];\n        if (cell.ownerTable.tableFormat.cellSpacing === 0) {\n            var cellTopBorder = cell.cellFormat.borders.top;\n            if (!cellTopBorder.isBorderDefined || (cellTopBorder.isBorderDefined\n                && cellTopBorder.lineStyle === 'None' && cellTopBorder.lineWidth === 0 &&\n                cellTopBorder.hasValue('color'))) {\n                cellTopBorder = cell.ownerRow.rowFormat.borders.horizontal;\n            }\n            if (!cellTopBorder.isBorderDefined) {\n                cellTopBorder = cell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n            }\n            var cellStartPos = cell.x - cell.margin.left;\n            var cellEndPos = cell.x + cell.width + cell.margin.right;\n            var adjCells = this.getAdjacentRowCell(cell, cellStartPos, cellEndPos, cell.ownerRow.indexInOwner - 1);\n            for (var j = 0; j < adjCells.length; j++) {\n                var adjCell = adjCells[j];\n                var prevCellBottomBorder = adjCell.cellFormat.borders.bottom;\n                if (!prevCellBottomBorder.isBorderDefined || (prevCellBottomBorder.isBorderDefined\n                    && prevCellBottomBorder.lineStyle === 'None' && prevCellBottomBorder.lineWidth === 0 &&\n                    prevCellBottomBorder.hasValue('color'))) {\n                    prevCellBottomBorder = adjCell.ownerRow.rowFormat.borders.horizontal;\n                }\n                if (!prevCellBottomBorder.isBorderDefined) {\n                    prevCellBottomBorder = adjCell.ownerRow.ownerTable.tableFormat.borders.horizontal;\n                }\n                var border = void 0;\n                if (cellTopBorder.lineStyle === 'None' || cellTopBorder.lineStyle === 'Cleared') {\n                    border = prevCellBottomBorder;\n                }\n                else if (prevCellBottomBorder.lineStyle === 'Cleared' || prevCellBottomBorder.lineStyle === 'None') {\n                    border = cellTopBorder;\n                }\n                else {\n                    border = cell.getBorderBasedOnPriority(cellTopBorder, prevCellBottomBorder);\n                }\n                var adjCellStartPos = adjCell.x - adjCell.margin.left;\n                var adjCellEndPos = adjCell.x + adjCell.width + adjCell.margin.right;\n                if (j === 0 && cellStartPos < adjCellStartPos) {\n                    cell.updatedTopBorders.push({ border: cellTopBorder, width: (adjCellStartPos - cellStartPos) });\n                }\n                if (border) {\n                    var width = 0;\n                    /* eslint-disable-next-line max-len */\n                    if (HelperMethods.round(adjCellEndPos, 2) === HelperMethods.round(cellEndPos, 2) && HelperMethods.round(adjCellStartPos, 2) === HelperMethods.round(cellStartPos, 2)) {\n                        width = cellEndPos - cellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (HelperMethods.round(adjCellStartPos, 2) >= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n                        width = cellEndPos - adjCellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (HelperMethods.round(adjCellStartPos, 2) >= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) <= HelperMethods.round(cellEndPos, 2)) {\n                        width = adjCellEndPos - adjCellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (HelperMethods.round(adjCellStartPos, 2) <= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) <= HelperMethods.round(cellEndPos, 2)) {\n                        width = adjCellEndPos - cellStartPos;\n                        /* eslint-disable-next-line max-len */\n                    }\n                    else if (HelperMethods.round(adjCellStartPos, 2) <= HelperMethods.round(cellStartPos, 2) && HelperMethods.round(adjCellEndPos, 2) >= HelperMethods.round(cellEndPos, 2)) {\n                        width = cellEndPos - cellStartPos;\n                    }\n                    else {\n                        width = cellEndPos - cellStartPos;\n                    }\n                    if (width < 0) {\n                        width = 0;\n                    }\n                    cell.updatedTopBorders.push({ border: border, width: width });\n                }\n                if (j === (adjCells.length - 1) && cellEndPos > adjCellEndPos) {\n                    cell.updatedTopBorders.push({ border: cellTopBorder, width: (cellEndPos - adjCellEndPos) });\n                }\n            }\n        }\n    };\n    //endregion cell\n    //#region Shifting\n    Layout.prototype.shiftLayoutedItems = function (reLayout, isMultiColumnShift) {\n        if (isNullOrUndefined(this.documentHelper.blockToShift) || isNullOrUndefined(this.documentHelper.blockToShift.containerWidget)) {\n            this.documentHelper.blockToShift = undefined;\n            this.checkAndShiftEndnote();\n            this.documentHelper.removeEmptyPages();\n            return;\n        }\n        var block = this.documentHelper.blockToShift;\n        var isColumnBreak = this.getColumnBreak(block.bodyWidget);\n        if (!isColumnBreak && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block === block.bodyWidget.firstChild && !isNullOrUndefined(block.bodyWidget.previousRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.previousRenderedWidget.sectionIndex && block.bodyWidget.previousRenderedWidget.sectionFormat.columns.length > 1) {\n            var previousBodyWidget = block.bodyWidget.previousRenderedWidget;\n            var lastbody = this.getBodyWidget(previousBodyWidget, false);\n            if (!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page) {\n                this.splitBodyWidgetBasedOnColumn(previousBodyWidget);\n            }\n        }\n        var isFirstBlock = false;\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        var lastSection = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n        if ((!isColumnBreak || (reLayout && this.isSectionEndsWithColumnBreak(block.bodyWidget))) && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n            // let lastbody: BodyWidget = this.getBodyWidget(block.bodyWidget, false);\n            // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(block.bodyWidget.firstChild === block && isNullOrUndefined(block.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (block.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n            if (block.bodyWidget.columnIndex === 0 && block === block.bodyWidget.firstChild && !isNullOrUndefined(block.previousRenderedWidget) && block.bodyWidget.page === block.previousRenderedWidget.bodyWidget.page) {\n                block.bodyWidget.y = this.viewer.clientActiveArea.y;\n            }\n            isFirstBlock = block === block.bodyWidget.firstChild;\n            this.reLayoutMultiColumn(block.bodyWidget, isFirstBlock, block.index);\n            if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n                return;\n            }\n            block = this.documentHelper.blockToShift;\n            // }\n        }\n        var sectionIndex = block.bodyWidget.index;\n        this.reLayoutOrShiftWidgets(block, this.viewer);\n        var updateNextBlockList = true;\n        // If flow layout, then all sections are in single page. Hence need to update till last block of last section.\n        // Todo: For page layout and section break continuous, need to handle the same.\n        var splittedWidget = block.getSplitWidgets();\n        var nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        while (nextBlock instanceof BlockWidget && (nextBlock.bodyWidget.index === sectionIndex || (nextBlock.bodyWidget.sectionFormat.breakCode === 'NoBreak' && block.bodyWidget.sectionFormat.pageWidth === nextBlock.bodyWidget.sectionFormat.pageWidth && block.bodyWidget.sectionFormat.pageHeight === nextBlock.bodyWidget.sectionFormat.pageHeight))) {\n            if (isMultiColumnShift && nextBlock.bodyWidget.sectionFormat.columns.length === 0) {\n                return;\n            }\n            isColumnBreak = this.getColumnBreak(nextBlock.bodyWidget);\n            if ((!isColumnBreak || (reLayout && this.isSectionEndsWithColumnBreak(nextBlock.bodyWidget))) && this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && nextBlock.bodyWidget.sectionFormat.columns.length > 1) {\n                // let lastbody: BodyWidget = this.getBodyWidget(nextBlock.bodyWidget, false);\n                // if (((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === (lastbody.nextRenderedWidget as BodyWidget).page) && !(nextBlock.bodyWidget.firstChild === nextBlock && isNullOrUndefined(nextBlock.bodyWidget.previousWidget) && this.viewer.clientActiveArea.height > (nextBlock.firstChild as Widget).height))|| (this.documentHelper.endnoteCollection.length > 0 && lastSection === lastbody)) {\n                if (nextBlock.bodyWidget.columnIndex === 0 && nextBlock === nextBlock.bodyWidget.firstChild && !isNullOrUndefined(nextBlock.previousRenderedWidget) && nextBlock.bodyWidget.page === nextBlock.previousRenderedWidget.bodyWidget.page) {\n                    nextBlock.bodyWidget.y = this.viewer.clientActiveArea.y;\n                }\n                isFirstBlock = nextBlock === nextBlock.bodyWidget.firstChild;\n                this.reLayoutMultiColumn(nextBlock.bodyWidget, isFirstBlock, nextBlock.index);\n                if (isNullOrUndefined(this.documentHelper.blockToShift)) {\n                    return;\n                }\n                nextBlock = this.documentHelper.blockToShift;\n                // }\n            }\n            var currentWidget = undefined;\n            var blocks = block.getSplitWidgets();\n            currentWidget = blocks[blocks.length - 1];\n            block = nextBlock;\n            updateNextBlockList = false;\n            var nextWidget = undefined;\n            blocks = block.getSplitWidgets();\n            if (block instanceof ParagraphWidget) {\n                nextWidget = blocks[0];\n            }\n            else {\n                if (block instanceof TableWidget) {\n                    nextWidget = blocks[0];\n                }\n            }\n            if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved && currentWidget.containerWidget === nextWidget.containerWidget\n                && (HelperMethods.round(nextWidget.y, 2) === HelperMethods.round(this.viewer.clientActiveArea.y, 2)) &&\n                isNullOrUndefined(nextWidget.nextWidget)) {\n                break;\n            }\n            if (!isNullOrUndefined(currentWidget.floatingElements)) {\n                //this.shiftLayoutFloatingItems(currentWidget as ParagraphWidget);\n            }\n            updateNextBlockList = true;\n            // Here, we have added this condition to skip the non-layouted blocks during relayouting.\n            if (!block.isFieldCodeBlock) {\n                this.reLayoutOrShiftWidgets(block, this.viewer);\n            }\n            if (this.keepWithNext) {\n                block = this.documentHelper.blockToShift;\n                this.keepWithNext = false;\n            }\n            if (!this.isMultiColumnSplit && isColumnBreak && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block.bodyWidget.nextWidget && block.nextRenderedWidget && block.bodyWidget.index !== block.nextRenderedWidget.bodyWidget.index) {\n                var clientY = this.viewer.clientActiveArea.y;\n                var clientHeight = this.viewer.clientActiveArea.height;\n                this.viewer.updateClientArea(block.bodyWidget.nextWidget, block.bodyWidget.nextWidget.page);\n                this.viewer.clientActiveArea.height = clientHeight;\n                this.viewer.clientActiveArea.y = clientY;\n            }\n            if (this.isMultiColumnSplit && block.bodyWidget.sectionFormat.numberOfColumns > 1 && block === block.bodyWidget.lastChild && !isNullOrUndefined(block.bodyWidget.nextRenderedWidget) && block.bodyWidget.sectionIndex !== block.bodyWidget.nextRenderedWidget.sectionIndex && block.bodyWidget.page === block.bodyWidget.nextRenderedWidget.page) {\n                return;\n            }\n            splittedWidget = block.getSplitWidgets();\n            nextBlock = splittedWidget[splittedWidget.length - 1].nextRenderedWidget;\n        }\n        if (this.viewer.owner.editorModule) {\n            this.viewer.owner.editorModule.updateListItemsTillEnd(block, updateNextBlockList);\n        }\n        this.documentHelper.blockToShift = undefined;\n        var viewer = this.viewer;\n        if (viewer.owner.editorModule.isFootnoteElementRemoved) {\n            var lastPage_1 = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n            var lastChild = lastPage_1.bodyWidgets[lastPage_1.bodyWidgets.length - 1];\n            var endNote = lastPage_1.endnoteWidget;\n            if (!isNullOrUndefined(endNote)) {\n                var clientArea = this.viewer.clientArea.clone();\n                var clientActiveArea = this.viewer.clientActiveArea.clone();\n                var lastPageLastPara = lastChild.childWidgets[lastChild.childWidgets.length - 1];\n                var y = lastPageLastPara.y + lastPageLastPara.height;\n                this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n                this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n                this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n                this.viewer.clientActiveArea.y = y;\n                this.layoutfootNote(endNote);\n                this.viewer.clientArea = clientArea;\n                this.viewer.clientActiveArea = clientActiveArea;\n            }\n        }\n        // if (viewer instanceof PageLayoutViewer) {\n        this.documentHelper.removeEmptyPages();\n        this.updateFieldElements(reLayout);\n        var firstPage = this.documentHelper.pages[0];\n        if (firstPage.bodyWidgets[0].sectionIndex > 0) {\n            var page = firstPage;\n            do {\n                this.documentHelper.layout.layoutHeaderFooter(page.bodyWidgets[0], this.viewer, page);\n                page = page.nextPage;\n            } while (page);\n            while (firstPage.bodyWidgets[0].sectionIndex > 0) {\n                this.documentHelper.owner.editorModule.updateSectionIndex(undefined, firstPage.bodyWidgets[0], false);\n            }\n        }\n        if ((!this.documentHelper.owner.enableLockAndEdit || !reLayout) && !this.isMultiColumnSplit) {\n            viewer.updateScrollBars();\n        }\n        if (!(block.bodyWidget instanceof FootNoteWidget) && !this.isRelayoutFootnote && block.bodyWidget.page.endnoteWidget) {\n            this.layoutfootNote(block.bodyWidget.page.endnoteWidget);\n        }\n        // }\n    };\n    Layout.prototype.isSectionEndsWithColumnBreak = function (section) {\n        if (!isNullOrUndefined(section) && section.childWidgets.length > 0 && section.lastChild instanceof ParagraphWidget) {\n            var paragraph = section.lastChild;\n            return paragraph.isEndsWithColumnBreak;\n        }\n        return false;\n    };\n    Layout.prototype.checkAndShiftEndnote = function () {\n        if (this.documentHelper.owner.selectionModule) {\n            var endBlock = this.documentHelper.owner.selectionModule.end.paragraph;\n            if (endBlock.isInsideTable) {\n                endBlock = this.getParentTable(endBlock);\n            }\n            if (!endBlock.isInHeaderFooter && !(endBlock.bodyWidget.containerWidget instanceof FootNoteWidget) && isNullOrUndefined(endBlock.nextRenderedWidget)) {\n                if (!(endBlock.bodyWidget instanceof FootNoteWidget) && !this.isRelayoutFootnote\n                    && endBlock.bodyWidget.page.endnoteWidget) {\n                    this.layoutfootNote(endBlock.bodyWidget.page.endnoteWidget);\n                }\n            }\n        }\n    };\n    Layout.prototype.updateFieldElements = function (reLayout) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            var fieldBegin = this.documentHelper.fields[i];\n            if (this.viewer instanceof PageLayoutViewer || (this.viewer instanceof WebLayoutViewer && !(fieldBegin.line.paragraph.bodyWidget instanceof HeaderFooterWidget))) {\n                if (!isNullOrUndefined(this.documentHelper.selection)) {\n                    var fieldCode = this.documentHelper.selection.getFieldCode(fieldBegin);\n                    var regex = /^(?!.*\\bhyperlink\\b).*\\bpage\\b.*$/;\n                    if (!isNullOrUndefined(fieldCode) && (fieldCode.toLowerCase().match('numpages') || fieldCode.toLowerCase().match('sectionpages') || (regex.test(fieldCode.toLowerCase()) && reLayout)) && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                        var textElement = fieldBegin.fieldSeparator.nextNode;\n                        if (!isNullOrUndefined(textElement)) {\n                            var prevPageNum = textElement.text;\n                            var paragraph = fieldBegin.line.paragraph;\n                            if (!isNullOrUndefined(paragraph.containerWidget) && !(paragraph.containerWidget instanceof HeaderFooterWidget) && paragraph.containerWidget.indexInOwner === -1) {\n                                continue;\n                            }\n                            if (!isNullOrUndefined(paragraph.bodyWidget) && !isNullOrUndefined(paragraph.bodyWidget.page) && paragraph.bodyWidget.page.index !== -1) {\n                                if (regex.test(fieldCode.toLowerCase())) {\n                                    var index = paragraph.bodyWidget.page.index + 1;\n                                    textElement.text = index.toString();\n                                }\n                                else {\n                                    textElement.text = this.documentHelper.pages.length.toString();\n                                }\n                                if (prevPageNum !== textElement.text) {\n                                    var lineIndex = paragraph.childWidgets.indexOf(fieldBegin.line);\n                                    var elementIndex = fieldBegin.line.children.indexOf(textElement);\n                                    if (paragraph.isInsideTable) {\n                                        this.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                                    }\n                                    else {\n                                        this.reLayoutLine(paragraph, lineIndex, false, false, true);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.reLayoutOrShiftWidgets = function (blockAdv, viewer) {\n        var block = blockAdv;\n        var isRealyoutList = false;\n        // if (block instanceof ParagraphWidget) {\n        //     reLayoutItems = viewer.renderedElements.get(block as ParagraphWidget).length === 0;\n        // } else {\n        //     reLayoutItems = viewer.renderedElements.get(block as TableWidget).length === 0;\n        // }\n        if (this.isNeedToRelayout(blockAdv.bodyWidget)) {\n            if (!this.isMultiColumnSplit) {\n                this.updateContainerForTable(block, viewer);\n            }\n            //Handle layouting the block.\n            if (block instanceof TableWidget) {\n                block = block.combineWidget(this.viewer);\n                this.clearTableWidget(block, true, true, true);\n            }\n            viewer.updateClientAreaForBlock(block, true);\n            this.isRelayout = true;\n            this.layoutBlock(block, 0);\n            this.isRelayout = false;\n            viewer.updateClientAreaForBlock(block, false);\n            isRealyoutList = true;\n        }\n        else {\n            //Handled to check client area and shift layouted widget.\n            this.shiftWidgetsBlock(block, viewer);\n        }\n        var index = this.documentHelper.pages.indexOf(block.bodyWidget.page);\n        if (index > 0 && block === block.bodyWidget.childWidgets[0] && block instanceof ParagraphWidget) {\n            var val = block.bodyWidget.childWidgets[0].childWidgets[0].children;\n            for (var i = 0; i < val.length; i++) {\n                var element = val[i];\n                if (element.margin.top > 0 && element.margin.top === this.getBeforeSpacing(element.paragraph)) {\n                    element.margin.top -= this.getBeforeSpacing(element.paragraph);\n                }\n            }\n        }\n        //Updates the list value of the rendered paragraph.\n        if (this.viewer.owner.editorModule && !isRealyoutList) {\n            this.viewer.owner.editorModule.updateRenderedListItems(block);\n        }\n        if (!this.isRelayoutFootnote && block.bodyWidget.page.footnoteWidget) {\n            this.layoutfootNote(block.bodyWidget.page.footnoteWidget);\n        }\n        // }\n    };\n    Layout.prototype.isNeedToRelayout = function (bodyWidget) {\n        for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n            var floatElement = bodyWidget.floatingElements[i];\n            if (floatElement instanceof TableWidget || (floatElement instanceof ShapeBase &&\n                (floatElement.textWrappingStyle === 'Square' || floatElement.textWrappingStyle === 'TopAndBottom'))) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.shiftWidgetsBlock = function (block, viewer) {\n        if (block instanceof ParagraphWidget) {\n            this.shiftWidgetsForPara(block, viewer);\n        }\n        else if (block instanceof TableWidget) {\n            this.shiftWidgetsForTable(block, viewer);\n        }\n    };\n    Layout.prototype.shiftWidgetsForPara = function (paragraph, viewer) {\n        if (paragraph.height > (viewer.clientArea.height + viewer.clientArea.y) && !this.documentHelper.owner.enableHeaderAndFooter) {\n            return;\n        }\n        var bodywid = paragraph.bodyWidget;\n        var prevBodyObj = this.getBodyWidgetOfPreviousBlock(paragraph, 0);\n        var prevBodyWidget = prevBodyObj.bodyWidget;\n        var index = prevBodyObj.index;\n        var prevWidget = undefined;\n        var skipFootNoteHeight = false;\n        var isSkip = true;\n        for (var i = 0; i < paragraph.getSplitWidgets().length; i++) {\n            var widget = paragraph.getSplitWidgets()[i];\n            var firstBody = this.getBodyWidget(widget.bodyWidget, true);\n            if (this.isMultiColumnSplit && widget !== paragraph) {\n                continue;\n            }\n            if (isSkip && !isNullOrUndefined(prevWidget)) {\n                var isPageBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithPageBreak : false;\n                var isColumnBreak = prevWidget.lastChild ? prevWidget.lastChild.isEndsWithColumnBreak : false;\n                this.shiftToPreviousWidget(widget, viewer, prevWidget, isPageBreak, isColumnBreak);\n                this.updateFloatingElementPosition(prevWidget);\n                if ((isNullOrUndefined(widget.childWidgets) || widget.childWidgets.length === 0) && !isPageBreak && !isColumnBreak) {\n                    i--;\n                    continue;\n                }\n                if (prevBodyWidget !== widget.containerWidget) {\n                    prevBodyWidget = widget.containerWidget;\n                    if (isPageBreak && prevWidget !== widget.previousSplitWidget) {\n                        viewer.updateClientAreaByWidget(widget);\n                    }\n                }\n                prevWidget = undefined;\n            }\n            var footWidget = [];\n            if (!skipFootNoteHeight) {\n                footWidget = this.getFootNoteWidgetsOf(widget);\n            }\n            skipFootNoteHeight = false;\n            //let isContainsFootnote: boolean = false;\n            if (this.isFitInClientArea(widget, viewer, footWidget) || this.isMultiColumnSplit) {\n                if (this.keepWithNext) {\n                    this.updateClientPositionForBlock(widget.containerWidget.firstChild, widget);\n                    this.keepWithNext = false;\n                }\n                //Check whether this widget is moved to previous container widget.\n                prevWidget = widget;\n                viewer.updateClientAreaForBlock(widget, true, undefined, false, true);\n                if (widget.isEmpty() && !isNullOrUndefined(widget.paragraphFormat) &&\n                    (widget.paragraphFormat.textAlignment === 'Center' || widget.paragraphFormat.textAlignment === 'Right'\n                        || (widget.paragraphFormat.textAlignment === 'Justify' && widget.paragraphFormat.bidi))\n                    && widget.paragraphFormat.listFormat.listId === -1) {\n                    this.updateXPositionForEmptyParagraph(viewer.clientActiveArea, widget);\n                }\n                else {\n                    widget.x = viewer.clientActiveArea.x;\n                }\n                viewer.updateClientAreaForBlock(widget, false);\n                widget.y = viewer.clientActiveArea.y;\n                this.updateFloatingElementPosition(widget);\n                viewer.cutFromTop(viewer.clientActiveArea.y + widget.height);\n                //Moves the paragraph widget to previous body widget.\n                if (!isNullOrUndefined(prevBodyWidget) && prevBodyWidget !== widget.containerWidget && !this.isMultiColumnSplit) {\n                    index++;\n                    if (!prevBodyWidget.lastChild.isEndsWithPageBreak && !prevBodyWidget.lastChild.isEndsWithColumnBreak) {\n                        this.updateContainerWidget(widget, prevBodyWidget, index, true, footWidget);\n                    }\n                    if (footWidget.length > 0) {\n                        if (prevBodyWidget.page.footnoteWidget) {\n                            for (var k = 0; k < footWidget.length; k++) {\n                                if (prevBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footWidget[k]) === -1 && widget.bodyWidget.page.index != footWidget[k].page.index) {\n                                    prevBodyWidget.page.footnoteWidget.bodyWidgets.push(footWidget[k]);\n                                    prevBodyWidget.page.footnoteWidget.height += footWidget[k].height;\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (widget.containerWidget instanceof BodyWidget && widget.containerWidget.firstChild === widget && widget.previousRenderedWidget && widget.previousRenderedWidget instanceof ParagraphWidget && widget.previousRenderedWidget.containerWidget.sectionFormat.breakCode == 'NoBreak' && widget.containerWidget.page.index !== widget.previousRenderedWidget.containerWidget.page.index && widget.containerWidget.index !== widget.previousRenderedWidget.containerWidget.index) {\n                    var bodyWidget = widget.previousRenderedWidget.bodyWidget;\n                    var breakCode = bodyWidget.sectionFormat.breakCode;\n                    if (bodyWidget.sectionFormat.columns.length > 1) {\n                        bodyWidget = this.getBodyWidget(bodyWidget, true);\n                    }\n                    if (!isNullOrUndefined(bodyWidget.previousRenderedWidget) && bodyWidget.sectionFormat.breakCode === 'NoBreak'\n                        && bodyWidget.previousRenderedWidget.sectionFormat.breakCode == 'NewPage'\n                        && bodyWidget.page.index === bodyWidget.previousRenderedWidget.page.index) {\n                        breakCode = bodyWidget.previousRenderedWidget.sectionFormat.breakCode;\n                    }\n                    var bottom = HelperMethods.round((this.getNextWidgetHeight(bodyWidget) + widget.height), 2);\n                    // Bug 858530: Shift the widgets to previous container widget if the client height is not enough to place this widget.\n                    if (!widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithPageBreak && !widget.previousRenderedWidget.containerWidget.lastChild.isEndsWithColumnBreak\n                        && bottom <= HelperMethods.round(this.viewer.clientActiveArea.bottom, 2) && breakCode === 'NoBreak') {\n                        var page = widget.previousRenderedWidget.bodyWidget.page;\n                        var nextPage = widget.containerWidget.page;\n                        for (var j = 0; j < nextPage.bodyWidgets.length; j++) {\n                            var nextBodyWidget = nextPage.bodyWidgets[j];\n                            nextPage.bodyWidgets.splice(nextPage.bodyWidgets.indexOf(nextBodyWidget), 1);\n                            page.bodyWidgets.splice(page.bodyWidgets.length, 0, nextBodyWidget);\n                            nextBodyWidget.page = page;\n                            j--;\n                        }\n                        widget.containerWidget.y = this.viewer.clientActiveArea.y;\n                        this.documentHelper.removeEmptyPages();\n                    }\n                }\n                if (!this.isInitialLoad && isSkip && widget.bodyWidget.sectionFormat.columns.length > 1 && widget === widget.bodyWidget.firstChild && (!isNullOrUndefined(firstBody.previousWidget)\n                    && firstBody.page === firstBody.previousWidget.page)) {\n                    this.viewer.updateClientArea(widget.bodyWidget, widget.bodyWidget.page);\n                    firstBody = this.getBodyWidget(firstBody.previousWidget, true);\n                    var height = this.getNextWidgetHeight(firstBody);\n                    widget.bodyWidget.y = height;\n                    this.viewer.clientActiveArea.height -= height - this.viewer.clientActiveArea.y;\n                    this.viewer.clientActiveArea.y = height;\n                    isSkip = false;\n                    i--;\n                }\n                if (((widget.isEndsWithPageBreak && !this.isPageBreakInsideField(widget)) || widget.isEndsWithColumnBreak) && this.viewer instanceof PageLayoutViewer) {\n                    var nextBodyWidget = this.createOrGetNextBodyWidget(prevBodyWidget, this.viewer);\n                    nextBodyWidget = this.moveBlocksToNextPage(widget, true);\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                }\n            }\n            else {\n                var previousBlock = widget.previousRenderedWidget;\n                var isPageBreak = false;\n                var isColumnBreak = false;\n                if (previousBlock instanceof ParagraphWidget && previousBlock.isEndsWithPageBreak &&\n                    this.viewer instanceof PageLayoutViewer) {\n                    isPageBreak = true;\n                }\n                if (previousBlock instanceof ParagraphWidget && previousBlock.isEndsWithColumnBreak &&\n                    this.viewer instanceof PageLayoutViewer) {\n                    isColumnBreak = true;\n                }\n                var isSplittedToNewPage = this.splitWidget(widget, viewer, prevBodyWidget, index + 1, isPageBreak, footWidget, isColumnBreak);\n                this.updateFloatingElementPosition(widget);\n                prevWidget = undefined;\n                if (prevBodyWidget !== widget.containerWidget) {\n                    prevBodyWidget = widget.containerWidget;\n                    i--;\n                    //Paragraph moved to next page and client area get updated with footnote widget height.\n                    //So, skip considering footnote height.\n                    if (footWidget.length > 0) {\n                        skipFootNoteHeight = true;\n                    }\n                }\n                index = prevBodyWidget.childWidgets.indexOf(widget);\n                if (isSplittedToNewPage) {\n                    prevBodyWidget = paragraph.getSplitWidgets()[i + 1].containerWidget;\n                }\n            }\n        }\n        this.skipUpdateContainerWidget = false;\n    };\n    Layout.prototype.updateFloatingElementPosition = function (widget) {\n        if (widget.floatingElements.length > 0) {\n            for (var k = 0; k < widget.floatingElements.length; k++) {\n                var shape = widget.floatingElements[k];\n                var topMargin = 0;\n                if (shape instanceof ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n                    var lineIndex = shape.line.indexInOwner;\n                    var lineHeight = 0;\n                    topMargin = HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n                    for (var k_1 = 0; k_1 < lineIndex; k_1++) {\n                        if (!isNullOrUndefined(widget.childWidgets[k_1])) {\n                            lineHeight += widget.childWidgets[k_1].height;\n                        }\n                    }\n                    shape.y = widget.y + lineHeight;\n                }\n                else {\n                    var position = this.getFloatingItemPoints(shape);\n                    shape.y = position.y;\n                    shape.x = position.x;\n                }\n                if (shape instanceof ShapeElementBox) {\n                    this.updateChildLocationForCellOrShape(shape.y + topMargin, shape, undefined, false, true);\n                }\n            }\n        }\n    };\n    Layout.prototype.isPageBreakInsideField = function (widget) {\n        var isPageBreakInsideField = false;\n        var isFieldElement = false;\n        var height = 0;\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var line = widget.childWidgets[i];\n            height += line.height;\n            for (var j = 0; j < line.children.length; j++) {\n                var element = line.children[j];\n                if (element instanceof FieldElementBox) {\n                    if (element.fieldType === 0) {\n                        isFieldElement = true;\n                    }\n                    else if (element.fieldType === 2 || element.fieldType === 1) {\n                        isFieldElement = false;\n                    }\n                }\n                if (!isFieldElement && element.text === '\\f') {\n                    isPageBreakInsideField = false;\n                }\n                else {\n                    isPageBreakInsideField = true;\n                }\n            }\n        }\n        if (isPageBreakInsideField && widget.height === 0) {\n            this.viewer.cutFromTop(this.viewer.clientActiveArea.y + height);\n        }\n        return isPageBreakInsideField;\n    };\n    /**\n     * @private\n     * Get the footnote of the block widget.\n     *\n     * @param {BlockWidget} widget BlockWidget instance.\n     * @returns\n     */\n    Layout.prototype.getFootNotesOfBlock = function (widget, footnoteElements) {\n        if (isNullOrUndefined(footnoteElements)) {\n            footnoteElements = [];\n        }\n        if (widget.childWidgets.length > 0) {\n            for (var j = 0; j < this.documentHelper.footnoteCollection.length; j++) {\n                if (this.documentHelper.footnoteCollection[j].line.paragraph === widget) {\n                    //isContainsFootnote = true;\n                    footnoteElements.push(this.documentHelper.footnoteCollection[j]);\n                }\n            }\n        }\n        return footnoteElements;\n    };\n    Layout.prototype.getFootNotesWidgetsInLine = function (line) {\n        var footnoteElements = [];\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            if (element instanceof FootnoteElementBox) {\n                footnoteElements.push(element);\n            }\n        }\n        return this.getFootNoteWidgetsBy(line.paragraph, footnoteElements);\n    };\n    Layout.prototype.getFootNoteWidgetsBy = function (widget, footnoteElements) {\n        var footWidgets = [];\n        if (widget.bodyWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        if (footWidgets.length === 0 && (!isNullOrUndefined(widget.previousRenderedWidget) && widget.previousRenderedWidget.bodyWidget.page.footnoteWidget)) {\n            for (var i = 0; i < widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.previousRenderedWidget.bodyWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        else if (!isNullOrUndefined(widget.bodyWidget.previousRenderedWidget) && widget.bodyWidget.previousRenderedWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.previousRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        else if (!isNullOrUndefined(widget.bodyWidget.nextRenderedWidget) && widget.bodyWidget.nextRenderedWidget.page.footnoteWidget) {\n            for (var i = 0; i < widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                /* eslint-disable-next-line max-len */\n                for (var j = 0; j < footnoteElements.length; j++) {\n                    if ((widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference === footnoteElements[j]) {\n                        footWidgets.push(widget.bodyWidget.nextRenderedWidget.page.footnoteWidget.bodyWidgets[i]);\n                    }\n                }\n            }\n        }\n        return footWidgets;\n    };\n    /**\n     * @param widget\n     * @private\n     */\n    Layout.prototype.getFootNoteWidgetsOf = function (widget, isShifting) {\n        var footnoteWidgets = [];\n        var footnoteElements = [];\n        if (widget instanceof TableWidget) {\n            for (var k_2 = 0; k_2 < widget.childWidgets.length; k_2++) {\n                var row = widget.childWidgets[k_2];\n                for (var i = 0; i < row.childWidgets.length; i++) {\n                    var cell = row.childWidgets[i];\n                    for (var x = 0; x < cell.childWidgets.length; x++) {\n                        var block = cell.childWidgets[x];\n                        footnoteElements = this.getFootNotesOfBlock(block, footnoteElements);\n                        var blockfootnoteWidgets = this.getFootNoteWidgetsBy(block, footnoteElements);\n                        for (var f = 0; f < blockfootnoteWidgets.length; f++) {\n                            if (footnoteWidgets.indexOf(blockfootnoteWidgets[f]) === -1) {\n                                footnoteWidgets.push(blockfootnoteWidgets[f]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            footnoteElements = this.getFootNotesOfBlock(widget);\n            if (footnoteElements.length > 0) {\n                footnoteWidgets = this.getFootNoteWidgetsBy(widget, footnoteElements);\n            }\n            if (isShifting && footnoteWidgets.length === 0) {\n                for (var k = 0; k < footnoteElements.length; k++) {\n                    footnoteWidgets.push(footnoteElements[k].bodyWidget);\n                }\n            }\n        }\n        return footnoteWidgets;\n    };\n    Layout.prototype.getFootNodeWidgetsToShiftToPage = function (paragraph) {\n        var splittedWidgets = paragraph.getSplitWidgets();\n        var footNoteWidgets = [];\n        var toBodyWidget = paragraph.containerWidget;\n        var fromBodyWidget;\n        for (var i = 0; i < splittedWidgets.length; i++) {\n            var footWidgets = this.getFootNoteWidgetsOf(splittedWidgets[i]);\n            for (var j = 0; j < footWidgets.length; j++) {\n                fromBodyWidget = footWidgets[j].containerWidget;\n                if (toBodyWidget !== fromBodyWidget) {\n                    footNoteWidgets.push(footWidgets[j]);\n                }\n            }\n        }\n        return { 'footNoteWidgets': footNoteWidgets, 'fromBodyWidget': fromBodyWidget, 'toBodyWidget': toBodyWidget };\n    };\n    Layout.prototype.shiftTableWidget = function (table, viewer, isClearHeight) {\n        if (isClearHeight === void 0) { isClearHeight = false; }\n        var tables = [table];\n        this.addTableWidget(this.viewer.clientActiveArea, tables);\n        this.viewer.updateClientAreaTopOrLeft(table, true);\n        var clientActiveAreaForTableWrap;\n        var clientAreaForTableWrap;\n        if (table.wrapTextAround) {\n            clientActiveAreaForTableWrap = this.viewer.clientActiveArea.clone();\n            clientAreaForTableWrap = this.viewer.clientArea.clone();\n            this.updateClientAreaForWrapTable(tables, table, true, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        var row = table.childWidgets[0];\n        while (row) {\n            row = this.shiftRowWidget(tables, row, isClearHeight);\n            row = row.nextRow;\n        }\n        this.updateWidgetsToPage(tables, [], table, true);\n        if (table.wrapTextAround && table.bodyWidget) {\n            this.updateClientAreaForWrapTable(tables, table, false, clientActiveAreaForTableWrap, clientAreaForTableWrap);\n        }\n        return tables[tables.length - 1];\n    };\n    Layout.prototype.shiftRowWidget = function (tables, row, isClearHeight) {\n        if (isClearHeight === void 0) { isClearHeight = false; }\n        var viewer = this.viewer;\n        if (isClearHeight) {\n            row.height = 0;\n        }\n        var isNestedTable = row.ownerTable.isInsideTable;\n        if (!isNestedTable) {\n            this.updateExistingFootnoteHeight(row);\n        }\n        var rows = [row];\n        this.addTableRowWidget(viewer.clientActiveArea, rows);\n        viewer.updateClientAreaForRow(row, true);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cell = row.childWidgets[i];\n            if (isClearHeight) {\n                cell.height = 0;\n            }\n            /* eslint-disable-next-line max-len */\n            this.shiftCellWidget(cell, this.getMaxTopCellMargin(row) + row.topBorderWidth, this.getMaxBottomCellMargin(row) + row.bottomBorderWidth, isClearHeight);\n        }\n        viewer.updateClientAreaForRow(row, false);\n        if (!isNestedTable) {\n            var footheight = this.footnoteHeight;\n            this.updateFootnoteToBody(row, this.layoutedFootnoteElement);\n            this.footnoteHeight = footheight;\n        }\n        this.updateWidgetsToTable(tables, rows, row, false);\n        if (!isNestedTable) {\n            this.layoutedFootnoteElement = [];\n        }\n        return rows[rows.length - 1];\n    };\n    Layout.prototype.updateFootnoteToBody = function (row, footnoteElements) {\n        this.layoutFootnoteInSplittedRow(row, this.getFootnoteBody(footnoteElements));\n        if (isNullOrUndefined(row.ownerTable.footnoteElement)) {\n            row.ownerTable.footnoteElement = [];\n        }\n        for (var i = 0; i < footnoteElements.length; i++) {\n            row.ownerTable.footnoteElement.push(footnoteElements[i]);\n        }\n    };\n    Layout.prototype.getFootnoteBody = function (footnoteElements) {\n        var footnoteWidgets = [];\n        for (var i = 0; i < footnoteElements.length; i++) {\n            footnoteWidgets.push(footnoteElements[i].bodyWidget);\n        }\n        return footnoteWidgets;\n    };\n    Layout.prototype.shiftCellWidget = function (cell, maxCellMarginTop, maxCellMarginBottom, isClearHeight) {\n        if (isNullOrUndefined(isClearHeight)) {\n            isClearHeight = false;\n        }\n        var viewer = this.viewer;\n        this.addTableCellWidget(cell, viewer.clientActiveArea, maxCellMarginTop, maxCellMarginBottom);\n        var clientHeight = this.viewer.clientActiveArea.height;\n        viewer.updateClientAreaForCell(cell, true);\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            var block = cell.childWidgets[i];\n            viewer.updateClientAreaForBlock(block, true);\n            if (block instanceof ParagraphWidget) {\n                this.shiftParagraphWidget(block);\n            }\n            else {\n                this.shiftTableWidget(block, viewer, isClearHeight);\n            }\n            viewer.updateClientAreaForBlock(block, false);\n        }\n        this.updateWidgetToRow(cell);\n        viewer.updateClientAreaForCell(cell, false);\n        if (!cell.ownerTable.isInsideTable) {\n            this.viewer.clientActiveArea.height = clientHeight;\n        }\n    };\n    Layout.prototype.shiftParagraphWidget = function (paragraph) {\n        this.addParagraphWidget(this.viewer.clientActiveArea, paragraph);\n        if (paragraph.floatingElements.length > 0) {\n            for (var k = 0; k < paragraph.floatingElements.length; k++) {\n                var shape = paragraph.floatingElements[k];\n                var topMargin = 0;\n                if (shape instanceof ShapeElementBox && shape.textWrappingStyle === 'Inline') {\n                    var lineIndex = shape.line.indexInOwner;\n                    var lineHeight = 0;\n                    topMargin = HelperMethods.convertPointToPixel(shape.textFrame.marginTop);\n                    for (var k_3 = 0; k_3 < lineIndex; k_3++) {\n                        lineHeight += paragraph.childWidgets[k_3].height;\n                    }\n                    shape.y = paragraph.y + lineHeight;\n                }\n                else {\n                    var position = this.getFloatingItemPoints(shape);\n                    shape.y = position.y;\n                    shape.x = position.x;\n                }\n                if (shape instanceof ShapeElementBox) {\n                    this.updateChildLocationForCellOrShape(shape.y + topMargin, shape);\n                }\n            }\n        }\n        this.viewer.cutFromTop(this.viewer.clientActiveArea.y + paragraph.height);\n        var footnoteCollection = this.getFootNoteWidgetsOf(paragraph, true);\n        for (var i = 0; i < footnoteCollection.length; i++) {\n            this.layoutedFootnoteElement.push(footnoteCollection[i].footNoteReference);\n        }\n        this.footnoteHeight += this.getFootNoteHeight(footnoteCollection);\n        this.updateWidgetToPage(this.viewer, paragraph);\n    };\n    Layout.prototype.updateContainerForTable = function (block, viewer) {\n        var prevObj = this.getBodyWidgetOfPreviousBlock(block, 0);\n        var prevBodyWidget = prevObj.bodyWidget;\n        var index = prevObj.index;\n        var isPageBreak = !isNullOrUndefined(prevBodyWidget.lastChild) && !isNullOrUndefined(prevBodyWidget.lastChild.lastChild) ?\n            prevBodyWidget.lastChild.lastChild.isEndsWithPageBreak : false;\n        var isColumnBreak = !isNullOrUndefined(prevBodyWidget.lastChild) && !isNullOrUndefined(prevBodyWidget.lastChild.lastChild) ?\n            prevBodyWidget.lastChild.lastChild.isEndsWithColumnBreak : false;\n        if (prevBodyWidget !== block.containerWidget) {\n            if (!isPageBreak && !isColumnBreak) {\n                this.updateContainerWidget(block, prevBodyWidget, index + 1, true);\n            }\n            else {\n                viewer.updateClientArea(block.bodyWidget, block.bodyWidget.page);\n            }\n        }\n        if (block.isInHeaderFooter || this.viewer instanceof WebLayoutViewer) {\n            block.containerWidget.height -= block.height;\n        }\n    };\n    Layout.prototype.shiftWidgetsForTable = function (table, viewer) {\n        this.updateContainerForTable(table, viewer);\n        this.viewer.updateClientAreaForBlock(table, true, undefined, false, true);\n        var tempClientAreaX = this.viewer.clientArea.x;\n        if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n            this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n        }\n        this.updateVerticalPositionToTop(table, true);\n        //const isPageLayout: boolean = viewer instanceof PageLayoutViewer;\n        var combinedTable = table.combineWidget(this.viewer);\n        this.documentHelper.layout.updateChildLocationForTable(combinedTable.y, combinedTable);\n        this.clearTableWidget(combinedTable, true, false, false, true);\n        this.shiftTableWidget(combinedTable, this.viewer);\n        this.updateVerticalPositionToTop(table, false);\n        if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n            this.viewer.clientArea.x = tempClientAreaX;\n        }\n        this.viewer.updateClientAreaForBlock(table, false);\n    };\n    Layout.prototype.updateVerticalPositionToTop = function (table, isUpdateTop) {\n        //Iterate the tableWidgets counts\n        for (var i = 0; i < table.getSplitWidgets().length; i++) {\n            var tablewidget = table.getSplitWidgets()[i];\n            //Iterate the tableWidget child items\n            for (var j = 0; j < tablewidget.childWidgets.length; j++) {\n                var rowWidget = tablewidget.childWidgets[j];\n                //Iterate the RowWidgets child items\n                for (var k = 0; k < rowWidget.childWidgets.length; k++) {\n                    var cellWidget = rowWidget.childWidgets[k];\n                    //Iterate the RowWidgets child items\n                    this.documentHelper.layout.updateCellVerticalPosition(cellWidget, isUpdateTop, false);\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.splitWidget = function (paragraphWidget, viewer, previousBodyWidget, index, isPageBreak, footWidget, isColumnBreak) {\n        var firstLine = paragraphWidget.childWidgets[0];\n        var keepLinesTogether = (paragraphWidget.paragraphFormat.keepLinesTogether && (this.viewer.clientActiveArea.y !== this.viewer.clientArea.y));\n        var maxElementHeight = keepLinesTogether ? paragraphWidget.height : this.getMaxElementHeight(firstLine);\n        var paragraphView = paragraphWidget.getSplitWidgets();\n        var nextBodyWidget = paragraphWidget.containerWidget;\n        // Get maximun height based on widow/orphan control.\n        maxElementHeight = this.getMaximumLineHeightToSplit(paragraphWidget, maxElementHeight, viewer);\n        // TODO: Footnote move on move entire paragraph.\n        var footNoteInFirstLine = this.getFootNotesWidgetsInLine(firstLine);\n        if (isNullOrUndefined(paragraphWidget.previousWidget) && footNoteInFirstLine.length > 0) {\n            for (var i = 0; i < footNoteInFirstLine.length; i++) {\n                for (var j = 0; j < footNoteInFirstLine[i].childWidgets.length; j++) {\n                    maxElementHeight += footNoteInFirstLine[i].childWidgets[j].height;\n                }\n            }\n            //maxElementHeight += (paragraphWidget.bodyWidget.page.footnoteWidget.childWidgets[0] as ParagraphWidget).height;\n        }\n        if (viewer.clientActiveArea.height >= maxElementHeight && !isPageBreak && !isColumnBreak) {\n            var splittedWidget = undefined;\n            var widgetIndex = paragraphView.indexOf(paragraphWidget);\n            if (widgetIndex < (paragraphView.length - 1)) {\n                splittedWidget = paragraphView[widgetIndex + 1];\n                nextBodyWidget = splittedWidget.containerWidget;\n            }\n            else {\n                splittedWidget = new ParagraphWidget();\n                splittedWidget.index = paragraphWidget.index;\n                splittedWidget.characterFormat = paragraphWidget.characterFormat;\n                splittedWidget.paragraphFormat = paragraphWidget.paragraphFormat;\n                splittedWidget.width = paragraphWidget.width;\n                splittedWidget.x = paragraphWidget.x;\n                splittedWidget.y = paragraphWidget.y;\n                paragraphView.push(splittedWidget);\n            }\n            if (previousBodyWidget !== paragraphWidget.containerWidget && !this.skipUpdateContainerWidget) {\n                this.updateContainerWidget(paragraphWidget, previousBodyWidget, index, true);\n            }\n            for (var i = paragraphWidget.childWidgets.length - 1; i > 0; i--) {\n                var line = paragraphWidget.childWidgets[i];\n                if (this.isFitInClientArea(paragraphWidget, viewer, undefined)) {\n                    if (splittedWidget.childWidgets.length === 1) {\n                        this.updateParagraphWidgetInternal(line, splittedWidget, 0);\n                        this.skipUpdateContainerWidget = true;\n                    }\n                    break;\n                }\n                else {\n                    var line_1 = paragraphWidget.childWidgets[i];\n                    //Moves the line widget to next widget.\n                    this.updateParagraphWidgetInternal(line_1, splittedWidget, 0);\n                }\n            }\n            if (isNullOrUndefined(splittedWidget.containerWidget) && splittedWidget.childWidgets.length > 0) {\n                var y = viewer.clientActiveArea.y;\n                // eslint-disable-next-line max-len\n                var clientArea = new Rect(viewer.clientArea.x, viewer.clientArea.y, viewer.clientArea.width, viewer.clientArea.height);\n                // eslint-disable-next-line max-len\n                var activeArea = new Rect(viewer.clientActiveArea.x, viewer.clientActiveArea.y, viewer.clientActiveArea.width, viewer.clientActiveArea.height);\n                var prevPage = paragraphWidget.bodyWidget.page;\n                //Checks whether next node exists, else adds new page.\n                nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, false, -1);\n                splittedWidget.containerWidget = nextBodyWidget;\n                nextBodyWidget.childWidgets.splice(0, 0, splittedWidget);\n                if (prevPage !== nextBodyWidget.page) {\n                    nextBodyWidget.height += splittedWidget.height;\n                    if (nextBodyWidget != previousBodyWidget) {\n                        this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n                    }\n                    if (nextBodyWidget.childWidgets.length === 1 && nextBodyWidget.firstChild instanceof ParagraphWidget &&\n                        nextBodyWidget.firstChild.equals(paragraphWidget)) {\n                        //paragraphWidget.x = paragraphWidget.x;\n                        paragraphWidget.y = y;\n                        return true;\n                    }\n                    else {\n                        //Resetting Client area\n                        viewer.clientArea = clientArea;\n                        viewer.clientActiveArea = activeArea;\n                    }\n                }\n                else {\n                    if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n                        paragraphWidget.x = paragraphWidget.containerWidget.x;\n                    }\n                    paragraphWidget.y = y;\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                    splittedWidget = this.addParagraphWidget(this.viewer.clientActiveArea, splittedWidget);\n                    return true;\n                }\n            }\n        }\n        else {\n            var startBlock = void 0;\n            var keepWithNext = false;\n            var startIndex = 0;\n            viewer.columnLayoutArea.setColumns(previousBodyWidget.sectionFormat);\n            nextBodyWidget = this.createOrGetNextBodyWidget(previousBodyWidget, this.viewer);\n            var blockInfo = this.alignBlockElement(paragraphWidget);\n            if (!this.isInitialLoad && !isNullOrUndefined(blockInfo.node) && !paragraphWidget.isEndsWithPageBreak && !paragraphWidget.isEndsWithColumnBreak && isNullOrUndefined(paragraphWidget.previousSplitWidget)) {\n                startBlock = blockInfo.node instanceof TableRowWidget ? this.splitRow(blockInfo.node) : blockInfo.node;\n                if (startBlock.containerWidget instanceof BodyWidget && startBlock.containerWidget.firstChild !== startBlock) {\n                    startIndex = startBlock instanceof TableWidget ? 0 : parseInt(blockInfo.position.index, 10);\n                    paragraphWidget = startBlock;\n                    keepWithNext = true;\n                    if (!isNullOrUndefined(paragraphWidget.nextRenderedWidget) && paragraphWidget.nextRenderedWidget instanceof ParagraphWidget) {\n                        this.keepWithNext = true;\n                        this.documentHelper.blockToShift = paragraphWidget.nextRenderedWidget;\n                    }\n                }\n            }\n            if (paragraphWidget.containerWidget !== nextBodyWidget || keepWithNext) {\n                var prevPage = paragraphWidget.bodyWidget.page;\n                nextBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n                if (previousBodyWidget !== nextBodyWidget) {\n                    viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                    if (startIndex > 0 && this.keepWithNext) {\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, true);\n                        var nextParagraph = void 0;\n                        if (paragraphWidget instanceof TableWidget) {\n                            this.addTableWidget(this.viewer.clientActiveArea, [paragraphWidget]);\n                        }\n                        else if (nextBodyWidget.firstChild instanceof ParagraphWidget && nextBodyWidget.firstChild.equals(paragraphWidget)) {\n                            nextParagraph = nextBodyWidget.firstChild;\n                        }\n                        else {\n                            nextParagraph = new ParagraphWidget();\n                        }\n                        nextParagraph = this.moveChildsToParagraph(paragraphWidget, startIndex, nextParagraph);\n                        nextParagraph.containerWidget = nextBodyWidget;\n                        for (var m = 0; m < nextParagraph.floatingElements.length; m++) {\n                            var element = nextParagraph.floatingElements[m];\n                            if (element.line.paragraph.bodyWidget !== paragraphWidget.bodyWidget && element.textWrappingStyle !== 'Inline') {\n                                paragraphWidget.bodyWidget.floatingElements.splice(paragraphWidget.bodyWidget.floatingElements.indexOf(element), 1);\n                            }\n                        }\n                        paragraphWidget = nextParagraph;\n                        if (nextBodyWidget.childWidgets.indexOf(paragraphWidget) === -1) {\n                            nextBodyWidget.childWidgets.splice(0, 0, paragraphWidget);\n                        }\n                        this.viewer.updateClientAreaLocation(paragraphWidget, this.viewer.clientActiveArea);\n                        this.layoutBlock(paragraphWidget, 0, true);\n                        this.viewer.updateClientAreaForBlock(paragraphWidget, false);\n                    }\n                    else {\n                        this.updateContainerWidget(paragraphWidget, nextBodyWidget, 0, true);\n                        this.addParagraphWidget(this.viewer.clientActiveArea, paragraphWidget);\n                    }\n                    this.moveFootNotesToPage(footWidget, previousBodyWidget, nextBodyWidget);\n                }\n                if (previousBodyWidget.page === nextBodyWidget.page) {\n                    if (previousBodyWidget === nextBodyWidget) {\n                        viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        }\n        if (previousBodyWidget === paragraphWidget.containerWidget) {\n            // if (paragraphWidget.x !== paragraphWidget.containerWidget.x) {\n            //     paragraphWidget.x = paragraphWidget.containerWidget.x;\n            // }\n            paragraphWidget.y = viewer.clientActiveArea.y;\n            viewer.cutFromTop(viewer.clientActiveArea.y + paragraphWidget.height);\n        }\n        else {\n            //Updates client area based on next body widget.\n            viewer.updateClientArea(nextBodyWidget, nextBodyWidget.page);\n        }\n        return false;\n    };\n    Layout.prototype.getMaximumLineHeightToSplit = function (paragraphWidget, maxElementHeight, viewer) {\n        if (viewer.clientActiveArea.height >= maxElementHeight && !paragraphWidget.paragraphFormat.keepLinesTogether &&\n            paragraphWidget.paragraphFormat.widowControl && !isNullOrUndefined(paragraphWidget.previousWidget) &&\n            isNullOrUndefined(paragraphWidget.previousSplitWidget)) {\n            var paragraphHeight = paragraphWidget.height;\n            for (var m = paragraphWidget.childWidgets.length - 1; m >= 0; m--) {\n                var lastLine = paragraphWidget.childWidgets[m];\n                var lineHeight = this.getMaxElementHeight(lastLine);\n                if (lastLine.height > lineHeight) {\n                    paragraphHeight -= lastLine.height - lineHeight;\n                }\n                if (viewer.clientActiveArea.height >= paragraphHeight) {\n                    // Move entire paragraph to next page, If first line alone not fitted in the client area.\n                    if (m === 0) {\n                        maxElementHeight = paragraphWidget.height;\n                    }\n                    break;\n                }\n                paragraphHeight -= (lastLine).height;\n            }\n        }\n        return maxElementHeight;\n    };\n    /**\n     * @private\n     * @param footnoteWidgets\n     * @param fromBodyWidget\n     * @param toBodyWidget\n     */\n    Layout.prototype.moveFootNotesToPage = function (footnoteWidgets, fromBodyWidget, toBodyWidget) {\n        if (footnoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget && fromBodyWidget.page !== toBodyWidget.page) {\n            var footNoteIndex = -1;\n            var footNoteWidget = void 0;\n            var insertIndex = 0;\n            var check = false;\n            for (var k = 0; k < footnoteWidgets.length; k++) {\n                /* eslint-disable-next-line max-len */\n                footNoteWidget = footnoteWidgets[k];\n                footNoteIndex = fromBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget);\n                if (footNoteIndex >= 0) {\n                    if (toBodyWidget.page.footnoteWidget === undefined) {\n                        this.addEmptyFootNoteToBody(toBodyWidget);\n                    }\n                    for (var i = 0; i < toBodyWidget.page.footnoteWidget.bodyWidgets.length; i++) {\n                        var body = (toBodyWidget.page.footnoteWidget.bodyWidgets[i]).footNoteReference;\n                        if (body === (footNoteWidget).footNoteReference) {\n                            check = true;\n                        }\n                    }\n                    fromBodyWidget.page.footnoteWidget.bodyWidgets.splice(footNoteIndex, 1);\n                    if (toBodyWidget.page.footnoteWidget.bodyWidgets.indexOf(footNoteWidget) < 0 && !check) {\n                        var childLength = toBodyWidget.page.footnoteWidget.bodyWidgets.length;\n                        var fromPage = this.documentHelper.pages.indexOf(fromBodyWidget.page);\n                        var toPage = this.documentHelper.pages.indexOf(toBodyWidget.page);\n                        footNoteWidget.containerWidget = toBodyWidget.page.footnoteWidget;\n                        footNoteWidget.page = toBodyWidget.page;\n                        if (fromPage > toPage) {\n                            toBodyWidget.page.footnoteWidget.bodyWidgets.push(footNoteWidget);\n                            insertIndex++;\n                        }\n                        else {\n                            toBodyWidget.page.footnoteWidget.bodyWidgets.splice(insertIndex++, 0, footNoteWidget);\n                        }\n                        toBodyWidget.page.footnoteWidget.height += footNoteWidget.height;\n                    }\n                    fromBodyWidget.page.footnoteWidget.height -= footNoteWidget.height;\n                }\n            }\n            if (fromBodyWidget.page.footnoteWidget && fromBodyWidget.page.footnoteWidget.bodyWidgets.length === 0) {\n                fromBodyWidget.page.footnoteWidget = undefined;\n            }\n            if (fromBodyWidget.page.footnoteWidget !== undefined) {\n                this.layoutfootNote(fromBodyWidget.page.footnoteWidget);\n            }\n            if (toBodyWidget.page.footnoteWidget !== undefined) {\n                this.layoutfootNote(toBodyWidget.page.footnoteWidget);\n            }\n        }\n    };\n    Layout.prototype.addEmptyFootNoteToBody = function (bodyWidget) {\n        var footnoteWidget = new FootNoteWidget();\n        footnoteWidget.footNoteType = 'Footnote';\n        footnoteWidget.page = bodyWidget.page;\n        var newParagraph = new ParagraphWidget();\n        newParagraph.characterFormat = new WCharacterFormat();\n        newParagraph.paragraphFormat = new WParagraphFormat();\n        newParagraph.index = 0;\n        var lineWidget = new LineWidget(newParagraph);\n        newParagraph.childWidgets.push(lineWidget);\n        //  footnoteWidget.childWidgets.push(newParagraph);\n        footnoteWidget.height = this.documentHelper.textHelper.getParagraphMarkSize(newParagraph.characterFormat).Height;\n        footnoteWidget.margin = new Margin(0, footnoteWidget.height, 0, 0);\n        bodyWidget.page.footnoteWidget = footnoteWidget;\n    };\n    Layout.prototype.getMaxElementHeight = function (lineWidget) {\n        var height = 0;\n        /* eslint-disable-next-line max-len */\n        if (lineWidget.children.length === 0 || ((lineWidget.children.length === 1 && lineWidget.children[0] instanceof ListTextElementBox) || (lineWidget.children.length === 2 && lineWidget.children[0] instanceof ListTextElementBox && lineWidget.children[1] instanceof ListTextElementBox))) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            height = this.documentHelper.selection.getParagraphMarkSize(lineWidget.paragraph, topMargin, bottomMargin).height;\n            height += topMargin;\n            if (lineWidget.children.length > 0) {\n                var element = lineWidget.children[0];\n                if (height < element.margin.top + element.height) {\n                    height = element.margin.top + element.height;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < lineWidget.children.length; i++) {\n                var element = lineWidget.children[i];\n                if (height < element.margin.top + element.height) {\n                    height = element.margin.top + element.height;\n                }\n            }\n        }\n        return height;\n    };\n    Layout.prototype.createOrGetNextBodyWidget = function (bodyWidget, viewer) {\n        viewer.columnLayoutArea.setColumns(bodyWidget.sectionFormat);\n        var nextColumn = viewer.columnLayoutArea.getNextColumnByBodyWidget(bodyWidget);\n        if (!isNullOrUndefined(nextColumn)) {\n            var nextColumnBody = this.createOrGetNextColumnBody(bodyWidget);\n            return nextColumnBody;\n        }\n        var nextBodyWidget = undefined;\n        var pageIndex = 0;\n        pageIndex = this.documentHelper.pages.indexOf(bodyWidget.page);\n        var page = undefined;\n        var index = undefined;\n        index = bodyWidget.index;\n        if (pageIndex === this.documentHelper.pages.length - 1\n            || this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n            var currentWidget = new BodyWidget();\n            currentWidget.sectionFormat = bodyWidget.sectionFormat;\n            currentWidget.index = bodyWidget.index;\n            page = viewer.createNewPage(currentWidget);\n            if (this.documentHelper.pages[pageIndex + 1].sectionIndex !== index) {\n                this.documentHelper.insertPage(pageIndex + 1, page);\n            }\n            nextBodyWidget = page.bodyWidgets[0];\n        }\n        else {\n            page = this.documentHelper.pages[pageIndex + 1];\n            nextBodyWidget = page.bodyWidgets[0];\n        }\n        return nextBodyWidget;\n    };\n    Layout.prototype.isFitInClientArea = function (paragraphWidget, viewer, blocks) {\n        var lastLine = paragraphWidget.childWidgets[paragraphWidget.childWidgets.length - 1];\n        var height = paragraphWidget.height;\n        var maxElementHeight = this.getMaxElementHeight(lastLine);\n        if (lastLine.height > maxElementHeight) {\n            height -= lastLine.height - maxElementHeight;\n        }\n        var footHeight = 0;\n        if (!isNullOrUndefined(blocks)) {\n            if (blocks.length > 0) {\n                if (blocks[0].containerWidget instanceof FootNoteWidget) {\n                    footHeight = blocks[0].containerWidget.margin.top;\n                }\n                for (var k = 0; k < blocks.length; k++) {\n                    for (var l = 0; l < blocks[k].childWidgets.length; l++) {\n                        footHeight += blocks[k].childWidgets[l].height;\n                    }\n                }\n            }\n        }\n        return viewer.clientActiveArea.height >= height + footHeight;\n    };\n    Layout.prototype.isLineInFootNote = function (line, footNotes) {\n        for (var i = 0; i < footNotes.length; i++) {\n            if (footNotes[i].line === line) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable-next-line max-len */\n    Layout.prototype.shiftToPreviousWidget = function (paragraphWidget, viewer, previousWidget, isPageBreak, isColumnBreak) {\n        var fromBodyWidget = paragraphWidget.containerWidget;\n        var toBodyWidget = previousWidget.containerWidget;\n        var footNotes = [];\n        var footNoteWidgets = [];\n        if (toBodyWidget !== fromBodyWidget) {\n            footNotes = this.getFootNotesOfBlock(paragraphWidget);\n        }\n        for (var i = 0; i < paragraphWidget.childWidgets.length; i++) {\n            var line = paragraphWidget.childWidgets[i];\n            var maxElementHeight = this.getMaxElementHeight(line);\n            if (this.isLineInFootNote(line, footNotes)) {\n                var footWidget = this.getFootNoteWidgetsBy(line.paragraph, footNotes);\n                var height = 0;\n                for (var m = 0; m < footWidget.length; m++) {\n                    var footContent = footWidget[m];\n                    for (var n = 0; n < footContent.childWidgets.length; n++) {\n                        height += footContent.childWidgets[n].height;\n                    }\n                }\n                if (footWidget.length > 0 && footWidget[0].containerWidget) {\n                    height += footWidget[0].containerWidget.margin.top;\n                }\n                maxElementHeight += height;\n            }\n            if (viewer.clientActiveArea.height >= maxElementHeight && !isPageBreak && !isColumnBreak) {\n                if (footNotes.length > 0 && this.isLineInFootNote(line, footNotes)) {\n                    footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(line.paragraph, footNotes));\n                }\n                //Moves the line widget to previous widget.\n                this.updateParagraphWidgetInternal(line, previousWidget, previousWidget.childWidgets.length);\n                i--;\n                viewer.cutFromTop(viewer.clientActiveArea.y + line.height);\n                if (isNullOrUndefined(paragraphWidget.childWidgets)) {\n                    break;\n                }\n            }\n            else {\n                var bodyWidget = previousWidget.containerWidget;\n                viewer.updateClientArea(bodyWidget, bodyWidget.page);\n                var newBodyWidget = this.createOrGetNextBodyWidget(bodyWidget, viewer);\n                if (paragraphWidget.containerWidget !== newBodyWidget) {\n                    newBodyWidget = this.moveBlocksToNextPage(paragraphWidget, true);\n                }\n                if (bodyWidget !== newBodyWidget) {\n                    footNotes = this.getFootNotesOfBlock(paragraphWidget);\n                    if (footNotes.length > 0) {\n                        footNoteWidgets = footNoteWidgets.concat(this.getFootNoteWidgetsBy(paragraphWidget, footNotes));\n                        toBodyWidget = newBodyWidget;\n                    }\n                    this.updateContainerWidget(paragraphWidget, newBodyWidget, 0, true);\n                }\n                //Updates client area based on next page.\n                viewer.updateClientArea(newBodyWidget, newBodyWidget.page);\n                break;\n            }\n        }\n        if (!isNullOrUndefined(footNoteWidgets) && footNoteWidgets.length > 0 && fromBodyWidget.page.footnoteWidget\n            && fromBodyWidget != toBodyWidget) {\n            this.moveFootNotesToPage(footNoteWidgets, fromBodyWidget, toBodyWidget);\n        }\n    };\n    Layout.prototype.updateParagraphWidgetInternal = function (lineWidget, newParagraphWidget, index) {\n        if (!isNullOrUndefined(lineWidget.paragraph)) {\n            lineWidget.paragraph.childWidgets.splice(lineWidget.paragraph.childWidgets.indexOf(lineWidget), 1);\n            lineWidget.paragraph.height -= lineWidget.height;\n            if (!isNullOrUndefined(lineWidget.paragraph.containerWidget)) {\n                lineWidget.paragraph.containerWidget.height -= lineWidget.height;\n            }\n            if (isNullOrUndefined(lineWidget.paragraph.childWidgets) || lineWidget.paragraph.childWidgets.length === 0) {\n                lineWidget.paragraph.destroyInternal(this.viewer);\n            }\n        }\n        if (!isNullOrUndefined(lineWidget.paragraph) && lineWidget.paragraph.floatingElements.length > 0) {\n            this.shiftFloatingElements(lineWidget, newParagraphWidget);\n        }\n        newParagraphWidget.childWidgets.splice(index, 0, lineWidget);\n        lineWidget.paragraph = newParagraphWidget;\n        newParagraphWidget.height += lineWidget.height;\n        if (!isNullOrUndefined(newParagraphWidget.containerWidget)) {\n            newParagraphWidget.containerWidget.height += lineWidget.height;\n        }\n    };\n    Layout.prototype.shiftFloatingElements = function (lineWidget, newParagraphWidget) {\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            if (lineWidget.children[i] instanceof ShapeElementBox && lineWidget.children[i].textWrappingStyle === 'Inline') {\n                var index = lineWidget.paragraph.floatingElements.indexOf(lineWidget.children[i]);\n                if (index >= 0) {\n                    lineWidget.paragraph.floatingElements.splice(index, 1);\n                    newParagraphWidget.floatingElements.splice(index, 0, lineWidget.children[i]);\n                }\n            }\n        }\n    };\n    Layout.prototype.shiftNextWidgets = function (blockAdv) {\n        var block = blockAdv;\n        while (block.nextWidget instanceof BlockWidget) {\n            block = block.nextWidget;\n            if (this.viewer instanceof PageLayoutViewer && !this.isMultiColumnSplit && block.bodyWidget.sectionFormat.columns.length > 1) {\n                var lastbody = this.getBodyWidget(block.bodyWidget, false);\n                if ((!isNullOrUndefined(lastbody.nextRenderedWidget) && lastbody.page === lastbody.nextRenderedWidget.page)) {\n                    this.splitBodyWidgetBasedOnColumn(block.bodyWidget);\n                    break;\n                }\n            }\n            this.reLayoutOrShiftWidgets(block, this.viewer);\n        }\n    };\n    Layout.prototype.updateContainerWidget = function (widget, bodyWidget, index, destroyAndScroll, footWidget) {\n        if (widget.containerWidget && widget.containerWidget.containerWidget instanceof FootNoteWidget) {\n            return;\n        }\n        var previousWidget = widget.containerWidget;\n        if (!isNullOrUndefined(widget.containerWidget)) {\n            widget.containerWidget.childWidgets.splice(widget.containerWidget.childWidgets.indexOf(widget), 1);\n            widget.containerWidget.height -= bodyWidget.height;\n            if ((isNullOrUndefined(widget.containerWidget.childWidgets) || widget.containerWidget.childWidgets.length === 0)\n                && widget.containerWidget instanceof BodyWidget && widget.containerWidget !== bodyWidget && destroyAndScroll) {\n                var page = widget.containerWidget.page;\n                if (this.documentHelper.pages[this.documentHelper.pages.length - 1] === page &&\n                    this.viewer.visiblePages.indexOf(page) !== -1) {\n                    this.documentHelper.scrollToBottom();\n                }\n                if (isNullOrUndefined(page.nextPage) || page.nextPage.bodyWidgets[0].index !== widget.containerWidget.index) {\n                    var section = widget.containerWidget;\n                    if (!isNullOrUndefined(section.nextRenderedWidget) && section.nextRenderedWidget.sectionFormat.columns.length > 1) {\n                        section.nextRenderedWidget.columnIndex = section.columnIndex;\n                    }\n                    widget.containerWidget.destroyInternal(this.viewer);\n                }\n            }\n        }\n        bodyWidget.childWidgets.splice(index, 0, widget);\n        if (widget instanceof ParagraphWidget && !isNullOrUndefined(widget.floatingElements)) {\n            for (var i = 0; i < widget.floatingElements.length; i++) {\n                var shape = widget.floatingElements[i];\n                if (shape.textWrappingStyle !== 'Inline') {\n                    bodyWidget.floatingElements.push(shape);\n                    widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(shape), 1);\n                    /* eslint:disable */\n                    bodyWidget.floatingElements.sort(function (a, b) { return a.y - b.y; });\n                }\n            }\n        }\n        if (widget instanceof TableWidget && widget.wrapTextAround\n            && widget.bodyWidget.floatingElements.indexOf(widget) !== -1) {\n            widget.bodyWidget.floatingElements.splice(widget.bodyWidget.floatingElements.indexOf(widget), 1);\n        }\n        bodyWidget.height += bodyWidget.height;\n        widget.containerWidget = bodyWidget;\n        if (previousWidget && previousWidget.page && previousWidget.page.footnoteWidget && footWidget && footWidget.length > 0) {\n            this.moveFootNotesToPage(footWidget, previousWidget, bodyWidget);\n        }\n    };\n    Layout.prototype.getBodyWidgetOfPreviousBlock = function (block, index) {\n        index = 0;\n        var prevBodyWidget = undefined;\n        var previousBlock = block.previousRenderedWidget;\n        prevBodyWidget = (previousBlock && previousBlock.containerWidget.equals(block.containerWidget)) ?\n            previousBlock.containerWidget :\n            (block instanceof TableWidget && !isNullOrUndefined(block.containerWidget.previousRenderedWidget) && block.containerWidget.index === block.containerWidget.previousRenderedWidget.index) ?\n                block.containerWidget.previousRenderedWidget :\n                block.containerWidget;\n        index = previousBlock && previousBlock.containerWidget.equals(block.containerWidget) ?\n            prevBodyWidget.childWidgets.indexOf(previousBlock) : block.containerWidget.childWidgets.indexOf(block);\n        return { bodyWidget: prevBodyWidget, index: index };\n    };\n    Layout.prototype.moveBlocksToNextPage = function (block, moveFootnoteFromLastBlock, childStartIndex, sectionBreakContinuous) {\n        var body = block.bodyWidget;\n        this.viewer.columnLayoutArea.setColumns(body.sectionFormat);\n        var nextColumn = this.viewer.columnLayoutArea.getNextColumnByBodyWidget(block.bodyWidget);\n        var nextPage = undefined;\n        var nextBody = undefined;\n        if (!isNullOrUndefined(nextColumn) && !(block instanceof ParagraphWidget && block.isEndsWithPageBreak)) {\n            nextBody = this.moveToNextColumnByBodyWidget(block, childStartIndex);\n            nextBody.columnIndex = nextColumn.index;\n            nextBody.y = block.bodyWidget.y;\n            this.viewer.updateClientArea(nextBody, nextBody.page);\n            this.viewer.clientActiveArea.height -= nextBody.y - this.viewer.clientActiveArea.y;\n            this.viewer.clientActiveArea.y = nextBody.y;\n            if (block.bodyWidget.sectionFormat.columns.length > 1) {\n                var columnIndex = block.bodyWidget.columnIndex;\n                var columnWidth = block.bodyWidget.x + block.bodyWidget.sectionFormat.columns[columnIndex].width + block.bodyWidget.sectionFormat.columns[columnIndex].space;\n                for (var j = 0; j < block.bodyWidget.floatingElements.length; j++) {\n                    if (block.bodyWidget.floatingElements[j] instanceof ShapeElementBox && columnWidth < block.bodyWidget.floatingElements[j].x + block.bodyWidget.floatingElements[j].width) {\n                        nextBody.floatingElements.push(block.bodyWidget.floatingElements[j]);\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(nextBody)) {\n            var insertPage = false;\n            var page = body.page;\n            var pageIndex = page.index + 1;\n            if (this.documentHelper.pages.length > pageIndex && !this.isMultiColumnLayout) {\n                nextPage = this.documentHelper.pages[pageIndex];\n                if (!isNullOrUndefined(nextPage) && nextPage.bodyWidgets.length !== 0 && body.sectionFormat.pageHeight === nextPage.bodyWidgets[0].sectionFormat.pageHeight && body.sectionFormat.pageWidth === nextPage.bodyWidgets[0].sectionFormat.pageWidth && body.sectionFormat.breakCode === 'NoBreak') {\n                    if (nextPage.bodyWidgets[0].index === body.index) {\n                        nextBody = nextPage.bodyWidgets[0];\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                    }\n                    else {\n                        nextBody = this.createSplitBody(body);\n                        nextPage.bodyWidgets.splice(0, 0, nextBody);\n                        nextBody.page = nextPage;\n                        this.viewer.updateClientArea(nextBody, nextBody.page);\n                        nextBody.y = this.viewer.clientActiveArea.y;\n                    }\n                }\n                else if (nextPage.bodyWidgets.length === 0 || !body.equals(nextPage.bodyWidgets[0]) || (body.sectionIndex !== nextPage.bodyWidgets[0].sectionIndex && body.sectionFormat.breakCode === 'NewPage')) {\n                    nextPage = undefined;\n                    insertPage = true;\n                }\n                else {\n                    nextBody = nextPage.bodyWidgets[0];\n                    this.viewer.updateClientArea(nextBody, nextBody.page);\n                }\n            }\n            if (this.isMultiColumnLayout) {\n                insertPage = true;\n            }\n            if (isNullOrUndefined(nextPage)) {\n                nextBody = this.createSplitBody(body);\n                if ((((this.documentHelper.owner.editorHistoryModule &&\n                    this.documentHelper.owner.editorHistoryModule.isRedoing && this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo &&\n                    this.documentHelper.owner.editorHistoryModule.currentBaseHistoryInfo.action === 'SectionBreakContinuous')) && block.bodyWidget.sectionFormat.breakCode === 'NoBreak')\n                    || sectionBreakContinuous) {\n                    //  this.viewer.clientActiveArea.y = block.y + block.height;\n                }\n                else {\n                    nextPage = this.viewer.createNewPage(nextBody, pageIndex);\n                    this.viewer.updateClientArea(nextBody, nextBody.page);\n                    nextBody.y = this.viewer.clientActiveArea.y;\n                }\n                if (insertPage && !isNullOrUndefined(nextPage)) {\n                    this.documentHelper.insertPage(pageIndex, nextPage);\n                }\n                this.clearLineMeasures();\n            }\n            if (nextPage) {\n                do {\n                    var lastBody = body.page.bodyWidgets[body.page.bodyWidgets.length - 1];\n                    if (this.isSectionBreakCont || body === lastBody || body.containerWidget instanceof FootNoteWidget) {\n                        break;\n                    }\n                    body.page.bodyWidgets.splice(body.page.bodyWidgets.indexOf(lastBody), 1);\n                    nextPage.bodyWidgets.splice(1, 0, lastBody);\n                    lastBody.page = nextPage;\n                } while (true);\n            }\n        }\n        // eslint-disable  no-constant-condition\n        if (this.isTextFormat) {\n            var index = body.childWidgets.indexOf(block);\n            var child = body.childWidgets.slice(index);\n            body.childWidgets.splice(index);\n            for (var _i = 0, child_1 = child; _i < child_1.length; _i++) {\n                var obj = child_1[_i];\n                nextBody.childWidgets.push(obj);\n                obj.containerWidget = nextBody;\n            }\n        }\n        else {\n            do {\n                var lastBlock = void 0;\n                if (body.lastChild instanceof FootNoteWidget) {\n                    lastBlock = body.lastChild.previousWidget;\n                }\n                else {\n                    lastBlock = body.lastChild;\n                }\n                if (moveFootnoteFromLastBlock) {\n                    var footWidget = this.getFootNoteWidgetsOf(lastBlock);\n                    this.moveFootNotesToPage(footWidget, body, nextBody);\n                }\n                if (block === lastBlock) {\n                    break;\n                }\n                body.childWidgets.splice(body.childWidgets.indexOf(lastBlock), 1);\n                nextBody.childWidgets.splice(0, 0, lastBlock);\n                if (lastBlock instanceof TableWidget && (body.floatingElements.indexOf(lastBlock) !== -1)) {\n                    body.floatingElements.splice(body.floatingElements.indexOf(lastBlock), 1);\n                    //nextBody.floatingElements.push(lastBlock);\n                }\n                if (lastBlock instanceof ParagraphWidget && lastBlock.floatingElements.length > 0) {\n                    for (var m = 0; m < lastBlock.floatingElements.length; m++) {\n                        if (body.floatingElements.indexOf(lastBlock.floatingElements[m]) !== -1 && lastBlock.floatingElements[m].textWrappingStyle !== 'Inline') {\n                            body.floatingElements.splice(body.floatingElements.indexOf(lastBlock.floatingElements[m]), 1);\n                            nextBody.floatingElements.push(lastBlock.floatingElements[m]);\n                        }\n                    }\n                }\n                lastBlock.containerWidget = nextBody;\n                nextBody.height += lastBlock.height;\n                // eslint-disable-next-line no-constant-condition\n            } while (true);\n        }\n        return nextBody;\n    };\n    Layout.prototype.createSplitBody = function (body) {\n        var newBody = this.addBodyWidget(this.viewer.clientActiveArea);\n        newBody.sectionFormat = body.sectionFormat;\n        newBody.index = body.index;\n        return newBody;\n    };\n    Layout.prototype.createOrGetNextColumnBody = function (fromBody) {\n        var nextColumnBody;\n        if (fromBody.nextRenderedWidget && fromBody.columnIndex + 1 === fromBody.nextRenderedWidget.columnIndex) {\n            nextColumnBody = fromBody.nextRenderedWidget;\n        }\n        if (isNullOrUndefined(nextColumnBody)) {\n            nextColumnBody = new BodyWidget();\n            nextColumnBody.sectionFormat = fromBody.sectionFormat;\n            nextColumnBody.index = fromBody.index;\n            nextColumnBody.page = fromBody.page;\n            nextColumnBody.y = fromBody.y;\n            if (fromBody.containerWidget instanceof FootNoteWidget) {\n                fromBody.containerWidget.bodyWidgets.splice(fromBody.containerWidget.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n                nextColumnBody.containerWidget = fromBody.containerWidget;\n            }\n            else {\n                fromBody.page.bodyWidgets.splice(fromBody.page.bodyWidgets.indexOf(fromBody) + 1, 0, nextColumnBody);\n            }\n        }\n        return nextColumnBody;\n    };\n    Layout.prototype.moveToNextColumnByBodyWidget = function (block, childStartIndex) {\n        var fromBody = block.containerWidget;\n        var nextColumnBody = this.createOrGetNextColumnBody(fromBody);\n        return nextColumnBody;\n    };\n    //endregion\n    //#region Relayout Parargaph\n    /* eslint-disable  */\n    Layout.prototype.reLayoutLine = function (paragraph, lineIndex, isBidi, isSkip, isSkipList) {\n        if (!this.documentHelper.owner.editorModule.isFootnoteElementRemoved) {\n            this.isFootnoteContentChanged = false;\n        }\n        if (this.viewer.owner.isDocumentLoaded && this.viewer.owner.editorModule && !isSkipList) {\n            this.viewer.owner.editorModule.updateWholeListItems(paragraph);\n        }\n        var lineWidget;\n        if (paragraph.paragraphFormat.listFormat && paragraph.paragraphFormat.listFormat.listId !== -1) {\n            lineWidget = paragraph.getSplitWidgets()[0].firstChild;\n        }\n        else {\n            lineWidget = paragraph.childWidgets[lineIndex];\n        }\n        var lineToLayout;\n        if (paragraph.containerWidget instanceof BodyWidget && paragraph.containerWidget.sectionFormat.numberOfColumns > 1 && paragraph.containerWidget.sectionFormat.equalWidth) {\n            lineToLayout = lineWidget.previousLine;\n        }\n        if (isNullOrUndefined(lineToLayout)) {\n            lineToLayout = lineWidget;\n        }\n        if (this.allowLayout) {\n            lineToLayout.paragraph.splitTextRangeByScriptType(lineToLayout.indexInOwner);\n            lineToLayout.paragraph.splitLtrAndRtlText(lineToLayout.indexInOwner);\n            lineToLayout.paragraph.combineconsecutiveRTL(lineToLayout.indexInOwner);\n        }\n        var bodyWidget = paragraph.containerWidget;\n        bodyWidget.height -= paragraph.height;\n        if ((this.viewer.owner.enableHeaderAndFooter || paragraph.isInHeaderFooter) && !(bodyWidget instanceof TextFrame)) {\n            paragraph.bodyWidget.isEmpty = false;\n            this.viewer.updateHeaderFooterClientAreaWithTop(paragraph.bodyWidget.sectionFormat, this.documentHelper.isBlockInHeader(paragraph), bodyWidget.page);\n        }\n        else if (bodyWidget instanceof TextFrame) {\n            this.viewer.updateClientAreaForTextBoxShape(bodyWidget.containerShape, true);\n            // } else if (bodyWidget instanceof FootNoteWidget) {\n            //     this.isRelayoutFootnote = true;\n            //     this.viewer.updateClientArea(bodyWidget.sectionFormat, bodyWidget.page);\n            //     this.viewer.clientArea.height = Number.POSITIVE_INFINITY;\n            //     this.viewer.clientActiveArea.height = Number.POSITIVE_INFINITY;\n            //     // curretBlock.containerWidget.height -= curretBlock.height;\n            //     this.viewer.clientActiveArea.y = paragraph.containerWidget.y;\n        }\n        else {\n            this.viewer.updateClientArea(bodyWidget, bodyWidget.page, true);\n        }\n        this.viewer.updateClientAreaForBlock(paragraph, true);\n        if (!isNullOrUndefined(paragraph.containerWidget) && !isNullOrUndefined(paragraph.containerWidget.containerWidget) && paragraph.containerWidget.containerWidget instanceof FootNoteWidget) {\n            var y = paragraph.bodyWidget.containerWidget.y;\n            this.viewer.cutFromTop(y);\n            this.documentHelper.owner.editorModule.isFootNoteInsert = true;\n            this.layoutfootNote(paragraph.containerWidget.containerWidget);\n            this.documentHelper.owner.editorModule.isFootNoteInsert = false;\n            return;\n        }\n        else if (lineToLayout.paragraph.isEmpty()) {\n            this.viewer.cutFromTop(paragraph.y);\n            this.layoutParagraph(paragraph, 0);\n        }\n        else {\n            this.updateClientAreaForLine(lineToLayout);\n            this.layoutListItems(lineToLayout.paragraph);\n            if (lineToLayout.isFirstLine() && !isNullOrUndefined(paragraph.paragraphFormat)) {\n                var firstLineIndent = -HelperMethods.convertPointToPixel(paragraph.paragraphFormat.firstLineIndent);\n                this.viewer.updateClientWidth(firstLineIndent);\n            }\n            do {\n                lineToLayout = this.layoutLine(lineToLayout, 0);\n                paragraph = lineToLayout.paragraph;\n                lineToLayout = lineToLayout.nextLine;\n            } while (lineToLayout);\n            this.updateWidgetToPage(this.viewer, paragraph);\n        }\n        this.viewer.updateClientAreaForBlock(paragraph, false);\n        this.layoutNextItemsBlock(paragraph, this.viewer);\n        var prevWidget = paragraph.getSplitWidgets()[0].previousRenderedWidget;\n        if (!isNullOrUndefined(prevWidget) && !paragraph.isEndsWithPageBreak && !paragraph.isEndsWithColumnBreak && (!(prevWidget instanceof ParagraphWidget) ||\n            (prevWidget instanceof ParagraphWidget) && !prevWidget.isEndsWithPageBreak && !prevWidget.isEndsWithColumnBreak)) {\n            this.viewer.cutFromTop(paragraph.y + paragraph.height);\n            if (paragraph.containerWidget !== prevWidget.containerWidget && !isNullOrUndefined(prevWidget.containerWidget)) {\n                /* eslint-disable-next-line max-len */\n                var prevBodyWidget = paragraph.containerWidget;\n                var newBodyWidget_1 = prevWidget.containerWidget;\n                var footWidgets = this.getFootNoteWidgetsOf(paragraph);\n                //this.updateContainerWidget(paragraph as Widget, newBodyWidget, prevWidget.indexInOwner + 1, false);\n                if (!isNullOrUndefined(newBodyWidget_1.page.footnoteWidget)) {\n                    this.moveFootNotesToPage(footWidgets, newBodyWidget_1, prevBodyWidget);\n                }\n            }\n        }\n        var page = this.documentHelper.pages.length;\n        var lastPage = this.documentHelper.pages[page - 1];\n        var foot;\n        var newBodyWidget = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n        if ((this.documentHelper.owner.editorModule.isFootnoteElementRemoved || this.isFootnoteContentChanged)\n            && !isNullOrUndefined(paragraph.bodyWidget.page.footnoteWidget)) {\n            foot = paragraph.bodyWidget.page.footnoteWidget;\n            this.layoutfootNote(foot);\n        }\n        if (!isNullOrUndefined(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing && !isNullOrUndefined(newBodyWidget.page.endnoteWidget)) {\n            this.isEndnoteContentChanged = true;\n        }\n        if ((this.documentHelper.owner.editorModule.isEndnoteElementRemoved || this.isEndnoteContentChanged)\n            && !isNullOrUndefined(newBodyWidget.page.endnoteWidget)) {\n            foot = newBodyWidget.page.endnoteWidget;\n            var clientArea = this.viewer.clientArea.clone();\n            var clientActiveArea = this.viewer.clientActiveArea.clone();\n            var lastPageLastPara = newBodyWidget.childWidgets[newBodyWidget.childWidgets.length - 1];\n            var y = lastPageLastPara.y + lastPageLastPara.height;\n            this.viewer.clientActiveArea.height = this.viewer.clientActiveArea.bottom - y;\n            this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n            this.viewer.clientActiveArea.width = this.viewer.clientArea.width;\n            this.viewer.clientActiveArea.y = y;\n            this.layoutfootNote(foot);\n            this.viewer.clientArea = clientArea;\n            this.viewer.clientActiveArea = clientActiveArea;\n            //this.viewer.updateClientAreaForBlock(foot.block, false);\n        }\n        if (!isNullOrUndefined(this.viewer.owner.editorHistoryModule) && this.viewer.owner.editorHistoryModule.isRedoing) {\n            this.isEndnoteContentChanged = false;\n        }\n    };\n    //#endregion\n    //RTL Feature layout start\n    Layout.prototype.isContainsRtl = function (lineWidget) {\n        if (this.viewer.documentHelper.isSelectionChangedOnMouseMoved && !this.isDocumentContainsRtl) {\n            return false;\n        }\n        var isContainsRTL = false;\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            if (lineWidget.children[i] instanceof TextElementBox) {\n                isContainsRTL = lineWidget.children[i].characterFormat.bidi || lineWidget.children[i].characterFormat.bdo === 'RTL'\n                    || this.documentHelper.textHelper.isRTLText(lineWidget.children[i].text);\n                if (isContainsRTL) {\n                    if (!this.isDocumentContainsRtl) {\n                        this.isDocumentContainsRtl = isContainsRTL;\n                    }\n                    break;\n                }\n            }\n        }\n        return isContainsRTL;\n    };\n    // Re arranges the elements for Right to left layotuing.\n    /* eslint-disable  */\n    // public reArrangeElementsForRtl(line: LineWidget, isParaBidi: boolean): void {\n    //     if (line.children.length === 0) {\n    //         return;\n    //     }\n    //     let lastAddedElementIsRtl: boolean = false;\n    //     let lastAddedRtlElementIndex: number = -1;\n    //     let tempElements: ElementBox[] = [];\n    //     for (let i: number = 0; i < line.children.length; i++) {\n    //         let element: ElementBox = line.children[i];\n    //         let elementCharacterFormat: WCharacterFormat = undefined;\n    //         if (element.characterFormat) {\n    //             elementCharacterFormat = element.characterFormat;\n    //         }\n    //         let isRtl: boolean = false;\n    //         let text: string = '';\n    //         let containsSpecchrs: boolean = false;\n    //         if (element instanceof BookmarkElementBox) {\n    //             if (isParaBidi) {\n    //                 if (lastAddedElementIsRtl || element.bookmarkType === 0 && element.nextElement\n    //                     && element.nextElement.nextElement instanceof TextElementBox\n    //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.nextElement.text)\n    //                     || element.bookmarkType === 1 && element.nextElement instanceof TextElementBox\n    //                     && this.documentHelper.textHelper.isRTLText(element.nextElement.text)) {\n    //                     tempElements.splice(0, 0, element);\n    //                 } else {\n    //                     tempElements.splice(lastAddedElementIsRtl ? lastAddedRtlElementIndex : lastAddedRtlElementIndex + 1, 0, element);\n    //                 }\n    //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //             } else {\n    //                 tempElements.push(element);\n    //             }\n    //             continue;\n    //         }\n    //         if (element instanceof TextElementBox) {\n    //             text = (element as TextElementBox).text;\n    //             containsSpecchrs = this.documentHelper.textHelper.containsSpecialCharAlone(text.trim());\n    //             if (containsSpecchrs) {\n    //                 if (elementCharacterFormat.bidi && isParaBidi) {\n    //                     text = HelperMethods.reverseString(text);\n    //                     for (let k: number = 0; k < text.length; k++) {\n    //                         let ch: string = this.documentHelper.textHelper.inverseCharacter(text.charAt(k));\n    //                         text = text.replace(text.charAt(k), ch);\n    //                     }\n    //                     element.text = text;\n    //                 }\n    //             }\n    //             let textElement: ElementBox = element.nextElement;\n    //             if (element instanceof TextElementBox && this.documentHelper.textHelper.containsNumberAlone(element.text.trim())) {\n    //                 while (textElement instanceof TextElementBox && textElement.text.trim() !== '' && (this.documentHelper.textHelper.containsNumberAlone(textElement.text.trim()) || this.documentHelper.textHelper.containsSpecialCharAlone(textElement.text.trim()))) {\n    //                     element.text = element.text + textElement.text;\n    //                     element.line.children.splice(element.line.children.indexOf(textElement), 1);\n    //                     textElement = element.nextElement;\n    //                 }\n    //                 element.width = this.documentHelper.textHelper.getTextSize(element as TextElementBox, element.characterFormat);\n    //             }\n    //         }\n    //         let isRTLText: boolean = false;\n    //         // let isNumber: boolean = false;\n    //         // The list element box shold be added in the last position in line widget for the RTL paragraph \n    //         // and first in the line widget for LTR paragrph.\n    //         if (element instanceof ListTextElementBox) {\n    //             isRtl = isParaBidi;\n    //         } else { // For Text element box we need to check the character format and unicode of text to detect the RTL text. \n    //             isRTLText = this.documentHelper.textHelper.isRTLText(text);\n    //             isRtl = isRTLText || elementCharacterFormat.bidi\n    //                 || elementCharacterFormat.bdo === 'RTL';\n    //         }\n    //         if (element instanceof FieldElementBox || this.isRtlFieldCode) {\n    //             if ((element as FieldElementBox).fieldType === 0) {\n    //                 this.isRtlFieldCode = true;\n    //             } else if ((element as FieldElementBox).fieldType === 1) {\n    //                 this.isRtlFieldCode = false;\n    //             }\n    //             isRtl = false;\n    //         }\n    //         // If the text element box contains only whitespaces, then need to check the previous and next elements.\n    //         if (!isRtl && !isNullOrUndefined(text) && text !== '' && ((text !== '' && text.trim() === '') || containsSpecchrs)) {\n    //             let elements: ElementBox[] = line.children;\n    //             //Checks whether the langugae is RTL.\n    //             if (elementCharacterFormat.bidi) {\n    //                 // If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n    //                 if (lastAddedElementIsRtl) {\n    //                     isRtl = true;\n    //                     // Else, Check for next element.\n    //                 } else if (i + 1 < line.children.length && line.children[i + 1] instanceof TextElementBox) {\n    //                     text = (elements[i + 1] as TextElementBox).text;\n    //                     isRtl = this.documentHelper.textHelper.isRTLText(text) || elements[i + 1].characterFormat.bidi\n    //                         || elements[i + 1].characterFormat.bdo === 'RTL';\n    //                 }// If the last added element is rtl then current text element box also considered as RTL for WhiteSpaces.\n    //             } else if (lastAddedElementIsRtl) {\n    //                 isRtl = true;\n    //             }\n    //         }\n    //         // Preserve the isRTL value, to reuse it for navigation and selection.\n    //         element.isRightToLeft = isRtl;\n    //         //Adds the text element to the line\n    //         if (isRtl && elementCharacterFormat.bdo !== 'LTR') {\n    //             if (lastAddedElementIsRtl) {\n    //                 tempElements.splice(lastAddedRtlElementIndex, 0, element);\n    //             } else {\n    //                 if (!isParaBidi) {\n    //                     tempElements.push(element);\n    //                 } else {\n    //                     tempElements.splice(0, 0, element);\n    //                 }\n    //                 lastAddedElementIsRtl = true;\n    //                 lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //             }\n    //         } else {\n    //             if (lastAddedElementIsRtl && element instanceof ImageElementBox) {\n    //                 if (elementCharacterFormat.bidi) {\n    //                     tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n    //                 } else {\n    //                     tempElements.splice(lastAddedRtlElementIndex, 0, element);\n    //                 }\n    //             } else {\n    //                 if (!isParaBidi) {\n    //                     tempElements.push(element);\n    //                 } else {\n    //                     if (lastAddedElementIsRtl) {\n    //                         tempElements.splice(0, 0, element);\n    //                     } else {\n    //                         tempElements.splice(lastAddedRtlElementIndex + 1, 0, element);\n    //                     }\n    //                     lastAddedRtlElementIndex = tempElements.indexOf(element);\n    //                 }\n    //                 lastAddedElementIsRtl = false;\n    //             }\n    //         }\n    //     }\n    //     // Clear the elemnts and reassign the arranged elements.\n    //     line.children = [];\n    //     line.children = tempElements;\n    // }\n    Layout.prototype.shiftElementsForRTLLayouting = function (line, paraBidi) {\n        ////Check whether span has bidi value\n        var textRangeBidi = this.hasTextRangeBidi(line);\n        if (this.isContainsRTLText(line) || paraBidi || textRangeBidi) {\n            ////Splits the child elements of a line by consecutive RTL, LTR text and word breaking characters.\n            var characterRangeTypes = [];\n            var lineElementsBidiValues = [];\n            for (var i = 0; i < line.children.length; i++) {\n                var element = line.children[i];\n                if (element instanceof TextElementBox && element.height > 0 && !(element.isPageBreak) && element.text !== '\\v') {\n                    var textRange = element;\n                    lineElementsBidiValues.push(textRange.characterFormat.bidi);\n                    if (textRange.text == \"\\t\") {\n                        characterRangeTypes.push(CharacterRangeType.Tab);\n                    }\n                    else {\n                        characterRangeTypes.push(textRange.characterRange);\n                    }\n                    element.isRightToLeft = characterRangeTypes[characterRangeTypes.length - 1] == CharacterRangeType.RightToLeft;\n                }\n                else if (element instanceof CommentCharacterElementBox\n                    || element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox\n                    || element instanceof EditRangeEndElementBox || element instanceof ContentControl\n                    || element instanceof FieldElementBox) {\n                    var isStartMark = this.isStartMarker(element);\n                    var isEndMark = this.isEndMarker(element);\n                    if (isStartMark && i < line.children.length - 1) {\n                        var nextltWidget = this.getNextValidWidget(i + 1, line);\n                        if (!isNullOrUndefined(nextltWidget) && (nextltWidget instanceof TextElementBox)\n                            && nextltWidget.height > 0) {\n                            var textRange = nextltWidget;\n                            lineElementsBidiValues.push(textRange.characterFormat.bidi);\n                            //Since tab-stop in the line changes the reordering, here we consider an tab-stop widget as Tab.\n                            if (nextltWidget.text === '\\t') {\n                                characterRangeTypes.push(CharacterRangeType.Tab);\n                            }\n                            else {\n                                characterRangeTypes.push(textRange.characterRange);\n                            }\n                        }\n                        else {\n                            lineElementsBidiValues.push(false);\n                            characterRangeTypes.push(CharacterRangeType.LeftToRight);\n                        }\n                    }\n                    else if (!isEndMark && i > 0) {\n                        lineElementsBidiValues.push(lineElementsBidiValues[lineElementsBidiValues.length - 1]);\n                        characterRangeTypes.push(characterRangeTypes[characterRangeTypes.length - 1]);\n                    }\n                    else {\n                        lineElementsBidiValues.push(false);\n                        characterRangeTypes.push(CharacterRangeType.LeftToRight);\n                    }\n                }\n                else if (element instanceof ListTextElementBox && paraBidi) {\n                    lineElementsBidiValues.push(paraBidi);\n                    characterRangeTypes.push(CharacterRangeType.RightToLeft);\n                }\n                else {\n                    lineElementsBidiValues.push(false);\n                    characterRangeTypes.push(CharacterRangeType.LeftToRight);\n                }\n            }\n            ////Sets CharacterRangeType of word split characters as (WordSplit | RTL), if word split characters are present between splitted RTL text in the same layouted line.\n            ////This code handles for both single and multiple Text Ranges of a line (Special case for ordering elements)\n            var rtlStartIndex = -1;\n            var isPrevLTRText = undefined;\n            for (var i = 0; i < characterRangeTypes.length; i++) {\n                if (i + 1 < lineElementsBidiValues.length\n                    && lineElementsBidiValues[i] != lineElementsBidiValues[i + 1]) {\n                    if (rtlStartIndex != -1) {\n                        this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                        rtlStartIndex = -1;\n                    }\n                    isPrevLTRText = null;\n                    continue;\n                }\n                /// When only one NumberNonReversingCharacter(.:,) is exists in between a two numbers and \n                /// both these number and NumberNonReversingCharacter having a Bidi property,\n                /// MS Word consider this NumberNonReversingCharacter(.:,) as Number and re-order it accordingly.\n                if (i > 0 && i != characterRangeTypes.length - 1\n                    && characterRangeTypes[i] == CharacterRangeType.WordSplit && lineElementsBidiValues[i]\n                    && characterRangeTypes[i - 1] == CharacterRangeType.Number && lineElementsBidiValues[i - 1]\n                    && characterRangeTypes[i + 1] == CharacterRangeType.Number && lineElementsBidiValues[i + 1]\n                    && this.isNumberNonReversingCharacter(line.children[i])) {\n                    characterRangeTypes[i] = CharacterRangeType.Number;\n                }\n                else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft || characterRangeTypes[i] == CharacterRangeType.LeftToRight\n                    || characterRangeTypes[i] == CharacterRangeType.Number && rtlStartIndex != -1\n                    || (isNullOrUndefined(isPrevLTRText) || !isPrevLTRText) && lineElementsBidiValues[i]) {\n                    if (rtlStartIndex == -1 && characterRangeTypes[i] != CharacterRangeType.LeftToRight) {\n                        rtlStartIndex = i;\n                    }\n                    else if (rtlStartIndex == -1) {\n                        if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n                            isPrevLTRText = true;\n                        }\n                        else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft) {\n                            isPrevLTRText = false;\n                        }\n                        continue;\n                    }\n                    else if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n                        this.updateCharacterRange(line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                        rtlStartIndex = characterRangeTypes[i] == CharacterRangeType.RightToLeft\n                            || characterRangeTypes[i] == CharacterRangeType.Number && rtlStartIndex != -1 ? i : -1;\n                    }\n                }\n                if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n                    isPrevLTRText = true;\n                }\n                else if (characterRangeTypes[i] == CharacterRangeType.RightToLeft) {\n                    isPrevLTRText = false;\n                }\n            }\n            if (rtlStartIndex != -1 && rtlStartIndex < characterRangeTypes.length - 1) {\n                this.updateCharacterRange(line, characterRangeTypes.length - 1, rtlStartIndex, lineElementsBidiValues, characterRangeTypes);\n                rtlStartIndex = -1;\n            }\n            if (characterRangeTypes.length != line.children.length) {\n                ////This exception is thrown to avoid, unhandled exception in RTL/LTR reordering logic.\n                throw new Error(\"Splitted Widget count mismatch while reordering layouted child widgets of a line\");\n            }\n            var reorderedWidgets = this.reorderElements(line, characterRangeTypes, lineElementsBidiValues, paraBidi);\n            lineElementsBidiValues.length = 0;\n            characterRangeTypes.length = 0;\n            if (line.children.length > 0) {\n                line.layoutedElements = reorderedWidgets;\n                //elements.Clear();\n                //line.children = reorderedWidgets;\n                ////ReCalculate the height and baseline offset once again.\n                //UpdateMaxElement();\n            }\n        }\n        return paraBidi;\n    };\n    Layout.prototype.isNumberNonReversingCharacter = function (element) {\n        if (element instanceof TextElementBox) {\n            var textRange = element;\n            if (textRange.characterFormat.hasValueWithParent('localeIdBidi')) {\n                //Only these 10 word split characters (‘/’,‘:’,‘.’,‘,’,‘،’,‘#’,‘$’,‘%’,‘+’,‘-’) are behaving as number non reversing character based on language identifier.\n                var ch = textRange.text.charCodeAt(0);\n                //(‘/’) character is behaves as number non reversing character for some specific language identifiers.\n                if ((ch == 47 && !this.isNumberReverseLangForSlash(textRange.characterFormat.localeIdBidi))\n                    //(‘#’,‘$’,‘%’,‘+’,‘-’) characters are behaving as number non reversing character for some specific language identifiers.\n                    || ((ch == 35 || ch == 36 || ch == 37 || ch == 43 || ch == 45) && !this.isNumberReverseLangForOthers(textRange.characterFormat.localeIdBidi))\n                    //(‘,’,‘.’,‘:’,‘،’) characters are behaving as number non reversing character for any language identifier.\n                    || (ch == 44 || ch == 46 || ch == 58 || ch == 1548)) {\n                    return true;\n                }\n            }\n            else {\n                return TextHelper.isNumberNonReversingCharacter(textRange.text, textRange.characterFormat.bidi);\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isNumberReverseLangForSlash = function (lang) {\n        return (this.isNumberReverseLangForOthers(lang) || lang == 6145 || lang == 1164 || lang == 1125 ||\n            lang == 1120 || lang == 1123 || lang == 1065 || lang == 2137 ||\n            lang == 1114 || lang == 1119 || lang == 1152 || lang == 1056);\n    };\n    Layout.prototype.isNumberReverseLangForOthers = function (lang) {\n        return (lang == 14337 || lang == 15361 || lang == 5121 || lang == 3073 || lang == 2049 ||\n            lang == 11265 || lang == 13313 || lang == 12289 || lang == 4097 || lang == 8193 ||\n            lang == 16385 || lang == 1025 || lang == 10241 || lang == 7169 || lang == 9217);\n    };\n    Layout.prototype.isStartMarker = function (element) {\n        if (element instanceof CommentCharacterElementBox) {\n            return element.commentType === 0;\n        }\n        else if (element instanceof BookmarkElementBox) {\n            return element.bookmarkType === 0;\n        }\n        else if (element instanceof EditRangeStartElementBox) {\n            return true;\n        }\n        else if (element instanceof ContentControl) {\n            return element.type === 0;\n        }\n        else if (element instanceof FieldElementBox) {\n            return element.fieldType === 0;\n        }\n        return false;\n    };\n    Layout.prototype.isEndMarker = function (element) {\n        if (element instanceof CommentCharacterElementBox) {\n            return element.commentType === 1;\n        }\n        else if (element instanceof BookmarkElementBox) {\n            return element.bookmarkType === 1;\n        }\n        else if (element instanceof EditRangeStartElementBox) {\n            return true;\n        }\n        else if (element instanceof ContentControl) {\n            return element.type === 1;\n        }\n        else if (element instanceof FieldElementBox) {\n            return element.fieldType === 1;\n        }\n        return false;\n    };\n    Layout.prototype.getNextValidWidget = function (startIndex, layoutedWidgets) {\n        for (var i = startIndex; i < layoutedWidgets.children.length; i++) {\n            var element = layoutedWidgets.children[i];\n            if (element instanceof CommentCharacterElementBox\n                || element instanceof BookmarkElementBox || element instanceof EditRangeStartElementBox\n                || element instanceof EditRangeEndElementBox || element instanceof ContentControl\n                || element instanceof FieldElementBox) {\n                continue;\n            }\n            else {\n                return element[i];\n            }\n        }\n        return null;\n    };\n    Layout.prototype.hasTextRangeBidi = function (line) {\n        for (var i = 0; i < line.children.length; i++) {\n            var elementBox = line.children[i];\n            if (elementBox instanceof TextElementBox) {\n                var textRange = elementBox;\n                if (textRange.characterFormat.bidi) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Layout.prototype.isContainsRTLText = function (line) {\n        var documentHelper = line.paragraph.bodyWidget.page.documentHelper;\n        var textHelper = documentHelper.textHelper;\n        var isContainsRTL = false;\n        for (var i = 0; i < line.children.length; i++) {\n            if (line.children[i] instanceof TextElementBox) {\n                isContainsRTL = line.children[i].characterFormat.bidi || line.children[i].characterFormat.bidi == true\n                    || textHelper.isRTLText(line.children[i].text);\n                if (isContainsRTL)\n                    break;\n            }\n        }\n        return isContainsRTL;\n    };\n    Layout.prototype.updateCharacterRange = function (line, i, rtlStartIndex, lineElementsBidiValues, characterRangeTypes) {\n        var endIndex = i;\n        if (!lineElementsBidiValues[i]) {\n            if (characterRangeTypes[i] === CharacterRangeType.LeftToRight) {\n                endIndex--;\n            }\n            for (var j = endIndex; j >= rtlStartIndex; j--) {\n                if (characterRangeTypes[j] != CharacterRangeType.WordSplit) {\n                    endIndex = j;\n                    break;\n                }\n            }\n        }\n        for (var j = rtlStartIndex; j <= endIndex; j++) {\n            if (characterRangeTypes[j] == CharacterRangeType.WordSplit) {\n                characterRangeTypes[j] = CharacterRangeType.RightToLeft | CharacterRangeType.WordSplit;\n                var previousIndex = j - 1;\n                var nextIndex = j + 1;\n                //// Handled a special behavior, When a EastAsia font is \"Times New Roman\" for text range.\n                //// Group of word split character is exist in between a RTL characters, MS Word reverse a corresponding word split characters.\n                //// So, that we have reverse the word split characters.\n                if (previousIndex >= 0 && nextIndex < characterRangeTypes.length\n                    && characterRangeTypes[previousIndex] == CharacterRangeType.RightToLeft\n                    && (characterRangeTypes[nextIndex] == CharacterRangeType.RightToLeft || characterRangeTypes[nextIndex] == CharacterRangeType.Number)\n                    && line.children[j] instanceof TextElementBox) {\n                    var textRange = line.children[j];\n                    if (textRange.characterFormat.fontFamilyBidi == \"Times New Roman\") {\n                        var charArray = textRange.text.split(\"\");\n                        var reverseArray = charArray.reverse();\n                        var joinArray = reverseArray.join(\"\");\n                        textRange.text = joinArray;\n                    }\n                }\n            }\n        }\n    };\n    Layout.prototype.reorderElements = function (line, characterRangeTypes, listElementsBidiValues, paraBidi) {\n        var insertIndex = 0, lastItemIndexWithoutRTLFlag = -1, consecutiveRTLCount = 0, consecutiveNumberCount = 0;\n        var reorderedElements = [];\n        var prevCharType = CharacterRangeType.LeftToRight;\n        var prevBidi = false;\n        for (var i = 0; i < line.children.length; i++) {\n            var element = line.children[i];\n            var textElement = element;\n            textElement.characterRange = characterRangeTypes[i];\n            var isRTLText = (textElement.characterRange & CharacterRangeType.RightToLeft) == CharacterRangeType.RightToLeft || textElement.characterRange == CharacterRangeType.Number;\n            var isBidi = listElementsBidiValues[i];\n            ////If tab-stop is exist with in the line then we have to consider the below behaviours\n            if (characterRangeTypes[i] == CharacterRangeType.Tab) {\n                if (paraBidi) {\n                    ////When para bidi is true, reordering is performed until tab stop position and break the reordering and then again reordering is performed for the remaining contents which exist after the tab-stop. \n                    ////Assume if we have an tab stop in center of the line, then the reordering is performed until the tab stop position and stop and place a tab stop and starts reordering for the remaining contents. \n                    insertIndex = 0;\n                    lastItemIndexWithoutRTLFlag = -1;\n                    consecutiveRTLCount = 0;\n                    prevCharType = CharacterRangeType.LeftToRight;\n                    prevBidi = false;\n                    reorderedElements.splice(insertIndex, 0, element);\n                    continue;\n                }\n                else if (isBidi) {\n                    ////If text range bidi is true for the tab stop widget, MS Word does not consider this tab-stop bidi as LTR Bidi and does not shift it as per our reordering. \n                    ////Instead its consider this widget as non-bidi LTR and do the reordering.\n                    isBidi = false;\n                }\n            }\n            if (i > 0 && prevBidi != isBidi) {\n                if (paraBidi) {\n                    ////If Bidi of paragraph is true, then start inserting widgets from first (index 0).\n                    insertIndex = 0;\n                    lastItemIndexWithoutRTLFlag = -1;\n                    consecutiveRTLCount = 0;\n                }\n                else {\n                    ////If Bidi of paragraph is false, then start inserting widgets from last (reorderedWidgets.Count).\n                    lastItemIndexWithoutRTLFlag = reorderedElements.length - 1;\n                }\n                ////If Bidi for previous and next widget differs, we have to reset consecutive number to 0.\n                consecutiveNumberCount = 0;\n            }\n            if (!isBidi && !isRTLText) {\n                if (paraBidi) {\n                    if (consecutiveRTLCount > 0 && prevBidi == isBidi) {\n                        insertIndex += consecutiveRTLCount;\n                    }\n                    reorderedElements.splice(insertIndex, 0, element);\n                    insertIndex++;\n                }\n                else {\n                    reorderedElements.push(element);\n                    insertIndex = i + 1;\n                }\n                consecutiveRTLCount = 0;\n                lastItemIndexWithoutRTLFlag = paraBidi ? insertIndex - 1 : reorderedElements.length - 1;\n            }\n            else if (isRTLText || (isBidi && textElement.characterRange == CharacterRangeType.WordSplit\n                && (prevCharType == CharacterRangeType.RightToLeft || this.isInsertWordSplitToLeft(characterRangeTypes, listElementsBidiValues, i)))) {\n                consecutiveRTLCount++;\n                insertIndex = lastItemIndexWithoutRTLFlag + 1;\n                if (textElement.characterRange == CharacterRangeType.Number) {\n                    if (prevCharType == CharacterRangeType.Number) {\n                        ////Moves the insertIndex to the right after the previous consecutive number.\n                        insertIndex += consecutiveNumberCount;\n                    }\n                    ////Increments consecutive number counter, to decide how much position the next number text range (widget) has to be moved and inserted towards right of insertIndex.\n                    consecutiveNumberCount++;\n                }\n                reorderedElements.splice(insertIndex, 0, element);\n            }\n            else {\n                reorderedElements.splice(insertIndex, 0, element);\n                insertIndex++;\n                consecutiveRTLCount = 0;\n            }\n            if (textElement.characterRange != CharacterRangeType.Number) {\n                ////Resets the consecutive number counter when character range is not a number.\n                consecutiveNumberCount = 0;\n            }\n            if (textElement.characterRange != CharacterRangeType.WordSplit) {\n                ////Note: Handled to set only CharacterRangeType.RightToLeft and CharacterRangeType.LeftToRight\n                ////For CharacterRangeType.WordSplit | CharacterRangeType.RightToLeft case, the IsInsertWordSplitToLeft method will return true.\n                prevCharType = textElement.characterRange;\n            }\n            prevBidi = isBidi;\n        }\n        return reorderedElements;\n    };\n    Layout.prototype.isInsertWordSplitToLeft = function (characterRangeTypes, lineElementsBidiValues, elementIndex) {\n        for (var i = elementIndex + 1; i < characterRangeTypes.length; i++) {\n            if ((characterRangeTypes[i] & CharacterRangeType.RightToLeft) == CharacterRangeType.RightToLeft) {\n                return true;\n            }\n            else if (characterRangeTypes[i] == CharacterRangeType.LeftToRight) {\n                if (lineElementsBidiValues[i]) {\n                    return false;\n                }\n                else {\n                    ////If bidi is true for previous LTR and bidi is false for next LTR, then insert Word split to before previous inserted widget.\n                    return true;\n                }\n            }\n        }\n        return true;\n    };\n    Layout.prototype.shiftLayoutFloatingItems = function (paragraph) {\n        for (var i = 0; i < paragraph.floatingElements.length; i++) {\n            var element = paragraph.floatingElements[i];\n            var position = this.getFloatingItemPoints(element);\n            var height = position.y - element.y;\n            element.x = position.x;\n            element.y = position.y;\n            if (element instanceof ShapeElementBox) {\n                for (var j = 0; j < element.textFrame.childWidgets.length; j++) {\n                    var block = element.textFrame.childWidgets[j];\n                    if (block instanceof ParagraphWidget) {\n                        block.y = block.y + height;\n                    }\n                    else if (block instanceof TableWidget) {\n                        this.shiftChildLocationForTableWidget(block, height);\n                    }\n                }\n            }\n        }\n    };\n    //RTL feature layout end\n    Layout.prototype.getFloatingItemPoints = function (floatElement) {\n        var paragraph = floatElement.line.paragraph;\n        var sectionFormat = paragraph.bodyWidget.sectionFormat;\n        var indentX = 0;\n        var indentY = 0;\n        if (paragraph) {\n            var leftMargin = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n            var rightMargin = HelperMethods.convertPointToPixel(sectionFormat.rightMargin);\n            var topMargin = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n            var bottomMargin = sectionFormat.bottomMargin > 0 ? HelperMethods.convertPointToPixel(sectionFormat.bottomMargin) : 48;\n            var headerDistance = HelperMethods.convertPointToPixel(sectionFormat.headerDistance);\n            var footerDistance = HelperMethods.convertPointToPixel(sectionFormat.footerDistance);\n            var pageWidth = HelperMethods.convertPointToPixel(sectionFormat.pageWidth);\n            var pageHeight = HelperMethods.convertPointToPixel(sectionFormat.pageHeight);\n            var pageClientWidth = pageWidth - (leftMargin + rightMargin);\n            var pageClientHeight = pageHeight - topMargin - bottomMargin;\n            //Need to consider RTL layout.\n            if (paragraph.isInHeaderFooter && sectionFormat.topMargin <= 0) {\n                topMargin = Math.abs(topMargin) > 0 ? Math.abs(topMargin)\n                    : HelperMethods.convertPointToPixel(sectionFormat.headerDistance) + (paragraph.height);\n            }\n            else {\n                topMargin = topMargin > 0 ? topMargin : 48;\n            }\n            //Update the top margin as text body y position when text body y position exceeds the top margin. \n            if (!paragraph.isInHeaderFooter && topMargin < this.viewer.clientArea.y) {\n                topMargin = this.viewer.clientArea.y;\n            }\n            var mIsYPositionUpdated = false;\n            var textWrapStyle = 'InFrontOfText';\n            //if (textWrapStyle !== 'Inline') {\n            var isLayoutInCell = false;\n            var vertOrigin = floatElement.verticalOrigin;\n            var horzOrigin = floatElement.horizontalOrigin;\n            var horzAlignment = floatElement.horizontalAlignment;\n            var vertAlignment = floatElement.verticalAlignment;\n            var verticalPercent = floatElement.verticalRelativePercent;\n            var horizontalPercent = floatElement.horizontalRelativePercent;\n            var shapeHeight = floatElement.height;\n            //Need to update size width for Horizontal Line when width exceeds client width.\n            // if(shape !== null && shape.IsHorizontalRule && size.Width > m_layoutArea.ClientActiveArea.Width)\n            //     size.Width = m_layoutArea.ClientActiveArea.Width;\n            var shapeWidth = floatElement.width;\n            var vertPosition = floatElement.verticalPosition;\n            var horzPosition = floatElement.horizontalPosition;\n            var layoutInCell = floatElement.layoutInCell;\n            var heightPercent = floatElement.heightRelativePercent;\n            var widthPercent = floatElement.widthRelativePercent;\n            var autoShape = void 0;\n            if (floatElement instanceof ShapeElementBox) {\n                autoShape = floatElement.autoShapeType;\n            }\n            //Word 2013 Layout picture in table cell even layoutInCell property was False.\n            if (paragraph.isInsideTable && layoutInCell) {\n                isLayoutInCell = true;\n                indentY = this.getVerticalPosition(floatElement, vertPosition, vertOrigin, textWrapStyle);\n                indentX = this.getHorizontalPosition(floatElement.width, floatElement, horzAlignment, horzOrigin, horzPosition, textWrapStyle, paragraph.associatedCell.cellFormat.cellWidth);\n            }\n            else {\n                if (this.documentHelper.viewer instanceof WebLayoutViewer) {\n                    switch (vertOrigin) {\n                        case 'Line':\n                            indentY = this.documentHelper.selection.getTop(floatElement.line);\n                            break;\n                        default:\n                            indentY = this.viewer.clientActiveArea.y;\n                            break;\n                    }\n                    switch (horzOrigin) {\n                        case 'Character':\n                            indentX = this.viewer.clientActiveArea.x;\n                            break;\n                        default:\n                            switch (horzAlignment) {\n                                case 'Center':\n                                    indentX = (this.viewer.clientArea.width / 2) - (floatElement.width / 2);\n                                    break;\n                                default:\n                                    indentX = this.viewer.clientArea.x;\n                                    break;\n                            }\n                            break;\n                    }\n                }\n                else {\n                    if (mIsYPositionUpdated) { /* Upadte the Y Coordinate of floating image when floating image postion is changed based on the wrapping style. */\n                        indentY = this.viewer.clientArea.y;\n                    }\n                    else {\n                        switch (vertOrigin) {\n                            case 'Page':\n                            case 'TopMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Top':\n                                        indentY = vertPosition;\n                                        break;\n                                    case 'Center':\n                                        if (vertOrigin === 'TopMargin') {\n                                            indentY = (topMargin - shapeHeight) / 2;\n                                        }\n                                        else {\n                                            if (heightPercent > 0 && widthPercent > 0) {\n                                                indentY = (pageHeight - (pageHeight) * (heightPercent / 100)) / 2;\n                                                floatElement.height = (pageHeight) * (heightPercent / 100);\n                                            }\n                                            else {\n                                                indentY = (pageHeight - shapeHeight) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if (vertOrigin === 'Page' && vertAlignment === 'Bottom') {\n                                            indentY = pageHeight - shapeHeight;\n                                        }\n                                        else {\n                                            if (vertOrigin === 'TopMargin') {\n                                                indentY = (topMargin - shapeHeight);\n                                            }\n                                            else if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                                indentY = pageHeight - shapeHeight - footerDistance / 2;\n                                            }\n                                            else {\n                                                indentY = headerDistance / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Inside':\n                                        if (vertOrigin === 'Page') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight - footerDistance / 2;\n                                            }\n                                            else {\n                                                indentY = headerDistance / 2;\n                                            }\n                                        }\n                                        else {\n                                            //Need to ensure this behaviour.\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = ((topMargin - shapeHeight) / 2 - headerDistance);\n                                            }\n                                        }\n                                        break;\n                                    case 'None':\n                                        if (Math.abs(verticalPercent) <= 1000) {\n                                            indentY = pageHeight * (verticalPercent / 100);\n                                        }\n                                        else {\n                                            indentY = vertPosition;\n                                        }\n                                        break;\n                                }\n                                break;\n                            case 'Line':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                    case 'Top':\n                                        //Need to update line widget height instead of client active area.\n                                        indentY = this.viewer.clientActiveArea.y;\n                                        break;\n                                    case 'Center':\n                                        indentY = this.viewer.clientActiveArea.y - shapeHeight / 2;\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        indentY = this.viewer.clientActiveArea.y - shapeHeight;\n                                        break;\n                                    case 'None':\n                                        indentY = Math.round(paragraph.y) + vertPosition;\n                                        break;\n                                }\n                                break;\n                            case 'BottomMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                    case 'Top':\n                                        indentY = (pageHeight - bottomMargin);\n                                        break;\n                                    case 'Center':\n                                        indentY = pageHeight - bottomMargin + ((bottomMargin - shapeHeight) / 2);\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if (paragraph.bodyWidget.page.index + 1 % 2 !== 0 && vertAlignment === 'Outside') {\n                                            indentY = pageHeight - bottomMargin;\n                                        }\n                                        else {\n                                            indentY = pageHeight - shapeHeight;\n                                        }\n                                        break;\n                                    case 'None':\n                                        indentY = pageHeight - bottomMargin + vertPosition;\n                                        break;\n                                }\n                                break;\n                            case 'InsideMargin':\n                            case 'OutsideMargin':\n                                indentY = vertPosition;\n                                switch (vertAlignment) {\n                                    case 'Inside':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if (vertOrigin === 'InsideMargin' && paragraph.bodyWidget.page.index + 1 % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight;\n                                            }\n                                            else {\n                                                indentY = 0;\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : topMargin - shapeHeight;\n                                        }\n                                        break;\n                                    case 'Top':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - bottomMargin;\n                                            }\n                                            else {\n                                                indentY = 0;\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin : 0;\n                                        }\n                                        break;\n                                    case 'Center':\n                                        if (vertOrigin === 'OutsideMargin') {\n                                            //Need to ensure this.\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2 : (topMargin - shapeHeight) / 2;\n                                        }\n                                        else {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - bottomMargin + (bottomMargin - shapeHeight) / 2;\n                                            }\n                                            else {\n                                                indentY = (topMargin - shapeHeight) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Outside':\n                                        if (vertOrigin === 'InsideMargin') {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = (pageHeight - bottomMargin);\n                                            }\n                                            else {\n                                                indentY = (topMargin - shapeHeight);\n                                            }\n                                        }\n                                        else {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) % 2 !== 0 ? topMargin - shapeHeight : pageHeight - bottomMargin;\n                                        }\n                                        break;\n                                    case 'Bottom':\n                                        if (vertOrigin === 'OutsideMargin') {\n                                            indentY = (paragraph.bodyWidget.page.index + 1) !== 0 ? pageHeight - shapeHeight : topMargin - shapeHeight;\n                                        }\n                                        else {\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentY = pageHeight - shapeHeight;\n                                            }\n                                            else {\n                                                indentY = topMargin - shapeHeight;\n                                            }\n                                        }\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            case 'Paragraph':\n                                var space = 0;\n                                //let prevsibling: BlockWidget = paragraph.previousWidget as BlockWidget;\n                                // if (floatElement) {\n                                //     //Need to handle DocIO Implementation.\n                                //     if (Math.round(paragraph.y) !== Math.round(topMargin) && (prevsibling instanceof ParagraphWidget)\n                                //         && ((paragraph.paragraphFormat.beforeSpacing > prevsibling.paragraphFormat.afterSpacing)\n                                //             || (prevsibling.paragraphFormat.afterSpacing < 14)\n                                //             && !paragraph.paragraphFormat.contextualSpacing)) {\n                                //         space = prevsibling.paragraphFormat.afterSpacing;\n                                //     }\n                                // }\n                                // eslint-disable-next-line max-len\n                                //Floating item Y position is calculated from paragraph original Y position not from wrapped paragraph Y(ParagraphLayoutInfo.YPosition) position.\n                                indentY = Math.round(paragraph.y) + space + vertPosition;\n                                break;\n                            case 'Margin':\n                                //If header distance is more than top margin, then calculate the position of item based on header distance.\n                                //As per Microsoft Word behavior, it is need to consider paragraph height along with the distance.\n                                if (paragraph.isInHeaderFooter && headerDistance > topMargin) {\n                                    //Need to udpate.\n                                    indentY = (headerDistance + (paragraph.height)) + vertPosition;\n                                }\n                                else {\n                                    indentY = topMargin + vertPosition;\n                                }\n                                switch (vertAlignment) {\n                                    case 'Top':\n                                        indentY = topMargin;\n                                        break;\n                                    case 'Center':\n                                        indentY = topMargin + (pageClientHeight - shapeHeight) / 2;\n                                        break;\n                                    case 'Outside':\n                                    case 'Bottom':\n                                        if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                            indentY = topMargin + pageClientHeight - shapeHeight;\n                                        }\n                                        else {\n                                            indentY = topMargin;\n                                        }\n                                        break;\n                                    case 'Inside':\n                                        if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                            indentY = topMargin + pageClientHeight - shapeHeight;\n                                        }\n                                        else {\n                                            indentY = topMargin;\n                                        }\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            default:\n                                //Need to analyze further.\n                                indentY = this.viewer.clientArea.y - vertPosition;\n                                break;\n                        }\n                    }\n                    // if (horzOrigin !== 'Column' && horzAlignment !== 'None') {\n                    //     indentX = this.viewer.clientArea.x;\n                    //     //Update the floating item x position to zero when floating item’s width\n                    //     //exceeds the page width when floating item and it wrapping style is not equal to  \n                    //     // infront of text and behind text and also vertical origin is not equal to paragraph.\n                    // } else \n                    if (paragraph && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind' &&\n                        vertOrigin === 'Paragraph' && shapeWidth >= pageWidth) {\n                        indentX = 0;\n                    }\n                    else {\n                        switch (horzOrigin) {\n                            case 'Page':\n                                indentX = horzPosition;\n                                switch (horzAlignment) {\n                                    case 'Center':\n                                        if (isLayoutInCell) {\n                                            indentX = (paragraph.associatedCell.cellFormat.cellWidth - shapeWidth) / 2;\n                                        }\n                                        else {\n                                            if (heightPercent > 0 && widthPercent > 0) {\n                                                indentX = (pageWidth - (pageWidth) * (widthPercent / 100)) / 2;\n                                                floatElement.width = (pageWidth) * (widthPercent / 100);\n                                            }\n                                            else {\n                                                indentX = (pageWidth - shapeWidth) / 2;\n                                            }\n                                        }\n                                        break;\n                                    case 'Left':\n                                        indentX = 0;\n                                        break;\n                                    case 'Outside':\n                                    case 'Right':\n                                        if (isLayoutInCell) {\n                                            indentX = paragraph.associatedCell.cellFormat.cellWidth - shapeWidth;\n                                        }\n                                        else {\n                                            indentX = pageWidth - shapeWidth;\n                                        }\n                                        break;\n                                    case 'None':\n                                        if (isLayoutInCell) {\n                                            indentX = paragraph.associatedCell.x + horzPosition;\n                                        }\n                                        else if (floatElement instanceof ShapeElementBox) {\n                                            indentX = horzPosition;\n                                            // Shape pItemShape = paraItem as Shape;\n                                            // float horRelPercent = pItemShape !== null ? pItemShape.TextFrame.HorizontalRelativePercent\n                                            //                       : (paraItem as WTextBox).TextBoxFormat.HorizontalRelativePercent;\n                                            // if (Math.Abs(horRelPercent) <= 1000)\n                                            //     indentX = pageWidth * (horRelPercent / 100);\n                                            // else\n                                            //     indentX = pItemShape !== null ? pItemShape.HorizontalPosition\n                                            //         : (paraItem as WTextBox).TextBoxFormat.HorizontalPosition;\n                                        }\n                                        else {\n                                            indentX = horzPosition;\n                                        }\n                                        break;\n                                }\n                                if (indentX < 0 && isLayoutInCell) {\n                                    indentX = paragraph.associatedCell.x;\n                                }\n                                break;\n                            case 'Column':\n                                var isXPositionUpated = false;\n                                //Update the Xposition while wrapping element exsit in the paragraph\n                                if (this.viewer.clientActiveArea.x < paragraph.x) {\n                                    // let cellPadings = 0;\n                                    // if (paragraph.isInsideTable) {\n                                    //     CellLayoutInfo cellLayoutInfo = (ownerPara.GetOwnerEntity() as IWidget).LayoutInfo as CellLayoutInfo;\n                                    //     cellPadings = cellLayoutInfo.Paddings.Left + cellLayoutInfo.Paddings.Right;\n                                    // }\n                                    // float minimumWidthRequired = DEF_MIN_WIDTH_SQUARE;\n                                    // if (textWrapStyle === TextWrappingStyle.Tight || textWrapStyle === TextWrappingStyle.Through)\n                                    //     minimumWidthRequired = ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013 ?\n                                    //         DEF_MIN_WIDTH_2013_TIGHTANDTHROW : DEF_MIN_WIDTH_TIGHTANDTHROW;\n                                    // minimumWidthRequired -= cellPadings;\n                                    // //Re Update the x position to the page left when paragraph starting position not equal to the \n                                    // //column starting and current inline item is x position equal to the column left position.\n                                    // if ((ownerPara.IsXpositionUpated && ownerPara.Document.Settings.CompatibilityMode === CompatibilityMode.Word2013)\n                                    //     || paragraphLayoutInfo.XPosition > (pageWidth - minimumWidthRequired - rightMargin)\n                                    //     || paragraphLayoutInfo.IsXPositionReUpdate)\n                                    //     indentX = layouter.ClientLayoutArea.Left + horzPosition;\n                                    // else\n                                    indentX = paragraph.x + horzPosition;\n                                }\n                                else {\n                                    //Re Update the x position to the page left when word version not equal to 2013 \n                                    //and wrapping style not equal to infront of text and behind text. \n                                    if ((textWrapStyle === 'InFrontOfText' || textWrapStyle === 'Behind')) {\n                                        if (!(floatElement.paragraph.isInsideTable) && ((autoShape === 'StraightConnector' || autoShape === 'Rectangle') || floatElement instanceof ImageElementBox)) {\n                                            isXPositionUpated = true;\n                                            indentX = horzPosition + paragraph.bodyWidget.x;\n                                        }\n                                        else {\n                                            indentX = paragraph.x + horzPosition;\n                                        }\n                                    }\n                                    else {\n                                        indentX = this.viewer.clientActiveArea.x + horzPosition;\n                                    }\n                                }\n                                //Update the Wrapping element right position as page right when \n                                //wrapping element right position  exceeds the page right except position \n                                //InFrontOfText and behindText wrapping style.\n                                if (textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind'\n                                    && Math.round(indentX + shapeWidth) > Math.round(pageWidth) && shapeWidth < pageWidth) {\n                                    indentX = (pageWidth - shapeWidth);\n                                }\n                                if (paragraph.paragraphFormat.leftIndent && !isXPositionUpated) {\n                                    var leftIndent = HelperMethods.convertPointToPixel(paragraph.leftIndent);\n                                    indentX -= leftIndent;\n                                }\n                                switch (horzAlignment) {\n                                    case 'Center':\n                                        indentX = this.viewer.clientActiveArea.x + (this.viewer.clientActiveArea.width - shapeWidth) / 2;\n                                        break;\n                                    case 'Left':\n                                        indentX = this.viewer.clientActiveArea.x;\n                                        break;\n                                    case 'Right':\n                                        indentX = this.viewer.clientActiveArea.x + this.viewer.clientActiveArea.width - shapeWidth; //- TextBoxFormat.InternalMargin.Right;\n                                        break;\n                                    case 'None':\n                                        break;\n                                }\n                                break;\n                            case 'Margin':\n                                if (paragraph.bodyWidget) {\n                                    indentX = leftMargin + horzPosition;\n                                    switch (horzAlignment) {\n                                        case 'Center':\n                                            indentX = leftMargin + (pageClientWidth - shapeWidth) / 2;\n                                            break;\n                                        case 'Left':\n                                            indentX = leftMargin;\n                                            break;\n                                        case 'Outside':\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 !== 0) {\n                                                indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            }\n                                            break;\n                                        case 'Right':\n                                            indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            break;\n                                        case 'Inside':\n                                            if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                                indentX = leftMargin + pageClientWidth - shapeWidth;\n                                            }\n                                            break;\n                                        case 'None':\n                                            break;\n                                    }\n                                }\n                                else {\n                                    indentX = this.viewer.clientArea.x + horzPosition;\n                                }\n                                break;\n                            case 'Character':\n                                if (horzAlignment === 'Right' || horzAlignment === 'Center') {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    //Need to update this while layouting.**\n                                    indentX = this.viewer.clientArea.x + horzPosition;\n                                }\n                                break;\n                            case 'LeftMargin':\n                                indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                break;\n                            case 'RightMargin':\n                                indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                break;\n                            case 'InsideMargin':\n                                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                    indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                break;\n                            case 'OutsideMargin':\n                                if ((paragraph.bodyWidget.page.index + 1) % 2 === 0) {\n                                    indentX = this.getLeftMarginHorizPosition(leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                else {\n                                    indentX = this.getRightMarginHorizPosition(pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle);\n                                }\n                                break;\n                            default:\n                                indentX = this.viewer.clientArea.x + horzPosition;\n                                break;\n                        }\n                    }\n                    //Update the floating item right position to the page right when floating item \n                    //right position exceeds the page width and it wrapping style is not equal to  \n                    // InFrontOfText and behind text and also vertical origin is not equal to paragraph.\n                    if (paragraph && textWrapStyle !== 'InFrontOfText'\n                        && textWrapStyle !== 'Behind' && vertOrigin === 'Paragraph' && pageWidth < indentX + shapeWidth) {\n                        indentX = pageWidth - shapeWidth;\n                    }\n                }\n            }\n            if (paragraph && (vertOrigin === 'Paragraph' || vertOrigin === 'Line') && floatElement.textWrappingStyle !== \"InFrontOfText\" && floatElement.textWrappingStyle !== \"Behind\") {\n                if (this.documentHelper.compatibilityMode === 'Word2013') {\n                    if (!paragraph.isInHeaderFooter) {\n                        if (indentY + floatElement.height > this.viewer.clientArea.bottom) {\n                            indentY = this.viewer.clientArea.bottom - floatElement.height;\n                        }\n                        if (indentY < sectionFormat.topMargin) {\n                            indentY = sectionFormat.topMargin;\n                        }\n                    }\n                }\n            }\n        }\n        //}\n        return new Point(indentX, indentY);\n    };\n    Layout.prototype.getLeftMarginHorizPosition = function (leftMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n        var indentX = horzPosition;\n        switch (horzAlignment) {\n            case 'Center':\n                indentX = (leftMargin - shapeWidth) / 2;\n                break;\n            case 'Left':\n                indentX = 0;\n                break;\n            case 'Right':\n                indentX = leftMargin - shapeWidth;\n                break;\n            case 'None':\n                break;\n        }\n        if (indentX < 0 && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n            indentX = 0;\n        }\n        return indentX;\n    };\n    Layout.prototype.getRightMarginHorizPosition = function (pageWidth, rightMargin, horzAlignment, horzPosition, shapeWidth, textWrapStyle) {\n        var xPosition = pageWidth - rightMargin;\n        var indentX = xPosition + horzPosition;\n        switch (horzAlignment) {\n            case 'Center':\n                indentX = xPosition + (rightMargin - shapeWidth) / 2;\n                break;\n            case 'Left':\n                indentX = xPosition;\n                break;\n            case 'Right':\n                indentX = pageWidth - shapeWidth;\n                break;\n            case 'None':\n                break;\n        }\n        if ((indentX < 0 || indentX + shapeWidth > pageWidth) && textWrapStyle !== 'InFrontOfText' && textWrapStyle !== 'Behind') {\n            indentX = pageWidth - shapeWidth;\n        }\n        return indentX;\n    };\n    Layout.prototype.getVerticalPosition = function (paraItem, vertPosition, vertOrigin, textWrapStyle) {\n        var paragraph = paraItem.line.paragraph;\n        //ParagraphLayoutInfo paragraphLayoutInfo = (paragraph as IWidget).LayoutInfo as ParagraphLayoutInfo;\n        var shape = paraItem;\n        //WPicture pic = paraItem as WPicture;\n        var indentY = 0;\n        var topMargin = paragraph.associatedCell.y;\n        switch (vertOrigin) {\n            case 'Page':\n            case 'Margin':\n            case 'TopMargin':\n            case 'InsideMargin':\n            case 'BottomMargin':\n            case 'OutsideMargin':\n                indentY = topMargin + vertPosition;\n                break;\n            case 'Line':\n            case 'Paragraph':\n                var space = 0;\n                // if (shape) {\n                //     space = paragraph.paragraphFormat.afterSpacing;\n                // }\n                indentY = paragraph.y + vertPosition + space;\n                if (shape.textWrappingStyle == \"Square\") {\n                    indentY = indentY <= paragraph.associatedCell.y ? paragraph.associatedCell.y : indentY;\n                }\n                break;\n            default:\n                indentY = this.viewer.clientActiveArea.y + vertPosition;\n                break;\n        }\n        return indentY;\n    };\n    Layout.prototype.getHorizontalPosition = function (width, paraItem, horzAlignment, horzOrigin, horzPosition, textWrapStyle, cellWid) {\n        var indentX = 0;\n        var paragraph = paraItem.line.paragraph;\n        // CellLayoutInfo cellLayoutInfo = (paragraph.OwnerTextBody as IWidget).LayoutInfo as CellLayoutInfo;\n        // ILayoutSpacingsInfo spacings = cellLayoutInfo as ILayoutSpacingsInfo;\n        var cell = paragraph.associatedCell;\n        var cellWidth = cellWid - cell.leftMargin - cell.rightMargin;\n        var cellInnerWidth = cell.cellFormat.cellWidth;\n        var marginLeft = cell.x;\n        var pageLeft = marginLeft - cell.leftMargin;\n        switch (horzOrigin) {\n            case 'Page':\n                {\n                    indentX = horzPosition;\n                    switch (horzAlignment) {\n                        case 'Center':\n                            indentX = pageLeft + (cellWidth - width) / 2;\n                            break;\n                        case 'Left':\n                            indentX = pageLeft;\n                            break;\n                        case 'Right':\n                            indentX = pageLeft + (cellWidth - width);\n                            break;\n                        case 'None':\n                            indentX = pageLeft + horzPosition;\n                            break;\n                    }\n                }\n                break;\n            case 'Column':\n            case 'Margin':\n                {\n                    switch (horzAlignment) {\n                        case 'Center':\n                            indentX = marginLeft + (cellInnerWidth - width) / 2;\n                            break;\n                        case 'Left':\n                            indentX = marginLeft;\n                            break;\n                        case 'Right':\n                            indentX = marginLeft + (cellInnerWidth - width);\n                            break;\n                        case 'None':\n                            indentX = marginLeft + horzPosition;\n                            break;\n                    }\n                }\n                break;\n            default:\n                {\n                    indentX = marginLeft + horzPosition;\n                }\n                break;\n        }\n        return indentX;\n    };\n    Layout.prototype.updateTableFloatPoints = function (table) {\n        if (table.wrapTextAround) {\n            var tableTotalWidth = table.getTableCellWidth();\n            var position = table.positioning;\n            var sectionFormat = table.bodyWidget.sectionFormat;\n            if (this.documentHelper.viewer instanceof WebLayoutViewer) {\n                if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Page' || position.horizontalOrigin === 'Column') {\n                    if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                        this.viewer.clientActiveArea.x = this.viewer.clientArea.width - tableTotalWidth;\n                    }\n                    else {\n                        this.viewer.clientActiveArea.x = this.viewer.clientArea.x;\n                    }\n                }\n            }\n            else {\n                if (!(table.containerWidget instanceof TextFrame) && !table.isInsideTable) {\n                    // Vertical position\n                    if (position.verticalOrigin === 'Page') {\n                        if (position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = 0;\n                        }\n                        else if (position.verticalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.y = 0;\n                        }\n                        else if (isNullOrUndefined(position.verticalAlignment) || position.verticalAlignment === 'None') {\n                            this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    else if (position.verticalOrigin === 'Margin') {\n                        if (position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n                        }\n                        else if (position.verticalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin);\n                        }\n                        else if (Math.round(position.verticalPosition) != 0 && !isNullOrUndefined(sectionFormat.topMargin)) {\n                            this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(sectionFormat.topMargin + position.verticalPosition);\n                        }\n                        else {\n                            this.viewer.clientActiveArea.y = HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    else if (position.verticalOrigin === 'Paragraph') {\n                        if (isNullOrUndefined(position.verticalAlignment) || position.verticalAlignment === 'None') {\n                            this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    if (position.horizontalOrigin === 'Page') {\n                        if (position.horizontalAlignment === 'Left') {\n                            this.viewer.clientActiveArea.x = 0;\n                        }\n                        else if (position.horizontalAlignment === 'Inside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = 0;\n                        }\n                        else if (position.horizontalAlignment === 'Right') {\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n                        }\n                        else if (position.horizontalAlignment === 'Outside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth;\n                        }\n                        else if (position.horizontalAlignment === 'Center') {\n                            this.viewer.clientActiveArea.x = (HelperMethods.convertPointToPixel(sectionFormat.pageWidth) - tableTotalWidth) / 2;\n                        }\n                    }\n                    else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n                        if (position.horizontalAlignment === 'Left') {\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n                            if (this.documentHelper.compatibilityMode !== 'Word2013' && !table.isInsideTable) {\n                                this.viewer.clientActiveArea.x = this.viewer.clientActiveArea.x -\n                                    HelperMethods.convertPointToPixel(table.firstChild.firstChild.leftMargin);\n                            }\n                        }\n                        else if (position.horizontalAlignment === 'Inside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin);\n                        }\n                        else if (position.horizontalAlignment === 'Right') {\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth)\n                                - (HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n                        }\n                        else if (position.horizontalAlignment === 'Outside') {\n                            // TODO\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.pageWidth)\n                                - (HelperMethods.convertPointToPixel(sectionFormat.rightMargin) + tableTotalWidth);\n                        }\n                        else if (position.horizontalAlignment === 'Center') {\n                            this.viewer.clientActiveArea.x = HelperMethods.convertPointToPixel(sectionFormat.leftMargin)\n                                + (HelperMethods.convertPointToPixel(sectionFormat.pageWidth - sectionFormat.rightMargin - sectionFormat.leftMargin) - tableTotalWidth) / 2;\n                        }\n                    }\n                    if (Math.round(position.horizontalPosition) > 0 || (position.horizontalOrigin === 'Margin' && position.horizontalAlignment === 'Left')) {\n                        this.viewer.clientActiveArea.x += HelperMethods.convertPointToPixel(position.horizontalPosition);\n                    }\n                }\n                else if (table.isInsideTable) {\n                    var ownerCell = table.containerWidget;\n                    var cellFormat = ownerCell.cellFormat;\n                    if (position.verticalOrigin === 'Page') {\n                        this.viewer.clientActiveArea.y = ownerCell.y;\n                        this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n                    }\n                    else if (position.verticalOrigin === 'Margin') {\n                        this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n                        //Check whether the absolute table vertical position is top relative to the margin\n                        if (this.viewer.clientActiveArea.y < ownerCell.y || position.verticalAlignment === 'Top') {\n                            this.viewer.clientActiveArea.y = ownerCell.y;\n                        }\n                    }\n                    else {\n                        if (this.viewer.clientActiveArea.y + HelperMethods.convertPointToPixel(position.verticalPosition) < ownerCell.y) {\n                            this.viewer.clientActiveArea.y = ownerCell.y;\n                        }\n                        else {\n                            this.viewer.clientActiveArea.y += HelperMethods.convertPointToPixel(position.verticalPosition);\n                        }\n                    }\n                    if (position.horizontalOrigin === 'Page') {\n                        if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.x = ownerCell.x;\n                        }\n                        else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                            this.viewer.clientActiveArea.x = ((ownerCell.x + cellFormat.preferredWidth) - tableTotalWidth);\n                        }\n                    }\n                    else if (position.horizontalOrigin === 'Margin' || position.horizontalOrigin === 'Column') {\n                        if (position.horizontalAlignment === 'Left' || position.horizontalAlignment === 'Inside') {\n                            this.viewer.clientActiveArea.x = (ownerCell.x + ownerCell.leftMargin);\n                        }\n                        else if (position.horizontalAlignment === 'Right' || position.horizontalAlignment === 'Outside') {\n                            this.viewer.clientActiveArea.x = ((ownerCell.x + cellFormat.preferredWidth)\n                                - (tableTotalWidth + ownerCell.rightMargin));\n                        }\n                    }\n                    if (Math.round(position.horizontalPosition) > 0) {\n                        this.viewer.clientActiveArea.x = ownerCell.x;\n                        if (position.horizontalOrigin === 'Margin') {\n                            this.viewer.clientActiveArea.x += ownerCell.leftMargin;\n                        }\n                        this.viewer.clientActiveArea.x += HelperMethods.convertPointToPixel(position.horizontalPosition);\n                    }\n                    if (position.horizontalAlignment === 'Center') {\n                        this.viewer.clientActiveArea.x = (cellFormat.preferredWidth / 2) - (tableTotalWidth / 2);\n                    }\n                }\n            }\n        }\n        table.x = this.viewer.clientActiveArea.x;\n        table.y = this.viewer.clientActiveArea.y;\n    };\n    Layout.prototype.isTocField = function (element) {\n        if (element instanceof FieldElementBox) {\n            var nextElement = element.nextNode;\n            if (element instanceof FieldElementBox && element.fieldType === 0 && nextElement instanceof TextElementBox\n                && nextElement.text.trim().toLowerCase().indexOf('toc') !== -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Layout.prototype.getTotalColumnSpan = function (row) {\n        var tableRow = row;\n        var totalColumnSpan = 0;\n        for (var i = 0; i < tableRow.childWidgets.length; i++) {\n            totalColumnSpan += tableRow.childWidgets[i].cellFormat.columnSpan;\n        }\n        return totalColumnSpan;\n    };\n    Layout.prototype.getMaximumRightCellBorderWidth = function (table) {\n        var highestBorderSize = 0;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            var cell = row.childWidgets[row.childWidgets.length - 1];\n            var cellBorder = cell.cellFormat.borders.right.lineWidth;\n            if (highestBorderSize < cellBorder) {\n                highestBorderSize = cellBorder;\n            }\n        }\n        return highestBorderSize;\n    };\n    Layout.prototype.getDefaultBorderSpacingValue = function (border, isBorderValueZero, tableHorizontalPosition) {\n        if (border == 0) {\n            if (this.documentHelper.compatibilityMode != 'Word2013' && tableHorizontalPosition == 'Center') {\n                border = 1.5;\n            }\n            else {\n                border = 0.75;\n            }\n            return true;\n        }\n        return isBorderValueZero;\n    };\n    Layout.prototype.getMinimumWidthRequiredForTable = function (isBorderValueZero, tableHorizontalPosition, border) {\n        var minimumWidthRequired = 0;\n        //To fit the item right side of the Table Microsoft Word 2013 application and other version has different value based on border of the table and alignment of the table.\n        if (this.documentHelper.compatibilityMode == 'Word2013') {\n            if (tableHorizontalPosition == 'Center') {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 18.5 + Math.round(0.75 / 2);\n                }\n                else {\n                    minimumWidthRequired = 18.5 + Math.round(border / 2);\n                }\n            }\n            else {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 18.5 + 0.75;\n                }\n                else {\n                    minimumWidthRequired = 18.5 + border;\n                }\n            }\n        }\n        else {\n            if (tableHorizontalPosition == 'Center') {\n                if (isBorderValueZero) {\n                    minimumWidthRequired = 19.25;\n                }\n                else {\n                    minimumWidthRequired = 18.5 + (border / 2);\n                }\n            }\n            else {\n                if (border == 0.25) {\n                    minimumWidthRequired = 18.5;\n                }\n                else {\n                    minimumWidthRequired = 19.3;\n                }\n            }\n        }\n        return HelperMethods.convertPointToPixel(minimumWidthRequired);\n    };\n    Layout.prototype.shiftFloatingItemsFromTable = function (table, bodyWidget) {\n        if (table.containerWidget instanceof BodyWidget) {\n            for (var i = 0; i < table.containerWidget.floatingElements.length; i++) {\n                var shape = table.containerWidget.floatingElements[i];\n                if (!(shape instanceof TableWidget) && shape.paragraph.containerWidget instanceof TableCellWidget\n                    && shape.paragraph.containerWidget.ownerTable.containerWidget.ownerTable == table) {\n                    bodyWidget.floatingElements.push(table.containerWidget.floatingElements[i]);\n                    table.containerWidget.floatingElements.splice(table.containerWidget.floatingElements.indexOf(table.containerWidget.floatingElements[i]), 1);\n                    this.shiftedFloatingItemsFromTable.push(shape);\n                    i--;\n                }\n            }\n        }\n    };\n    return Layout;\n}());\nexport { Layout };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}