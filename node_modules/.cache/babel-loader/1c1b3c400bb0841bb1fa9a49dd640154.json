{"ast":null,"code":"import { Widget, BodyWidget, TableRowWidget, TableWidget, LineWidget, TextElementBox, ListTextElementBox, ImageElementBox, ParagraphWidget, TableCellWidget, FieldElementBox, BlockWidget, HeaderFooterWidget, BlockContainer, BookmarkElementBox, ElementBox, EditRangeStartElementBox, EditRangeEndElementBox, TabElementBox, CommentElementBox, CommentCharacterElementBox, TextFormField, CheckBoxFormField, DropDownFormField, ShapeElementBox, TextFrame, ContentControl, FieldTextElementBox, FootNoteWidget, FootnoteElementBox, ShapeBase } from '../viewer/page';\nimport { HelperMethods, Point } from '../editor/editor-helper';\nimport { SelectionCharacterFormat, SelectionCellFormat, SelectionParagraphFormat, SelectionRowFormat, SelectionSectionFormat, SelectionTableFormat, SelectionImageFormat } from './selection-format';\nimport { PageLayoutViewer, WebLayoutViewer, WRowFormat } from '../index';\nimport { isNullOrUndefined, createElement, L10n, Browser } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { contentControlEvent, beforeFormFieldFillEvent, afterFormFieldFillEvent, requestNavigateEvent, CharacterRangeType } from '../../base/index';\nimport { WCharacterFormat, WParagraphFormat, WParagraphStyle } from '../index';\nimport { HtmlExport } from '../writer/html-export';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport { TextPosition, SelectionWidgetInfo, Hyperlink } from './selection-helper';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\n/* eslint-disable */\n/**\n * Selection\n */\nvar Selection = /** @class */function () {\n  /**\n   * @param documentEditor\n   * @private\n   */\n  function Selection(documentEditor) {\n    var _this = this;\n    /**\n     * @private\n     */\n    this.upDownSelectionLength = 0;\n    /**\n     * @private\n     */\n    this.isSkipLayouting = false;\n    /**\n    * @private\n    */\n    this.isImageSelected = false;\n    this.contextTypeInternal = undefined;\n    /**\n     * @private\n     */\n    this.caret = undefined;\n    //Format Retrieval Field\n    /**\n     * @private\n     */\n    this.isRetrieveFormatting = false;\n    /**\n     * @private\n     */\n    this.skipFormatRetrieval = false;\n    /**\n     * @private\n     */\n    this.isModifyingSelectionInternally = false;\n    this.isMoveDownOrMoveUp = false;\n    /**\n     * @private\n     */\n    this.isEndOffset = false;\n    /**\n     * @private\n     */\n    this.isViewPasteOptions = false;\n    /**\n     * @private\n     */\n    this.skipEditRangeRetrieval = false;\n    /**\n     * @private\n     */\n    this.selectedWidgets = undefined;\n    /**\n     * @private\n     */\n    this.isHighlightEditRegionIn = false;\n    /**\n     * @private\n     */\n    this.isHighlightFormFields = false;\n    /**\n     * @private\n     */\n    this.isHightlightEditRegionInternal = false;\n    /**\n     * @private\n     */\n    this.isCurrentUser = false;\n    /**\n     * @private\n     */\n    this.isHighlightNext = false;\n    /**\n     * @private\n     */\n    this.isWebLayout = false;\n    /**\n     * @private\n     */\n    this.editRegionHighlighters = undefined;\n    /**\n     * @private\n     */\n    this.formFieldHighlighters = undefined;\n    this.isSelectList = false;\n    /**\n     * @private\n     */\n    this.previousSelectedFormField = undefined;\n    /**\n     * @private\n     */\n    this.isFormatUpdated = false;\n    /**\n     * @private\n     */\n    this.isCellPrevSelected = false;\n    /**\n     * @private\n     */\n    this.currentFormField = undefined;\n    /**\n     * @private\n     */\n    this.pasteOptions = function (event) {\n      var locale = new L10n('documenteditor', _this.owner.defaultLocale);\n      locale.setLocale(_this.owner.locale);\n      if (event.item.text === locale.getConstant('Keep source formatting')) {\n        _this.owner.editorModule.applyPasteOptions('KeepSourceFormatting');\n      } else if (event.item.text === locale.getConstant('Match destination formatting')) {\n        _this.owner.editorModule.applyPasteOptions('MergeWithExistingFormatting');\n      } else if (event.item.text === locale.getConstant('NestTable')) {\n        _this.owner.editorModule.applyTablePasteOptions('NestTable');\n      } else if (event.item.text === locale.getConstant('InsertAsRows')) {\n        _this.owner.editorModule.applyTablePasteOptions('InsertAsRows');\n      } else if (event.item.text === locale.getConstant('InsertAsColumns')) {\n        _this.owner.editorModule.applyTablePasteOptions('InsertAsColumns');\n      } else if (event.item.text === locale.getConstant('OverwriteCells')) {\n        _this.owner.editorModule.applyTablePasteOptions('OverwriteCells');\n      } else {\n        _this.owner.editorModule.applyPasteOptions('KeepTextOnly');\n      }\n    };\n    /**\n     * Hides caret.\n     *\n     * @private\n     * @returns {void}\n     */\n    this.hideCaret = function () {\n      if (!isNullOrUndefined(_this.caret)) {\n        _this.caret.style.display = 'none';\n      }\n    };\n    this.owner = documentEditor;\n    this.documentHelper = this.owner.documentHelper;\n    this.start = new TextPosition(this.owner);\n    this.end = new TextPosition(this.owner);\n    this.selectedWidgets = new Dictionary();\n    this.characterFormatIn = new SelectionCharacterFormat(this);\n    this.paragraphFormatIn = new SelectionParagraphFormat(this, this.documentHelper);\n    this.sectionFormatIn = new SelectionSectionFormat(this);\n    this.rowFormatIn = new SelectionRowFormat(this);\n    this.cellFormatIn = new SelectionCellFormat(this);\n    this.tableFormatIn = new SelectionTableFormat(this);\n    this.imageFormatInternal = new SelectionImageFormat(this);\n    this.editRangeCollection = [];\n    this.editRegionHighlighters = new Dictionary();\n    this.formFieldHighlighters = new Dictionary();\n  }\n  Object.defineProperty(Selection.prototype, \"isHighlightEditRegion\", {\n    // Code for Comparing the offset calculated using old approach and optimized approach\n    // /**\n    //  * @private\n    //  */\n    // public isNewApproach: boolean;\n    /**\n     * @private\n     * @returns {boolean} - Retuens true if highlighting editing region\n     */\n    get: function () {\n      return this.isHighlightEditRegionIn;\n    },\n    /**\n     * @private\n     */\n    set: function (value) {\n      this.isHighlightEditRegionIn = value;\n      this.onHighlight();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"htmlWriter\", {\n    /**\n     * @private\n     */\n    get: function () {\n      if (isNullOrUndefined(this.htmlWriterIn)) {\n        this.htmlWriterIn = new HtmlExport();\n      }\n      return this.htmlWriterIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"start\", {\n    /**\n     * Gets the start text position of last range in the selection\n     *\n     * @private\n     * @returns {TextPosition} - Returns selection start position.\n     */\n    get: function () {\n      if (!isNullOrUndefined(this.owner) && !isNullOrUndefined(this.viewer)) {\n        if (isNullOrUndefined(this.startInternal)) {\n          this.startInternal = this.owner.documentStart;\n        }\n        return this.startInternal;\n      }\n      return undefined;\n    },\n    /**\n     * @private\n     */\n    set: function (value) {\n      this.startInternal = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"characterFormat\", {\n    //Format retrieval properties\n    /**\n     * Gets the instance of selection character format.\n     *\n     * @default undefined\n     * @aspType SelectionCharacterFormat\n     * @returns {SelectionCharacterFormat} Returns the selection character format.\n     */\n    get: function () {\n      return this.characterFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"paragraphFormat\", {\n    /**\n     * Gets the instance of selection paragraph format.\n     *\n     * @default undefined\n     * @aspType SelectionParagraphFormat\n     * @returns {SelectionParagraphFormat} Returns the selection paragraph format.\n     */\n    get: function () {\n      return this.paragraphFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"sectionFormat\", {\n    /**\n     * Gets the instance of selection section format.\n     *\n     * @default undefined\n     * @aspType SelectionSectionFormat\n     * @returns {SelectionSectionFormat} Returns the selection section format.\n     */\n    get: function () {\n      return this.sectionFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"tableFormat\", {\n    /**\n     * Gets the instance of selection table format.\n     *\n     * @default undefined\n     * @aspType SelectionTableFormat\n     * @returns {SelectionTableFormat} Returns the selection table format.\n     */\n    get: function () {\n      return this.tableFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"cellFormat\", {\n    /**\n     * Gets the instance of selection cell format.\n     *\n     * @default undefined\n     * @aspType SelectionCellFormat\n     * @returns {SelectionCellFormat} Returns the selection cell format.\n     */\n    get: function () {\n      return this.cellFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"rowFormat\", {\n    /**\n     * Gets the instance of selection row format.\n     *\n     * @default undefined\n     * @aspType SelectionRowFormat\n     * @returns {SelectionRowFormat} Returns selection row format.\n     */\n    get: function () {\n      return this.rowFormatIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"imageFormat\", {\n    /**\n     * Gets the instance of selection image format.\n     *\n     * @default undefined\n     * @aspType SelectionImageFormat\n     * @returns {SelectionImageFormat} Returns the selection image format.\n     */\n    get: function () {\n      return this.imageFormatInternal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"end\", {\n    /**\n     * Gets the start text position of selection range.\n     *\n     * @private\n     * @returns {TextPosition} - Returns selection end position.\n     */\n    get: function () {\n      return this.endInternal;\n    },\n    /**\n     * For internal use\n     *\n     * @private\n     */\n    set: function (value) {\n      this.endInternal = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"startPage\", {\n    /**\n     * Gets the page number where the selection starts.\n     *\n     * @returns {number} Returns the selection start page number.\n     */\n    get: function () {\n      if (!this.owner.isDocumentLoaded || isNullOrUndefined(this.viewer) || this.viewer instanceof WebLayoutViewer || isNullOrUndefined(this.documentHelper.selectionStartPage)) {\n        return 1;\n      }\n      return this.documentHelper.pages.indexOf(this.documentHelper.selectionStartPage) + 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"endPage\", {\n    /**\n     * Gets the page number where the selection ends.\n     *\n     * @returns {number} Returns the selection end page number.\n     */\n    get: function () {\n      if (!this.owner.isDocumentLoaded || isNullOrUndefined(this.viewer) || this.viewer instanceof WebLayoutViewer || isNullOrUndefined(this.documentHelper.selectionEndPage)) {\n        return 1;\n      }\n      return this.documentHelper.pages.indexOf(this.documentHelper.selectionEndPage) + 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isForward\", {\n    /**\n     * Determines whether the selection direction is forward or not.\n     *\n     * @default false\n     * @private\n     * @returns {boolean} Returns isForward\n     */\n    get: function () {\n      return this.start.isExistBefore(this.end);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isinFootnote\", {\n    /**\n     * Determines whether the selection is in footnote or not.\n     *\n     * @default false\n     * @returns {boolean} Returns true if selection is in footnote\n     * @private\n     */\n    get: function () {\n      var container = this.getContainerWidget(this.start.paragraph);\n      if (container instanceof FootNoteWidget && container.footNoteType === 'Footnote') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isinEndnote\", {\n    /**\n     * Determines whether the selection is in endnote or not.\n     *\n     * @default false\n     * @returns {boolean}\n     * @private\n     */\n    get: function () {\n      var container = this.getContainerWidget(this.start.paragraph);\n      if (container instanceof FootNoteWidget && container.footNoteType === 'Endnote') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isEmpty\", {\n    /**\n     * Determines whether the start and end positions are same or not.\n     *\n     * @default false\n     * @returns {boolean}\n     * @private\n     */\n    get: function () {\n      if (isNullOrUndefined(this.start)) {\n        return true;\n      }\n      return this.start.isAtSamePosition(this.end);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"startOffset\", {\n    /**\n     * Returns the start hierarchical index.\n     */\n    get: function () {\n      return this.getHierarchicalIndexByPosition(this.start);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"endOffset\", {\n    /**\n     * Returns the end hierarchical index.\n     */\n    get: function () {\n      return this.getHierarchicalIndexByPosition(this.end);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isInShape\", {\n    /**\n     * @private\n     */\n    get: function () {\n      var container = this.start.paragraph.containerWidget;\n      do {\n        if (container instanceof TextFrame) {\n          return true;\n        }\n        if (container) {\n          container = container.containerWidget;\n        }\n      } while (container);\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"text\", {\n    /**\n     * Gets the text within selection.\n     *\n     * @default ''\n     * @aspType string\n     * @returns {string} Returns the text within selection.\n     */\n    get: function () {\n      return this.getText(false);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"contextType\", {\n    /**\n     * Gets the context type of the selection.\n     */\n    get: function () {\n      return this.contextTypeInternal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"bookmarks\", {\n    /**\n     * Gets bookmark name collection.\n     */\n    get: function () {\n      return this.getSelBookmarks(false);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"sfdt\", {\n    /**\n    * Gets the selected content of the document as SFDT(Syncfusion Document Text) file format.\n    *\n    * @default undefined\n    * @returns {string}\n    */\n    get: function () {\n      if (this.owner.editorModule && this.start.offset !== this.end.offset) {\n        return JSON.stringify(this.writeSfdt());\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the bookmark name collection in current selection.\n   *\n   * @param includeHidden - Decide whether to include hidden bookmark name in current selection or not.\n   * @returns Returns the bookmark name collection in current selection.\n   */\n  Selection.prototype.getBookmarks = function (includeHidden) {\n    return this.getSelBookmarks(includeHidden);\n  };\n  Object.defineProperty(Selection.prototype, \"isCleared\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return isNullOrUndefined(this.end);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"isInField\", {\n    /**\n     * Returns true if selection is in field.\n     *\n     * @returns Returns true if selection is in field; Otherwise, false.\n     */\n    get: function () {\n      if (!isNullOrUndefined(this.getHyperlinkField(true))) {\n        return true;\n      }\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the field information for the selected field.\n   *\n   * @returns { FieldInfo } Returns `FieldInfo` if selection is in field, otherwise `undefined`\n   * > Returns `undefined` for text, image, table, shape. For nested fields, it returns combined field code and result.\n   */\n  Selection.prototype.getFieldInfo = function () {\n    var field = this.getHyperlinkField(true);\n    if (!isNullOrUndefined(field)) {\n      var code = this.getFieldCode(field);\n      var result = this.owner.editorModule.getFieldResultText(field);\n      return {\n        code: code,\n        result: result\n      };\n    }\n    return undefined;\n  };\n  Selection.prototype.getSelBookmarks = function (includeHidden) {\n    var bookmarkCln = [];\n    var bookmarks = this.documentHelper.bookmarks;\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    var bookmrkStart;\n    var bookmrkEnd;\n    var isCellSelected = false;\n    var selectedCells = this.getSelectedCells();\n    for (var i = 0; i < bookmarks.length; i++) {\n      if (includeHidden || !includeHidden && bookmarks.keys[i].indexOf('_') !== 0) {\n        bookmrkStart = bookmarks.get(bookmarks.keys[i]);\n        bookmrkEnd = bookmrkStart.reference;\n        if (isNullOrUndefined(bookmrkEnd)) {\n          continue;\n        }\n        var bmStartPos = this.getElementPosition(bookmrkStart).startPosition;\n        var bmEndPos = this.getElementPosition(bookmrkEnd, true).startPosition;\n        if (bmStartPos.paragraph.isInsideTable || bmEndPos.paragraph.isInsideTable) {\n          if (selectedCells.length > 0) {\n            if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) >= 0 || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) >= 0) {\n              isCellSelected = true;\n            } else {\n              isCellSelected = false;\n              if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) < 0 || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) < 0) {\n                var endCell = end.paragraph.isInsideTable && end.paragraph.associatedCell;\n                var bmEndPosCell = bmEndPos.paragraph.associatedCell;\n                if (endCell && bmEndPosCell && endCell.ownerTable.equals(bmEndPosCell.ownerTable) && !(endCell.ownerTable && selectedCells.indexOf(this.getCellInTable(endCell.ownerTable, bmEndPosCell)) >= 0)) {\n                  continue;\n                }\n              }\n            }\n          } else {\n            isCellSelected = false;\n          }\n        } else {\n          isCellSelected = false;\n        }\n        if ((start.isExistAfter(bmStartPos) || start.isAtSamePosition(bmStartPos)) && (end.isExistBefore(bmEndPos) || end.isAtSamePosition(bmEndPos)) || (bmStartPos.isExistAfter(start) || bmStartPos.isAtSamePosition(start)) && (bmEndPos.isExistBefore(end) || bmEndPos.isAtSamePosition(end)) || bmStartPos.isExistAfter(start) && bmStartPos.isExistBefore(end) && (end.isExistAfter(bmEndPos) || end.isExistBefore(bmEndPos)) || bmEndPos.isExistBefore(end) && bmEndPos.isExistAfter(start) && (start.isExistBefore(bmStartPos) || start.isExistAfter(bmStartPos)) || isCellSelected) {\n          bookmarkCln.push(bookmrkStart.name);\n        }\n      }\n    }\n    return bookmarkCln;\n  };\n  Object.defineProperty(Selection.prototype, \"viewer\", {\n    /**\n     *\n     * @private\n     */\n    get: function () {\n      return this.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Selection.prototype.getModuleName = function () {\n    return 'Selection';\n  };\n  Selection.prototype.checkLayout = function () {\n    if (this.owner.layoutType === 'Continuous') {\n      this.isWebLayout = true;\n      this.documentHelper.isHeaderFooter = true;\n      this.owner.layoutType = 'Pages';\n      this.owner.viewer.destroy();\n      this.owner.viewer = new PageLayoutViewer(this.owner);\n      this.owner.editorModule.layoutWholeDocument();\n    }\n  };\n  //Public API\n  /**\n   * Moves the selection to the header of current page.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.goToHeader = function () {\n    this.checkLayout();\n    this.owner.enableHeaderAndFooter = true;\n    this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.headerWidget, this.start.paragraph.bodyWidget.page);\n    this.isWebLayout = false;\n  };\n  /**\n   * Moves the selection to the footer of current page.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.goToFooter = function () {\n    this.checkLayout();\n    this.owner.enableHeaderAndFooter = true;\n    this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.footerWidget, this.start.paragraph.bodyWidget.page);\n    this.isWebLayout = false;\n  };\n  /**\n   * Closes the header and footer region.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.closeHeaderFooter = function () {\n    this.disableHeaderFooter();\n    if (this.documentHelper.isHeaderFooter && this.owner.layoutType === 'Pages') {\n      this.owner.layoutType = 'Continuous';\n      this.documentHelper.isHeaderFooter = false;\n    }\n  };\n  /**\n   * Moves the selection to the start of specified page number.\n   *\n   * @param pageNumber Specify the page number to move selection.\n   * @returns {void}\n   */\n  Selection.prototype.goToPage = function (pageNumber) {\n    this.owner.scrollToPage(pageNumber);\n    if (pageNumber >= 1 && pageNumber <= this.owner.documentHelper.pages.length) {\n      var page = this.owner.documentHelper.pages[pageNumber - 1];\n      this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n    }\n  };\n  /**\n   * Selects the entire table if the context is within table.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectTable = function () {\n    if (!this.owner.enableSelection) {\n      return;\n    }\n    this.selectTableInternal();\n  };\n  /**\n   * Selects the entire row if the context is within table.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectRow = function () {\n    if (!this.owner.enableSelection) {\n      return;\n    }\n    this.selectTableRow();\n  };\n  /**\n   * Selects the entire column if the context is within table.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectColumn = function () {\n    if (!this.owner.enableSelection) {\n      return;\n    }\n    this.selectColumnInternal();\n  };\n  /**\n   * Selects the entire cell if the context is within table.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectCell = function () {\n    if (!this.owner.enableSelection) {\n      return;\n    }\n    this.selectTableCell();\n  };\n  Selection.prototype.select = function (selectionSettings, startOrEnd) {\n    if (typeof selectionSettings === 'string') {\n      var startPosition = this.getTextPosBasedOnLogicalIndex(selectionSettings);\n      var endPosition = this.getTextPosBasedOnLogicalIndex(startOrEnd);\n      this.selectPosition(startPosition, endPosition);\n    } else {\n      var point = new Point(selectionSettings.x, selectionSettings.y);\n      var pageCoordinates = this.viewer.findFocusedPage(point, true);\n      if (selectionSettings.extend) {\n        this.moveTextPosition(pageCoordinates, this.end);\n      } else {\n        this.documentHelper.updateTextPositionForSelection(pageCoordinates, 1);\n      }\n    }\n  };\n  /**\n   * Selects the content based on the specified start and end hierarchical index.\n   *\n   * @param start Specify the start index to select.\n   * @param end Specify the end index to select.\n   * @returns {void}\n   */\n  Selection.prototype.selectByHierarchicalIndex = function (start, end) {\n    var startPosition = this.getTextPosBasedOnLogicalIndex(start);\n    var endPosition = this.getTextPosBasedOnLogicalIndex(end);\n    this.selectPosition(startPosition, endPosition);\n  };\n  /**\n   * Selects the current field if selection is in field\n   *\n   * @param fieldStart Specify the field start to select.\n   * @returns {void}\n   */\n  Selection.prototype.selectField = function (fieldStart) {\n    if (this.isInField || !isNullOrUndefined(fieldStart)) {\n      if (isNullOrUndefined(fieldStart)) {\n        fieldStart = this.getHyperlinkField(true);\n      }\n      this.selectFieldInternal(fieldStart);\n    }\n  };\n  /**\n   * @private\n   * @param fieldStart\n   * @returns {void}\n   */\n  Selection.prototype.selectFieldInternal = function (fieldStart, isKeyBoardEvent, isReplacingFormResult) {\n    if (fieldStart) {\n      var formFillingMode = this.documentHelper.isFormFillProtectedMode || isReplacingFormResult;\n      var fieldEnd = fieldStart.fieldEnd;\n      if (formFillingMode) {\n        fieldStart = fieldStart.fieldSeparator;\n      }\n      var offset = fieldStart.line.getOffset(fieldStart, formFillingMode ? 1 : 0);\n      var startPosition = new TextPosition(this.owner);\n      startPosition.setPositionParagraph(fieldStart.line, offset);\n      var isBookmark = fieldStart.nextNode instanceof BookmarkElementBox;\n      if (isBookmark && !formFillingMode && fieldStart.nextElement.reference) {\n        fieldEnd = fieldStart.nextElement.reference;\n      }\n      var endoffset = fieldEnd.line.getOffset(fieldEnd, formFillingMode ? 0 : 1);\n      var endPosition = new TextPosition(this.owner);\n      endPosition.setPositionParagraph(fieldEnd.line, endoffset);\n      //selects the field range\n      this.documentHelper.selection.selectRange(startPosition, endPosition);\n      if (!isReplacingFormResult) {\n        this.triggerFormFillEvent(isKeyBoardEvent);\n      }\n    }\n  };\n  /**\n   * @param shape\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectShape = function (shape) {\n    if (shape) {\n      var offset = shape.line.getOffset(shape, 0);\n      var startPosition = new TextPosition(this.owner);\n      startPosition.setPositionParagraph(shape.line, offset);\n      var endoffset = shape.line.getOffset(shape, 1);\n      var endPosition = new TextPosition(this.owner);\n      endPosition.setPositionParagraph(shape.line, endoffset);\n      this.documentHelper.selection.selectRange(startPosition, endPosition);\n    }\n  };\n  /**\n   * Toggles the bold property of selected contents.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleBold = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleBold();\n    }\n  };\n  /**\n   * Toggles the italic property of selected contents.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleItalic = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleItalic();\n    }\n  };\n  /**\n   * Toggles the allCaps property of selected contents.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleAllCaps = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleAllCaps();\n    }\n  };\n  /**\n   * Toggles the underline property of selected contents.\n   *\n   * @param {Underline} underline Default value of ‘underline’ parameter is Single.\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleUnderline = function (underline) {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleUnderline(underline);\n    }\n  };\n  /**\n   * Toggles the strike through property of selected contents.\n   *\n   * @param {Strikethrough} strikethrough Default value of strikethrough parameter is SingleStrike.\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleStrikethrough = function (strikethrough) {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleStrikethrough(strikethrough);\n    }\n  };\n  /**\n   * Toggles the highlight color property of selected contents.\n   *\n   * @param {HighlightColor} highlightColor Default value of ‘underline’ parameter is Yellow.\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleHighlightColor = function (highlightColor) {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleHighlightColor(highlightColor);\n    }\n  };\n  /**\n   * Toggles the subscript formatting of selected contents.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleSubscript = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleSubscript();\n    }\n  };\n  /**\n   * Toggles the superscript formatting of selected contents.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleSuperscript = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleSuperscript();\n    }\n  };\n  /**\n   * Toggles the text alignment property of selected contents.\n   *\n   * @param {TextAlignment} textAlignment Default value of ‘textAlignment parameter is TextAlignment.Left.\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.toggleTextAlignment = function (textAlignment) {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.toggleTextAlignment(textAlignment);\n    }\n  };\n  /**\n   * Increases the left indent of selected paragraphs to a factor of 36 points.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.increaseIndent = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.increaseIndent();\n    }\n  };\n  /**\n   * Decreases the left indent of selected paragraphs to a factor of 36 points.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.decreaseIndent = function () {\n    if (this.owner.editorModule) {\n      this.owner.editorModule.decreaseIndent();\n    }\n  };\n  /**\n   * Fires the `requestNavigate` event if current selection context is in hyperlink.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigateHyperlink = function () {\n    var fieldBegin = this.getHyperlinkField();\n    if (fieldBegin) {\n      this.fireRequestNavigate(fieldBegin);\n    }\n  };\n  /**\n   * Navigate Hyperlink\n   *\n   * @param fieldBegin\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.fireRequestNavigate = function (fieldBegin) {\n    var code = this.getFieldCode(fieldBegin);\n    if (code.toLowerCase().indexOf('ref ') === 0 && !code.match('\\\\h')) {\n      return;\n    }\n    var hyperlink = new Hyperlink(fieldBegin, this);\n    var eventArgs = {\n      isHandled: false,\n      navigationLink: hyperlink.navigationLink,\n      linkType: hyperlink.linkType,\n      localReference: hyperlink.localReference,\n      source: this.owner\n    };\n    this.owner.trigger(requestNavigateEvent, eventArgs);\n    if (!eventArgs.isHandled) {\n      this.documentHelper.selection.navigateBookmark(hyperlink.localReference, true);\n    }\n  };\n  /**\n   * Copies the hyperlink URL if the context is within hyperlink.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.copyHyperlink = function () {\n    var hyperLinkField = this.getHyperlinkField();\n    var linkText = this.getLinkText(hyperLinkField, true);\n    this.copyToClipboard(linkText);\n  };\n  Selection.prototype.isHideSelection = function (paragraph) {\n    var bodyWgt = paragraph.bodyWidget;\n    var sectionFormat = bodyWgt.sectionFormat;\n    var pageHt = sectionFormat.pageHeight - sectionFormat.footerDistance;\n    var headerFooterHt = bodyWgt.page.boundingRectangle.height / 100 * 40;\n    return this.contextType.indexOf('Footer') >= 0 && paragraph.y + paragraph.height > HelperMethods.convertPointToPixel(pageHt) || this.contextType.indexOf('Header') >= 0 && paragraph.y + paragraph.height > headerFooterHt;\n  };\n  //Selection add, Highlight, remove API starts\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.highlightSelection = function (isSelectionChanged, isBookmark) {\n    if (this.owner.enableImageResizerMode) {\n      this.owner.imageResizerModule.hideImageResizer();\n    }\n    if (this.isEmpty) {\n      if (!this.isInShape && this.isHideSelection(this.start.paragraph)) {\n        this.hideCaret();\n        return;\n      }\n      if (this.isInShape) {\n        this.showResizerForShape();\n      }\n      this.updateCaretPosition();\n    } else {\n      if (this.isForward) {\n        this.highlightSelectedContent(this.start, this.end);\n      } else {\n        this.highlightSelectedContent(this.end, this.start);\n      }\n      if (this.documentHelper.isComposingIME) {\n        this.updateCaretPosition();\n      }\n    }\n    this.documentHelper.updateTouchMarkPosition();\n    if (isSelectionChanged) {\n      this.documentHelper.scrollToPosition(this.start, this.end, undefined, isBookmark);\n    }\n  };\n  Selection.prototype.createHighlightBorder = function (lineWidget, width, left, top, isElementBoxHighlight) {\n    if (width < 0) {\n      width = 0;\n    }\n    var paragraph = lineWidget.paragraph;\n    var floatingItems = [];\n    if (paragraph.floatingElements.length > 0) {\n      for (var k = 0; k < paragraph.floatingElements.length; k++) {\n        var shapeElement = paragraph.floatingElements[k];\n        if (shapeElement.line === lineWidget) {\n          var startTextPos = this.start;\n          var endTextPos = this.end;\n          if (!this.isForward) {\n            startTextPos = this.end;\n            endTextPos = this.start;\n          }\n          var offset = shapeElement.line.getOffset(shapeElement, 0);\n          if (startTextPos.currentWidget !== lineWidget && endTextPos.currentWidget !== lineWidget || startTextPos.currentWidget === lineWidget && startTextPos.offset <= offset && (endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset + 1 || endTextPos.currentWidget !== lineWidget) || startTextPos.currentWidget !== lineWidget && endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset) {\n            floatingItems.push(shapeElement);\n          }\n        }\n      }\n    }\n    var page = this.getPage(lineWidget.paragraph);\n    var height = lineWidget.height;\n    var widgets = this.selectedWidgets;\n    var selectionWidget = undefined;\n    var selectionWidgetCollection = undefined;\n    if (this.isHightlightEditRegionInternal) {\n      this.addEditRegionHighlight(lineWidget, left, width);\n      return;\n    } else if (this.isHighlightFormFields) {\n      this.addFormFieldHighlight(lineWidget, left, width);\n      return;\n    } else {\n      if (widgets.containsKey(lineWidget)) {\n        if (widgets.get(lineWidget) instanceof SelectionWidgetInfo) {\n          selectionWidget = widgets.get(lineWidget);\n          // if the line element has already added with SelectionWidgetInfo\n          // now its need to be added as ElementBox highlighting them remove it from dictionary and add it collection.\n          if (isElementBoxHighlight) {\n            widgets.remove(lineWidget);\n            selectionWidgetCollection = [];\n            widgets.add(lineWidget, selectionWidgetCollection);\n          }\n        } else {\n          selectionWidgetCollection = widgets.get(lineWidget);\n        }\n      } else {\n        if (isElementBoxHighlight) {\n          selectionWidgetCollection = [];\n          widgets.add(lineWidget, selectionWidgetCollection);\n        } else {\n          var wrapPosition = this.getWrapPosition(lineWidget, paragraph);\n          if (wrapPosition.length > 0) {\n            var selectionWidgetInfos = this.splitSelectionHighlightPosition(left, width, wrapPosition);\n            if (selectionWidgetInfos.length > 0) {\n              selectionWidgetInfos[0].floatingItems = floatingItems;\n              widgets.add(lineWidget, selectionWidgetInfos);\n              this.renderHighlight(page, lineWidget, selectionWidgetInfos, top, floatingItems);\n              return;\n            } else {\n              selectionWidget = new SelectionWidgetInfo(left, width);\n              selectionWidget.floatingItems = floatingItems;\n              widgets.add(lineWidget, selectionWidget);\n            }\n          } else {\n            selectionWidget = new SelectionWidgetInfo(left, width);\n            selectionWidget.floatingItems = floatingItems;\n            widgets.add(lineWidget, selectionWidget);\n          }\n        }\n      }\n      if (selectionWidget === undefined) {\n        selectionWidget = new SelectionWidgetInfo(left, width);\n        selectionWidget.floatingItems = floatingItems;\n        widgets.add(lineWidget, selectionWidget);\n      }\n    }\n    this.renderHighlight(page, lineWidget, [selectionWidget], top, floatingItems);\n    if (isElementBoxHighlight) {\n      selectionWidgetCollection.push(selectionWidget);\n    }\n  };\n  Selection.prototype.renderHighlight = function (page, lineWidget, selectionWidget, top, floatingItems) {\n    var documentHelper = this.owner.documentHelper;\n    var pageTop = this.getPageTop(page);\n    var pageLeft = page.boundingRectangle.x;\n    var height = lineWidget.height;\n    if (this.viewer.containerTop <= pageTop || pageTop < this.viewer.containerTop + documentHelper.selectionCanvas.height) {\n      var zoomFactor = documentHelper.zoomFactor;\n      this.clipSelection(page, pageTop);\n      for (var i = 0; i < selectionWidget.length; i++) {\n        var selectedWidget = selectionWidget[i];\n        var left = selectedWidget.left;\n        var width = selectedWidget.width;\n        if (this.documentHelper.isComposingIME) {\n          this.renderDashLine(documentHelper.selectionContext, page, lineWidget, pageLeft + left * zoomFactor - this.viewer.containerLeft, top, width * zoomFactor, height);\n        } else {\n          this.documentHelper.selectionContext.fillStyle = 'gray';\n          documentHelper.selectionContext.globalAlpha = 0.4;\n          documentHelper.selectionContext.fillRect(pageLeft + left * zoomFactor - this.viewer.containerLeft, pageTop + top * zoomFactor - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n        }\n      }\n      if (floatingItems.length > 0) {\n        for (var z = 0; z < floatingItems.length; z++) {\n          var left = floatingItems[z].x;\n          var shapeTop = floatingItems[z].y;\n          var shapeWidth = floatingItems[z].width;\n          var shapeHeight = floatingItems[z].height;\n          documentHelper.selectionContext.fillRect(pageLeft + left * zoomFactor - this.viewer.containerLeft, pageTop + shapeTop * zoomFactor - this.viewer.containerTop, shapeWidth * zoomFactor, shapeHeight * zoomFactor);\n        }\n      }\n      documentHelper.selectionContext.restore();\n    }\n  };\n  Selection.prototype.getWrapPosition = function (lineWidget, paragraph) {\n    var bodyWidget = paragraph.bodyWidget;\n    if (!isNullOrUndefined(bodyWidget) && bodyWidget.floatingElements.length > 0 && lineWidget.children.length > 0) {\n      var startLeft = this.getLeftInternal(lineWidget, lineWidget.children[0], 0);\n      var width = 0;\n      var wrapPos = [];\n      var isStarted = false;\n      for (var z = 0; z < lineWidget.children.length; z++) {\n        var element = lineWidget.children[z];\n        if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n          continue;\n        }\n        if (element.padding.left > 0) {\n          if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n            wrapPos[0].end = wrapPos[0].start - paragraph.x;\n            wrapPos[0].start = paragraph.x;\n            startLeft = paragraph.x;\n          }\n          var clipInfo = {};\n          clipInfo.start = startLeft + width;\n          clipInfo.end = 0;\n          if (isStarted) {\n            clipInfo.end = startLeft + width + element.padding.left;\n          }\n          wrapPos.push(clipInfo);\n        }\n        width += element.padding.left + element.width;\n        if (element instanceof TextElementBox) {\n          isStarted = true;\n        }\n      }\n      if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n        wrapPos[0].end = wrapPos[0].start - paragraph.x;\n        wrapPos[0].start = paragraph.x;\n      }\n      return wrapPos;\n    }\n    return [];\n  };\n  Selection.prototype.splitSelectionHighlightPosition = function (left, width, clipInfo) {\n    var selectedWidget = [];\n    for (var m = 0; m < clipInfo.length; m++) {\n      var info = clipInfo[m];\n      if (left < info.start && left + width < info.end || left > info.end) {\n        continue;\n      }\n      if (left < info.start && left + width > info.end) {\n        selectedWidget.push(new SelectionWidgetInfo(left, info.start - left));\n        width = left + width - info.end;\n        left = info.end;\n      } else if (left === info.start) {\n        left += info.end;\n        width = width - info.end;\n      }\n      if (m === clipInfo.length - 1) {\n        selectedWidget.push(new SelectionWidgetInfo(left, width));\n      }\n    }\n    return selectedWidget;\n  };\n  Selection.prototype.addEditRegionHighlight = function (lineWidget, left, width) {\n    var highlighters = undefined;\n    var collection = this.editRegionHighlighters;\n    if (collection.containsKey(lineWidget)) {\n      highlighters = collection.get(lineWidget);\n    } else {\n      highlighters = [];\n      collection.add(lineWidget, highlighters);\n    }\n    var editRegionHighlight = new SelectionWidgetInfo(left, width);\n    if (this.isCurrentUser) {\n      editRegionHighlight.color = this.owner.userColor !== '' ? this.owner.userColor : '#FFFF00';\n    }\n    highlighters.push(editRegionHighlight);\n    return editRegionHighlight;\n  };\n  Selection.prototype.addFormFieldHighlight = function (lineWidget, left, width) {\n    var highlighters = undefined;\n    var collection = this.formFieldHighlighters;\n    if (collection.containsKey(lineWidget)) {\n      highlighters = collection.get(lineWidget);\n    } else {\n      highlighters = [];\n      collection.add(lineWidget, highlighters);\n    }\n    var formFieldHighlight = new SelectionWidgetInfo(left, width);\n    highlighters.push(formFieldHighlight);\n  };\n  Selection.prototype.createHighlightBorderInsideTable = function (cellWidget) {\n    var page = this.getPage(cellWidget);\n    var selectionWidget = undefined;\n    var left = cellWidget.x - cellWidget.margin.left + cellWidget.leftBorderWidth;\n    var width = cellWidget.width + cellWidget.margin.left + cellWidget.margin.right - cellWidget.leftBorderWidth - cellWidget.rightBorderWidth;\n    var top = cellWidget.y;\n    var height = cellWidget.height;\n    var pageTop = this.getPageTop(page);\n    var pageLeft = page.boundingRectangle.x;\n    var isVisiblePage = this.documentHelper.isPageInVisibleBound(page, pageTop);\n    var widgets = this.selectedWidgets;\n    if (!this.isHightlightEditRegionInternal && !this.isHighlightFormFields) {\n      if (widgets.containsKey(cellWidget) && widgets.get(cellWidget) instanceof SelectionWidgetInfo) {\n        selectionWidget = widgets.get(cellWidget);\n        if (isVisiblePage) {\n          this.documentHelper.selectionContext.clearRect(pageLeft + selectionWidget.left * this.documentHelper.zoomFactor - this.viewer.containerLeft, pageTop + top * this.documentHelper.zoomFactor - this.viewer.containerTop, selectionWidget.width * this.documentHelper.zoomFactor, height * this.documentHelper.zoomFactor);\n        }\n      } else {\n        selectionWidget = new SelectionWidgetInfo(left, width);\n        if (widgets.containsKey(cellWidget)) {\n          widgets.remove(widgets.get(cellWidget));\n        }\n        widgets.add(cellWidget, selectionWidget);\n      }\n    }\n    if (isVisiblePage) {\n      this.documentHelper.selectionContext.fillStyle = 'gray';\n      this.documentHelper.selectionContext.globalAlpha = 0.4;\n      var zoomFactor = this.documentHelper.zoomFactor;\n      this.clipSelection(page, pageTop);\n      this.documentHelper.selectionContext.fillRect(pageLeft + left * zoomFactor - this.viewer.containerLeft, pageTop + top * zoomFactor - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n      this.documentHelper.selectionContext.restore();\n    }\n  };\n  Selection.prototype.clipSelection = function (page, pageTop) {\n    var documentHelper = this.owner.documentHelper;\n    var width;\n    var height;\n    if (this.viewer instanceof WebLayoutViewer && this.documentHelper.zoomFactor < 1) {\n      width = page.boundingRectangle.width / this.documentHelper.zoomFactor;\n      height = page.boundingRectangle.height / this.documentHelper.zoomFactor;\n    } else {\n      width = page.boundingRectangle.width * this.documentHelper.zoomFactor;\n      height = page.boundingRectangle.height * this.documentHelper.zoomFactor;\n    }\n    var left = page.boundingRectangle.x;\n    documentHelper.selectionContext.beginPath();\n    documentHelper.selectionContext.save();\n    documentHelper.selectionContext.rect(left - this.viewer.containerLeft, pageTop - this.viewer.containerTop, width, height);\n    documentHelper.selectionContext.clip();\n  };\n  /**\n   * Add selection highlight\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.addSelectionHighlight = function (canvasContext, widget, top, page) {\n    if (this.selectedWidgets.containsKey(widget)) {\n      var height = this.documentHelper.render.getScaledValue(widget.height);\n      var widgetInfo = this.selectedWidgets.get(widget);\n      var widgetInfoCollection = undefined;\n      if (widgetInfo instanceof SelectionWidgetInfo) {\n        widgetInfoCollection = [];\n        widgetInfoCollection.push(widgetInfo);\n      } else {\n        widgetInfoCollection = widgetInfo;\n      }\n      if (!isNullOrUndefined(widgetInfoCollection)) {\n        for (var i = 0; i < widgetInfoCollection.length; i++) {\n          var selectedWidgetInfo = widgetInfoCollection[i];\n          var width = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].width);\n          var left = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].left, 1);\n          if (isNullOrUndefined(page)) {\n            page = this.owner.selectionModule.getPage(widget.paragraph);\n          }\n          this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n          if (this.documentHelper.isComposingIME) {\n            this.renderDashLine(canvasContext, page, widget, left, top, width, height);\n          } else {\n            canvasContext.globalAlpha = 0.4;\n            canvasContext.fillStyle = 'gray';\n            canvasContext.fillRect(left, this.documentHelper.render.getScaledValue(top, 2), width, height);\n            if (selectedWidgetInfo.floatingItems && selectedWidgetInfo.floatingItems.length > 0) {\n              for (var j = 0; j < selectedWidgetInfo.floatingItems.length; j++) {\n                var shape = selectedWidgetInfo.floatingItems[j];\n                width = this.documentHelper.render.getScaledValue(shape.width);\n                left = this.documentHelper.render.getScaledValue(shape.x, 1);\n                var shapeTop = this.documentHelper.render.getScaledValue(shape.y, 2);\n                canvasContext.fillRect(left, shapeTop, width, this.documentHelper.render.getScaledValue(shape.height));\n              }\n            }\n          }\n          canvasContext.restore();\n        }\n      }\n    }\n  };\n  Selection.prototype.renderDashLine = function (ctx, page, widget, left, top, width, height) {\n    var fontColor = this.characterFormat.fontColor;\n    var fillColor = fontColor ? HelperMethods.getColor(fontColor) : '#000000';\n    ctx.globalAlpha = 1;\n    // Get character format copied from selection format\n    var format = this.owner.editorModule.copyInsertFormat(new WCharacterFormat(), false);\n    var heightInfo = this.documentHelper.textHelper.getHeight(format);\n    var pageTop = this.getPageTop(page);\n    var descent = heightInfo.Height - heightInfo.BaselineOffset;\n    top = this.documentHelper.render.getUnderlineYPosition(widget) + top + 4 - descent;\n    this.documentHelper.render.renderDashLine(ctx, left, pageTop - this.viewer.containerTop + top * this.documentHelper.zoomFactor, width, fillColor, true);\n  };\n  /**\n   * Add Selection highlight inside table\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.addSelectionHighlightTable = function (canvasContext, tableCellWidget, page) {\n    if (this.selectedWidgets.containsKey(tableCellWidget)) {\n      var selectedWidgetInfo = this.selectedWidgets.get(tableCellWidget);\n      var selectedWidgetInfoCollection = undefined;\n      if (selectedWidgetInfo instanceof SelectionWidgetInfo) {\n        selectedWidgetInfoCollection = [];\n        selectedWidgetInfoCollection.push(selectedWidgetInfo);\n      } else {\n        selectedWidgetInfoCollection = selectedWidgetInfo;\n      }\n      if (!isNullOrUndefined(selectedWidgetInfoCollection)) {\n        for (var i = 0; i < selectedWidgetInfoCollection.length; i++) {\n          var left = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].left, 1);\n          var top_1 = this.documentHelper.render.getScaledValue(tableCellWidget.y, 2);\n          var width = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].width);\n          var height = this.documentHelper.render.getScaledValue(tableCellWidget.height);\n          canvasContext.fillStyle = 'gray';\n          if (isNullOrUndefined(page)) {\n            page = this.owner.selectionModule.getPage(tableCellWidget);\n          }\n          this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n          canvasContext.fillRect(left, top_1, width, height);\n          canvasContext.restore();\n        }\n      }\n    }\n  };\n  Selection.prototype.removeSelectionHighlight = function (widget) {\n    var left = 0;\n    var top = 0;\n    var width = 0;\n    var height = 0;\n    var page = undefined;\n    if (widget instanceof LineWidget) {\n      var lineWidget = widget;\n      var currentParaWidget = lineWidget.paragraph;\n      page = !isNullOrUndefined(currentParaWidget) ? this.getPage(lineWidget.paragraph) : undefined;\n      if (isNullOrUndefined(page)) {\n        return;\n      }\n      top = this.getTop(lineWidget);\n      height = lineWidget.height;\n    } else if (widget instanceof TableCellWidget) {\n      page = !isNullOrUndefined(widget) ? this.getPage(widget) : undefined;\n      if (isNullOrUndefined(page)) {\n        return;\n      }\n      top = widget.y;\n      height = widget.height;\n    }\n    if (isNullOrUndefined(page)) {\n      return;\n    }\n    var selectedWidget = this.selectedWidgets.get(widget);\n    var selectedWidgetCollection = undefined;\n    if (selectedWidget instanceof SelectionWidgetInfo) {\n      selectedWidgetCollection = [];\n      selectedWidgetCollection.push(selectedWidget);\n    } else {\n      selectedWidgetCollection = selectedWidget;\n    }\n    if (!isNullOrUndefined(selectedWidgetCollection)) {\n      for (var i = 0; i < selectedWidgetCollection.length; i++) {\n        width = selectedWidgetCollection[i].width;\n        left = selectedWidgetCollection[i].left;\n        var pageRect = page.boundingRectangle;\n        var pageIndex = this.documentHelper.pages.indexOf(page);\n        var pageGap = this.viewer.pageGap;\n        var pageTop = (pageRect.y - pageGap * (pageIndex + 1)) * this.documentHelper.zoomFactor + pageGap * (pageIndex + 1);\n        var pageLeft = pageRect.x;\n        var zoomFactor = this.documentHelper.zoomFactor;\n        if (this.viewer.containerTop <= pageTop || pageTop < this.viewer.containerTop + this.documentHelper.selectionCanvas.height) {\n          this.documentHelper.selectionContext.clearRect(pageLeft + left * zoomFactor - this.viewer.containerLeft - 0.5, pageTop + top * zoomFactor - this.viewer.containerTop - 0.5, width * zoomFactor + 0.5, height * zoomFactor + 0.5);\n        }\n      }\n    }\n  };\n  /**\n   * Selects the current word.\n   *\n   * @param excludeSpace True if exclude white space; Otherwise, false.\n   * @returns {void}\n   */\n  Selection.prototype.selectCurrentWord = function (excludeSpace) {\n    var startPosition = this.start.clone();\n    var endPosition = this.end.clone();\n    this.selectCurrentWordRange(startPosition, endPosition, excludeSpace ? excludeSpace : false);\n    this.selectRange(startPosition, endPosition);\n  };\n  /**\n   * Selects the current paragraph.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectParagraph = function () {\n    if (!isNullOrUndefined(this.start)) {\n      this.start.paragraphStartInternal(this, false);\n      this.end.moveToParagraphEndInternal(this, false);\n      this.upDownSelectionLength = this.end.location.x;\n      this.fireSelectionChanged(true);\n    }\n  };\n  /**\n   * Selects the current line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectLine = function () {\n    if (!isNullOrUndefined(this.start)) {\n      this.moveToLineStart();\n      this.handleShiftEndKey();\n    }\n  };\n  /**\n   * Moves the selection to the start of the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToDocumentStart = function () {\n    this.handleControlHomeKey();\n  };\n  /**\n   * Moves the selection to the end of the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToDocumentEnd = function () {\n    this.handleControlEndKey();\n  };\n  /**\n   * Moves the selection to the current paragraph start.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToParagraphStart = function () {\n    if (this.isForward) {\n      this.start.paragraphStartInternal(this, false);\n      this.end.setPositionInternal(this.start);\n      this.upDownSelectionLength = this.end.location.x;\n    } else {\n      this.end.paragraphStartInternal(this, false);\n      this.start.setPositionInternal(this.end);\n      this.upDownSelectionLength = this.start.location.x;\n    }\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Moves the selection to the current paragraph end.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToParagraphEnd = function () {\n    if (this.isForward) {\n      this.start.moveToParagraphEndInternal(this, false);\n      this.end.setPositionInternal(this.start);\n      this.upDownSelectionLength = this.end.location.x;\n    } else {\n      this.end.moveToParagraphEndInternal(this, false);\n      this.start.setPositionInternal(this.end);\n      this.upDownSelectionLength = this.start.location.x;\n    }\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Moves the selection to the next line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToNextLine = function () {\n    this.moveDown();\n  };\n  /**\n   * Moves the selection to the previous line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToPreviousLine = function () {\n    this.moveUp();\n  };\n  /**\n   * Moves the selection to the next character.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToNextCharacter = function () {\n    this.handleRightKey();\n  };\n  /**\n   * Moves the selection to the previous character.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToPreviousCharacter = function () {\n    this.handleLeftKey();\n  };\n  Selection.prototype.selectCurrentWordRange = function (startPosition, endPosition, excludeSpace) {\n    if (!isNullOrUndefined(startPosition)) {\n      if (startPosition.offset > 0) {\n        var wordStart = startPosition.clone();\n        var indexInInline = 0;\n        var inlineObj = startPosition.currentWidget.getInline(startPosition.offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if (!isNullOrUndefined(inline) && inline instanceof FieldElementBox && inline.fieldType === 1) {\n          if (startPosition.offset > 2 && (!isNullOrUndefined(inline.fieldSeparator) || isNullOrUndefined(inline.fieldBegin))) {\n            wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 2);\n            wordStart.moveToWordEndInternal(0, false);\n            if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset - 1)) {\n              startPosition.moveToWordStartInternal(2);\n            }\n          } else if (startPosition.offset > 3 && isNullOrUndefined(inline.fieldSeparator)) {\n            wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 3);\n            wordStart.moveToWordEndInternal(0, false);\n            if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n              startPosition.moveToWordStartInternal(2);\n            }\n          }\n        } else {\n          wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 1);\n          wordStart.moveToWordEndInternal(0, false);\n          if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n            startPosition.moveToWordStartInternal(2);\n          }\n        }\n      }\n      endPosition.moveToWordEndInternal(2, excludeSpace);\n    }\n  };\n  /**\n   * Extends the selection to the paragraph start.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToParagraphStart = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.paragraphStartInternal(this, true);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to the paragraph end.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToParagraphEnd = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToParagraphEndInternal(this, true);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Move to next text position\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveNextPosition = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    if (this.isEmpty) {\n      this.start.moveNextPosition();\n      this.end.setPositionInternal(this.start);\n    }\n    this.updateForwardSelection();\n    this.upDownSelectionLength = this.start.location.x;\n    this.fireSelectionChanged(true);\n    if (this.documentHelper.isFormFillProtectedMode) {\n      var formField = this.getCurrentFormField();\n      if (!formField) {\n        formField = this.getFormFieldInFormFillMode();\n        this.selectPrevNextFormField(true, formField);\n      }\n    }\n  };\n  /**\n   * Move to next paragraph\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveToNextParagraph = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToNextParagraphStartInternal();\n    this.start.setPositionInternal(this.end);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Navigates to the next footnote from the current selection.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.nextFootnote = function () {\n    if (this.isinFootnote) {\n      var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n      var colLength = this.documentHelper.footnoteCollection.length;\n      var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n      var nextFootnoteElement = this.documentHelper.footnoteCollection[indexCount + 1];\n      if (isNullOrUndefined(nextFootnoteElement)) {\n        nextFootnoteElement = footNoteElement;\n      }\n      var start = this.start.clone();\n      var end = this.end.clone();\n      for (var i = 0; i < this.documentHelper.pages.length; i++) {\n        var referenceElement = this.documentHelper.pages[i].footnoteWidget;\n        for (var j = 1; j < referenceElement.bodyWidgets.length; j++) {\n          var element = referenceElement.bodyWidgets[j].footNoteReference;\n          if (element === nextFootnoteElement) {\n            start.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n            end.setPositionInternal(start);\n            this.selectRange(start, end);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Navigates to the previous footnote from the current selection.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.previousFootnote = function () {\n    if (this.isinFootnote) {\n      var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n      var colLength = this.documentHelper.footnoteCollection.length;\n      var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n      var previousFootnote = this.documentHelper.footnoteCollection[indexCount - 1];\n      if (isNullOrUndefined(previousFootnote)) {\n        previousFootnote = footNoteElement;\n      }\n      var startPosition = this.start.clone();\n      var endPosition = this.end.clone();\n      for (var i = 0; i < this.documentHelper.pages.length; i++) {\n        var footnote = this.documentHelper.pages[i].footnoteWidget;\n        for (var j = 1; j < footnote.bodyWidgets.length; j++) {\n          var element = footnote.bodyWidgets[j].footNoteReference;\n          if (element === previousFootnote) {\n            startPosition.setPositionParagraph(footnote.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n            endPosition.setPositionInternal(startPosition);\n            this.selectRange(startPosition, endPosition);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Navigates to the next endnote from the current selection\n   *\n   * @returns {void}\n   */\n  Selection.prototype.nextEndnote = function () {\n    if (this.isinEndnote) {\n      var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n      var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n      var nextEndnote = this.documentHelper.endnoteCollection[indexCount + 1];\n      if (isNullOrUndefined(nextEndnote)) {\n        nextEndnote = endNoteElement;\n      }\n      var startPosition = this.start.clone();\n      var endPosition = this.end.clone();\n      var endnoteElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n      for (var j = 0; j < endnoteElement.childWidgets.length; j++) {\n        var element = endnoteElement.bodyWidgets[j].footNoteReference;\n        if (element === nextEndnote) {\n          startPosition.setPositionParagraph(endnoteElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n          endPosition.setPositionInternal(startPosition);\n          this.selectRange(startPosition, endPosition);\n        }\n      }\n    }\n  };\n  /**\n   * Navigates to the previous endnote from the current selection.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.previousEndnote = function () {\n    if (this.isinEndnote) {\n      var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n      var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n      var inline = this.documentHelper.endnoteCollection[indexCount - 1];\n      if (isNullOrUndefined(inline)) {\n        inline = endNoteElement;\n      }\n      var startPosition = this.start.clone();\n      var endPosition = this.end.clone();\n      var referenceElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n      for (var j = 0; j < referenceElement.childWidgets.length; j++) {\n        var element = referenceElement.bodyWidgets[j].footNoteReference;\n        if (element === inline) {\n          startPosition.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n          endPosition.setPositionInternal(startPosition);\n          this.selectRange(startPosition, endPosition);\n        }\n      }\n    }\n  };\n  /**\n   * Move to previous text position\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.movePreviousPosition = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    if (this.isEmpty) {\n      this.start.movePreviousPosition();\n      this.end.setPositionInternal(this.start);\n    }\n    this.updateBackwardSelection();\n    this.upDownSelectionLength = this.start.location.x;\n    this.fireSelectionChanged(true);\n    if (this.documentHelper.isFormFillProtectedMode) {\n      var formField = this.getCurrentFormField();\n      if (!formField) {\n        formField = this.getFormFieldInFormFillMode();\n        this.selectPrevNextFormField(false, formField);\n      }\n    }\n  };\n  /**\n   * Move to previous paragraph\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveToPreviousParagraph = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToPreviousParagraph(this);\n    this.start.setPositionInternal(this.end);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to previous line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToPreviousLine = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToPreviousLine(this, this.upDownSelectionLength);\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to line end\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToLineEnd = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToLineEndInternal(this, true);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to line start.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToLineStart = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToLineStartInternal(this, true);\n    this.upDownSelectionLength = this.end.location.x;\n    // To select Paragraph mark similar to MS WORD\n    if (this.start.paragraph === this.end.paragraph && this.start.offset === this.start.currentWidget.getEndOffset() && this.isParagraphLastLine(this.start.currentWidget) && this.isParagraphFirstLine(this.end.currentWidget)) {\n      this.start.setPositionParagraph(this.start.currentWidget, this.start.offset + 1);\n    }\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveUp = function () {\n    if (this.documentHelper.isFormFillProtectedMode) {\n      this.selectPrevNextFormField(false);\n      return;\n    }\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    if (!this.isEmpty) {\n      if (this.isForward) {\n        this.end.setPositionInternal(this.start);\n      } else {\n        this.start.setPositionInternal(this.end);\n      }\n      this.upDownSelectionLength = this.start.location.x;\n    }\n    this.upDownSelectionLength = this.start.location.x;\n    var beforeUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n    var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n    var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n    this.start.moveUp(this, this.upDownSelectionLength);\n    isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n    var afterUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n    if (isMultiColumn) {\n      if (beforeUp === afterUp || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n        this.end.setPositionInternal(this.start);\n      } else {\n        do {\n          if (isNullOrUndefined(this.start.currentWidget.paragraph.previousRenderedWidget) || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n            break;\n          }\n          if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && beforeUp > this.start.currentWidget.paragraph.bodyWidget.columnIndex) {\n            break;\n          }\n          this.start.moveUp(this, this.upDownSelectionLength);\n        } while (beforeUp !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n      }\n    }\n    this.end.setPositionInternal(this.start);\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveDown = function () {\n    if (this.documentHelper.isFormFillProtectedMode) {\n      this.selectPrevNextFormField(true);\n      return;\n    }\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    if (!this.isEmpty) {\n      if (this.isForward) {\n        this.start.setPositionInternal(this.end);\n      } else {\n        this.end.setPositionInternal(this.start);\n      }\n      this.upDownSelectionLength = this.start.location.x;\n    }\n    this.upDownSelectionLength = this.start.location.x;\n    var beforeDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n    var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n    var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n    this.start.moveDown(this, this.upDownSelectionLength);\n    var afterDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n    if (isMultiColumn) {\n      if (beforeDown === afterDown || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n        this.end.setPositionInternal(this.start);\n      } else {\n        do {\n          if (isNullOrUndefined(this.start.currentWidget.paragraph.nextRenderedWidget) || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n            break;\n          }\n          if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && this.documentHelper.layout.getBodyWidget(this.start.currentWidget.paragraph.bodyWidget, false) === this.start.currentWidget.paragraph.bodyWidget) {\n            break;\n          }\n          this.start.moveDown(this, this.upDownSelectionLength);\n        } while (beforeDown !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n      }\n    }\n    this.end.setPositionInternal(this.start);\n    this.fireSelectionChanged(true);\n  };\n  Selection.prototype.updateForwardSelection = function () {\n    if (!this.isEmpty) {\n      if (this.isForward) {\n        this.start.setPositionInternal(this.end);\n      } else {\n        this.end.setPositionInternal(this.start);\n      }\n    }\n  };\n  Selection.prototype.updateBackwardSelection = function () {\n    if (!this.isEmpty) {\n      if (this.isForward) {\n        this.end.setPositionInternal(this.start);\n      } else {\n        this.start.setPositionInternal(this.end);\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.getFirstBlockInFirstCell = function (table) {\n    if (table.childWidgets.length > 0) {\n      var firstrow = table.childWidgets[0];\n      if (firstrow.childWidgets.length > 0) {\n        var firstcell = firstrow.childWidgets[0];\n        if (firstcell.childWidgets.length === 0) {\n          return undefined;\n        }\n        return firstcell.childWidgets[0];\n      }\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.getFirstCellInRegion = function (row, startCell, selectionLength, isMovePrevious) {\n    var cellStart = this.getCellLeft(row, startCell);\n    var cellEnd = cellStart + startCell.cellFormat.cellWidth;\n    var flag = true;\n    if (cellStart <= selectionLength && selectionLength < cellEnd) {\n      for (var k = 0; k < row.childWidgets.length; k++) {\n        var left = this.getCellLeft(row, row.childWidgets[k]);\n        if (HelperMethods.round(cellStart, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(cellEnd, 2)) {\n          flag = false;\n          return row.childWidgets[k];\n        }\n      }\n    } else {\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cellLeft = this.getCellLeft(row, row.childWidgets[j]);\n        if (cellLeft <= selectionLength && cellLeft + row.childWidgets[j].cellFormat.cellWidth > selectionLength) {\n          flag = false;\n          return row.childWidgets[j];\n        }\n      }\n    }\n    if (flag) {\n      if (!isNullOrUndefined(row.previousRenderedWidget) && isMovePrevious) {\n        var previousWidget = row.previousRenderedWidget;\n        return this.getFirstCellInRegion(previousWidget, startCell, selectionLength, isMovePrevious);\n      } else if (!isNullOrUndefined(row.nextRenderedWidget) && !isMovePrevious) {\n        return this.getFirstCellInRegion(row.nextRenderedWidget, startCell, selectionLength, isMovePrevious);\n      }\n    }\n    return row.childWidgets[0];\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.getFirstParagraph = function (tableCell) {\n    while (tableCell.previousSplitWidget) {\n      tableCell = tableCell.previousSplitWidget;\n    }\n    var firstBlock = tableCell.firstChild;\n    return this.documentHelper.getFirstParagraphBlock(firstBlock);\n  };\n  /**\n   * Get last block in last cell\n   *\n   * @private\n   * @returns {void}\n   */\n  //Table\n  Selection.prototype.getLastBlockInLastCell = function (table) {\n    if (table.childWidgets.length > 0) {\n      var lastRow = table.childWidgets[table.childWidgets.length - 1];\n      var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n      while (lastCell.childWidgets.length === 0 && !isNullOrUndefined(lastCell.previousSplitWidget)) {\n        lastCell = lastCell.previousSplitWidget;\n      }\n      return lastCell.childWidgets[lastCell.childWidgets.length - 1];\n    }\n    return undefined;\n  };\n  /**\n   * Moves the selection to start of the current line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToLineStart = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.updateBackwardSelection();\n    this.start.moveToLineStartInternal(this, false);\n    this.end.setPositionInternal(this.start);\n    this.upDownSelectionLength = this.start.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Moves the selection to end of the current line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.moveToLineEnd = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.updateForwardSelection();\n    this.start.moveToLineEndInternal(this, false);\n    this.end.setPositionInternal(this.start);\n    this.upDownSelectionLength = this.start.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Get Page top\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.getPageTop = function (page) {\n    return (page.boundingRectangle.y - this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n  };\n  /**\n   * Move text position to cursor point\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.moveTextPosition = function (cursorPoint, textPosition, isMouseLeave) {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    //Updates the text position based on the cursor position.\n    var widget = this.documentHelper.getLineWidgetInternal(cursorPoint, true);\n    if (!isNullOrUndefined(widget)) {\n      this.updateTextPositionWidget(widget, cursorPoint, textPosition, true);\n    }\n    this.upDownSelectionLength = textPosition.location.x;\n    var selectionStartIndex = this.start.getHierarchicalIndexInternal();\n    var selectionEndIndex = this.end.getHierarchicalIndexInternal();\n    if (selectionStartIndex !== selectionEndIndex && !isMouseLeave) {\n      // Extends selection end to field begin or field end.\n      if (TextPosition.isForwardSelection(selectionStartIndex, selectionEndIndex)) {\n        textPosition.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n      } else {\n        textPosition.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n      }\n    }\n    this.fireSelectionChanged(true);\n  };\n  //Helper Method Implementation\n  //Document\n  /**\n   * Get document start position\n   *\n   * @private\n   * @returns {TextPosition}\n   */\n  Selection.prototype.getDocumentStart = function () {\n    var textPosition = undefined;\n    var block = this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n    return this.setPositionForBlock(block, true);\n  };\n  /**\n   * Get document end position\n   *\n   * @private\n   * @returns {TextPosition}\n   */\n  Selection.prototype.getDocumentEnd = function () {\n    var textPosition = undefined;\n    var documentStart = this.owner.documentStart;\n    var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n    if (!isNullOrUndefined(documentStart) && lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1].childWidgets.length > 0) {\n      var block = undefined;\n      var section = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n      var blocks = section.childWidgets;\n      var lastBlkItem = blocks.length - 1;\n      var lastBlock = blocks[lastBlkItem];\n      if (lastBlock instanceof BlockWidget) {\n        block = lastBlock;\n      }\n      textPosition = this.setPositionForBlock(block, false);\n    }\n    return textPosition;\n  };\n  //Keyboard shortcut internal API\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlEndKey = function () {\n    var documentEnd = undefined;\n    if (!isNullOrUndefined(this.owner.documentEnd)) {\n      documentEnd = this.owner.documentEnd;\n    }\n    if (!isNullOrUndefined(documentEnd)) {\n      this.owner.selectionModule.selectContent(documentEnd, true);\n    }\n    if (this.owner.enableAutoFocus) {\n      this.checkForCursorVisibility();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlHomeKey = function () {\n    var documentStart = undefined;\n    if (!isNullOrUndefined(this.owner.documentStart)) {\n      documentStart = this.owner.documentStart;\n    }\n    if (!isNullOrUndefined(documentStart)) {\n      this.owner.selectionModule.selectContent(documentStart, true);\n    }\n    if (this.owner.enableAutoFocus) {\n      this.checkForCursorVisibility();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlLeftKey = function () {\n    this.extendToWordStartInternal(true);\n    this.checkForCursorVisibility();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlRightKey = function () {\n    this.extendToWordEndInternal(true);\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control down key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlDownKey = function () {\n    this.moveToNextParagraph();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control up key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlUpKey = function () {\n    this.moveToPreviousParagraph();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftLeftKey = function () {\n    this.extendBackward();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles shift up key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftUpKey = function () {\n    this.extendToPreviousLine();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles shift right key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftRightKey = function () {\n    this.extendForward();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles shift down key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftDownKey = function () {\n    this.extendToNextLine();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftLeftKey = function () {\n    var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n    if (isForward) {\n      this.extendToWordEndInternal(false);\n    } else {\n      this.extendToWordStartInternal(false);\n    }\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control shift up key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftUpKey = function () {\n    this.extendToParagraphStart();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control shift right key\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftRightKey = function () {\n    var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n    if (isForward) {\n      this.extendToWordStartInternal(false);\n    } else {\n      this.extendToWordEndInternal(false);\n    }\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control shift down key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftDownKey = function () {\n    this.extendToParagraphEnd();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles left key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleLeftKey = function () {\n    if (this.end.isCurrentParaBidi) {\n      this.moveNextPosition();\n    } else {\n      this.movePreviousPosition();\n    }\n    if (this.owner.enableAutoFocus) {\n      this.checkForCursorVisibility();\n    }\n  };\n  /**\n   * Handles up key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleUpKey = function () {\n    this.isMoveDownOrMoveUp = true;\n    this.moveUp();\n    this.isMoveDownOrMoveUp = false;\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles right key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleRightKey = function () {\n    if (this.end.isCurrentParaBidi) {\n      this.movePreviousPosition();\n    } else {\n      this.moveNextPosition();\n    }\n    if (this.owner.enableAutoFocus) {\n      this.checkForCursorVisibility();\n    }\n  };\n  /**\n   * Handles end key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleEndKey = function () {\n    this.moveToLineEnd();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles home key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleHomeKey = function () {\n    this.moveToLineStart();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles down key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleDownKey = function () {\n    this.isMoveDownOrMoveUp = true;\n    this.moveDown();\n    this.isMoveDownOrMoveUp = false;\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles shift end key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftEndKey = function () {\n    this.extendToLineEnd();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles shift home key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleShiftHomeKey = function () {\n    this.extendToLineStart();\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control shift end key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftEndKey = function () {\n    var documentEnd = undefined;\n    if (!isNullOrUndefined(this.owner.documentEnd)) {\n      documentEnd = this.owner.documentEnd;\n    }\n    if (!isNullOrUndefined(documentEnd)) {\n      this.end.setPosition(documentEnd.currentWidget, false);\n      this.fireSelectionChanged(true);\n    }\n    this.checkForCursorVisibility();\n  };\n  /**\n   * Handles control shift home key.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleControlShiftHomeKey = function () {\n    var documentStart = undefined;\n    if (!isNullOrUndefined(this.owner.documentStart)) {\n      documentStart = this.owner.documentStart;\n    }\n    if (!isNullOrUndefined(documentStart)) {\n      this.end.setPositionInternal(documentStart);\n      this.fireSelectionChanged(true);\n    }\n    this.checkForCursorVisibility();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleSpaceBarKey = function () {\n    if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly' && this.getFormFieldType() === 'CheckBox') {\n      this.owner.editorModule.toggleCheckBoxFormField(this.getCurrentFormField());\n    }\n  };\n  /**\n   * Handles tab key.\n   *\n   * @param isNavigateInCell\n   * @param isShiftTab\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.handleTabKey = function (isNavigateInCell, isShiftTab) {\n    var start = this.start;\n    var isCursorAtParaStart = false;\n    var isCursorAtLineStart = false;\n    if (isNullOrUndefined(start)) {\n      return;\n    }\n    if (start.offset === 0 && start.paragraph.paragraphFormat.listFormat.listId == -1) {\n      if (start.currentWidget.isFirstLine()) {\n        isCursorAtParaStart = true;\n      }\n      isCursorAtLineStart = true;\n    }\n    if (start.paragraph.isInsideTable && this.end.paragraph.isInsideTable && (isNavigateInCell || isShiftTab)) {\n      //Perform tab navigation\n      if (!this.owner.documentHelper.isDocumentProtected && !(this.documentHelper.protectionType === 'FormFieldsOnly')) {\n        if (isShiftTab) {\n          this.selectPreviousCell();\n        } else {\n          this.selectNextCell();\n        }\n      }\n    } else if ((isNavigateInCell || isShiftTab) && !isNullOrUndefined(start) && start.offset === this.getStartOffset(start.paragraph) && !isNullOrUndefined(start.paragraph.paragraphFormat) && !isNullOrUndefined(start.paragraph.paragraphFormat.listFormat) && start.paragraph.paragraphFormat.listFormat.listId !== -1 && !this.owner.isReadOnlyMode) {\n      var selection = this.documentHelper.selection;\n      var currentPara = start.paragraph;\n      var isFirstParaForList = false;\n      if (!selection.isForward) {\n        currentPara = selection.end.paragraph;\n      }\n      isFirstParaForList = this.owner.editorModule.isFirstParaForList(selection, currentPara);\n      if (isFirstParaForList) {\n        if (isShiftTab) {\n          this.owner.editorModule.updateListLevelIndent(-this.documentHelper.defaultTabWidth, currentPara);\n        } else {\n          this.owner.editorModule.updateListLevelIndent(this.documentHelper.defaultTabWidth, currentPara);\n        }\n      } else {\n        this.owner.editorModule.updateListLevel(isShiftTab ? false : true);\n      }\n    } else if (!this.owner.isReadOnlyMode && !this.documentHelper.isFormFillProtectedMode) {\n      if (isCursorAtParaStart && start.paragraph.paragraphFormat.firstLineIndent < this.documentHelper.defaultTabWidth) {\n        this.documentHelper.owner.editorModule.onApplyParagraphFormat('firstLineIndent', this.documentHelper.defaultTabWidth, true, false);\n      } else if (isCursorAtLineStart) {\n        if (isShiftTab) {\n          this.owner.editorModule.decreaseIndent();\n        } else {\n          if (HelperMethods.convertPointToPixel(start.paragraph.paragraphFormat.firstLineIndent + start.paragraph.paragraphFormat.leftIndent) < this.documentHelper.viewer.clientArea.width) {\n            this.owner.editorModule.increaseIndent();\n          }\n        }\n      } else {\n        this.owner.editorModule.handleTextInput('\\t');\n      }\n    }\n    if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.formFields.length > 0) {\n      this.selectPrevNextFormField(!isShiftTab);\n    }\n    this.checkForCursorVisibility();\n  };\n  /**\n  * @private\n  * @returns {void}\n  */\n  Selection.prototype.handlePageUpPageDownKey = function (isPageDown, shiftKey) {\n    var _this = this;\n    var offsetX = this.end.location.x;\n    var offsetY = this.end.location.y;\n    var page = this.end.paragraph.bodyWidget.page;\n    var pageTop = this.getPageTop(page);\n    var previousScrollTop = this.documentHelper.viewerContainer.scrollTop;\n    offsetY = offsetY * this.documentHelper.zoomFactor + (pageTop - previousScrollTop);\n    offsetX = offsetX * this.documentHelper.zoomFactor + page.boundingRectangle.x;\n    if (isPageDown) {\n      this.documentHelper.viewerContainer.scrollTop += this.documentHelper.visibleBounds.height;\n    } else {\n      this.documentHelper.viewerContainer.scrollTop -= this.documentHelper.visibleBounds.height;\n    }\n    var isSameScrollTop = false;\n    if (previousScrollTop === this.documentHelper.viewerContainer.scrollTop) {\n      isSameScrollTop = true;\n    }\n    if (shiftKey) {\n      this.documentHelper.skipScrollToPosition = true;\n    }\n    setTimeout(function () {\n      if (isSameScrollTop) {\n        if (!shiftKey) {\n          if (isPageDown) _this.moveToDocumentEnd();else _this.moveToDocumentStart();\n        } else {\n          var position = void 0;\n          if (isPageDown) {\n            position = _this.getDocumentEnd();\n          } else {\n            position = _this.getDocumentStart();\n          }\n          _this.end.setPositionForLineWidget(position.currentWidget, position.offset);\n          _this.fireSelectionChanged(true);\n        }\n      } else {\n        _this.select({\n          x: offsetX,\n          y: offsetY,\n          extend: shiftKey\n        });\n      }\n    }, 0);\n  };\n  // returns current field in FormFill mode\n  Selection.prototype.getFormFieldInFormFillMode = function () {\n    var currentStart = this.owner.selectionModule.start;\n    var formField;\n    for (var i = this.documentHelper.formFields.length - 1; i >= 0; i--) {\n      if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n        continue;\n      }\n      var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n      if (paraIndex.isExistBefore(currentStart)) {\n        formField = this.documentHelper.formFields[i];\n        break;\n      } else if (i === 0) {\n        formField = this.documentHelper.formFields[this.documentHelper.formFields.length - 1];\n      }\n    }\n    return formField;\n  };\n  // Navigates & Selects next form field\n  Selection.prototype.selectPrevNextFormField = function (forward, formField) {\n    if (this.documentHelper.isFormFillProtectedMode) {\n      if (!formField) {\n        formField = this.getCurrentFormField();\n      }\n      var index = this.documentHelper.formFields.indexOf(formField);\n      if (forward) {\n        for (var i = index;; i++) {\n          if (i === this.documentHelper.formFields.length - 1) {\n            i = 0;\n          } else {\n            i = i + 1;\n          }\n          if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n            i = i - 1;\n            continue;\n          }\n          this.selectFieldInternal(this.documentHelper.formFields[i], true);\n          break;\n        }\n      } else {\n        for (var i = index;; i--) {\n          if (i === 0) {\n            i = this.documentHelper.formFields.length - 1;\n          } else {\n            i = i - 1;\n          }\n          if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n            i = i + 1;\n            continue;\n          }\n          this.selectFieldInternal(this.documentHelper.formFields[i], true);\n          break;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.navigateToNextFormField = function () {\n    var currentStart = this.owner.selectionModule.end;\n    var currentFormField;\n    for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n      currentFormField = this.documentHelper.formFields[i];\n      if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n        continue;\n      }\n      var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n      if (paraIndex.isExistAfter(currentStart)) {\n        if (currentFormField.formFieldData instanceof TextFormField && currentFormField.formFieldData.type === 'Text' && this.documentHelper.isInlineFormFillProtectedMode) {\n          this.selectTextElementStartOfField(this.documentHelper.formFields[i]);\n        } else {\n          this.selectFieldInternal(this.documentHelper.formFields[i]);\n        }\n        break;\n      } else if (i === this.documentHelper.formFields.length - 1) {\n        currentFormField = this.documentHelper.formFields[0];\n        if (currentFormField.formFieldData instanceof TextFormField && currentFormField.formFieldData.type === 'Text' && this.documentHelper.isInlineFormFillProtectedMode) {\n          this.selectTextElementStartOfField(this.documentHelper.formFields[0]);\n        } else {\n          this.selectFieldInternal(this.documentHelper.formFields[0]);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectTextElementStartOfField = function (formField) {\n    var fieldSeparator = formField.fieldSeparator;\n    var element = fieldSeparator.nextElement;\n    if (element) {\n      while (!(element instanceof TextElementBox)) {\n        element = element.nextElement;\n      }\n      var offset = formField.line.getOffset(element, 0);\n      var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n      this.selectInternal(formField.line, element, 0, point);\n    }\n  };\n  Selection.prototype.triggerFormFillEvent = function (isKeyBoardNavigation) {\n    var previousField = this.previousSelectedFormField;\n    var currentField = this.currentFormField;\n    var previousFieldData;\n    var currentFieldData;\n    if (currentField !== previousField && previousField && previousField.formFieldData instanceof TextFormField && previousField.formFieldData.type === 'Text') {\n      if (previousField.formFieldData.format !== '' && !this.isFormatUpdated) {\n        // Need to handle update form field format\n        this.owner.editorModule.applyFormTextFormat(previousField);\n        if (!isNullOrUndefined(this.previousSelectedFormField)) {\n          previousField = this.previousSelectedFormField;\n        }\n      }\n      previousFieldData = {\n        'fieldName': previousField.formFieldData.name,\n        'value': this.owner.editorModule.getFieldResultText(previousField)\n      };\n      this.owner.trigger(afterFormFieldFillEvent, previousFieldData);\n    }\n    if (currentField !== previousField && currentField && (currentField.formFieldData instanceof TextFormField && currentField.formFieldData.type === 'Text' && isKeyBoardNavigation == undefined || (currentField.formFieldData instanceof TextFormField && this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline' || currentField.formFieldData instanceof CheckBoxFormField) && isKeyBoardNavigation)) {\n      currentFieldData = {\n        'fieldName': currentField.formFieldData.name,\n        'value': this.owner.editorModule.getFieldResultText(currentField)\n      };\n      this.owner.trigger(beforeFormFieldFillEvent, currentFieldData);\n    }\n  };\n  Selection.prototype.selectPreviousCell = function () {\n    var tableCell = this.start.paragraph.associatedCell;\n    var tableRow = tableCell.ownerRow;\n    var tableAdv = tableRow.ownerTable;\n    if (isNullOrUndefined(tableCell.previousWidget)) {\n      if (!isNullOrUndefined(tableRow.previousRenderedWidget)) {\n        //Move text selection or cursor to previous row's last cell\n        var prevRow = undefined;\n        if (tableRow.previousRenderedWidget instanceof TableRowWidget) {\n          prevRow = tableRow.previousRenderedWidget;\n        }\n        this.selectTableCellInternal(prevRow.childWidgets[prevRow.childWidgets.length - 1], true);\n      }\n    } else {\n      //Move text selection or cursor to next cell in current row\n      var prevCell = undefined;\n      if (tableCell.previousWidget instanceof TableCellWidget) {\n        prevCell = tableCell.previousWidget;\n      }\n      this.selectTableCellInternal(prevCell, true);\n    }\n  };\n  Selection.prototype.selectNextCell = function () {\n    var tableCell = this.start.paragraph.associatedCell;\n    var tableRow = tableCell.ownerRow;\n    var tableAdv = tableRow.ownerTable;\n    if (isNullOrUndefined(tableCell.nextWidget)) {\n      if (isNullOrUndefined(tableRow.nextRenderedWidget) && !this.owner.isReadOnlyMode) {\n        //Insert new row below\n        this.owner.editorModule.insertRow(false);\n      } else {\n        //Move text selection or cursor to next row's first cell\n        var nextRow = undefined;\n        if (tableRow.nextRenderedWidget instanceof TableRowWidget) {\n          nextRow = tableRow.nextRenderedWidget;\n        }\n        this.selectTableCellInternal(nextRow.childWidgets[0], true);\n      }\n      // }\n    } else {\n      //Move text selection or cursor to next cell in current row\n      var nextCell = undefined;\n      if (tableCell.nextRenderedWidget instanceof TableCellWidget) {\n        nextCell = tableCell.nextRenderedWidget;\n      }\n      this.selectTableCellInternal(nextCell, true);\n    }\n  };\n  /**\n   * Select given table cell\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectTableCellInternal = function (tableCell, clearMultiSelection) {\n    var firstParagraph = this.getFirstParagraph(tableCell);\n    var lastParagraph = this.getLastParagraph(tableCell);\n    if (firstParagraph === lastParagraph && lastParagraph.isEmpty()) {\n      this.selectParagraphInternal(lastParagraph, true);\n    } else {\n      var firstLineWidget = lastParagraph.childWidgets[0];\n      this.start.setPosition(firstParagraph.childWidgets[0], true);\n      this.end.setPositionParagraph(firstLineWidget, firstLineWidget.getEndOffset());\n      this.fireSelectionChanged(true);\n    }\n  };\n  /**\n   * Select while table\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectTableInternal = function () {\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.getTable(start, end))) {\n      var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n      var table = containerCell.ownerTable;\n      var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n      var lastPara = this.documentHelper.getLastParagraphBlock(table);\n      var offset = lastPara.lastChild.getEndOffset();\n      this.start.setPosition(firstPara.childWidgets[0], true);\n      this.end.setPositionParagraph(lastPara.lastChild, offset + 1);\n    }\n    this.selectPosition(this.start, this.end);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getTableRevision = function () {\n    var start = this.start.clone();\n    var end = this.end.clone();\n    if (!this.isForward) {\n      start = this.end.clone();\n      end = this.start.clone();\n    }\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.getTable(start, end))) {\n      var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n      var table = containerCell.ownerTable;\n      var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n      var lastPara = this.documentHelper.getLastParagraphBlock(table);\n      var offset = lastPara.lastChild.getEndOffset();\n      start.setPosition(firstPara.childWidgets[0], true);\n      end.setPositionParagraph(lastPara.lastChild, offset + 1);\n    }\n    var startIndex = this.getAbsolutePositionFromRelativePosition(start);\n    var endIndex = this.getAbsolutePositionFromRelativePosition(end);\n    return Math.abs(endIndex - startIndex);\n    // this.selectPosition(this.start, this.end);\n  };\n  /**\n   * Select single column\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectColumnInternal = function () {\n    var startTextPos = this.start;\n    var endTextPos = this.end;\n    if (!this.isForward) {\n      startTextPos = this.end;\n      endTextPos = this.start;\n    }\n    if (!isNullOrUndefined(startTextPos) && !isNullOrUndefined(endTextPos) && !isNullOrUndefined(this.getTable(startTextPos, endTextPos))) {\n      var containerCell = this.getContainerCellOf(startTextPos.paragraph.associatedCell, endTextPos.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(endTextPos.paragraph.associatedCell)) {\n        var startCell = this.getSelectedCell(startTextPos.paragraph.associatedCell, containerCell);\n        var endCell = this.getSelectedCell(endTextPos.paragraph.associatedCell, containerCell);\n        if (this.containsCell(containerCell, endTextPos.paragraph.associatedCell)) {\n          var row = startCell.ownerRow;\n          var columnCells = containerCell.ownerTable.getColumnCellsForSelection(containerCell, containerCell);\n          if (columnCells.length > 0) {\n            var firstPara = this.getFirstParagraph(columnCells[0]);\n            var lastPara = this.getLastParagraph(columnCells[columnCells.length - 1]);\n            this.start.setPosition(firstPara.firstChild, true);\n            var lastLine = lastPara.lastChild;\n            this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n          }\n        } else {\n          var startCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(startCell, startCell);\n          var endCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(endCell, endCell);\n          if (startCellColumnCells.length > 0 && endCellColumnCells.length > 0) {\n            var firstPara = this.getFirstParagraph(startCellColumnCells[0]);\n            var lastPara = this.getLastParagraph(endCellColumnCells[endCellColumnCells.length - 1]);\n            this.start.setPosition(firstPara.firstChild, true);\n            var lastLine = lastPara.lastChild;\n            this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n          }\n        }\n      }\n    }\n    this.selectPosition(this.start, this.end);\n  };\n  /**\n   * Select single row\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectTableRow = function () {\n    var startPos = this.start;\n    var endPos = this.end;\n    if (!this.isForward) {\n      startPos = this.end;\n      endPos = this.start;\n    }\n    if (!isNullOrUndefined(startPos) && !isNullOrUndefined(endPos) && !isNullOrUndefined(this.getTable(startPos, endPos))) {\n      var containerCell = void 0;\n      containerCell = this.getContainerCellOf(startPos.paragraph.associatedCell, endPos.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(endPos.paragraph.associatedCell)) {\n        var startCell = this.getSelectedCell(startPos.paragraph.associatedCell, containerCell);\n        var endCell = this.getSelectedCell(endPos.paragraph.associatedCell, containerCell);\n        if (this.containsCell(containerCell, endPos.paragraph.associatedCell)) {\n          var row = startCell.ownerRow;\n          var firstPara = this.getFirstParagraph(row.childWidgets[0]);\n          var lastPara = this.getLastParagraph(row.childWidgets[row.childWidgets.length - 1]);\n          this.start.setPosition(firstPara.firstChild, true);\n          this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        } else {\n          var firstPara = this.getFirstParagraph(startCell.ownerRow.childWidgets[0]);\n          var lastPara = void 0;\n          lastPara = this.getLastParagraph(endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1]);\n          this.start.setPosition(firstPara.firstChild, true);\n          this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        }\n      }\n    }\n    this.selectPosition(this.start, this.end);\n  };\n  /**\n   * Select single cell\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectTableCell = function () {\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    if (isNullOrUndefined(this.getTable(start, end))) {\n      return;\n    }\n    if (this.isEmpty) {\n      if (start.paragraph.isInsideTable && !isNullOrUndefined(start.paragraph.associatedCell)) {\n        var firstPara = this.getFirstParagraph(start.paragraph.associatedCell);\n        var lastPara = this.getLastParagraph(end.paragraph.associatedCell);\n        if (firstPara === lastPara) {\n          this.start.setPosition(lastPara.firstChild, true);\n          this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        } else {\n          this.start.setPosition(firstPara.firstChild, true);\n          this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        }\n      }\n    } else {\n      var containerCell = this.getContainerCell(start.paragraph.associatedCell);\n      if (this.containsCell(containerCell, start.paragraph.associatedCell) && this.containsCell(containerCell, end.paragraph.associatedCell)) {\n        var firstPara = this.getFirstParagraph(containerCell);\n        var lastPara = this.getLastParagraph(containerCell);\n        if (!isNullOrUndefined(firstPara) && !isNullOrUndefined(lastPara)) {\n          this.start.setPosition(firstPara.firstChild, true);\n          this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        }\n      }\n    }\n    this.selectPosition(this.start, this.end);\n  };\n  /**\n   * Selects the entire document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.selectAll = function () {\n    var documentStart;\n    var documentEnd;\n    this.documentHelper.skipScrollToPosition = true;\n    var container = this.getContainerWidget(this.start.paragraph);\n    if (this.owner.enableHeaderAndFooter) {\n      var headerFooter = this.getContainerWidget(this.start.paragraph);\n      documentStart = this.setPositionForBlock(headerFooter.firstChild, true);\n      documentEnd = this.setPositionForBlock(headerFooter.lastChild, false);\n    } else if (this.isInShape) {\n      var textFrame = this.getCurrentTextFrame();\n      documentStart = this.setPositionForBlock(textFrame.firstChild, true);\n      documentEnd = this.setPositionForBlock(textFrame.lastChild, false);\n    } else if (container instanceof FootNoteWidget && container.footNoteType === 'Footnote') {\n      var i = void 0;\n      var j = void 0;\n      var pageLength = this.documentHelper.pages.length;\n      for (i = 0; i <= pageLength - 1; i++) {\n        if (isNullOrUndefined(this.documentHelper.pages[i].footnoteWidget)) {\n          continue;\n        } else {\n          documentStart = this.setPositionForBlock(this.documentHelper.pages[i].footnoteWidget.bodyWidgets[0].firstChild, true);\n          break;\n        }\n      }\n      for (j = pageLength - 1; j >= 0; j--) {\n        if (isNullOrUndefined(this.documentHelper.pages[j].footnoteWidget)) {\n          continue;\n        } else {\n          var child = this.documentHelper.pages[j].footnoteWidget.bodyWidgets.length;\n          var lastChild = this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets.length;\n          documentEnd = this.setPositionForBlock(this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets[lastChild - 1], false);\n          break;\n        }\n      }\n    } else if (container instanceof FootNoteWidget && container.footNoteType === 'Endnote') {\n      var endNotes = this.getContainerWidget(this.start.paragraph);\n      documentStart = this.setPositionForBlock(endNotes.bodyWidgets[0].firstChild, true);\n      documentEnd = this.setPositionForBlock(endNotes.bodyWidgets[endNotes.bodyWidgets.length - 1].firstChild, false);\n    } else {\n      documentStart = this.owner.documentStart;\n      documentEnd = this.owner.documentEnd;\n    }\n    //Selects the entire document.\n    if (!isNullOrUndefined(documentStart)) {\n      this.start.setPositionInternal(documentStart);\n      this.end.setPositionParagraph(documentEnd.currentWidget, documentEnd.offset + 1);\n      this.upDownSelectionLength = this.end.location.x;\n      this.fireSelectionChanged(true);\n    }\n  };\n  /**\n   * Extends the selection backward.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendBackward = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n    if (isForward) {\n      this.end.moveForward();\n    } else {\n      this.end.moveBackward();\n    }\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection forward.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendForward = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n    if (isForward) {\n      this.end.moveBackward();\n    } else {\n      this.end.moveForward();\n    }\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extend selection to word start and end\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.extendToWordStartEnd = function () {\n    if ((this.start.paragraph.isInsideTable || this.end.paragraph.isInsideTable) && (this.start.paragraph.associatedCell !== this.end.paragraph.associatedCell || this.isCellSelected(this.start.paragraph.associatedCell, this.start, this.end))) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Extends the selection to word start.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToWordStart = function () {\n    this.extendToWordStartInternal(false);\n  };\n  /**\n   * Extends the selection to word end.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToWordEnd = function () {\n    this.extendToWordEndInternal(false);\n  };\n  /**\n   * Extends selection to word start\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.extendToWordStartInternal = function (isNavigation) {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    var isCellSelected = this.extendToWordStartEnd();\n    if (isCellSelected) {\n      this.end.moveToPreviousParagraphInTable(this);\n    } else {\n      if (isNavigation && this.end.isCurrentParaBidi) {\n        this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n      } else {\n        this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n      }\n    }\n    if (isNavigation) {\n      this.start.setPositionInternal(this.end);\n    }\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to word end.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToWordEndInternal = function (isNavigation) {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    var isCellSelect = this.extendToWordStartEnd();\n    if (isCellSelect) {\n      this.end.moveToNextParagraphInTable();\n    } else {\n      if (isNavigation && this.end.isCurrentParaBidi) {\n        this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n      } else {\n        this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n      }\n    }\n    if (isNavigation) {\n      this.start.setPositionInternal(this.end);\n    }\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Extends the selection to next line.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.extendToNextLine = function () {\n    if (isNullOrUndefined(this.start)) {\n      return;\n    }\n    this.end.moveToNextLine(this.upDownSelectionLength);\n    this.fireSelectionChanged(true);\n  };\n  //Selection Text get API\n  //Selection add, Highlight, remove API enda\n  Selection.prototype.getTextPosition = function (hierarchicalIndex) {\n    var textPosition = new TextPosition(this.owner);\n    textPosition.setPositionForCurrentIndex(hierarchicalIndex);\n    return textPosition;\n  };\n  /**\n   * Get Selected text\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.getText = function (includeObject) {\n    if (isNullOrUndefined(this.start) || isNullOrUndefined(this.end) || isNullOrUndefined(this.start.paragraph) || isNullOrUndefined(this.end.paragraph)) {\n      return undefined;\n    }\n    var startPosition = this.start;\n    var endPosition = this.end;\n    if (startPosition.isAtSamePosition(endPosition)) {\n      return '';\n    }\n    return this.getTextInternal(startPosition, endPosition, includeObject);\n  };\n  /**\n   * Get selected text\n   *\n   * @private\n   * @returns {string}\n   */\n  Selection.prototype.getTextInternal = function (start, end, includeObject) {\n    if (start.isExistAfter(end)) {\n      var temp = end;\n      end = start;\n      start = temp;\n    }\n    var startPosition = start;\n    var endPosition = end;\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(start.paragraph) && !isNullOrUndefined(end.paragraph)) {\n      var startIndex = 0;\n      var endIndex = 0;\n      var startOffset = start.offset;\n      var endOffset = end.offset;\n      var startInlineObj = start.currentWidget.getInline(startOffset, startIndex);\n      startIndex = startInlineObj.index;\n      var inline = startInlineObj.element;\n      // If the start position is at the beginning of field begin that has field end, then field code should be skipped.\n      if (inline instanceof FieldElementBox && !isNullOrUndefined(inline.fieldEnd)) {\n        var elementInfo = this.getRenderedInline(inline, startIndex);\n        inline = elementInfo.element;\n        startIndex = elementInfo.index;\n      }\n      var endInlineObj = end.currentWidget.getInline(endOffset, endIndex);\n      var endInline = endInlineObj.element;\n      endIndex = endInlineObj.index;\n      var text = '';\n      // Retrieves the text from start inline.\n      if (inline instanceof ImageElementBox && includeObject && startIndex === 0) {\n        text = ElementBox.objectCharacter;\n      } else if (inline instanceof TextElementBox) {\n        text = isNullOrUndefined(inline.text) || inline.text === '' || inline.text.length < startIndex ? text : inline.text.substring(startIndex);\n      }\n      if (startPosition.paragraph === endPosition.paragraph) {\n        if (inline instanceof ElementBox) {\n          if (inline === endInline && inline instanceof TextElementBox) {\n            text = text.length < endIndex - startIndex ? text : text.substring(0, endIndex - startIndex);\n          } else if (inline.nextNode instanceof ElementBox) {\n            text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n          }\n        }\n      } else {\n        if (inline instanceof ElementBox && inline.nextNode instanceof ElementBox) {\n          text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n        } else {\n          var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(startPosition.paragraph);\n          text = text + '\\r';\n          while (!isNullOrUndefined(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n            text = text + '\\r';\n            if (nextParagraphWidget === endPosition.paragraph) {\n              return text;\n            }\n            nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n          }\n          if (!isNullOrUndefined(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n            text = text + this.getTextInline(nextParagraphWidget.childWidgets[0].children[0], endPosition.paragraph, endInline, endIndex, includeObject);\n          }\n        }\n      }\n      // If the selection includes end paragraph mark.\n      if (endOffset === endPosition.currentWidget.getEndOffset() + 1) {\n        text = text + '\\r';\n      }\n      return text;\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @param block\n   * @param offset\n   * @returns {string}\n   */\n  Selection.prototype.getHierarchicalIndex = function (block, offset) {\n    var index;\n    if (block) {\n      if (block instanceof HeaderFooterWidget) {\n        var hfString = block.headerFooterType.indexOf('Header') !== -1 ? 'H' : 'F';\n        var pageIndex = block.page.index.toString();\n        // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n        var sectionIndex = block.page.sectionIndex;\n        index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n      } else {\n        if (block instanceof BodyWidget && !isNullOrUndefined(block.containerWidget) && block.containerWidget instanceof FootNoteWidget) {\n          var ind = block.containerWidget.bodyWidgets.indexOf(block);\n          index = ind + ';' + offset;\n        } else {\n          // if (block instanceof BodyWidget && block.sectionFormat.columns.length > 1) {\n          //         index = block.indexInOwner + ';' + offset;\n          // }\n          // else {\n          index = block.index + ';' + offset;\n          // }\n        }\n      }\n      if (block instanceof TextFrame) {\n        var indexInOwner = block.containerShape.line.getOffset(block.containerShape, 1);\n        index = 'S' + ';' + indexInOwner + ';' + offset;\n        return this.getHierarchicalIndex(block.containerShape.paragraph, index);\n      }\n      if (block instanceof FootNoteWidget) {\n        // index = block.index + ';' + index;\n        //block = block.containerWidget;\n        var hfString = block.footNoteType === 'Footnote' ? 'FN' : 'EN';\n        var pageIndex = block.page.index.toString();\n        // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n        var sectionIndex = block.page.sectionIndex;\n        index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n      }\n      if (block.containerWidget) {\n        if (block instanceof TableCellWidget && block.rowIndex !== block.containerWidget.index) {\n          index = block.rowIndex + ';' + index;\n          block = block.containerWidget;\n        }\n        return this.getHierarchicalIndex(block.containerWidget, index);\n      }\n    }\n    return index;\n  };\n  /**\n   * @private\n   * @returns {string}\n   */\n  Selection.prototype.getHierarchicalIndexByPosition = function (position) {\n    var info = this.getParagraphInfo(position);\n    return this.getHierarchicalIndex(info.paragraph, info.offset.toString());\n  };\n  /**\n   * @private\n   * @returns {TextPosition}\n   */\n  Selection.prototype.getTextPosBasedOnLogicalIndex = function (hierarchicalIndex) {\n    var textPosition = new TextPosition(this.owner);\n    var blockInfo = this.getParagraph({\n      index: hierarchicalIndex\n    });\n    var lineInfo = this.getLineInfoBasedOnParagraph(blockInfo.paragraph, blockInfo.offset);\n    textPosition.setPositionForLineWidget(lineInfo.line, lineInfo.offset);\n    return textPosition;\n  };\n  /**\n   * Get offset value to update in selection\n   *\n   * @private\n   * @returns {LineInfo}\n   */\n  Selection.prototype.getLineInfoBasedOnParagraph = function (paragraph, offset) {\n    var position = undefined;\n    var element = undefined;\n    var length = this.getParagraphLength(paragraph);\n    var next = paragraph.nextSplitWidget;\n    if (offset > length + 1 && isNullOrUndefined(next)) {\n      offset = length;\n    }\n    while (offset > length && next instanceof ParagraphWidget) {\n      offset -= length;\n      paragraph = next;\n      length = this.getParagraphLength(paragraph);\n      next = paragraph.nextSplitWidget;\n    }\n    return this.getLineInfo(paragraph, offset);\n  };\n  /**\n   * @private\n   * @returns {ParagraphInfo}\n   */\n  Selection.prototype.getParagraph = function (position) {\n    var paragraph = this.getParagraphInternal(this.getBodyWidget(position), position);\n    return {\n      paragraph: paragraph,\n      offset: parseInt(position.index, 10)\n    };\n  };\n  /**\n   * Gets body widget based on position.\n   *\n   * @private\n   * @returns {BlockContainer}\n   */\n  Selection.prototype.getBodyWidget = function (position) {\n    var index = position.index.indexOf(';');\n    var value = position.index.substring(0, index);\n    position.index = position.index.substring(index).replace(';', '');\n    var sectionIndex = parseInt(value, 10);\n    index = parseInt(value, 10);\n    index = position.index.indexOf(';');\n    value = position.index.substring(0, index);\n    // position = position.substring(index).replace(';', '');\n    if (value === 'H' || value === 'F') {\n      return this.getHeaderFooterWidget(position);\n    } else if (value === 'FN' || value === 'EN') {\n      return this.getFootNoteWidget(position);\n    }\n    index = parseInt(value, 10);\n    return this.getBodyWidgetInternal(sectionIndex, index);\n  };\n  Selection.prototype.getFootNoteWidget = function (position) {\n    var index1 = position.index.indexOf(';');\n    var value1 = position.index.substring(0, index1);\n    position.index = position.index.substring(index1).replace(';', '');\n    var footNote = value1 === 'FN';\n    index1 = position.index.indexOf(';');\n    value1 = position.index.substring(0, index1);\n    position.index = position.index.substring(index1).replace(';', '');\n    index1 = parseInt(value1, 10);\n    var page = this.documentHelper.pages[index1];\n    index1 = position.index.indexOf(';');\n    value1 = position.index.substring(0, index1);\n    position.index = position.index.substring(index1).replace(';', '');\n    index1 = parseInt(value1, 10);\n    if (footNote) {\n      return page.footnoteWidget.bodyWidgets[index1];\n    } else {\n      return page.endnoteWidget.bodyWidgets[index1];\n    }\n  };\n  Selection.prototype.getHeaderFooterWidget = function (position) {\n    //HEADER OR FOOTER WIDGET\n    var index = position.index.indexOf(';');\n    var value = position.index.substring(0, index);\n    position.index = position.index.substring(index).replace(';', '');\n    var isHeader = value === 'H';\n    index = position.index.indexOf(';');\n    value = position.index.substring(0, index);\n    position.index = position.index.substring(index).replace(';', '');\n    index = parseInt(value, 10);\n    var page = this.documentHelper.pages[index];\n    var headerFooterWidget;\n    if (isHeader) {\n      headerFooterWidget = page.headerWidget;\n    } else {\n      headerFooterWidget = page.footerWidget;\n    }\n    if (!isNullOrUndefined(headerFooterWidget)) {\n      headerFooterWidget.page = page;\n    }\n    return headerFooterWidget;\n  };\n  /**\n   * @private\n   * @returns {BodyWidget}\n   */\n  Selection.prototype.getBodyWidgetInternal = function (sectionIndex, blockIndex) {\n    for (var i = 0; i < this.documentHelper.pages.length; i++) {\n      for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n        var bodyWidget = this.documentHelper.pages[i].bodyWidgets[j];\n        if (bodyWidget.index === sectionIndex) {\n          if (bodyWidget.childWidgets.length > 0 && bodyWidget.firstChild.index <= blockIndex && bodyWidget.lastChild.index >= blockIndex) {\n            return bodyWidget;\n          }\n        }\n        if (bodyWidget.index > sectionIndex) {\n          break;\n        }\n      }\n    }\n    return undefined;\n  };\n  Selection.prototype.getParagraphInternal = function (container, position) {\n    if (isNullOrUndefined(position.index)) {\n      return undefined;\n    }\n    // let ins: Widget = container;\n    var index = position.index.indexOf(';');\n    var value = '0';\n    if (index >= 0) {\n      value = position.index.substring(0, index);\n      position.index = position.index.substring(index).replace(';', '');\n    }\n    // if (container instanceof BodyWidget && value === 'HF') {\n    //     return this.getParagraph(container.headerFooters, position);\n    // }\n    index = parseInt(value, 10);\n    if (container instanceof TableRowWidget && index >= container.childWidgets.length) {\n      position.index = '0;0';\n      index = container.childWidgets.length - 1;\n    }\n    var childWidget = this.getBlockByIndex(container, index);\n    if (childWidget) {\n      value = position.index.substring(0, 1);\n      if (value === 'S') {\n        position.index = position.index.substring(1).replace(';', '');\n        var indexInOwner = position.index.substring(0, position.index.indexOf(';'));\n        position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n        var paraIndex = position.index.substring(0, position.index.indexOf(';'));\n        position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n        var shape = childWidget.getInline(parseInt(indexInOwner), 0).element;\n        childWidget = shape.textFrame.childWidgets[paraIndex];\n      }\n      var child = childWidget;\n      if (child instanceof ParagraphWidget) {\n        if (position.index.indexOf(';') > 0) {\n          position.index = '0';\n        }\n        return child;\n      }\n      if (child instanceof Widget) {\n        if (position.index.indexOf(';') > 0) {\n          return this.getParagraphInternal(child, position);\n        } else {\n          //If table is shifted to previous text position then return the first paragraph within table.\n          if (child instanceof TableWidget) {\n            return this.documentHelper.getFirstParagraphInFirstCell(child);\n          }\n          return undefined;\n        }\n      }\n    } else if (container) {\n      var nextWidget = container.getSplitWidgets().pop().nextRenderedWidget;\n      if (nextWidget instanceof Widget) {\n        position.index = '0';\n        if (nextWidget instanceof TableWidget) {\n          return this.documentHelper.getFirstParagraphInFirstCell(nextWidget);\n        }\n        return nextWidget;\n      }\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @returns {Widget}\n   */\n  Selection.prototype.getBlockByIndex = function (container, blockIndex) {\n    var childWidget;\n    if (container) {\n      for (var j = 0; j < container.childWidgets.length; j++) {\n        if (container.childWidgets[j].index === blockIndex) {\n          childWidget = container.childWidgets[j];\n          break;\n        }\n      }\n      if (!childWidget && !(container instanceof HeaderFooterWidget)) {\n        return this.getBlockByIndex(container.nextSplitWidget, blockIndex);\n      }\n    }\n    return childWidget;\n  };\n  /**\n   * Get logical offset of paragraph.\n   *\n   * @private\n   * @returns {ParagraphInfo}\n   */\n  Selection.prototype.getParagraphInfo = function (position) {\n    return this.getParagraphInfoInternal(position.currentWidget, position.offset);\n  };\n  /**\n   * Get the start or end cell from current selection\n   *\n   * @private\n   * @returns {TableCellWidget}\n   */\n  Selection.prototype.getCellFromSelection = function (type) {\n    var cell;\n    var selectedCells = this.getSelectedCells();\n    if (this.hasMergedCells()) {\n      return undefined;\n    }\n    if (type == 0 && selectedCells.length > 0) {\n      if (!(this.selectedWidgets.keys[0] instanceof TableCellWidget)) {\n        return undefined;\n      }\n      cell = selectedCells[0];\n      var rowIndex = cell.rowIndex;\n      var colIndex = cell.columnIndex;\n      var tableIndex = cell.ownerTable.index;\n      for (var i = 0; i < selectedCells.length; i++) {\n        var widget = selectedCells[i];\n        if (widget.rowIndex < rowIndex) {\n          rowIndex = widget.rowIndex;\n        }\n        if (widget.columnIndex < colIndex) {\n          colIndex = widget.columnIndex;\n        }\n        if (widget.ownerTable.index < tableIndex) {\n          tableIndex = widget.ownerTable.index;\n        }\n      }\n      for (var i = 0; i < selectedCells.length; i++) {\n        var widget = selectedCells[i];\n        if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n          cell = widget;\n        }\n      }\n    } else if (type == 1 && selectedCells.length > 0) {\n      if (!(this.selectedWidgets.keys[this.selectedWidgets.length - 1] instanceof TableCellWidget)) {\n        return undefined;\n      }\n      cell = selectedCells[selectedCells.length - 1];\n      var rowIndex = cell.rowIndex;\n      var colIndex = cell.columnIndex;\n      var tableIndex = cell.ownerTable.index;\n      for (var i = selectedCells.length - 1; i >= 0; i--) {\n        var widget = selectedCells[i];\n        if (widget.rowIndex > rowIndex) {\n          rowIndex = widget.rowIndex;\n        }\n        if (widget.columnIndex > colIndex) {\n          colIndex = widget.columnIndex;\n        }\n        if (widget.ownerTable.index > tableIndex) {\n          tableIndex = widget.ownerTable.index;\n        }\n      }\n      for (var i = 0; i < selectedCells.length; i++) {\n        var widget = selectedCells[i];\n        if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n          cell = widget;\n        }\n      }\n    }\n    return cell instanceof TableCellWidget ? cell : undefined;\n  };\n  /**\n   * Get the start cell or end cell in table with merged cells from current selection.\n   *\n   * @private\n   * @returns {TableCellWidget}\n   */\n  Selection.prototype.getCellFromSelectionInTable = function (type) {\n    var cell;\n    var selectedCells = this.getSelectedCells();\n    var bounds = this.getCellBoundsInfo();\n    var sortedRowIndexArray = [];\n    var sortedColumnIndexArray = [];\n    for (var i = 0; i < selectedCells.length; i++) {\n      var widget = selectedCells[i];\n      sortedRowIndexArray.push(widget.rowIndex);\n      sortedColumnIndexArray.push(widget.columnIndex);\n    }\n    sortedRowIndexArray.sort();\n    sortedColumnIndexArray.sort();\n    var requiredRow;\n    var requiredCol;\n    if (type == 1) {\n      requiredRow = bounds.row.rowLast;\n      requiredCol = bounds.column.colLast;\n      var isRequiredCellExist = false;\n      while (!isRequiredCellExist && isNullOrUndefined(cell)) {\n        for (var i = 0; i < selectedCells.length; i++) {\n          var widget_1 = selectedCells[i];\n          if (widget_1.rowIndex == requiredRow && widget_1.columnIndex == requiredCol) {\n            isRequiredCellExist = true;\n            cell = widget_1;\n            break;\n          }\n        }\n        if (!isRequiredCellExist) {\n          requiredRow -= 1;\n        }\n      }\n    } else if (type == 0) {\n      requiredRow = bounds.row.rowFirst;\n      requiredCol = bounds.column.colFirst;\n      var isRequiredCellExist = false;\n      while (!isRequiredCellExist && isNullOrUndefined(cell)) {\n        for (var i = 0; i < selectedCells.length; i++) {\n          var widget_2 = selectedCells[i];\n          if (widget_2.rowIndex == requiredRow && widget_2.columnIndex == requiredCol) {\n            isRequiredCellExist = true;\n            cell = widget_2;\n            break;\n          }\n        }\n        if (!isRequiredCellExist) {\n          requiredCol += 1;\n        }\n      }\n    }\n    return cell;\n  };\n  /**\n   * Get the actual offset from the current selection.\n   *\n   * @private\n   * @returns {string}\n   */\n  Selection.prototype.getActualOffset = function (cell, type) {\n    var offset;\n    if (type == 0) {\n      var paraElement = this.getFirstParagraph(cell);\n      offset = this.getHierarchicalIndex(paraElement, this.getStartOffset(paraElement).toString());\n    } else if (type == 1) {\n      var paraElement = this.getLastParagraph(cell);\n      var lastLine = paraElement.lastChild;\n      var length_1 = this.getParagraphLength(paraElement, lastLine) + this.getLineLength(lastLine) + 1;\n      offset = this.getHierarchicalIndex(paraElement, length_1.toString());\n    }\n    return offset;\n  };\n  /**\n   * Get the properties for Bookmark.\n   *\n   * @private\n   * @returns {object}\n   */\n  Selection.prototype.getBookmarkProperties = function (bookmark) {\n    var selectedWidgets = this.selectedWidgets.keys;\n    if (bookmark.bookmarkType == 0) {\n      if (!(selectedWidgets[0] instanceof TableCellWidget)) {\n        return undefined;\n      }\n      var bounds = this.getCellBoundsInfo();\n      if (!isNullOrUndefined(bounds)) {\n        return {\n          'columnFirst': bounds.column.colFirst.toString(),\n          'columnLast': bounds.column.colLast.toString()\n        };\n      }\n    }\n    if (bookmark.bookmarkType == 1) {\n      if (selectedWidgets[selectedWidgets.length - 1] instanceof TableCellWidget) {\n        return undefined;\n      }\n      var properties = {};\n      // isAfterParagraphMark\n      if (this.isParagraphMarkSelected()) {\n        properties.isAfterParagraphMark = true;\n      }\n      // isAfterCellMark\n      var bookmarkStart = bookmark.reference;\n      var selectedCells = this.getSelectedCells();\n      if (bookmarkStart && !isNullOrUndefined(bookmarkStart.properties)) {\n        if (selectedCells.length == 1) {\n          if (this.isCellSelected(selectedCells[0], this.start, this.end)) {\n            properties.isAfterCellMark = true;\n            delete properties.isAfterParagraphMark;\n          }\n        }\n      }\n      // isAfterTableMark\n      if (this.isTableSelected()) {\n        properties.isAfterTableMark = true;\n      }\n      // isAfterRowMark\n      if (this.isRowSelected()) {\n        properties.isAfterRowMark = true;\n      }\n      if (!isNullOrUndefined(properties.isAfterParagraphMark) || !isNullOrUndefined(properties.isAfterCellMark)) {\n        return properties;\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Returns true if Paragraph Mark is selected.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isParagraphMarkSelected = function () {\n    var line = this.end.currentWidget;\n    var paraElement;\n    if (line instanceof LineWidget) {\n      paraElement = line.paragraph;\n    }\n    var paraLength = this.getParagraphLength(paraElement);\n    var endIndices = this.endOffset.split(';');\n    var endIndex = parseInt(endIndices[endIndices.length - 1]);\n    if (endIndex > paraLength) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Returns true if Row is selected.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isRowSelected = function () {\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    if (isNullOrUndefined(start.paragraph.associatedCell) || isNullOrUndefined(end.paragraph.associatedCell)) {\n      return false;\n    }\n    var row = end.paragraph.associatedCell.ownerRow.getSplitWidgets();\n    var firstParagraph;\n    var firstcell;\n    if (row[0].childWidgets.length > 0) {\n      firstcell = row[0].childWidgets[0];\n      if (firstcell.childWidgets.length === 0) {\n        return undefined;\n      }\n      firstParagraph = firstcell.childWidgets[0];\n    }\n    var lastParagraph;\n    var lastRow = row[row.length - 1];\n    var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n    while (lastCell.childWidgets.length === 0 && !isNullOrUndefined(lastCell.previousSplitWidget)) {\n      lastCell = lastCell.previousSplitWidget;\n    }\n    lastParagraph = lastCell.childWidgets[lastCell.childWidgets.length - 1];\n    return firstcell.equals(firstParagraph.associatedCell) && end.paragraph.associatedCell.equals(lastParagraph.associatedCell) && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || start.offset === 0 && end.offset === this.getLineLength(lastParagraph.lastChild) + 1);\n  };\n  /**\n   * Get the bounds of row and col index from selected cells\n   *\n   * @private\n   * @returns {object}\n   */\n  Selection.prototype.getCellBoundsInfo = function () {\n    var selectedWidgets = this.getSelectedCells();\n    if (selectedWidgets.length > 0) {\n      var colFirst = selectedWidgets[0].columnIndex;\n      var colLast = selectedWidgets[selectedWidgets.length - 1].columnIndex;\n      var rowFirst = selectedWidgets[0].rowIndex;\n      var rowLast = selectedWidgets[selectedWidgets.length - 1].rowIndex;\n      for (var i = 0; i < selectedWidgets.length; i++) {\n        var widget = selectedWidgets[i];\n        if (widget.columnIndex < colFirst) {\n          colFirst = widget.columnIndex;\n        }\n        if (widget.columnIndex > colLast) {\n          colLast = widget.columnIndex;\n        }\n        if (widget.rowIndex < rowFirst) {\n          rowFirst = widget.rowIndex;\n        }\n        if (widget.rowIndex > rowLast) {\n          rowLast = widget.rowIndex;\n        }\n      }\n      return {\n        'column': {\n          'colFirst': colFirst,\n          'colLast': colLast\n        },\n        'row': {\n          'rowFirst': rowFirst,\n          'rowLast': rowLast\n        }\n      };\n    }\n    return undefined;\n  };\n  /**\n   * Return true if the selection has merged cells, else false.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.hasMergedCells = function () {\n    var selectedCells = this.getSelectedCells();\n    for (var i = 0; i < selectedCells.length; i++) {\n      var widget = selectedCells[i];\n      if (widget.cellFormat.rowSpan > 1 || widget.cellFormat.columnSpan > 1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {ParagraphInfo}\n   */\n  Selection.prototype.getParagraphInfoInternal = function (line, lineOffset) {\n    var paragraph = line.paragraph;\n    var offset = this.getParagraphLength(paragraph, line) + lineOffset;\n    var previous = paragraph.previousSplitWidget;\n    while (previous instanceof ParagraphWidget) {\n      paragraph = previous;\n      offset += this.documentHelper.selection.getParagraphLength(paragraph);\n      previous = paragraph.previousSplitWidget;\n    }\n    return {\n      'paragraph': paragraph,\n      'offset': offset\n    };\n  };\n  /**\n   * @private\n   * @returns {ListTextElementBox}\n   */\n  Selection.prototype.getListTextElementBox = function (paragarph) {\n    if (isNullOrUndefined(paragarph)) {\n      return undefined;\n    }\n    var listTextElement;\n    if (!paragarph.isEmpty()) {\n      var lineWidget = paragarph.childWidgets[0];\n      if (lineWidget.children.length > 1) {\n        if (lineWidget.children[0] instanceof ListTextElementBox) {\n          listTextElement = lineWidget.children[0];\n        }\n      }\n    }\n    return listTextElement;\n  };\n  /**\n   * @private\n   * @returns {WListLevel}\n   */\n  Selection.prototype.getListLevel = function (paragraph) {\n    var currentList = undefined;\n    var listLevelNumber = 0;\n    if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n      currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n      listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n    }\n    if (!isNullOrUndefined(currentList) && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId))\n    // && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels.getItem(listLevelNumber))) {\n    && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels)) {\n      return this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n    }\n    return undefined;\n  };\n  Selection.prototype.getTextInline = function (inlineElement, endParagraphWidget, endInline, endIndex, includeObject) {\n    var text = '';\n    do {\n      if (inlineElement === endInline) {\n        if (inlineElement instanceof TextElementBox) {\n          var span = inlineElement;\n          if (!(isNullOrUndefined(span.text) || span.text === '')) {\n            if (span.text.length < endIndex) {\n              text = text + span.text;\n            } else {\n              text = text + span.text.substring(0, endIndex);\n            }\n          }\n        } else if (inlineElement instanceof ImageElementBox && includeObject && endIndex === inlineElement.length) {\n          text = text + ElementBox.objectCharacter;\n        }\n        return text;\n      }\n      if (inlineElement instanceof TextElementBox) {\n        text = text + inlineElement.text;\n      } else if (inlineElement instanceof ImageElementBox && includeObject) {\n        text = text + ElementBox.objectCharacter;\n      } else if (inlineElement instanceof FieldElementBox && !isNullOrUndefined(inlineElement.fieldEnd)) {\n        if (!isNullOrUndefined(inlineElement.fieldSeparator)) {\n          inlineElement = inlineElement.fieldSeparator;\n        } else {\n          inlineElement = inlineElement.fieldEnd;\n        }\n      }\n      if (isNullOrUndefined(inlineElement.nextNode)) {\n        break;\n      }\n      inlineElement = inlineElement.nextNode;\n    } while (!isNullOrUndefined(inlineElement));\n    if (endParagraphWidget === inlineElement.line.paragraph) {\n      return text;\n    }\n    var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(inlineElement.line.paragraph);\n    while (!isNullOrUndefined(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n      text = text + '\\r';\n      if (nextParagraphWidget === endParagraphWidget) {\n        return text;\n      }\n      nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n    }\n    if (!isNullOrUndefined(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n      var lineWidget = nextParagraphWidget.childWidgets[0];\n      if (isNullOrUndefined(nextParagraphWidget.previousSplitWidget)) {\n        text = text + '\\r';\n      }\n      text = text + this.getTextInline(lineWidget.children[0], endParagraphWidget, endInline, endIndex, includeObject);\n    }\n    return text;\n  };\n  /**\n   * Returns field code.\n   *\n   * @private\n   * @param fieldBegin\n   * @returns {string}\n   */\n  Selection.prototype.getFieldCode = function (fieldBegin, isSkipTrim) {\n    var fieldCode = '';\n    if (!isNullOrUndefined(fieldBegin) && !(fieldBegin.fieldEnd instanceof FieldElementBox)) {\n      return fieldCode;\n    }\n    var paragraph = fieldBegin.paragraph;\n    var endParagraph = fieldBegin.fieldEnd.paragraph;\n    if (fieldBegin.fieldSeparator instanceof FieldElementBox) {\n      endParagraph = fieldBegin.fieldSeparator.paragraph;\n    }\n    var startLineIndex = fieldBegin.line.indexInOwner;\n    var startIndex = fieldBegin.indexInOwner;\n    do {\n      fieldCode += this.getFieldCodeInternal(paragraph, startLineIndex, startIndex);\n      if (paragraph === endParagraph) {\n        break;\n      }\n      paragraph = this.getNextParagraphBlock(paragraph);\n      startLineIndex = 0;\n      startIndex = 0;\n    } while (paragraph instanceof ParagraphWidget);\n    return isSkipTrim ? fieldCode : fieldCode.trim();\n  };\n  Selection.prototype.getFieldCodeInternal = function (paragraph, startLineIndex, inlineIndex) {\n    var fieldCode = '';\n    for (var i = startLineIndex; i < paragraph.childWidgets.length; i++) {\n      var line = paragraph.childWidgets[i];\n      for (var i_1 = inlineIndex; i_1 < line.children.length; i_1++) {\n        var element = line.children[i_1];\n        if (element instanceof TextElementBox) {\n          fieldCode += element.text;\n        }\n        if (element instanceof FieldElementBox && (element.fieldType === 2 || element.fieldType === 1)) {\n          return fieldCode;\n        }\n      }\n      inlineIndex = 0;\n    }\n    return fieldCode;\n  };\n  /**\n   * @private\n   * @returns {FieldElementBox}\n   */\n  Selection.prototype.getTocFieldInternal = function () {\n    var paragraph = this.start.paragraph;\n    if (!this.isEmpty && !this.isForward) {\n      paragraph = this.end.paragraph;\n    }\n    while (paragraph instanceof ParagraphWidget && paragraph.childWidgets.length > 0) {\n      var line = paragraph.firstChild;\n      if (line.children.length > 0) {\n        var element = line.children[0];\n        var nextElement = element.nextNode;\n        if (element instanceof FieldElementBox && element.fieldType === 0 && nextElement instanceof TextElementBox && nextElement.text.trim().toLowerCase().indexOf('toc') === 0) {\n          return element;\n        }\n      }\n      paragraph = paragraph.previousRenderedWidget;\n    }\n    return undefined;\n  };\n  /**\n   * Get next paragraph in bodyWidget\n   *\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getNextParagraph = function (section) {\n    if (section.nextRenderedWidget instanceof BodyWidget) {\n      var block = section.nextRenderedWidget.childWidgets[0];\n      return this.documentHelper.getFirstParagraphBlock(block);\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getPreviousParagraph = function (section) {\n    if (section.previousRenderedWidget instanceof BodyWidget) {\n      var bodyWidget = section.previousRenderedWidget;\n      var block = bodyWidget.childWidgets[bodyWidget.childWidgets.length - 1];\n      return this.documentHelper.getLastParagraphBlock(block);\n    }\n    return undefined;\n  };\n  /**\n   * Get Next start inline\n   *\n   * @private\n   * @returns {ElementBox}\n   */\n  Selection.prototype.getNextStartInline = function (line, offset) {\n    var indexInInline = 0;\n    var inlineObj = line.getInline(offset, indexInInline);\n    var inline = inlineObj.element;\n    indexInInline = inlineObj.index;\n    if (!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox || inline instanceof ShapeElementBox) {\n      var nextValidInline = this.getNextValidElement(inline.nextNode);\n      if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n        inline = nextValidInline;\n      }\n    }\n    return inline;\n  };\n  /**\n   * Get previous text inline\n   *\n   * @private\n   * @returns {ElementBox}\n   */\n  Selection.prototype.getPreviousTextInline = function (inline) {\n    if (inline.previousNode instanceof TextElementBox) {\n      return inline.previousNode;\n    }\n    if (inline.previousNode instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline.previousNode)) {\n      if (inline.previousNode.fieldType === 0 || inline.previousNode.fieldType === 1) {\n        return inline.previousNode;\n      }\n      return inline.previousNode.fieldBegin;\n    }\n    if (!isNullOrUndefined(inline.previousNode)) {\n      return this.getPreviousTextInline(inline.previousNode);\n    }\n    return undefined;\n  };\n  /**\n   * Get next text inline\n   *\n   * @private\n   * @returns {ElementBox}\n   */\n  Selection.prototype.getNextTextInline = function (inline) {\n    if (inline.nextNode instanceof TextElementBox) {\n      return inline.nextNode;\n    }\n    if (inline.nextNode instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline.nextNode)) {\n      if (inline.nextNode.fieldType === 1 || inline.nextNode.fieldType === 0) {\n        return inline.nextNode;\n      }\n      return inline.nextNode.fieldEnd;\n    }\n    if (!isNullOrUndefined(inline.nextNode)) {\n      return this.getNextTextInline(inline.nextNode);\n    }\n    return undefined;\n  };\n  /**\n   * Get container table\n   *\n   * @private\n   * @returns {TableWidget}\n   */\n  Selection.prototype.getContainerTable = function (block) {\n    if (block.isInsideTable) {\n      if (block.associatedCell.ownerTable.isInsideTable) {\n        block = this.getContainerTable(block.associatedCell.ownerTable);\n      } else {\n        block = block.associatedCell.ownerTable;\n      }\n    }\n    if (block instanceof TableWidget) {\n      return block;\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @param element\n   * @returns\n   */\n  Selection.prototype.isElementInSelection = function (element, isStart) {\n    var offset = element.line.getOffset(element, isStart ? 0 : 1);\n    var elemPosition = new TextPosition(this.owner);\n    elemPosition.setPositionParagraph(element.line, offset);\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    return (elemPosition.isExistAfter(start) || elemPosition.isAtSamePosition(start)) && (elemPosition.isExistBefore(end) || elemPosition.isAtSamePosition(end));\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isSelectionInsideElement = function (element) {\n    //Handled for spellcheck\n    if (this.isEmpty) {\n      var startOffset = element.line.getOffset(element, 0);\n      var startPosition = new TextPosition(this.owner);\n      startPosition.setPositionParagraph(element.line, startOffset);\n      var endOffset = element.line.getOffset(element, element.length);\n      var endPosition = new TextPosition(this.owner);\n      endPosition.setPositionParagraph(element.line, endOffset);\n      return (this.start.isExistAfter(startPosition) || this.start.isAtSamePosition(startPosition)) && (this.start.isExistBefore(endPosition) || this.start.isAtSamePosition(endPosition));\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isExistBefore = function (start, block) {\n    if (start.isInsideTable) {\n      var cell1 = start.associatedCell;\n      if (block.isInsideTable) {\n        var cell2 = block.associatedCell;\n        if (cell1 === cell2) {\n          return cell1.childWidgets.indexOf(start) < cell1.childWidgets.indexOf(block);\n        }\n        if (cell1.ownerRow === cell2.ownerRow) {\n          return cell1.cellIndex < cell2.cellIndex;\n        }\n        if (cell1.ownerTable === cell2.ownerTable) {\n          return cell1.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n        }\n        //Checks if current block exists before the block.\n        var containerCell = this.getContainerCellOf(cell1, cell2);\n        if (containerCell.ownerTable.contains(cell2)) {\n          cell1 = this.getSelectedCell(cell1, containerCell);\n          cell2 = this.getSelectedCell(cell2, containerCell);\n          if (cell1 === containerCell) {\n            return this.isExistBefore(start, cell2.ownerTable);\n          }\n          if (cell2 === containerCell) {\n            return this.isExistBefore(cell1.ownerTable, block);\n          }\n          if (containerCell.ownerRow === cell2.ownerRow) {\n            return containerCell.cellIndex < cell2.cellIndex;\n          }\n          if (containerCell.ownerTable === cell2.ownerTable) {\n            return containerCell.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n          }\n          return this.isExistBefore(cell1.ownerTable, cell2.ownerTable);\n        }\n        return this.isExistBefore(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n      } else {\n        var ownerTable = this.getContainerTable(start);\n        return this.isExistBefore(ownerTable, block);\n      }\n    } else if (block.isInsideTable) {\n      var ownerTable = this.getContainerTable(block);\n      return this.isExistBefore(start, ownerTable);\n    } else {\n      {\n        if (start.containerWidget === block.containerWidget) {\n          return start.index < block.index;\n        }\n        if (start.containerWidget instanceof BodyWidget && block.containerWidget instanceof BodyWidget) {\n          //Splitted blocks\n          var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n          var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n          if (startPage === endPage) {\n            return start.containerWidget.indexInOwner < block.containerWidget.indexInOwner;\n          }\n          if (startPage === endPage && start.containerWidget.containerWidget instanceof FootNoteWidget && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n            var startindex = this.documentHelper.pages[startPage].footnoteWidget.bodyWidgets.indexOf(start.containerWidget);\n            var endindex = this.documentHelper.pages[endPage].footnoteWidget.bodyWidgets.indexOf(block.containerWidget);\n            return startindex < endindex;\n          } else if (startPage === endPage && start.containerWidget.index !== block.containerWidget.index) {\n            var startindex = this.documentHelper.pages[startPage].bodyWidgets.indexOf(start.containerWidget);\n            var endindex = this.documentHelper.pages[endPage].bodyWidgets.indexOf(block.containerWidget);\n            return startindex < endindex;\n          } else {\n            return startPage < endPage;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isExistAfter = function (start, block) {\n    if (start.isInsideTable) {\n      var cell1 = start.associatedCell;\n      //Current paragraph in cell, paragraph in cell\n      if (block.isInsideTable) {\n        var cell2 = block.associatedCell;\n        if (cell1 === cell2) {\n          return cell1.childWidgets.indexOf(start) > cell1.childWidgets.indexOf(block);\n        }\n        if (cell1.ownerRow === cell2.ownerRow) {\n          return cell1.cellIndex > cell2.cellIndex;\n        }\n        if (cell1.ownerTable === cell2.ownerTable) {\n          return cell1.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n        }\n        //Checks if this block exists before block.\n        var containerCell = this.getContainerCellOf(cell1, cell2);\n        if (containerCell.ownerTable.contains(cell2)) {\n          cell1 = this.getSelectedCell(cell1, containerCell);\n          cell2 = this.getSelectedCell(cell2, containerCell);\n          if (cell1 === containerCell) {\n            return this.isExistAfter(start, cell2.ownerTable);\n          }\n          if (cell2 === containerCell) {\n            return this.isExistAfter(cell1.ownerTable, block);\n          }\n          if (containerCell.ownerRow === cell2.ownerRow) {\n            return containerCell.cellIndex > cell2.cellIndex;\n          }\n          if (containerCell.ownerTable === cell2.ownerTable) {\n            return containerCell.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n          }\n          return this.isExistAfter(cell1.ownerTable, cell2.ownerTable);\n        }\n        return this.isExistAfter(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n      } else {\n        var ownerTable = this.getContainerTable(start);\n        return this.isExistAfter(ownerTable, block);\n      }\n    } else if (block.isInsideTable) {\n      var ownerTable = this.getContainerTable(block);\n      return this.isExistAfter(start, ownerTable);\n    } else {\n      if (start.containerWidget === block.containerWidget) {\n        return start.index > block.index;\n      }\n      if (start.containerWidget instanceof BodyWidget && block.containerWidget instanceof BodyWidget || start.containerWidget instanceof FootNoteWidget && block.containerWidget instanceof FootNoteWidget) {\n        //Splitted blocks\n        var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n        var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n        return startPage > endPage;\n      }\n      //     if (start.owner instanceof WHeaderFooter) {\n      //         return (start.owner as WHeaderFooter).childWidgets.indexOf(start)\n      // > (block.owner as WHeaderFooter).childWidgets.indexOf(block);\n      //     } else if (start.section === block.section && start.section instanceof WSection) {\n      //         return (start.section as WSection).childWidgets.indexOf(start)\n      //  > (start.section as WSection).childWidgets.indexOf(block);\n      //     } else if (start.wordDocument instanceof WordDocument) {\n      //         return (start.wordDocument as WordDocument).sections.indexOf(start.section as WSection) > (start.wordDocument as WordDocument).sections.indexOf(block.section as WSection);\n    }\n    return false;\n  };\n  /**\n   * Return true if current inline in exist before inline\n   *\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isExistBeforeInline = function (currentInline, inline) {\n    if (currentInline.line === inline.line) {\n      return currentInline.line.children.indexOf(currentInline) <= inline.line.children.indexOf(inline);\n    }\n    if (currentInline.line.paragraph === inline.line.paragraph) {\n      return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line) < inline.line.paragraph.childWidgets.indexOf(inline.line);\n    }\n    var startParagraph = currentInline.line.paragraph;\n    var endParagraph = inline.line.paragraph;\n    if (startParagraph.containerWidget === endParagraph.containerWidget) {\n      if (startParagraph.isInsideTable) {\n        return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) < endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n      } else if (startParagraph.containerWidget instanceof HeaderFooterWidget) {\n        // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n        //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n      } else {\n        return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) < endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n      }\n    }\n    return this.isExistBefore(startParagraph, endParagraph);\n  };\n  /**\n   * Return true id current inline is exist after inline\n   *\n   * @private\n   * @returns {boolean}\n   */\n  Selection.prototype.isExistAfterInline = function (currentInline, inline, isRetrieve) {\n    if (currentInline.line === inline.line) {\n      var selection = this.documentHelper.selection;\n      if (isRetrieve) {\n        return currentInline.line.children.indexOf(currentInline) >= inline.line.children.indexOf(inline);\n      } else if (currentInline === inline && selection.start.offset !== selection.end.offset) {\n        return currentInline.line.children.indexOf(currentInline) === inline.line.children.indexOf(inline);\n      } else {\n        return currentInline.line.children.indexOf(currentInline) > inline.line.children.indexOf(inline);\n      }\n    }\n    if (currentInline.line.paragraph === inline.line.paragraph) {\n      return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line) > inline.line.paragraph.childWidgets.indexOf(inline.line);\n    }\n    var startParagraph = currentInline.line.paragraph;\n    var endParagraph = inline.line.paragraph;\n    if (startParagraph.containerWidget === endParagraph.containerWidget) {\n      if (startParagraph.isInsideTable) {\n        return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) > endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n      } else if (startParagraph.containerWidget instanceof HeaderFooterWidget) {\n        // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n        //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n      } else {\n        return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) > endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n      }\n    }\n    return this.isExistAfter(startParagraph, endParagraph);\n  };\n  /**\n   * Get next rendered block\n   *\n   * @private\n   * @returns {BlockWidget}\n   */\n  Selection.prototype.getNextRenderedBlock = function (block) {\n    if (isNullOrUndefined(block.nextWidget)) {\n      return block.nextRenderedWidget;\n    }\n    return block.nextWidget;\n  };\n  /**\n   * Get next rendered block\n   *\n   * @private\n   * @returns {BlockWidget}\n   */\n  Selection.prototype.getPreviousRenderedBlock = function (block) {\n    if (isNullOrUndefined(block.previousWidget)) {\n      return block.previousRenderedWidget;\n    }\n    return block.previousWidget;\n  };\n  /**\n   * Get Next paragraph in block\n   *\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getNextParagraphBlock = function (block) {\n    if (block.nextRenderedWidget instanceof ParagraphWidget) {\n      return block.nextRenderedWidget;\n    } else if (block.nextRenderedWidget instanceof TableWidget) {\n      return this.documentHelper.getFirstParagraphInFirstCell(block.nextRenderedWidget);\n    }\n    if (block.containerWidget instanceof TableCellWidget) {\n      return this.getNextParagraphCell(block.containerWidget);\n    } else if (block.containerWidget instanceof BodyWidget) {\n      var bodyWidget = block.containerWidget;\n      return this.getNextParagraph(block.containerWidget);\n    } else if (block.containerWidget instanceof HeaderFooterWidget && this.isMoveDownOrMoveUp) {\n      return this.getFirstBlockInNextHeaderFooter(block);\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getFirstBlockInNextHeaderFooter = function (block) {\n    var headerFooter = block.containerWidget;\n    var nextBlock;\n    if (headerFooter.headerFooterType.indexOf('Header') !== -1) {\n      nextBlock = headerFooter.page.footerWidget.firstChild;\n    } else if (headerFooter.page.nextPage) {\n      var nextPage = headerFooter.page.nextPage;\n      var headerWidget = nextPage.headerWidget;\n      headerWidget.page = nextPage;\n      if (nextPage.footerWidget) {\n        nextPage.footerWidget.page = nextPage;\n      }\n      nextBlock = headerWidget.firstChild;\n    } else {\n      return undefined;\n    }\n    if (nextBlock instanceof ParagraphWidget) {\n      return nextBlock;\n    } else {\n      return this.getFirstBlockInFirstCell(nextBlock);\n    }\n  };\n  /**\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getLastBlockInPreviousHeaderFooter = function (block) {\n    var headerFooter = block.containerWidget;\n    var previousBlock;\n    if (headerFooter.headerFooterType.indexOf('Footer') !== -1) {\n      previousBlock = headerFooter.page.headerWidget.lastChild;\n    } else if (headerFooter.page.previousPage) {\n      var previousPage = headerFooter.page.previousPage;\n      var footerWidget = previousPage.footerWidget;\n      footerWidget.page = previousPage;\n      if (previousPage.headerWidget) {\n        previousPage.headerWidget.page = previousPage;\n      }\n      previousBlock = footerWidget.lastChild;\n    } else {\n      return undefined;\n    }\n    if (previousBlock instanceof ParagraphWidget) {\n      return previousBlock;\n    } else {\n      return this.getFirstBlockInFirstCell(previousBlock);\n    }\n  };\n  /**\n   * Get previous paragraph in block\n   *\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.getPreviousParagraphBlock = function (block, isAutoList) {\n    if (block.previousRenderedWidget instanceof ParagraphWidget) {\n      return block.previousRenderedWidget;\n    } else if (block.previousRenderedWidget instanceof TableWidget) {\n      return this.documentHelper.getLastParagraphInLastCell(block.previousRenderedWidget);\n    }\n    if (block.containerWidget instanceof TableCellWidget) {\n      return this.getPreviousParagraphCell(block.containerWidget);\n    } else if (block.containerWidget instanceof BodyWidget) {\n      return this.getPreviousParagraph(block.containerWidget);\n    } else if (block.containerWidget instanceof HeaderFooterWidget && this.isMoveDownOrMoveUp && !isAutoList) {\n      return this.getLastBlockInPreviousHeaderFooter(block);\n    }\n    return undefined;\n  };\n  /**\n   * Return true if paragraph has valid inline\n   *\n   * @private\n   * @returns {ParagraphWidget}\n   */\n  Selection.prototype.hasValidInline = function (paragraph, start, end) {\n    var index = paragraph.childWidgets.indexOf(start.line);\n    for (var i = index; i < paragraph.childWidgets.length; i++) {\n      for (var j = 0; j < paragraph.childWidgets[i].children.length; j++) {\n        var inline = paragraph.childWidgets[i].children[j];\n        if (inline.length === 0) {\n          continue;\n        }\n        if (inline === end) {\n          return false;\n        }\n        if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * Get paragraph length\n   *\n   * @private\n   * @returns {number}\n   */\n  Selection.prototype.getParagraphLength = function (paragraph, endLine, elementInfo, includeShape) {\n    var length = 0;\n    if (!isNullOrUndefined(paragraph)) {\n      for (var j = 0; j < paragraph.childWidgets.length; j++) {\n        var line = paragraph.childWidgets[j];\n        if (endLine instanceof LineWidget && endLine === line) {\n          if (elementInfo) {\n            length += this.getLineLength(line, elementInfo, includeShape);\n          }\n          break;\n        }\n        length += this.getLineLength(line, undefined, includeShape);\n      }\n    }\n    return length;\n  };\n  /**\n   * Get Line length\n   *\n   * @private\n   * @returns {number}\n   */\n  Selection.prototype.getLineLength = function (line, elementInfo, includeShape) {\n    var length = 0;\n    var bidi = line.paragraph.bidi;\n    for (var i = !bidi ? 0 : line.children.length - 1; bidi ? i > -1 : i < line.children.length; bidi ? i-- : i++) {\n      var element = line.children[i];\n      if (element instanceof ListTextElementBox) {\n        continue;\n      }\n      if (includeShape) {\n        if (element instanceof ShapeElementBox) {\n          for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n            var para = element.textFrame.childWidgets[m];\n            length += this.getParagraphLength(para) + 1;\n          }\n        } else if (element instanceof FootnoteElementBox) {\n          for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n            var para = element.bodyWidget.childWidgets[m];\n            length += this.getParagraphLength(para) + 1;\n          }\n        }\n      }\n      if (elementInfo && elementInfo.element instanceof ElementBox && elementInfo.element === element) {\n        length += elementInfo.index;\n        break;\n      }\n      length += element.length;\n    }\n    return length;\n  };\n  /**\n   * Get line information\n   *\n   * @private\n   * @returns {LineInfo}\n   */\n  Selection.prototype.getLineInfo = function (paragraph, offset) {\n    var line = undefined;\n    var length = 0;\n    var childLength = paragraph.childWidgets.length;\n    for (var j = 0; j < childLength; j++) {\n      line = paragraph.childWidgets[j];\n      length = this.getLineLength(line);\n      if (offset <= length || j === childLength - 1) {\n        break;\n      } else {\n        offset = offset - length;\n      }\n    }\n    return {\n      'line': line,\n      'offset': offset\n    };\n  };\n  /**\n   * @private\n   * @returns {ElementInfo}\n   */\n  Selection.prototype.getElementInfo = function (line, offset) {\n    var index = 0;\n    var element = undefined;\n    for (var i = 0; i < line.children.length; i++) {\n      element = line.children[i];\n      if (element instanceof ListTextElementBox) {\n        continue;\n      }\n      if (offset > element.length && !(offset === element.length + 1 && isNullOrUndefined(element.nextNode))) {\n        offset = offset - element.length;\n      } else {\n        break;\n      }\n    }\n    return {\n      'element': element,\n      'index': offset\n    };\n  };\n  /**\n   * Get paragraph start offset\n   *\n   * @private\n   * @returns {number}\n   */\n  Selection.prototype.getStartOffset = function (paragraph) {\n    var startOffset = 0;\n    if (paragraph.childWidgets.length > 0) {\n      var childWidgets = paragraph.childWidgets[0];\n      return this.getStartLineOffset(childWidgets);\n    }\n    return startOffset;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getStartLineOffset = function (line) {\n    var startOffset = 0;\n    for (var i = 0; i < line.children.length; i++) {\n      var inline = line.children[i];\n      if (inline.length === 0) {\n        continue;\n      }\n      if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof BookmarkElementBox || inline instanceof ShapeElementBox || inline instanceof EditRangeStartElementBox || inline instanceof EditRangeEndElementBox || inline instanceof CommentCharacterElementBox || inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline) || inline instanceof ContentControl) {\n        return startOffset;\n      }\n      if (inline instanceof ListTextElementBox) {\n        continue;\n      }\n      startOffset += inline.length;\n    }\n    return startOffset;\n  };\n  /**\n   * Get previous paragraph from selection\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousSelectionCell = function (cell) {\n    if (!isNullOrUndefined(cell.previousRenderedWidget)) {\n      if (!this.isForward) {\n        var block = cell.previousRenderedWidget.childWidgets[0];\n        if (block instanceof ParagraphWidget) {\n          return block;\n        } else {\n          return this.documentHelper.getFirstParagraphInLastRow(block);\n        }\n      } else {\n        var widgets = cell.previousRenderedWidget.childWidgets;\n        var block = widgets[widgets.length - 1];\n        if (block instanceof ParagraphWidget) {\n          return block;\n        } else {\n          return this.getPreviousParagraphSelection(block.childWidgets[block.childWidgets.length - 1]);\n        }\n      }\n    }\n    return this.getPreviousSelectionRow(cell.ownerRow);\n  };\n  /**\n   * Get previous paragraph selection in selection\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousSelectionRow = function (row) {\n    if (!isNullOrUndefined(row.previousRenderedWidget)) {\n      if (!this.isForward) {\n        var cell = row.previousRenderedWidget.childWidgets[0];\n        var block = cell.childWidgets[0];\n        return this.documentHelper.getFirstParagraphBlock(block);\n      } else {\n        return this.getPreviousParagraphSelection(row.previousRenderedWidget);\n      }\n    }\n    return this.getPreviousSelectionBlock(row.ownerTable);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getNextSelectionBlock = function (block) {\n    if (block.nextRenderedWidget instanceof ParagraphWidget) {\n      return block.nextRenderedWidget;\n    } else if (block.nextRenderedWidget instanceof TableWidget) {\n      if (this.isEmpty || this.isForward) {\n        return this.documentHelper.getLastParagraphInFirstRow(block.nextRenderedWidget);\n      } else {\n        return this.getNextParagraphSelection(block.nextRenderedWidget.childWidgets[0]);\n      }\n    }\n    if (block.containerWidget instanceof TableCellWidget) {\n      return this.getNextSelectionCell(block.containerWidget);\n    } else if (block.containerWidget instanceof BodyWidget) {\n      return this.getNextSelection(block.containerWidget);\n    }\n    return undefined;\n  };\n  /**\n   * Get next paragraph from selected cell\n   *\n   * @private\n   */\n  Selection.prototype.getNextSelectionCell = function (cell) {\n    if (!isNullOrUndefined(cell.nextRenderedWidget)) {\n      if (this.isEmpty || this.isForward) {\n        var block = cell.nextRenderedWidget.childWidgets[cell.nextRenderedWidget.childWidgets.length - 1];\n        return this.documentHelper.getLastParagraphBlock(block);\n      } else {\n        //Return first paragraph in cell.\n        var block = cell.nextRenderedWidget.childWidgets[0];\n        if (block instanceof ParagraphWidget) {\n          return block;\n        } else {\n          return this.getNextParagraphSelection(block.childWidgets[0]);\n        }\n      }\n    }\n    return this.getNextSelectionRow(cell.ownerRow);\n  };\n  /**\n   * Get next paragraph in selection\n   *\n   * @private\n   */\n  Selection.prototype.getNextSelectionRow = function (row) {\n    if (!isNullOrUndefined(row.nextRenderedWidget)) {\n      var isForwardSelection = this.isEmpty || this.isForward;\n      if (isForwardSelection) {\n        var cell = row.nextRenderedWidget.childWidgets[row.nextRenderedWidget.childWidgets.length - 1];\n        var block = cell.childWidgets[cell.childWidgets.length - 1];\n        return this.documentHelper.getLastParagraphBlock(block);\n      } else {\n        return this.getNextParagraphSelection(row.nextRenderedWidget);\n      }\n    }\n    return this.getNextSelectionBlock(row.ownerTable);\n  };\n  /**\n   * Get next block with selection\n   *\n   * @private\n   */\n  Selection.prototype.getNextSelection = function (section) {\n    if (section.nextRenderedWidget instanceof BodyWidget) {\n      var block = section.nextRenderedWidget.childWidgets[0];\n      if (block instanceof ParagraphWidget) {\n        return block;\n      } else {\n        if (this.isEmpty || this.isForward) {\n          return this.documentHelper.getLastParagraphInFirstRow(block);\n        } else {\n          return this.getNextParagraphSelection(block.childWidgets[0]);\n        }\n      }\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getNextParagraphSelection = function (row) {\n    //Iterate the exact cell based on UP/Down selection length.\n    var cell = row.childWidgets[0];\n    if (this.start.paragraph.isInsideTable && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n      var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n      cell = this.getFirstCellInRegion(row, startCell, this.upDownSelectionLength, false);\n    }\n    var block = cell.childWidgets[0];\n    return this.documentHelper.getFirstParagraphBlock(block);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPreviousSelectionBlock = function (block) {\n    if (block.previousRenderedWidget instanceof ParagraphWidget) {\n      return block.previousRenderedWidget;\n    } else if (block.previousRenderedWidget instanceof TableWidget) {\n      if (!this.isForward) {\n        return this.documentHelper.getFirstParagraphInLastRow(block.previousRenderedWidget);\n      } else {\n        return this.getPreviousParagraphSelection(block.previousRenderedWidget.childWidgets[block.previousRenderedWidget.childWidgets.length - 1]);\n      }\n    }\n    if (block.containerWidget instanceof TableCellWidget) {\n      return this.getPreviousSelectionCell(block.containerWidget);\n    } else if (block.containerWidget instanceof BodyWidget) {\n      return this.getPreviousSelection(block.containerWidget);\n    }\n    return undefined;\n  };\n  /**\n   * Get previous paragraph in selection\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousSelection = function (section) {\n    if (section.previousRenderedWidget instanceof BodyWidget) {\n      var prevBodyWidget = section.previousRenderedWidget;\n      var block = prevBodyWidget.childWidgets[prevBodyWidget.childWidgets.length - 1];\n      if (block instanceof ParagraphWidget) {\n        return block;\n      } else {\n        if (!this.isForward) {\n          return this.documentHelper.getFirstParagraphInLastRow(block);\n        } else {\n          var tableWidget = block;\n          return this.getPreviousParagraphSelection(tableWidget.childWidgets[tableWidget.childWidgets.length - 1]);\n        }\n      }\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPreviousParagraphSelection = function (row) {\n    //Iterate the exact cell based on UP/Down selection length.\n    var cell = row.childWidgets[row.childWidgets.length - 1];\n    if (this.start.paragraph.isInsideTable && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n      var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n      cell = this.getLastCellInRegion(row, startCell, this.upDownSelectionLength, true);\n    }\n    var block = cell.childWidgets[cell.childWidgets.length - 1];\n    return this.documentHelper.getLastParagraphBlock(block);\n  };\n  /**\n   * Get last cell in the selected region\n   *\n   * @private\n   */\n  Selection.prototype.getLastCellInRegion = function (row, startCell, selLength, isMovePrev) {\n    var start = this.getCellLeft(row, startCell);\n    var end = start + startCell.cellFormat.cellWidth;\n    var flag = true;\n    if (start <= selLength && selLength < end) {\n      for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n        var left = this.getCellLeft(row, row.childWidgets[i]);\n        if (HelperMethods.round(start, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(end, 2)) {\n          flag = false;\n          return row.childWidgets[i];\n        }\n      }\n    } else {\n      for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n        var left = this.getCellLeft(row, row.childWidgets[i]);\n        if (left <= selLength && left + row.childWidgets[i].cellFormat.cellWidth > selLength) {\n          flag = false;\n          return row.childWidgets[i];\n        }\n      }\n    }\n    if (flag) {\n      if (!isNullOrUndefined(row.previousRenderedWidget) && isMovePrev) {\n        return this.getLastCellInRegion(row.previousRenderedWidget, startCell, selLength, isMovePrev);\n      } else if (!isNullOrUndefined(row.nextRenderedWidget) && !isMovePrev) {\n        return this.getLastCellInRegion(row.nextRenderedWidget, startCell, selLength, isMovePrev);\n      }\n    }\n    return row.childWidgets[row.childWidgets.length - 1];\n  };\n  /**\n   * Get Container table\n   *\n   * @private\n   */\n  Selection.prototype.getCellInTable = function (table, tableCell) {\n    while (tableCell.ownerTable.isInsideTable) {\n      if (table.equals(tableCell.ownerTable)) {\n        return tableCell;\n      }\n      tableCell = tableCell.ownerTable.associatedCell;\n    }\n    return tableCell;\n  };\n  /**\n   * Get previous valid offset\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousValidOffset = function (paragraph, offset) {\n    if (offset === 0) {\n      return 0;\n    }\n    var validOffset = 0;\n    var count = 0;\n    var value = 0;\n    var bidi = paragraph.paragraphFormat.bidi;\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var lineWidget = paragraph.childWidgets[i];\n      for (var j = 0; j < lineWidget.children.length; j++) {\n        var inline = lineWidget.children[j];\n        if (inline.length === 0 || inline instanceof ListTextElementBox) {\n          continue;\n        }\n        if (offset <= count + inline.length) {\n          return offset - 1 === count ? validOffset : offset - 1;\n        }\n        if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof BookmarkElementBox || inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline)) {\n          validOffset = count + inline.length;\n        }\n        count += inline.length;\n      }\n    }\n    return offset - 1 === count ? validOffset : offset - 1;\n  };\n  /**\n   * Get next valid offset\n   *\n   * @private\n   */\n  Selection.prototype.getNextValidOffset = function (line, offset) {\n    var count = 0;\n    // if (!line.paragraph.paragraphFormat.bidi) {\n    for (var i = 0; i < line.children.length; i++) {\n      var inline = line.children[i];\n      if (inline.length === 0 || inline instanceof ListTextElementBox) {\n        continue;\n      }\n      if (offset < count + inline.length) {\n        if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline)) {\n          return (offset > count ? offset : count) + 1;\n        }\n      }\n      if (offset === count + inline.length && inline instanceof FieldElementBox && inline.fieldType === 1 && inline.previousNode instanceof ImageElementBox) {\n        return offset;\n      }\n      count += inline.length;\n    }\n    // } else {\n    //     if (offset !== this.getLineLength(line)) {\n    //         offset = line.getInlineForOffset(offset, false, undefined, false, false, true).index;\n    //     }\n    // }\n    return offset;\n  };\n  /**\n   * Get paragraph mark size info\n   *\n   * @private\n   */\n  Selection.prototype.getParagraphMarkSize = function (paragraph, topMargin, bottomMargin) {\n    var size = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n    var baselineOffset = size.BaselineOffset;\n    var maxHeight = size.Height;\n    var maxBaselineOffset = baselineOffset;\n    if (paragraph instanceof ParagraphWidget) {\n      // let paragraphWidget: ParagraphWidget[] = paragraph.renderedElement() as ParagraphWidget[];\n      if (paragraph.childWidgets.length > 0) {\n        var lineWidget = paragraph.childWidgets[0];\n      }\n      //Gets line spacing.\n      var lineSpacing = this.documentHelper.layout.getLineSpacing(paragraph, maxHeight);\n      var beforeSpacing = this.documentHelper.layout.getBeforeSpacing(paragraph);\n      topMargin = maxBaselineOffset - baselineOffset;\n      bottomMargin = maxHeight - maxBaselineOffset - (size.Height - baselineOffset);\n      //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n      var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n      if (lineSpacingType === 'Multiple') {\n        if (lineSpacing > maxHeight) {\n          bottomMargin += lineSpacing - maxHeight;\n        } else {\n          topMargin += lineSpacing - maxHeight;\n        }\n      } else if (lineSpacingType === 'Exactly') {\n        topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n      } else if (lineSpacing > topMargin + size.Height + bottomMargin) {\n        topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n      }\n      topMargin += beforeSpacing;\n      bottomMargin += this.documentHelper.layout.getAfterSpacing(paragraph);\n    }\n    return {\n      'width': size.Width,\n      'height': size.Height,\n      'topMargin': topMargin,\n      'bottomMargin': bottomMargin\n    };\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPhysicalPositionInternal = function (line, offset, moveNextLine) {\n    if (line.paragraph.isEmpty()) {\n      var paragraphWidget = line.paragraph;\n      var left = paragraphWidget.x;\n      if (paragraphWidget.childWidgets.length > 0) {\n        var lineWidget = paragraphWidget.childWidgets[0];\n        left = this.getLeft(lineWidget);\n      }\n      var topMargin = 0;\n      var bottomMargin = 0;\n      var size = this.getParagraphMarkSize(line.paragraph, topMargin, bottomMargin);\n      if (offset > 0 || offset === 0 && paragraphWidget.isEmpty() && paragraphWidget.bidi) {\n        left += size.width;\n      }\n      return new Point(left, paragraphWidget.y + size.topMargin);\n    } else {\n      var indexInInline = 0;\n      var inlineObj = line.getInline(offset, indexInInline, line.paragraph.bidi);\n      var inline = inlineObj.element; //return indexInInline must\n      indexInInline = inlineObj.index;\n      // if (inline.length === indexInInline && !isNullOrUndefined(inline.nextNode) && this.viewer.renderedElements.containsKey(inline) &&\n      //     this.viewer.renderedElements.get(inline).length > 0 && this.viewer.renderedElements.containsKey(inline.nextNode as WInline)\n      //     && this.viewer.renderedElements.get(inline.nextNode as WInline).length > 0 &&\n      //     (this.viewer.renderedElements.get(inline)[this.viewer.renderedElements.get(inline).length - 1] as ElementBox).line !== (this.viewer.renderedElements.get(inline.nextNode as WInline)[0] as ElementBox).line) {\n      //     //Handled specifically to move the cursor at start of next line.\n      //     inline = inline.nextNode as WInline;\n      //     indexInInline = 0;\n      // }\n      return this.getPhysicalPositionInline(inline, indexInInline, moveNextLine);\n    }\n  };\n  /**\n   * Highlight selected content\n   *\n   * @private\n   */\n  Selection.prototype.highlightSelectedContent = function (start, end) {\n    if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable || !start.paragraph.associatedCell.equals(end.paragraph.associatedCell) || !this.documentHelper.isSelectionChangedOnMouseMoved && this.isCellSelected(start.paragraph.associatedCell, start, end) || this.isCellPrevSelected)) {\n      this.highlightCell(start.paragraph.associatedCell, this, start, end);\n      this.isCellPrevSelected = true;\n    } else {\n      var inline = undefined;\n      var index = 0;\n      if (!this.owner.isReadOnlyMode && start.paragraph === end.paragraph) {\n        if (start.offset + 1 === end.offset) {\n          var inlineObj = end.currentWidget.getInline(end.offset, index);\n          inline = inlineObj.element; // return index value\n          index = inlineObj.index;\n          if (inline instanceof ImageElementBox || inline instanceof ShapeElementBox) {\n            var startOffset = start.currentWidget.getOffset(inline, 0);\n            if (startOffset !== start.offset) {\n              inline = undefined;\n            }\n          }\n        } else {\n          var indexInInline = 0;\n          var startInlineObj = start.currentWidget.getInline(start.offset, indexInInline);\n          var startInline = startInlineObj.element; //return indexInInline\n          indexInInline = startInlineObj.index;\n          if (indexInInline === startInline.length) {\n            startInline = this.getNextRenderedElementBox(startInline, indexInInline);\n          }\n          var endInlineObj = end.currentWidget.getInline(end.offset, indexInInline);\n          var endInline = endInlineObj.element; //return indexInInline\n          indexInInline = endInlineObj.index;\n          if (startInline instanceof FieldElementBox && endInline instanceof FieldElementBox && !isNullOrUndefined(startInline.fieldSeparator)) {\n            var fieldValue = startInline.fieldSeparator.nextNode;\n            if (fieldValue instanceof ImageElementBox && fieldValue.nextNode === endInline) {\n              inline = fieldValue;\n            }\n          }\n        }\n      }\n      if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded && (inline instanceof ImageElementBox || inline instanceof ShapeElementBox)) {\n        var elementBoxObj = this.getElementBoxInternal(inline, index);\n        var elementBox = elementBoxObj.element; //return index\n        index = elementBoxObj.index;\n        if (this.owner.enableImageResizerMode && !this.owner.editorModule.isRemoteAction) {\n          this.owner.imageResizerModule.positionImageResizer(elementBox);\n          this.owner.imageResizerModule.showImageResizer();\n        }\n        if (this.documentHelper.isTouchInput) {\n          this.documentHelper.touchStart.style.display = 'none';\n          this.documentHelper.touchEnd.style.display = 'none';\n        }\n      } else {\n        if (start.paragraph.isInsideTable && start.paragraph.associatedCell.equals(end.paragraph.associatedCell) && end.paragraph.equals(this.getLastParagraph(end.paragraph.associatedCell)) && this.getParagraphLength(end.paragraph) + 1 == end.offset) {\n          end.offset--;\n        }\n        this.highlight(start.paragraph, start, end);\n        if (this.isHighlightNext) {\n          this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n          this.isHighlightNext = false;\n          this.hightLightNextParagraph = undefined;\n        }\n      }\n      if (this.isInShape) {\n        this.showResizerForShape();\n      }\n    }\n  };\n  Selection.prototype.showResizerForShape = function () {\n    var shape = this.getCurrentTextFrame().containerShape;\n    this.owner.imageResizerModule.positionImageResizer(shape);\n    this.owner.imageResizerModule.showImageResizer();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.highlight = function (paragraph, start, end) {\n    var selectionStartIndex = 0;\n    var selectionEndIndex = 0;\n    var startElement = undefined;\n    var endElement = undefined;\n    var startLineWidget = undefined;\n    var endLineWidget = undefined;\n    //return start Element and selection start index\n    var startLineObj = this.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n    startElement = startLineObj.element;\n    if (isNullOrUndefined(startElement)) {\n      startLineWidget = paragraph.childWidgets[0];\n    } else {\n      startLineWidget = startElement.line;\n    }\n    selectionStartIndex = startLineObj.index;\n    var endLineObj = this.getEndLineWidget(end, endElement, selectionEndIndex);\n    endElement = endLineObj.element;\n    if (endElement) {\n      endLineWidget = endElement.line;\n    } else {\n      endLineWidget = end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n    }\n    selectionEndIndex = endLineObj.index;\n    var top = 0;\n    var left = 0;\n    if (!isNullOrUndefined(startLineWidget)) {\n      top = this.getTop(startLineWidget);\n      left = this.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n    }\n    if (!isNullOrUndefined(startLineWidget) && startLineWidget === endLineWidget) {\n      //Selection ends in current line.\n      var right = this.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n      var width = 0;\n      var isRtlText = false;\n      if (endElement instanceof TextElementBox) {\n        isRtlText = endElement.isRightToLeft;\n      }\n      if (!isRtlText && startElement instanceof TextElementBox) {\n        isRtlText = startElement.isRightToLeft;\n      }\n      width = Math.abs(right - left);\n      // Handled the highlighting approach as genric for normal and rtl text.\n      if (isRtlText || paragraph.bidi) {\n        var elementBoxCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n        if (elementBoxCollection && elementBoxCollection.length > 1) {\n          for (var i = 0; i < elementBoxCollection.length; i++) {\n            var element = elementBoxCollection[i];\n            var elementIsRTL = false;\n            var index = element instanceof TextElementBox ? element.length : 1;\n            if (element === startElement) {\n              left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n              right = this.getLeftInternal(startLineWidget, element, index);\n            } else if (element === endElement) {\n              left = this.getLeftInternal(startLineWidget, element, 0);\n              right = this.getLeftInternal(startLineWidget, element, selectionEndIndex);\n            } else {\n              left = this.getLeftInternal(startLineWidget, element, 0);\n              right = this.getLeftInternal(startLineWidget, element, index);\n            }\n            if (element instanceof TextElementBox) {\n              elementIsRTL = element.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            // Handled the paragraph mark highliting as special case.\n            if (element === endElement && element instanceof TextElementBox && selectionEndIndex > element.length) {\n              var charFormat = element.line.paragraph.characterFormat;\n              var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n              if (paragraph.bidi && !elementIsRTL) {\n                width -= paragraphMarkWidth;\n                // Highlight the element.\n                this.createHighlightBorder(startLineWidget, width, left, top, true);\n                // Highlight the paragraph mark of Bidi paragrph. \n                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n                // continue to next element.\n                continue;\n              }\n            }\n            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true);\n          }\n        } else {\n          // Need to handle the Paragraph mark highlighting.\n          if (endElement instanceof TextElementBox && selectionEndIndex > endElement.length) {\n            var charFormat = endElement.line.paragraph.characterFormat;\n            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n            // Since isRTLText is truo, so the right is considered as left\n            if (!paragraph.bidi && isRtlText) {\n              right += paragraphMarkWidth;\n              width -= paragraphMarkWidth;\n              // Highlight the element.\n              this.createHighlightBorder(startLineWidget, width, right, top, true);\n              // Highlight the paragraph mark. \n              right += endElement.width;\n              this.createHighlightBorder(startLineWidget, paragraphMarkWidth, right, top, true);\n            } else if (paragraph.bidi && !isRtlText) {\n              width -= paragraphMarkWidth;\n              // Highlight the element.\n              this.createHighlightBorder(startLineWidget, width, left, top, true);\n              // Highlight the paragraph mark of Bidi paragrph. \n              left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n              this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n            } else {\n              this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false);\n            }\n          } else {\n            this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false);\n          }\n        }\n      } else {\n        // Start element and end element will be in reverese for Bidi paragraph highlighting. \n        // So, the right is considered based on Bidi property.\n        this.createHighlightBorder(startLineWidget, width, paragraph.bidi ? right : left, top, false);\n      }\n    } else {\n      if (!isNullOrUndefined(startLineWidget)) {\n        var x = startLineWidget.paragraph.x;\n        if (paragraph !== startLineWidget.paragraph) {\n          paragraph = startLineWidget.paragraph;\n        }\n        var width = this.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n        // Handled the  highlighting approach as genric for normal and rtl text.\n        if (paragraph.bidi || startElement instanceof TextElementBox && startElement.isRightToLeft) {\n          var right = 0;\n          var elementCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n          if (elementCollection) {\n            var elementIsRTL = false;\n            for (var i = 0; i < elementCollection.length; i++) {\n              var element = elementCollection[i];\n              elementIsRTL = false;\n              if (element === startElement) {\n                left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n              } else {\n                left = this.getLeftInternal(startLineWidget, element, 0);\n              }\n              var index = element instanceof TextElementBox ? element.length : 1;\n              right = this.getLeftInternal(startLineWidget, element, index);\n              if (element instanceof TextElementBox) {\n                elementIsRTL = element.isRightToLeft;\n              }\n              width = Math.abs(right - left);\n              this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true);\n            }\n            // Highlight the Paragrph mark for last line.\n            if (startLineWidget.isLastLine()) {\n              var charFormat = elementCollection[elementCollection.length - 1].line.paragraph.characterFormat;\n              var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n              if (paragraph.bidi) {\n                // The paragraph mark will be at the left most end.\n                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n              } else {\n                // The paragraph mark will at right most end.\n                left = elementIsRTL ? startLineWidget.paragraph.x + this.getWidth(startLineWidget, false) : right;\n              }\n              this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n            }\n          } else {\n            this.createHighlightBorder(startLineWidget, width, left, top, false);\n          }\n        } else {\n          this.createHighlightBorder(startLineWidget, width, left, top, false);\n        }\n        var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n        //Iterates to last item of paragraph or selection end.                                             \n        this.highlightParagraph(paragraph, lineIndex + 1, endLineWidget, endElement, selectionEndIndex);\n        if (paragraph.childWidgets.indexOf(end.currentWidget) !== -1) {\n          return;\n        }\n      }\n      if (this.isHideSelection(paragraph)) {\n        this.isHighlightNext = false;\n        return;\n      }\n      this.isHighlightNext = true;\n      this.hightLightNextParagraph = paragraph;\n    }\n  };\n  Selection.prototype.highlightNextBlock = function (paragraph, start, end) {\n    var block = paragraph.nextRenderedWidget;\n    if (!isNullOrUndefined(block)) {\n      if (block instanceof ParagraphWidget) {\n        this.isHighlightNext = false;\n        this.highlight(block, start, end);\n        if (this.isHighlightNext) {\n          this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n          this.isHighlightNext = false;\n          this.hightLightNextParagraph = undefined;\n        }\n      } else {\n        this.highlightTable(block, start, end);\n      }\n    }\n  };\n  /**\n   * Get start line widget\n   * @private\n   * @returns {ElementInfo}\n   */\n  Selection.prototype.getStartLineWidget = function (paragraph, start, startElement, selectionStartIndex) {\n    var offset = paragraph === start.paragraph ? start.offset : this.getStartOffset(paragraph);\n    var startInlineObj = undefined;\n    if (paragraph === start.paragraph) {\n      startInlineObj = start.currentWidget.getInline(offset, selectionStartIndex);\n    } else {\n      startInlineObj = paragraph.firstChild.getInline(offset, selectionStartIndex);\n    }\n    startElement = startInlineObj.element; //return selectionStartIndex\n    selectionStartIndex = startInlineObj.index;\n    if (startElement instanceof FieldElementBox) {\n      var inlineInfo = this.getRenderedInline(startElement, selectionStartIndex);\n      startElement = inlineInfo.element;\n      selectionStartIndex = inlineInfo.index;\n    }\n    if (offset === this.getParagraphLength(start.paragraph) + 1) {\n      selectionStartIndex++;\n    }\n    return {\n      'index': selectionStartIndex,\n      'element': startElement\n    };\n  };\n  /**\n   * Get end line widget\n   * @private\n   */\n  Selection.prototype.getEndLineWidget = function (end, endElement, selectionEndIndex) {\n    var endInlineObj = end.currentWidget.getInline(end.offset, selectionEndIndex);\n    endElement = endInlineObj.element; //return selection end index\n    selectionEndIndex = endInlineObj.index;\n    if (endElement instanceof FieldElementBox) {\n      var inlineInfo = this.getRenderedInline(endElement, selectionEndIndex);\n      endElement = inlineInfo.element;\n      selectionEndIndex = inlineInfo.index;\n    }\n    var lineIndex = end.paragraph.childWidgets.indexOf(end.currentWidget);\n    if (lineIndex === end.paragraph.childWidgets.length - 1 && end.offset === this.getLineLength(end.currentWidget) + 1) {\n      selectionEndIndex = endElement ? endElement.length + 1 : 1;\n    }\n    return {\n      'index': selectionEndIndex,\n      'element': endElement\n    };\n  };\n  /**\n   * Get line widget\n   * @private\n   */\n  Selection.prototype.getLineWidgetInternal = function (line, offset, moveToNextLine) {\n    var lineWidget = undefined;\n    if (line.children.length === 0 && line instanceof LineWidget) {\n      lineWidget = line;\n    } else {\n      var indexInInline = 0;\n      var inlineInfo = line.getInline(offset, indexInInline);\n      var inline = inlineInfo.element;\n      indexInInline = inlineInfo.index;\n      lineWidget = inline instanceof ElementBox ? inline.line : this.getLineWidgetInternalInline(inline, indexInInline, moveToNextLine);\n    }\n    return lineWidget;\n  };\n  /**\n   * Get last line widget\n   * @private\n   */\n  Selection.prototype.getLineWidgetParagraph = function (offset, line) {\n    var linewidget = undefined;\n    if (line.children.length === 0) {\n      linewidget = line;\n    } else {\n      var indexInInline = 0;\n      var inlineInfo = line.getInline(offset, indexInInline);\n      var inline = inlineInfo.element;\n      indexInInline = inlineInfo.index;\n      linewidget = this.getLineWidget(inline, indexInInline);\n    }\n    return linewidget;\n  };\n  /**\n   * Highlight selected cell\n   * @private\n   */\n  Selection.prototype.highlightCells = function (table, startCell, endCell) {\n    var start = this.getCellLeft(startCell.ownerRow, startCell);\n    var end = start + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    if (start > endCellLeft) {\n      start = endCellLeft;\n    }\n    if (end < endCellRight) {\n      end = endCellRight;\n    }\n    if (start > this.upDownSelectionLength) {\n      start = this.upDownSelectionLength;\n    }\n    if (end < this.upDownSelectionLength) {\n      end = this.upDownSelectionLength;\n    }\n    var tableWidgetCollection = table.getSplitWidgets();\n    var startTableIndex = tableWidgetCollection.indexOf(startCell.ownerRow.ownerTable);\n    var endTableIndex = tableWidgetCollection.indexOf(endCell.ownerRow.ownerTable);\n    if (startTableIndex === endTableIndex) {\n      var count = table.childWidgets.indexOf(endCell.ownerRow);\n      for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n        this.highlightRow(table.childWidgets[i], start, end);\n      }\n    } else {\n      var startRowIndex = 0;\n      var endRowIndex = 0;\n      for (var i = startTableIndex; i <= endTableIndex; i++) {\n        table = tableWidgetCollection[i];\n        if (i === startTableIndex) {\n          startRowIndex = table.childWidgets.indexOf(startCell.ownerRow);\n        } else {\n          startRowIndex = 0;\n        }\n        if (i === endTableIndex) {\n          endRowIndex = table.childWidgets.indexOf(endCell.ownerRow);\n        } else {\n          endRowIndex = table.childWidgets.length - 1;\n        }\n        for (var j = startRowIndex; j <= endRowIndex; j++) {\n          this.highlightRow(table.childWidgets[j], start, end);\n        }\n      }\n    }\n  };\n  /**\n   * highlight selected table\n   *\n   * @private\n   */\n  Selection.prototype.highlightTable = function (table, start, end) {\n    this.highlightInternal(table.childWidgets[0], start, end);\n    if (!end.paragraph.isInsideTable //Selection end is outside the table cell.\n    || !table.contains(end.paragraph.associatedCell)) {\n      //Selection end is not inside the current table.\n      this.highlightNextBlock(table, start, end);\n    }\n  };\n  /**\n   * Get cell left\n   *\n   * @private\n   */\n  Selection.prototype.getCellLeft = function (row, cell) {\n    var left = 0;\n    left += cell.x - cell.margin.left;\n    return left;\n  };\n  /**\n   * Get next paragraph for row\n   *\n   * @private\n   */\n  Selection.prototype.getNextParagraphRow = function (row) {\n    if (!isNullOrUndefined(row.nextRenderedWidget)) {\n      var cell = row.nextRenderedWidget.childWidgets[0];\n      var block = cell.childWidgets[0];\n      return this.documentHelper.getFirstParagraphBlock(block);\n    }\n    return this.getNextParagraphBlock(row.ownerTable);\n  };\n  /**\n   * Get previous paragraph from row\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousParagraphRow = function (row) {\n    if (!isNullOrUndefined(row.previousRenderedWidget)) {\n      var cell = row.previousRenderedWidget.lastChild;\n      var block = cell.lastChild ? cell.lastChild : cell.previousSplitWidget.lastChild;\n      return this.documentHelper.getLastParagraphBlock(block);\n    }\n    return this.getPreviousParagraphBlock(row.ownerTable);\n  };\n  /**\n   * Return true if row contain cell\n   *\n   * @private\n   */\n  Selection.prototype.containsRow = function (row, tableCell) {\n    if (row.childWidgets.indexOf(tableCell) !== -1) {\n      return true;\n    }\n    while (tableCell.ownerTable.isInsideTable) {\n      if (row.childWidgets.indexOf(tableCell) !== -1) {\n        return true;\n      }\n      tableCell = tableCell.ownerTable.associatedCell;\n    }\n    return row.childWidgets.indexOf(tableCell) !== -1;\n  };\n  /**\n   * Highlight selected row\n   *\n   * @private\n   */\n  Selection.prototype.highlightRow = function (row, start, end) {\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var left = this.getCellLeft(row, row.childWidgets[i]);\n      if (HelperMethods.round(start, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(end, 2)) {\n        this.highlightCellWidget(row.childWidgets[i]);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.highlightInternal = function (row, start, end) {\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      this.highlightCellWidget(row.childWidgets[i]);\n    }\n    if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n      return;\n    } else if (row.nextRenderedWidget instanceof TableRowWidget) {\n      this.highlightInternal(row.nextRenderedWidget, start, end);\n    }\n  };\n  /**\n   * Get last paragraph in cell\n   *\n   * @private\n   */\n  Selection.prototype.getLastParagraph = function (cell) {\n    while (cell.nextSplitWidget) {\n      if (cell.nextSplitWidget.childWidgets.length > 0) {\n        cell = cell.nextSplitWidget;\n      } else {\n        break;\n      }\n    }\n    var lastBlock;\n    if (cell.childWidgets.length > 0) {\n      lastBlock = cell.lastChild;\n    } else {\n      lastBlock = cell.previousSplitWidget.lastChild;\n    }\n    return this.documentHelper.getLastParagraphBlock(lastBlock);\n  };\n  /**\n   * Return true is source cell contain cell\n   *\n   * @private\n   */\n  Selection.prototype.containsCell = function (sourceCell, cell) {\n    if (sourceCell.equals(cell)) {\n      return true;\n    }\n    while (cell.ownerTable.isInsideTable) {\n      if (sourceCell.equals(cell.ownerTable.associatedCell)) {\n        return true;\n      }\n      cell = cell.ownerTable.associatedCell;\n    }\n    return false;\n  };\n  /**\n   * Return true if cell is selected\n   *\n   * @private\n   */\n  Selection.prototype.isCellSelected = function (cell, startPosition, endPosition) {\n    var lastParagraph = this.getLastParagraph(cell);\n    var isAtCellEnd = lastParagraph === endPosition.paragraph && endPosition.offset === this.getParagraphLength(lastParagraph) + 1;\n    return isAtCellEnd || !this.containsCell(cell, startPosition.paragraph.associatedCell) || !this.containsCell(cell, endPosition.paragraph.associatedCell);\n  };\n  /**\n   * Return Container cell\n   *\n   * @private\n   */\n  Selection.prototype.getContainerCellOf = function (cell, tableCell) {\n    while (cell.ownerTable.isInsideTable) {\n      if (cell.ownerTable.contains(tableCell)) {\n        return cell;\n      }\n      cell = cell.ownerTable.associatedCell;\n    }\n    return cell;\n  };\n  /**\n   * Get Selected cell\n   *\n   * @private\n   */\n  Selection.prototype.getSelectedCell = function (cell, containerCell) {\n    if (cell.ownerTable.equals(containerCell.ownerTable)) {\n      return cell;\n    }\n    while (cell.ownerTable.isInsideTable) {\n      if (cell.ownerTable.associatedCell.equals(containerCell)) {\n        return cell;\n      }\n      cell = cell.ownerTable.associatedCell;\n    }\n    return cell;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getSelectedCells = function () {\n    var cells = [];\n    for (var i = 0; i < this.selectedWidgets.keys.length; i++) {\n      var widget = this.selectedWidgets.keys[i];\n      if (widget instanceof TableCellWidget) {\n        cells.push(widget);\n      }\n    }\n    return cells;\n  };\n  /**\n   * @private\n   * @return\n   */\n  Selection.prototype.getLevelFormatNumber = function () {\n    var numberFormat = '%';\n    numberFormat = numberFormat + ((this.paragraphFormat.listLevelNumber <= 0 ? 0 : this.paragraphFormat.listLevelNumber) + 1) + '.';\n    return numberFormat;\n  };\n  /**\n   * Get Next paragraph from cell\n   *\n   * @private\n   */\n  Selection.prototype.getNextParagraphCell = function (cell) {\n    if (cell.nextRenderedWidget && cell.nextRenderedWidget instanceof TableCellWidget) {\n      //Return first paragraph in cell.\n      cell = cell.nextRenderedWidget;\n      if (cell.getSplitWidgets()[0] instanceof TableCellWidget) {\n        cell = cell.getSplitWidgets()[0];\n      }\n      var block = cell.firstChild;\n      if (block) {\n        return this.documentHelper.getFirstParagraphBlock(block);\n      } else {\n        return this.getNextParagraphCell(cell);\n      }\n    } else if (cell.nextSplitWidget && cell.nextSplitWidget.childWidgets.length === 0) {\n      cell = cell.getSplitWidgets().pop();\n    }\n    return this.getNextParagraphRow(cell.containerWidget);\n  };\n  /**\n   * Get previous paragraph from cell\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousParagraphCell = function (cell) {\n    if (!isNullOrUndefined(cell.previousRenderedWidget) && cell.previousRenderedWidget instanceof TableCellWidget) {\n      cell = cell.previousRenderedWidget;\n      var block = cell.lastChild;\n      return this.documentHelper.getLastParagraphBlock(block);\n    }\n    return this.getPreviousParagraphRow(cell.ownerRow);\n  };\n  /**\n   * Get cell's container cell\n   *\n   * @private\n   */\n  Selection.prototype.getContainerCell = function (cell) {\n    while (!isNullOrUndefined(cell.ownerTable) && cell.ownerTable.isInsideTable) {\n      cell = cell.ownerTable.associatedCell;\n    }\n    return cell;\n  };\n  /**\n   * Highlight selected cell\n   *\n   * @private\n   */\n  Selection.prototype.highlightCell = function (cell, selection, start, end) {\n    if (end.paragraph.isInsideTable) {\n      var containerCell = this.getContainerCellOf(cell, end.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n        var startCell = this.getSelectedCell(cell, containerCell);\n        var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n        if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (this.isCellSelected(containerCell, start, end)) {\n            this.highlightCellWidget(containerCell);\n          } else {\n            if (startCell === containerCell) {\n              this.highlight(start.paragraph, start, end);\n              if (this.isHighlightNext) {\n                this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                this.isHighlightNext = false;\n                this.hightLightNextParagraph = undefined;\n              }\n            } else {\n              this.highlightContainer(startCell, start, end);\n            }\n          }\n        } else {\n          //Selection end is not in container cell.\n          this.highlightCellWidget(containerCell);\n          if (containerCell.ownerRow.equals(endCell.ownerRow)) {\n            //Highlight other selected cells in current row.\n            startCell = containerCell;\n            while (!isNullOrUndefined(startCell.nextRenderedWidget)) {\n              startCell = startCell.nextRenderedWidget;\n              this.highlightCellWidget(startCell);\n              if (startCell === endCell) {\n                break;\n              }\n            }\n          } else {\n            this.highlightCells(containerCell.ownerTable, containerCell, endCell);\n          }\n        }\n      } else {\n        this.highlightContainer(containerCell, start, end);\n      }\n    } else {\n      var cell1 = this.getContainerCell(cell);\n      this.highlightContainer(cell1, start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.highlightContainer = function (cell, start, end) {\n    this.highlightInternal(cell.containerWidget, start, end);\n    this.highlightNextBlock(cell.ownerTable.getSplitWidgets().pop(), start, end);\n  };\n  /**\n   * Get previous valid element\n   *\n   * @private\n   */\n  Selection.prototype.getPreviousValidElement = function (inline) {\n    var previousValidInline = undefined;\n    if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n      return inline;\n    }\n    while (inline instanceof FieldElementBox) {\n      if (HelperMethods.isLinkedFieldCharacter(inline)) {\n        if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n          previousValidInline = inline;\n        } else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n          previousValidInline = inline;\n          if (isNullOrUndefined(inline.fieldSeparator)) {\n            inline = inline.fieldBegin;\n            previousValidInline = inline;\n          }\n        } else {\n          inline = inline.fieldBegin;\n          previousValidInline = inline;\n        }\n      }\n      inline = inline.previousNode;\n    }\n    return isNullOrUndefined(previousValidInline) ? inline : previousValidInline;\n  };\n  /**\n   * Get next valid element\n   *\n   * @private\n   */\n  Selection.prototype.getNextValidElement = function (inline) {\n    var nextValidInline = undefined;\n    if (inline instanceof BookmarkElementBox && inline.bookmarkType === 1) {\n      return inline;\n    }\n    while (inline instanceof FieldElementBox) {\n      if (inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n        return isNullOrUndefined(nextValidInline) ? inline : nextValidInline;\n      } else if (inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n        nextValidInline = inline;\n      }\n      inline = inline.nextNode;\n    }\n    return isNullOrUndefined(nextValidInline) ? inline : nextValidInline;\n  };\n  /**\n   * Return next valid inline with index\n   *\n   * @private\n   */\n  Selection.prototype.validateTextPosition = function (inline, index) {\n    var nextNode = inline.nextNode;\n    if (inline.length === index && (nextNode instanceof FieldElementBox || !(inline instanceof ImageElementBox) && (nextNode instanceof BookmarkElementBox || nextNode instanceof CommentCharacterElementBox))) {\n      //If inline is last item within field, then set field end as text position.\n      var nextInline = this.getNextValidElement(inline.nextNode);\n      if (nextInline instanceof FieldElementBox && nextInline.fieldType === 1 || nextInline instanceof BookmarkElementBox && nextInline.bookmarkType === 1 || nextInline instanceof CommentCharacterElementBox && nextInline.commentType === 1) {\n        inline = nextInline;\n        index = this.documentHelper.isFormFillProtectedMode ? 0 : 1;\n      }\n    } else if (index === 0 && inline.previousNode instanceof FieldElementBox) {\n      var prevInline = this.getPreviousValidElement(inline.previousNode);\n      inline = prevInline;\n      index = inline instanceof FieldElementBox ? 0 : inline.length;\n      if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n        index++;\n      }\n    }\n    return {\n      'element': inline,\n      'index': index\n    };\n  };\n  /**\n   * Get inline physical location\n   *\n   * @private\n   */\n  Selection.prototype.getPhysicalPositionInline = function (inline, index, moveNextLine) {\n    var element = undefined;\n    element = this.getElementBox(inline, index, moveNextLine).element;\n    var lineWidget = undefined;\n    if (isNullOrUndefined(element) || isNullOrUndefined(element.line)) {\n      if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n        element = inline;\n      } else {\n        if (inline instanceof FieldElementBox || inline instanceof BookmarkElementBox || inline instanceof CommentCharacterElementBox) {\n          return this.getFieldCharacterPosition(inline);\n        }\n        return new Point(0, 0);\n      }\n    }\n    var margin = element.margin;\n    var top = 0;\n    var left = 0;\n    if (element instanceof TextElementBox && element.text === '\\v' && isNullOrUndefined(inline.nextNode) && !this.owner.editorModule.handledEnter) {\n      lineWidget = this.getNextLineWidget(element.line.paragraph, element);\n      index = 0;\n    } else {\n      lineWidget = element.line;\n    }\n    top = this.getTop(lineWidget);\n    if (element instanceof ImageElementBox && element.textWrappingStyle === 'Inline') {\n      var format = element.line.paragraph.characterFormat;\n      var previousInline = this.getPreviousTextElement(inline);\n      if (!isNullOrUndefined(previousInline)) {\n        format = previousInline.characterFormat;\n      } else {\n        var nextInline = this.getNextTextElement(inline);\n        if (!isNullOrUndefined(nextInline)) {\n          format = nextInline.characterFormat;\n        }\n      }\n      var measureObj = this.documentHelper.textHelper.getHeight(format);\n      if (element.margin.top + element.height - measureObj.BaselineOffset > 0) {\n        top += element.margin.top + element.height - measureObj.BaselineOffset;\n      }\n    } else if (!(element instanceof FieldElementBox)) {\n      top += margin.top > 0 ? margin.top : 0;\n    }\n    left = isNullOrUndefined(element) || isNullOrUndefined(lineWidget) ? 0 : this.getLeftInternal(lineWidget, element, index);\n    return new Point(left, top);\n  };\n  /**\n   * Get field character position\n   *\n   * @private\n   */\n  Selection.prototype.getFieldCharacterPosition = function (firstInline) {\n    var nextValidInline = this.getNextValidElementForField(firstInline);\n    //If field separator/end exists at end of paragraph, then move to next paragraph.\n    if (isNullOrUndefined(nextValidInline)) {\n      var nextParagraph = firstInline.line.paragraph;\n      return this.getEndPosition(nextParagraph);\n    } else {\n      return this.getPhysicalPositionInline(nextValidInline, 0, true);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isRenderBookmarkAtEnd = function (bookmark) {\n    var bookmarkElement;\n    if (bookmark.bookmarkType == 1) {\n      bookmarkElement = bookmark.reference;\n    } else {\n      bookmarkElement = bookmark;\n    }\n    if (bookmarkElement && isNullOrUndefined(bookmarkElement.properties)) {\n      var endCell = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell : undefined;\n      if (isNullOrUndefined(endCell)) {\n        return false;\n      }\n      var lastRow = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell.ownerRow : undefined;\n      var lastCell = lastRow ? lastRow.childWidgets[lastRow.childWidgets.length - 1] : undefined;\n      if (isNullOrUndefined(lastCell)) {\n        return false;\n      }\n      if (endCell == lastCell) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getNextValidElementForField = function (firstInline) {\n    if (firstInline instanceof FieldElementBox && firstInline.fieldType === 0 && HelperMethods.isLinkedFieldCharacter(firstInline)) {\n      var fieldBegin = firstInline;\n      if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n        firstInline = fieldBegin.fieldEnd;\n      } else {\n        firstInline = fieldBegin.fieldSeparator;\n      }\n    }\n    var nextValidInline = undefined;\n    if (!isNullOrUndefined(firstInline.nextNode)) {\n      nextValidInline = this.getNextValidElement(firstInline.nextNode);\n    }\n    return nextValidInline;\n  };\n  /**\n   * Get paragraph end position\n   *\n   * @private\n   */\n  Selection.prototype.getEndPosition = function (widget) {\n    var left = widget.x;\n    var top = widget.y;\n    var lineWidget = undefined;\n    if (widget.childWidgets.length > 0) {\n      lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n      left += this.getWidth(lineWidget, false);\n    }\n    if (!isNullOrUndefined(lineWidget)) {\n      top = this.getTop(lineWidget);\n    }\n    var topMargin = 0;\n    var bottomMargin = 0;\n    var size = this.getParagraphMarkSize(widget, topMargin, bottomMargin);\n    return new Point(left, top + size.topMargin);\n  };\n  /**\n   * Get element box\n   *\n   * @private\n   */\n  Selection.prototype.getElementBox = function (currentInline, index, moveToNextLine) {\n    var elementBox = undefined;\n    if (!(currentInline instanceof FieldElementBox || currentInline instanceof BookmarkElementBox || currentInline instanceof CommentCharacterElementBox)) {\n      elementBox = currentInline;\n    }\n    return {\n      'element': elementBox,\n      'index': index\n    };\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPreviousTextElement = function (inline) {\n    if (inline.previousNode instanceof TextElementBox) {\n      return inline.previousNode;\n    }\n    if (!isNullOrUndefined(inline.previousNode)) {\n      return this.getPreviousTextElement(inline.previousNode);\n    }\n    return undefined;\n  };\n  /**\n   * Get next text inline\n   *\n   * @private\n   */\n  Selection.prototype.getNextTextElement = function (inline) {\n    if (inline.nextNode instanceof TextElementBox) {\n      return inline.nextNode;\n    }\n    if (!isNullOrUndefined(inline.nextNode)) {\n      return this.getNextTextElement(inline.nextNode);\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getNextRenderedElementBox = function (inline, indexInInline) {\n    if (inline instanceof FieldElementBox) {\n      var fieldBegin = inline;\n      if (fieldBegin.fieldType === 0) {\n        inline = this.getRenderedField(fieldBegin);\n        if (fieldBegin === inline) {\n          return fieldBegin;\n        }\n      }\n      indexInInline = 1;\n    }\n    while (!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox) {\n      var nextValidInline = this.getNextValidElement(inline.nextNode);\n      if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n        var fieldBegin = nextValidInline;\n        inline = this.getRenderedField(fieldBegin);\n        if (!isNullOrUndefined(inline) && fieldBegin === inline) {\n          return fieldBegin;\n        }\n        indexInInline = 1;\n      } else {\n        inline = nextValidInline;\n      }\n    }\n    return inline;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getElementBoxInternal = function (inline, index) {\n    var element = undefined;\n    element = inline;\n    return {\n      'element': element,\n      'index': index\n    };\n  };\n  /**\n   * Get Line widget\n   *\n   * @private\n   */\n  Selection.prototype.getLineWidget = function (inline, index) {\n    return this.getLineWidgetInternalInline(inline, index, true);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getLineWidgetInternalInline = function (inline, index, moveToNextLine) {\n    var elementObj = this.getElementBox(inline, index, moveToNextLine);\n    var element = elementObj.element; //return index\n    index = elementObj.index;\n    if (!isNullOrUndefined(element)) {\n      if (moveToNextLine && element instanceof TextElementBox && element.text === '\\v' && index === 1) {\n        return this.getNextLineWidget(element.line.paragraph, element);\n      } else {\n        return element.line;\n      }\n    }\n    var startInline = inline;\n    //ToDo: Check previous inline here.\n    var nextValidInline = this.getNextValidElementForField(startInline);\n    //If field separator/end exists at end of paragraph, then move to next paragraph.\n    if (isNullOrUndefined(nextValidInline)) {\n      var lineWidget = undefined;\n      var widget = startInline.line.paragraph;\n      if (widget.childWidgets.length > 0) {\n        lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n      }\n      return lineWidget;\n    } else {\n      return this.getLineWidget(nextValidInline, 0);\n    }\n  };\n  /**\n   * Get next line widget\n   *\n   * @private\n   */\n  Selection.prototype.getNextLineWidget = function (paragraph, element) {\n    var lineWidget = undefined;\n    var widget = paragraph;\n    if (widget.childWidgets.length > 0) {\n      var widgetIndex = widget.childWidgets.indexOf(element.line);\n      if (widgetIndex === widget.childWidgets.length - 1) {\n        widget = paragraph;\n        // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n        widgetIndex = -1;\n      } else if (widgetIndex > widget.childWidgets.length - 1) {\n        widget = this.getNextParagraphBlock(paragraph);\n        widgetIndex = -1;\n      } else if (widgetIndex < 0) {\n        // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n        widget = paragraph;\n        widgetIndex = widget.childWidgets.indexOf(element.line);\n      }\n      lineWidget = widget.childWidgets[widgetIndex + 1];\n    }\n    return lineWidget;\n  };\n  Selection.prototype.getCaretHeight = function (inline, index, format, isEmptySelection, topMargin, isItalic) {\n    var elementBoxInfo = this.getElementBox(inline, index, false);\n    var element = elementBoxInfo.element;\n    var currentInline = inline;\n    if (isNullOrUndefined(element)) {\n      if (currentInline instanceof FieldElementBox) {\n        return this.getFieldCharacterHeight(currentInline, format, isEmptySelection, topMargin, isItalic);\n      }\n      return {\n        'height': this.documentHelper.textHelper.getHeight(format).Height,\n        'topMargin': topMargin,\n        'isItalic': isItalic\n      };\n    }\n    var margin = element.margin;\n    var heightElement = element.height;\n    var maxLineHeight = 0;\n    if (element instanceof ImageElementBox) {\n      var previousInline = this.getPreviousTextElement(inline);\n      var nextInline = this.getNextTextElement(inline);\n      if (isNullOrUndefined(previousInline) && isNullOrUndefined(nextInline)) {\n        var top_2 = 0;\n        var bottom = 0;\n        var paragarph = inline.line.paragraph;\n        var sizeInfo = this.getParagraphMarkSize(paragarph, top_2, bottom);\n        top_2 = sizeInfo.topMargin;\n        bottom = sizeInfo.bottomMargin;\n        maxLineHeight = sizeInfo.height;\n        isItalic = paragarph.characterFormat.italic;\n        if (!isEmptySelection) {\n          maxLineHeight += this.documentHelper.layout.getAfterSpacing(paragarph);\n        }\n      } else if (isNullOrUndefined(previousInline)) {\n        isItalic = nextInline.characterFormat.italic;\n        return this.getCaretHeight(nextInline, 0, nextInline.characterFormat, isEmptySelection, topMargin, isItalic);\n      } else {\n        if (!isNullOrUndefined(nextInline) && element instanceof ImageElementBox) {\n          //Calculates the caret size using image character format.\n          var textSizeInfo = this.documentHelper.textHelper.getHeight(element.characterFormat);\n          var charHeight = textSizeInfo.Height;\n          var baselineOffset = textSizeInfo.BaselineOffset;\n          maxLineHeight = element.margin.top < 0 && baselineOffset > element.margin.top + element.height ? element.margin.top + element.height + charHeight - baselineOffset : charHeight;\n          if (!isEmptySelection) {\n            maxLineHeight += element.margin.bottom;\n          }\n        } else {\n          isItalic = previousInline.characterFormat.italic;\n          return this.getCaretHeight(previousInline, previousInline.length, previousInline.characterFormat, isEmptySelection, topMargin, isItalic);\n        }\n      }\n    } else {\n      var baselineAlignment = this.characterFormat.baselineAlignment;\n      var elementHeight = heightElement;\n      if (baselineAlignment !== 'Normal' && isEmptySelection) {\n        //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n        elementHeight = elementHeight / 1.5;\n        if (baselineAlignment === 'Subscript') {\n          topMargin = heightElement - elementHeight;\n        }\n      }\n      maxLineHeight = (margin.top < 0 ? margin.top : 0) + elementHeight;\n      if (!isEmptySelection) {\n        maxLineHeight += margin.bottom;\n      }\n    }\n    if (!isEmptySelection) {\n      return {\n        'height': maxLineHeight,\n        'topMargin': topMargin,\n        'isItalic': isItalic\n      };\n    }\n    var height = this.documentHelper.textHelper.getHeight(format).Height;\n    if (height > maxLineHeight) {\n      height = maxLineHeight;\n    }\n    return {\n      'height': height,\n      'topMargin': topMargin,\n      'isItalic': isItalic\n    };\n  };\n  Selection.prototype.getFieldCharacterHeight = function (startInline, format, isEmptySelection, topMargin, isItalic) {\n    var nextValidInline = this.getNextValidElementForField(startInline);\n    //If field separator/end exists at end of paragraph, then move to next paragraph.\n    if (isNullOrUndefined(nextValidInline)) {\n      var nextParagraph = startInline.line.paragraph;\n      var height = this.documentHelper.textHelper.getParagraphMarkSize(format).Height;\n      var top_3 = 0;\n      var bottom = 0;\n      var sizeInfo = this.getParagraphMarkSize(nextParagraph, top_3, bottom);\n      var maxLineHeight = sizeInfo.height;\n      top_3 = sizeInfo.topMargin;\n      bottom = sizeInfo.bottomMargin;\n      if (!isEmptySelection) {\n        maxLineHeight += bottom;\n        return {\n          'height': maxLineHeight,\n          'topMargin': topMargin,\n          'isItalic': isItalic\n        };\n      }\n      if (height > maxLineHeight) {\n        height = maxLineHeight;\n      }\n      return {\n        'height': height,\n        'topMargin': topMargin,\n        'isItalic': isItalic\n      };\n    } else {\n      return this.getCaretHeight(nextValidInline, 0, format, isEmptySelection, topMargin, isItalic);\n    }\n  };\n  /**\n   * Get rendered inline\n   *\n   * @private\n   */\n  //FieldCharacter\n  Selection.prototype.getRenderedInline = function (inline, inlineIndex) {\n    if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n      return {\n        'element': inline,\n        'index': inlineIndex\n      };\n    }\n    var prevInline = this.getPreviousValidElement(inline);\n    while (prevInline instanceof FieldElementBox) {\n      prevInline = this.getPreviousTextElement(prevInline);\n      if (prevInline instanceof FieldElementBox) {\n        prevInline = prevInline.previousNode;\n      }\n    }\n    if (!isNullOrUndefined(prevInline)) {\n      inlineIndex = prevInline.length;\n      return {\n        'element': prevInline,\n        'index': inlineIndex\n      };\n    }\n    inlineIndex = 0;\n    var nextInline = this.getNextRenderedElementBox(inline, 0);\n    if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n      nextInline = nextInline.fieldSeparator;\n      nextInline = nextInline.nextNode;\n      while (nextInline instanceof FieldElementBox) {\n        if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0 && HelperMethods.isLinkedFieldCharacter(nextInline)) {\n          if (isNullOrUndefined(nextInline.fieldSeparator)) {\n            nextInline = nextInline.fieldEnd;\n          } else {\n            nextInline = nextInline.fieldSeparator;\n          }\n        }\n        nextInline = nextInline.nextNode;\n      }\n    }\n    return {\n      'element': nextInline,\n      'index': inlineIndex\n    };\n  };\n  //Field Begin\n  /**\n   * Get rendered field\n   *\n   * @private\n   */\n  Selection.prototype.getRenderedField = function (fieldBegin) {\n    var inline = fieldBegin;\n    if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n      inline = fieldBegin.fieldEnd;\n    } else {\n      inline = fieldBegin.fieldSeparator;\n      var paragraph = inline.line.paragraph;\n      if (paragraph === fieldBegin.fieldEnd.line.paragraph && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n        inline = fieldBegin.fieldEnd;\n      } else {\n        return inline;\n      }\n    }\n    return inline;\n  };\n  /**\n   * Return true is inline is tha last inline\n   *\n   * @private\n   */\n  Selection.prototype.isLastRenderedInline = function (inline, index) {\n    while (index === inline.length && inline.nextNode instanceof FieldElementBox) {\n      var nextValidInline = this.getNextValidElement(inline.nextNode);\n      index = 0;\n      if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n        inline = nextValidInline;\n      }\n      if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n        var fieldBegin = inline;\n        if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n          inline = fieldBegin.fieldEnd;\n          index = 1;\n        } else {\n          inline = fieldBegin.fieldSeparator;\n          var paragraph = inline.line.paragraph;\n          index = 1;\n          if (paragraph === fieldBegin.fieldEnd.line.paragraph && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n            inline = fieldBegin.fieldEnd;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    return index === inline.length && isNullOrUndefined(inline.nextNode);\n  };\n  /**\n   * Get page\n   *\n   * @private\n   */\n  Selection.prototype.getPage = function (widget) {\n    var page = undefined;\n    if (widget.containerWidget instanceof TextFrame) {\n      var shape = widget.containerWidget.containerShape;\n      if (shape.line) {\n        page = this.getPage(shape.line.paragraph);\n      }\n    } else if (widget.containerWidget instanceof BlockContainer) {\n      var bodyWidget = widget.containerWidget;\n      page = widget.containerWidget.page;\n    } else if (!isNullOrUndefined(widget.containerWidget)) {\n      page = this.getPage(widget.containerWidget);\n    }\n    return page;\n  };\n  /**\n   * Clear Selection highlight\n   *\n   * @private\n   */\n  Selection.prototype.clearSelectionHighlightInSelectedWidgets = function () {\n    var isNonEmptySelection = false;\n    var widgets = this.selectedWidgets.keys;\n    if (!this.viewer.documentHelper.isDragStarted) {\n      for (var i = 0; i < widgets.length; i++) {\n        this.removeSelectionHighlight(widgets[i]);\n        isNonEmptySelection = true;\n      }\n      this.selectedWidgets.clear();\n    }\n    return isNonEmptySelection;\n  };\n  /**\n   * Clear selection highlight\n   *\n   * @private\n   */\n  Selection.prototype.clearChildSelectionHighlight = function (widget) {\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      if (widget.childWidgets[i] instanceof LineWidget) {\n        this.clearSelectionHighlightLineWidget(widget.childWidgets[i]);\n      } else if (widget.childWidgets[i] instanceof TableCellWidget) {\n        this.clearSelectionHighlight(widget.childWidgets[i]);\n      } else if (widget.childWidgets[i] instanceof Widget) {\n        this.clearChildSelectionHighlight(widget.childWidgets[i]);\n      }\n    }\n  };\n  /**\n   * Get line widget from paragraph widget\n   *\n   * @private\n   */\n  //Body Widget \n  Selection.prototype.getLineWidgetBodyWidget = function (widget, point, isGetFirstChild) {\n    isGetFirstChild = isNullOrUndefined(isGetFirstChild) ? true : isGetFirstChild;\n    var bodyWgt = widget;\n    if (bodyWgt instanceof BlockContainer) {\n      for (var x = 0; x < bodyWgt.floatingElements.length; x++) {\n        var floatWidget = bodyWgt.floatingElements[x];\n        if (floatWidget instanceof TableWidget) {\n          var floatWidgetWidth = floatWidget.getTableCellWidth();\n          if (point.x <= floatWidget.x + floatWidgetWidth && point.x >= floatWidget.x && point.y <= floatWidget.y + floatWidget.height && point.y >= floatWidget.y) {\n            return this.getLineWidgetTableWidget(floatWidget, point);\n          }\n        } else if (floatWidget instanceof ShapeBase && floatWidget.x <= point.x && floatWidget.x + floatWidget.width >= point.x && floatWidget.y <= point.y && floatWidget.y + floatWidget.height >= point.y) {\n          return floatWidget.line;\n        }\n      }\n    }\n    if (widget instanceof FootNoteWidget) {\n      var selectionBody = void 0;\n      var isFit = false;\n      for (var j = 0; j < widget.bodyWidgets.length; j++) {\n        if (widget.sectionFormat.columns.length <= 1) {\n          for (var k = 0; k < widget.bodyWidgets[j].childWidgets.length; k++) {\n            var footChild = widget.bodyWidgets[j].childWidgets[k];\n            if (footChild instanceof Widget && footChild.y <= point.y && footChild.y + footChild.height >= point.y) {\n              if (footChild instanceof ParagraphWidget) {\n                return this.getLineWidgetParaWidget(footChild, point);\n              } else {\n                return this.getLineWidgetTableWidget(footChild, point);\n              }\n            }\n          }\n        } else {\n          var bodyWidget = widget.bodyWidgets[j];\n          if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width >= point.x && bodyWidget.firstChild.x <= point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n            selectionBody = bodyWidget;\n          } else if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width < point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n            selectionBody = bodyWidget;\n          } else if (widget.x > point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y && !isFit) {\n            selectionBody = bodyWidget;\n            isFit = true;\n          }\n          if (j === widget.bodyWidgets.length - 1 && !isNullOrUndefined(selectionBody)) {\n            for (var k = 0; k < selectionBody.childWidgets.length; k++) {\n              var footChild = selectionBody.childWidgets[k];\n              if (footChild instanceof Widget && footChild.y <= point.y && footChild.y + footChild.height >= point.y) {\n                if (footChild instanceof ParagraphWidget) {\n                  return this.getLineWidgetParaWidget(footChild, point);\n                } else {\n                  return this.getLineWidgetTableWidget(footChild, point);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      var childWidget = widget.childWidgets[i];\n      if (childWidget instanceof FootNoteWidget) {\n        return childWidget[i];\n      } else {\n        if (childWidget instanceof Widget && childWidget.y <= point.y && childWidget.y + childWidget.height >= point.y) {\n          if (childWidget instanceof ParagraphWidget) {\n            // if ((childWidget as Widget).x <= point.x\n            // && ((childWidget as Widget).x + (childWidget as Widget).width) >= point.x) {\n            return this.getLineWidgetParaWidget(childWidget, point);\n            // }// return this.getLineWidgetParaWidget((childWidget as ParagraphWidget), point);\n          } else {\n            var table = childWidget;\n            if (table.wrapTextAround) {\n              continue;\n            }\n            return this.getLineWidgetTableWidget(table, point);\n          }\n        }\n      }\n    }\n    var line = undefined;\n    if (isGetFirstChild) {\n      if (widget.childWidgets.length > 0) {\n        var firstChild = widget.childWidgets[0];\n        if (firstChild instanceof Widget && firstChild.y <= point.y) {\n          if (widget.childWidgets[widget.childWidgets.length - 1] instanceof ParagraphWidget) {\n            for (var i = 0; i < widget.childWidgets.length; i++) {\n              line = this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n            }\n          } else {\n            for (var i = 0; i < widget.childWidgets.length; i++) {\n              line = this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n            }\n          }\n        } else {\n          var childWidget = undefined;\n          if (firstChild instanceof Widget) {\n            childWidget = firstChild;\n          }\n          if (!isNullOrUndefined(childWidget)) {\n            if (childWidget instanceof ParagraphWidget) {\n              line = this.getLineWidgetParaWidget(firstChild, point);\n            } else {\n              line = this.getLineWidgetTableWidget(firstChild, point);\n            }\n          }\n        }\n      }\n    }\n    return line;\n  };\n  //ParagraphWidget\n  /**\n   * Get line widget from paragraph widget\n   *\n   * @private\n   */\n  Selection.prototype.getLineWidgetParaWidget = function (widget, point) {\n    var childWidgets = widget.childWidgets;\n    var top = widget.y;\n    for (var i = 0; i < childWidgets.length; i++) {\n      var line = childWidgets[i];\n      top += line.marginTop;\n      var lineTotalHeight = line.height;\n      if (line.nextLine && line.nextLine.marginTop > 0) {\n        lineTotalHeight += line.nextLine.marginTop;\n      }\n      if (top <= point.y && top + lineTotalHeight >= point.y) {\n        return line;\n      }\n      top += line.height;\n    }\n    var lineWidget = undefined;\n    if (childWidgets.length > 0) {\n      if (widget.y <= point.y) {\n        lineWidget = childWidgets[childWidgets.length - 1];\n      } else {\n        lineWidget = childWidgets[0];\n      }\n    }\n    return lineWidget;\n  };\n  Selection.prototype.highlightParagraph = function (widget, startIndex, endLine, endElement, endIndex) {\n    var top = 0;\n    var width = 0;\n    var isRtlText = false;\n    if (widget.paragraphFormat.bidi && endLine.children.indexOf(endElement) > 0) {\n      endElement = endLine.children[0];\n    }\n    for (var i = startIndex; i < widget.childWidgets.length; i++) {\n      var line = widget.childWidgets[i];\n      if (i === startIndex) {\n        top = this.getTop(line);\n      } else {\n        top += line.marginTop;\n      }\n      if (endElement instanceof TextElementBox) {\n        isRtlText = endElement.isRightToLeft;\n      }\n      var left = this.getLeft(line);\n      if (line === endLine) {\n        //Selection ends in current line.\n        var right = 0;\n        // highlighting approach for normal and rtl text.\n        if (isRtlText || widget.bidi) {\n          var elementBoxCollection = this.getElementsBackward(line, endElement, endElement, widget.bidi);\n          for (var i_2 = 0; i_2 < elementBoxCollection.length; i_2++) {\n            var element = elementBoxCollection[i_2];\n            var elementIsRTL = false;\n            if (element === endElement) {\n              right = this.getLeftInternal(line, element, element.length);\n            } else {\n              var index = element instanceof TextElementBox ? element.length : 1;\n              right = this.getLeftInternal(line, element, index);\n            }\n            left = this.getLeftInternal(line, element, 0);\n            if (element instanceof TextElementBox) {\n              elementIsRTL = element.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            // Handled the paragraph mark highliting as special case.\n            if (element === endElement && element instanceof TextElementBox && endIndex > element.length) {\n              var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(element.line.paragraph.characterFormat).Width;\n              if (!widget.bidi && elementIsRTL) {\n                right += paragraphMarkWidth;\n              } else if (widget.bidi && !elementIsRTL) {\n                // Paragrph and Selection ends in normal text\n                width -= paragraphMarkWidth;\n                // Highlight the element.\n                this.createHighlightBorder(line, width, left, top, true);\n                // Highlight the paragraph mark of Bidi paragrph.\n                left = this.getLineStartLeft(line) - paragraphMarkWidth;\n                this.createHighlightBorder(line, paragraphMarkWidth, left, top, true);\n                // continue to next element.\n                continue;\n              }\n            }\n            this.createHighlightBorder(line, width, elementIsRTL ? right : left, top, true);\n          }\n          return;\n        } else {\n          right = this.getLeftInternal(endLine, endElement, endIndex);\n          width = Math.abs(right - left);\n          this.createHighlightBorder(line, width, isRtlText ? right : left, top, false);\n          return;\n        }\n      } else {\n        width = this.getWidth(line, true) - (left - widget.x);\n        // Highlight the paragrph mark for Bidi paragrph.\n        if (widget.bidi && line.isLastLine()) {\n          left -= this.documentHelper.textHelper.getParagraphMarkSize(widget.characterFormat).Width;\n        }\n        this.createHighlightBorder(line, width, left, top, false);\n        top += line.height;\n      }\n    }\n  };\n  //Table Widget\n  /**\n   * Get line widget form table widget\n   *\n   * @private\n   */\n  Selection.prototype.getLineWidgetTableWidget = function (widget, point) {\n    var lineWidget = undefined;\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      //Removed the height condition check to handle the vertically merged cells.\n      var childWidget = widget.childWidgets[i];\n      if (childWidget instanceof TableRowWidget && childWidget.y <= point.y) {\n        if (childWidget.rowFormat.heightType === 'Exactly' && childWidget.y + HelperMethods.convertPointToPixel(childWidget.rowFormat.height) < point.y) {\n          continue;\n        }\n        lineWidget = this.getLineWidgetRowWidget(childWidget, point);\n        var cellWidget = undefined;\n        if (!isNullOrUndefined(lineWidget) && lineWidget.paragraph.containerWidget instanceof TableCellWidget) {\n          cellWidget = lineWidget.paragraph.containerWidget;\n        }\n        var cellSpacing = 0;\n        var rowSpan = 0;\n        if (!isNullOrUndefined(cellWidget)) {\n          var tableWidget = cellWidget.ownerRow.containerWidget;\n          cellSpacing = HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n          rowSpan = cellWidget.cellFormat.rowSpan;\n        }\n        var leftCellSpacing = 0;\n        var rightCellSpacing = 0;\n        var topCellSpacing = 0;\n        var bottomCellSpacing = 0;\n        if (cellSpacing > 0) {\n          leftCellSpacing = cellWidget.cellIndex === 0 ? cellSpacing : cellSpacing / 2;\n          rightCellSpacing = cellWidget.cellIndex === cellWidget.ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n          var rowWidget = undefined;\n          if (cellWidget.containerWidget instanceof TableRowWidget) {\n            rowWidget = cellWidget.containerWidget;\n          }\n          var tableWidget = undefined;\n          if (cellWidget.containerWidget.containerWidget instanceof TableWidget) {\n            tableWidget = cellWidget.containerWidget.containerWidget;\n          }\n          if (!isNullOrUndefined(rowWidget) && !isNullOrUndefined(tableWidget)) {\n            topCellSpacing = cellWidget.ownerRow.rowIndex === 0 ? cellSpacing : cellSpacing / 2;\n            if (cellWidget.ownerRow.rowIndex + rowSpan === cellWidget.ownerTable.childWidgets.length) {\n              bottomCellSpacing = cellSpacing;\n            } else {\n              bottomCellSpacing = cellSpacing / 2;\n            }\n          }\n        }\n        if (!isNullOrUndefined(lineWidget) && lineWidget.paragraph.x <= point.x && lineWidget.paragraph.x + lineWidget.width >= point.x && lineWidget.paragraph.y <= point.y && this.getTop(lineWidget) + lineWidget.height >= point.y || !isNullOrUndefined(cellWidget) && cellWidget.x - cellWidget.margin.left - leftCellSpacing <= point.x && cellWidget.x + cellWidget.width + cellWidget.margin.right + rightCellSpacing >= point.x && cellWidget.y - cellWidget.margin.top - topCellSpacing <= point.y && cellWidget.y + cellWidget.height + cellWidget.margin.bottom + bottomCellSpacing >= point.y) {\n          break;\n        }\n      }\n    }\n    return lineWidget;\n  };\n  //TableRowWidget\n  /**\n   * Get line widget fom row\n   *\n   * @private\n   */\n  Selection.prototype.getLineWidgetRowWidget = function (widget, point) {\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      var cellSpacing = 0;\n      cellSpacing = HelperMethods.convertPointToPixel(widget.ownerTable.tableFormat.cellSpacing);\n      var leftCellSpacing = 0;\n      var rightCellSpacing = 0;\n      if (cellSpacing > 0) {\n        leftCellSpacing = widget.childWidgets[i].columnIndex === 0 ? cellSpacing : cellSpacing / 2;\n        rightCellSpacing = widget.childWidgets[i].cellIndex === widget.childWidgets[i].ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n      }\n      if (widget.childWidgets[i].x - widget.childWidgets[i].margin.left - leftCellSpacing <= point.x && widget.childWidgets[i].x + widget.childWidgets[i].width + widget.childWidgets[i].margin.right + rightCellSpacing >= point.x) {\n        return this.getLineWidgetCellWidget(widget.childWidgets[i], point);\n      }\n    }\n    var lineWidget = undefined;\n    if (widget.childWidgets.length > 0) {\n      if (widget.childWidgets[0].x <= point.x) {\n        lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n      } else {\n        lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[0], point);\n      }\n    }\n    return lineWidget;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getFirstBlock = function (cell) {\n    if (cell.childWidgets.length > 0) {\n      return cell.childWidgets[0];\n    }\n    return undefined;\n  };\n  //Table Cell Widget\n  /**\n   * Highlight selected cell widget\n   *\n   * @private\n   */\n  Selection.prototype.highlightCellWidget = function (widget) {\n    var widgets = [];\n    if (widget.previousSplitWidget || widget.nextSplitWidget) {\n      widgets = widget.getSplitWidgets();\n    } else {\n      widgets.push(widget);\n    }\n    for (var i = 0; i < widgets.length; i++) {\n      widget = widgets[i];\n      //Clears Selection highlight of the child widgets.\n      this.clearChildSelectionHighlight(widget);\n      //Highlights the entire cell.\n      this.createHighlightBorderInsideTable(widget);\n    }\n  };\n  /**\n   * Clear selection highlight\n   *\n   * @private\n   */\n  Selection.prototype.clearSelectionHighlight = function (widget) {\n    if (this.selectedWidgets.containsKey(widget)) {\n      this.removeSelectionHighlight(widget);\n      this.selectedWidgets.remove(widget);\n    }\n  };\n  /**\n   * Get line widget from cell widget\n   *\n   * @private\n   */\n  Selection.prototype.getLineWidgetCellWidget = function (widget, point) {\n    for (var i = 0; i < widget.childWidgets.length; i++) {\n      if (widget.childWidgets[i].y <= point.y && widget.childWidgets[i].y + widget.childWidgets[i].height >= point.y) {\n        if (widget.childWidgets[i] instanceof ParagraphWidget) {\n          return this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n        } else {\n          return this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n        }\n      }\n    }\n    var lineWidget = undefined;\n    if (widget.childWidgets.length > 0) {\n      if (widget.childWidgets[0].y - widget.margin.top <= point.y) {\n        if (widget.childWidgets[widget.childWidgets.length - 1] instanceof ParagraphWidget) {\n          lineWidget = this.getLineWidgetParaWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n        } else {\n          lineWidget = this.getLineWidgetTableWidget(widget.childWidgets[0], point);\n        }\n      }\n    }\n    return lineWidget;\n  };\n  //LineWidget\n  /**\n   * update text position\n   *\n   * @private\n   */\n  Selection.prototype.updateTextPosition = function (widget, point) {\n    var caretPosition = point;\n    var element = undefined;\n    var index = 0;\n    var isImageSelected = false;\n    if (this.owner.enableHeaderAndFooter) {\n      var headerFooterWidget = this.start.paragraph.bodyWidget;\n      if (headerFooterWidget.headerFooterType.indexOf('Header') != -1) {\n        this.comparePageWidthAndMargins(headerFooterWidget.page.headerWidget, headerFooterWidget.page);\n      } else {\n        this.comparePageWidthAndMargins(headerFooterWidget.page.footerWidget, headerFooterWidget.page);\n      }\n    }\n    var isImageSelectedObj = this.updateTextPositionIn(widget, element, index, point, false);\n    if (!isNullOrUndefined(isImageSelectedObj)) {\n      element = isImageSelectedObj.element;\n      index = isImageSelectedObj.index;\n      caretPosition = isImageSelectedObj.caretPosition;\n      isImageSelected = isImageSelectedObj.isImageSelected;\n      this.isImageSelected = isImageSelected;\n    }\n    if (isImageSelected) {\n      this.selectInternal(widget, element, index, caretPosition);\n      if (index === 0) {\n        this.extendForward();\n      } else {\n        this.extendBackward();\n      }\n    } else {\n      if (!isNullOrUndefined(this.owner.imageResizerModule)) {\n        this.owner.imageResizerModule.selectedImageWidget.clear();\n      }\n      this.selectInternal(widget, element, index, caretPosition);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.updateTextPositionIn = function (widget, inline, index, caretPosition, includeParagraphMark) {\n    var isImageSelected = false;\n    var top = this.getTop(widget);\n    var left = widget.paragraph.x;\n    var elementValues = this.getFirstElement(widget, left);\n    var element = elementValues.element;\n    var isRtlText = false;\n    var isParaBidi = false;\n    left = elementValues.left;\n    var children = widget.renderedElements;\n    if (isNullOrUndefined(element)) {\n      var topMargin = 0;\n      var bottomMargin = 0;\n      var size = this.getParagraphMarkSize(widget.paragraph, topMargin, bottomMargin);\n      topMargin = size.topMargin;\n      bottomMargin = size.bottomMargin;\n      var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? this.documentHelper.mouseDownOffset.x < left + size.width : true;\n      if (selectParaMark && includeParagraphMark && caretPosition.x > left + size.width / 2) {\n        left += size.width;\n        if (children.length > 0) {\n          inline = children[children.length - 1];\n          index = inline.length;\n        }\n        index++;\n      } else if (widget.paragraph.isEmpty() && widget.paragraph.bidi) {\n        left += size.width;\n      }\n      caretPosition = new Point(left, topMargin > 0 ? top + topMargin : top);\n    } else {\n      if (!isNullOrUndefined(element)) {\n        if (caretPosition.x > left + element.margin.left || element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n          var isInInline = false;\n          if (widget.paragraph.floatingElements.length > 0) {\n            isInInline = this.documentHelper.checkPointIsInLine(widget, caretPosition);\n          }\n          for (var i = children.indexOf(element); i < children.length; i++) {\n            element = children[i];\n            if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n              if (this.documentHelper.isInShapeBorder(element, caretPosition) && !this.documentHelper.isSelectionChangedOnMouseMoved && !isInInline) {\n                left = element.x;\n                top = element.y;\n                break;\n              }\n              continue;\n            }\n            var isCurrentParaBidi = false;\n            if (element instanceof ListTextElementBox || element instanceof TextElementBox) {\n              isCurrentParaBidi = element.line.paragraph.paragraphFormat.bidi;\n            }\n            if (caretPosition.x < left + element.margin.left + element.width + element.padding.left || i === children.length - 1 || children[i + 1] instanceof ListTextElementBox && isCurrentParaBidi) {\n              break;\n            }\n            left += element.margin.left + element.width + element.padding.left;\n          }\n          if (element instanceof TextElementBox) {\n            isRtlText = element.isRightToLeft;\n            isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n          }\n          if (caretPosition.x > left + element.margin.left + element.width + element.padding.left) {\n            //Line End\n            index = element instanceof TextElementBox ? element.length : 1;\n            if (isRtlText && isParaBidi) {\n              index = 0;\n            }\n            if (element instanceof TextElementBox && element.text !== \"\\v\" && element.text !== '\\f' && element.text !== String.fromCharCode(14) || includeParagraphMark) {\n              left += element.margin.left + element.width + element.padding.left;\n            }\n          } else if (element instanceof TextElementBox) {\n            if (element instanceof TextElementBox && isRtlText) {\n              left += element.width + element.padding.left;\n            }\n            var x = 0;\n            if (isRtlText) {\n              x = left + element.margin.left - caretPosition.x;\n            } else {\n              x = caretPosition.x - left - element.margin.left - element.padding.left;\n            }\n            left += element.margin.left + element.padding.left;\n            var prevWidth = 0;\n            var charIndex = 0;\n            for (var i = 1; i <= element.length; i++) {\n              var width = 0;\n              if (i === element.length) {\n                width = element.width + element.padding.left;\n              } else {\n                width = this.documentHelper.textHelper.getWidth(element.text.substr(0, i), element.characterFormat, element.scriptType);\n                element.trimEndWidth = width;\n              }\n              if (x < width || i === element.length) {\n                //Updates exact left position of the caret.\n                var charWidth = width - prevWidth;\n                if (x - prevWidth > charWidth / 2) {\n                  if (isRtlText) {\n                    left -= width;\n                  } else {\n                    left += width;\n                  }\n                  charIndex = i;\n                } else {\n                  if (isRtlText) {\n                    left -= prevWidth;\n                  } else {\n                    left += prevWidth;\n                  }\n                  charIndex = i - 1;\n                  if (i === 1 && element !== children[0] && !(children[0] instanceof ShapeBase && children[0].textWrappingStyle !== 'Inline')) {\n                    var curIndex = children.indexOf(element);\n                    if (!(children[curIndex - 1] instanceof ListTextElementBox) && !isRtlText) {\n                      element = children[curIndex - 1];\n                      if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline' && charIndex == 0 && !isNullOrUndefined(element.previousElement)) {\n                        element = children[children.indexOf(element) - 1];\n                      }\n                      charIndex = element instanceof TextElementBox ? element.length : 1;\n                    }\n                  }\n                }\n                break;\n              }\n              prevWidth = width;\n            }\n            index = charIndex;\n          } else {\n            isImageSelected = element instanceof ImageElementBox || element instanceof ShapeElementBox;\n            if (caretPosition.x - left - element.margin.left > element.width / 2) {\n              index = 1;\n              left += element.margin.left + element.width + element.padding.left;\n            } else if (element !== children[0] && !isImageSelected) {\n              var curIndex = children.indexOf(element);\n              if (!(children[curIndex - 1] instanceof ListTextElementBox)) {\n                element = children[curIndex - 1];\n                index = element instanceof TextElementBox ? element.length : 1;\n              }\n            }\n          }\n          if (element instanceof TextElementBox && (element.text === '\\v' || element.text === '\\f' || element.text === String.fromCharCode(14))) {\n            index = 0;\n          }\n        } else {\n          isRtlText = element.isRightToLeft;\n          isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n          if (element instanceof TextElementBox && (isParaBidi || isRtlText) && caretPosition.x < left + element.margin.left + element.width + element.padding.left) {\n            index = this.getTextLength(element.line, element) + element.length;\n          } else {\n            index = this.getTextLength(element.line, element);\n          }\n          left += element.margin.left;\n        }\n        if (element instanceof TextElementBox) {\n          top += element.margin.top > 0 ? element.margin.top : 0;\n        } else {\n          var textMetrics = this.documentHelper.textHelper.getHeight(element.characterFormat); //for ascent and descent\n          var height = element.height;\n          if (element instanceof BookmarkElementBox && !this.documentHelper.layout.hasValidElement(element.line.paragraph)) {\n            height = textMetrics.Height; //after text helper class\n          }\n          top += element.margin.top + height - textMetrics.BaselineOffset;\n        }\n        inline = element;\n        if (inline instanceof FieldElementBox && inline.fieldType === 2 && !isNullOrUndefined(inline.fieldBegin)) {\n          inline = inline.fieldBegin;\n          index = 0;\n        }\n        if (inline instanceof EditRangeEndElementBox) {\n          index = 0;\n        }\n        if (!isNullOrUndefined(inline.previousElement) && inline.previousElement instanceof ShapeBase && inline.previousElement.textWrappingStyle !== 'Inline' && index == 0) {\n          inline = inline.previousElement;\n        }\n        var inlineObj = this.validateTextPosition(inline, index);\n        inline = inlineObj.element;\n        index = inlineObj.index;\n        var isParagraphEnd = isNullOrUndefined(inline.nextNode) && index === inline.length;\n        var isLineEnd = inline.line.isEndsWithLineBreak && inline instanceof TextElementBox && inline.text === '\\v';\n        if (includeParagraphMark && inline.nextNode instanceof FieldElementBox && index === inline.length) {\n          isParagraphEnd = this.isLastRenderedInline(inline, index);\n        }\n        if (includeParagraphMark && isParagraphEnd || isLineEnd) {\n          var width = 0;\n          //Include width of Paragraph mark.\n          if (isParagraphEnd) {\n            width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n            var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? this.documentHelper.mouseDownOffset.x < left + width : true;\n            if (selectParaMark && caretPosition.x > left + width / 2) {\n              left += width;\n              index = inline.length + 1;\n            }\n            //Include width of line break mark.\n          } else if (isLineEnd) {\n            width = element.width + element.padding.left;\n            left += width;\n            // index = inline.length;\n          }\n        }\n        caretPosition = new Point(left, top);\n      }\n    }\n    return {\n      'element': inline,\n      'index': index,\n      'caretPosition': caretPosition,\n      'isImageSelected': isImageSelected\n    };\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.checkAllFloatingElements = function (widget, caretPosition) {\n    var bodyWidget;\n    var isShapeSelected = false;\n    var isInShapeBorder = false;\n    var floatElement;\n    if (!isNullOrUndefined(widget)) {\n      bodyWidget = widget.paragraph.bodyWidget;\n      isShapeSelected = false;\n      isInShapeBorder = false;\n      for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n        if (bodyWidget.floatingElements[i] instanceof TableWidget) {\n          continue;\n        }\n        floatElement = bodyWidget.floatingElements[i];\n        if (caretPosition.x < floatElement.x + floatElement.margin.left + floatElement.width && caretPosition.x > floatElement.x && caretPosition.y < floatElement.y + floatElement.margin.top + floatElement.height && caretPosition.y > floatElement.y) {\n          isShapeSelected = true;\n          if (this.documentHelper.isInShapeBorder(floatElement, caretPosition)) {\n            isInShapeBorder = true;\n          }\n          break;\n        }\n      }\n    }\n    return {\n      'element': floatElement,\n      'caretPosition': caretPosition,\n      'isShapeSelected': isShapeSelected,\n      'isInShapeBorder': isInShapeBorder\n    };\n  };\n  /**\n   * Get text length if the line widget\n   *\n   * @private\n   */\n  Selection.prototype.getTextLength = function (widget, element) {\n    var length = 0;\n    var renderedElement = widget.renderedElements;\n    var count = renderedElement.indexOf(element);\n    if (renderedElement.length > 0 && renderedElement[0] instanceof ListTextElementBox) {\n      if (renderedElement[1] instanceof ListTextElementBox) {\n        count -= 2;\n      } else {\n        count -= 1;\n      }\n    }\n    for (var i = 1; i < count; i++) {\n      length += renderedElement[i].length;\n    }\n    return length;\n  };\n  /**\n   * Get Line widget left\n   *\n   * @private\n   */\n  Selection.prototype.getLeft = function (widget) {\n    var left = widget.paragraph.x;\n    var paragraphFormat = widget.paragraph.paragraphFormat;\n    if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi && !(paragraphFormat.textAlignment === 'Right')) {\n      left += HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n    }\n    var renderedElements = widget.renderedElements;\n    for (var i = 0; i < renderedElements.length; i++) {\n      var element = renderedElements[i];\n      if (element instanceof ListTextElementBox && !paragraphFormat.bidi) {\n        //after list implementation\n        if (i === 0) {\n          left += element.margin.left + element.width;\n        } else {\n          left += element.width;\n        }\n      } else {\n        left += element.margin.left;\n        break;\n      }\n    }\n    return left;\n  };\n  /**\n   * Get line widget top\n   *\n   * @private\n   */\n  Selection.prototype.getTop = function (widget) {\n    var top = widget.paragraph.y;\n    var count = widget.paragraph.childWidgets.indexOf(widget);\n    for (var i = 0; i < count; i++) {\n      var line = widget.paragraph.childWidgets[i];\n      top = top + line.height + line.marginTop;\n    }\n    top += widget.marginTop;\n    return top;\n  };\n  /**\n   * Get first element the widget\n   *\n   * @private\n   */\n  Selection.prototype.getFirstElement = function (widget, left) {\n    var firstLineIndent = 0;\n    if (this.isParagraphFirstLine(widget) && !widget.paragraph.paragraphFormat.bidi) {\n      firstLineIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n    }\n    left += firstLineIndent;\n    var element = undefined;\n    var renderedChild = widget.renderedElements;\n    for (var i = 0; i < renderedChild.length; i++) {\n      element = renderedChild[i];\n      if (element instanceof ListTextElementBox || element instanceof CommentCharacterElementBox) {\n        if (widget.paragraph.paragraphFormat.bidi) {\n          left += element.margin.left;\n          element = undefined;\n          break;\n        }\n        left += element.margin.left + element.width;\n        element = undefined;\n        // }\n        //  else if (element instanceof FieldElementBox || element instanceof BookmarkElementBox\n        //     || (element.nextNode instanceof FieldElementBox && ((element.nextNode as FieldElementBox).fieldType === 2))) {\n        //     element = undefined;\n      } else {\n        break;\n      }\n    }\n    return {\n      'element': element,\n      'left': left\n    };\n  };\n  /**\n   * Return inline index\n   *\n   * @private\n   */\n  //ElementBox\n  Selection.prototype.getIndexInInline = function (elementBox) {\n    var indexInInline = 0;\n    if (elementBox instanceof TextElementBox) {\n      var count = elementBox.line.children.indexOf(elementBox);\n      for (var i = 0; i < count; i++) {\n        var element = elementBox.line.children[i];\n        if (element instanceof FieldElementBox || element instanceof ListTextElementBox) {\n          continue;\n        }\n        indexInInline += element.length;\n      }\n    }\n    return indexInInline;\n  };\n  /**\n   * Return true if widget is first inline of paragraph\n   *\n   * @private\n   */\n  Selection.prototype.isParagraphFirstLine = function (widget) {\n    if (isNullOrUndefined(widget.paragraph.previousSplitWidget) && widget === widget.paragraph.firstChild) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @param widget\n   * @private\n   */\n  Selection.prototype.isParagraphLastLine = function (widget) {\n    if (isNullOrUndefined(widget.paragraph.nextSplitWidget) && widget === widget.paragraph.lastChild) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Return line widget width\n   *\n   * @private\n   */\n  Selection.prototype.getWidth = function (widget, includeParagraphMark) {\n    var width = 0;\n    var paraFormat = widget.paragraph.paragraphFormat;\n    if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n      width += HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n    }\n    for (var i = 0; i < widget.children.length; i++) {\n      var elementBox = widget.children[i];\n      if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n        continue;\n      }\n      width += elementBox.margin.left + elementBox.width + elementBox.padding.left;\n    }\n    if (includeParagraphMark && widget.paragraph.childWidgets.indexOf(widget) === widget.paragraph.childWidgets.length - 1 && isNullOrUndefined(widget.paragraph.nextSplitWidget)) {\n      width += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n    }\n    return width;\n  };\n  /**\n   * Return line widget left\n   *\n   * @private\n   */\n  Selection.prototype.getLeftInternal = function (widget, elementBox, index) {\n    var left = widget.paragraph.x;\n    var paraFormat = widget.paragraph.paragraphFormat;\n    if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n      left += HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n    }\n    var renderedWidget = widget.renderedElements;\n    var count = renderedWidget.indexOf(elementBox);\n    if (renderedWidget.length === 1 && renderedWidget[0] instanceof ListTextElementBox || renderedWidget.length === 2 && renderedWidget[0] instanceof ListTextElementBox && renderedWidget[1] instanceof ListTextElementBox) {\n      count = renderedWidget.length;\n    }\n    var isFieldCode = false;\n    for (var i = 0; i < count; i++) {\n      var widgetInternal = renderedWidget[i];\n      if (widgetInternal instanceof FieldElementBox && widgetInternal.fieldType === 2) {\n        isFieldCode = false;\n      }\n      if (isFieldCode) {\n        continue;\n      }\n      if (widgetInternal instanceof ShapeBase && widgetInternal.textWrappingStyle !== 'Inline') {\n        continue;\n      }\n      if (i === 1 && widgetInternal instanceof ListTextElementBox) {\n        left += widgetInternal.width;\n      } else if (widgetInternal instanceof TabElementBox && elementBox === widgetInternal) {\n        left += widgetInternal.margin.left;\n      } else {\n        left += widgetInternal.margin.left + widgetInternal.width + widgetInternal.padding.left;\n      }\n      if (widgetInternal instanceof FieldElementBox && widgetInternal.fieldType === 0) {\n        isFieldCode = true;\n      }\n    }\n    var isRtlText = false;\n    var isParaBidi = widget.paragraph.bidi;\n    if (!isNullOrUndefined(elementBox)) {\n      isRtlText = elementBox.characterRange === CharacterRangeType.RightToLeft;\n      isParaBidi = elementBox.line.paragraph.paragraphFormat.bidi;\n      left += elementBox.margin.left + elementBox.padding.left;\n      if (elementBox instanceof ShapeBase && !isNullOrUndefined(elementBox.nextElement)) {\n        left += elementBox.nextElement.margin.left + elementBox.nextElement.padding.left;\n      }\n      if (isRtlText || this.documentHelper.moveCaretPosition === 1 && !isRtlText && isParaBidi) {\n        left += elementBox.width;\n      }\n    }\n    var width = 0;\n    if (elementBox instanceof TextElementBox) {\n      if (this.documentHelper.moveCaretPosition !== 0 && (isParaBidi || isRtlText)) {\n        if (isRtlText && isParaBidi && this.documentHelper.moveCaretPosition === 2 || isRtlText && !isParaBidi && this.documentHelper.moveCaretPosition === 1) {\n          left -= elementBox.width;\n        }\n        this.documentHelper.moveCaretPosition = 0;\n        return left;\n      }\n      if (index === elementBox.length && !isRtlText) {\n        left += elementBox.width;\n      } else if (index > elementBox.length) {\n        width = this.documentHelper.textHelper.getParagraphMarkWidth(elementBox.line.paragraph.characterFormat);\n        if (isRtlText) {\n          left -= elementBox.width + width;\n        } else {\n          left += elementBox.width + width;\n        }\n      } else {\n        if (index === elementBox.length && isRtlText && paraFormat.textAlignment === 'Justify') {\n          width = elementBox.width;\n        } else {\n          width = this.documentHelper.textHelper.getWidth(elementBox.text.substr(0, index), elementBox.characterFormat, elementBox.scriptType);\n        }\n        if (isRtlText) {\n          left -= width;\n        } else {\n          left += width;\n        }\n      }\n      this.documentHelper.moveCaretPosition = 0;\n    } else if (index > 0) {\n      if (!isNullOrUndefined(elementBox) && !(elementBox instanceof ListTextElementBox)) {\n        if (!(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n          left += elementBox.width;\n        }\n        if (index === 2) {\n          var paragraph = elementBox.line.paragraph;\n          left += this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n        }\n      } else {\n        left += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n      }\n    }\n    return left;\n  };\n  /**\n   * Return line widget start offset\n   * @private\n   */\n  Selection.prototype.getLineStartLeft = function (widget) {\n    var left = widget.paragraph.x;\n    var paragraphFormat = widget.paragraph.paragraphFormat;\n    if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi) {\n      left += HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n    }\n    if (widget.children.length > 0) {\n      left += widget.children[0].margin.left;\n    }\n    return left;\n  };\n  /**\n   * Update text position\n   * @private\n   */\n  Selection.prototype.updateTextPositionWidget = function (widget, point, textPosition, includeParagraphMark) {\n    var caretPosition = point;\n    var inline = undefined;\n    var index = 0;\n    var updatePositionObj;\n    updatePositionObj = this.updateTextPositionIn(widget, inline, index, caretPosition, includeParagraphMark);\n    inline = updatePositionObj.element;\n    index = updatePositionObj.index;\n    caretPosition = updatePositionObj.caretPosition;\n    textPosition.setPositionForSelection(widget, inline, index, caretPosition);\n  };\n  /**\n   * Clear selection highlight\n   * @private\n   */\n  Selection.prototype.clearSelectionHighlightLineWidget = function (widget) {\n    if (!isNullOrUndefined(this.owner) && this.selectedWidgets.length > 0) {\n      this.clearSelectionHighlight(this);\n    }\n  };\n  /**\n   * Return first element from line widget\n   * @private\n   */\n  Selection.prototype.getFirstElementInternal = function (widget) {\n    var element = undefined;\n    var childLen = widget.children.length;\n    for (var i = 0; i < childLen; i++) {\n      element = widget.children[i];\n      if (element instanceof ListTextElementBox) {\n        element = undefined;\n      } else {\n        break;\n      }\n    }\n    return element;\n  };\n  //Selection API    \n  /**\n   * Select content between given range\n   * @private\n   */\n  Selection.prototype.selectRange = function (startPosition, endPosition, isBookmark) {\n    this.start.setPositionInternal(startPosition);\n    this.end.setPositionInternal(endPosition);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true, true, isBookmark);\n  };\n  /**\n   * Selects current paragraph\n   * @private\n   */\n  Selection.prototype.selectParagraphInternal = function (paragraph, positionAtStart) {\n    var line;\n    if (!isNullOrUndefined(paragraph) && !isNullOrUndefined(paragraph.firstChild)) {\n      line = paragraph.firstChild;\n      if (positionAtStart) {\n        this.start.setPosition(line, positionAtStart);\n      } else {\n        var endOffset = line.getEndOffset();\n        this.start.setPositionParagraph(line, endOffset);\n      }\n    }\n    this.end.setPositionInternal(this.start);\n    this.upDownSelectionLength = this.start.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.setPositionForBlock = function (block, selectFirstBlock) {\n    var position;\n    if (block instanceof TableWidget) {\n      if (selectFirstBlock) {\n        block = this.documentHelper.getFirstParagraphInFirstCell(block);\n      } else {\n        block = this.documentHelper.getLastParagraphInLastCell(block);\n      }\n    }\n    if (block instanceof ParagraphWidget) {\n      position = new TextPosition(this.owner);\n      if (selectFirstBlock) {\n        position.setPosition(block.firstChild, true);\n      } else {\n        var line = block.lastChild;\n        position.setPositionParagraph(line, line.getEndOffset());\n      }\n    }\n    return position;\n  };\n  /**\n   * Select content in given text position\n   * @private\n   */\n  Selection.prototype.selectContent = function (textPosition, clearMultiSelection) {\n    if (isNullOrUndefined(textPosition)) {\n      throw new Error('textPosition is undefined.');\n    }\n    this.start.setPositionInternal(textPosition);\n    this.end.setPositionInternal(textPosition);\n    this.upDownSelectionLength = this.end.location.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * Select paragraph\n   * @private\n   */\n  Selection.prototype.selectInternal = function (lineWidget, element, index, physicalLocation) {\n    this.start.setPositionForSelection(lineWidget, element, index, physicalLocation);\n    this.end.setPositionInternal(this.start);\n    this.upDownSelectionLength = physicalLocation.x;\n    this.fireSelectionChanged(true);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.selects = function (lineWidget, offset, skipSelectionChange) {\n    this.documentHelper.clearSelectionHighlight();\n    this.start.setPositionForLineWidget(lineWidget, offset);\n    this.end.setPositionInternal(this.start);\n    if (!skipSelectionChange) {\n      this.fireSelectionChanged(true);\n    }\n  };\n  /**\n   * Select content between start and end position\n   * @private\n   */\n  Selection.prototype.selectPosition = function (startPosition, endPosition) {\n    if (isNullOrUndefined(startPosition) || isNullOrUndefined(endPosition)) {\n      throw new Error('TextPosition cannot be undefined');\n    }\n    if (isNullOrUndefined(startPosition.paragraph) || startPosition.offset > this.getParagraphLength(startPosition.paragraph) + 1) {\n      throw new Error('Start TextPosition is not valid.');\n    }\n    if (isNullOrUndefined(endPosition.paragraph) || endPosition.offset > this.getParagraphLength(endPosition.paragraph) + 1) {\n      throw new Error('End TextPosition is not valid.');\n    }\n    if (startPosition.isAtSamePosition(endPosition)) {\n      // Select start position.\n      this.selectRange(startPosition, startPosition);\n    } else {\n      // If both text position exists within same comment or outside comment, and not at same position.\n      if (startPosition.isExistBefore(endPosition)) {\n        endPosition.validateForwardFieldSelection(startPosition.getHierarchicalIndexInternal(), endPosition.getHierarchicalIndexInternal());\n      } else {\n        startPosition.validateForwardFieldSelection(endPosition.getHierarchicalIndexInternal(), startPosition.getHierarchicalIndexInternal());\n      }\n      this.selectRange(startPosition, endPosition);\n    }\n  };\n  /**\n   * Notify selection change event\n   * @private\n   */\n  Selection.prototype.fireSelectionChanged = function (isSelectionChanged, isKeyBoardNavigation, isBookmark) {\n    if (!this.isEmpty) {\n      if (this.isForward) {\n        this.start.updatePhysicalPosition(true);\n        this.end.updatePhysicalPosition(false);\n      } else {\n        this.start.updatePhysicalPosition(false);\n        this.end.updatePhysicalPosition(true);\n      }\n    }\n    if (this.isModifyingSelectionInternally) {\n      return;\n    }\n    if (this.documentHelper.formFields.length > 0) {\n      this.currentFormField = this.getCurrentFormField();\n    } else {\n      this.currentFormField = undefined;\n    }\n    if (!isNullOrUndefined(this.previousSelectedFormField) && isNullOrUndefined(this.previousSelectedFormField.fieldSeparator)) {\n      this.previousSelectedFormField = this.currentFormField;\n    }\n    if (!this.skipFormatRetrieval) {\n      this.retrieveCurrentFormatProperties();\n    }\n    this.documentHelper.clearSelectionHighlight();\n    this.hideToolTip();\n    if (this.owner.isLayoutEnabled && !this.owner.isShiftingEnabled) {\n      this.highlightSelection(true, isBookmark);\n    }\n    if (this.documentHelper.restrictEditingPane.isShowRestrictPane && !this.skipEditRangeRetrieval) {\n      this.documentHelper.restrictEditingPane.updateUserInformation();\n    }\n    if (isSelectionChanged) {\n      if (this.start.paragraph.isInHeaderFooter && !this.owner.enableHeaderAndFooter) {\n        this.owner.enableHeaderAndFooter = true;\n      } else if (!this.start.paragraph.isInHeaderFooter && this.owner.enableHeaderAndFooter) {\n        this.owner.enableHeaderAndFooter = false;\n      }\n      this.owner.fireSelectionChange();\n    }\n    if (this.owner.enableAutoFocus) {\n      this.documentHelper.updateFocus();\n    }\n    if (this.documentHelper.isFormFillProtectedMode && isSelectionChanged) {\n      this.triggerFormFillEvent(isKeyBoardNavigation);\n      this.previousSelectedFormField = this.currentFormField;\n    }\n    if (this.owner.rulerHelper && this.owner.documentEditorSettings && this.owner.documentEditorSettings.showRuler && !this.owner.isReadOnlyMode) {\n      this.owner.rulerHelper.updateRuler(this.owner, false);\n    }\n  };\n  //Formats Retrieval\n  /**\n   * Retrieve all current selection format\n   * @private\n   */\n  Selection.prototype.retrieveCurrentFormatProperties = function () {\n    this.isRetrieveFormatting = true;\n    var startPosition = this.start;\n    var endPosition = this.end;\n    if (!this.isForward) {\n      startPosition = this.end;\n      endPosition = this.start;\n    }\n    this.retrieveImageFormat(startPosition, endPosition);\n    this.retrieveCharacterFormat(startPosition, endPosition);\n    this.retrieveParagraphFormat(startPosition, endPosition);\n    this.retrieveSectionFormat(startPosition, endPosition);\n    this.retrieveTableFormat(startPosition, endPosition);\n    this.isRetrieveFormatting = false;\n    this.setCurrentContextType();\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.retrieveImageFormat = function (start, end) {\n    var image;\n    if (start.currentWidget === end.currentWidget && start.offset + 1 === end.offset) {\n      var elementInfo = end.currentWidget.getInline(end.offset, 0);\n      image = elementInfo.element;\n      var index = elementInfo.index;\n      if (image instanceof ImageElementBox) {\n        var startOffset = start.currentWidget.getOffset(image, 0);\n        if (startOffset !== start.offset) {\n          image = undefined;\n        }\n      }\n    }\n    if (image instanceof ImageElementBox) {\n      this.imageFormat.copyImageFormat(image);\n    } else {\n      this.imageFormat.clearImageFormat();\n    }\n  };\n  /**\n   * Gets the context type of previous character or element.\n   * @param isElement - Decides whether to get previous context type from element or character. By default, character.\n   * @returns Returns the context type of previous character or element.\n   */\n  Selection.prototype.getPreviousContextType = function (isElement) {\n    var contextType;\n    var start = this.start;\n    if (start.offset > 0) {\n      var element = start.currentWidget.getInline(start.offset, 0).element;\n      if (isElement) {\n        element = element.previousElement;\n      } else {\n        element = start.currentWidget.getInline(start.offset - 1, 0).element;\n      }\n      contextType = this.getContextElement(element);\n      return contextType;\n    }\n    return undefined;\n  };\n  /**\n   * Gets the context type of next character or element.\n   * @param isElement - Decides whether to get next context type from element or character. By default, character.\n   * @return Returns the context type of next character or element.\n   */\n  Selection.prototype.getNextContextType = function (isElement) {\n    var contextType;\n    var start = this.start;\n    var element = start.currentWidget.getInline(start.offset, 0).element;\n    if (isElement && element.nextElement) {\n      element = element.nextElement;\n    } else {\n      element = start.currentWidget.getInline(start.offset + 1, 0).element;\n    }\n    contextType = this.getContextElement(element);\n    return contextType;\n  };\n  Selection.prototype.getContextElement = function (element) {\n    if (element instanceof TextElementBox) {\n      return 'Text';\n    } else if (element instanceof FieldElementBox || element instanceof FieldTextElementBox) {\n      return 'Field';\n    } else if (element instanceof BookmarkElementBox) {\n      return 'Bookmark';\n    } else if (element instanceof ImageElementBox) {\n      return 'Image';\n    } else if (element instanceof ShapeElementBox) {\n      return 'Shape';\n    } else if (element instanceof CommentElementBox || element instanceof CommentCharacterElementBox) {\n      return 'Comment';\n    } else if (element instanceof ListTextElementBox) {\n      return 'List';\n    } else if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n      return 'EditRange';\n    } else {\n      return undefined;\n    }\n  };\n  Selection.prototype.setCurrentContextType = function () {\n    var contextIsinImage = this.imageFormat.image ? true : false;\n    var contextIsinTable = isNullOrUndefined(this.tableFormat) || isNullOrUndefined(this.tableFormat.table) ? false : true;\n    var style = this.start.paragraph.paragraphFormat.baseStyle;\n    if (style instanceof WParagraphStyle && style.name.toLowerCase().indexOf('toc') === 0) {\n      var tocField = this.getTocFieldInternal();\n      if (!isNullOrUndefined(tocField)) {\n        this.contextTypeInternal = 'TableOfContents';\n        return;\n      }\n    }\n    var currentRevision = this.getCurrentRevision();\n    if (!isNullOrUndefined(currentRevision) && this.owner.showRevisions) {\n      this.owner.trackChangesPane.currentSelectedRevision = currentRevision[0];\n      if (isNullOrUndefined(this.owner.documentHelper.currentSelectedComment)) {\n        this.owner.commentReviewPane.selectReviewTab('Changes');\n      }\n      this.owner.notify('reviewPane', {\n        comment: this.owner.showComments,\n        changes: true,\n        isUserClosed: false\n      });\n    } else if (!isNullOrUndefined(this.owner.trackChangesPane.currentSelectedRevision)) {\n      this.owner.trackChangesPane.currentSelectedRevision = undefined;\n    }\n    if (this.start.paragraph.isInHeaderFooter) {\n      var isInHeader = this.start.paragraph.bodyWidget.headerFooterType.indexOf('Header') !== -1;\n      if (contextIsinTable) {\n        if (contextIsinImage) {\n          this.contextTypeInternal = isInHeader ? 'HeaderTableImage' : 'FooterTableImage';\n        } else {\n          this.contextTypeInternal = isInHeader ? 'HeaderTableText' : 'FooterTableText';\n        }\n      } else {\n        if (contextIsinImage) {\n          this.contextTypeInternal = isInHeader ? 'HeaderImage' : 'FooterImage';\n        } else {\n          this.contextTypeInternal = isInHeader ? 'HeaderText' : 'FooterText';\n        }\n      }\n    } else {\n      if (contextIsinTable) {\n        this.contextTypeInternal = contextIsinImage ? 'TableImage' : 'TableText';\n      } else {\n        this.contextTypeInternal = contextIsinImage ? 'Image' : 'Text';\n      }\n    }\n  };\n  Selection.prototype.addItemRevisions = function (currentItem, isFromAccept) {\n    for (var i = 0; i < currentItem.revisions.length; i++) {\n      var currentRevision = currentItem.revisions[i];\n      this.selectRevision(currentRevision);\n      if (isFromAccept) {\n        currentRevision.accept();\n      } else {\n        currentRevision.reject();\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.hasRevisions = function () {\n    if (this.getCurrentRevision()) {\n      return true;\n    }\n    return false;\n  };\n  Selection.prototype.getCurrentRevision = function () {\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    var elementInfo = start.currentWidget.getInline(start.offset, 0);\n    var currentElement = elementInfo.element;\n    var startPara = start.paragraph;\n    var nextOffsetElement = start.currentWidget.getInline(start.offset + 1, 0).element;\n    var eleEndPosition;\n    if (currentElement && currentElement === nextOffsetElement) {\n      var offset = currentElement.line.getOffset(currentElement, currentElement.length);\n      eleEndPosition = new TextPosition(this.owner);\n      eleEndPosition.setPositionParagraph(currentElement.line, offset);\n      if (end.offset === eleEndPosition.offset && !isNullOrUndefined(currentElement.nextElement)) {\n        return undefined;\n      }\n    }\n    if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n      return currentElement.revisions;\n    }\n    if (startPara.isInsideTable) {\n      var cellWidget = startPara.associatedCell;\n      if (!isNullOrUndefined(cellWidget.ownerRow) && cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n        return cellWidget.ownerRow.rowFormat.revisions;\n      }\n    }\n    if (end.offset > end.paragraph.getLength()) {\n      if (end.paragraph.characterFormat.revisions.length > 0) {\n        return end.paragraph.characterFormat.revisions;\n      }\n    }\n    return undefined;\n  };\n  Selection.prototype.processLineRevisions = function (linewidget, isFromAccept) {\n    for (var i = 0; i < linewidget.children.length; i++) {\n      var element = linewidget.children[i];\n      if (element.revisions.length > 0) {\n        this.addItemRevisions(element, isFromAccept);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param isFromAccept\n   */\n  Selection.prototype.handleAcceptReject = function (isFromAccept) {\n    if (this.isEmpty) {\n      var elementInfo = this.start.currentWidget.getInline(this.start.offset + 1, 0);\n      var currentElement = elementInfo.element;\n      var startPara = this.start.paragraph;\n      if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n        this.addItemRevisions(currentElement, isFromAccept);\n      }\n      if (startPara.isInsideTable) {\n        var cellWidget = startPara.associatedCell;\n        if (!isNullOrUndefined(cellWidget)) {\n          if (cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n            this.addItemRevisions(cellWidget.ownerRow.rowFormat, isFromAccept);\n          }\n        } else if (!startPara.isEmpty()) {\n          for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n            var paraWidget = cellWidget.childWidgets[i];\n            for (var lineIndex = void 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n              var linewidget = paraWidget.childWidgets[lineIndex];\n              this.processLineRevisions(linewidget, isFromAccept);\n            }\n          }\n        }\n      }\n    } else {\n      var revisions = this.getselectedRevisionElements();\n      for (var i = 0; i < revisions.length; i++) {\n        this.acceptReject(revisions[i], isFromAccept);\n      }\n    }\n  };\n  Selection.prototype.acceptReject = function (currentRevision, toAccept) {\n    this.selectRevision(currentRevision);\n    if (toAccept) {\n      currentRevision.accept();\n    } else {\n      currentRevision.reject();\n    }\n  };\n  Selection.prototype.getselectedRevisionElements = function () {\n    var revisionCollec = [];\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    for (var i = 0; i < this.selectedWidgets.length; i++) {\n      var currentWidget = this.selectedWidgets.keys[i];\n      if (currentWidget instanceof LineWidget) {\n        revisionCollec = this.getSelectedLineRevisions(currentWidget, start, end, revisionCollec);\n      } else if (currentWidget instanceof TableCellWidget) {\n        if (currentWidget.ownerRow.rowFormat.revisions.length > 0) {\n          revisionCollec = this.addRevisionsCollec(currentWidget.ownerRow.rowFormat.revisions, revisionCollec);\n        }\n        for (var i_3 = 0; i_3 < currentWidget.childWidgets.length; i_3++) {\n          var paraWidget = currentWidget.childWidgets[i_3];\n          for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n            var linewidget = paraWidget.childWidgets[lineIndex];\n            revisionCollec = this.getSelectedLineRevisions(linewidget, start, end, revisionCollec);\n          }\n        }\n      }\n    }\n    return revisionCollec;\n  };\n  Selection.prototype.getSelectedLineRevisions = function (currentWidget, start, end, elements) {\n    if (currentWidget.paragraph.characterFormat.revisions.length > 0) {\n      elements = this.addRevisionsCollec(currentWidget.paragraph.characterFormat.revisions, elements);\n    }\n    for (var j = 0; j < currentWidget.children.length; j++) {\n      var currentElement = currentWidget.children[j];\n      var offset = currentElement.line.getOffset(currentElement, 0);\n      var eleStartPosition = new TextPosition(this.owner);\n      eleStartPosition.setPositionParagraph(currentElement.line, offset);\n      offset = currentElement.line.getOffset(currentElement, currentElement.length);\n      var eleEndPosition = new TextPosition(this.owner);\n      eleEndPosition.setPositionParagraph(currentElement.line, offset);\n      if ((eleEndPosition.isExistAfter(start) && eleEndPosition.isExistBefore(end) || eleStartPosition.isExistAfter(start) && eleStartPosition.isExistBefore(end) || eleStartPosition.isAtSamePosition(start) || start.isExistAfter(eleStartPosition) && end.isExistBefore(eleEndPosition)) && currentElement.revisions.length > 0) {\n        elements = this.addRevisionsCollec(currentElement.revisions, elements);\n      }\n    }\n    return elements;\n  };\n  Selection.prototype.addRevisionsCollec = function (element, revisCollec) {\n    for (var i = 0; i < element.length; i++) {\n      if (revisCollec.indexOf(element[i]) === -1) {\n        revisCollec.push(element[i]);\n      }\n    }\n    return revisCollec;\n  };\n  //Table Format retrieval starts\n  /**\n   * Retrieve selection table format\n   * @private\n   */\n  Selection.prototype.retrieveTableFormat = function (start, end) {\n    var tableAdv = this.getTable(start, end);\n    if (!isNullOrUndefined(tableAdv)) {\n      this.tableFormat.table = tableAdv;\n      this.tableFormat.copyFormat(tableAdv.tableFormat);\n      this.retrieveCellFormat(start, end);\n      this.retrieveRowFormat(start, end);\n    } else {\n      //When the selection is out of table\n      this.tableFormat.clearFormat();\n    }\n  };\n  /**\n   * Retrieve selection cell format\n   * @private\n   */\n  Selection.prototype.retrieveCellFormat = function (start, end) {\n    if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n      this.cellFormat.copyFormat(start.paragraph.associatedCell.cellFormat);\n      this.getCellFormat(start.paragraph.associatedCell.ownerTable, start, end);\n    } else {\n      //When the selection is out of table\n      this.cellFormat.clearCellFormat();\n    }\n  };\n  /**\n   * Retrieve selection row format\n   * @private\n   */\n  Selection.prototype.retrieveRowFormat = function (start, end) {\n    if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n      this.rowFormat.copyFormat(start.paragraph.associatedCell.ownerRow.rowFormat);\n      this.getRowFormat(start.paragraph.associatedCell.ownerTable, start, end);\n    } else {\n      //When the selection is out of table\n      this.rowFormat.clearRowFormat();\n    }\n  };\n  /**\n   * Get selected cell format\n   * @private\n   */\n  Selection.prototype.getCellFormat = function (table, start, end) {\n    if (start.paragraph.associatedCell.equals(end.paragraph.associatedCell)) {\n      return;\n    }\n    var isStarted = false;\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row === start.paragraph.associatedCell.ownerRow) {\n        isStarted = true;\n      }\n      if (isStarted) {\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          var cell = row.childWidgets[j];\n          if (this.isCellSelected(cell, start, end)) {\n            this.cellFormat.combineFormat(cell.cellFormat);\n          }\n          if (cell === end.paragraph.associatedCell) {\n            this.cellFormat.combineFormat(cell.cellFormat);\n            return;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get selected row format\n   * @private\n   */\n  Selection.prototype.getRowFormat = function (table, start, end) {\n    var tableRow = start.paragraph.associatedCell.ownerRow;\n    if (tableRow === end.paragraph.associatedCell.ownerRow) {\n      return;\n    }\n    for (var i = table.childWidgets.indexOf(tableRow) + 1; i < table.childWidgets.length; i++) {\n      var tempTableRow = table.childWidgets[i];\n      this.rowFormat.combineFormat(tempTableRow.rowFormat);\n      if (tempTableRow === end.paragraph.associatedCell.ownerRow) {\n        return;\n      }\n    }\n  };\n  /**\n   * Return table with given text position\n   * @private\n   */\n  Selection.prototype.getTable = function (startPosition, endPosition) {\n    if (!isNullOrUndefined(startPosition.paragraph.associatedCell) && !isNullOrUndefined(endPosition.paragraph.associatedCell)) {\n      var startTable = startPosition.paragraph.associatedCell.ownerTable;\n      var endTable = startPosition.paragraph.associatedCell.ownerTable;\n      if (startTable === endTable) {\n        return startTable;\n      } else {\n        if (startTable.contains(startPosition.paragraph.associatedCell)) {\n          return startTable;\n        } else if (endTable.contains(startPosition.paragraph.associatedCell)) {\n          return endTable;\n        } else if (!startTable.isInsideTable || !endTable.isInsideTable) {\n          return undefined;\n        } else {\n          do {\n            startTable = startTable.associatedCell.ownerTable;\n            if (startTable === endTable || startTable.contains(endTable.associatedCell)) {\n              return startTable;\n            } else if (endTable.contains(startTable.associatedCell)) {\n              return endTable;\n            }\n          } while (!isNullOrUndefined(startTable.associatedCell));\n        }\n      }\n    }\n    return undefined;\n  };\n  Selection.prototype.getContainerWidget = function (block) {\n    var bodyWidget;\n    if (block.containerWidget instanceof TextFrame) {\n      bodyWidget = block.containerWidget.containerShape.line.paragraph.bodyWidget;\n    } else if (block.containerWidget instanceof BlockContainer) {\n      if (!isNullOrUndefined(block.containerWidget.containerWidget) && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n        bodyWidget = block.containerWidget.containerWidget;\n      } else {\n        bodyWidget = block.containerWidget;\n      }\n    } else {\n      bodyWidget = block.containerWidget;\n      while (!(bodyWidget instanceof BlockContainer)) {\n        if (bodyWidget instanceof TextFrame) {\n          bodyWidget = bodyWidget.containerShape.line.paragraph;\n        }\n        bodyWidget = bodyWidget.containerWidget;\n      }\n    }\n    return bodyWidget;\n  };\n  //Table format retrieval ends\n  //Section format retrieval starts\n  /**\n   * Retrieve selection section format\n   * @private\n   */\n  Selection.prototype.retrieveSectionFormat = function (start, end) {\n    var startParaSection = this.getContainerWidget(start.paragraph);\n    var endParaSection = this.getContainerWidget(end.paragraph);\n    if (!isNullOrUndefined(startParaSection)) {\n      this.sectionFormat.copyFormat(startParaSection.sectionFormat);\n      var startPageIndex = this.documentHelper.pages.indexOf(startParaSection.page);\n      var endPageIndex = this.documentHelper.pages.indexOf(endParaSection.page);\n      for (var i = startPageIndex + 1; i <= endPageIndex; i++) {\n        this.sectionFormat.combineFormat(this.documentHelper.pages[i].bodyWidgets[0].sectionFormat);\n      }\n    }\n  };\n  //section format retrieval ends.\n  //Paragraph format retrieval implementation starts.\n  /**\n   * Retrieve selection paragraph format\n   * @private\n   */\n  Selection.prototype.retrieveParagraphFormat = function (start, end) {\n    this.getParagraphFormatForSelection(start.paragraph, this, start, end);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatForSelection = function (paragraph, selection, start, end) {\n    //Selection start in cell.\n    if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable || start.paragraph.associatedCell !== end.paragraph.associatedCell || this.isCellSelected(start.paragraph.associatedCell, start, end))) {\n      this.getParagraphFormatInternalInCell(start.paragraph.associatedCell, start, end);\n    } else {\n      this.getParagraphFormatInternalInParagraph(paragraph, start, end);\n      if (end.paragraph === paragraph) {\n        return;\n      }\n      var block = this.getNextRenderedBlock(paragraph);\n      if (!isNullOrUndefined(block)) {\n        this.getParagraphFormatInternalInBlock(block, start, end);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphsInSelection = function () {\n    var selection = this.owner.selectionModule;\n    var selectedWidgets = selection.selectedWidgets.keys;\n    var paragraphsInSelection = [];\n    if (selection.isEmpty || selection.start.paragraph === selection.end.paragraph) {\n      return [selection.start.paragraph];\n    }\n    for (var i = 0; i < selectedWidgets.length; i++) {\n      var widget = selectedWidgets[i];\n      if (paragraphsInSelection.indexOf(widget.paragraph) === -1) {\n        paragraphsInSelection.push(widget.paragraph);\n      }\n    }\n    return paragraphsInSelection;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInternalInParagraph = function (paragraph, start, end) {\n    if (start.paragraph === paragraph) {\n      this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n    } else {\n      this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInternalInBlock = function (block, start, end) {\n    if (block instanceof ParagraphWidget) {\n      this.getParagraphFormatInternalInParagraph(block, start, end);\n      if (end.paragraph === block) {\n        return;\n      }\n      var para = this.getNextRenderedBlock(block);\n      if (!isNullOrUndefined(para)) {\n        this.getParagraphFormatInternalInBlock(para, start, end);\n      }\n    } else {\n      this.getParagraphFormatInternalInTable(block, start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInternalInTable = function (table, start, end) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var tableRow = table.childWidgets[i];\n      for (var j = 0; j < tableRow.childWidgets.length; j++) {\n        this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n      }\n      if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    var block = this.getNextRenderedBlock(table);\n    //Goto the next block.\n    this.getParagraphFormatInternalInBlock(block, start, end);\n  };\n  /**\n   * Get paragraph format in cell\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInCell = function (cell) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      this.getParagraphFormatInBlock(cell.childWidgets[i]);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInBlock = function (block) {\n    if (block instanceof ParagraphWidget) {\n      this.getParagraphFormatInParagraph(block);\n    } else {\n      this.getParagraphFormatInTable(block);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInTable = function (tableAdv) {\n    for (var i = 0; i < tableAdv.childWidgets.length; i++) {\n      var tableRow = tableAdv.childWidgets[i];\n      for (var j = 0; j < tableRow.childWidgets.length; j++) {\n        this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInParagraph = function (paragraph) {\n    if (this.start.paragraph === paragraph) {\n      this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n    } else {\n      this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n    }\n  };\n  /**\n   * Get paragraph format in cell\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInternalInCell = function (cellAdv, start, end) {\n    if (end.paragraph.isInsideTable) {\n      var containerCell = this.getContainerCellOf(cellAdv, end.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n        var startCell = this.getSelectedCell(cellAdv, containerCell);\n        var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n        if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (this.isCellSelected(containerCell, start, end)) {\n            this.getParagraphFormatInCell(containerCell);\n          } else {\n            if (startCell === containerCell) {\n              this.getParagraphFormatInternalInParagraph(start.paragraph, start, end);\n              if (end.paragraph === start.paragraph) {\n                return;\n              }\n              var block = this.getNextRenderedBlock(start.paragraph);\n              if (!isNullOrUndefined(block)) {\n                this.getParagraphFormatInternalInBlock(block, start, end);\n              }\n            } else {\n              this.getParagraphFormatInRow(startCell.ownerRow, start, end);\n            }\n          }\n        } else {\n          //Format other selected cells in current table.\n          this.getParaFormatForCell(containerCell.ownerTable, containerCell, endCell);\n        }\n      } else {\n        this.getParagraphFormatInRow(containerCell.ownerRow, start, end);\n      }\n    } else {\n      var cell = this.getContainerCell(cellAdv);\n      this.getParagraphFormatInRow(cell.ownerRow, start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getParaFormatForCell = function (table, startCell, endCell) {\n    var startCellIn = this.getCellLeft(startCell.ownerRow, startCell);\n    var endCellIn = startCellIn + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    if (startCellIn > endCellLeft) {\n      startCellIn = endCellLeft;\n    }\n    if (endCellIn < endCellRight) {\n      endCellIn = endCellRight;\n    }\n    if (startCellIn > this.upDownSelectionLength) {\n      startCellIn = this.upDownSelectionLength;\n    }\n    if (startCellIn < this.upDownSelectionLength) {\n      startCellIn = this.upDownSelectionLength;\n    }\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n      var tableRow = table.childWidgets[i];\n      for (var j = 0; j < tableRow.childWidgets.length; j++) {\n        var cell = tableRow.childWidgets[j];\n        var left = this.getCellLeft(tableRow, cell);\n        if (HelperMethods.round(startCellIn, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(endCellIn, 2)) {\n          this.getParagraphFormatInCell(cell);\n        }\n      }\n    }\n  };\n  /**\n   * Get paragraph format ins row\n   * @private\n   */\n  Selection.prototype.getParagraphFormatInRow = function (tableRow, start, end) {\n    for (var i = tableRow.rowIndex; i < tableRow.ownerTable.childWidgets.length; i++) {\n      var row = tableRow.ownerTable.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.getParagraphFormatInCell(row.childWidgets[j]);\n      }\n      if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    var block = this.getNextRenderedBlock(tableRow.ownerTable);\n    //Goto the next block.\n    this.getParagraphFormatInternalInBlock(block, start, end);\n  };\n  // paragraph format retrieval implementation ends\n  // Character format retrieval implementation starts.\n  /**\n   * Retrieve Selection character format\n   * @private\n   */\n  Selection.prototype.retrieveCharacterFormat = function (start, end) {\n    this.characterFormat.copyFormat(start.paragraph.characterFormat);\n    if (start.paragraph.isEmpty()) {\n      this.characterFormat.copyFormat(start.paragraph.characterFormat, this.documentHelper.textHelper.getFontNameToRender(0, start.paragraph.characterFormat));\n    }\n    if (start.paragraph === end.paragraph && start.currentWidget.isLastLine() && start.offset === this.getLineLength(start.currentWidget) && start.offset + 1 === end.offset) {\n      return;\n    }\n    var para = start.paragraph;\n    if (start.paragraph === end.paragraph && this.isSelectList) {\n      var listLevel = this.getListLevel(start.paragraph);\n      // let breakCharacterFormat: WCharacterFormat = start.paragraph.characterFormat;\n      if (listLevel && listLevel.characterFormat.uniqueCharacterFormat) {\n        this.characterFormat.copyFormat(listLevel.characterFormat);\n      }\n      return;\n    }\n    if (start.offset === this.getParagraphLength(para) && !this.isEmpty) {\n      para = this.getNextParagraphBlock(para);\n    }\n    while (!isNullOrUndefined(para) && para !== end.paragraph && para.isEmpty()) {\n      para = this.getNextParagraphBlock(para);\n    }\n    var offset = para === start.paragraph ? start.offset : 0;\n    var indexInInline = 0;\n    if (!isNullOrUndefined(para) && !para.isEmpty()) {\n      var position = new TextPosition(this.owner);\n      var elemInfo = start.currentWidget.getInline(offset, indexInInline);\n      var physicalLocation = this.getPhysicalPositionInternal(start.currentWidget, offset, true);\n      position.setPositionForSelection(start.currentWidget, elemInfo.element, elemInfo.index, physicalLocation);\n      this.getCharacterFormatForSelection(para, this, position, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCharacterFormatForSelection = function (paragraph, selection, startPosition, endPosition) {\n    //Selection start in cell.\n    if (startPosition.paragraph instanceof ParagraphWidget && startPosition.paragraph.isInsideTable && (!endPosition.paragraph.isInsideTable || startPosition.paragraph.associatedCell !== endPosition.paragraph.associatedCell || this.isCellSelected(startPosition.paragraph.associatedCell, startPosition, endPosition))) {\n      this.getCharacterFormatInTableCell(startPosition.paragraph.associatedCell, selection, startPosition, endPosition);\n    } else {\n      this.getCharacterFormat(paragraph, startPosition, endPosition);\n    }\n  };\n  /**\n   * Get Character format\n   * @private\n   */\n  //Format Retrieval\n  Selection.prototype.getCharacterFormatForTableRow = function (tableRowAdv, start, end) {\n    for (var i = tableRowAdv.rowIndex; i < tableRowAdv.ownerTable.childWidgets.length; i++) {\n      var tableRow = tableRowAdv.ownerTable.childWidgets[i];\n      for (var j = 0; j < tableRow.childWidgets.length; j++) {\n        this.getCharacterFormatForSelectionCell(tableRow.childWidgets[j], start, end);\n      }\n      if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    var block = this.getNextRenderedBlock(tableRowAdv.ownerTable);\n    // //Goto the next block.\n    this.getCharacterFormatForBlock(block, start, end);\n  };\n  /**\n   * Get Character format in table\n   * @private\n   */\n  Selection.prototype.getCharacterFormatInTableCell = function (tableCell, selection, start, end) {\n    if (end.paragraph.isInsideTable) {\n      var containerCell = this.getContainerCellOf(tableCell, end.paragraph.associatedCell);\n      if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n        var startCell = this.getSelectedCell(tableCell, containerCell);\n        var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n        if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n          //Selection end is in container cell.\n          if (this.isCellSelected(containerCell, start, end)) {\n            this.getCharacterFormatForSelectionCell(containerCell, start, end);\n          } else {\n            if (startCell === containerCell) {\n              this.getCharacterFormat(start.paragraph, start, end);\n            } else {\n              this.getCharacterFormatForTableRow(startCell.ownerRow, start, end);\n            }\n          }\n        } else {\n          //Format other selected cells in current table.\n          this.getCharacterFormatInternalInTable(containerCell.ownerTable, containerCell, endCell, start, end);\n        }\n      } else {\n        this.getCharacterFormatForTableRow(containerCell.ownerRow, start, end);\n      }\n    } else {\n      var cell = this.getContainerCell(tableCell);\n      this.getCharacterFormatForTableRow(cell.ownerRow, start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCharacterFormatInternalInTable = function (table, startCell, endCell, startPosition, endPosition) {\n    var startIn = this.getCellLeft(startCell.ownerRow, startCell);\n    var endIn = startIn + startCell.cellFormat.cellWidth;\n    var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n    var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n    if (startIn > endCellLeft) {\n      startIn = endCellLeft;\n    }\n    if (endIn < endCellRight) {\n      endIn = endCellRight;\n    }\n    if (startIn > this.upDownSelectionLength) {\n      startIn = this.upDownSelectionLength;\n    }\n    if (endIn < this.upDownSelectionLength) {\n      endIn = this.upDownSelectionLength;\n    }\n    var count = table.childWidgets.indexOf(endCell.ownerRow);\n    for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        var cell = row.childWidgets[j];\n        var left = this.getCellLeft(row, cell);\n        if (HelperMethods.round(startIn, 2) <= HelperMethods.round(left, 2) && HelperMethods.round(left, 2) < HelperMethods.round(endIn, 2)) {\n          this.getCharacterFormatForSelectionCell(cell, startPosition, endPosition);\n        }\n      }\n    }\n  };\n  /**\n   * Get character format with in selection\n   * @private\n   */\n  Selection.prototype.getCharacterFormat = function (paragraph, start, end) {\n    if (paragraph !== start.paragraph && paragraph !== end.paragraph && !paragraph.isEmpty()) {\n      this.getCharacterFormatInternal(paragraph, this);\n      if (!this.characterFormat.canRetrieveNextCharacterFormat()) return;\n    }\n    if (end.paragraph === paragraph && start.paragraph !== paragraph && end.offset === 0) {\n      return;\n    }\n    var startOffset = 0;\n    var length = this.getParagraphLength(paragraph);\n    if (paragraph === start.paragraph) {\n      startOffset = start.offset;\n      //Sets selection character format.            \n      var isUpdated = this.setCharacterFormat(paragraph, start, end, length);\n      if (isUpdated) {\n        return;\n      }\n    }\n    var startLineWidget = paragraph.childWidgets.indexOf(start.currentWidget) !== -1 ? paragraph.childWidgets.indexOf(start.currentWidget) : 0;\n    var endLineWidget = paragraph.childWidgets.indexOf(end.currentWidget) !== -1 ? paragraph.childWidgets.indexOf(end.currentWidget) : paragraph.childWidgets.length - 1;\n    var endOffset = end.offset;\n    if (paragraph !== end.paragraph) {\n      endOffset = length;\n    }\n    var isFieldStartSelected = false;\n    for (var i = startLineWidget; i <= endLineWidget; i++) {\n      var lineWidget = paragraph.childWidgets[i];\n      if (i !== startLineWidget) {\n        startOffset = this.getStartLineOffset(lineWidget);\n      }\n      if (lineWidget === end.currentWidget) {\n        endOffset = end.offset;\n      } else {\n        endOffset = this.getLineLength(lineWidget);\n      }\n      var count = 0;\n      for (var j = 0; j < lineWidget.children.length; j++) {\n        var inline = lineWidget.children[j];\n        if (inline instanceof ListTextElementBox) {\n          continue;\n        }\n        if (startOffset >= count + inline.length) {\n          count += inline.length;\n          continue;\n        }\n        if (inline instanceof FieldElementBox && inline.fieldType === 0 && HelperMethods.isLinkedFieldCharacter(inline)) {\n          var nextInline = isNullOrUndefined(inline.fieldEnd) ? inline.fieldBegin : inline.fieldEnd;\n          j--;\n          do {\n            this.characterFormat.combineFormat(inline.characterFormat);\n            count += inline.length;\n            inline = inline.nextNode;\n            i++;\n            j++;\n          } while (!isNullOrUndefined(inline) && inline !== nextInline);\n          continue;\n          //isFieldStartSelected = true;\n        }\n        // if (inline instanceof FieldElementBox && (inline as FieldElementBox).fieldType === 1\n        //     && HelperMethods.isLinkedFieldCharacter((inline as FieldElementBox)) && isFieldStartSelected) {\n        //     let fieldInline: ElementBox = (inline as FieldElementBox).fieldBegin;\n        //     do {\n        //         this.characterFormat.combineFormat(fieldInline.characterFormat);\n        //         fieldInline = fieldInline.nextNode as ElementBox;\n        //     } while (!(fieldInline instanceof FieldElementBox));\n        // }\n        if (inline instanceof TextElementBox || inline instanceof FieldElementBox) {\n          this.characterFormat.combineFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        }\n        if (isNullOrUndefined(inline) || endOffset <= count + inline.length) {\n          break;\n        }\n        count += inline.length;\n      }\n    }\n    if (end.paragraph === paragraph) {\n      return;\n    }\n    var block = this.getNextRenderedBlock(paragraph);\n    if (!isNullOrUndefined(block)) {\n      this.getCharacterFormatForBlock(block, start, end);\n    }\n  };\n  Selection.prototype.setCharacterFormat = function (para, startPos, endPos, length) {\n    var index = 0;\n    var startOffset = startPos.offset;\n    var inlineAndIndex = startPos.currentWidget.getInline(startOffset, index);\n    index = inlineAndIndex.index;\n    var inline = inlineAndIndex.element;\n    if (isNullOrUndefined(inline)) {\n      var currentLineIndex = startPos.paragraph.childWidgets.indexOf(startPos.currentWidget);\n      if (startPos.currentWidget.previousLine) {\n        inline = startPos.currentWidget.previousLine.children[startPos.currentWidget.previousLine.children.length - 1];\n        this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        return true;\n      }\n    }\n    if (startOffset < length) {\n      if (this.isEmpty) {\n        if (inline instanceof TextElementBox || inline instanceof FieldElementBox && (inline.fieldType === 0 || inline.fieldType === 1)) {\n          var previousNode = this.getPreviousTextElement(inline);\n          if (startOffset === 0 && previousNode) {\n            inline = previousNode;\n          }\n          this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        } else {\n          if (!isNullOrUndefined(this.getPreviousTextElement(inline))) {\n            var element = this.getPreviousTextElement(inline);\n            this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n          } else if (!isNullOrUndefined(this.getNextTextElement(inline))) {\n            var element = this.getNextTextElement(inline);\n            this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n          } else {\n            this.characterFormat.copyFormat(para.characterFormat);\n          }\n        }\n        return true;\n      } else {\n        if (index === inline.length && !isNullOrUndefined(inline.nextNode)) {\n          this.characterFormat.copyFormat(this.getNextValidCharacterFormat(inline), this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        } else if (inline instanceof TextElementBox) {\n          this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        } else if (inline instanceof FieldElementBox) {\n          this.characterFormat.copyFormat(this.getNextValidCharacterFormatOfField(inline));\n        }\n      }\n    } else {\n      if (length === endPos.offset) {\n        if (inline instanceof TextElementBox || inline instanceof FieldElementBox) {\n          this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n        } else if (!isNullOrUndefined(inline)) {\n          inline = this.getPreviousTextElement(inline);\n          if (!isNullOrUndefined(inline)) {\n            this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n          }\n        } else {\n          this.characterFormat.copyFormat(para.characterFormat);\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCharacterFormatForBlock = function (block, start, end) {\n    if (block instanceof ParagraphWidget) {\n      this.getCharacterFormat(block, start, end);\n    } else {\n      this.getCharacterFormatInTable(block, start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCharacterFormatInTable = function (table, start, end) {\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      for (var j = 0; j < row.childWidgets.length; j++) {\n        this.getCharacterFormatForSelectionCell(row.childWidgets[j], start, end);\n      }\n      if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n        return;\n      }\n    }\n    var blockAdv = this.getNextRenderedBlock(table);\n    // //Goto the next block.\n    if (!isNullOrUndefined(blockAdv)) {\n      this.getCharacterFormatForBlock(blockAdv, start, end);\n    }\n  };\n  /**\n   * Get character format in selection\n   * @private\n   */\n  Selection.prototype.getCharacterFormatForSelectionCell = function (cell, start, end) {\n    for (var i = 0; i < cell.childWidgets.length; i++) {\n      this.getCharacterFormatForBlock(cell.childWidgets[i], start, end);\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCharacterFormatInternal = function (paragraph, selection) {\n    for (var i = 0; i < paragraph.childWidgets.length; i++) {\n      var linewidget = paragraph.childWidgets[i];\n      for (var j = 0; j < linewidget.children.length; j++) {\n        var element = linewidget.children[j];\n        if (!(element instanceof ImageElementBox || element instanceof FieldElementBox || element instanceof ListTextElementBox)) {\n          selection.characterFormat.combineFormat(element.characterFormat);\n        }\n      }\n    }\n  };\n  /**\n   * Get next valid character format from inline\n   * @private\n   */\n  Selection.prototype.getNextValidCharacterFormat = function (inline) {\n    var startInline = this.getNextTextElement(inline);\n    if (isNullOrUndefined(startInline)) {\n      return inline.characterFormat;\n    }\n    var fieldBegin = undefined;\n    if (startInline instanceof FieldElementBox) {\n      if (fieldBegin.fieldType === 0) {\n        fieldBegin = startInline;\n      }\n    }\n    if (isNullOrUndefined(fieldBegin)) {\n      return startInline.characterFormat;\n    } else {\n      return this.getNextValidCharacterFormatOfField(fieldBegin);\n    }\n  };\n  /**\n   * Get next valid paragraph format from field\n   * @private\n   */\n  Selection.prototype.getNextValidCharacterFormatOfField = function (fieldBegin) {\n    var startInline = fieldBegin;\n    if (HelperMethods.isLinkedFieldCharacter(fieldBegin)) {\n      if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n        startInline = fieldBegin.fieldEnd;\n      } else {\n        startInline = fieldBegin.fieldSeparator;\n      }\n    }\n    var nextValidInline = undefined;\n    if (!isNullOrUndefined(startInline.nextNode)) {\n      //Check the next node is a valid and returns inline.\n      nextValidInline = this.getNextValidElement(startInline.nextNode);\n    }\n    //If field separator/end exists at end of paragraph, then move to next paragraph.\n    if (isNullOrUndefined(nextValidInline)) {\n      return startInline.characterFormat;\n    }\n    return nextValidInline.characterFormat;\n  };\n  /**\n   * Return true if cursor point with in selection range\n   * @private\n   */\n  Selection.prototype.checkCursorIsInSelection = function (widget, point) {\n    if (isNullOrUndefined(this.start) || this.isEmpty || isNullOrUndefined(widget)) {\n      return false;\n    }\n    var isSelected = false;\n    do {\n      if (this.selectedWidgets.containsKey(widget)) {\n        var top_4 = void 0;\n        var left = void 0;\n        if (widget instanceof LineWidget) {\n          top_4 = this.owner.selectionModule.getTop(widget);\n          left = this.owner.selectionModule.getLeft(widget);\n        } else {\n          top_4 = widget.y;\n          left = widget.x;\n        }\n        var widgetInfo = this.selectedWidgets.get(widget);\n        if (widgetInfo instanceof SelectionWidgetInfo) {\n          isSelected = widgetInfo.left <= point.x && top_4 <= point.y && top_4 + widget.height >= point.y && widgetInfo.left + widgetInfo.width >= point.x;\n        } else {\n          var widgetIn = widgetInfo;\n          for (var j = 0; j < widgetIn.length; j++) {\n            if (widgetIn[j] instanceof SelectionWidgetInfo) {\n              isSelected = widgetIn[j].left <= point.x && top_4 <= point.y && top_4 + widget.height >= point.y && widgetIn[j].left + widgetIn[j].width >= point.x;\n              if (isSelected) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      widget = widget instanceof LineWidget ? widget.paragraph : widget.containerWidget;\n    } while (!isNullOrUndefined(widget) && !isSelected);\n    return isSelected;\n  };\n  /**\n   * Copy paragraph for to selection paragraph format\n   * @private\n   */\n  Selection.prototype.copySelectionParagraphFormat = function () {\n    var format = new WParagraphFormat();\n    this.paragraphFormat.copyToFormat(format);\n    return format;\n  };\n  /**\n   * Get hyperlink display text\n   * @private\n   */\n  Selection.prototype.getHyperlinkDisplayText = function (paragraph, fieldSeparator, fieldEnd, isNestedField, format) {\n    var para = paragraph;\n    if (para !== fieldEnd.line.paragraph) {\n      isNestedField = true;\n      return {\n        displayText: '<<Selection in Document>>',\n        'isNestedField': isNestedField,\n        'format': format\n      };\n    }\n    var displayText = '';\n    var lineIndex = para.childWidgets.indexOf(fieldSeparator.line);\n    var index = para.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n    for (var j = lineIndex; j < para.childWidgets.length; j++) {\n      var lineWidget = para.childWidgets[j];\n      if (j !== lineIndex) {\n        index = -1;\n      }\n      for (var i = index + 1; i < lineWidget.children.length; i++) {\n        var inline = lineWidget.children[i];\n        if (inline === fieldEnd) {\n          return {\n            'displayText': displayText,\n            'isNestedField': isNestedField,\n            'format': format\n          };\n        }\n        if (inline instanceof TextElementBox) {\n          displayText += inline.text;\n          format = inline.characterFormat;\n        } else if (inline instanceof FieldElementBox) {\n          if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n            if (isNullOrUndefined(inline.fieldSeparator)) {\n              index = lineWidget.children.indexOf(inline.fieldEnd);\n            } else {\n              index = lineWidget.children.indexOf(inline.fieldSeparator);\n            }\n          }\n        } else {\n          isNestedField = true;\n          return {\n            'displayText': '<<Selection in Document>>',\n            'isNestedField': isNestedField,\n            'format': format\n          };\n        }\n      }\n    }\n    return {\n      'displayText': displayText,\n      'isNestedField': isNestedField,\n      'format': format\n    };\n  };\n  /**\n   * Navigates hyperlink on mouse Event.\n   * @private\n   */\n  Selection.prototype.navigateHyperLinkOnEvent = function (cursorPoint, isTouchInput) {\n    var _this = this;\n    var widget = this.documentHelper.getLineWidget(cursorPoint);\n    if (!isNullOrUndefined(widget)) {\n      var hyperLinkField = this.getHyperLinkFieldInCurrentSelection(widget, cursorPoint);\n      //Invokes Hyperlink navigation events.\n      if (!isNullOrUndefined(hyperLinkField)) {\n        this.documentHelper.updateTextPositionForSelection(cursorPoint, 1);\n        this.fireRequestNavigate(hyperLinkField);\n        setTimeout(function () {\n          if (_this.viewer) {\n            _this.documentHelper.isTouchInput = isTouchInput;\n            _this.documentHelper.updateFocus();\n            _this.documentHelper.isTouchInput = false;\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getLinkText = function (fieldBegin, copyAddress) {\n    var hyperlink = new Hyperlink(fieldBegin, this);\n    var link = hyperlink.navigationLink;\n    var screenTip = hyperlink.screenTip;\n    if (copyAddress) {\n      if (hyperlink.localReference.length > 0) {\n        if (hyperlink.localReference[0] === '_' && (isNullOrUndefined(link) || link.length === 0)) {\n          link = 'Current Document';\n        } else {\n          if (hyperlink.isCrossRef) {\n            link += hyperlink.localReference;\n          } else {\n            link += '#' + hyperlink.localReference;\n          }\n        }\n      }\n      hyperlink.destroy();\n      return link;\n    } else {\n      hyperlink.destroy();\n      return screenTip;\n    }\n  };\n  /**\n   * Set Hyperlink content to tool tip element\n   * @private\n   */\n  Selection.prototype.setHyperlinkContentToToolTip = function (fieldBegin, widget, xPos, isFormField) {\n    if (fieldBegin) {\n      if (this.owner.contextMenuModule && this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n        return;\n      }\n      if (!this.toolTipElement) {\n        this.toolTipElement = createElement('div', {\n          className: 'e-de-tooltip'\n        });\n        this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n        this.screenTipElement = createElement('p');\n        this.toolTipElement.appendChild(this.screenTipElement);\n        this.toolTipTextElement = createElement('p', {\n          styles: 'font-weight:bold'\n        });\n        this.toolTipElement.appendChild(this.toolTipTextElement);\n      }\n      this.toolTipElement.style.display = 'block';\n      var l10n = new L10n('documenteditor', this.owner.defaultLocale);\n      l10n.setLocale(this.owner.locale);\n      var toolTipText = l10n.getConstant('Click to follow link');\n      if (this.owner.useCtrlClickToFollowHyperlink) {\n        if (this.documentHelper.isIosDevice) {\n          toolTipText = 'Command+' + toolTipText;\n        } else {\n          toolTipText = 'Ctrl+' + toolTipText;\n        }\n      }\n      var linkText = this.getScreenTipText(fieldBegin);\n      if (isFormField) {\n        var helpText = fieldBegin.formFieldData.helpText;\n        if (isNullOrUndefined(helpText) || helpText === '') {\n          return;\n        }\n        this.screenTipElement.innerText = helpText;\n      } else {\n        this.screenTipElement.innerText = linkText;\n        this.toolTipTextElement.innerText = toolTipText;\n      }\n      var position = this.getTooltipPosition(fieldBegin.line, xPos, this.toolTipElement, false);\n      this.showToolTip(position.x, position.y);\n      if (!isNullOrUndefined(this.toolTipField) && fieldBegin !== this.toolTipField) {\n        this.toolTipObject.position = {\n          X: position.x,\n          Y: position.y\n        };\n      }\n      this.toolTipObject.show();\n      this.toolTipField = fieldBegin;\n    } else {\n      this.hideToolTip();\n    }\n  };\n  /**\n  * Get screenTip text\n  * @private\n  */\n  Selection.prototype.getScreenTipText = function (fieldBegin) {\n    var hyperlink = new Hyperlink(fieldBegin, this);\n    if (!hyperlink.screenTip && !hyperlink.localReference) {\n      return hyperlink.navigationLink;\n    } else if (hyperlink.screenTip) {\n      return hyperlink.screenTip;\n    } else {\n      return hyperlink.localReference;\n    }\n  };\n  /**\n   * Set Hyperlink content to tool tip element\n   * @private\n   */\n  Selection.prototype.setFootnoteContentToToolTip = function (footnote, widget, xPos) {\n    if (footnote) {\n      if (this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block' && this.owner.contextMenuModule) {\n        return;\n      }\n      if (!this.toolTipElement) {\n        this.toolTipElement = createElement('div', {\n          className: 'e-de-tooltip'\n        });\n        this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n      }\n      this.toolTipElement.style.display = 'block';\n      var ln = new L10n('documenteditor', this.owner.defaultLocale);\n      ln.setLocale(this.owner.locale);\n      var toolTipText = void 0;\n      if (footnote.footnoteType === 'Endnote') {\n        toolTipText = ln.getConstant('Click to View/Edit Endnote');\n      } else if (footnote.footnoteType === 'Footnote') {\n        toolTipText = ln.getConstant('Click to View/Edit Footnote');\n      }\n      this.toolTipElement.innerHTML = '<b>' + toolTipText + '</b>';\n      var positions = this.getTooltipPosition(footnote.line, xPos, this.toolTipElement, false);\n      this.showToolTip(positions.x, positions.y);\n      if (!isNullOrUndefined(this.toolTipField)) {\n        this.toolTipObject.position = {\n          X: positions.x,\n          Y: positions.y\n        };\n      }\n      this.toolTipObject.show();\n      // this.toolTipField = fieldBegin;\n    } else {\n      this.hideToolTip();\n    }\n  };\n  /**\n   * Set locked content info to tool tip element\n   * @private\n   */\n  Selection.prototype.setLockInfoTooptip = function (widget, xPos, user) {\n    if (widget) {\n      if (this.owner.contextMenuModule && this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n        return;\n      }\n      var toolTipElement = this.toolTipElement;\n      if (!this.toolTipElement) {\n        toolTipElement = createElement('div', {\n          className: 'e-de-tooltip'\n        });\n        this.documentHelper.viewerContainer.appendChild(toolTipElement);\n        this.toolTipElement = toolTipElement;\n      }\n      toolTipElement.style.display = 'block';\n      var l10n = new L10n('documenteditor', this.owner.defaultLocale);\n      l10n.setLocale(this.owner.locale);\n      var toolTipInfo = l10n.getConstant('This region is locked by');\n      toolTipElement.innerHTML = toolTipInfo + ' <b>' + user + '</b>';\n      var position = this.getTooltipPosition(widget, xPos, toolTipElement, false);\n      this.showToolTip(position.x, position.y);\n      if (!isNullOrUndefined(this.toolTipField) && user !== this.toolTipField) {\n        this.toolTipObject.position = {\n          X: position.x,\n          Y: position.y\n        };\n      }\n      this.toolTipObject.show();\n      this.toolTipField = user;\n    } else {\n      this.hideToolTip();\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getTooltipPosition = function (widget, xPos, toolTipElement, isFormField) {\n    var widgetTop = this.getTop(widget) * this.documentHelper.zoomFactor;\n    var page = this.getPage(widget.paragraph);\n    var containerWidth = this.documentHelper.viewerContainer.getBoundingClientRect().width + this.documentHelper.viewerContainer.scrollLeft;\n    var left = page.boundingRectangle.x + xPos * this.documentHelper.zoomFactor;\n    if (left + toolTipElement.clientWidth + 10 > containerWidth) {\n      left = left - (toolTipElement.clientWidth - (containerWidth - left) + 15);\n    }\n    var offsetHeight = !isFormField ? toolTipElement.offsetHeight : 0;\n    var top = this.getPageTop(page) + (widgetTop - offsetHeight);\n    top = top > this.documentHelper.viewerContainer.scrollTop ? top : top + widget.height + offsetHeight;\n    return new Point(left, top);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.updateSelectionInfo = function (info) {\n    var cells = this.selectedWidgets.keys;\n    if (cells[0] instanceof TableCellWidget && cells[cells.length - 1] instanceof TableCellWidget) {\n      if (cells.length > 0) {\n        var firstcell = cells[0];\n        var lastCell = cells[cells.length - 1];\n        var firstrow = firstcell.ownerRow;\n        var lastRow = lastCell.ownerRow;\n        var startCell = firstrow.getCell(firstrow.rowIndex, undefined, 0);\n        var firstPara = this.owner.documentHelper.getFirstParagraphInCell(startCell);\n        info.start = this.owner.documentHelper.selection.getHierarchicalIndex(firstPara, \"0\");\n        var lastCellInRow = lastRow.getCell(lastRow.rowIndex, undefined, lastRow.childWidgets.length - 1);\n        var lastPara = this.getLastParagraph(lastCellInRow);\n        var offset = this.getParagraphLength(lastPara);\n        info.end = this.owner.documentHelper.selection.getHierarchicalIndex(lastPara, offset.toString());\n      }\n    }\n    return info;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.createPasteElement = function (top, left) {\n    var items;\n    var locale = new L10n('documenteditor', this.owner.defaultLocale);\n    locale.setLocale(this.owner.locale);\n    switch (this.currentPasteAction) {\n      case 'DefaultPaste':\n        items = [{\n          text: locale.getConstant('Keep source formatting'),\n          iconCss: 'e-icons e-de-paste-source'\n        }, {\n          text: locale.getConstant('Match destination formatting'),\n          iconCss: 'e-icons e-de-paste-merge'\n        }, {\n          text: locale.getConstant('Text only'),\n          iconCss: 'e-icons e-de-paste-text'\n        }];\n        break;\n      case 'TextOnly':\n        items = [{\n          text: locale.getConstant('Text only'),\n          iconCss: 'e-icons e-de-paste-text'\n        }];\n        break;\n      case 'InsertAsColumns':\n      case 'OverwriteCells':\n      case 'InsertAsRows':\n        items = [{\n          text: locale.getConstant('NestTable'),\n          iconCss: 'e-icons e-de-paste-nested-table'\n        }, {\n          text: locale.getConstant('InsertAsRows'),\n          iconCss: 'e-icons e-de-paste-row'\n        }];\n        if (this.currentPasteAction === 'InsertAsColumns') {\n          var obj = {\n            text: locale.getConstant('InsertAsColumns'),\n            iconCss: 'e-icons e-de-paste-column'\n          };\n          items.unshift(obj);\n        } else if (this.currentPasteAction === 'OverwriteCells') {\n          var obj = {\n            text: locale.getConstant('OverwriteCells'),\n            iconCss: 'e-icons e-de-paste-overwrite-cells'\n          };\n          items.splice(2, 0, obj);\n        }\n        break;\n    }\n    if (!this.pasteElement) {\n      this.pasteElement = createElement('div', {\n        className: 'e-de-tooltip'\n      });\n      this.documentHelper.viewerContainer.appendChild(this.pasteElement);\n      var splitButtonEle = createElement('button', {\n        id: this.owner.containerId + '_iconsplitbtn'\n      });\n      this.pasteElement.appendChild(splitButtonEle);\n      this.pasteDropDwn = new DropDownButton({\n        items: items,\n        iconCss: 'e-icons e-de-paste',\n        select: this.pasteOptions\n      });\n      this.pasteDropDwn.appendTo(splitButtonEle);\n    } else {\n      this.pasteDropDwn.items = items;\n    }\n    this.pasteElement.style.display = 'block';\n    this.pasteElement.style.position = 'absolute';\n    this.pasteElement.style.left = left;\n    this.pasteElement.style.top = top;\n    this.pasteDropDwn.dataBind();\n  };\n  /**\n   * Show hyperlink tooltip\n   * @private\n   */\n  Selection.prototype.showToolTip = function (x, y) {\n    if (!this.toolTipObject) {\n      this.toolTipObject = new Popup(this.toolTipElement, {\n        height: 'auto',\n        width: 'auto',\n        relateTo: this.documentHelper.viewerContainer.parentElement,\n        position: {\n          X: x,\n          Y: y\n        }\n      });\n    }\n  };\n  /**\n   * Hide tooltip object\n   * @private\n   */\n  Selection.prototype.hideToolTip = function () {\n    this.toolTipField = undefined;\n    if (this.toolTipObject) {\n      this.toolTipElement.style.display = 'none';\n      this.toolTipObject.hide();\n      this.toolTipObject.destroy();\n      this.toolTipObject = undefined;\n    }\n  };\n  /**\n   * Return hyperlink field\n   * @private\n   */\n  Selection.prototype.getHyperLinkFieldInCurrentSelection = function (widget, cursorPosition, isFormField) {\n    var inline = undefined;\n    var top = this.getTop(widget);\n    var lineStartLeft = this.getLineStartLeft(widget);\n    var leftIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.leftIndent);\n    var rightIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.rightIndent);\n    if (cursorPosition.y < top || cursorPosition.y > top + widget.height || cursorPosition.x < lineStartLeft || cursorPosition.x > lineStartLeft + widget.paragraph.width + leftIndent + rightIndent) {\n      return undefined;\n    }\n    var left = widget.paragraph.x;\n    var elementValues = this.getFirstElement(widget, left);\n    left = elementValues.left;\n    var element = elementValues.element;\n    if (isNullOrUndefined(element)) {\n      var width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n      if (cursorPosition.x <= lineStartLeft + width || cursorPosition.x >= lineStartLeft + width) {\n        //Check if paragraph is within a field result.\n        var checkedFields = [];\n        var field = this.getHyperLinkFields(widget.paragraph, checkedFields, false, isFormField);\n        checkedFields = [];\n        checkedFields = undefined;\n        return field;\n      }\n    } else {\n      var renderedChild = widget.renderedElements;\n      if (cursorPosition.x > left + element.margin.left) {\n        for (var i = renderedChild.indexOf(element); i < renderedChild.length; i++) {\n          element = renderedChild[i];\n          if (cursorPosition.x < left + element.margin.left + element.width || i === renderedChild.length - 1) {\n            break;\n          }\n          left += element.margin.left + element.width;\n        }\n      }\n      inline = element;\n      var width = element.margin.left + element.width;\n      if (isNullOrUndefined(inline.nextNode)) {\n        //Include width of Paragraph mark.\n        width += this.documentHelper.textHelper.getParagraphMarkWidth(inline.line.paragraph.characterFormat);\n      }\n      if (cursorPosition.x <= left + width) {\n        //Check if inline is within a field result.\n        var checkedFields = [];\n        var field = this.getHyperLinkFieldInternal(inline.line.paragraph, inline, checkedFields, false, isFormField);\n        checkedFields = [];\n        checkedFields = undefined;\n        return field;\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Return FootnoteElementBox\n   * @private\n   */\n  Selection.prototype.getFootNoteElementInCurrentSelection = function (lineWidget, position) {\n    var inline = undefined;\n    var top = this.getTop(lineWidget);\n    var lineStartInLeft = this.getLineStartLeft(lineWidget);\n    if (position.y < top || position.y > top + lineWidget.height || position.x < lineStartInLeft || position.x > lineStartInLeft + lineWidget.paragraph.width) {\n      return undefined;\n    }\n    var leftLength = lineWidget.paragraph.x;\n    var elementValues = this.getFirstElement(lineWidget, leftLength);\n    leftLength = elementValues.left;\n    var element = elementValues.element;\n    if (isNullOrUndefined(element)) {\n      var width = this.documentHelper.textHelper.getParagraphMarkWidth(lineWidget.paragraph.characterFormat);\n      if (position.x <= lineStartInLeft + width || position.x >= lineStartInLeft + width) {\n        //Check if paragraph is within a field result.\n        var inlineObj = this.documentHelper.selection.start.currentWidget.getInline(this.documentHelper.selection.start.offset, 0);\n        var footNote = inlineObj.element;\n        if (footNote instanceof FootnoteElementBox) {\n          return footNote;\n        } else {\n          return undefined;\n        }\n      }\n    } else {\n      if (position.x > leftLength + element.margin.left) {\n        for (var i = lineWidget.children.indexOf(element); i < lineWidget.children.length; i++) {\n          element = lineWidget.children[i];\n          if (position.x < leftLength + element.margin.left + element.width || i === lineWidget.children.length - 1) {\n            break;\n          }\n          leftLength += element.margin.left + element.width;\n        }\n      }\n      if (element instanceof FootnoteElementBox) {\n        inline = element;\n      }\n      var width = element.margin.left + element.width;\n      if (isNullOrUndefined(element.nextNode)) {\n        //Include width of Paragraph mark.\n        width += this.documentHelper.textHelper.getParagraphMarkWidth(element.line.paragraph.characterFormat);\n      }\n      if (position.x <= leftLength + width) {\n        return inline;\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Return field if paragraph contain hyperlink field\n   * @private\n   */\n  Selection.prototype.getHyperlinkField = function (isRetrieve) {\n    if (isNullOrUndefined(this.end)) {\n      return undefined;\n    }\n    var index = 0;\n    var selection = this.documentHelper.selection;\n    var start = selection.start;\n    var end = selection.end;\n    if (!selection.isForward) {\n      start = selection.end;\n      end = selection.start;\n      ;\n    }\n    var currentInline = this.end.currentWidget.getInline(end.offset, index);\n    index = currentInline.index;\n    var inline = currentInline.element;\n    var checkedFields = [];\n    var field = undefined;\n    if (isNullOrUndefined(inline)) {\n      field = this.getHyperLinkFields(this.end.paragraph, checkedFields, isRetrieve);\n    } else if (this.documentHelper.isFormFillProtectedMode && inline instanceof BookmarkElementBox && inline.previousNode instanceof FieldElementBox && inline.previousNode.fieldType === 1) {\n      field = undefined;\n    } else {\n      var paragraph = inline.line.paragraph;\n      field = this.getHyperLinkFieldInternal(paragraph, inline, checkedFields, isRetrieve, false);\n    }\n    checkedFields = [];\n    return field;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getHyperLinkFields = function (paragraph, checkedFields, isRetrieve, checkFormField) {\n    for (var i = 0; i < this.documentHelper.fields.length; i++) {\n      if (checkedFields.indexOf(this.documentHelper.fields[i]) !== -1 || isNullOrUndefined(this.documentHelper.fields[i].fieldSeparator)) {\n        continue;\n      } else {\n        checkedFields.push(this.documentHelper.fields[i]);\n      }\n      var field = this.getFieldCode(this.documentHelper.fields[i]);\n      field = field.trim().toLowerCase();\n      var isParagraph = this.paragraphIsInFieldResult(this.documentHelper.fields[i], paragraph);\n      if ((isRetrieve || !isRetrieve && field.match('hyperlink ')) && isParagraph) {\n        return this.documentHelper.fields[i];\n      }\n      if (isParagraph && checkFormField && this.documentHelper.fields[i].formFieldData) {\n        return this.documentHelper.fields[i];\n      }\n      if ((isRetrieve || !isRetrieve && field.match('ref ')) && isParagraph) {\n        return this.documentHelper.fields[i];\n      }\n    }\n    // if (paragraph.containerWidget instanceof BodyWidget && !(paragraph instanceof WHeaderFooter)) {\n    //     return this.getHyperLinkFields((paragraph.con as WCompositeNode), checkedFields);\n    // }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getHyperLinkFieldInternal = function (paragraph, inline, fields, isRetrieve, checkFormField) {\n    for (var i = 0; i < this.documentHelper.fields.length; i++) {\n      if (fields.indexOf(this.documentHelper.fields[i]) !== -1 || isNullOrUndefined(this.documentHelper.fields[i].fieldSeparator)) {\n        continue;\n      } else {\n        fields.push(this.documentHelper.fields[i]);\n      }\n      var fieldCode = this.getFieldCode(this.documentHelper.fields[i]);\n      fieldCode = fieldCode.trim().toLowerCase();\n      var fieldBegin = this.documentHelper.fields[i];\n      var fieldEnd = fieldBegin.fieldEnd;\n      if (isRetrieve && fieldBegin.nextNode instanceof BookmarkElementBox && fieldBegin.nextNode.reference) {\n        fieldEnd = fieldBegin.nextNode.reference;\n      }\n      var isInline = this.inlineIsInFieldResult(fieldBegin, fieldEnd, fieldBegin.fieldSeparator, inline, isRetrieve) || this.isImageField();\n      if ((isRetrieve || !isRetrieve && fieldCode.match('hyperlink ')) && isInline) {\n        return this.documentHelper.fields[i];\n      }\n      if (isInline && checkFormField && this.documentHelper.fields[i].formFieldData) {\n        return this.documentHelper.fields[i];\n      }\n      if ((isRetrieve || !isRetrieve && fieldCode.match('ref ')) && isInline) {\n        return this.documentHelper.fields[i];\n      }\n    }\n    if (paragraph.containerWidget instanceof BodyWidget && !(paragraph instanceof HeaderFooterWidget)) {\n      return this.getHyperLinkFieldInternal(paragraph.containerWidget, inline, fields, isRetrieve, checkFormField);\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getBlock = function (currentIndex) {\n    if (currentIndex === '' || isNullOrUndefined(currentIndex)) {\n      return undefined;\n    }\n    var index = {\n      index: currentIndex\n    };\n    var page = this.start.getPage(index);\n    var bodyIndex = index.index.indexOf(';');\n    var value = index.index.substring(0, bodyIndex);\n    index.index = index.index.substring(bodyIndex).replace(';', '');\n    var bodyWidget = page.bodyWidgets[parseInt(value, 10)];\n    return this.getBlockInternal(bodyWidget, index.index);\n  };\n  /**\n   * Return Block relative to position\n   * @private\n   */\n  Selection.prototype.getBlockInternal = function (widget, position) {\n    if (position === '' || isNullOrUndefined(position)) {\n      return undefined;\n    }\n    var index = position.indexOf(';');\n    var value = position.substring(0, index);\n    position = position.substring(index).replace(';', '');\n    var node = widget;\n    // if (node instanceof Widget && value === 'HF') {\n    //     //Gets the block in Header footers.\n    //     let blockObj: BlockInfo = this.getBlock((node as WSection).headersFooters, position);\n    //     return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n    // }\n    index = parseInt(value, 10);\n    if (index >= 0 && index < widget.childWidgets.length) {\n      var child = widget.childWidgets[index];\n      if (position.indexOf(';') >= 0) {\n        if (child instanceof ParagraphWidget) {\n          if (position.indexOf(';') >= 0) {\n            position = '0';\n          }\n          return child;\n        }\n        if (child instanceof BlockWidget) {\n          var blockObj = this.getBlockInternal(child, position);\n          return blockObj;\n        }\n      } else {\n        return child;\n      }\n    } else {\n      return node;\n    }\n    return node;\n  };\n  /**\n   * Return true if inline is in field result\n   * @private\n   */\n  Selection.prototype.inlineIsInFieldResult = function (fieldBegin, fieldEnd, fieldSeparator, inline, isRetrieve) {\n    if (!isNullOrUndefined(fieldEnd) && !isNullOrUndefined(fieldSeparator)) {\n      if (this.isExistBeforeInline(fieldSeparator, inline)) {\n        return this.isExistAfterInline(fieldEnd, inline, isRetrieve);\n      }\n    }\n    return false;\n  };\n  /**\n   * Retrieve true if paragraph is in field result\n   * @private\n   */\n  Selection.prototype.paragraphIsInFieldResult = function (fieldBegin, paragraph) {\n    if (!isNullOrUndefined(fieldBegin.fieldEnd) && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n      var fieldParagraph = fieldBegin.fieldSeparator.line.paragraph;\n      if (fieldBegin.fieldSeparator.line.paragraph === paragraph || this.isExistBefore(fieldParagraph, paragraph)) {\n        var currentParagraph = fieldBegin.fieldEnd.line.paragraph;\n        return currentParagraph !== paragraph && this.isExistAfter(fieldParagraph, paragraph);\n      }\n    }\n    return false;\n  };\n  /**\n   * Return true if image is In field\n   * @private\n   */\n  Selection.prototype.isImageField = function () {\n    if (this.start.paragraph.isEmpty() || this.end.paragraph.isEmpty()) {\n      return false;\n    }\n    var startPosition = this.start;\n    var endPosition = this.end;\n    if (!this.isForward) {\n      startPosition = this.end;\n      endPosition = this.start;\n    }\n    var indexInInline = 0;\n    var inlineInfo = startPosition.paragraph.getInline(startPosition.offset, indexInInline);\n    var inline = inlineInfo.element;\n    indexInInline = inlineInfo.index;\n    if (indexInInline === inline.length) {\n      inline = this.getNextRenderedElementBox(inline, indexInInline);\n    }\n    inlineInfo = endPosition.paragraph.getInline(endPosition.offset, indexInInline);\n    var endInline = inlineInfo.element;\n    indexInInline = inlineInfo.index;\n    if (inline instanceof FieldElementBox && inline.fieldType === 0 && endInline instanceof FieldElementBox && endInline.fieldType === 1 && inline.fieldSeparator) {\n      var fieldValue = inline.fieldSeparator.nextNode;\n      if (fieldValue instanceof ImageElementBox && fieldValue.nextNode === endInline) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Return true if selection is in Form field\n   * @private\n   */\n  Selection.prototype.isFormField = function () {\n    var inline = this.currentFormField;\n    if (inline instanceof FieldElementBox && inline.formFieldData) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Return true if selection is in reference field\n   * @private\n   */\n  Selection.prototype.isReferenceField = function (field) {\n    if (isNullOrUndefined(field)) {\n      field = this.getHyperlinkField(true);\n    }\n    if (field) {\n      var fieldCode = this.getFieldCode(field);\n      fieldCode = fieldCode.toLowerCase();\n      if (field instanceof FieldElementBox && fieldCode.match('ref ')) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Return true if selection is in text form field\n   * @private\n   */\n  Selection.prototype.isInlineFormFillMode = function (field) {\n    if (this.documentHelper.isInlineFormFillProtectedMode) {\n      field = isNullOrUndefined(field) ? this.currentFormField : field;\n      if (isNullOrUndefined(field)) {\n        field = this.getCurrentFormField();\n      }\n      if (field) {\n        if (field.formFieldData instanceof TextFormField && field.formFieldData.type === 'Text') {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getFormFieldType = function (formField) {\n    if (isNullOrUndefined(formField)) {\n      formField = this.currentFormField;\n    }\n    if (formField instanceof FieldElementBox) {\n      if (formField.formFieldData instanceof TextFormField) {\n        return 'Text';\n      } else if (formField.formFieldData instanceof CheckBoxFormField) {\n        return 'CheckBox';\n      } else if (formField.formFieldData instanceof DropDownFormField) {\n        return 'DropDown';\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Get selected form field type\n   * @private\n   */\n  Selection.prototype.getCurrentFormField = function (checkFieldResult) {\n    var field;\n    if (checkFieldResult || this.documentHelper.isFormFillProtectedMode && this.owner.documentEditorSettings.formFieldSettings && this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline') {\n      for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n        var formField = this.documentHelper.formFields[i];\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n          start = this.end;\n          end = this.start;\n        }\n        if (HelperMethods.isLinkedFieldCharacter(formField)) {\n          var offset = formField.fieldSeparator.line.getOffset(formField.fieldSeparator, 1);\n          var fieldStart = new TextPosition(this.owner);\n          fieldStart.setPositionParagraph(formField.fieldSeparator.line, offset);\n          var fieldEndElement = formField.fieldEnd;\n          offset = fieldEndElement.line.getOffset(fieldEndElement, 0);\n          var fieldEnd = new TextPosition(this.owner);\n          fieldEnd.setPositionParagraph(fieldEndElement.line, offset);\n          if ((start.isExistAfter(fieldStart) || start.isAtSamePosition(fieldStart)) && (end.isExistBefore(fieldEnd) || end.isAtSamePosition(fieldEnd))) {\n            field = formField;\n            break;\n          }\n        }\n      }\n    } else {\n      field = this.getHyperlinkField(true);\n    }\n    if (field instanceof FieldElementBox && field.fieldType === 0 && !isNullOrUndefined(field.formFieldData)) {\n      return field;\n    }\n    return undefined;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getCurrentTextFrame = function () {\n    var container = this.start.paragraph.containerWidget;\n    do {\n      if (container instanceof TextFrame) {\n        return container;\n      }\n      if (container) {\n        container = container.containerWidget;\n      }\n    } while (container);\n    return null;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isTableSelected = function (isNested) {\n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    if (isNullOrUndefined(start.paragraph.associatedCell) || isNullOrUndefined(end.paragraph.associatedCell)) {\n      return false;\n    }\n    var table = start.paragraph.associatedCell.ownerTable.getSplitWidgets();\n    var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n    var lastParagraph = this.getLastBlockInLastCell(table[table.length - 1]);\n    if (isNested) {\n      var nestedTable = lastParagraph.associatedCell.ownerTable;\n      while (nestedTable.containerWidget instanceof TableCellWidget) {\n        nestedTable = nestedTable.containerWidget.ownerTable;\n      }\n      lastParagraph = this.getLastBlockInLastCell(nestedTable);\n    }\n    return start.paragraph.associatedCell.equals(firstParagraph.associatedCell) && end.paragraph.associatedCell.equals(lastParagraph.associatedCell) && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || start.offset === 0 && end.offset === this.getLineLength(lastParagraph.lastChild) + 1);\n  };\n  /**\n   * Select List Text\n   * @private\n   */\n  Selection.prototype.selectListText = function () {\n    var lineWidget = this.documentHelper.selectionLineWidget;\n    var endOffset = '0';\n    var selectionIndex = lineWidget.getHierarchicalIndex(endOffset);\n    var startPosition = this.getTextPosition(selectionIndex);\n    var endPosition = this.getTextPosition(selectionIndex);\n    this.isSelectList = true;\n    this.selectRange(startPosition, endPosition);\n    this.isSelectList = false;\n    this.highlightListText(this.documentHelper.selectionLineWidget);\n    this.contextTypeInternal = 'List';\n  };\n  /**\n   * Manually select the list text\n   * @private\n   */\n  Selection.prototype.highlightListText = function (linewidget) {\n    var width = linewidget.children[0].width;\n    var left = this.documentHelper.getLeftValue(linewidget);\n    var top = linewidget.paragraph.y;\n    this.createHighlightBorder(linewidget, width, left, top, false);\n    this.documentHelper.isListTextSelected = true;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.updateImageSize = function (imageFormat) {\n    this.owner.isShiftingEnabled = true;\n    var startPosition = this.start;\n    var endPosition = this.end;\n    if (!this.isForward) {\n      startPosition = this.end;\n      endPosition = this.start;\n    }\n    var inline = null;\n    var index = 0;\n    var paragraph = startPosition.paragraph;\n    if (paragraph === endPosition.paragraph && startPosition.offset + 1 === endPosition.offset) {\n      var inlineObj = paragraph.getInline(endPosition.offset, index);\n      inline = inlineObj.element;\n      index = inlineObj.index;\n    }\n    if (inline instanceof ImageElementBox || inline instanceof ShapeElementBox) {\n      var width = inline.width;\n      var height = inline.height;\n      var alternateText = inline.alternateText;\n      inline.width = imageFormat.width;\n      inline.height = imageFormat.height;\n      inline.alternateText = imageFormat.alternatetext;\n      imageFormat.width = width;\n      imageFormat.height = height;\n      imageFormat.alternatetext = alternateText;\n      if (paragraph !== null && paragraph.containerWidget !== null && this.owner.editorModule) {\n        var lineIndex = paragraph.childWidgets.indexOf(inline.line);\n        var elementIndex = inline.line.children.indexOf(inline);\n        this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n        this.highlightSelection(false);\n      }\n    }\n  };\n  /**\n   * Gets selected table content\n   * @private\n   */\n  Selection.prototype.getSelectedCellsInTable = function (table, startCell, endCell) {\n    var startColumnIndex = startCell.columnIndex;\n    var endColumnIndex = endCell.columnIndex + endCell.cellFormat.columnSpan - 1;\n    var startRowindex = startCell.ownerRow.index;\n    var endRowIndex = endCell.ownerRow.index;\n    var cells = [];\n    for (var i = 0; i < table.childWidgets.length; i++) {\n      var row = table.childWidgets[i];\n      if (row.index >= startRowindex && row.index <= endRowIndex) {\n        for (var j = 0; j < row.childWidgets.length; j++) {\n          var cell = row.childWidgets[j];\n          if (cell.columnIndex >= startColumnIndex && cell.columnIndex <= endColumnIndex) {\n            cells.push(cell);\n          }\n        }\n      }\n      if (row.index > endRowIndex) {\n        break;\n      }\n    }\n    return cells;\n    // return html;\n  };\n  /**\n   * Copies the selected content to clipboard.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.copy = function () {\n    if (this.isEmpty) {\n      return;\n    }\n    this.copySelectedContent(false);\n  };\n  /**\n   * @private\n   *\n   * @returns {void}\n   */\n  Selection.prototype.copySelectedContent = function (isCut) {\n    if (isNullOrUndefined(this.owner.sfdtExportModule)) {\n      return;\n    }\n    this.owner.editorModule.isCopying = true;\n    this.copyToClipboard(this.getHtmlContent());\n    this.owner.editorModule.isCopying = false;\n    if (isCut && this.owner.editorModule) {\n      this.owner.editorModule.handleCut(this);\n    }\n    if (this.owner.enableAutoFocus) {\n      this.documentHelper.updateFocus();\n    }\n  };\n  /**\n   * Write the selected content as SFDT.\n   * @returns SFDT Object.\n   */\n  Selection.prototype.writeSfdt = function () {\n    var startPosition = this.start;\n    var endPosition = this.end;\n    if (!this.isForward) {\n      startPosition = this.end;\n      endPosition = this.start;\n    }\n    return this.owner.sfdtExportModule.write(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0, startPosition.currentWidget, startPosition.offset, endPosition.currentWidget, endPosition.offset, true);\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getHtmlContent = function () {\n    var documentContent = this.writeSfdt();\n    if (this.owner.editorModule) {\n      this.owner.editorModule.copiedData = JSON.stringify(documentContent);\n    }\n    var isOptimizedSfdt = this.owner.documentEditorSettings.optimizeSfdt;\n    return this.htmlWriter.writeHtml(documentContent, isOptimizedSfdt);\n  };\n  Selection.prototype.copyToClipboard = function (htmlContent) {\n    window.getSelection().removeAllRanges();\n    //Skip the copy operation Using shadow DOM if it is mobile device or IE browser.\n    var isSafariOnMac = navigator.vendor && navigator.vendor.indexOf('Apple') > -1 && navigator.userAgent && navigator.userAgent.indexOf('Macintosh') > -1 && navigator.userAgent.indexOf('Safari') > -1 && navigator.userAgent.indexOf('Chrome') === -1;\n    var isMobileDeviceOrInternetExplorer = /Android|Windows Phone|iPhone|Trident|webOS/i.test(navigator.userAgent) || isSafariOnMac;\n    var shadowRoot;\n    var div = document.createElement('div');\n    div.style.left = '-10000px';\n    div.style.top = '-10000px';\n    div.style.position = 'relative';\n    div.innerHTML = htmlContent;\n    if (!isMobileDeviceOrInternetExplorer) {\n      shadowRoot = document.createElement('div');\n      var shadowDOM = shadowRoot.attachShadow({\n        mode: 'open'\n      });\n      shadowDOM.appendChild(div);\n      document.body.appendChild(shadowRoot);\n    } else {\n      document.body.appendChild(div);\n    }\n    if (navigator !== undefined && navigator.userAgent.indexOf('Firefox') !== -1) {\n      div.contentEditable = 'true';\n    }\n    var range = document.createRange();\n    range.selectNodeContents(div);\n    window.getSelection().addRange(range);\n    var copySuccess = false;\n    try {\n      copySuccess = document.execCommand('copy');\n    } catch (e) {\n      // Copying data to Clipboard can potentially fail - for example, if another application is holding Clipboard open.       \n    } finally {\n      window.getSelection().removeAllRanges();\n      div.parentNode.removeChild(div);\n      if (!isMobileDeviceOrInternetExplorer) {\n        shadowRoot.parentNode.removeChild(shadowRoot);\n      }\n    }\n    return copySuccess;\n  };\n  // Caret implementation starts\n  /**\n   * Shows caret in current selection position.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.showCaret = function () {\n    var page = !isNullOrUndefined(this.documentHelper.currentPage) ? this.documentHelper.currentPage : this.documentHelper.currentRenderingPage;\n    if (isNullOrUndefined(page) || this.documentHelper.isRowOrCellResizing || this.owner.enableImageResizerMode && this.owner.imageResizerModule.isImageResizerVisible && !this.owner.imageResizerModule.isShapeResize) {\n      return;\n    }\n    var left = page.boundingRectangle.x;\n    var right;\n    if (this.viewer instanceof PageLayoutViewer) {\n      right = page.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n    } else {\n      right = page.boundingRectangle.width - this.owner.viewer.padding.right - this.documentHelper.scrollbarWidth;\n    }\n    if (!this.owner.enableImageResizerMode || !this.owner.imageResizerModule.isImageResizerVisible || this.owner.imageResizerModule.isShapeResize) {\n      if (this.isHideSelection(this.start.paragraph)) {\n        this.caret.style.display = 'none';\n      } else if (this.isEmpty && (!this.owner.isReadOnly || this.owner.enableCursorOnReadOnly || this.isInlineFormFillMode())) {\n        var caretLeft = parseInt(this.caret.style.left.replace('px', ''), 10);\n        if (caretLeft < left || caretLeft > right) {\n          this.caret.style.display = 'none';\n        } else {\n          this.caret.style.display = 'block';\n        }\n      } else if (this.isImageSelected && !this.owner.enableImageResizerMode) {\n        this.caret.style.display = 'block';\n      } else {\n        if (this.caret.style.display === 'block' || isNullOrUndefined(this)) {\n          if (!this.documentHelper.isComposingIME) {\n            this.caret.style.display = 'none';\n          }\n        }\n      }\n    }\n    if (!isNullOrUndefined(this) && this.documentHelper.isTouchInput && !this.owner.isReadOnlyMode) {\n      var caretStartLeft = parseInt(this.documentHelper.touchStart.style.left.replace('px', ''), 10) + 14;\n      var caretEndLeft = parseInt(this.documentHelper.touchEnd.style.left.replace('px', ''), 10) + 14;\n      var page_1 = this.getSelectionPage(this.start);\n      if (page_1) {\n        if (caretEndLeft < left || caretEndLeft > right) {\n          this.documentHelper.touchEnd.style.display = 'none';\n        } else {\n          this.documentHelper.touchEnd.style.display = 'block';\n        }\n        if (!this.isEmpty) {\n          left = page_1.boundingRectangle.x;\n          right = page_1.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n        }\n        if (caretStartLeft < left || caretStartLeft > right) {\n          this.documentHelper.touchStart.style.display = 'none';\n        } else {\n          this.documentHelper.touchStart.style.display = 'block';\n        }\n      }\n    } else {\n      this.documentHelper.touchStart.style.display = 'none';\n      this.documentHelper.touchEnd.style.display = 'none';\n    }\n  };\n  /**\n   * To set the editable div caret position\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.setEditableDivCaretPosition = function (index) {\n    this.documentHelper.editableDiv.focus();\n    var child = this.documentHelper.editableDiv.childNodes[this.documentHelper.editableDiv.childNodes.length - 1];\n    if (child) {\n      var range = document.createRange();\n      range.setStart(child, index);\n      range.collapse(true);\n      window.getSelection().removeAllRanges();\n      window.getSelection().addRange(range);\n    }\n  };\n  /**\n   * Initializes caret.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.initCaret = function () {\n    this.caret = createElement('div', {\n      styles: 'position:absolute',\n      className: 'e-de-blink-cursor e-de-cursor-animation'\n    });\n    this.caret.style.display = 'none';\n    this.owner.documentHelper.viewerContainer.appendChild(this.caret);\n  };\n  /**\n   * Updates caret position.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.updateCaretPosition = function () {\n    var caretPosition = this.end.location;\n    var page = this.getSelectionPage(this.end);\n    if (page && !isNullOrUndefined(this.caret)) {\n      this.caret.style.left = page.boundingRectangle.x + Math.round(caretPosition.x) * this.documentHelper.zoomFactor + 'px';\n      var caretInfo = this.updateCaretSize(this.owner.selectionModule.end);\n      var topMargin = caretInfo.topMargin;\n      //let caretHeight: number = caretInfo.height;\n      var viewer = this.viewer;\n      var pageTop = (page.boundingRectangle.y - viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n      this.caret.style.top = pageTop + Math.round(caretPosition.y + topMargin) * this.documentHelper.zoomFactor + 'px';\n      if (this.owner.selectionModule.characterFormat.baselineAlignment === 'Subscript') {\n        this.caret.style.top = parseFloat(this.caret.style.top) + parseFloat(this.caret.style.height) / 2 + 'px';\n      }\n      if (this.documentHelper.isTouchInput || this.documentHelper.touchStart.style.display !== 'none') {\n        this.documentHelper.touchStart.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n        this.documentHelper.touchStart.style.top = pageTop + (caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor + 'px';\n        this.documentHelper.touchEnd.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n        this.documentHelper.touchEnd.style.top = pageTop + (caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor + 'px';\n      }\n    }\n    this.showHidePasteOptions(this.caret.style.top, this.caret.style.left);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.showHidePasteOptions = function (top, left) {\n    if (Browser.isIE) {\n      return;\n    }\n    if (this.isViewPasteOptions) {\n      if (this.pasteElement && this.pasteElement.style.display === 'block') {\n        return;\n      }\n      this.createPasteElement(top, left);\n    } else if (this.pasteElement) {\n      this.pasteElement.style.display = 'none';\n      if (!isNullOrUndefined(this.owner.editorModule)) {\n        this.owner.editorModule.isHtmlPaste = false;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getRect = function (position) {\n    var caretPosition = position.location;\n    var page = this.getSelectionPage(position);\n    if (page) {\n      var documentHelper = this.owner.documentHelper;\n      var left = page.boundingRectangle.x + Math.round(caretPosition.x) * documentHelper.zoomFactor;\n      var pageGap = this.viewer.pageGap;\n      var pageTop = (page.boundingRectangle.y - pageGap * (page.index + 1)) * documentHelper.zoomFactor + pageGap * (page.index + 1);\n      var top_5 = pageTop + Math.round(caretPosition.y) * documentHelper.zoomFactor;\n      return new Point(left, top_5);\n    }\n    return new Point(0, 0);\n  };\n  /**\n   * Gets current selected page\n   * @private\n   */\n  Selection.prototype.getSelectionPage = function (position) {\n    var lineWidget = this.getLineWidgetInternal(position.currentWidget, position.offset, true);\n    if (lineWidget) {\n      return this.getPage(lineWidget.paragraph);\n    }\n    return undefined;\n  };\n  /**\n   * Updates caret size.\n   * @private\n   */\n  Selection.prototype.updateCaretSize = function (textPosition, skipUpdate) {\n    var topMargin = 0;\n    var isItalic = false;\n    var caret;\n    var index = 0;\n    var caretHeight = 0;\n    if (this.characterFormat.italic) {\n      isItalic = this.characterFormat.italic;\n    }\n    if (textPosition.paragraph.isEmpty()) {\n      var paragraph = textPosition.paragraph;\n      var bottomMargin = 0;\n      var paragraphInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n      topMargin = paragraphInfo.topMargin;\n      bottomMargin = paragraphInfo.bottomMargin;\n      var height = paragraphInfo.height;\n      var baselineAlignment = this.characterFormat.baselineAlignment;\n      var elementHeight = height;\n      if (baselineAlignment !== 'Normal') {\n        //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n        elementHeight = elementHeight / 1.5;\n        if (baselineAlignment === 'Subscript') {\n          topMargin = height - elementHeight;\n        }\n      }\n      caretHeight = topMargin < 0 ? topMargin + elementHeight : elementHeight;\n      if (!skipUpdate) {\n        this.caret.style.height = caretHeight * this.documentHelper.zoomFactor + 'px';\n      }\n      topMargin = 0;\n    } else {\n      var inlineInfo = textPosition.currentWidget.getInline(textPosition.offset, index);\n      index = inlineInfo.index;\n      var inline = inlineInfo.element;\n      if (!isNullOrUndefined(inline)) {\n        caret = this.getCaretHeight(inline, index, inline.characterFormat, true, topMargin, isItalic);\n        caretHeight = caret.height;\n        if (!skipUpdate) {\n          this.caret.style.height = caret.height * this.documentHelper.zoomFactor + 'px';\n        }\n      }\n    }\n    if (!skipUpdate) {\n      if (isItalic) {\n        this.caret.style.transform = 'rotate(13deg)';\n      } else {\n        this.caret.style.transform = '';\n      }\n    }\n    return {\n      'topMargin': topMargin,\n      'height': caretHeight\n    };\n  };\n  /**\n   * Updates caret to page.\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.updateCaretToPage = function (startPosition, endPage) {\n    if (!isNullOrUndefined(endPage)) {\n      this.documentHelper.selectionEndPage = endPage;\n      if (this.owner.selectionModule.isEmpty) {\n        this.documentHelper.selectionStartPage = endPage;\n      } else {\n        var startLineWidget = this.getLineWidgetParagraph(startPosition.offset, startPosition.paragraph.childWidgets[0]);\n        //Gets start page.\n        var startPage = this.getPage(startLineWidget.paragraph);\n        if (!isNullOrUndefined(startPage)) {\n          this.documentHelper.selectionStartPage = startPage;\n        }\n      }\n    }\n    if (this.owner.enableAutoFocus) {\n      this.checkForCursorVisibility();\n    }\n  };\n  /**\n   * Gets caret bottom position.\n   * @private\n   */\n  Selection.prototype.getCaretBottom = function (textPosition, isEmptySelection) {\n    var bottom = textPosition.location.y;\n    if (textPosition.paragraph.isEmpty()) {\n      var paragraph = textPosition.paragraph;\n      var topMargin = 0;\n      var bottomMargin = 0;\n      var sizeInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n      topMargin = sizeInfo.topMargin;\n      bottomMargin = sizeInfo.bottomMargin;\n      bottom += sizeInfo.height;\n      bottom += topMargin;\n      if (!isEmptySelection) {\n        bottom += bottomMargin;\n      }\n    } else {\n      var index = 0;\n      var inlineInfo = textPosition.paragraph.getInline(textPosition.offset, index);\n      var inline = inlineInfo.element;\n      index = inlineInfo.index;\n      var topMargin = 0;\n      var isItalic = false;\n      var caretHeightInfo = this.getCaretHeight(inline, index, inline.characterFormat, false, topMargin, isItalic);\n      topMargin = caretHeightInfo.topMargin;\n      isItalic = caretHeightInfo.isItalic;\n      bottom += caretHeightInfo.height;\n      if (isEmptySelection) {\n        bottom -= HelperMethods.convertPointToPixel(this.documentHelper.layout.getAfterSpacing(textPosition.paragraph));\n      }\n    }\n    return bottom;\n  };\n  /**\n   * Checks for cursor visibility.\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.checkForCursorVisibility = function () {\n    this.showCaret();\n  };\n  // caret implementation ends\n  /**\n   * Keyboard shortcuts\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.onKeyDownInternal = function (event, ctrl, shift, alt) {\n    var key = event.which || event.keyCode;\n    this.owner.focusIn();\n    if (ctrl && !shift && !alt) {\n      this.documentHelper.isControlPressed = true;\n      switch (key) {\n        // case 9:\n        //     event.preventDefault();\n        //     if (this.owner.acceptTab) {\n        //         this.selection.handleTabKey(false, false);\n        //     }\n        //     break;\n        case 35:\n          this.handleControlEndKey();\n          break;\n        case 36:\n          this.handleControlHomeKey();\n          break;\n        case 37:\n          this.handleControlLeftKey();\n          break;\n        case 38:\n          this.handleControlUpKey();\n          break;\n        case 39:\n          this.handleControlRightKey();\n          break;\n        case 40:\n          this.handleControlDownKey();\n          break;\n        case 65:\n          this.owner.selectionModule.selectAll();\n          break;\n        case 67:\n          event.preventDefault();\n          this.copy();\n          break;\n        case 70:\n          event.preventDefault();\n          if (!isNullOrUndefined(this.owner.optionsPaneModule)) {\n            this.owner.documentEditorSettings.showNavigationPane = true;\n            this.owner.optionsPaneModule.showHideOptionsPane(true);\n          }\n          break;\n      }\n    } else if (shift && !ctrl && !alt) {\n      this.documentHelper.isCompleted = false;\n      switch (key) {\n        case 33:\n          event.preventDefault();\n          this.handlePageUpPageDownKey(false, shift);\n          break;\n        case 34:\n          event.preventDefault();\n          this.handlePageUpPageDownKey(true, shift);\n          break;\n        case 35:\n          this.handleShiftEndKey();\n          event.preventDefault();\n          break;\n        case 36:\n          this.handleShiftHomeKey();\n          event.preventDefault();\n          break;\n        case 37:\n          this.handleShiftLeftKey();\n          event.preventDefault();\n          break;\n        case 38:\n          this.handleShiftUpKey();\n          event.preventDefault();\n          break;\n        case 39:\n          this.handleShiftRightKey();\n          event.preventDefault();\n          break;\n        case 40:\n          this.handleShiftDownKey();\n          event.preventDefault();\n          break;\n      }\n    } else if (shift && ctrl && !alt) {\n      switch (key) {\n        case 32:\n          this.owner.editorModule.insertText(String.fromCharCode(160));\n          break;\n        case 35:\n          this.handleControlShiftEndKey();\n          break;\n        case 36:\n          this.handleControlShiftHomeKey();\n          break;\n        case 37:\n          this.handleControlShiftLeftKey();\n          break;\n        case 38:\n          this.handleControlShiftUpKey();\n          break;\n        case 39:\n          this.handleControlShiftRightKey();\n          break;\n        case 40:\n          this.handleControlShiftDownKey();\n          break;\n        case 56:\n          this.owner.toggleShowHiddenMarksInternal();\n          break;\n      }\n    } else {\n      switch (key) {\n        // case 9:\n        //     event.preventDefault();\n        //     if (this.owner.acceptTab) {\n        //         this.handleTabKey(true, false);\n        //     }\n        //     break;  \n        case 33:\n          event.preventDefault();\n          this.handlePageUpPageDownKey(false, shift);\n          break;\n        case 34:\n          event.preventDefault();\n          this.handlePageUpPageDownKey(true, shift);\n          break;\n        case 35:\n          this.handleEndKey();\n          event.preventDefault();\n          break;\n        case 36:\n          this.handleHomeKey();\n          event.preventDefault();\n          break;\n        case 37:\n          this.handleLeftKey();\n          event.preventDefault();\n          break;\n        case 38:\n          this.handleUpKey();\n          event.preventDefault();\n          break;\n        case 39:\n          this.handleRightKey();\n          event.preventDefault();\n          break;\n        case 40:\n          this.handleDownKey();\n          event.preventDefault();\n          break;\n      }\n    }\n    if (this.isFormField() && !this.documentHelper.isDocumentProtected) {\n      var formField = this.getCurrentFormField(true);\n      if (formField && formField.formFieldData instanceof DropDownFormField) {\n        formField = event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 40 ? formField : formField.nextElement instanceof BookmarkElementBox ? formField.nextElement.reference : formField.fieldEnd;\n        var index = event.keyCode === 39 ? 1 : 0;\n        var offset = formField.line.getOffset(formField, index);\n        var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n        this.selectInternal(formField.line, formField, index, point);\n      }\n    }\n    if (!this.owner.isReadOnlyMode || this.documentHelper.isCommentOnlyMode || this.isInlineFormFillMode()) {\n      this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n    } else if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'FormFieldsOnly') {\n      if (event.keyCode === 9 || event.keyCode === 32) {\n        this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n      }\n    }\n    if (this.owner.searchModule) {\n      if (!isNullOrUndefined(this.owner.searchModule.searchHighlighters) && this.owner.searchModule.searchHighlighters.length > 0) {\n        this.owner.searchModule.searchResults.clear();\n      }\n    }\n    if (event.keyCode === 27 || event.which === 27) {\n      if (!isNullOrUndefined(this.owner.optionsPaneModule)) {\n        this.owner.optionsPaneModule.showHideOptionsPane(false);\n        this.documentHelper.updateFocus();\n      }\n      if (this.owner.enableHeaderAndFooter) {\n        this.disableHeaderFooter();\n      }\n    }\n  };\n  //#region Enable or disable Header Footer\n  /**\n   * @private\n   */\n  Selection.prototype.checkAndEnableHeaderFooter = function (point, pagePoint) {\n    var page = this.documentHelper.currentPage;\n    if (this.isCursorInsidePageRect(point, page)) {\n      if (this.isCursorInHeaderRegion(point, page)) {\n        if (this.owner.enableHeaderAndFooter) {\n          return false;\n        }\n        return this.enableHeadersFootersRegion(page.headerWidget, page);\n      }\n      if (this.isCursorInFooterRegion(point, page)) {\n        if (this.owner.enableHeaderAndFooter) {\n          return false;\n        }\n        return this.enableHeadersFootersRegion(page.footerWidget, page);\n      }\n    }\n    if (this.owner.enableHeaderAndFooter) {\n      this.owner.enableHeaderAndFooter = false;\n      this.documentHelper.updateTextPositionForSelection(pagePoint, 1);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isCursorInsidePageRect = function (point, page) {\n    if (this.viewer.containerLeft + point.x >= page.boundingRectangle.x && this.viewer.containerLeft + point.x <= page.boundingRectangle.x + page.boundingRectangle.width * this.documentHelper.zoomFactor && this.viewer instanceof PageLayoutViewer) {\n      return true;\n    } else if (this.viewer.containerLeft + point.x >= page.boundingRectangle.x && this.viewer.containerLeft + point.x <= page.boundingRectangle.x + page.boundingRectangle.width) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isCursorInHeaderRegion = function (point, page) {\n    if (this.viewer instanceof PageLayoutViewer) {\n      var pageTop = this.getPageTop(page);\n      var headerHeight = 0;\n      var header = page.headerWidget;\n      if (header) {\n        headerHeight = header.y + header.height;\n      }\n      var isEmpty = header.isEmpty && !this.owner.enableHeaderAndFooter;\n      var topMargin = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.topMargin);\n      var pageHeight = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.pageHeight);\n      var height = isEmpty ? topMargin : Math.min(Math.max(headerHeight, topMargin), pageHeight / 100 * 40);\n      height = height * this.documentHelper.zoomFactor;\n      if (this.viewer.containerTop + point.y >= pageTop && this.viewer.containerTop + point.y <= pageTop + height) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isCursorInFooterRegion = function (point, page) {\n    if (this.viewer instanceof PageLayoutViewer) {\n      var pageRect = page.boundingRectangle;\n      var pageTop = this.getPageTop(page);\n      var pageBottom = pageTop + pageRect.height * this.documentHelper.zoomFactor;\n      var footerDistance = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.footerDistance);\n      var footerHeight = 0;\n      if (page.footerWidget) {\n        footerHeight = page.footerWidget.height;\n      }\n      var bottomMargin = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.bottomMargin);\n      var isEmpty = page.footerWidget.isEmpty && !this.owner.enableHeaderAndFooter;\n      var height = pageRect.height;\n      if (isEmpty) {\n        height = (height - bottomMargin) * this.documentHelper.zoomFactor;\n      } else {\n        height = (height - Math.min(pageRect.height / 100 * 40, Math.max(footerHeight + footerDistance, bottomMargin))) * this.documentHelper.zoomFactor;\n      }\n      if (this.viewer.containerTop + point.y <= pageBottom && this.viewer.containerTop + point.y >= pageTop + height) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.enableHeadersFootersRegion = function (widget, page) {\n    if (this.viewer instanceof PageLayoutViewer) {\n      this.owner.enableHeaderAndFooter = true;\n      widget.page = page;\n      this.comparePageWidthAndMargins(widget, page);\n      this.updateTextPositionForBlockContainer(widget);\n      this.shiftBlockOnHeaderFooterEnableDisable();\n      return true;\n    }\n    return false;\n  };\n  /**\n   * /* Here is the explanation for the code below:\n      1. When there are multiple sections in a document, the first section is the parent section of the other sections.\n      2. If you change the page width or header distance of the parent section, the child section will inherit the page width or header distance of the parent section.\n      3. So when you change the page width or header distance of the parent section, the child section should be relayouted.\n   * @private\n   */\n  Selection.prototype.comparePageWidthAndMargins = function (parentHFWidget, page) {\n    var headerFooterType = parentHFWidget.headerFooterType;\n    var currentHFWidget;\n    var isHeader = headerFooterType.indexOf('Header') != -1;\n    var isRelayout = false;\n    if (isHeader) {\n      currentHFWidget = page.headerWidgetIn;\n    } else {\n      currentHFWidget = page.footerWidgetIn;\n    }\n    if (!isNullOrUndefined(currentHFWidget)) {\n      var parentSectionFormat = parentHFWidget.sectionFormat;\n      var currentSectionFormat = currentHFWidget.sectionFormat;\n      if (!isNullOrUndefined(parentSectionFormat) && !isNullOrUndefined(currentSectionFormat)) {\n        if (isHeader) {\n          if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.headerDistance != currentSectionFormat.headerDistance) {\n            isRelayout = true;\n          }\n        } else {\n          if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.footerDistance != currentSectionFormat.footerDistance) {\n            isRelayout = true;\n          }\n        }\n      }\n      if (isRelayout) {\n        this.owner.viewer.updateHFClientArea(parentHFWidget.sectionFormat, isHeader);\n        parentHFWidget = this.documentHelper.layout.layoutHeaderFooterItems(this.owner.viewer, parentHFWidget);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.shiftBlockOnHeaderFooterEnableDisable = function () {\n    for (var i = 0; i < this.documentHelper.headersFooters.length; i++) {\n      var headerFooter = this.documentHelper.headersFooters[i];\n      var bodywidget = this.getBodyWidgetInternal(i, 0);\n      if (isNullOrUndefined(bodywidget)) {\n        continue;\n      }\n      var sectionFormat = bodywidget.sectionFormat;\n      for (var _i = 0, _a = Object.keys(headerFooter); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var widget = headerFooter[key];\n        if (widget.isEmpty) {\n          this.owner.editorModule.shiftPageContent(widget.headerFooterType, sectionFormat);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.updateTextPositionForBlockContainer = function (widget) {\n    var block = widget.firstChild;\n    if (block instanceof TableWidget) {\n      block = this.getFirstBlockInFirstCell(block);\n      if (block instanceof TableWidget) {\n        block = this.getFirstBlockInFirstCell(block);\n      }\n    }\n    this.selectParagraphInternal(block, true);\n  };\n  /**\n   * Disable Header footer\n   * @private\n   */\n  Selection.prototype.disableHeaderFooter = function () {\n    var page = this.getPage(this.start.paragraph);\n    this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n    this.owner.enableHeaderAndFooter = false;\n    this.shiftBlockOnHeaderFooterEnableDisable();\n  };\n  //#endregion\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.clear = function () {\n    if (this.editRegionHighlighters) {\n      this.editRegionHighlighters.clear();\n    }\n    this.editRangeCollection = [];\n    if (this.selectedWidgets) {\n      this.selectedWidgets.clear();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.destroy = function () {\n    if (!isNullOrUndefined(this.contextTypeInternal)) {\n      this.contextTypeInternal = undefined;\n    }\n    if (this.pasteDropDwn) {\n      this.pasteDropDwn.destroy();\n      this.pasteDropDwn = undefined;\n    }\n    this.caret = undefined;\n    this.contextTypeInternal = undefined;\n    this.upDownSelectionLength = undefined;\n    this.owner = undefined;\n    this.upDownSelectionLength = undefined;\n    this.isSkipLayouting = undefined;\n    this.isImageSelected = undefined;\n    if (!isNullOrUndefined(this.documentHelper)) {\n      this.documentHelper = undefined;\n    }\n    this.contextTypeInternal = undefined;\n    this.isRetrieveFormatting = undefined;\n    if (this.characterFormatIn) {\n      this.characterFormatIn.destroy();\n    }\n    this.characterFormatIn = undefined;\n    if (this.paragraphFormatIn) {\n      this.paragraphFormatIn.destroy();\n    }\n    this.paragraphFormatIn = undefined;\n    if (this.sectionFormatIn) {\n      this.sectionFormatIn.destroy();\n    }\n    this.sectionFormatIn = undefined;\n    if (this.tableFormatIn) {\n      this.tableFormatIn.destroy();\n    }\n    this.tableFormatIn = undefined;\n    if (this.cellFormatIn) {\n      this.cellFormatIn.destroy();\n    }\n    this.cellFormatIn = undefined;\n    if (this.rowFormatIn) {\n      this.rowFormatIn.destroy();\n    }\n    this.rowFormatIn = undefined;\n    this.imageFormatInternal = undefined;\n    this.skipFormatRetrieval = undefined;\n    this.startInternal = undefined;\n    this.endInternal = undefined;\n    this.htmlWriterIn = undefined;\n    this.toolTipElement = undefined;\n    if (!isNullOrUndefined(this.toolTipObject)) {\n      this.toolTipObject.destroy();\n    }\n    this.toolTipField = undefined;\n    this.isMoveDownOrMoveUp = undefined;\n    this.pasteElement = undefined;\n    this.currentPasteAction = undefined;\n    this.isViewPasteOptions = undefined;\n    this.skipEditRangeRetrieval = undefined;\n    this.editPosition = undefined;\n    if (!isNullOrUndefined(this.selectedWidgets)) {\n      this.selectedWidgets.destroy();\n    }\n    this.isHighlightEditRegionIn = undefined;\n    this.isHighlightFormFields = undefined;\n    this.editRangeCollection = [];\n    this.editRangeCollection = undefined;\n    this.isHightlightEditRegionInternal = undefined;\n    this.isCurrentUser = undefined;\n    this.isHighlightNext = undefined;\n    this.hightLightNextParagraph = undefined;\n    this.isWebLayout = undefined;\n    if (!isNullOrUndefined(this.editRegionHighlighters)) {\n      this.editRegionHighlighters.destroy();\n    }\n    if (!isNullOrUndefined(this.formFieldHighlighters)) {\n      this.formFieldHighlighters.destroy();\n    }\n    this.isCellPrevSelected = undefined;\n    this.currentFormField = undefined;\n  };\n  /**\n   * Returns the cells in between the bounds.\n   * @param table Specify the table to find cells.\n   * @param columnFirst Specify start index of column to find cells.\n   * @param columnLast Specify end index of column to find cells.\n   * @param bookmark Specify the bookmark element.\n   */\n  Selection.prototype.getCellsToSelect = function (table, columnFirst, columnLast, bookmark) {\n    var rows = table.childWidgets;\n    if (isNullOrUndefined(bookmark.paragraph.associatedCell) || !isNullOrUndefined(bookmark.reference) && isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n      return undefined;\n    }\n    var startRowIndex = bookmark.paragraph.associatedCell.ownerRow.rowIndex;\n    var endRowIndex = bookmark.reference.paragraph.associatedCell.ownerRow.rowIndex;\n    var cellArray = [];\n    for (var i = startRowIndex; i <= endRowIndex; i++) {\n      var row = rows[i];\n      for (var j = columnFirst; j <= columnLast; j++) {\n        var cell = row.childWidgets[j];\n        if (!isNullOrUndefined(cell)) {\n          cellArray.push(cell);\n        }\n      }\n    }\n    return cellArray;\n  };\n  /**\n   * Selects the cells between bookmark start and end.\n   * @param bookmark Specify the bookmark.\n   */\n  Selection.prototype.selectBookmarkInTable = function (bookmark) {\n    this.documentHelper.clearSelectionHighlight();\n    var columnFirst = parseInt(bookmark.properties['columnFirst']);\n    var columnLast = parseInt(bookmark.properties['columnLast']);\n    var table = bookmark.paragraph.associatedCell.ownerTable;\n    var cellArray = this.getCellsToSelect(table, columnFirst, columnLast, bookmark);\n    if (!isNullOrUndefined(cellArray)) {\n      for (var i = 0; i < cellArray.length; i++) {\n        this.highlightCellWidget(cellArray[i]);\n      }\n    }\n  };\n  /**\n   * Navigates to the specified bookmark.\n   * @param name\n   * @param moveToStart\n   * @param excludeBookmarkStartEnd\n   * @private\n   */\n  Selection.prototype.navigateBookmark = function (name, moveToStart, excludeBookmarkStartEnd) {\n    var bookmarks = this.documentHelper.bookmarks;\n    if (bookmarks.containsKey(name)) {\n      //bookmark start element\n      var bookmrkElmnt = bookmarks.get(name);\n      if (!isNullOrUndefined(bookmrkElmnt.properties)) {\n        this.selectBookmarkInTable(bookmrkElmnt);\n      } else {\n        var offset = bookmrkElmnt.line.getOffset(bookmrkElmnt, 0);\n        if (excludeBookmarkStartEnd) {\n          offset++;\n        }\n        var startPosition = new TextPosition(this.owner);\n        startPosition.setPositionParagraph(bookmrkElmnt.line, offset);\n        if (moveToStart) {\n          this.documentHelper.selection.selectRange(startPosition, startPosition, true);\n        } else {\n          //bookmark end element\n          var bookmrkEnd = bookmrkElmnt.reference;\n          if (bookmrkElmnt.reference && bookmrkElmnt.reference.line.paragraph.bodyWidget == null) {\n            bookmrkEnd = bookmrkElmnt;\n          }\n          var endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n          if (bookmrkEnd instanceof BookmarkElementBox && !excludeBookmarkStartEnd) {\n            if (!isNullOrUndefined(bookmrkEnd.properties)) {\n              if (bookmrkEnd.properties['isAfterParagraphMark']) {\n                endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n              }\n            }\n          }\n          if (excludeBookmarkStartEnd) {\n            endoffset--;\n          }\n          var endPosition = new TextPosition(this.owner);\n          endPosition.setPositionParagraph(bookmrkEnd.line, endoffset);\n          //selects the bookmark range\n          this.documentHelper.selection.selectRange(startPosition, endPosition, true);\n        }\n      }\n    }\n  };\n  /**\n   * Selects the specified bookmark.\n   * @param name Specify the bookmark name to select.\n   * @param excludeBookmarkStartEnd Specify true to exclude bookmark start and end from selection, otherwise false.\n   */\n  Selection.prototype.selectBookmark = function (name, excludeBookmarkStartEnd) {\n    this.navigateBookmark(name, undefined, excludeBookmarkStartEnd);\n  };\n  /**\n   * Returns the toc field from the selection.\n   * @private\n   */\n  Selection.prototype.getTocField = function () {\n    var paragraph = this.start.paragraph;\n    var tocPara = undefined;\n    while (paragraph !== undefined && this.isTocStyle(paragraph)) {\n      tocPara = paragraph;\n      paragraph = paragraph.previousRenderedWidget;\n    }\n    if (tocPara !== undefined) {\n      var lineWidget = tocPara.childWidgets[0];\n      if (lineWidget !== undefined) {\n        return lineWidget.children[0];\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Returns true if the paragraph has toc style.\n   */\n  Selection.prototype.isTocStyle = function (paragraph) {\n    var style = paragraph.paragraphFormat.baseStyle;\n    return style !== undefined && style.name.toLowerCase().indexOf('toc') !== -1;\n  };\n  /**\n   * Return true if selection is in TOC\n   * @private\n   */\n  Selection.prototype.isTOC = function () {\n    var info = this.getParagraphInfo(this.start);\n    var para = info.paragraph;\n    for (var i = 0; i < para.childWidgets[0].children.length; i++) {\n      var element = para.childWidgets[0].children[i];\n      if (element instanceof FieldElementBox) {\n        var fieldCode = this.owner.selectionModule.getFieldCode(element);\n        if (fieldCode.match('TOC ') || fieldCode.match('Toc')) {\n          return true;\n        }\n      } else {\n        continue;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getElementsForward = function (lineWidget, startElement, endElement, bidi) {\n    if (isNullOrUndefined(startElement)) {\n      return undefined;\n    }\n    var elements = [];\n    // while (bidi && startElement && startElement !== endElement && startElement.nextElement && !startElement.isRightToLeft) {\n    //     startElement = startElement.nextElement;\n    // }\n    // while (bidi && endElement && startElement !== endElement && endElement.previousElement && !endElement.isRightToLeft) {\n    //     endElement = endElement.previousElement;\n    // }\n    var elementIndex = lineWidget.children.indexOf(startElement);\n    while (elementIndex >= 0) {\n      for (var i = elementIndex; i < lineWidget.children.length; i++) {\n        var inlineElement = lineWidget.children[i];\n        if (inlineElement.line === lineWidget) {\n          if (inlineElement === endElement) {\n            elements.push(inlineElement);\n            elementIndex = -1;\n            break;\n          } else {\n            elements.push(inlineElement);\n          }\n        } else {\n          elementIndex = -1;\n          break;\n        }\n      }\n      // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n      elementIndex = -1;\n    }\n    return elements.length === 0 ? undefined : elements;\n  };\n  // Gets the current line elements in inline reverse order from the end element.\n  /**\n   * @private\n   */\n  Selection.prototype.getElementsBackward = function (lineWidget, startElement, endElement, bidi) {\n    var elements = [];\n    while (bidi && startElement && startElement.previousElement && (!startElement.isRightToLeft || startElement instanceof TextElementBox && this.documentHelper.textHelper.isRTLText(startElement.text))) {\n      startElement = startElement.previousElement;\n    }\n    var elementIndex = lineWidget.children.indexOf(startElement);\n    while (elementIndex >= 0) {\n      for (var i = elementIndex; i > -1 && i < lineWidget.children.length; bidi ? i++ : i--) {\n        var inlineElement = lineWidget.children[i];\n        if (inlineElement.line === lineWidget) {\n          elements.push(inlineElement);\n        } else {\n          elementIndex = -1;\n          break;\n        }\n      }\n      // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n      elementIndex = -1;\n    }\n    return elements;\n  };\n  /**\n   * Navigates to the previous comment in the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigatePreviousComment = function () {\n    this.commentNavigateInternal(false);\n  };\n  /**\n   * Navigates to the next comment in the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigateNextComment = function () {\n    this.commentNavigateInternal(true);\n  };\n  Selection.prototype.commentNavigateInternal = function (next) {\n    if (!this.documentHelper.currentSelectedComment) {\n      if (this.documentHelper.comments.length === 0) {\n        return;\n      }\n      this.documentHelper.currentSelectedComment = this.documentHelper.comments[0];\n    }\n    if (this.documentHelper.currentSelectedComment) {\n      var comments = this.documentHelper.comments;\n      var comment = this.documentHelper.currentSelectedComment;\n      var index = comments.indexOf(comment);\n      if (next) {\n        comment = index === comments.length - 1 ? comments[0] : comments[index + 1];\n      } else {\n        comment = index === 0 ? comments[comments.length - 1] : comments[index - 1];\n      }\n      this.documentHelper.currentSelectedComment = comment;\n      this.selectComment(comment);\n    }\n  };\n  /**\n   * Navigates to the previous revision in the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigatePreviousRevision = function () {\n    this.revisionNavigateInternal(false);\n  };\n  /**\n   * Navigates to the next revision in the document.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigateNextRevision = function () {\n    this.revisionNavigateInternal(true);\n  };\n  /**\n   * Method to navigate revisions\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.revisionNavigateInternal = function (next) {\n    if (!this.documentHelper.currentSelectedRevisionInternal) {\n      if (this.documentHelper.owner.revisions.length === 0) {\n        return;\n      }\n      this.documentHelper.currentSelectedRevision = this.documentHelper.owner.revisions.get(0);\n    }\n    if (this.documentHelper.currentSelectedRevision) {\n      var revisions = this.documentHelper.owner.revisions.changes;\n      var revision = this.documentHelper.currentSelectedRevision;\n      var index = revisions.indexOf(revision);\n      if (next) {\n        revision = index === revisions.length - 1 ? revisions[0] : revisions[index + 1];\n      } else {\n        revision = index === 0 ? revisions[revisions.length - 1] : revisions[index - 1];\n      }\n      this.documentHelper.currentSelectedRevision = revision;\n      this.selectRevision(revision);\n    }\n    this.owner.trackChangesPane.currentSelectedRevision = this.documentHelper.currentSelectedRevision;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.selectComment = function (comment) {\n    if (!isNullOrUndefined(comment)) {\n      var startPosition = this.getElementPosition(comment.commentStart, true).startPosition;\n      var endPosition = this.getElementPosition(comment.commentEnd, false).startPosition;\n      if (this.owner.commentReviewPane) {\n        this.owner.commentReviewPane.selectComment(comment);\n      }\n      this.selectPosition(startPosition, endPosition);\n    }\n  };\n  /**\n   * @private\n   * @param revision\n   * @returns {void}\n   */\n  Selection.prototype.selectRevision = function (revision, startPosition, endPosition) {\n    var isSelect = false;\n    if (isNullOrUndefined(startPosition) && isNullOrUndefined(endPosition)) {\n      isSelect = true;\n    }\n    if (!isNullOrUndefined(revision) && revision.range.length > 0) {\n      var firstElement = revision.range[0];\n      var lastElement = revision.range[revision.range.length - 1];\n      if (firstElement instanceof WRowFormat) {\n        var rowWidget = firstElement.ownerBase;\n        var firstCell = rowWidget.childWidgets[0];\n        var lastCell = rowWidget.childWidgets[rowWidget.childWidgets.length - 1];\n        var firstPara = this.getFirstParagraph(firstCell);\n        var lastPara = this.getLastParagraph(lastCell);\n        this.start.setPosition(firstPara.firstChild, true);\n        this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        this.selectPosition(this.start, this.end);\n      } else if (firstElement && lastElement) {\n        if (isNullOrUndefined(startPosition)) {\n          startPosition = new TextPosition(this.owner);\n        }\n        var offset = 0;\n        if (firstElement instanceof WCharacterFormat) {\n          var currentPara = firstElement.ownerBase;\n          // Set the offset based on length of para - length of remaning lines except last line because we have added the remaning line length in getParagraphInfoInternal method.\n          //when we have add para length to the offset, again added the length of remaning lines except last line in getParagraphInfoInternal method. so when perform undo, the offset is greater than para length + 1. in this case, we set the para length to start and end offset, so paramark doesn't comes to selection region (undo case for splitted para but paramark only tracked).\n          if (currentPara.childWidgets.length > 1) {\n            offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n          } else {\n            // added the condition to set offset to paragraph start when para without contain text elements.\n            if (this.isEmptyWidget(currentPara)) {\n              offset = 0;\n            } else {\n              offset = currentPara.getLength();\n            }\n          }\n          startPosition.setPositionParagraph(currentPara.lastChild, offset);\n        } else {\n          offset = firstElement.line.getOffset(firstElement, 0);\n          var line = firstElement.line;\n          if (line.isFirstLine()) {\n            for (var i = 0; i < line.children.length; i++) {\n              if (firstElement === line.children[i] && line.children[i] instanceof TextElementBox) {\n                offset = 0;\n                break;\n              } else if (line.children[i] instanceof TextElementBox) {\n                break;\n              }\n            }\n          }\n          startPosition.setPositionForLineWidget(firstElement.line, offset);\n        }\n        if (isNullOrUndefined(endPosition)) {\n          endPosition = new TextPosition(this.owner);\n        }\n        if (lastElement instanceof WCharacterFormat) {\n          var currentPara = lastElement.ownerBase;\n          var splittedWidgets = currentPara.getSplitWidgets();\n          currentPara = splittedWidgets[splittedWidgets.length - 1];\n          if (currentPara.isEndsWithPageBreak || currentPara.isEndsWithColumnBreak) {\n            this.owner.trackChangesPane.isTrackingPageBreak = true;\n          }\n          // Changed the condition to get last child of current paragraph instead of next para of current para if current para contain page break\n          if (currentPara.childWidgets.length > 1) {\n            offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n          } else {\n            offset = currentPara.getLength();\n          }\n          endPosition.setPositionParagraph(currentPara.lastChild, offset + 1);\n        } else {\n          offset = lastElement.line.getOffset(lastElement, 0) + lastElement.length;\n          if (this.isTOC()) {\n            offset += 1;\n          }\n          endPosition.setPositionForLineWidget(lastElement.line, offset);\n        }\n        var curentPosition = startPosition.clone();\n        if (!startPosition.isExistBefore(endPosition)) {\n          startPosition = endPosition;\n          endPosition = curentPosition;\n        }\n        if (isSelect) {\n          this.selectPosition(startPosition, endPosition);\n        }\n      }\n    }\n  };\n  Selection.prototype.isEmptyWidget = function (block) {\n    if (block instanceof TableWidget) {\n      return false;\n    } else if (block.isEmpty()) {\n      return true;\n    } else {\n      for (var i = 0; i < block.childWidgets.length; i++) {\n        var line = block.childWidgets[i];\n        for (var j = 0; j < line.children.length; j++) {\n          if (line.children[j] instanceof TextElementBox) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.selectTableRevision = function (revision) {\n    if (!isNullOrUndefined(revision) && revision[0].range.length > 0) {\n      var firstElementTable = revision[0].range[0];\n      var lastElementTable = revision[revision.length - 1].range[0];\n      if (firstElementTable instanceof WRowFormat) {\n        var firstRowWidget = firstElementTable.ownerBase;\n        var firstCell = firstRowWidget.childWidgets[0];\n        var secondRowWidget = lastElementTable.ownerBase;\n        var lastCell = secondRowWidget.childWidgets[secondRowWidget.childWidgets.length - 1];\n        var firstPara = this.getFirstParagraph(firstCell);\n        var lastPara = this.getLastParagraph(lastCell);\n        this.start.setPosition(firstPara.firstChild, true);\n        this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n        this.selectPosition(this.start, this.end);\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.updateEditRangeCollection = function () {\n    if (this.editRangeCollection.length > 0) {\n      this.editRangeCollection = [];\n    }\n    var editRangeStart;\n    var everyOneArea;\n    if (!this.documentHelper.isDocumentProtected) {\n      for (var i = 0; i < this.documentHelper.editRanges.length; i++) {\n        var user = this.documentHelper.editRanges.keys[i];\n        editRangeStart = this.documentHelper.editRanges.get(user);\n        for (var j = 0; j < editRangeStart.length; j++) {\n          this.editRangeCollection.push(editRangeStart[j]);\n        }\n      }\n    } else {\n      if (this.documentHelper.editRanges.containsKey(this.owner.currentUser)) {\n        editRangeStart = this.documentHelper.editRanges.get(this.owner.currentUser);\n        for (var j = 0; j < editRangeStart.length; j++) {\n          this.editRangeCollection.push(editRangeStart[j]);\n        }\n      }\n      if (this.documentHelper.editRanges.containsKey('Everyone')) {\n        var user = 'Everyone';\n        everyOneArea = this.documentHelper.editRanges.get(user);\n        for (var j = 0; j < everyOneArea.length; j++) {\n          this.editRangeCollection.push(everyOneArea[j]);\n        }\n      }\n    }\n  };\n  //Restrict editing implementation starts\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.onHighlight = function () {\n    if (this.isHighlightEditRegion) {\n      this.highlightEditRegion();\n    } else {\n      this.unHighlightEditRegion();\n    }\n    this.viewer.renderVisiblePages();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.highlightEditRegion = function () {\n    this.updateEditRangeCollection();\n    if (this.owner.enableLockAndEdit) {\n      this.viewer.updateScrollBars();\n      return;\n    }\n    if (!this.isHighlightEditRegion) {\n      this.unHighlightEditRegion();\n      return;\n    }\n    this.isHightlightEditRegionInternal = true;\n    if (isNullOrUndefined(this.editRegionHighlighters)) {\n      this.editRegionHighlighters = new Dictionary();\n    }\n    this.editRegionHighlighters.clear();\n    for (var j = 0; j < this.editRangeCollection.length; j++) {\n      this.highlightEditRegionInternal(this.editRangeCollection[j]);\n    }\n    this.isHightlightEditRegionInternal = false;\n    this.viewer.updateScrollBars();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.highlightFormFields = function () {\n    if (isNullOrUndefined(this.formFieldHighlighters)) {\n      this.formFieldHighlighters = new Dictionary();\n    }\n    this.formFieldHighlighters.clear();\n    var formFields = this.documentHelper.formFields;\n    if (!isNullOrUndefined(formFields) && formFields.length > 0) {\n      for (var i = 0; i < formFields.length; i++) {\n        var formField = formFields[i];\n        if (HelperMethods.isLinkedFieldCharacter(formField)) {\n          var offset = formField.line.getOffset(formField, 0);\n          var startPosition = new TextPosition(this.owner);\n          startPosition.setPositionParagraph(formField.line, offset);\n          var endElement = formField.fieldEnd;\n          offset = endElement.line.getOffset(endElement, 1);\n          var endPosition = new TextPosition(this.owner);\n          endPosition.setPositionParagraph(endElement.line, offset);\n          this.isHighlightFormFields = true;\n          this.highlight(startPosition.paragraph, startPosition, endPosition);\n          if (this.isHighlightNext) {\n            this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n            this.isHighlightNext = false;\n            this.hightLightNextParagraph = undefined;\n          }\n        }\n      }\n      this.isHighlightFormFields = false;\n      this.viewer.updateScrollBars();\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.unHighlightEditRegion = function () {\n    if (!isNullOrUndefined(this.editRegionHighlighters)) {\n      this.editRegionHighlighters.clear();\n      this.editRegionHighlighters = undefined;\n    }\n    this.isHightlightEditRegionInternal = false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.highlightEditRegionInternal = function (editRangeStart) {\n    var positionInfo = this.getPosition(editRangeStart);\n    var startPosition = positionInfo.startPosition;\n    var endPosition = positionInfo.endPosition;\n    // if (editRangeStart.user === this.owner.currentUser && editRangeStart.group === '') {\n    this.isCurrentUser = true;\n    // }\n    this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n    this.isCurrentUser = false;\n  };\n  /**\n   * Shows all the editing region, where current user can edit.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.showAllEditingRegion = function () {\n    if (this.editRangeCollection.length === 0) {\n      this.updateEditRangeCollection();\n    }\n    this.documentHelper.clearSelectionHighlight();\n    for (var j = 0; j < this.editRangeCollection.length; j++) {\n      var editRangeStart = this.editRangeCollection[j];\n      var positionInfo = this.getPosition(editRangeStart);\n      var startPosition = positionInfo.startPosition;\n      var endPosition = positionInfo.endPosition;\n      this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n    }\n  };\n  Selection.prototype.highlightEditRegions = function (editRangeStart, startPosition, endPosition) {\n    if (!editRangeStart.line.paragraph.isInsideTable || editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable || editRangeStart.columnFirst === -1) {\n      this.highlight(editRangeStart.line.paragraph, startPosition, endPosition);\n      if (this.isHighlightNext) {\n        this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n        this.isHighlightNext = false;\n        this.hightLightNextParagraph = undefined;\n      }\n    } else {\n      var row = editRangeStart.line.paragraph.associatedCell.ownerRow;\n      var cell = row.childWidgets[editRangeStart.columnFirst];\n      if (cell) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n          if (cell.childWidgets[i] instanceof ParagraphWidget) {\n            this.highlight(cell.childWidgets[i], startPosition, endPosition);\n            if (this.isHighlightNext) {\n              this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n              this.isHighlightNext = false;\n              this.hightLightNextParagraph = undefined;\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Navigates to the next editing region, where current user can edit.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.navigateToNextEditingRegion = function () {\n    var editRange = this.getEditRangeStartElement();\n    if (this.editRangeCollection.length > 0) {\n      this.sortEditRangeCollection();\n      var length_2 = this.editRangeCollection.length;\n      var index = length_2;\n      if (!isNullOrUndefined(editRange)) {\n        index = this.editRangeCollection.indexOf(editRange);\n      }\n      var editRangeStart = index < length_2 - 1 ? this.editRangeCollection[index + 1] : this.editRangeCollection[0];\n      var positionInfo = this.getPosition(editRangeStart);\n      var startPosition = positionInfo.startPosition;\n      var endPosition = positionInfo.endPosition;\n      this.selectRange(startPosition, endPosition);\n    }\n  };\n  Selection.prototype.sortEditRangeCollection = function () {\n    //Sort based on position\n    for (var i = this.editRangeCollection.length - 1; i >= 0; i--) {\n      for (var j = 1; j <= i; j++) {\n        var nextPosition = this.getPosition(this.editRangeCollection[j - 1]).startPosition;\n        var firstPosition = this.getPosition(this.editRangeCollection[j]).startPosition;\n        if (nextPosition.isExistAfter(firstPosition)) {\n          var temp = this.editRangeCollection[j - 1];\n          this.editRangeCollection[j - 1] = this.editRangeCollection[j];\n          this.editRangeCollection[j] = temp;\n        }\n      }\n    }\n  };\n  /**\n   * Highlights all the editing region, where current user can edit.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.toggleEditingRegionHighlight = function () {\n    this.isHighlightEditRegion = !this.isHighlightEditRegion;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getEditRangeStartElement = function () {\n    for (var i = 0; i < this.editRangeCollection.length; i++) {\n      var editStart = this.editRangeCollection[i];\n      var position = this.getPosition(editStart);\n      var start = position.startPosition;\n      var end = position.endPosition;\n      if ((this.start.isExistAfter(start) || this.start.isAtSamePosition(start)) && (this.end.isExistBefore(end) || this.end.isAtSamePosition(end))) {\n        return editStart;\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Determines whether the selection is inside the edit region.\n   *\n   * @returns {boolean} Returns true if the selection is inside the edit region; Otherwise, false.\n   */\n  Selection.prototype.isSelectionInEditRegion = function () {\n    if (!this.documentHelper.isDocumentProtected) {\n      return false;\n    }\n    return this.checkSelectionIsAtEditRegion();\n  };\n  /**\n   * Determines whether the specified start and end position of the selection is inside the edit region.\n   * @param {TextPosition} start Specify the start position of the selection.\n   * @param {TextPosition} end Specify the end position of the selection.\n   * @returns {boolean} Returns true if the specified start and end position of the selection is inside the edit region; Otherwise, false.\n   */\n  Selection.prototype.checkSelectionIsAtEditRegion = function (start, end) {\n    if (isNullOrUndefined(start) && isNullOrUndefined(end)) {\n      start = this.start;\n      end = this.end;\n      if (!this.isForward) {\n        start = this.end;\n        end = this.start;\n      }\n    }\n    for (var i = 0; i < this.editRangeCollection.length; i++) {\n      var editRangeStart = this.editRangeCollection[i];\n      if (!editRangeStart.line.paragraph.isInsideTable || editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable || editRangeStart.columnFirst === -1) {\n        if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n          return true;\n        }\n      } else {\n        if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd && editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n          var editRangeRow = editRangeStart.paragraph.associatedCell.ownerRow;\n          var startCell = start.paragraph.associatedCell;\n          var endCell = end.paragraph.associatedCell;\n          if (!isNullOrUndefined(startCell) && !isNullOrUndefined(endCell)) {\n            if (editRangeRow.equals(startCell.ownerRow) && editRangeRow.equals(endCell.ownerRow) && startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n              if (this.isEmpty && startCell.index === editRangeStart.line.paragraph.associatedCell.index) {\n                if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n                  return true;\n                }\n              } else if (!this.isCellSelected(startCell, start, end)) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.isEditRangeCellSelected = function (start, end) {\n    if (isNullOrUndefined(start) && isNullOrUndefined(end)) {\n      start = this.start;\n      end = this.end;\n      if (!this.isForward) {\n        start = this.end;\n        end = this.start;\n      }\n    }\n    for (var i = 0; i < this.editRangeCollection.length; i++) {\n      var editRangeStart = this.editRangeCollection[i];\n      if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd && editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n        var startCell = start.paragraph.associatedCell;\n        var endCell = end.paragraph.associatedCell;\n        var editRangeCell = editRangeStart.paragraph.associatedCell;\n        if (!isNullOrUndefined(startCell) && !isNullOrUndefined(endCell)) {\n          if (startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n            if (this.isCellSelected(editRangeCell, start, end)) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n  Selection.prototype.isSelectionInsideEditRange = function (editRangeStart, start, end) {\n    var positionInfo = this.getPosition(editRangeStart);\n    var startPosition = positionInfo.startPosition;\n    var endPosition = positionInfo.endPosition;\n    if ((start.isExistAfter(startPosition) || start.isAtSamePosition(startPosition)) && (end.isExistBefore(endPosition) || end.isAtSamePosition(endPosition))) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPosition = function (element) {\n    var offset = element.line.getOffset(element, 1);\n    var startPosition = new TextPosition(this.owner);\n    startPosition.setPositionParagraph(element.line, offset);\n    var endElement;\n    if (element instanceof EditRangeStartElementBox) {\n      endElement = element.editRangeEnd;\n    } else if (element instanceof ContentControl) {\n      endElement = element.reference;\n    } else if (element instanceof BookmarkElementBox) {\n      endElement = element.reference;\n    } else if (element instanceof CommentCharacterElementBox) {\n      endElement = element.comment.commentEnd;\n    }\n    var endPosition;\n    if (!isNullOrUndefined(endElement.line)) {\n      offset = endElement.line.getOffset(endElement, 1);\n      endPosition = new TextPosition(this.owner);\n      endPosition.setPositionParagraph(endElement.line, offset);\n    } else {\n      endPosition = startPosition.clone();\n    }\n    return {\n      'startPosition': startPosition,\n      'endPosition': endPosition\n    };\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.checkContentControlLocked = function (checkFormat) {\n    this.owner.editorModule.isXmlMapped = false;\n    for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n      var contentControlStart = this.documentHelper.contentControlCollection[i];\n      if (isNullOrUndefined(contentControlStart.reference) || contentControlStart.reference.indexInOwner === -1) {\n        continue;\n      }\n      var position = this.getPosition(contentControlStart);\n      var cCstart = position.startPosition;\n      var cCend = position.endPosition;\n      var start = this.start;\n      var end = this.end;\n      if (!this.isForward) {\n        start = this.end;\n        end = this.start;\n      }\n      if (isNullOrUndefined(checkFormat)) {\n        var cCStartInsideSelction = (cCstart.isExistAfter(start) || cCstart.isAtSamePosition(start)) && (cCstart.isExistBefore(end) || cCstart.isAtSamePosition(end));\n        var cCEndInsideSelction = (cCend.isExistAfter(start) || cCend.isAtSamePosition(start)) && (cCend.isExistBefore(end) || cCend.isAtSamePosition(end));\n        if (cCStartInsideSelction && cCEndInsideSelction) {\n          if (contentControlStart.contentControlProperties.lockContentControl) {\n            this.owner.trigger(contentControlEvent);\n            return true;\n          }\n          return false;\n        }\n        if (cCStartInsideSelction || cCEndInsideSelction) {\n          if (!(cCstart.isAtSamePosition(start) || cCend.isAtSamePosition(start)) && (contentControlStart.contentControlProperties.lockContentControl || contentControlStart.contentControlProperties.lockContents)) {\n            return true;\n          }\n        }\n      }\n      if ((start.isExistAfter(cCstart) || start.isAtSamePosition(cCstart)) && (end.isExistBefore(cCend) || end.isAtSamePosition(cCend))) {\n        if (contentControlStart.contentControlProperties.xmlMapping && contentControlStart.contentControlProperties.xmlMapping.isMapped) {\n          this.owner.editorModule.isXmlMapped = true;\n        }\n        if (contentControlStart.contentControlProperties.lockContents) {\n          this.owner.trigger(contentControlEvent);\n          return true;\n        } else if (isNullOrUndefined(checkFormat) && (contentControlStart.contentControlProperties.type === 'CheckBox' || contentControlStart.contentControlProperties.type === 'ComboBox' || contentControlStart.contentControlProperties.type === 'DropDownList' || contentControlStart.contentControlProperties.type === 'Date')) {\n          this.owner.trigger(contentControlEvent);\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getElementPosition = function (element, isEnd) {\n    var offset = element.line.getOffset(element, isEnd ? 0 : 1);\n    var startPosition = new TextPosition(this.owner);\n    startPosition.setPositionParagraph(element.line, offset);\n    return {\n      'startPosition': startPosition,\n      'endPosition': undefined\n    };\n  };\n  //Restrict editing implementation ends\n  /**\n   * Update ref field.\n   * @private\n   */\n  Selection.prototype.updateRefField = function (field) {\n    if (isNullOrUndefined(field)) {\n      field = this.getHyperlinkField(true);\n    }\n    if (!isNullOrUndefined(field)) {\n      if (!this.isReferenceField(field)) {\n        return;\n      }\n      var fieldCode = this.getFieldCode(field).replace(/\\s+/g, ' ');\n      fieldCode = fieldCode.trim();\n      if (fieldCode.toLowerCase().indexOf('ref') === 0) {\n        var code = fieldCode.split(' ');\n        if (code.length > 1) {\n          var bookmarkId = code[1];\n          if (this.documentHelper.bookmarks.containsKey(bookmarkId)) {\n            var start = this.start;\n            var end = this.end;\n            if (!this.isForward) {\n              start = this.end;\n              end = this.start;\n            }\n            var bookmarkStart = this.documentHelper.bookmarks.get(bookmarkId);\n            var bookmarkEnd = bookmarkStart.reference;\n            var previousNode = bookmarkStart.previousNode;\n            if ((isNullOrUndefined(previousNode) || !(previousNode instanceof FieldElementBox)) && bookmarkEnd && bookmarkEnd.previousNode instanceof FieldElementBox && bookmarkEnd.previousNode.fieldType === 1 && !isNullOrUndefined(bookmarkEnd.previousNode.fieldBegin) && !isNullOrUndefined(bookmarkEnd.previousNode.fieldBegin.formFieldData)) {\n              bookmarkStart = bookmarkEnd.previousNode.fieldBegin.fieldSeparator;\n              bookmarkEnd = bookmarkEnd.previousNode.fieldBegin.fieldEnd;\n            } else if (previousNode instanceof FieldElementBox && previousNode.fieldType === 0 && !isNullOrUndefined(previousNode.formFieldData)) {\n              bookmarkStart = previousNode.fieldSeparator;\n              bookmarkEnd = previousNode.fieldEnd;\n            }\n            var offset = bookmarkStart.line.getOffset(bookmarkStart, 1);\n            start.setPositionParagraph(bookmarkStart.line, offset);\n            end.setPositionParagraph(bookmarkEnd.line, bookmarkEnd.line.getOffset(bookmarkEnd, 0));\n            var documentContent = this.owner.sfdtExportModule.write(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0, start.currentWidget, start.offset, end.currentWidget, end.offset, false, true);\n            var startElement = field.fieldSeparator;\n            var endElement = field.fieldEnd;\n            start.setPositionParagraph(startElement.line, startElement.line.getOffset(startElement, 1));\n            end.setPositionParagraph(endElement.line, endElement.line.getOffset(endElement, 0));\n            this.owner.editorModule.pasteContents(documentContent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @private\n   * @returns {void}\n   */\n  Selection.prototype.footnoteReferenceElement = function (start, end, inline) {\n    var container = this.getContainerWidget(start.paragraph);\n    var count = 0;\n    if (container instanceof FootNoteWidget) {\n      var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n      for (var i = 0; i < this.documentHelper.pages.length; i++) {\n        count = 0;\n        var page = this.documentHelper.pages[i];\n        for (var j = 0; j < page.bodyWidgets.length; j++) {\n          var bodyWidget = page.bodyWidgets[j];\n          for (var k = 0; k < bodyWidget.childWidgets.length; k++) {\n            var paragraph = bodyWidget.childWidgets[k];\n            if (paragraph instanceof TableWidget) {\n              for (var tr = 0; tr < paragraph.childWidgets.length; tr++) {\n                var tablerow = paragraph.childWidgets[tr];\n                for (var tc = 0; tc < tablerow.childWidgets.length; tc++) {\n                  var tablecell = tablerow.childWidgets[tc];\n                  for (var para = 0; para < tablecell.childWidgets.length; para++) {\n                    var paragr = tablecell.childWidgets[para];\n                    for (var line = 0; line < paragr.childWidgets.length; line++) {\n                      var lines = paragr.childWidgets[line];\n                      count = 0;\n                      if (!isNullOrUndefined(lines.children)) {\n                        for (var m = 0; m < lines.children.length; m++) {\n                          var child = lines.children[m];\n                          count += child.length;\n                          if (child instanceof FootnoteElementBox && child === footNoteElement) {\n                            start.setPositionParagraph(lines, count - 1);\n                            end.setPositionParagraph(lines, count);\n                            this.selectRange(start, end);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              for (var l = 0; l < paragraph.childWidgets.length; l++) {\n                var lines = paragraph.childWidgets[l];\n                count = 0;\n                if (!isNullOrUndefined(lines.children)) {\n                  for (var m = 0; m < lines.children.length; m++) {\n                    var child = lines.children[m];\n                    count += child.length;\n                    if (child instanceof FootnoteElementBox && child === footNoteElement) {\n                      start.setPositionParagraph(lines, count - 1);\n                      end.setPositionParagraph(lines, count);\n                      this.selectRange(start, end);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Convert hierachical index to linear index;\n   * @private\n   */\n  Selection.prototype.getAbsolutePositionFromRelativePosition = function (textPosition) {\n    var startPosition;\n    if (typeof textPosition == 'string') {\n      startPosition = this.getTextPosBasedOnLogicalIndex(textPosition);\n    } else {\n      startPosition = textPosition;\n    }\n    var paragraphInfo = this.getParagraphInfo(startPosition);\n    var positionInfo = {\n      position: 0,\n      done: false\n    };\n    this.getPositionInfoForHeaderFooter(paragraphInfo, positionInfo);\n    if (!positionInfo.done) {\n      //Iterate Footnotes content;\n    }\n    return positionInfo.position;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPositionInfoForBodyContent = function (paragraphInfo, positionInfo, blockWidget, tableBlock) {\n    var block = !isNullOrUndefined(blockWidget) ? blockWidget : this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n    //Iterate body content;\n    positionInfo.position += this.getBlockIndex(block, paragraphInfo, positionInfo, tableBlock);\n    return positionInfo;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getPositionInfoForHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n    positionInfo = this.getPositionInfoForBodyContent(paragraphInfo, positionInfo, undefined, tableBlock);\n    if (!positionInfo.done) {\n      //Iterate header/footer content;\n      this.getBlockIndexFromHeaderFooter(paragraphInfo, positionInfo, tableBlock);\n    }\n    return positionInfo;\n  };\n  Selection.prototype.getBlockIndexFromHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n    //Iterate header/footer content;\n    var headersFooters = this.documentHelper.headersFooters;\n    for (var _i = 0, headersFooters_1 = headersFooters; _i < headersFooters_1.length; _i++) {\n      var headerFooter = headersFooters_1[_i];\n      for (var i = 0; i < 6; i++) {\n        var currentHeaderFooter = headerFooter[i];\n        if (currentHeaderFooter) {\n          positionInfo.position += this.getBlockIndex(currentHeaderFooter.childWidgets[0], paragraphInfo, positionInfo, tableBlock);\n          if (positionInfo.done) {\n            return positionInfo;\n          }\n        } else {\n          positionInfo.position += 1;\n        }\n      }\n    }\n    return positionInfo;\n  };\n  Selection.prototype.getBlockIndex = function (block, paragraphInfo, positionInfo, tableBlock) {\n    var position = 0;\n    var fieldResult = {\n      length: 0\n    };\n    do {\n      if (block instanceof ParagraphWidget && !isNullOrUndefined(paragraphInfo) && !isNullOrUndefined(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n        //Paragraph start\n        position += 1;\n        var elementInfo = block.getInline(paragraphInfo.offset, 0);\n        position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n        // if (this.isEndOffset && this.end.offset === this.getLineLength(this.end.currentWidget) + 1) {\n        //     position += 1;\n        // }\n        // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n        //     position -= fieldResult.length;\n        // }\n        positionInfo.done = true;\n        break;\n      }\n      position = this.getBlockLength(paragraphInfo, block, position, positionInfo, true, tableBlock, fieldResult);\n      if (positionInfo.done) {\n        // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n        //     position -= fieldResult.length;\n        // }\n        break;\n      }\n      if (!isNullOrUndefined(block)) {\n        if (block.containerWidget instanceof BodyWidget && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n          var nextBlock = block.getSplitWidgets().pop().nextRenderedWidget;\n          if (!isNullOrUndefined(nextBlock) && block.containerWidget !== nextBlock.containerWidget) {\n            break;\n          } else {\n            block = nextBlock;\n          }\n        } else {\n          block = block.getSplitWidgets().pop().nextRenderedWidget;\n        }\n      }\n    } while (block);\n    //positionInfo.position = position;\n    return position;\n  };\n  Selection.prototype.getBlockTotalLength = function (block, targetBlock, positionInfo, tableBlock, fieldResult) {\n    var offset = 0;\n    var isDropdown = false;\n    var splittedWidget = block.getSplitWidgets();\n    for (var i = 0; i < splittedWidget.length; i++) {\n      for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n        var line = splittedWidget[i].childWidgets[j];\n        for (var k = 0; k < line.children.length; k++) {\n          var element = line.children[k];\n          if (element instanceof ListTextElementBox) {\n            continue;\n          }\n          if (element instanceof ShapeElementBox || element instanceof FootnoteElementBox) {\n            if (element instanceof ShapeElementBox) {\n              if (element.textFrame.childWidgets.length > 0) {\n                offset += this.getBlockIndex(element.textFrame.childWidgets[0], targetBlock, positionInfo, undefined);\n              }\n            } else {\n              offset += this.getBlockIndex(element.bodyWidget.childWidgets[0], targetBlock, positionInfo, undefined);\n            }\n            if (positionInfo.done) {\n              return offset;\n            }\n          }\n          if (element instanceof FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof DropDownFormField) {\n            isDropdown = true;\n          }\n          if (isDropdown && element instanceof FieldElementBox && element.fieldType == 1) {\n            if (element.previousNode instanceof TextElementBox) {\n              fieldResult.length += element.previousNode.length;\n              isDropdown = false;\n            }\n          }\n          if (!element.skipformFieldLength) {\n            offset += element.length;\n          }\n        }\n      }\n    }\n    return offset;\n  };\n  /**\n   * @private\n   */\n  Selection.prototype.getBlockLength = function (paragraphInfo, block, position, completed, skipShapeElement, tableBlock, fieldResult) {\n    if (paragraphInfo && block instanceof ParagraphWidget && !isNullOrUndefined(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n      //Paragraph start\n      position += 1;\n      var elementInfo = block.getInline(paragraphInfo.offset, 0);\n      position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n      if (this.isEndOffset && block.isInsideTable && block.associatedCell.lastChild.equals(block) && paragraphInfo.offset === this.getParagraphLength(block) + 1) {\n        position += 1;\n      }\n      completed.done = true;\n      return position;\n    }\n    if (block instanceof ParagraphWidget) {\n      // Code for Comparing the offset calculated using old approach and optimized approach\n      // if (this.isNewApproach) {\n      // position += 1;\n      // if (!skipShapeElement) {\n      //     position += block.length;\n      // } else {\n      //     position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n      // }\n      // } else {\n      //Add Paragraph start length;\n      position += 1;\n      if (!skipShapeElement) {\n        position += block.getTotalLength();\n      } else {\n        position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n      }\n      // }\n    } else if (block instanceof TableWidget) {\n      // Table start mark length\n      position += 1;\n      if (!isNullOrUndefined(tableBlock)) {\n        if (tableBlock instanceof TableWidget) {\n          if (tableBlock.equals(block)) {\n            completed.done = true;\n            return position;\n          }\n        }\n      }\n      var row = block.firstChild;\n      while (row) {\n        // Row mark length\n        position += 1;\n        if (!isNullOrUndefined(tableBlock)) {\n          if (tableBlock instanceof TableRowWidget) {\n            if (tableBlock.equals(row)) {\n              completed.done = true;\n              return position;\n            }\n          }\n        }\n        var cell = row.firstChild;\n        while (cell) {\n          // Cell mark length\n          position += 1;\n          if (!isNullOrUndefined(tableBlock)) {\n            if (tableBlock instanceof TableCellWidget) {\n              if (tableBlock.equals(cell)) {\n                completed.done = true;\n                return position;\n              }\n            }\n          }\n          var childBlock = cell.firstChild;\n          while (childBlock) {\n            position = this.getBlockLength(paragraphInfo, childBlock, position, completed, skipShapeElement, tableBlock, fieldResult);\n            if (completed.done) {\n              return position;\n            }\n            childBlock = childBlock.getSplitWidgets().pop().nextRenderedWidget;\n          }\n          cell = cell.nextWidget;\n        }\n        var tableIndex = row.ownerTable.index;\n        row = row.getSplitWidgets().pop().nextRenderedWidget;\n        if (row && row.ownerTable.index !== tableIndex) {\n          row = undefined;\n        }\n      }\n      // Table end mark length\n      // position += 1;\n    }\n    return position;\n  };\n  /**\n   * Calculate the cell length.\n   * @private\n   */\n  Selection.prototype.calculateCellLength = function (cell) {\n    var block = cell.firstChild;\n    var position = 0;\n    var completed = {\n      \"done\": false\n    };\n    var paragraphInfo = {\n      'paragraph': null,\n      'offset': 0\n    };\n    while (block) {\n      position = this.getBlockLength(paragraphInfo, block, position, completed, true, undefined, undefined);\n      block = block.getSplitWidgets().pop().nextRenderedWidget;\n    }\n    return position;\n  };\n  Selection.prototype.getBlockOffsetByElement = function (paragraphInfo, block, targetElement, elementIndex, fieldResult) {\n    var offset = 0;\n    var isDropdown = false;\n    var splittedWidget = block.getSplitWidgets();\n    for (var i = 0; i < splittedWidget.length; i++) {\n      for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n        var line = splittedWidget[i].childWidgets[j];\n        for (var k = 0; k < line.children.length; k++) {\n          var element = line.children[k];\n          if (element instanceof ListTextElementBox) {\n            continue;\n          }\n          if (element instanceof FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof DropDownFormField) {\n            isDropdown = true;\n          }\n          if (isDropdown && element instanceof FieldElementBox && element.fieldType == 1) {\n            if (element.previousNode instanceof TextElementBox) {\n              fieldResult.length += element.previousNode.length;\n              isDropdown = false;\n            }\n          }\n          if (element === targetElement) {\n            return offset + elementIndex;\n          }\n          if (element instanceof ShapeElementBox || element instanceof FootnoteElementBox) {\n            if (element instanceof ShapeElementBox) {\n              if (element.textFrame.childWidgets.length > 0) {\n                for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n                  offset = this.getBlockLength(paragraphInfo, element.textFrame.childWidgets[m], offset, {\n                    done: false\n                  }, false, undefined, undefined);\n                }\n              }\n            } else {\n              if (element.bodyWidget.childWidgets.length > 0) {\n                for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n                  offset = this.getBlockLength(paragraphInfo, element.bodyWidget.childWidgets[m], offset, {\n                    done: false\n                  }, false, undefined, undefined);\n                }\n              }\n            }\n          }\n          if (!element.skipformFieldLength) {\n            offset += element.length;\n          }\n        }\n      }\n    }\n    return offset;\n  };\n  /**\n   * This method is for collaborative editing.\n   * @private\n   */\n  Selection.prototype.getTableRelativeValue = function (startPosition, endPosition) {\n    // If start is in firset row first cell and end is in last row last cell or next table or next para. we need to minus the offset to 3. Else checking row.\n    // If start is first cell and end is in row last cell or other row last cell or other widgets. we need to minus the offset to 2. else return 0.\n    if (startPosition.currentWidget.paragraph.isInsideTable) {\n      if (this.isTableSelected()) {\n        return 3;\n      } else if (this.isRowSelect() && endPosition.paragraph.isInsideTable && startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n        return 2;\n      } else {\n        var table = startPosition.paragraph.associatedCell.ownerTable.getSplitWidgets();\n        var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n        if (startPosition.paragraph.associatedCell.equals(firstParagraph.associatedCell)) {\n          if (endPosition.paragraph.isInsideTable) {\n            if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n              var length_3 = this.isRowSelect() ? 2 : 3;\n              var table_1 = startPosition.paragraph.associatedCell.ownerTable;\n              while (table_1.containerWidget instanceof TableCellWidget) {\n                length_3 += 3;\n                table_1 = table_1.containerWidget.ownerTable;\n                if (table_1.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                  break;\n                }\n              }\n              return length_3;\n            } else {\n              return 0;\n            }\n          } else {\n            return 3;\n          }\n        } else {\n          if (endPosition.currentWidget.paragraph.isInsideTable) {\n            if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n              return 2;\n            } else {\n              return 0;\n            }\n          } else {\n            return 2;\n          }\n        }\n      }\n    }\n    return 0;\n  };\n  /**\n   *\n   * @private\n   */\n  Selection.prototype.isRowSelect = function () {\n    // This method wil return if start row child widgets equals to end row child widgets. \n    var start = this.start;\n    var end = this.end;\n    if (!this.isForward) {\n      start = this.end;\n      end = this.start;\n    }\n    if (isNullOrUndefined(start.paragraph.associatedCell) || isNullOrUndefined(end.paragraph.associatedCell) || start.paragraph.associatedCell.equals(end.paragraph.associatedCell) || this.isTableSelected(true)) {\n      return false;\n    }\n    var endTable = end.paragraph.associatedCell.ownerTable;\n    var isRowSelect = false;\n    if (endTable.containerWidget instanceof TableCellWidget) {\n      while (endTable.containerWidget instanceof TableCellWidget) {\n        endTable = endTable.containerWidget.ownerTable;\n        for (var i = 0; i < endTable.childWidgets.length; i++) {\n          var row_1 = endTable.childWidgets[i];\n          if (row_1.childWidgets[row_1.childWidgets.length - 1].equals(endTable.containerWidget)) {\n            isRowSelect = true;\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < endTable.childWidgets.length; i++) {\n        var row_2 = endTable.childWidgets[i];\n        if (row_2.childWidgets[row_2.childWidgets.length - 1].equals(end.paragraph.associatedCell)) {\n          isRowSelect = true;\n        }\n      }\n    }\n    var row = start.paragraph.associatedCell.ownerRow.getSplitWidgets();\n    var firstcell;\n    if (row[0].childWidgets.length > 0) {\n      firstcell = row[0].childWidgets[0];\n    }\n    return start.paragraph.associatedCell.equals(firstcell) && isRowSelect;\n  };\n  return Selection;\n}();\nexport { Selection };","map":{"version":3,"names":["Widget","BodyWidget","TableRowWidget","TableWidget","LineWidget","TextElementBox","ListTextElementBox","ImageElementBox","ParagraphWidget","TableCellWidget","FieldElementBox","BlockWidget","HeaderFooterWidget","BlockContainer","BookmarkElementBox","ElementBox","EditRangeStartElementBox","EditRangeEndElementBox","TabElementBox","CommentElementBox","CommentCharacterElementBox","TextFormField","CheckBoxFormField","DropDownFormField","ShapeElementBox","TextFrame","ContentControl","FieldTextElementBox","FootNoteWidget","FootnoteElementBox","ShapeBase","HelperMethods","Point","SelectionCharacterFormat","SelectionCellFormat","SelectionParagraphFormat","SelectionRowFormat","SelectionSectionFormat","SelectionTableFormat","SelectionImageFormat","PageLayoutViewer","WebLayoutViewer","WRowFormat","isNullOrUndefined","createElement","L10n","Browser","Dictionary","contentControlEvent","beforeFormFieldFillEvent","afterFormFieldFillEvent","requestNavigateEvent","CharacterRangeType","WCharacterFormat","WParagraphFormat","WParagraphStyle","HtmlExport","Popup","TextPosition","SelectionWidgetInfo","Hyperlink","DropDownButton","Selection","documentEditor","_this","upDownSelectionLength","isSkipLayouting","isImageSelected","contextTypeInternal","undefined","caret","isRetrieveFormatting","skipFormatRetrieval","isModifyingSelectionInternally","isMoveDownOrMoveUp","isEndOffset","isViewPasteOptions","skipEditRangeRetrieval","selectedWidgets","isHighlightEditRegionIn","isHighlightFormFields","isHightlightEditRegionInternal","isCurrentUser","isHighlightNext","isWebLayout","editRegionHighlighters","formFieldHighlighters","isSelectList","previousSelectedFormField","isFormatUpdated","isCellPrevSelected","currentFormField","pasteOptions","event","locale","owner","defaultLocale","setLocale","item","text","getConstant","editorModule","applyPasteOptions","applyTablePasteOptions","hideCaret","style","display","documentHelper","start","end","characterFormatIn","paragraphFormatIn","sectionFormatIn","rowFormatIn","cellFormatIn","tableFormatIn","imageFormatInternal","editRangeCollection","Object","defineProperty","prototype","get","set","value","onHighlight","enumerable","configurable","htmlWriterIn","viewer","startInternal","documentStart","endInternal","isDocumentLoaded","selectionStartPage","pages","indexOf","selectionEndPage","isExistBefore","container","getContainerWidget","paragraph","footNoteType","isAtSamePosition","getHierarchicalIndexByPosition","containerWidget","getText","getSelBookmarks","offset","JSON","stringify","writeSfdt","getBookmarks","includeHidden","getHyperlinkField","getFieldInfo","field","code","getFieldCode","result","getFieldResultText","bookmarkCln","bookmarks","isForward","bookmrkStart","bookmrkEnd","isCellSelected","selectedCells","getSelectedCells","i","length","keys","reference","bmStartPos","getElementPosition","startPosition","bmEndPos","isInsideTable","associatedCell","endCell","bmEndPosCell","ownerTable","equals","getCellInTable","isExistAfter","push","name","getModuleName","checkLayout","layoutType","isHeaderFooter","destroy","layoutWholeDocument","goToHeader","enableHeaderAndFooter","enableHeadersFootersRegion","bodyWidget","page","headerWidget","goToFooter","footerWidget","closeHeaderFooter","disableHeaderFooter","goToPage","pageNumber","scrollToPage","updateTextPositionForBlockContainer","bodyWidgets","selectTable","enableSelection","selectTableInternal","selectRow","selectTableRow","selectColumn","selectColumnInternal","selectCell","selectTableCell","select","selectionSettings","startOrEnd","getTextPosBasedOnLogicalIndex","endPosition","selectPosition","point","x","y","pageCoordinates","findFocusedPage","extend","moveTextPosition","updateTextPositionForSelection","selectByHierarchicalIndex","selectField","fieldStart","isInField","selectFieldInternal","isKeyBoardEvent","isReplacingFormResult","formFillingMode","isFormFillProtectedMode","fieldEnd","fieldSeparator","line","getOffset","setPositionParagraph","isBookmark","nextNode","nextElement","endoffset","selection","selectRange","triggerFormFillEvent","selectShape","shape","toggleBold","toggleItalic","toggleAllCaps","toggleUnderline","underline","toggleStrikethrough","strikethrough","toggleHighlightColor","highlightColor","toggleSubscript","toggleSuperscript","toggleTextAlignment","textAlignment","increaseIndent","decreaseIndent","navigateHyperlink","fieldBegin","fireRequestNavigate","toLowerCase","match","hyperlink","eventArgs","isHandled","navigationLink","linkType","localReference","source","trigger","navigateBookmark","copyHyperlink","hyperLinkField","linkText","getLinkText","copyToClipboard","isHideSelection","bodyWgt","sectionFormat","pageHt","pageHeight","footerDistance","headerFooterHt","boundingRectangle","height","contextType","convertPointToPixel","highlightSelection","isSelectionChanged","enableImageResizerMode","imageResizerModule","hideImageResizer","isEmpty","isInShape","showResizerForShape","updateCaretPosition","highlightSelectedContent","isComposingIME","updateTouchMarkPosition","scrollToPosition","createHighlightBorder","lineWidget","width","left","top","isElementBoxHighlight","floatingItems","floatingElements","k","shapeElement","startTextPos","endTextPos","currentWidget","getPage","widgets","selectionWidget","selectionWidgetCollection","addEditRegionHighlight","addFormFieldHighlight","containsKey","remove","add","wrapPosition","getWrapPosition","selectionWidgetInfos","splitSelectionHighlightPosition","renderHighlight","pageTop","getPageTop","pageLeft","containerTop","selectionCanvas","zoomFactor","clipSelection","selectedWidget","renderDashLine","selectionContext","containerLeft","fillStyle","globalAlpha","fillRect","z","shapeTop","shapeWidth","shapeHeight","restore","children","startLeft","getLeftInternal","wrapPos","isStarted","element","textWrappingStyle","padding","clipInfo","m","info","highlighters","collection","editRegionHighlight","color","userColor","formFieldHighlight","createHighlightBorderInsideTable","cellWidget","margin","leftBorderWidth","right","rightBorderWidth","isVisiblePage","isPageInVisibleBound","clearRect","beginPath","save","rect","clip","addSelectionHighlight","canvasContext","widget","render","getScaledValue","widgetInfo","widgetInfoCollection","selectedWidgetInfo","selectionModule","j","ctx","fontColor","characterFormat","fillColor","getColor","format","copyInsertFormat","heightInfo","textHelper","getHeight","descent","Height","BaselineOffset","getUnderlineYPosition","addSelectionHighlightTable","tableCellWidget","selectedWidgetInfoCollection","top_1","removeSelectionHighlight","currentParaWidget","getTop","selectedWidgetCollection","pageRect","pageIndex","pageGap","selectCurrentWord","excludeSpace","clone","selectCurrentWordRange","selectParagraph","paragraphStartInternal","moveToParagraphEndInternal","location","fireSelectionChanged","selectLine","moveToLineStart","handleShiftEndKey","moveToDocumentStart","handleControlHomeKey","moveToDocumentEnd","handleControlEndKey","moveToParagraphStart","setPositionInternal","moveToParagraphEnd","moveToNextLine","moveDown","moveToPreviousLine","moveUp","moveToNextCharacter","handleRightKey","moveToPreviousCharacter","handleLeftKey","wordStart","indexInInline","inlineObj","getInline","inline","index","fieldType","moveToWordEndInternal","moveToWordStartInternal","extendToParagraphStart","extendToParagraphEnd","moveNextPosition","updateForwardSelection","formField","getCurrentFormField","getFormFieldInFormFillMode","selectPrevNextFormField","moveToNextParagraph","moveToNextParagraphStartInternal","nextFootnote","isinFootnote","footNoteElement","footNoteReference","colLength","footnoteCollection","indexCount","nextFootnoteElement","referenceElement","footnoteWidget","childWidgets","previousFootnote","footnote","nextEndnote","isinEndnote","endNoteElement","endnoteCollection","endnoteElement","endPage","endnoteWidget","previousEndnote","movePreviousPosition","updateBackwardSelection","moveToPreviousParagraph","extendToPreviousLine","extendToLineEnd","moveToLineEndInternal","extendToLineStart","moveToLineStartInternal","getEndOffset","isParagraphLastLine","isParagraphFirstLine","beforeUp","columnIndex","isMultiColumn","numberOfColumns","beforeIndex","afterUp","previousRenderedWidget","beforeDown","afterDown","nextRenderedWidget","layout","getBodyWidget","getFirstBlockInFirstCell","table","firstrow","firstcell","getFirstCellInRegion","row","startCell","selectionLength","isMovePrevious","cellStart","getCellLeft","cellEnd","cellFormat","cellWidth","flag","round","cellLeft","previousWidget","getFirstParagraph","tableCell","previousSplitWidget","firstBlock","firstChild","getFirstParagraphBlock","getLastBlockInLastCell","lastRow","lastCell","moveToLineEnd","cursorPoint","textPosition","isMouseLeave","getLineWidgetInternal","updateTextPositionWidget","selectionStartIndex","getHierarchicalIndexInternal","selectionEndIndex","isForwardSelection","validateForwardFieldSelection","validateBackwardFieldSelection","getDocumentStart","block","setPositionForBlock","getDocumentEnd","lastPage","section","blocks","lastBlkItem","lastBlock","documentEnd","selectContent","enableAutoFocus","checkForCursorVisibility","handleControlLeftKey","extendToWordStartInternal","handleControlRightKey","extendToWordEndInternal","handleControlDownKey","handleControlUpKey","handleShiftLeftKey","extendBackward","handleShiftUpKey","handleShiftRightKey","extendForward","handleShiftDownKey","extendToNextLine","handleControlShiftLeftKey","isCurrentParaBidi","handleControlShiftUpKey","handleControlShiftRightKey","handleControlShiftDownKey","handleUpKey","handleEndKey","handleHomeKey","handleDownKey","handleShiftHomeKey","handleControlShiftEndKey","setPosition","handleControlShiftHomeKey","handleSpaceBarKey","isDocumentProtected","protectionType","getFormFieldType","toggleCheckBoxFormField","handleTabKey","isNavigateInCell","isShiftTab","isCursorAtParaStart","isCursorAtLineStart","paragraphFormat","listFormat","listId","isFirstLine","selectPreviousCell","selectNextCell","getStartOffset","isReadOnlyMode","currentPara","isFirstParaForList","updateListLevelIndent","defaultTabWidth","updateListLevel","firstLineIndent","onApplyParagraphFormat","leftIndent","clientArea","handleTextInput","formFields","handlePageUpPageDownKey","isPageDown","shiftKey","offsetX","offsetY","previousScrollTop","viewerContainer","scrollTop","visibleBounds","isSameScrollTop","skipScrollToPosition","setTimeout","position","setPositionForLineWidget","currentStart","formFieldData","enabled","paraIndex","forward","navigateToNextFormField","type","isInlineFormFillProtectedMode","selectTextElementStartOfField","getPhysicalPositionInternal","selectInternal","isKeyBoardNavigation","previousField","currentField","previousFieldData","currentFieldData","applyFormTextFormat","documentEditorSettings","formFieldSettings","tableRow","ownerRow","tableAdv","prevRow","selectTableCellInternal","prevCell","nextWidget","insertRow","nextRow","nextCell","clearMultiSelection","firstParagraph","lastParagraph","getLastParagraph","selectParagraphInternal","firstLineWidget","getTable","containerCell","getContainerCellOf","firstPara","lastPara","getLastParagraphBlock","lastChild","getTableRevision","startIndex","getAbsolutePositionFromRelativePosition","endIndex","Math","abs","contains","getSelectedCell","containsCell","columnCells","getColumnCellsForSelection","lastLine","startCellColumnCells","endCellColumnCells","startPos","endPos","getContainerCell","selectAll","headerFooter","textFrame","getCurrentTextFrame","pageLength","child","endNotes","moveForward","moveBackward","extendToWordStartEnd","extendToWordStart","extendToWordEnd","isNavigation","moveToPreviousParagraphInTable","isCellSelect","moveToNextParagraphInTable","getTextPosition","hierarchicalIndex","setPositionForCurrentIndex","includeObject","getTextInternal","temp","startOffset","endOffset","startInlineObj","elementInfo","getRenderedInline","endInlineObj","endInline","objectCharacter","substring","getTextInline","nextParagraphWidget","getNextParagraphBlock","getHierarchicalIndex","hfString","headerFooterType","toString","sectionIndex","ind","indexInOwner","containerShape","rowIndex","getParagraphInfo","blockInfo","getParagraph","lineInfo","getLineInfoBasedOnParagraph","getParagraphLength","next","nextSplitWidget","getLineInfo","getParagraphInternal","parseInt","replace","getHeaderFooterWidget","getFootNoteWidget","getBodyWidgetInternal","index1","value1","footNote","isHeader","headerFooterWidget","blockIndex","childWidget","getBlockByIndex","getFirstParagraphInFirstCell","getSplitWidgets","pop","getParagraphInfoInternal","getCellFromSelection","cell","hasMergedCells","colIndex","tableIndex","getCellFromSelectionInTable","bounds","getCellBoundsInfo","sortedRowIndexArray","sortedColumnIndexArray","sort","requiredRow","requiredCol","rowLast","column","colLast","isRequiredCellExist","widget_1","rowFirst","colFirst","widget_2","getActualOffset","paraElement","length_1","getLineLength","getBookmarkProperties","bookmark","bookmarkType","properties","isParagraphMarkSelected","isAfterParagraphMark","bookmarkStart","isAfterCellMark","isTableSelected","isAfterTableMark","isRowSelected","isAfterRowMark","paraLength","endIndices","split","rowSpan","columnSpan","lineOffset","previous","getListTextElementBox","paragarph","listTextElement","getListLevel","currentList","listLevelNumber","getListById","getAbstractListById","abstractListId","levels","inlineElement","endParagraphWidget","span","isSkipTrim","fieldCode","endParagraph","startLineIndex","getFieldCodeInternal","trim","inlineIndex","i_1","getTocFieldInternal","getNextParagraph","getPreviousParagraph","getNextStartInline","nextValidInline","getNextValidElement","getPreviousTextInline","previousNode","isLinkedFieldCharacter","getNextTextInline","getContainerTable","isElementInSelection","isStart","elemPosition","isSelectionInsideElement","cell1","cell2","cellIndex","startPage","startindex","endindex","isExistBeforeInline","currentInline","startParagraph","isExistAfterInline","isRetrieve","getNextRenderedBlock","getPreviousRenderedBlock","getNextParagraphCell","getFirstBlockInNextHeaderFooter","nextBlock","nextPage","getLastBlockInPreviousHeaderFooter","previousBlock","previousPage","getPreviousParagraphBlock","isAutoList","getLastParagraphInLastCell","getPreviousParagraphCell","hasValidInline","endLine","includeShape","bidi","para","childLength","getElementInfo","getStartLineOffset","getPreviousSelectionCell","getFirstParagraphInLastRow","getPreviousParagraphSelection","getPreviousSelectionRow","getPreviousSelectionBlock","getNextSelectionBlock","getLastParagraphInFirstRow","getNextParagraphSelection","getNextSelectionCell","getNextSelection","getNextSelectionRow","getPreviousSelection","prevBodyWidget","tableWidget","getLastCellInRegion","selLength","isMovePrev","getPreviousValidOffset","validOffset","count","getNextValidOffset","getParagraphMarkSize","topMargin","bottomMargin","size","baselineOffset","maxHeight","maxBaselineOffset","lineSpacing","getLineSpacing","beforeSpacing","getBeforeSpacing","lineSpacingType","getAfterSpacing","Width","moveNextLine","paragraphWidget","getLeft","getPhysicalPositionInline","isSelectionChangedOnMouseMoved","highlightCell","startInline","getNextRenderedElementBox","fieldValue","elementBoxObj","getElementBoxInternal","elementBox","isRemoteAction","positionImageResizer","showImageResizer","isTouchInput","touchStart","touchEnd","highlight","highlightNextBlock","hightLightNextParagraph","startElement","endElement","startLineWidget","endLineWidget","startLineObj","getStartLineWidget","endLineObj","getEndLineWidget","isRtlText","isRightToLeft","elementBoxCollection","getElementsForward","elementIsRTL","charFormat","paragraphMarkWidth","getLineStartLeft","getWidth","elementCollection","isLastLine","lineIndex","highlightParagraph","highlightTable","inlineInfo","getLineWidgetInternalInline","getLineWidgetParagraph","linewidget","getLineWidget","highlightCells","endCellLeft","endCellRight","tableWidgetCollection","startTableIndex","endTableIndex","highlightRow","startRowIndex","endRowIndex","highlightInternal","getNextParagraphRow","getPreviousParagraphRow","containsRow","highlightCellWidget","sourceCell","isAtCellEnd","cells","getLevelFormatNumber","numberFormat","highlightContainer","getPreviousValidElement","previousValidInline","validateTextPosition","nextInline","commentType","prevInline","getElementBox","getFieldCharacterPosition","handledEnter","getNextLineWidget","previousInline","getPreviousTextElement","getNextTextElement","measureObj","firstInline","getNextValidElementForField","nextParagraph","getEndPosition","isRenderBookmarkAtEnd","bookmarkElement","getRenderedField","elementObj","widgetIndex","getCaretHeight","isEmptySelection","isItalic","elementBoxInfo","getFieldCharacterHeight","heightElement","maxLineHeight","top_2","bottom","sizeInfo","italic","textSizeInfo","charHeight","baselineAlignment","elementHeight","top_3","isLastRenderedInline","clearSelectionHighlightInSelectedWidgets","isNonEmptySelection","isDragStarted","clear","clearChildSelectionHighlight","clearSelectionHighlightLineWidget","clearSelectionHighlight","getLineWidgetBodyWidget","isGetFirstChild","floatWidget","floatWidgetWidth","getTableCellWidth","getLineWidgetTableWidget","selectionBody","isFit","columns","footChild","getLineWidgetParaWidget","getNextWidgetHeight","wrapTextAround","marginTop","lineTotalHeight","nextLine","getElementsBackward","i_2","rowFormat","heightType","getLineWidgetRowWidget","cellSpacing","tableFormat","leftCellSpacing","rightCellSpacing","topCellSpacing","bottomCellSpacing","rowWidget","getLineWidgetCellWidget","getFirstBlock","updateTextPosition","caretPosition","comparePageWidthAndMargins","isImageSelectedObj","updateTextPositionIn","selectedImageWidget","includeParagraphMark","elementValues","getFirstElement","isParaBidi","renderedElements","selectParaMark","mouseDownOffset","isInInline","checkPointIsInLine","isInShapeBorder","String","fromCharCode","prevWidth","charIndex","substr","scriptType","trimEndWidth","charWidth","curIndex","previousElement","getTextLength","textMetrics","hasValidElement","isParagraphEnd","isLineEnd","isEndsWithLineBreak","getParagraphMarkWidth","checkAllFloatingElements","isShapeSelected","floatElement","renderedElement","renderedChild","getIndexInInline","paraFormat","renderedWidget","isFieldCode","widgetInternal","characterRange","RightToLeft","moveCaretPosition","updatePositionObj","setPositionForSelection","getFirstElementInternal","childLen","positionAtStart","selectFirstBlock","Error","physicalLocation","selects","skipSelectionChange","updatePhysicalPosition","retrieveCurrentFormatProperties","hideToolTip","isLayoutEnabled","isShiftingEnabled","restrictEditingPane","isShowRestrictPane","updateUserInformation","isInHeaderFooter","fireSelectionChange","updateFocus","rulerHelper","showRuler","updateRuler","retrieveImageFormat","retrieveCharacterFormat","retrieveParagraphFormat","retrieveSectionFormat","retrieveTableFormat","setCurrentContextType","image","imageFormat","copyImageFormat","clearImageFormat","getPreviousContextType","isElement","getContextElement","getNextContextType","contextIsinImage","contextIsinTable","baseStyle","tocField","currentRevision","getCurrentRevision","showRevisions","trackChangesPane","currentSelectedRevision","currentSelectedComment","commentReviewPane","selectReviewTab","notify","comment","showComments","changes","isUserClosed","isInHeader","addItemRevisions","currentItem","isFromAccept","revisions","selectRevision","accept","reject","hasRevisions","currentElement","startPara","nextOffsetElement","eleEndPosition","getLength","processLineRevisions","handleAcceptReject","paraWidget","getselectedRevisionElements","acceptReject","toAccept","revisionCollec","getSelectedLineRevisions","addRevisionsCollec","i_3","elements","eleStartPosition","revisCollec","copyFormat","retrieveCellFormat","retrieveRowFormat","clearFormat","getCellFormat","clearCellFormat","getRowFormat","clearRowFormat","combineFormat","tempTableRow","startTable","endTable","startParaSection","endParaSection","startPageIndex","endPageIndex","getParagraphFormatForSelection","getParagraphFormatInternalInCell","getParagraphFormatInternalInParagraph","getParagraphFormatInternalInBlock","getParagraphsInSelection","paragraphsInSelection","getParagraphFormatInternalInTable","getParagraphFormatInCell","getParagraphFormatInBlock","getParagraphFormatInParagraph","getParagraphFormatInTable","cellAdv","getParagraphFormatInRow","getParaFormatForCell","startCellIn","endCellIn","getFontNameToRender","listLevel","uniqueCharacterFormat","elemInfo","getCharacterFormatForSelection","getCharacterFormatInTableCell","getCharacterFormat","getCharacterFormatForTableRow","tableRowAdv","getCharacterFormatForSelectionCell","getCharacterFormatForBlock","getCharacterFormatInternalInTable","startIn","endIn","getCharacterFormatInternal","canRetrieveNextCharacterFormat","isUpdated","setCharacterFormat","isFieldStartSelected","inlineAndIndex","currentLineIndex","previousLine","getNextValidCharacterFormat","getNextValidCharacterFormatOfField","getCharacterFormatInTable","blockAdv","checkCursorIsInSelection","isSelected","top_4","widgetIn","copySelectionParagraphFormat","copyToFormat","getHyperlinkDisplayText","isNestedField","displayText","navigateHyperLinkOnEvent","getHyperLinkFieldInCurrentSelection","copyAddress","link","screenTip","isCrossRef","setHyperlinkContentToToolTip","xPos","isFormField","contextMenuModule","contextMenuInstance","toolTipElement","className","appendChild","screenTipElement","toolTipTextElement","styles","l10n","toolTipText","useCtrlClickToFollowHyperlink","isIosDevice","getScreenTipText","helpText","innerText","getTooltipPosition","showToolTip","toolTipField","toolTipObject","X","Y","show","setFootnoteContentToToolTip","ln","footnoteType","innerHTML","positions","setLockInfoTooptip","user","toolTipInfo","widgetTop","containerWidth","getBoundingClientRect","scrollLeft","clientWidth","offsetHeight","updateSelectionInfo","getCell","getFirstParagraphInCell","lastCellInRow","createPasteElement","items","currentPasteAction","iconCss","obj","unshift","splice","pasteElement","splitButtonEle","id","containerId","pasteDropDwn","appendTo","dataBind","relateTo","parentElement","hide","cursorPosition","lineStartLeft","rightIndent","checkedFields","getHyperLinkFields","getHyperLinkFieldInternal","getFootNoteElementInCurrentSelection","lineStartInLeft","leftLength","checkFormField","fields","isParagraph","paragraphIsInFieldResult","isInline","inlineIsInFieldResult","isImageField","getBlock","currentIndex","bodyIndex","getBlockInternal","node","blockObj","fieldParagraph","currentParagraph","isReferenceField","isInlineFormFillMode","checkFieldResult","fieldEndElement","isNested","nestedTable","selectListText","selectionLineWidget","selectionIndex","highlightListText","getLeftValue","isListTextSelected","updateImageSize","alternateText","alternatetext","elementIndex","reLayoutParagraph","getSelectedCellsInTable","startColumnIndex","endColumnIndex","startRowindex","copy","copySelectedContent","isCut","sfdtExportModule","isCopying","getHtmlContent","handleCut","write","optimizeSfdt","documentContent","copiedData","isOptimizedSfdt","htmlWriter","writeHtml","htmlContent","window","getSelection","removeAllRanges","isSafariOnMac","navigator","vendor","userAgent","isMobileDeviceOrInternetExplorer","test","shadowRoot","div","document","shadowDOM","attachShadow","mode","body","contentEditable","range","createRange","selectNodeContents","addRange","copySuccess","execCommand","e","parentNode","removeChild","showCaret","currentPage","currentRenderingPage","isRowOrCellResizing","isImageResizerVisible","isShapeResize","scrollbarWidth","isReadOnly","enableCursorOnReadOnly","caretLeft","caretStartLeft","caretEndLeft","page_1","getSelectionPage","setEditableDivCaretPosition","editableDiv","focus","childNodes","setStart","collapse","initCaret","caretInfo","updateCaretSize","parseFloat","showHidePasteOptions","isIE","isHtmlPaste","getRect","top_5","skipUpdate","caretHeight","paragraphInfo","transform","updateCaretToPage","getCaretBottom","caretHeightInfo","onKeyDownInternal","ctrl","shift","alt","key","which","keyCode","focusIn","isControlPressed","preventDefault","optionsPaneModule","showNavigationPane","showHideOptionsPane","isCompleted","insertText","toggleShowHiddenMarksInternal","isCommentOnlyMode","searchModule","searchHighlighters","searchResults","checkAndEnableHeaderFooter","pagePoint","isCursorInsidePageRect","isCursorInHeaderRegion","isCursorInFooterRegion","headerHeight","header","min","max","pageBottom","footerHeight","shiftBlockOnHeaderFooterEnableDisable","parentHFWidget","currentHFWidget","isRelayout","headerWidgetIn","footerWidgetIn","parentSectionFormat","currentSectionFormat","headerDistance","updateHFClientArea","layoutHeaderFooterItems","headersFooters","bodywidget","_i","_a","shiftPageContent","editPosition","getCellsToSelect","columnFirst","columnLast","rows","cellArray","selectBookmarkInTable","moveToStart","excludeBookmarkStartEnd","bookmrkElmnt","selectBookmark","getTocField","tocPara","isTocStyle","isTOC","isRTLText","navigatePreviousComment","commentNavigateInternal","navigateNextComment","comments","selectComment","navigatePreviousRevision","revisionNavigateInternal","navigateNextRevision","currentSelectedRevisionInternal","revision","commentStart","commentEnd","isSelect","firstElement","lastElement","ownerBase","firstCell","isEmptyWidget","splittedWidgets","isEndsWithPageBreak","isEndsWithColumnBreak","isTrackingPageBreak","curentPosition","selectTableRevision","firstElementTable","lastElementTable","firstRowWidget","secondRowWidget","updateEditRangeCollection","editRangeStart","everyOneArea","editRanges","currentUser","isHighlightEditRegion","highlightEditRegion","unHighlightEditRegion","renderVisiblePages","enableLockAndEdit","updateScrollBars","highlightEditRegionInternal","highlightFormFields","positionInfo","getPosition","highlightEditRegions","showAllEditingRegion","editRangeEnd","navigateToNextEditingRegion","editRange","getEditRangeStartElement","sortEditRangeCollection","length_2","nextPosition","firstPosition","toggleEditingRegionHighlight","editStart","isSelectionInEditRegion","checkSelectionIsAtEditRegion","isSelectionInsideEditRange","editRangeRow","isEditRangeCellSelected","editRangeCell","checkContentControlLocked","checkFormat","isXmlMapped","contentControlCollection","contentControlStart","cCstart","cCend","cCStartInsideSelction","cCEndInsideSelction","contentControlProperties","lockContentControl","lockContents","xmlMapping","isMapped","isEnd","updateRefField","bookmarkId","bookmarkEnd","pasteContents","footnoteReferenceElement","tr","tablerow","tc","tablecell","paragr","lines","l","done","getPositionInfoForHeaderFooter","getPositionInfoForBodyContent","blockWidget","tableBlock","getBlockIndex","getBlockIndexFromHeaderFooter","headersFooters_1","currentHeaderFooter","fieldResult","getBlockOffsetByElement","getBlockLength","getBlockTotalLength","targetBlock","isDropdown","splittedWidget","skipformFieldLength","completed","skipShapeElement","getTotalLength","childBlock","calculateCellLength","targetElement","getTableRelativeValue","isRowSelect","length_3","table_1","row_1","row_2"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/selection/selection.js"],"sourcesContent":["import { Widget, BodyWidget, TableRowWidget, TableWidget, LineWidget, TextElementBox, ListTextElementBox, ImageElementBox, ParagraphWidget, TableCellWidget, FieldElementBox, BlockWidget, HeaderFooterWidget, BlockContainer, BookmarkElementBox, ElementBox, EditRangeStartElementBox, EditRangeEndElementBox, TabElementBox, CommentElementBox, CommentCharacterElementBox, TextFormField, CheckBoxFormField, DropDownFormField, ShapeElementBox, TextFrame, ContentControl, FieldTextElementBox, FootNoteWidget, FootnoteElementBox, ShapeBase } from '../viewer/page';\nimport { HelperMethods, Point } from '../editor/editor-helper';\nimport { SelectionCharacterFormat, SelectionCellFormat, SelectionParagraphFormat, SelectionRowFormat, SelectionSectionFormat, SelectionTableFormat, SelectionImageFormat } from './selection-format';\nimport { PageLayoutViewer, WebLayoutViewer, WRowFormat } from '../index';\nimport { isNullOrUndefined, createElement, L10n, Browser } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { contentControlEvent, beforeFormFieldFillEvent, afterFormFieldFillEvent, requestNavigateEvent, CharacterRangeType } from '../../base/index';\nimport { WCharacterFormat, WParagraphFormat, WParagraphStyle } from '../index';\nimport { HtmlExport } from '../writer/html-export';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport { TextPosition, SelectionWidgetInfo, Hyperlink } from './selection-helper';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\n/* eslint-disable */\n/**\n * Selection\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * @param documentEditor\n     * @private\n     */\n    function Selection(documentEditor) {\n        var _this = this;\n        /**\n         * @private\n         */\n        this.upDownSelectionLength = 0;\n        /**\n         * @private\n         */\n        this.isSkipLayouting = false;\n        /**\n        * @private\n        */\n        this.isImageSelected = false;\n        this.contextTypeInternal = undefined;\n        /**\n         * @private\n         */\n        this.caret = undefined;\n        //Format Retrieval Field\n        /**\n         * @private\n         */\n        this.isRetrieveFormatting = false;\n        /**\n         * @private\n         */\n        this.skipFormatRetrieval = false;\n        /**\n         * @private\n         */\n        this.isModifyingSelectionInternally = false;\n        this.isMoveDownOrMoveUp = false;\n        /**\n         * @private\n         */\n        this.isEndOffset = false;\n        /**\n         * @private\n         */\n        this.isViewPasteOptions = false;\n        /**\n         * @private\n         */\n        this.skipEditRangeRetrieval = false;\n        /**\n         * @private\n         */\n        this.selectedWidgets = undefined;\n        /**\n         * @private\n         */\n        this.isHighlightEditRegionIn = false;\n        /**\n         * @private\n         */\n        this.isHighlightFormFields = false;\n        /**\n         * @private\n         */\n        this.isHightlightEditRegionInternal = false;\n        /**\n         * @private\n         */\n        this.isCurrentUser = false;\n        /**\n         * @private\n         */\n        this.isHighlightNext = false;\n        /**\n         * @private\n         */\n        this.isWebLayout = false;\n        /**\n         * @private\n         */\n        this.editRegionHighlighters = undefined;\n        /**\n         * @private\n         */\n        this.formFieldHighlighters = undefined;\n        this.isSelectList = false;\n        /**\n         * @private\n         */\n        this.previousSelectedFormField = undefined;\n        /**\n         * @private\n         */\n        this.isFormatUpdated = false;\n        /**\n         * @private\n         */\n        this.isCellPrevSelected = false;\n        /**\n         * @private\n         */\n        this.currentFormField = undefined;\n        /**\n         * @private\n         */\n        this.pasteOptions = function (event) {\n            var locale = new L10n('documenteditor', _this.owner.defaultLocale);\n            locale.setLocale(_this.owner.locale);\n            if (event.item.text === locale.getConstant('Keep source formatting')) {\n                _this.owner.editorModule.applyPasteOptions('KeepSourceFormatting');\n            }\n            else if (event.item.text === locale.getConstant('Match destination formatting')) {\n                _this.owner.editorModule.applyPasteOptions('MergeWithExistingFormatting');\n            }\n            else if (event.item.text === locale.getConstant('NestTable')) {\n                _this.owner.editorModule.applyTablePasteOptions('NestTable');\n            }\n            else if (event.item.text === locale.getConstant('InsertAsRows')) {\n                _this.owner.editorModule.applyTablePasteOptions('InsertAsRows');\n            }\n            else if (event.item.text === locale.getConstant('InsertAsColumns')) {\n                _this.owner.editorModule.applyTablePasteOptions('InsertAsColumns');\n            }\n            else if (event.item.text === locale.getConstant('OverwriteCells')) {\n                _this.owner.editorModule.applyTablePasteOptions('OverwriteCells');\n            }\n            else {\n                _this.owner.editorModule.applyPasteOptions('KeepTextOnly');\n            }\n        };\n        /**\n         * Hides caret.\n         *\n         * @private\n         * @returns {void}\n         */\n        this.hideCaret = function () {\n            if (!isNullOrUndefined(_this.caret)) {\n                _this.caret.style.display = 'none';\n            }\n        };\n        this.owner = documentEditor;\n        this.documentHelper = this.owner.documentHelper;\n        this.start = new TextPosition(this.owner);\n        this.end = new TextPosition(this.owner);\n        this.selectedWidgets = new Dictionary();\n        this.characterFormatIn = new SelectionCharacterFormat(this);\n        this.paragraphFormatIn = new SelectionParagraphFormat(this, this.documentHelper);\n        this.sectionFormatIn = new SelectionSectionFormat(this);\n        this.rowFormatIn = new SelectionRowFormat(this);\n        this.cellFormatIn = new SelectionCellFormat(this);\n        this.tableFormatIn = new SelectionTableFormat(this);\n        this.imageFormatInternal = new SelectionImageFormat(this);\n        this.editRangeCollection = [];\n        this.editRegionHighlighters = new Dictionary();\n        this.formFieldHighlighters = new Dictionary();\n    }\n    Object.defineProperty(Selection.prototype, \"isHighlightEditRegion\", {\n        // Code for Comparing the offset calculated using old approach and optimized approach\n        // /**\n        //  * @private\n        //  */\n        // public isNewApproach: boolean;\n        /**\n         * @private\n         * @returns {boolean} - Retuens true if highlighting editing region\n         */\n        get: function () {\n            return this.isHighlightEditRegionIn;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.isHighlightEditRegionIn = value;\n            this.onHighlight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"htmlWriter\", {\n        /**\n         * @private\n         */\n        get: function () {\n            if (isNullOrUndefined(this.htmlWriterIn)) {\n                this.htmlWriterIn = new HtmlExport();\n            }\n            return this.htmlWriterIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"start\", {\n        /**\n         * Gets the start text position of last range in the selection\n         *\n         * @private\n         * @returns {TextPosition} - Returns selection start position.\n         */\n        get: function () {\n            if (!isNullOrUndefined(this.owner) && !isNullOrUndefined(this.viewer)) {\n                if (isNullOrUndefined(this.startInternal)) {\n                    this.startInternal = this.owner.documentStart;\n                }\n                return this.startInternal;\n            }\n            return undefined;\n        },\n        /**\n         * @private\n         */\n        set: function (value) {\n            this.startInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"characterFormat\", {\n        //Format retrieval properties\n        /**\n         * Gets the instance of selection character format.\n         *\n         * @default undefined\n         * @aspType SelectionCharacterFormat\n         * @returns {SelectionCharacterFormat} Returns the selection character format.\n         */\n        get: function () {\n            return this.characterFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"paragraphFormat\", {\n        /**\n         * Gets the instance of selection paragraph format.\n         *\n         * @default undefined\n         * @aspType SelectionParagraphFormat\n         * @returns {SelectionParagraphFormat} Returns the selection paragraph format.\n         */\n        get: function () {\n            return this.paragraphFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"sectionFormat\", {\n        /**\n         * Gets the instance of selection section format.\n         *\n         * @default undefined\n         * @aspType SelectionSectionFormat\n         * @returns {SelectionSectionFormat} Returns the selection section format.\n         */\n        get: function () {\n            return this.sectionFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"tableFormat\", {\n        /**\n         * Gets the instance of selection table format.\n         *\n         * @default undefined\n         * @aspType SelectionTableFormat\n         * @returns {SelectionTableFormat} Returns the selection table format.\n         */\n        get: function () {\n            return this.tableFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"cellFormat\", {\n        /**\n         * Gets the instance of selection cell format.\n         *\n         * @default undefined\n         * @aspType SelectionCellFormat\n         * @returns {SelectionCellFormat} Returns the selection cell format.\n         */\n        get: function () {\n            return this.cellFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"rowFormat\", {\n        /**\n         * Gets the instance of selection row format.\n         *\n         * @default undefined\n         * @aspType SelectionRowFormat\n         * @returns {SelectionRowFormat} Returns selection row format.\n         */\n        get: function () {\n            return this.rowFormatIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"imageFormat\", {\n        /**\n         * Gets the instance of selection image format.\n         *\n         * @default undefined\n         * @aspType SelectionImageFormat\n         * @returns {SelectionImageFormat} Returns the selection image format.\n         */\n        get: function () {\n            return this.imageFormatInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"end\", {\n        /**\n         * Gets the start text position of selection range.\n         *\n         * @private\n         * @returns {TextPosition} - Returns selection end position.\n         */\n        get: function () {\n            return this.endInternal;\n        },\n        /**\n         * For internal use\n         *\n         * @private\n         */\n        set: function (value) {\n            this.endInternal = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"startPage\", {\n        /**\n         * Gets the page number where the selection starts.\n         *\n         * @returns {number} Returns the selection start page number.\n         */\n        get: function () {\n            if (!this.owner.isDocumentLoaded || isNullOrUndefined(this.viewer)\n                || this.viewer instanceof WebLayoutViewer || isNullOrUndefined(this.documentHelper.selectionStartPage)) {\n                return 1;\n            }\n            return this.documentHelper.pages.indexOf(this.documentHelper.selectionStartPage) + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"endPage\", {\n        /**\n         * Gets the page number where the selection ends.\n         *\n         * @returns {number} Returns the selection end page number.\n         */\n        get: function () {\n            if (!this.owner.isDocumentLoaded || isNullOrUndefined(this.viewer)\n                || this.viewer instanceof WebLayoutViewer || isNullOrUndefined(this.documentHelper.selectionEndPage)) {\n                return 1;\n            }\n            return this.documentHelper.pages.indexOf(this.documentHelper.selectionEndPage) + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isForward\", {\n        /**\n         * Determines whether the selection direction is forward or not.\n         *\n         * @default false\n         * @private\n         * @returns {boolean} Returns isForward\n         */\n        get: function () {\n            return this.start.isExistBefore(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isinFootnote\", {\n        /**\n         * Determines whether the selection is in footnote or not.\n         *\n         * @default false\n         * @returns {boolean} Returns true if selection is in footnote\n         * @private\n         */\n        get: function () {\n            var container = this.getContainerWidget(this.start.paragraph);\n            if (container instanceof FootNoteWidget && container.footNoteType === 'Footnote') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isinEndnote\", {\n        /**\n         * Determines whether the selection is in endnote or not.\n         *\n         * @default false\n         * @returns {boolean}\n         * @private\n         */\n        get: function () {\n            var container = this.getContainerWidget(this.start.paragraph);\n            if (container instanceof FootNoteWidget && container.footNoteType === 'Endnote') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isEmpty\", {\n        /**\n         * Determines whether the start and end positions are same or not.\n         *\n         * @default false\n         * @returns {boolean}\n         * @private\n         */\n        get: function () {\n            if (isNullOrUndefined(this.start)) {\n                return true;\n            }\n            return this.start.isAtSamePosition(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"startOffset\", {\n        /**\n         * Returns the start hierarchical index.\n         */\n        get: function () {\n            return this.getHierarchicalIndexByPosition(this.start);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"endOffset\", {\n        /**\n         * Returns the end hierarchical index.\n         */\n        get: function () {\n            return this.getHierarchicalIndexByPosition(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isInShape\", {\n        /**\n         * @private\n         */\n        get: function () {\n            var container = this.start.paragraph.containerWidget;\n            do {\n                if (container instanceof TextFrame) {\n                    return true;\n                }\n                if (container) {\n                    container = container.containerWidget;\n                }\n            } while (container);\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"text\", {\n        /**\n         * Gets the text within selection.\n         *\n         * @default ''\n         * @aspType string\n         * @returns {string} Returns the text within selection.\n         */\n        get: function () {\n            return this.getText(false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"contextType\", {\n        /**\n         * Gets the context type of the selection.\n         */\n        get: function () {\n            return this.contextTypeInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"bookmarks\", {\n        /**\n         * Gets bookmark name collection.\n         */\n        get: function () {\n            return this.getSelBookmarks(false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"sfdt\", {\n        /**\n        * Gets the selected content of the document as SFDT(Syncfusion Document Text) file format.\n        *\n        * @default undefined\n        * @returns {string}\n        */\n        get: function () {\n            if (this.owner.editorModule && (this.start.offset !== this.end.offset)) {\n                return JSON.stringify(this.writeSfdt());\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the bookmark name collection in current selection.\n     *\n     * @param includeHidden - Decide whether to include hidden bookmark name in current selection or not.\n     * @returns Returns the bookmark name collection in current selection.\n     */\n    Selection.prototype.getBookmarks = function (includeHidden) {\n        return this.getSelBookmarks(includeHidden);\n    };\n    Object.defineProperty(Selection.prototype, \"isCleared\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return isNullOrUndefined(this.end);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"isInField\", {\n        /**\n         * Returns true if selection is in field.\n         *\n         * @returns Returns true if selection is in field; Otherwise, false.\n         */\n        get: function () {\n            if (!isNullOrUndefined(this.getHyperlinkField(true))) {\n                return true;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the field information for the selected field.\n     *\n     * @returns { FieldInfo } Returns `FieldInfo` if selection is in field, otherwise `undefined`\n     * > Returns `undefined` for text, image, table, shape. For nested fields, it returns combined field code and result.\n     */\n    Selection.prototype.getFieldInfo = function () {\n        var field = this.getHyperlinkField(true);\n        if (!isNullOrUndefined(field)) {\n            var code = this.getFieldCode(field);\n            var result = this.owner.editorModule.getFieldResultText(field);\n            return {\n                code: code,\n                result: result\n            };\n        }\n        return undefined;\n    };\n    Selection.prototype.getSelBookmarks = function (includeHidden) {\n        var bookmarkCln = [];\n        var bookmarks = this.documentHelper.bookmarks;\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        var bookmrkStart;\n        var bookmrkEnd;\n        var isCellSelected = false;\n        var selectedCells = this.getSelectedCells();\n        for (var i = 0; i < bookmarks.length; i++) {\n            if (includeHidden || !includeHidden && bookmarks.keys[i].indexOf('_') !== 0) {\n                bookmrkStart = bookmarks.get(bookmarks.keys[i]);\n                bookmrkEnd = bookmrkStart.reference;\n                if (isNullOrUndefined(bookmrkEnd)) {\n                    continue;\n                }\n                var bmStartPos = this.getElementPosition(bookmrkStart).startPosition;\n                var bmEndPos = this.getElementPosition(bookmrkEnd, true).startPosition;\n                if (bmStartPos.paragraph.isInsideTable || bmEndPos.paragraph.isInsideTable) {\n                    if (selectedCells.length > 0) {\n                        if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) >= 0\n                            || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) >= 0) {\n                            isCellSelected = true;\n                        }\n                        else {\n                            isCellSelected = false;\n                            if (selectedCells.indexOf(bmStartPos.paragraph.associatedCell) < 0\n                                || selectedCells.indexOf(bmEndPos.paragraph.associatedCell) < 0) {\n                                var endCell = end.paragraph.isInsideTable && end.paragraph.associatedCell;\n                                var bmEndPosCell = bmEndPos.paragraph.associatedCell;\n                                if (endCell && bmEndPosCell && endCell.ownerTable.equals(bmEndPosCell.ownerTable) &&\n                                    !(endCell.ownerTable\n                                        && selectedCells.indexOf(this.getCellInTable(endCell.ownerTable, bmEndPosCell)) >= 0)) {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        isCellSelected = false;\n                    }\n                }\n                else {\n                    isCellSelected = false;\n                }\n                if ((start.isExistAfter(bmStartPos) || start.isAtSamePosition(bmStartPos))\n                    && (end.isExistBefore(bmEndPos) || end.isAtSamePosition(bmEndPos)) ||\n                    ((bmStartPos.isExistAfter(start) || bmStartPos.isAtSamePosition(start))\n                        && (bmEndPos.isExistBefore(end) || bmEndPos.isAtSamePosition(end))) ||\n                    (bmStartPos.isExistAfter(start) && bmStartPos.isExistBefore(end)\n                        && (end.isExistAfter(bmEndPos) || end.isExistBefore(bmEndPos))) ||\n                    (bmEndPos.isExistBefore(end) && bmEndPos.isExistAfter(start)\n                        && (start.isExistBefore(bmStartPos) || start.isExistAfter(bmStartPos))) || isCellSelected) {\n                    bookmarkCln.push(bookmrkStart.name);\n                }\n            }\n        }\n        return bookmarkCln;\n    };\n    Object.defineProperty(Selection.prototype, \"viewer\", {\n        /**\n         *\n         * @private\n         */\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Selection.prototype.getModuleName = function () {\n        return 'Selection';\n    };\n    Selection.prototype.checkLayout = function () {\n        if (this.owner.layoutType === 'Continuous') {\n            this.isWebLayout = true;\n            this.documentHelper.isHeaderFooter = true;\n            this.owner.layoutType = 'Pages';\n            this.owner.viewer.destroy();\n            this.owner.viewer = new PageLayoutViewer(this.owner);\n            this.owner.editorModule.layoutWholeDocument();\n        }\n    };\n    //Public API\n    /**\n     * Moves the selection to the header of current page.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.goToHeader = function () {\n        this.checkLayout();\n        this.owner.enableHeaderAndFooter = true;\n        this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.headerWidget, this.start.paragraph.bodyWidget.page);\n        this.isWebLayout = false;\n    };\n    /**\n     * Moves the selection to the footer of current page.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.goToFooter = function () {\n        this.checkLayout();\n        this.owner.enableHeaderAndFooter = true;\n        this.enableHeadersFootersRegion(this.start.paragraph.bodyWidget.page.footerWidget, this.start.paragraph.bodyWidget.page);\n        this.isWebLayout = false;\n    };\n    /**\n     * Closes the header and footer region.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.closeHeaderFooter = function () {\n        this.disableHeaderFooter();\n        if (this.documentHelper.isHeaderFooter && this.owner.layoutType === 'Pages') {\n            this.owner.layoutType = 'Continuous';\n            this.documentHelper.isHeaderFooter = false;\n        }\n    };\n    /**\n     * Moves the selection to the start of specified page number.\n     *\n     * @param pageNumber Specify the page number to move selection.\n     * @returns {void}\n     */\n    Selection.prototype.goToPage = function (pageNumber) {\n        this.owner.scrollToPage(pageNumber);\n        if (pageNumber >= 1 && pageNumber <= this.owner.documentHelper.pages.length) {\n            var page = this.owner.documentHelper.pages[pageNumber - 1];\n            this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n        }\n    };\n    /**\n     * Selects the entire table if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectTable = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableInternal();\n    };\n    /**\n     * Selects the entire row if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableRow();\n    };\n    /**\n     * Selects the entire column if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectColumnInternal();\n    };\n    /**\n     * Selects the entire cell if the context is within table.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function () {\n        if (!this.owner.enableSelection) {\n            return;\n        }\n        this.selectTableCell();\n    };\n    Selection.prototype.select = function (selectionSettings, startOrEnd) {\n        if (typeof (selectionSettings) === 'string') {\n            var startPosition = this.getTextPosBasedOnLogicalIndex(selectionSettings);\n            var endPosition = this.getTextPosBasedOnLogicalIndex(startOrEnd);\n            this.selectPosition(startPosition, endPosition);\n        }\n        else {\n            var point = new Point(selectionSettings.x, selectionSettings.y);\n            var pageCoordinates = this.viewer.findFocusedPage(point, true);\n            if (selectionSettings.extend) {\n                this.moveTextPosition(pageCoordinates, this.end);\n            }\n            else {\n                this.documentHelper.updateTextPositionForSelection(pageCoordinates, 1);\n            }\n        }\n    };\n    /**\n     * Selects the content based on the specified start and end hierarchical index.\n     *\n     * @param start Specify the start index to select.\n     * @param end Specify the end index to select.\n     * @returns {void}\n     */\n    Selection.prototype.selectByHierarchicalIndex = function (start, end) {\n        var startPosition = this.getTextPosBasedOnLogicalIndex(start);\n        var endPosition = this.getTextPosBasedOnLogicalIndex(end);\n        this.selectPosition(startPosition, endPosition);\n    };\n    /**\n     * Selects the current field if selection is in field\n     *\n     * @param fieldStart Specify the field start to select.\n     * @returns {void}\n     */\n    Selection.prototype.selectField = function (fieldStart) {\n        if (this.isInField || !isNullOrUndefined(fieldStart)) {\n            if (isNullOrUndefined(fieldStart)) {\n                fieldStart = this.getHyperlinkField(true);\n            }\n            this.selectFieldInternal(fieldStart);\n        }\n    };\n    /**\n     * @private\n     * @param fieldStart\n     * @returns {void}\n     */\n    Selection.prototype.selectFieldInternal = function (fieldStart, isKeyBoardEvent, isReplacingFormResult) {\n        if (fieldStart) {\n            var formFillingMode = this.documentHelper.isFormFillProtectedMode || isReplacingFormResult;\n            var fieldEnd = fieldStart.fieldEnd;\n            if (formFillingMode) {\n                fieldStart = fieldStart.fieldSeparator;\n            }\n            var offset = fieldStart.line.getOffset(fieldStart, formFillingMode ? 1 : 0);\n            var startPosition = new TextPosition(this.owner);\n            startPosition.setPositionParagraph(fieldStart.line, offset);\n            var isBookmark = fieldStart.nextNode instanceof BookmarkElementBox;\n            if (isBookmark && !formFillingMode && fieldStart.nextElement.reference) {\n                fieldEnd = fieldStart.nextElement.reference;\n            }\n            var endoffset = fieldEnd.line.getOffset(fieldEnd, formFillingMode ? 0 : 1);\n            var endPosition = new TextPosition(this.owner);\n            endPosition.setPositionParagraph(fieldEnd.line, endoffset);\n            //selects the field range\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n            if (!isReplacingFormResult) {\n                this.triggerFormFillEvent(isKeyBoardEvent);\n            }\n        }\n    };\n    /**\n     * @param shape\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectShape = function (shape) {\n        if (shape) {\n            var offset = shape.line.getOffset(shape, 0);\n            var startPosition = new TextPosition(this.owner);\n            startPosition.setPositionParagraph(shape.line, offset);\n            var endoffset = shape.line.getOffset(shape, 1);\n            var endPosition = new TextPosition(this.owner);\n            endPosition.setPositionParagraph(shape.line, endoffset);\n            this.documentHelper.selection.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * Toggles the bold property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleBold = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleBold();\n        }\n    };\n    /**\n     * Toggles the italic property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleItalic = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleItalic();\n        }\n    };\n    /**\n     * Toggles the allCaps property of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleAllCaps = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleAllCaps();\n        }\n    };\n    /**\n     * Toggles the underline property of selected contents.\n     *\n     * @param {Underline} underline Default value of ‘underline’ parameter is Single.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleUnderline = function (underline) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleUnderline(underline);\n        }\n    };\n    /**\n     * Toggles the strike through property of selected contents.\n     *\n     * @param {Strikethrough} strikethrough Default value of strikethrough parameter is SingleStrike.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleStrikethrough = function (strikethrough) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleStrikethrough(strikethrough);\n        }\n    };\n    /**\n     * Toggles the highlight color property of selected contents.\n     *\n     * @param {HighlightColor} highlightColor Default value of ‘underline’ parameter is Yellow.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleHighlightColor = function (highlightColor) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleHighlightColor(highlightColor);\n        }\n    };\n    /**\n     * Toggles the subscript formatting of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleSubscript = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleSubscript();\n        }\n    };\n    /**\n     * Toggles the superscript formatting of selected contents.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleSuperscript = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleSuperscript();\n        }\n    };\n    /**\n     * Toggles the text alignment property of selected contents.\n     *\n     * @param {TextAlignment} textAlignment Default value of ‘textAlignment parameter is TextAlignment.Left.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.toggleTextAlignment = function (textAlignment) {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.toggleTextAlignment(textAlignment);\n        }\n    };\n    /**\n     * Increases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.increaseIndent = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.increaseIndent();\n        }\n    };\n    /**\n     * Decreases the left indent of selected paragraphs to a factor of 36 points.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.decreaseIndent = function () {\n        if (this.owner.editorModule) {\n            this.owner.editorModule.decreaseIndent();\n        }\n    };\n    /**\n     * Fires the `requestNavigate` event if current selection context is in hyperlink.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateHyperlink = function () {\n        var fieldBegin = this.getHyperlinkField();\n        if (fieldBegin) {\n            this.fireRequestNavigate(fieldBegin);\n        }\n    };\n    /**\n     * Navigate Hyperlink\n     *\n     * @param fieldBegin\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.fireRequestNavigate = function (fieldBegin) {\n        var code = this.getFieldCode(fieldBegin);\n        if (code.toLowerCase().indexOf('ref ') === 0 && !code.match('\\\\h')) {\n            return;\n        }\n        var hyperlink = new Hyperlink(fieldBegin, this);\n        var eventArgs = {\n            isHandled: false,\n            navigationLink: hyperlink.navigationLink,\n            linkType: hyperlink.linkType,\n            localReference: hyperlink.localReference,\n            source: this.owner\n        };\n        this.owner.trigger(requestNavigateEvent, eventArgs);\n        if (!eventArgs.isHandled) {\n            this.documentHelper.selection.navigateBookmark(hyperlink.localReference, true);\n        }\n    };\n    /**\n     * Copies the hyperlink URL if the context is within hyperlink.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copyHyperlink = function () {\n        var hyperLinkField = this.getHyperlinkField();\n        var linkText = this.getLinkText(hyperLinkField, true);\n        this.copyToClipboard(linkText);\n    };\n    Selection.prototype.isHideSelection = function (paragraph) {\n        var bodyWgt = paragraph.bodyWidget;\n        var sectionFormat = bodyWgt.sectionFormat;\n        var pageHt = sectionFormat.pageHeight - sectionFormat.footerDistance;\n        var headerFooterHt = bodyWgt.page.boundingRectangle.height / 100 * 40;\n        return this.contextType.indexOf('Footer') >= 0\n            && (paragraph.y + paragraph.height > HelperMethods.convertPointToPixel(pageHt))\n            || this.contextType.indexOf('Header') >= 0 && paragraph.y + paragraph.height > headerFooterHt;\n    };\n    //Selection add, Highlight, remove API starts\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightSelection = function (isSelectionChanged, isBookmark) {\n        if (this.owner.enableImageResizerMode) {\n            this.owner.imageResizerModule.hideImageResizer();\n        }\n        if (this.isEmpty) {\n            if (!this.isInShape && this.isHideSelection(this.start.paragraph)) {\n                this.hideCaret();\n                return;\n            }\n            if (this.isInShape) {\n                this.showResizerForShape();\n            }\n            this.updateCaretPosition();\n        }\n        else {\n            if (this.isForward) {\n                this.highlightSelectedContent(this.start, this.end);\n            }\n            else {\n                this.highlightSelectedContent(this.end, this.start);\n            }\n            if (this.documentHelper.isComposingIME) {\n                this.updateCaretPosition();\n            }\n        }\n        this.documentHelper.updateTouchMarkPosition();\n        if (isSelectionChanged) {\n            this.documentHelper.scrollToPosition(this.start, this.end, undefined, isBookmark);\n        }\n    };\n    Selection.prototype.createHighlightBorder = function (lineWidget, width, left, top, isElementBoxHighlight) {\n        if (width < 0) {\n            width = 0;\n        }\n        var paragraph = lineWidget.paragraph;\n        var floatingItems = [];\n        if (paragraph.floatingElements.length > 0) {\n            for (var k = 0; k < paragraph.floatingElements.length; k++) {\n                var shapeElement = paragraph.floatingElements[k];\n                if (shapeElement.line === lineWidget) {\n                    var startTextPos = this.start;\n                    var endTextPos = this.end;\n                    if (!this.isForward) {\n                        startTextPos = this.end;\n                        endTextPos = this.start;\n                    }\n                    var offset = shapeElement.line.getOffset(shapeElement, 0);\n                    if ((startTextPos.currentWidget !== lineWidget && endTextPos.currentWidget !== lineWidget) ||\n                        (startTextPos.currentWidget === lineWidget && startTextPos.offset <= offset\n                            && (endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset + 1\n                                || endTextPos.currentWidget !== lineWidget)) || (startTextPos.currentWidget !== lineWidget\n                        && endTextPos.currentWidget === lineWidget && endTextPos.offset >= offset)) {\n                        floatingItems.push(shapeElement);\n                    }\n                }\n            }\n        }\n        var page = this.getPage(lineWidget.paragraph);\n        var height = lineWidget.height;\n        var widgets = this.selectedWidgets;\n        var selectionWidget = undefined;\n        var selectionWidgetCollection = undefined;\n        if (this.isHightlightEditRegionInternal) {\n            this.addEditRegionHighlight(lineWidget, left, width);\n            return;\n        }\n        else if (this.isHighlightFormFields) {\n            this.addFormFieldHighlight(lineWidget, left, width);\n            return;\n        }\n        else {\n            if (widgets.containsKey(lineWidget)) {\n                if (widgets.get(lineWidget) instanceof SelectionWidgetInfo) {\n                    selectionWidget = widgets.get(lineWidget);\n                    // if the line element has already added with SelectionWidgetInfo\n                    // now its need to be added as ElementBox highlighting them remove it from dictionary and add it collection.\n                    if (isElementBoxHighlight) {\n                        widgets.remove(lineWidget);\n                        selectionWidgetCollection = [];\n                        widgets.add(lineWidget, selectionWidgetCollection);\n                    }\n                }\n                else {\n                    selectionWidgetCollection = widgets.get(lineWidget);\n                }\n            }\n            else {\n                if (isElementBoxHighlight) {\n                    selectionWidgetCollection = [];\n                    widgets.add(lineWidget, selectionWidgetCollection);\n                }\n                else {\n                    var wrapPosition = this.getWrapPosition(lineWidget, paragraph);\n                    if (wrapPosition.length > 0) {\n                        var selectionWidgetInfos = this.splitSelectionHighlightPosition(left, width, wrapPosition);\n                        if (selectionWidgetInfos.length > 0) {\n                            selectionWidgetInfos[0].floatingItems = floatingItems;\n                            widgets.add(lineWidget, selectionWidgetInfos);\n                            this.renderHighlight(page, lineWidget, selectionWidgetInfos, top, floatingItems);\n                            return;\n                        }\n                        else {\n                            selectionWidget = new SelectionWidgetInfo(left, width);\n                            selectionWidget.floatingItems = floatingItems;\n                            widgets.add(lineWidget, selectionWidget);\n                        }\n                    }\n                    else {\n                        selectionWidget = new SelectionWidgetInfo(left, width);\n                        selectionWidget.floatingItems = floatingItems;\n                        widgets.add(lineWidget, selectionWidget);\n                    }\n                }\n            }\n            if (selectionWidget === undefined) {\n                selectionWidget = new SelectionWidgetInfo(left, width);\n                selectionWidget.floatingItems = floatingItems;\n                widgets.add(lineWidget, selectionWidget);\n            }\n        }\n        this.renderHighlight(page, lineWidget, [selectionWidget], top, floatingItems);\n        if (isElementBoxHighlight) {\n            selectionWidgetCollection.push(selectionWidget);\n        }\n    };\n    Selection.prototype.renderHighlight = function (page, lineWidget, selectionWidget, top, floatingItems) {\n        var documentHelper = this.owner.documentHelper;\n        var pageTop = this.getPageTop(page);\n        var pageLeft = page.boundingRectangle.x;\n        var height = lineWidget.height;\n        if (this.viewer.containerTop <= pageTop\n            || pageTop < this.viewer.containerTop + documentHelper.selectionCanvas.height) {\n            var zoomFactor = documentHelper.zoomFactor;\n            this.clipSelection(page, pageTop);\n            for (var i = 0; i < selectionWidget.length; i++) {\n                var selectedWidget = selectionWidget[i];\n                var left = selectedWidget.left;\n                var width = selectedWidget.width;\n                if (this.documentHelper.isComposingIME) {\n                    this.renderDashLine(documentHelper.selectionContext, page, lineWidget, (pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, top, width * zoomFactor, height);\n                }\n                else {\n                    this.documentHelper.selectionContext.fillStyle = 'gray';\n                    documentHelper.selectionContext.globalAlpha = 0.4;\n                    documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (top * zoomFactor)) - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n                }\n            }\n            if (floatingItems.length > 0) {\n                for (var z = 0; z < floatingItems.length; z++) {\n                    var left = floatingItems[z].x;\n                    var shapeTop = floatingItems[z].y;\n                    var shapeWidth = floatingItems[z].width;\n                    var shapeHeight = floatingItems[z].height;\n                    documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (shapeTop * zoomFactor)) - this.viewer.containerTop, shapeWidth * zoomFactor, shapeHeight * zoomFactor);\n                }\n            }\n            documentHelper.selectionContext.restore();\n        }\n    };\n    Selection.prototype.getWrapPosition = function (lineWidget, paragraph) {\n        var bodyWidget = paragraph.bodyWidget;\n        if (!isNullOrUndefined(bodyWidget) && bodyWidget.floatingElements.length > 0 && lineWidget.children.length > 0) {\n            var startLeft = this.getLeftInternal(lineWidget, lineWidget.children[0], 0);\n            var width = 0;\n            var wrapPos = [];\n            var isStarted = false;\n            for (var z = 0; z < lineWidget.children.length; z++) {\n                var element = lineWidget.children[z];\n                if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n                    continue;\n                }\n                if (element.padding.left > 0) {\n                    if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n                        wrapPos[0].end = wrapPos[0].start - paragraph.x;\n                        wrapPos[0].start = paragraph.x;\n                        startLeft = paragraph.x;\n                    }\n                    var clipInfo = {};\n                    clipInfo.start = startLeft + width;\n                    clipInfo.end = 0;\n                    if (isStarted) {\n                        clipInfo.end = startLeft + width + element.padding.left;\n                    }\n                    wrapPos.push(clipInfo);\n                }\n                width += element.padding.left + element.width;\n                if (element instanceof TextElementBox) {\n                    isStarted = true;\n                }\n            }\n            if (wrapPos.length === 1 && wrapPos[0].end === 0) {\n                wrapPos[0].end = wrapPos[0].start - paragraph.x;\n                wrapPos[0].start = paragraph.x;\n            }\n            return wrapPos;\n        }\n        return [];\n    };\n    Selection.prototype.splitSelectionHighlightPosition = function (left, width, clipInfo) {\n        var selectedWidget = [];\n        for (var m = 0; m < clipInfo.length; m++) {\n            var info = clipInfo[m];\n            if ((left < info.start && left + width < info.end) || left > (info.end)) {\n                continue;\n            }\n            if (left < info.start && left + width > info.end) {\n                selectedWidget.push(new SelectionWidgetInfo(left, info.start - left));\n                width = (left + width) - info.end;\n                left = info.end;\n            }\n            else if (left === info.start) {\n                left += info.end;\n                width = width - info.end;\n            }\n            if (m === clipInfo.length - 1) {\n                selectedWidget.push(new SelectionWidgetInfo(left, width));\n            }\n        }\n        return selectedWidget;\n    };\n    Selection.prototype.addEditRegionHighlight = function (lineWidget, left, width) {\n        var highlighters = undefined;\n        var collection = this.editRegionHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var editRegionHighlight = new SelectionWidgetInfo(left, width);\n        if (this.isCurrentUser) {\n            editRegionHighlight.color = this.owner.userColor !== '' ? this.owner.userColor : '#FFFF00';\n        }\n        highlighters.push(editRegionHighlight);\n        return editRegionHighlight;\n    };\n    Selection.prototype.addFormFieldHighlight = function (lineWidget, left, width) {\n        var highlighters = undefined;\n        var collection = this.formFieldHighlighters;\n        if (collection.containsKey(lineWidget)) {\n            highlighters = collection.get(lineWidget);\n        }\n        else {\n            highlighters = [];\n            collection.add(lineWidget, highlighters);\n        }\n        var formFieldHighlight = new SelectionWidgetInfo(left, width);\n        highlighters.push(formFieldHighlight);\n    };\n    Selection.prototype.createHighlightBorderInsideTable = function (cellWidget) {\n        var page = this.getPage(cellWidget);\n        var selectionWidget = undefined;\n        var left = cellWidget.x - cellWidget.margin.left + cellWidget.leftBorderWidth;\n        var width = cellWidget.width + cellWidget.margin.left\n            + cellWidget.margin.right - cellWidget.leftBorderWidth - cellWidget.rightBorderWidth;\n        var top = cellWidget.y;\n        var height = cellWidget.height;\n        var pageTop = this.getPageTop(page);\n        var pageLeft = page.boundingRectangle.x;\n        var isVisiblePage = this.documentHelper.isPageInVisibleBound(page, pageTop);\n        var widgets = this.selectedWidgets;\n        if (!this.isHightlightEditRegionInternal && !this.isHighlightFormFields) {\n            if (widgets.containsKey(cellWidget) && widgets.get(cellWidget) instanceof SelectionWidgetInfo) {\n                selectionWidget = widgets.get(cellWidget);\n                if (isVisiblePage) {\n                    this.documentHelper.selectionContext.clearRect((pageLeft + (selectionWidget.left * this.documentHelper.zoomFactor) - this.viewer.containerLeft), (pageTop + (top * this.documentHelper.zoomFactor)) - this.viewer.containerTop, selectionWidget.width * this.documentHelper.zoomFactor, height * this.documentHelper.zoomFactor);\n                }\n            }\n            else {\n                selectionWidget = new SelectionWidgetInfo(left, width);\n                if (widgets.containsKey(cellWidget)) {\n                    widgets.remove(widgets.get(cellWidget));\n                }\n                widgets.add(cellWidget, selectionWidget);\n            }\n        }\n        if (isVisiblePage) {\n            this.documentHelper.selectionContext.fillStyle = 'gray';\n            this.documentHelper.selectionContext.globalAlpha = 0.4;\n            var zoomFactor = this.documentHelper.zoomFactor;\n            this.clipSelection(page, pageTop);\n            this.documentHelper.selectionContext.fillRect((pageLeft + (left * zoomFactor)) - this.viewer.containerLeft, (pageTop + (top * zoomFactor)) - this.viewer.containerTop, width * zoomFactor, height * zoomFactor);\n            this.documentHelper.selectionContext.restore();\n        }\n    };\n    Selection.prototype.clipSelection = function (page, pageTop) {\n        var documentHelper = this.owner.documentHelper;\n        var width;\n        var height;\n        if (this.viewer instanceof WebLayoutViewer && this.documentHelper.zoomFactor < 1) {\n            width = page.boundingRectangle.width / this.documentHelper.zoomFactor;\n            height = page.boundingRectangle.height / this.documentHelper.zoomFactor;\n        }\n        else {\n            width = page.boundingRectangle.width * this.documentHelper.zoomFactor;\n            height = page.boundingRectangle.height * this.documentHelper.zoomFactor;\n        }\n        var left = page.boundingRectangle.x;\n        documentHelper.selectionContext.beginPath();\n        documentHelper.selectionContext.save();\n        documentHelper.selectionContext.rect(left - this.viewer.containerLeft, pageTop - this.viewer.containerTop, width, height);\n        documentHelper.selectionContext.clip();\n    };\n    /**\n     * Add selection highlight\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.addSelectionHighlight = function (canvasContext, widget, top, page) {\n        if (this.selectedWidgets.containsKey(widget)) {\n            var height = this.documentHelper.render.getScaledValue(widget.height);\n            var widgetInfo = this.selectedWidgets.get(widget);\n            var widgetInfoCollection = undefined;\n            if (widgetInfo instanceof SelectionWidgetInfo) {\n                widgetInfoCollection = [];\n                widgetInfoCollection.push(widgetInfo);\n            }\n            else {\n                widgetInfoCollection = widgetInfo;\n            }\n            if (!isNullOrUndefined(widgetInfoCollection)) {\n                for (var i = 0; i < widgetInfoCollection.length; i++) {\n                    var selectedWidgetInfo = widgetInfoCollection[i];\n                    var width = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].width);\n                    var left = this.documentHelper.render.getScaledValue(widgetInfoCollection[i].left, 1);\n                    if (isNullOrUndefined(page)) {\n                        page = this.owner.selectionModule.getPage(widget.paragraph);\n                    }\n                    this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n                    if (this.documentHelper.isComposingIME) {\n                        this.renderDashLine(canvasContext, page, widget, left, top, width, height);\n                    }\n                    else {\n                        canvasContext.globalAlpha = 0.4;\n                        canvasContext.fillStyle = 'gray';\n                        canvasContext.fillRect(left, this.documentHelper.render.getScaledValue(top, 2), width, height);\n                        if (selectedWidgetInfo.floatingItems && selectedWidgetInfo.floatingItems.length > 0) {\n                            for (var j = 0; j < selectedWidgetInfo.floatingItems.length; j++) {\n                                var shape = selectedWidgetInfo.floatingItems[j];\n                                width = this.documentHelper.render.getScaledValue(shape.width);\n                                left = this.documentHelper.render.getScaledValue(shape.x, 1);\n                                var shapeTop = this.documentHelper.render.getScaledValue(shape.y, 2);\n                                canvasContext.fillRect(left, shapeTop, width, this.documentHelper.render.getScaledValue(shape.height));\n                            }\n                        }\n                    }\n                    canvasContext.restore();\n                }\n            }\n        }\n    };\n    Selection.prototype.renderDashLine = function (ctx, page, widget, left, top, width, height) {\n        var fontColor = this.characterFormat.fontColor;\n        var fillColor = fontColor ? HelperMethods.getColor(fontColor) : '#000000';\n        ctx.globalAlpha = 1;\n        // Get character format copied from selection format\n        var format = this.owner.editorModule.copyInsertFormat(new WCharacterFormat(), false);\n        var heightInfo = this.documentHelper.textHelper.getHeight(format);\n        var pageTop = this.getPageTop(page);\n        var descent = heightInfo.Height - heightInfo.BaselineOffset;\n        top = this.documentHelper.render.getUnderlineYPosition(widget) + top + 4 - descent;\n        this.documentHelper.render.renderDashLine(ctx, left, (pageTop - this.viewer.containerTop) + (top * this.documentHelper.zoomFactor), width, fillColor, true);\n    };\n    /**\n     * Add Selection highlight inside table\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.addSelectionHighlightTable = function (canvasContext, tableCellWidget, page) {\n        if (this.selectedWidgets.containsKey(tableCellWidget)) {\n            var selectedWidgetInfo = this.selectedWidgets.get(tableCellWidget);\n            var selectedWidgetInfoCollection = undefined;\n            if (selectedWidgetInfo instanceof SelectionWidgetInfo) {\n                selectedWidgetInfoCollection = [];\n                selectedWidgetInfoCollection.push(selectedWidgetInfo);\n            }\n            else {\n                selectedWidgetInfoCollection = selectedWidgetInfo;\n            }\n            if (!isNullOrUndefined(selectedWidgetInfoCollection)) {\n                for (var i = 0; i < selectedWidgetInfoCollection.length; i++) {\n                    var left = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].left, 1);\n                    var top_1 = this.documentHelper.render.getScaledValue(tableCellWidget.y, 2);\n                    var width = this.documentHelper.render.getScaledValue(selectedWidgetInfoCollection[i].width);\n                    var height = this.documentHelper.render.getScaledValue(tableCellWidget.height);\n                    canvasContext.fillStyle = 'gray';\n                    if (isNullOrUndefined(page)) {\n                        page = this.owner.selectionModule.getPage(tableCellWidget);\n                    }\n                    this.owner.selectionModule.clipSelection(page, this.owner.selectionModule.getPageTop(page));\n                    canvasContext.fillRect(left, top_1, width, height);\n                    canvasContext.restore();\n                }\n            }\n        }\n    };\n    Selection.prototype.removeSelectionHighlight = function (widget) {\n        var left = 0;\n        var top = 0;\n        var width = 0;\n        var height = 0;\n        var page = undefined;\n        if (widget instanceof LineWidget) {\n            var lineWidget = widget;\n            var currentParaWidget = lineWidget.paragraph;\n            page = !isNullOrUndefined(currentParaWidget) ?\n                this.getPage((lineWidget.paragraph)) : undefined;\n            if (isNullOrUndefined(page)) {\n                return;\n            }\n            top = this.getTop(lineWidget);\n            height = lineWidget.height;\n        }\n        else if (widget instanceof TableCellWidget) {\n            page = !isNullOrUndefined(widget) ?\n                this.getPage(widget) : undefined;\n            if (isNullOrUndefined(page)) {\n                return;\n            }\n            top = widget.y;\n            height = widget.height;\n        }\n        if (isNullOrUndefined(page)) {\n            return;\n        }\n        var selectedWidget = this.selectedWidgets.get(widget);\n        var selectedWidgetCollection = undefined;\n        if (selectedWidget instanceof SelectionWidgetInfo) {\n            selectedWidgetCollection = [];\n            selectedWidgetCollection.push(selectedWidget);\n        }\n        else {\n            selectedWidgetCollection = selectedWidget;\n        }\n        if (!isNullOrUndefined(selectedWidgetCollection)) {\n            for (var i = 0; i < selectedWidgetCollection.length; i++) {\n                width = selectedWidgetCollection[i].width;\n                left = selectedWidgetCollection[i].left;\n                var pageRect = page.boundingRectangle;\n                var pageIndex = this.documentHelper.pages.indexOf(page);\n                var pageGap = this.viewer.pageGap;\n                var pageTop = (pageRect.y - pageGap * (pageIndex + 1)) * this.documentHelper.zoomFactor + pageGap * (pageIndex + 1);\n                var pageLeft = pageRect.x;\n                var zoomFactor = this.documentHelper.zoomFactor;\n                if (this.viewer.containerTop <= pageTop\n                    || pageTop < this.viewer.containerTop + this.documentHelper.selectionCanvas.height) {\n                    this.documentHelper.selectionContext.clearRect((pageLeft + (left * zoomFactor) - this.viewer.containerLeft) - 0.5, (pageTop + (top * zoomFactor)) - this.viewer.containerTop - 0.5, width * zoomFactor + 0.5, height * zoomFactor + 0.5);\n                }\n            }\n        }\n    };\n    /**\n     * Selects the current word.\n     *\n     * @param excludeSpace True if exclude white space; Otherwise, false.\n     * @returns {void}\n     */\n    Selection.prototype.selectCurrentWord = function (excludeSpace) {\n        var startPosition = this.start.clone();\n        var endPosition = this.end.clone();\n        this.selectCurrentWordRange(startPosition, endPosition, excludeSpace ? excludeSpace : false);\n        this.selectRange(startPosition, endPosition);\n    };\n    /**\n     * Selects the current paragraph.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectParagraph = function () {\n        if (!isNullOrUndefined(this.start)) {\n            this.start.paragraphStartInternal(this, false);\n            this.end.moveToParagraphEndInternal(this, false);\n            this.upDownSelectionLength = this.end.location.x;\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Selects the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectLine = function () {\n        if (!isNullOrUndefined(this.start)) {\n            this.moveToLineStart();\n            this.handleShiftEndKey();\n        }\n    };\n    /**\n     * Moves the selection to the start of the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToDocumentStart = function () {\n        this.handleControlHomeKey();\n    };\n    /**\n     * Moves the selection to the end of the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToDocumentEnd = function () {\n        this.handleControlEndKey();\n    };\n    /**\n     * Moves the selection to the current paragraph start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToParagraphStart = function () {\n        if (this.isForward) {\n            this.start.paragraphStartInternal(this, false);\n            this.end.setPositionInternal(this.start);\n            this.upDownSelectionLength = this.end.location.x;\n        }\n        else {\n            this.end.paragraphStartInternal(this, false);\n            this.start.setPositionInternal(this.end);\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to the current paragraph end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToParagraphEnd = function () {\n        if (this.isForward) {\n            this.start.moveToParagraphEndInternal(this, false);\n            this.end.setPositionInternal(this.start);\n            this.upDownSelectionLength = this.end.location.x;\n        }\n        else {\n            this.end.moveToParagraphEndInternal(this, false);\n            this.start.setPositionInternal(this.end);\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to the next line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextLine = function () {\n        this.moveDown();\n    };\n    /**\n     * Moves the selection to the previous line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousLine = function () {\n        this.moveUp();\n    };\n    /**\n     * Moves the selection to the next character.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextCharacter = function () {\n        this.handleRightKey();\n    };\n    /**\n     * Moves the selection to the previous character.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousCharacter = function () {\n        this.handleLeftKey();\n    };\n    Selection.prototype.selectCurrentWordRange = function (startPosition, endPosition, excludeSpace) {\n        if (!isNullOrUndefined(startPosition)) {\n            if (startPosition.offset > 0) {\n                var wordStart = startPosition.clone();\n                var indexInInline = 0;\n                var inlineObj = startPosition.currentWidget.getInline(startPosition.offset, indexInInline);\n                var inline = inlineObj.element;\n                indexInInline = inlineObj.index;\n                if (!isNullOrUndefined(inline) && inline instanceof FieldElementBox && inline.fieldType === 1) {\n                    if (startPosition.offset > 2 && (!isNullOrUndefined(inline.fieldSeparator) || isNullOrUndefined(inline.fieldBegin))) {\n                        wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 2);\n                        wordStart.moveToWordEndInternal(0, false);\n                        if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset - 1)) {\n                            startPosition.moveToWordStartInternal(2);\n                        }\n                    }\n                    else if (startPosition.offset > 3 && isNullOrUndefined(inline.fieldSeparator)) {\n                        wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 3);\n                        wordStart.moveToWordEndInternal(0, false);\n                        if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n                            startPosition.moveToWordStartInternal(2);\n                        }\n                    }\n                }\n                else {\n                    wordStart.setPositionParagraph(wordStart.currentWidget, startPosition.offset - 1);\n                    wordStart.moveToWordEndInternal(0, false);\n                    if (!(wordStart.paragraph === startPosition.paragraph && wordStart.offset === startPosition.offset)) {\n                        startPosition.moveToWordStartInternal(2);\n                    }\n                }\n            }\n            endPosition.moveToWordEndInternal(2, excludeSpace);\n        }\n    };\n    /**\n     * Extends the selection to the paragraph start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToParagraphStart = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.paragraphStartInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to the paragraph end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToParagraphEnd = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToParagraphEndInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Move to next text position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveNextPosition = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        if (this.isEmpty) {\n            this.start.moveNextPosition();\n            this.end.setPositionInternal(this.start);\n        }\n        this.updateForwardSelection();\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n        if (this.documentHelper.isFormFillProtectedMode) {\n            var formField = this.getCurrentFormField();\n            if (!formField) {\n                formField = this.getFormFieldInFormFillMode();\n                this.selectPrevNextFormField(true, formField);\n            }\n        }\n    };\n    /**\n     * Move to next paragraph\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveToNextParagraph = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToNextParagraphStartInternal();\n        this.start.setPositionInternal(this.end);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Navigates to the next footnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.nextFootnote = function () {\n        if (this.isinFootnote) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var colLength = this.documentHelper.footnoteCollection.length;\n            var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n            var nextFootnoteElement = this.documentHelper.footnoteCollection[indexCount + 1];\n            if (isNullOrUndefined(nextFootnoteElement)) {\n                nextFootnoteElement = footNoteElement;\n            }\n            var start = this.start.clone();\n            var end = this.end.clone();\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                var referenceElement = this.documentHelper.pages[i].footnoteWidget;\n                for (var j = 1; j < referenceElement.bodyWidgets.length; j++) {\n                    var element = (referenceElement.bodyWidgets[j]).footNoteReference;\n                    if (element === nextFootnoteElement) {\n                        start.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                        end.setPositionInternal(start);\n                        this.selectRange(start, end);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the previous footnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.previousFootnote = function () {\n        if (this.isinFootnote) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var colLength = this.documentHelper.footnoteCollection.length;\n            var indexCount = this.documentHelper.footnoteCollection.indexOf(footNoteElement);\n            var previousFootnote = this.documentHelper.footnoteCollection[indexCount - 1];\n            if (isNullOrUndefined(previousFootnote)) {\n                previousFootnote = footNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                var footnote = this.documentHelper.pages[i].footnoteWidget;\n                for (var j = 1; j < footnote.bodyWidgets.length; j++) {\n                    var element = (footnote.bodyWidgets[j]).footNoteReference;\n                    if (element === previousFootnote) {\n                        startPosition.setPositionParagraph(footnote.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                        endPosition.setPositionInternal(startPosition);\n                        this.selectRange(startPosition, endPosition);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the next endnote from the current selection\n     *\n     * @returns {void}\n     */\n    Selection.prototype.nextEndnote = function () {\n        if (this.isinEndnote) {\n            var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n            var nextEndnote = this.documentHelper.endnoteCollection[indexCount + 1];\n            if (isNullOrUndefined(nextEndnote)) {\n                nextEndnote = endNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            var endnoteElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n            for (var j = 0; j < endnoteElement.childWidgets.length; j++) {\n                var element = (endnoteElement.bodyWidgets[j]).footNoteReference;\n                if (element === nextEndnote) {\n                    startPosition.setPositionParagraph(endnoteElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                    endPosition.setPositionInternal(startPosition);\n                    this.selectRange(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the previous endnote from the current selection.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.previousEndnote = function () {\n        if (this.isinEndnote) {\n            var endNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            var indexCount = this.documentHelper.endnoteCollection.indexOf(endNoteElement);\n            var inline = this.documentHelper.endnoteCollection[indexCount - 1];\n            if (isNullOrUndefined(inline)) {\n                inline = endNoteElement;\n            }\n            var startPosition = this.start.clone();\n            var endPosition = this.end.clone();\n            var referenceElement = this.documentHelper.pages[this.endPage - 1].endnoteWidget;\n            for (var j = 0; j < referenceElement.childWidgets.length; j++) {\n                var element = (referenceElement.bodyWidgets[j]).footNoteReference;\n                if (element === inline) {\n                    startPosition.setPositionParagraph(referenceElement.bodyWidgets[j].childWidgets[0].childWidgets[0], 0);\n                    endPosition.setPositionInternal(startPosition);\n                    this.selectRange(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Move to previous text position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.movePreviousPosition = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        if (this.isEmpty) {\n            this.start.movePreviousPosition();\n            this.end.setPositionInternal(this.start);\n        }\n        this.updateBackwardSelection();\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n        if (this.documentHelper.isFormFillProtectedMode) {\n            var formField = this.getCurrentFormField();\n            if (!formField) {\n                formField = this.getFormFieldInFormFillMode();\n                this.selectPrevNextFormField(false, formField);\n            }\n        }\n    };\n    /**\n     * Move to previous paragraph\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveToPreviousParagraph = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToPreviousParagraph(this);\n        this.start.setPositionInternal(this.end);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to previous line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToPreviousLine = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToPreviousLine(this, this.upDownSelectionLength);\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to line end\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToLineEnd = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToLineEndInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to line start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToLineStart = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToLineStartInternal(this, true);\n        this.upDownSelectionLength = this.end.location.x;\n        // To select Paragraph mark similar to MS WORD\n        if (this.start.paragraph === this.end.paragraph && this.start.offset === this.start.currentWidget.getEndOffset()\n            && this.isParagraphLastLine(this.start.currentWidget) && this.isParagraphFirstLine(this.end.currentWidget)) {\n            this.start.setPositionParagraph(this.start.currentWidget, this.start.offset + 1);\n        }\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveUp = function () {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            this.selectPrevNextFormField(false);\n            return;\n        }\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                this.start.setPositionInternal(this.end);\n            }\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.upDownSelectionLength = this.start.location.x;\n        var beforeUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n        this.start.moveUp(this, this.upDownSelectionLength);\n        isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        var afterUp = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        if (isMultiColumn) {\n            if (beforeUp === afterUp || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                do {\n                    if (isNullOrUndefined(this.start.currentWidget.paragraph.previousRenderedWidget) || (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1)) {\n                        break;\n                    }\n                    if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && beforeUp > this.start.currentWidget.paragraph.bodyWidget.columnIndex) {\n                        break;\n                    }\n                    this.start.moveUp(this, this.upDownSelectionLength);\n                } while (beforeUp !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveDown = function () {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            this.selectPrevNextFormField(true);\n            return;\n        }\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.setPositionInternal(this.end);\n            }\n            else {\n                this.end.setPositionInternal(this.start);\n            }\n            this.upDownSelectionLength = this.start.location.x;\n        }\n        this.upDownSelectionLength = this.start.location.x;\n        var beforeDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        var beforeIndex = this.start.currentWidget.paragraph.bodyWidget.index;\n        var isMultiColumn = this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 ? true : false;\n        this.start.moveDown(this, this.upDownSelectionLength);\n        var afterDown = this.start.currentWidget.paragraph.bodyWidget.columnIndex;\n        if (isMultiColumn) {\n            if (beforeDown === afterDown || beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                do {\n                    if (isNullOrUndefined(this.start.currentWidget.paragraph.nextRenderedWidget) || (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns === 1)) {\n                        break;\n                    }\n                    if (beforeIndex !== this.start.currentWidget.paragraph.bodyWidget.index && this.start.currentWidget.paragraph.bodyWidget.sectionFormat.numberOfColumns > 1 && this.documentHelper.layout.getBodyWidget(this.start.currentWidget.paragraph.bodyWidget, false) === this.start.currentWidget.paragraph.bodyWidget) {\n                        break;\n                    }\n                    this.start.moveDown(this, this.upDownSelectionLength);\n                } while (beforeDown !== this.start.currentWidget.paragraph.bodyWidget.columnIndex);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.fireSelectionChanged(true);\n    };\n    Selection.prototype.updateForwardSelection = function () {\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.setPositionInternal(this.end);\n            }\n            else {\n                this.end.setPositionInternal(this.start);\n            }\n        }\n    };\n    Selection.prototype.updateBackwardSelection = function () {\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.end.setPositionInternal(this.start);\n            }\n            else {\n                this.start.setPositionInternal(this.end);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstBlockInFirstCell = function (table) {\n        if (table.childWidgets.length > 0) {\n            var firstrow = table.childWidgets[0];\n            if (firstrow.childWidgets.length > 0) {\n                var firstcell = firstrow.childWidgets[0];\n                if (firstcell.childWidgets.length === 0) {\n                    return undefined;\n                }\n                return firstcell.childWidgets[0];\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstCellInRegion = function (row, startCell, selectionLength, isMovePrevious) {\n        var cellStart = this.getCellLeft(row, startCell);\n        var cellEnd = cellStart + startCell.cellFormat.cellWidth;\n        var flag = true;\n        if (cellStart <= selectionLength && selectionLength < cellEnd) {\n            for (var k = 0; k < row.childWidgets.length; k++) {\n                var left = this.getCellLeft(row, row.childWidgets[k]);\n                if (HelperMethods.round(cellStart, 2) <= HelperMethods.round(left, 2) &&\n                    HelperMethods.round(left, 2) < HelperMethods.round(cellEnd, 2)) {\n                    flag = false;\n                    return row.childWidgets[k];\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cellLeft = this.getCellLeft(row, row.childWidgets[j]);\n                if (cellLeft <= selectionLength && cellLeft +\n                    row.childWidgets[j].cellFormat.cellWidth > selectionLength) {\n                    flag = false;\n                    return row.childWidgets[j];\n                }\n            }\n        }\n        if (flag) {\n            if (!isNullOrUndefined(row.previousRenderedWidget) && isMovePrevious) {\n                var previousWidget = row.previousRenderedWidget;\n                return this.getFirstCellInRegion(previousWidget, startCell, selectionLength, isMovePrevious);\n            }\n            else if (!isNullOrUndefined(row.nextRenderedWidget) && !isMovePrevious) {\n                return this.getFirstCellInRegion(row.nextRenderedWidget, startCell, selectionLength, isMovePrevious);\n            }\n        }\n        return row.childWidgets[0];\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getFirstParagraph = function (tableCell) {\n        while (tableCell.previousSplitWidget) {\n            tableCell = tableCell.previousSplitWidget;\n        }\n        var firstBlock = tableCell.firstChild;\n        return this.documentHelper.getFirstParagraphBlock(firstBlock);\n    };\n    /**\n     * Get last block in last cell\n     *\n     * @private\n     * @returns {void}\n     */\n    //Table\n    Selection.prototype.getLastBlockInLastCell = function (table) {\n        if (table.childWidgets.length > 0) {\n            var lastRow = table.childWidgets[table.childWidgets.length - 1];\n            var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n            while (lastCell.childWidgets.length === 0 && !isNullOrUndefined(lastCell.previousSplitWidget)) {\n                lastCell = lastCell.previousSplitWidget;\n            }\n            return lastCell.childWidgets[lastCell.childWidgets.length - 1];\n        }\n        return undefined;\n    };\n    /**\n     * Moves the selection to start of the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToLineStart = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.updateBackwardSelection();\n        this.start.moveToLineStartInternal(this, false);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Moves the selection to end of the current line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.moveToLineEnd = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.updateForwardSelection();\n        this.start.moveToLineEndInternal(this, false);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Get Page top\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getPageTop = function (page) {\n        return (page.boundingRectangle.y - this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + this.viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n    };\n    /**\n     * Move text position to cursor point\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.moveTextPosition = function (cursorPoint, textPosition, isMouseLeave) {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        //Updates the text position based on the cursor position.\n        var widget = this.documentHelper.getLineWidgetInternal(cursorPoint, true);\n        if (!isNullOrUndefined(widget)) {\n            this.updateTextPositionWidget(widget, cursorPoint, textPosition, true);\n        }\n        this.upDownSelectionLength = textPosition.location.x;\n        var selectionStartIndex = this.start.getHierarchicalIndexInternal();\n        var selectionEndIndex = this.end.getHierarchicalIndexInternal();\n        if (selectionStartIndex !== selectionEndIndex && !isMouseLeave) {\n            // Extends selection end to field begin or field end.\n            if (TextPosition.isForwardSelection(selectionStartIndex, selectionEndIndex)) {\n                textPosition.validateForwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n            else {\n                textPosition.validateBackwardFieldSelection(selectionStartIndex, selectionEndIndex);\n            }\n        }\n        this.fireSelectionChanged(true);\n    };\n    //Helper Method Implementation\n    //Document\n    /**\n     * Get document start position\n     *\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getDocumentStart = function () {\n        var textPosition = undefined;\n        var block = this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n        return this.setPositionForBlock(block, true);\n    };\n    /**\n     * Get document end position\n     *\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getDocumentEnd = function () {\n        var textPosition = undefined;\n        var documentStart = this.owner.documentStart;\n        var lastPage = this.documentHelper.pages[this.documentHelper.pages.length - 1];\n        if (!isNullOrUndefined(documentStart) && lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1].childWidgets.length > 0) {\n            var block = undefined;\n            var section = lastPage.bodyWidgets[lastPage.bodyWidgets.length - 1];\n            var blocks = section.childWidgets;\n            var lastBlkItem = blocks.length - 1;\n            var lastBlock = blocks[lastBlkItem];\n            if (lastBlock instanceof BlockWidget) {\n                block = lastBlock;\n            }\n            textPosition = this.setPositionForBlock(block, false);\n        }\n        return textPosition;\n    };\n    //Keyboard shortcut internal API\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlEndKey = function () {\n        var documentEnd = undefined;\n        if (!isNullOrUndefined(this.owner.documentEnd)) {\n            documentEnd = this.owner.documentEnd;\n        }\n        if (!isNullOrUndefined(documentEnd)) {\n            this.owner.selectionModule.selectContent(documentEnd, true);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlHomeKey = function () {\n        var documentStart = undefined;\n        if (!isNullOrUndefined(this.owner.documentStart)) {\n            documentStart = this.owner.documentStart;\n        }\n        if (!isNullOrUndefined(documentStart)) {\n            this.owner.selectionModule.selectContent(documentStart, true);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlLeftKey = function () {\n        this.extendToWordStartInternal(true);\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlRightKey = function () {\n        this.extendToWordEndInternal(true);\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlDownKey = function () {\n        this.moveToNextParagraph();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlUpKey = function () {\n        this.moveToPreviousParagraph();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftLeftKey = function () {\n        this.extendBackward();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftUpKey = function () {\n        this.extendToPreviousLine();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift right key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftRightKey = function () {\n        this.extendForward();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftDownKey = function () {\n        this.extendToNextLine();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftLeftKey = function () {\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.extendToWordEndInternal(false);\n        }\n        else {\n            this.extendToWordStartInternal(false);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftUpKey = function () {\n        this.extendToParagraphStart();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift right key\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftRightKey = function () {\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.extendToWordStartInternal(false);\n        }\n        else {\n            this.extendToWordEndInternal(false);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftDownKey = function () {\n        this.extendToParagraphEnd();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles left key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleLeftKey = function () {\n        if (this.end.isCurrentParaBidi) {\n            this.moveNextPosition();\n        }\n        else {\n            this.movePreviousPosition();\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Handles up key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleUpKey = function () {\n        this.isMoveDownOrMoveUp = true;\n        this.moveUp();\n        this.isMoveDownOrMoveUp = false;\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles right key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleRightKey = function () {\n        if (this.end.isCurrentParaBidi) {\n            this.movePreviousPosition();\n        }\n        else {\n            this.moveNextPosition();\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Handles end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleEndKey = function () {\n        this.moveToLineEnd();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleHomeKey = function () {\n        this.moveToLineStart();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles down key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleDownKey = function () {\n        this.isMoveDownOrMoveUp = true;\n        this.moveDown();\n        this.isMoveDownOrMoveUp = false;\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftEndKey = function () {\n        this.extendToLineEnd();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles shift home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleShiftHomeKey = function () {\n        this.extendToLineStart();\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift end key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftEndKey = function () {\n        var documentEnd = undefined;\n        if (!isNullOrUndefined(this.owner.documentEnd)) {\n            documentEnd = this.owner.documentEnd;\n        }\n        if (!isNullOrUndefined(documentEnd)) {\n            this.end.setPosition(documentEnd.currentWidget, false);\n            this.fireSelectionChanged(true);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * Handles control shift home key.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleControlShiftHomeKey = function () {\n        var documentStart = undefined;\n        if (!isNullOrUndefined(this.owner.documentStart)) {\n            documentStart = this.owner.documentStart;\n        }\n        if (!isNullOrUndefined(documentStart)) {\n            this.end.setPositionInternal(documentStart);\n            this.fireSelectionChanged(true);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleSpaceBarKey = function () {\n        if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly'\n            && this.getFormFieldType() === 'CheckBox') {\n            this.owner.editorModule.toggleCheckBoxFormField(this.getCurrentFormField());\n        }\n    };\n    /**\n     * Handles tab key.\n     *\n     * @param isNavigateInCell\n     * @param isShiftTab\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.handleTabKey = function (isNavigateInCell, isShiftTab) {\n        var start = this.start;\n        var isCursorAtParaStart = false;\n        var isCursorAtLineStart = false;\n        if (isNullOrUndefined(start)) {\n            return;\n        }\n        if (start.offset === 0 && start.paragraph.paragraphFormat.listFormat.listId == -1) {\n            if (start.currentWidget.isFirstLine()) {\n                isCursorAtParaStart = true;\n            }\n            isCursorAtLineStart = true;\n        }\n        if (start.paragraph.isInsideTable && this.end.paragraph.isInsideTable && (isNavigateInCell || isShiftTab)) {\n            //Perform tab navigation\n            if (!this.owner.documentHelper.isDocumentProtected && !(this.documentHelper.protectionType === 'FormFieldsOnly')) {\n                if (isShiftTab) {\n                    this.selectPreviousCell();\n                }\n                else {\n                    this.selectNextCell();\n                }\n            }\n        }\n        else if ((isNavigateInCell || isShiftTab) && !isNullOrUndefined(start) && start.offset === this.getStartOffset(start.paragraph)\n            && !isNullOrUndefined(start.paragraph.paragraphFormat) && !isNullOrUndefined(start.paragraph.paragraphFormat.listFormat)\n            && start.paragraph.paragraphFormat.listFormat.listId !== -1 && !this.owner.isReadOnlyMode) {\n            var selection = this.documentHelper.selection;\n            var currentPara = start.paragraph;\n            var isFirstParaForList = false;\n            if (!selection.isForward) {\n                currentPara = selection.end.paragraph;\n            }\n            isFirstParaForList = this.owner.editorModule.isFirstParaForList(selection, currentPara);\n            if (isFirstParaForList) {\n                if (isShiftTab) {\n                    this.owner.editorModule.updateListLevelIndent(-this.documentHelper.defaultTabWidth, currentPara);\n                }\n                else {\n                    this.owner.editorModule.updateListLevelIndent(this.documentHelper.defaultTabWidth, currentPara);\n                }\n            }\n            else {\n                this.owner.editorModule.updateListLevel(isShiftTab ? false : true);\n            }\n        }\n        else if (!this.owner.isReadOnlyMode && !this.documentHelper.isFormFillProtectedMode) {\n            if (isCursorAtParaStart && start.paragraph.paragraphFormat.firstLineIndent < this.documentHelper.defaultTabWidth) {\n                this.documentHelper.owner.editorModule.onApplyParagraphFormat('firstLineIndent', this.documentHelper.defaultTabWidth, true, false);\n            }\n            else if (isCursorAtLineStart) {\n                if (isShiftTab) {\n                    this.owner.editorModule.decreaseIndent();\n                }\n                else {\n                    if (HelperMethods.convertPointToPixel(start.paragraph.paragraphFormat.firstLineIndent + start.paragraph.paragraphFormat.leftIndent) < this.documentHelper.viewer.clientArea.width) {\n                        this.owner.editorModule.increaseIndent();\n                    }\n                }\n            }\n            else {\n                this.owner.editorModule.handleTextInput('\\t');\n            }\n        }\n        if (this.documentHelper.protectionType === 'FormFieldsOnly' && this.documentHelper.formFields.length > 0) {\n            this.selectPrevNextFormField(!isShiftTab);\n        }\n        this.checkForCursorVisibility();\n    };\n    /**\n    * @private\n    * @returns {void}\n    */\n    Selection.prototype.handlePageUpPageDownKey = function (isPageDown, shiftKey) {\n        var _this = this;\n        var offsetX = this.end.location.x;\n        var offsetY = this.end.location.y;\n        var page = this.end.paragraph.bodyWidget.page;\n        var pageTop = this.getPageTop(page);\n        var previousScrollTop = this.documentHelper.viewerContainer.scrollTop;\n        offsetY = (offsetY * this.documentHelper.zoomFactor) + (pageTop - previousScrollTop);\n        offsetX = (offsetX * this.documentHelper.zoomFactor) + page.boundingRectangle.x;\n        if (isPageDown) {\n            this.documentHelper.viewerContainer.scrollTop += this.documentHelper.visibleBounds.height;\n        }\n        else {\n            this.documentHelper.viewerContainer.scrollTop -= this.documentHelper.visibleBounds.height;\n        }\n        var isSameScrollTop = false;\n        if (previousScrollTop === this.documentHelper.viewerContainer.scrollTop) {\n            isSameScrollTop = true;\n        }\n        if (shiftKey) {\n            this.documentHelper.skipScrollToPosition = true;\n        }\n        setTimeout(function () {\n            if (isSameScrollTop) {\n                if (!shiftKey) {\n                    if (isPageDown)\n                        _this.moveToDocumentEnd();\n                    else\n                        _this.moveToDocumentStart();\n                }\n                else {\n                    var position = void 0;\n                    if (isPageDown) {\n                        position = _this.getDocumentEnd();\n                    }\n                    else {\n                        position = _this.getDocumentStart();\n                    }\n                    _this.end.setPositionForLineWidget(position.currentWidget, position.offset);\n                    _this.fireSelectionChanged(true);\n                }\n            }\n            else {\n                _this.select({ x: offsetX, y: offsetY, extend: shiftKey });\n            }\n        }, 0);\n    };\n    // returns current field in FormFill mode\n    Selection.prototype.getFormFieldInFormFillMode = function () {\n        var currentStart = this.owner.selectionModule.start;\n        var formField;\n        for (var i = (this.documentHelper.formFields.length - 1); i >= 0; i--) {\n            if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                continue;\n            }\n            var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n            if (paraIndex.isExistBefore(currentStart)) {\n                formField = this.documentHelper.formFields[i];\n                break;\n            }\n            else if (i === 0) {\n                formField = this.documentHelper.formFields[(this.documentHelper.formFields.length - 1)];\n            }\n        }\n        return formField;\n    };\n    // Navigates & Selects next form field\n    Selection.prototype.selectPrevNextFormField = function (forward, formField) {\n        if (this.documentHelper.isFormFillProtectedMode) {\n            if (!formField) {\n                formField = this.getCurrentFormField();\n            }\n            var index = this.documentHelper.formFields.indexOf(formField);\n            if (forward) {\n                for (var i = index;; i++) {\n                    if (i === (this.documentHelper.formFields.length - 1)) {\n                        i = 0;\n                    }\n                    else {\n                        i = i + 1;\n                    }\n                    if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                        i = i - 1;\n                        continue;\n                    }\n                    this.selectFieldInternal(this.documentHelper.formFields[i], true);\n                    break;\n                }\n            }\n            else {\n                for (var i = index;; i--) {\n                    if (i === 0) {\n                        i = (this.documentHelper.formFields.length - 1);\n                    }\n                    else {\n                        i = i - 1;\n                    }\n                    if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                        i = i + 1;\n                        continue;\n                    }\n                    this.selectFieldInternal(this.documentHelper.formFields[i], true);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.navigateToNextFormField = function () {\n        var currentStart = this.owner.selectionModule.end;\n        var currentFormField;\n        for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n            currentFormField = this.documentHelper.formFields[i];\n            if (!this.documentHelper.formFields[i].formFieldData.enabled) {\n                continue;\n            }\n            var paraIndex = this.getElementPosition(this.documentHelper.formFields[i]).startPosition;\n            if (paraIndex.isExistAfter(currentStart)) {\n                if (currentFormField.formFieldData instanceof TextFormField && currentFormField.formFieldData.type === 'Text' &&\n                    this.documentHelper.isInlineFormFillProtectedMode) {\n                    this.selectTextElementStartOfField(this.documentHelper.formFields[i]);\n                }\n                else {\n                    this.selectFieldInternal(this.documentHelper.formFields[i]);\n                }\n                break;\n            }\n            else if (i === (this.documentHelper.formFields.length - 1)) {\n                currentFormField = this.documentHelper.formFields[0];\n                if (currentFormField.formFieldData instanceof TextFormField && currentFormField.formFieldData.type === 'Text' &&\n                    this.documentHelper.isInlineFormFillProtectedMode) {\n                    this.selectTextElementStartOfField(this.documentHelper.formFields[0]);\n                }\n                else {\n                    this.selectFieldInternal(this.documentHelper.formFields[0]);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTextElementStartOfField = function (formField) {\n        var fieldSeparator = formField.fieldSeparator;\n        var element = fieldSeparator.nextElement;\n        if (element) {\n            while (!(element instanceof TextElementBox)) {\n                element = element.nextElement;\n            }\n            var offset = formField.line.getOffset(element, 0);\n            var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n            this.selectInternal(formField.line, element, 0, point);\n        }\n    };\n    Selection.prototype.triggerFormFillEvent = function (isKeyBoardNavigation) {\n        var previousField = this.previousSelectedFormField;\n        var currentField = this.currentFormField;\n        var previousFieldData;\n        var currentFieldData;\n        if (currentField !== previousField && previousField && previousField.formFieldData instanceof TextFormField\n            && previousField.formFieldData.type === 'Text') {\n            if (previousField.formFieldData.format !== '' && !this.isFormatUpdated) {\n                // Need to handle update form field format\n                this.owner.editorModule.applyFormTextFormat(previousField);\n                if (!isNullOrUndefined(this.previousSelectedFormField)) {\n                    previousField = this.previousSelectedFormField;\n                }\n            }\n            previousFieldData = { 'fieldName': previousField.formFieldData.name, 'value': this.owner.editorModule.getFieldResultText(previousField) };\n            this.owner.trigger(afterFormFieldFillEvent, previousFieldData);\n        }\n        if (currentField !== previousField && currentField && ((currentField.formFieldData instanceof TextFormField\n            && currentField.formFieldData.type === 'Text' && isKeyBoardNavigation == undefined) || (((currentField.formFieldData instanceof TextFormField && this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline') || (currentField.formFieldData instanceof CheckBoxFormField)) && isKeyBoardNavigation))) {\n            currentFieldData = { 'fieldName': currentField.formFieldData.name, 'value': this.owner.editorModule.getFieldResultText(currentField) };\n            this.owner.trigger(beforeFormFieldFillEvent, currentFieldData);\n        }\n    };\n    Selection.prototype.selectPreviousCell = function () {\n        var tableCell = this.start.paragraph.associatedCell;\n        var tableRow = tableCell.ownerRow;\n        var tableAdv = tableRow.ownerTable;\n        if (isNullOrUndefined(tableCell.previousWidget)) {\n            if (!isNullOrUndefined(tableRow.previousRenderedWidget)) {\n                //Move text selection or cursor to previous row's last cell\n                var prevRow = undefined;\n                if (tableRow.previousRenderedWidget instanceof TableRowWidget) {\n                    prevRow = tableRow.previousRenderedWidget;\n                }\n                this.selectTableCellInternal(prevRow.childWidgets[prevRow.childWidgets.length - 1], true);\n            }\n        }\n        else {\n            //Move text selection or cursor to next cell in current row\n            var prevCell = undefined;\n            if (tableCell.previousWidget instanceof TableCellWidget) {\n                prevCell = tableCell.previousWidget;\n            }\n            this.selectTableCellInternal(prevCell, true);\n        }\n    };\n    Selection.prototype.selectNextCell = function () {\n        var tableCell = this.start.paragraph.associatedCell;\n        var tableRow = tableCell.ownerRow;\n        var tableAdv = tableRow.ownerTable;\n        if (isNullOrUndefined(tableCell.nextWidget)) {\n            if (isNullOrUndefined(tableRow.nextRenderedWidget) && !this.owner.isReadOnlyMode) {\n                //Insert new row below\n                this.owner.editorModule.insertRow(false);\n            }\n            else {\n                //Move text selection or cursor to next row's first cell\n                var nextRow = undefined;\n                if (tableRow.nextRenderedWidget instanceof TableRowWidget) {\n                    nextRow = tableRow.nextRenderedWidget;\n                }\n                this.selectTableCellInternal(nextRow.childWidgets[0], true);\n            }\n            // }\n        }\n        else {\n            //Move text selection or cursor to next cell in current row\n            var nextCell = undefined;\n            if (tableCell.nextRenderedWidget instanceof TableCellWidget) {\n                nextCell = tableCell.nextRenderedWidget;\n            }\n            this.selectTableCellInternal(nextCell, true);\n        }\n    };\n    /**\n     * Select given table cell\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableCellInternal = function (tableCell, clearMultiSelection) {\n        var firstParagraph = this.getFirstParagraph(tableCell);\n        var lastParagraph = this.getLastParagraph(tableCell);\n        if (firstParagraph === lastParagraph && lastParagraph.isEmpty()) {\n            this.selectParagraphInternal(lastParagraph, true);\n        }\n        else {\n            var firstLineWidget = lastParagraph.childWidgets[0];\n            this.start.setPosition(firstParagraph.childWidgets[0], true);\n            this.end.setPositionParagraph(firstLineWidget, firstLineWidget.getEndOffset());\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Select while table\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableInternal = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.getTable(start, end))) {\n            var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n            var table = containerCell.ownerTable;\n            var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n            var lastPara = this.documentHelper.getLastParagraphBlock(table);\n            var offset = lastPara.lastChild.getEndOffset();\n            this.start.setPosition(firstPara.childWidgets[0], true);\n            this.end.setPositionParagraph(lastPara.lastChild, offset + 1);\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getTableRevision = function () {\n        var start = this.start.clone();\n        var end = this.end.clone();\n        if (!this.isForward) {\n            start = this.end.clone();\n            end = this.start.clone();\n        }\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(this.getTable(start, end))) {\n            var containerCell = this.getContainerCellOf(start.paragraph.associatedCell, end.paragraph.associatedCell);\n            var table = containerCell.ownerTable;\n            var firstPara = this.documentHelper.getFirstParagraphBlock(table);\n            var lastPara = this.documentHelper.getLastParagraphBlock(table);\n            var offset = lastPara.lastChild.getEndOffset();\n            start.setPosition(firstPara.childWidgets[0], true);\n            end.setPositionParagraph(lastPara.lastChild, offset + 1);\n        }\n        var startIndex = this.getAbsolutePositionFromRelativePosition(start);\n        var endIndex = this.getAbsolutePositionFromRelativePosition(end);\n        return Math.abs(endIndex - startIndex);\n        // this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single column\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnInternal = function () {\n        var startTextPos = this.start;\n        var endTextPos = this.end;\n        if (!this.isForward) {\n            startTextPos = this.end;\n            endTextPos = this.start;\n        }\n        if (!isNullOrUndefined(startTextPos) && !isNullOrUndefined(endTextPos) && !isNullOrUndefined(this.getTable(startTextPos, endTextPos))) {\n            var containerCell = this.getContainerCellOf(startTextPos.paragraph.associatedCell, endTextPos.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(endTextPos.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(startTextPos.paragraph.associatedCell, containerCell);\n                var endCell = this.getSelectedCell(endTextPos.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, endTextPos.paragraph.associatedCell)) {\n                    var row = startCell.ownerRow;\n                    var columnCells = containerCell.ownerTable.getColumnCellsForSelection(containerCell, containerCell);\n                    if (columnCells.length > 0) {\n                        var firstPara = this.getFirstParagraph(columnCells[0]);\n                        var lastPara = this.getLastParagraph(columnCells[columnCells.length - 1]);\n                        this.start.setPosition(firstPara.firstChild, true);\n                        var lastLine = lastPara.lastChild;\n                        this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n                    }\n                }\n                else {\n                    var startCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(startCell, startCell);\n                    var endCellColumnCells = containerCell.ownerTable.getColumnCellsForSelection(endCell, endCell);\n                    if (startCellColumnCells.length > 0 && endCellColumnCells.length > 0) {\n                        var firstPara = this.getFirstParagraph(startCellColumnCells[0]);\n                        var lastPara = this.getLastParagraph(endCellColumnCells[endCellColumnCells.length - 1]);\n                        this.start.setPosition(firstPara.firstChild, true);\n                        var lastLine = lastPara.lastChild;\n                        this.end.setPositionParagraph(lastLine, lastLine.getEndOffset() + 1);\n                    }\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single row\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableRow = function () {\n        var startPos = this.start;\n        var endPos = this.end;\n        if (!this.isForward) {\n            startPos = this.end;\n            endPos = this.start;\n        }\n        if (!isNullOrUndefined(startPos) && !isNullOrUndefined(endPos) && !isNullOrUndefined(this.getTable(startPos, endPos))) {\n            var containerCell = void 0;\n            containerCell = this.getContainerCellOf(startPos.paragraph.associatedCell, endPos.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(endPos.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(startPos.paragraph.associatedCell, containerCell);\n                var endCell = this.getSelectedCell(endPos.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, endPos.paragraph.associatedCell)) {\n                    var row = startCell.ownerRow;\n                    var firstPara = this.getFirstParagraph(row.childWidgets[0]);\n                    var lastPara = this.getLastParagraph(row.childWidgets[row.childWidgets.length - 1]);\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n                else {\n                    var firstPara = this.getFirstParagraph(startCell.ownerRow.childWidgets[0]);\n                    var lastPara = void 0;\n                    lastPara = this.getLastParagraph(endCell.ownerRow.childWidgets[endCell.ownerRow.childWidgets.length - 1]);\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Select single cell\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectTableCell = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (isNullOrUndefined(this.getTable(start, end))) {\n            return;\n        }\n        if (this.isEmpty) {\n            if (start.paragraph.isInsideTable && !isNullOrUndefined(start.paragraph.associatedCell)) {\n                var firstPara = this.getFirstParagraph(start.paragraph.associatedCell);\n                var lastPara = this.getLastParagraph(end.paragraph.associatedCell);\n                if (firstPara === lastPara) {\n                    this.start.setPosition(lastPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n                else {\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        else {\n            var containerCell = this.getContainerCell(start.paragraph.associatedCell);\n            if (this.containsCell(containerCell, start.paragraph.associatedCell) && this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                var firstPara = this.getFirstParagraph(containerCell);\n                var lastPara = this.getLastParagraph(containerCell);\n                if (!isNullOrUndefined(firstPara) && !isNullOrUndefined(lastPara)) {\n                    this.start.setPosition(firstPara.firstChild, true);\n                    this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                }\n            }\n        }\n        this.selectPosition(this.start, this.end);\n    };\n    /**\n     * Selects the entire document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.selectAll = function () {\n        var documentStart;\n        var documentEnd;\n        this.documentHelper.skipScrollToPosition = true;\n        var container = this.getContainerWidget(this.start.paragraph);\n        if (this.owner.enableHeaderAndFooter) {\n            var headerFooter = this.getContainerWidget(this.start.paragraph);\n            documentStart = this.setPositionForBlock(headerFooter.firstChild, true);\n            documentEnd = this.setPositionForBlock(headerFooter.lastChild, false);\n        }\n        else if (this.isInShape) {\n            var textFrame = this.getCurrentTextFrame();\n            documentStart = this.setPositionForBlock(textFrame.firstChild, true);\n            documentEnd = this.setPositionForBlock(textFrame.lastChild, false);\n        }\n        else if (container instanceof FootNoteWidget && container.footNoteType === 'Footnote') {\n            var i = void 0;\n            var j = void 0;\n            var pageLength = this.documentHelper.pages.length;\n            for (i = 0; i <= pageLength - 1; i++) {\n                if (isNullOrUndefined(this.documentHelper.pages[i].footnoteWidget)) {\n                    continue;\n                }\n                else {\n                    documentStart = this.setPositionForBlock(this.documentHelper.pages[i].footnoteWidget.bodyWidgets[0].firstChild, true);\n                    break;\n                }\n            }\n            for (j = pageLength - 1; j >= 0; j--) {\n                if (isNullOrUndefined(this.documentHelper.pages[j].footnoteWidget)) {\n                    continue;\n                }\n                else {\n                    var child = this.documentHelper.pages[j].footnoteWidget.bodyWidgets.length;\n                    var lastChild = this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets.length;\n                    documentEnd = this.setPositionForBlock(this.documentHelper.pages[j].footnoteWidget.bodyWidgets[child - 1].childWidgets[lastChild - 1], false);\n                    break;\n                }\n            }\n        }\n        else if (container instanceof FootNoteWidget && container.footNoteType === 'Endnote') {\n            var endNotes = this.getContainerWidget(this.start.paragraph);\n            documentStart = this.setPositionForBlock(endNotes.bodyWidgets[0].firstChild, true);\n            documentEnd = this.setPositionForBlock(endNotes.bodyWidgets[endNotes.bodyWidgets.length - 1].firstChild, false);\n        }\n        else {\n            documentStart = this.owner.documentStart;\n            documentEnd = this.owner.documentEnd;\n        }\n        //Selects the entire document.\n        if (!isNullOrUndefined(documentStart)) {\n            this.start.setPositionInternal(documentStart);\n            this.end.setPositionParagraph(documentEnd.currentWidget, documentEnd.offset + 1);\n            this.upDownSelectionLength = this.end.location.x;\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Extends the selection backward.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendBackward = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.end.moveForward();\n        }\n        else {\n            this.end.moveBackward();\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection forward.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendForward = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        var isForward = this.isForward ? this.start.isCurrentParaBidi : this.end.isCurrentParaBidi;\n        if (isForward) {\n            this.end.moveBackward();\n        }\n        else {\n            this.end.moveForward();\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extend selection to word start and end\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStartEnd = function () {\n        if ((this.start.paragraph.isInsideTable || this.end.paragraph.isInsideTable)\n            && (this.start.paragraph.associatedCell !== this.end.paragraph.associatedCell\n                || this.isCellSelected(this.start.paragraph.associatedCell, this.start, this.end))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Extends the selection to word start.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStart = function () {\n        this.extendToWordStartInternal(false);\n    };\n    /**\n     * Extends the selection to word end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordEnd = function () {\n        this.extendToWordEndInternal(false);\n    };\n    /**\n     * Extends selection to word start\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordStartInternal = function (isNavigation) {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        var isCellSelected = this.extendToWordStartEnd();\n        if (isCellSelected) {\n            this.end.moveToPreviousParagraphInTable(this);\n        }\n        else {\n            if (isNavigation && this.end.isCurrentParaBidi) {\n                this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n            }\n            else {\n                this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n            }\n        }\n        if (isNavigation) {\n            this.start.setPositionInternal(this.end);\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to word end.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToWordEndInternal = function (isNavigation) {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        var isCellSelect = this.extendToWordStartEnd();\n        if (isCellSelect) {\n            this.end.moveToNextParagraphInTable();\n        }\n        else {\n            if (isNavigation && this.end.isCurrentParaBidi) {\n                this.end.moveToWordStartInternal(isNavigation ? 0 : 1);\n            }\n            else {\n                this.end.moveToWordEndInternal(isNavigation ? 0 : 1, false);\n            }\n        }\n        if (isNavigation) {\n            this.start.setPositionInternal(this.end);\n        }\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Extends the selection to next line.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.extendToNextLine = function () {\n        if (isNullOrUndefined(this.start)) {\n            return;\n        }\n        this.end.moveToNextLine(this.upDownSelectionLength);\n        this.fireSelectionChanged(true);\n    };\n    //Selection Text get API\n    //Selection add, Highlight, remove API enda\n    Selection.prototype.getTextPosition = function (hierarchicalIndex) {\n        var textPosition = new TextPosition(this.owner);\n        textPosition.setPositionForCurrentIndex(hierarchicalIndex);\n        return textPosition;\n    };\n    /**\n     * Get Selected text\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.getText = function (includeObject) {\n        if (isNullOrUndefined(this.start) || isNullOrUndefined(this.end)\n            || isNullOrUndefined(this.start.paragraph) || isNullOrUndefined(this.end.paragraph)) {\n            return undefined;\n        }\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (startPosition.isAtSamePosition(endPosition)) {\n            return '';\n        }\n        return this.getTextInternal(startPosition, endPosition, includeObject);\n    };\n    /**\n     * Get selected text\n     *\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getTextInternal = function (start, end, includeObject) {\n        if (start.isExistAfter(end)) {\n            var temp = end;\n            end = start;\n            start = temp;\n        }\n        var startPosition = start;\n        var endPosition = end;\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(end) && !isNullOrUndefined(start.paragraph) && !isNullOrUndefined(end.paragraph)) {\n            var startIndex = 0;\n            var endIndex = 0;\n            var startOffset = start.offset;\n            var endOffset = end.offset;\n            var startInlineObj = start.currentWidget.getInline(startOffset, startIndex);\n            startIndex = startInlineObj.index;\n            var inline = startInlineObj.element;\n            // If the start position is at the beginning of field begin that has field end, then field code should be skipped.\n            if (inline instanceof FieldElementBox && !isNullOrUndefined(inline.fieldEnd)) {\n                var elementInfo = this.getRenderedInline(inline, startIndex);\n                inline = elementInfo.element;\n                startIndex = elementInfo.index;\n            }\n            var endInlineObj = end.currentWidget.getInline(endOffset, endIndex);\n            var endInline = endInlineObj.element;\n            endIndex = endInlineObj.index;\n            var text = '';\n            // Retrieves the text from start inline.\n            if (inline instanceof ImageElementBox && includeObject && startIndex === 0) {\n                text = ElementBox.objectCharacter;\n            }\n            else if (inline instanceof TextElementBox) {\n                text = ((isNullOrUndefined(inline.text)) || (inline.text) === '') || inline.text.length < startIndex ? text : inline.text.substring(startIndex);\n            }\n            if (startPosition.paragraph === endPosition.paragraph) {\n                if (inline instanceof ElementBox) {\n                    if (inline === endInline && inline instanceof TextElementBox) {\n                        text = text.length < endIndex - startIndex ? text : text.substring(0, endIndex - startIndex);\n                    }\n                    else if (inline.nextNode instanceof ElementBox) {\n                        text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n                    }\n                }\n            }\n            else {\n                if (inline instanceof ElementBox && inline.nextNode instanceof ElementBox) {\n                    text = text + this.getTextInline(inline.nextNode, endPosition.paragraph, endInline, endIndex, includeObject);\n                }\n                else {\n                    var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(startPosition.paragraph);\n                    text = text + '\\r';\n                    while (!isNullOrUndefined(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n                        text = text + '\\r';\n                        if (nextParagraphWidget === endPosition.paragraph) {\n                            return text;\n                        }\n                        nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n                    }\n                    if (!isNullOrUndefined(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n                        text = text + this.getTextInline(nextParagraphWidget.childWidgets[0].children[0], endPosition.paragraph, endInline, endIndex, includeObject);\n                    }\n                }\n            }\n            // If the selection includes end paragraph mark.\n            if (endOffset === (endPosition.currentWidget).getEndOffset() + 1) {\n                text = text + '\\r';\n            }\n            return text;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @param block\n     * @param offset\n     * @returns {string}\n     */\n    Selection.prototype.getHierarchicalIndex = function (block, offset) {\n        var index;\n        if (block) {\n            if (block instanceof HeaderFooterWidget) {\n                var hfString = block.headerFooterType.indexOf('Header') !== -1 ? 'H' : 'F';\n                var pageIndex = block.page.index.toString();\n                // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n                var sectionIndex = block.page.sectionIndex;\n                index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n            }\n            else {\n                if (block instanceof BodyWidget && !isNullOrUndefined(block.containerWidget) && block.containerWidget instanceof FootNoteWidget) {\n                    var ind = block.containerWidget.bodyWidgets.indexOf(block);\n                    index = ind + ';' + offset;\n                }\n                else {\n                    // if (block instanceof BodyWidget && block.sectionFormat.columns.length > 1) {\n                    //         index = block.indexInOwner + ';' + offset;\n                    // }\n                    // else {\n                    index = block.index + ';' + offset;\n                    // }\n                }\n            }\n            if (block instanceof TextFrame) {\n                var indexInOwner = block.containerShape.line.getOffset(block.containerShape, 1);\n                index = 'S' + ';' + indexInOwner + ';' + offset;\n                return this.getHierarchicalIndex(block.containerShape.paragraph, index);\n            }\n            if (block instanceof FootNoteWidget) {\n                // index = block.index + ';' + index;\n                //block = block.containerWidget;\n                var hfString = block.footNoteType === 'Footnote' ? 'FN' : 'EN';\n                var pageIndex = block.page.index.toString();\n                // let headerFooterIndex: string = (this.viewer as PageLayoutViewer).getHeaderFooter(block.headerFooterType).toString();\n                var sectionIndex = block.page.sectionIndex;\n                index = sectionIndex + ';' + hfString + ';' + pageIndex + ';' + offset;\n            }\n            if (block.containerWidget) {\n                if (block instanceof TableCellWidget && block.rowIndex !== block.containerWidget.index) {\n                    index = block.rowIndex + ';' + index;\n                    block = block.containerWidget;\n                }\n                return this.getHierarchicalIndex(block.containerWidget, index);\n            }\n        }\n        return index;\n    };\n    /**\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getHierarchicalIndexByPosition = function (position) {\n        var info = this.getParagraphInfo(position);\n        return this.getHierarchicalIndex(info.paragraph, info.offset.toString());\n    };\n    /**\n     * @private\n     * @returns {TextPosition}\n     */\n    Selection.prototype.getTextPosBasedOnLogicalIndex = function (hierarchicalIndex) {\n        var textPosition = new TextPosition(this.owner);\n        var blockInfo = this.getParagraph({ index: hierarchicalIndex });\n        var lineInfo = this.getLineInfoBasedOnParagraph(blockInfo.paragraph, blockInfo.offset);\n        textPosition.setPositionForLineWidget(lineInfo.line, lineInfo.offset);\n        return textPosition;\n    };\n    /**\n     * Get offset value to update in selection\n     *\n     * @private\n     * @returns {LineInfo}\n     */\n    Selection.prototype.getLineInfoBasedOnParagraph = function (paragraph, offset) {\n        var position = undefined;\n        var element = undefined;\n        var length = this.getParagraphLength(paragraph);\n        var next = paragraph.nextSplitWidget;\n        if (offset > length + 1 && isNullOrUndefined(next)) {\n            offset = length;\n        }\n        while (offset > length && next instanceof ParagraphWidget) {\n            offset -= length;\n            paragraph = next;\n            length = this.getParagraphLength(paragraph);\n            next = paragraph.nextSplitWidget;\n        }\n        return this.getLineInfo(paragraph, offset);\n    };\n    /**\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraph = function (position) {\n        var paragraph = this.getParagraphInternal(this.getBodyWidget(position), position);\n        return { paragraph: paragraph, offset: parseInt(position.index, 10) };\n    };\n    /**\n     * Gets body widget based on position.\n     *\n     * @private\n     * @returns {BlockContainer}\n     */\n    Selection.prototype.getBodyWidget = function (position) {\n        var index = position.index.indexOf(';');\n        var value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        var sectionIndex = parseInt(value, 10);\n        index = parseInt(value, 10);\n        index = position.index.indexOf(';');\n        value = position.index.substring(0, index);\n        // position = position.substring(index).replace(';', '');\n        if (value === 'H' || value === 'F') {\n            return this.getHeaderFooterWidget(position);\n        }\n        else if (value === 'FN' || value === 'EN') {\n            return this.getFootNoteWidget(position);\n        }\n        index = parseInt(value, 10);\n        return this.getBodyWidgetInternal(sectionIndex, index);\n    };\n    Selection.prototype.getFootNoteWidget = function (position) {\n        var index1 = position.index.indexOf(';');\n        var value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        var footNote = value1 === 'FN';\n        index1 = position.index.indexOf(';');\n        value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        index1 = parseInt(value1, 10);\n        var page = this.documentHelper.pages[index1];\n        index1 = position.index.indexOf(';');\n        value1 = position.index.substring(0, index1);\n        position.index = position.index.substring(index1).replace(';', '');\n        index1 = parseInt(value1, 10);\n        if (footNote) {\n            return page.footnoteWidget.bodyWidgets[index1];\n        }\n        else {\n            return page.endnoteWidget.bodyWidgets[index1];\n        }\n    };\n    Selection.prototype.getHeaderFooterWidget = function (position) {\n        //HEADER OR FOOTER WIDGET\n        var index = position.index.indexOf(';');\n        var value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        var isHeader = value === 'H';\n        index = position.index.indexOf(';');\n        value = position.index.substring(0, index);\n        position.index = position.index.substring(index).replace(';', '');\n        index = parseInt(value, 10);\n        var page = this.documentHelper.pages[index];\n        var headerFooterWidget;\n        if (isHeader) {\n            headerFooterWidget = page.headerWidget;\n        }\n        else {\n            headerFooterWidget = page.footerWidget;\n        }\n        if (!isNullOrUndefined(headerFooterWidget)) {\n            headerFooterWidget.page = page;\n        }\n        return headerFooterWidget;\n    };\n    /**\n     * @private\n     * @returns {BodyWidget}\n     */\n    Selection.prototype.getBodyWidgetInternal = function (sectionIndex, blockIndex) {\n        for (var i = 0; i < this.documentHelper.pages.length; i++) {\n            for (var j = 0; j < this.documentHelper.pages[i].bodyWidgets.length; j++) {\n                var bodyWidget = this.documentHelper.pages[i].bodyWidgets[j];\n                if (bodyWidget.index === sectionIndex) {\n                    if (bodyWidget.childWidgets.length > 0 && bodyWidget.firstChild.index <= blockIndex &&\n                        bodyWidget.lastChild.index >= blockIndex) {\n                        return bodyWidget;\n                    }\n                }\n                if (bodyWidget.index > sectionIndex) {\n                    break;\n                }\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.getParagraphInternal = function (container, position) {\n        if (isNullOrUndefined(position.index)) {\n            return undefined;\n        }\n        // let ins: Widget = container;\n        var index = position.index.indexOf(';');\n        var value = '0';\n        if (index >= 0) {\n            value = position.index.substring(0, index);\n            position.index = position.index.substring(index).replace(';', '');\n        }\n        // if (container instanceof BodyWidget && value === 'HF') {\n        //     return this.getParagraph(container.headerFooters, position);\n        // }\n        index = parseInt(value, 10);\n        if (container instanceof TableRowWidget && index >= container.childWidgets.length) {\n            position.index = '0;0';\n            index = container.childWidgets.length - 1;\n        }\n        var childWidget = this.getBlockByIndex(container, index);\n        if (childWidget) {\n            value = position.index.substring(0, 1);\n            if (value === 'S') {\n                position.index = position.index.substring(1).replace(';', '');\n                var indexInOwner = position.index.substring(0, position.index.indexOf(';'));\n                position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n                var paraIndex = position.index.substring(0, position.index.indexOf(';'));\n                position.index = position.index.substring(position.index.indexOf(';')).replace(';', '');\n                var shape = childWidget.getInline(parseInt(indexInOwner), 0).element;\n                childWidget = shape.textFrame.childWidgets[paraIndex];\n            }\n            var child = childWidget;\n            if (child instanceof ParagraphWidget) {\n                if (position.index.indexOf(';') > 0) {\n                    position.index = '0';\n                }\n                return child;\n            }\n            if (child instanceof Widget) {\n                if (position.index.indexOf(';') > 0) {\n                    return this.getParagraphInternal(child, position);\n                }\n                else {\n                    //If table is shifted to previous text position then return the first paragraph within table.\n                    if (child instanceof TableWidget) {\n                        return this.documentHelper.getFirstParagraphInFirstCell(child);\n                    }\n                    return undefined;\n                }\n            }\n        }\n        else if (container) {\n            var nextWidget = container.getSplitWidgets().pop().nextRenderedWidget;\n            if (nextWidget instanceof Widget) {\n                position.index = '0';\n                if (nextWidget instanceof TableWidget) {\n                    return this.documentHelper.getFirstParagraphInFirstCell(nextWidget);\n                }\n                return nextWidget;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {Widget}\n     */\n    Selection.prototype.getBlockByIndex = function (container, blockIndex) {\n        var childWidget;\n        if (container) {\n            for (var j = 0; j < container.childWidgets.length; j++) {\n                if (container.childWidgets[j].index === blockIndex) {\n                    childWidget = container.childWidgets[j];\n                    break;\n                }\n            }\n            if (!childWidget && !(container instanceof HeaderFooterWidget)) {\n                return this.getBlockByIndex(container.nextSplitWidget, blockIndex);\n            }\n        }\n        return childWidget;\n    };\n    /**\n     * Get logical offset of paragraph.\n     *\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraphInfo = function (position) {\n        return this.getParagraphInfoInternal(position.currentWidget, position.offset);\n    };\n    /**\n     * Get the start or end cell from current selection\n     *\n     * @private\n     * @returns {TableCellWidget}\n     */\n    Selection.prototype.getCellFromSelection = function (type) {\n        var cell;\n        var selectedCells = this.getSelectedCells();\n        if (this.hasMergedCells()) {\n            return undefined;\n        }\n        if (type == 0 && selectedCells.length > 0) {\n            if (!(this.selectedWidgets.keys[0] instanceof TableCellWidget)) {\n                return undefined;\n            }\n            cell = selectedCells[0];\n            var rowIndex = cell.rowIndex;\n            var colIndex = cell.columnIndex;\n            var tableIndex = cell.ownerTable.index;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (widget.rowIndex < rowIndex) {\n                    rowIndex = widget.rowIndex;\n                }\n                if (widget.columnIndex < colIndex) {\n                    colIndex = widget.columnIndex;\n                }\n                if (widget.ownerTable.index < tableIndex) {\n                    tableIndex = widget.ownerTable.index;\n                }\n            }\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n                    cell = widget;\n                }\n            }\n        }\n        else if (type == 1 && selectedCells.length > 0) {\n            if (!(this.selectedWidgets.keys[this.selectedWidgets.length - 1] instanceof TableCellWidget)) {\n                return undefined;\n            }\n            cell = selectedCells[selectedCells.length - 1];\n            var rowIndex = cell.rowIndex;\n            var colIndex = cell.columnIndex;\n            var tableIndex = cell.ownerTable.index;\n            for (var i = selectedCells.length - 1; i >= 0; i--) {\n                var widget = selectedCells[i];\n                if (widget.rowIndex > rowIndex) {\n                    rowIndex = widget.rowIndex;\n                }\n                if (widget.columnIndex > colIndex) {\n                    colIndex = widget.columnIndex;\n                }\n                if (widget.ownerTable.index > tableIndex) {\n                    tableIndex = widget.ownerTable.index;\n                }\n            }\n            for (var i = 0; i < selectedCells.length; i++) {\n                var widget = selectedCells[i];\n                if (rowIndex == widget.rowIndex && colIndex == widget.columnIndex && tableIndex == widget.ownerTable.index) {\n                    cell = widget;\n                }\n            }\n        }\n        return (cell instanceof TableCellWidget) ? cell : undefined;\n    };\n    /**\n     * Get the start cell or end cell in table with merged cells from current selection.\n     *\n     * @private\n     * @returns {TableCellWidget}\n     */\n    Selection.prototype.getCellFromSelectionInTable = function (type) {\n        var cell;\n        var selectedCells = this.getSelectedCells();\n        var bounds = this.getCellBoundsInfo();\n        var sortedRowIndexArray = [];\n        var sortedColumnIndexArray = [];\n        for (var i = 0; i < selectedCells.length; i++) {\n            var widget = selectedCells[i];\n            sortedRowIndexArray.push(widget.rowIndex);\n            sortedColumnIndexArray.push(widget.columnIndex);\n        }\n        sortedRowIndexArray.sort();\n        sortedColumnIndexArray.sort();\n        var requiredRow;\n        var requiredCol;\n        if (type == 1) {\n            requiredRow = bounds.row.rowLast;\n            requiredCol = bounds.column.colLast;\n            var isRequiredCellExist = false;\n            while (!isRequiredCellExist && isNullOrUndefined(cell)) {\n                for (var i = 0; i < selectedCells.length; i++) {\n                    var widget_1 = selectedCells[i];\n                    if (widget_1.rowIndex == requiredRow && widget_1.columnIndex == requiredCol) {\n                        isRequiredCellExist = true;\n                        cell = widget_1;\n                        break;\n                    }\n                }\n                if (!isRequiredCellExist) {\n                    requiredRow -= 1;\n                }\n            }\n        }\n        else if (type == 0) {\n            requiredRow = bounds.row.rowFirst;\n            requiredCol = bounds.column.colFirst;\n            var isRequiredCellExist = false;\n            while (!isRequiredCellExist && isNullOrUndefined(cell)) {\n                for (var i = 0; i < selectedCells.length; i++) {\n                    var widget_2 = selectedCells[i];\n                    if (widget_2.rowIndex == requiredRow && widget_2.columnIndex == requiredCol) {\n                        isRequiredCellExist = true;\n                        cell = widget_2;\n                        break;\n                    }\n                }\n                if (!isRequiredCellExist) {\n                    requiredCol += 1;\n                }\n            }\n        }\n        return cell;\n    };\n    /**\n     * Get the actual offset from the current selection.\n     *\n     * @private\n     * @returns {string}\n     */\n    Selection.prototype.getActualOffset = function (cell, type) {\n        var offset;\n        if (type == 0) {\n            var paraElement = this.getFirstParagraph(cell);\n            offset = this.getHierarchicalIndex(paraElement, this.getStartOffset(paraElement).toString());\n        }\n        else if (type == 1) {\n            var paraElement = this.getLastParagraph(cell);\n            var lastLine = paraElement.lastChild;\n            var length_1 = this.getParagraphLength(paraElement, lastLine) + this.getLineLength(lastLine) + 1;\n            offset = this.getHierarchicalIndex(paraElement, length_1.toString());\n        }\n        return offset;\n    };\n    /**\n     * Get the properties for Bookmark.\n     *\n     * @private\n     * @returns {object}\n     */\n    Selection.prototype.getBookmarkProperties = function (bookmark) {\n        var selectedWidgets = this.selectedWidgets.keys;\n        if (bookmark.bookmarkType == 0) {\n            if (!(selectedWidgets[0] instanceof TableCellWidget)) {\n                return undefined;\n            }\n            var bounds = this.getCellBoundsInfo();\n            if (!isNullOrUndefined(bounds)) {\n                return {\n                    'columnFirst': bounds.column.colFirst.toString(),\n                    'columnLast': bounds.column.colLast.toString()\n                };\n            }\n        }\n        if (bookmark.bookmarkType == 1) {\n            if (selectedWidgets[selectedWidgets.length - 1] instanceof TableCellWidget) {\n                return undefined;\n            }\n            var properties = {};\n            // isAfterParagraphMark\n            if (this.isParagraphMarkSelected()) {\n                properties.isAfterParagraphMark = true;\n            }\n            // isAfterCellMark\n            var bookmarkStart = bookmark.reference;\n            var selectedCells = this.getSelectedCells();\n            if (bookmarkStart && !isNullOrUndefined(bookmarkStart.properties)) {\n                if (selectedCells.length == 1) {\n                    if (this.isCellSelected(selectedCells[0], this.start, this.end)) {\n                        properties.isAfterCellMark = true;\n                        delete properties.isAfterParagraphMark;\n                    }\n                }\n            }\n            // isAfterTableMark\n            if (this.isTableSelected()) {\n                properties.isAfterTableMark = true;\n            }\n            // isAfterRowMark\n            if (this.isRowSelected()) {\n                properties.isAfterRowMark = true;\n            }\n            if (!isNullOrUndefined(properties.isAfterParagraphMark) || !isNullOrUndefined(properties.isAfterCellMark)) {\n                return properties;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if Paragraph Mark is selected.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isParagraphMarkSelected = function () {\n        var line = this.end.currentWidget;\n        var paraElement;\n        if (line instanceof LineWidget) {\n            paraElement = line.paragraph;\n        }\n        var paraLength = this.getParagraphLength(paraElement);\n        var endIndices = this.endOffset.split(';');\n        var endIndex = parseInt(endIndices[endIndices.length - 1]);\n        if (endIndex > paraLength) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns true if Row is selected.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isRowSelected = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (isNullOrUndefined(start.paragraph.associatedCell) ||\n            isNullOrUndefined(end.paragraph.associatedCell)) {\n            return false;\n        }\n        var row = end.paragraph.associatedCell.ownerRow.getSplitWidgets();\n        var firstParagraph;\n        var firstcell;\n        if (row[0].childWidgets.length > 0) {\n            firstcell = row[0].childWidgets[0];\n            if (firstcell.childWidgets.length === 0) {\n                return undefined;\n            }\n            firstParagraph = firstcell.childWidgets[0];\n        }\n        var lastParagraph;\n        var lastRow = row[row.length - 1];\n        var lastCell = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n        while (lastCell.childWidgets.length === 0 && !isNullOrUndefined(lastCell.previousSplitWidget)) {\n            lastCell = lastCell.previousSplitWidget;\n        }\n        lastParagraph = lastCell.childWidgets[lastCell.childWidgets.length - 1];\n        return firstcell.equals(firstParagraph.associatedCell) &&\n            end.paragraph.associatedCell.equals(lastParagraph.associatedCell)\n            && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || (start.offset === 0\n                && end.offset === this.getLineLength(lastParagraph.lastChild) + 1));\n    };\n    /**\n     * Get the bounds of row and col index from selected cells\n     *\n     * @private\n     * @returns {object}\n     */\n    Selection.prototype.getCellBoundsInfo = function () {\n        var selectedWidgets = this.getSelectedCells();\n        if (selectedWidgets.length > 0) {\n            var colFirst = selectedWidgets[0].columnIndex;\n            var colLast = selectedWidgets[selectedWidgets.length - 1].columnIndex;\n            var rowFirst = selectedWidgets[0].rowIndex;\n            var rowLast = selectedWidgets[selectedWidgets.length - 1].rowIndex;\n            for (var i = 0; i < selectedWidgets.length; i++) {\n                var widget = selectedWidgets[i];\n                if (widget.columnIndex < colFirst) {\n                    colFirst = widget.columnIndex;\n                }\n                if (widget.columnIndex > colLast) {\n                    colLast = widget.columnIndex;\n                }\n                if (widget.rowIndex < rowFirst) {\n                    rowFirst = widget.rowIndex;\n                }\n                if (widget.rowIndex > rowLast) {\n                    rowLast = widget.rowIndex;\n                }\n            }\n            return { 'column': {\n                    'colFirst': colFirst,\n                    'colLast': colLast\n                },\n                'row': {\n                    'rowFirst': rowFirst,\n                    'rowLast': rowLast\n                }\n            };\n        }\n        return undefined;\n    };\n    /**\n     * Return true if the selection has merged cells, else false.\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.hasMergedCells = function () {\n        var selectedCells = this.getSelectedCells();\n        for (var i = 0; i < selectedCells.length; i++) {\n            var widget = selectedCells[i];\n            if (widget.cellFormat.rowSpan > 1 || widget.cellFormat.columnSpan > 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {ParagraphInfo}\n     */\n    Selection.prototype.getParagraphInfoInternal = function (line, lineOffset) {\n        var paragraph = line.paragraph;\n        var offset = this.getParagraphLength(paragraph, line) + lineOffset;\n        var previous = paragraph.previousSplitWidget;\n        while (previous instanceof ParagraphWidget) {\n            paragraph = previous;\n            offset += this.documentHelper.selection.getParagraphLength(paragraph);\n            previous = paragraph.previousSplitWidget;\n        }\n        return { 'paragraph': paragraph, 'offset': offset };\n    };\n    /**\n     * @private\n     * @returns {ListTextElementBox}\n     */\n    Selection.prototype.getListTextElementBox = function (paragarph) {\n        if (isNullOrUndefined(paragarph)) {\n            return undefined;\n        }\n        var listTextElement;\n        if (!paragarph.isEmpty()) {\n            var lineWidget = paragarph.childWidgets[0];\n            if (lineWidget.children.length > 1) {\n                if (lineWidget.children[0] instanceof ListTextElementBox) {\n                    listTextElement = lineWidget.children[0];\n                }\n            }\n        }\n        return listTextElement;\n    };\n    /**\n     * @private\n     * @returns {WListLevel}\n     */\n    Selection.prototype.getListLevel = function (paragraph) {\n        var currentList = undefined;\n        var listLevelNumber = 0;\n        if (!isNullOrUndefined(paragraph.paragraphFormat) && !isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n            currentList = this.documentHelper.getListById(paragraph.paragraphFormat.listFormat.listId);\n            listLevelNumber = paragraph.paragraphFormat.listFormat.listLevelNumber;\n        }\n        if (!isNullOrUndefined(currentList) &&\n            !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId))\n            // && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels.getItem(listLevelNumber))) {\n            && !isNullOrUndefined(this.documentHelper.getAbstractListById(currentList.abstractListId).levels)) {\n            return this.documentHelper.layout.getListLevel(currentList, listLevelNumber);\n        }\n        return undefined;\n    };\n    Selection.prototype.getTextInline = function (inlineElement, endParagraphWidget, endInline, endIndex, includeObject) {\n        var text = '';\n        do {\n            if (inlineElement === endInline) {\n                if (inlineElement instanceof TextElementBox) {\n                    var span = inlineElement;\n                    if (!(isNullOrUndefined(span.text) || span.text === '')) {\n                        if (span.text.length < endIndex) {\n                            text = text + span.text;\n                        }\n                        else {\n                            text = text + span.text.substring(0, endIndex);\n                        }\n                    }\n                }\n                else if (inlineElement instanceof ImageElementBox && includeObject && endIndex === inlineElement.length) {\n                    text = text + ElementBox.objectCharacter;\n                }\n                return text;\n            }\n            if (inlineElement instanceof TextElementBox) {\n                text = text + inlineElement.text;\n            }\n            else if (inlineElement instanceof ImageElementBox && includeObject) {\n                text = text + ElementBox.objectCharacter;\n            }\n            else if (inlineElement instanceof FieldElementBox && !isNullOrUndefined(inlineElement.fieldEnd)) {\n                if (!isNullOrUndefined(inlineElement.fieldSeparator)) {\n                    inlineElement = inlineElement.fieldSeparator;\n                }\n                else {\n                    inlineElement = inlineElement.fieldEnd;\n                }\n            }\n            if (isNullOrUndefined(inlineElement.nextNode)) {\n                break;\n            }\n            inlineElement = inlineElement.nextNode;\n        } while (!isNullOrUndefined(inlineElement));\n        if (endParagraphWidget === inlineElement.line.paragraph) {\n            return text;\n        }\n        var nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(inlineElement.line.paragraph);\n        while (!isNullOrUndefined(nextParagraphWidget) && nextParagraphWidget.isEmpty()) {\n            text = text + '\\r';\n            if (nextParagraphWidget === endParagraphWidget) {\n                return text;\n            }\n            nextParagraphWidget = this.documentHelper.selection.getNextParagraphBlock(nextParagraphWidget);\n        }\n        if (!isNullOrUndefined(nextParagraphWidget) && !nextParagraphWidget.isEmpty()) {\n            var lineWidget = nextParagraphWidget.childWidgets[0];\n            if (isNullOrUndefined(nextParagraphWidget.previousSplitWidget)) {\n                text = text + '\\r';\n            }\n            text = text + this.getTextInline(lineWidget.children[0], endParagraphWidget, endInline, endIndex, includeObject);\n        }\n        return text;\n    };\n    /**\n     * Returns field code.\n     *\n     * @private\n     * @param fieldBegin\n     * @returns {string}\n     */\n    Selection.prototype.getFieldCode = function (fieldBegin, isSkipTrim) {\n        var fieldCode = '';\n        if (!isNullOrUndefined(fieldBegin) && !(fieldBegin.fieldEnd instanceof FieldElementBox)) {\n            return fieldCode;\n        }\n        var paragraph = fieldBegin.paragraph;\n        var endParagraph = fieldBegin.fieldEnd.paragraph;\n        if (fieldBegin.fieldSeparator instanceof FieldElementBox) {\n            endParagraph = fieldBegin.fieldSeparator.paragraph;\n        }\n        var startLineIndex = fieldBegin.line.indexInOwner;\n        var startIndex = fieldBegin.indexInOwner;\n        do {\n            fieldCode += this.getFieldCodeInternal(paragraph, startLineIndex, startIndex);\n            if (paragraph === endParagraph) {\n                break;\n            }\n            paragraph = this.getNextParagraphBlock(paragraph);\n            startLineIndex = 0;\n            startIndex = 0;\n        } while (paragraph instanceof ParagraphWidget);\n        return isSkipTrim ? fieldCode : fieldCode.trim();\n    };\n    Selection.prototype.getFieldCodeInternal = function (paragraph, startLineIndex, inlineIndex) {\n        var fieldCode = '';\n        for (var i = startLineIndex; i < paragraph.childWidgets.length; i++) {\n            var line = paragraph.childWidgets[i];\n            for (var i_1 = inlineIndex; i_1 < line.children.length; i_1++) {\n                var element = line.children[i_1];\n                if (element instanceof TextElementBox) {\n                    fieldCode += element.text;\n                }\n                if (element instanceof FieldElementBox\n                    && (element.fieldType === 2 || element.fieldType === 1)) {\n                    return fieldCode;\n                }\n            }\n            inlineIndex = 0;\n        }\n        return fieldCode;\n    };\n    /**\n     * @private\n     * @returns {FieldElementBox}\n     */\n    Selection.prototype.getTocFieldInternal = function () {\n        var paragraph = this.start.paragraph;\n        if (!this.isEmpty && !this.isForward) {\n            paragraph = this.end.paragraph;\n        }\n        while (paragraph instanceof ParagraphWidget && paragraph.childWidgets.length > 0) {\n            var line = paragraph.firstChild;\n            if (line.children.length > 0) {\n                var element = line.children[0];\n                var nextElement = element.nextNode;\n                if (element instanceof FieldElementBox && element.fieldType === 0 && nextElement instanceof TextElementBox\n                    && nextElement.text.trim().toLowerCase().indexOf('toc') === 0) {\n                    return element;\n                }\n            }\n            paragraph = paragraph.previousRenderedWidget;\n        }\n        return undefined;\n    };\n    /**\n     * Get next paragraph in bodyWidget\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getNextParagraph = function (section) {\n        if (section.nextRenderedWidget instanceof BodyWidget) {\n            var block = section.nextRenderedWidget.childWidgets[0];\n            return this.documentHelper.getFirstParagraphBlock(block);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getPreviousParagraph = function (section) {\n        if (section.previousRenderedWidget instanceof BodyWidget) {\n            var bodyWidget = section.previousRenderedWidget;\n            var block = bodyWidget.childWidgets[bodyWidget.childWidgets.length - 1];\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return undefined;\n    };\n    /**\n     * Get Next start inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getNextStartInline = function (line, offset) {\n        var indexInInline = 0;\n        var inlineObj = line.getInline(offset, indexInInline);\n        var inline = inlineObj.element;\n        indexInInline = inlineObj.index;\n        if ((!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox)\n            || inline instanceof ShapeElementBox) {\n            var nextValidInline = this.getNextValidElement(inline.nextNode);\n            if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n                inline = nextValidInline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * Get previous text inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getPreviousTextInline = function (inline) {\n        if (inline.previousNode instanceof TextElementBox) {\n            return inline.previousNode;\n        }\n        if (inline.previousNode instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline.previousNode)) {\n            if (inline.previousNode.fieldType === 0 || inline.previousNode.fieldType === 1) {\n                return inline.previousNode;\n            }\n            return inline.previousNode.fieldBegin;\n        }\n        if (!isNullOrUndefined(inline.previousNode)) {\n            return this.getPreviousTextInline((inline.previousNode));\n        }\n        return undefined;\n    };\n    /**\n     * Get next text inline\n     *\n     * @private\n     * @returns {ElementBox}\n     */\n    Selection.prototype.getNextTextInline = function (inline) {\n        if (inline.nextNode instanceof TextElementBox) {\n            return inline.nextNode;\n        }\n        if (inline.nextNode instanceof FieldElementBox && (HelperMethods.isLinkedFieldCharacter(inline.nextNode))) {\n            if (inline.nextNode.fieldType === 1 || inline.nextNode.fieldType === 0) {\n                return inline.nextNode;\n            }\n            return inline.nextNode.fieldEnd;\n        }\n        if (!isNullOrUndefined(inline.nextNode)) {\n            return this.getNextTextInline((inline.nextNode));\n        }\n        return undefined;\n    };\n    /**\n     * Get container table\n     *\n     * @private\n     * @returns {TableWidget}\n     */\n    Selection.prototype.getContainerTable = function (block) {\n        if (block.isInsideTable) {\n            if (block.associatedCell.ownerTable.isInsideTable) {\n                block = this.getContainerTable(block.associatedCell.ownerTable);\n            }\n            else {\n                block = block.associatedCell.ownerTable;\n            }\n        }\n        if (block instanceof TableWidget) {\n            return block;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @param element\n     * @returns\n     */\n    Selection.prototype.isElementInSelection = function (element, isStart) {\n        var offset = element.line.getOffset(element, isStart ? 0 : 1);\n        var elemPosition = new TextPosition(this.owner);\n        elemPosition.setPositionParagraph(element.line, offset);\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        return ((elemPosition.isExistAfter(start) || elemPosition.isAtSamePosition(start))\n            && (elemPosition.isExistBefore(end) || elemPosition.isAtSamePosition(end)));\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isSelectionInsideElement = function (element) {\n        //Handled for spellcheck\n        if (this.isEmpty) {\n            var startOffset = element.line.getOffset(element, 0);\n            var startPosition = new TextPosition(this.owner);\n            startPosition.setPositionParagraph(element.line, startOffset);\n            var endOffset = element.line.getOffset(element, element.length);\n            var endPosition = new TextPosition(this.owner);\n            endPosition.setPositionParagraph(element.line, endOffset);\n            return ((this.start.isExistAfter(startPosition) || this.start.isAtSamePosition(startPosition))\n                && (this.start.isExistBefore(endPosition) || this.start.isAtSamePosition(endPosition)));\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistBefore = function (start, block) {\n        if (start.isInsideTable) {\n            var cell1 = start.associatedCell;\n            if (block.isInsideTable) {\n                var cell2 = block.associatedCell;\n                if (cell1 === cell2) {\n                    return cell1.childWidgets.indexOf(start) < cell1.childWidgets.indexOf(block);\n                }\n                if (cell1.ownerRow === cell2.ownerRow) {\n                    return cell1.cellIndex < cell2.cellIndex;\n                }\n                if (cell1.ownerTable === cell2.ownerTable) {\n                    return cell1.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n                }\n                //Checks if current block exists before the block.\n                var containerCell = this.getContainerCellOf(cell1, cell2);\n                if (containerCell.ownerTable.contains(cell2)) {\n                    cell1 = this.getSelectedCell(cell1, containerCell);\n                    cell2 = this.getSelectedCell(cell2, containerCell);\n                    if (cell1 === containerCell) {\n                        return this.isExistBefore(start, cell2.ownerTable);\n                    }\n                    if (cell2 === containerCell) {\n                        return this.isExistBefore(cell1.ownerTable, block);\n                    }\n                    if (containerCell.ownerRow === cell2.ownerRow) {\n                        return containerCell.cellIndex < cell2.cellIndex;\n                    }\n                    if (containerCell.ownerTable === cell2.ownerTable) {\n                        return containerCell.ownerRow.rowIndex < cell2.ownerRow.rowIndex;\n                    }\n                    return this.isExistBefore(cell1.ownerTable, cell2.ownerTable);\n                }\n                return this.isExistBefore(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n            }\n            else {\n                var ownerTable = this.getContainerTable(start);\n                return this.isExistBefore(ownerTable, block);\n            }\n        }\n        else if (block.isInsideTable) {\n            var ownerTable = this.getContainerTable(block);\n            return this.isExistBefore(start, ownerTable);\n        }\n        else {\n            {\n                if (start.containerWidget === block.containerWidget) {\n                    return start.index <\n                        block.index;\n                }\n                if ((start.containerWidget instanceof BodyWidget && block.containerWidget instanceof BodyWidget)) {\n                    //Splitted blocks\n                    var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n                    var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n                    if (startPage === endPage) {\n                        return start.containerWidget.indexInOwner < block.containerWidget.indexInOwner;\n                    }\n                    if (startPage === endPage && start.containerWidget.containerWidget instanceof FootNoteWidget && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n                        var startindex = this.documentHelper.pages[startPage].footnoteWidget.bodyWidgets.indexOf(start.containerWidget);\n                        var endindex = this.documentHelper.pages[endPage].footnoteWidget.bodyWidgets.indexOf(block.containerWidget);\n                        return startindex < endindex;\n                    }\n                    else if (startPage === endPage && start.containerWidget.index !== block.containerWidget.index) {\n                        var startindex = this.documentHelper.pages[startPage].bodyWidgets.indexOf(start.containerWidget);\n                        var endindex = this.documentHelper.pages[endPage].bodyWidgets.indexOf(block.containerWidget);\n                        return startindex < endindex;\n                    }\n                    else {\n                        return startPage < endPage;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistAfter = function (start, block) {\n        if (start.isInsideTable) {\n            var cell1 = start.associatedCell;\n            //Current paragraph in cell, paragraph in cell\n            if (block.isInsideTable) {\n                var cell2 = block.associatedCell;\n                if (cell1 === cell2) {\n                    return cell1.childWidgets.indexOf(start) > cell1.childWidgets.indexOf(block);\n                }\n                if (cell1.ownerRow === cell2.ownerRow) {\n                    return cell1.cellIndex > cell2.cellIndex;\n                }\n                if (cell1.ownerTable === cell2.ownerTable) {\n                    return cell1.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n                }\n                //Checks if this block exists before block.\n                var containerCell = this.getContainerCellOf(cell1, cell2);\n                if (containerCell.ownerTable.contains(cell2)) {\n                    cell1 = this.getSelectedCell(cell1, containerCell);\n                    cell2 = this.getSelectedCell(cell2, containerCell);\n                    if (cell1 === containerCell) {\n                        return this.isExistAfter(start, cell2.ownerTable);\n                    }\n                    if (cell2 === containerCell) {\n                        return this.isExistAfter(cell1.ownerTable, block);\n                    }\n                    if (containerCell.ownerRow === cell2.ownerRow) {\n                        return containerCell.cellIndex > cell2.cellIndex;\n                    }\n                    if (containerCell.ownerTable === cell2.ownerTable) {\n                        return containerCell.ownerRow.rowIndex > cell2.ownerRow.rowIndex;\n                    }\n                    return this.isExistAfter(cell1.ownerTable, cell2.ownerTable);\n                }\n                return this.isExistAfter(containerCell.ownerTable, this.getContainerTable(cell2.ownerTable));\n            }\n            else {\n                var ownerTable = this.getContainerTable(start);\n                return this.isExistAfter(ownerTable, block);\n            }\n        }\n        else if (block.isInsideTable) {\n            var ownerTable = this.getContainerTable(block);\n            return this.isExistAfter(start, ownerTable);\n        }\n        else {\n            if (start.containerWidget === block.containerWidget) {\n                return start.index >\n                    block.index;\n            }\n            if ((start.containerWidget instanceof BodyWidget && block.containerWidget instanceof BodyWidget) || (start.containerWidget instanceof FootNoteWidget && block.containerWidget instanceof FootNoteWidget)) {\n                //Splitted blocks\n                var startPage = this.documentHelper.pages.indexOf(start.containerWidget.page);\n                var endPage = this.documentHelper.pages.indexOf(block.containerWidget.page);\n                return startPage > endPage;\n            }\n            //     if (start.owner instanceof WHeaderFooter) {\n            //         return (start.owner as WHeaderFooter).childWidgets.indexOf(start)\n            // > (block.owner as WHeaderFooter).childWidgets.indexOf(block);\n            //     } else if (start.section === block.section && start.section instanceof WSection) {\n            //         return (start.section as WSection).childWidgets.indexOf(start)\n            //  > (start.section as WSection).childWidgets.indexOf(block);\n            //     } else if (start.wordDocument instanceof WordDocument) {\n            //         return (start.wordDocument as WordDocument).sections.indexOf(start.section as WSection) > (start.wordDocument as WordDocument).sections.indexOf(block.section as WSection);\n        }\n        return false;\n    };\n    /**\n     * Return true if current inline in exist before inline\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistBeforeInline = function (currentInline, inline) {\n        if (currentInline.line === inline.line) {\n            return currentInline.line.children.indexOf(currentInline) <=\n                inline.line.children.indexOf(inline);\n        }\n        if (currentInline.line.paragraph === inline.line.paragraph) {\n            return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line)\n                < inline.line.paragraph.childWidgets.indexOf(inline.line);\n        }\n        var startParagraph = currentInline.line.paragraph;\n        var endParagraph = inline.line.paragraph;\n        if (startParagraph.containerWidget === endParagraph.containerWidget) {\n            if (startParagraph.isInsideTable) {\n                return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) <\n                    endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n            }\n            else if (startParagraph.containerWidget instanceof HeaderFooterWidget) {\n                // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n                //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n            }\n            else {\n                return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) <\n                    endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n            }\n        }\n        return this.isExistBefore(startParagraph, endParagraph);\n    };\n    /**\n     * Return true id current inline is exist after inline\n     *\n     * @private\n     * @returns {boolean}\n     */\n    Selection.prototype.isExistAfterInline = function (currentInline, inline, isRetrieve) {\n        if (currentInline.line === inline.line) {\n            var selection = this.documentHelper.selection;\n            if (isRetrieve) {\n                return currentInline.line.children.indexOf(currentInline) >=\n                    inline.line.children.indexOf(inline);\n            }\n            else if (currentInline === inline && selection.start.offset !== selection.end.offset) {\n                return currentInline.line.children.indexOf(currentInline) ===\n                    inline.line.children.indexOf(inline);\n            }\n            else {\n                return currentInline.line.children.indexOf(currentInline) >\n                    inline.line.children.indexOf(inline);\n            }\n        }\n        if (currentInline.line.paragraph === inline.line.paragraph) {\n            return currentInline.line.paragraph.childWidgets.indexOf(currentInline.line)\n                > inline.line.paragraph.childWidgets.indexOf(inline.line);\n        }\n        var startParagraph = currentInline.line.paragraph;\n        var endParagraph = inline.line.paragraph;\n        if (startParagraph.containerWidget === endParagraph.containerWidget) {\n            if (startParagraph.isInsideTable) {\n                return startParagraph.associatedCell.childWidgets.indexOf(startParagraph) >\n                    endParagraph.associatedCell.childWidgets.indexOf(endParagraph);\n            }\n            else if (startParagraph.containerWidget instanceof HeaderFooterWidget) {\n                // return ((currentInline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(currentInline.owner as WParagraph) <\n                //     ((inline.owner as WParagraph).owner as WHeaderFooter).blocks.indexOf(inline.owner as WParagraph);\n            }\n            else {\n                return startParagraph.containerWidget.childWidgets.indexOf(startParagraph) >\n                    endParagraph.containerWidget.childWidgets.indexOf(endParagraph);\n            }\n        }\n        return this.isExistAfter(startParagraph, endParagraph);\n    };\n    /**\n     * Get next rendered block\n     *\n     * @private\n     * @returns {BlockWidget}\n     */\n    Selection.prototype.getNextRenderedBlock = function (block) {\n        if (isNullOrUndefined(block.nextWidget)) {\n            return block.nextRenderedWidget;\n        }\n        return block.nextWidget;\n    };\n    /**\n     * Get next rendered block\n     *\n     * @private\n     * @returns {BlockWidget}\n     */\n    Selection.prototype.getPreviousRenderedBlock = function (block) {\n        if (isNullOrUndefined(block.previousWidget)) {\n            return block.previousRenderedWidget;\n        }\n        return block.previousWidget;\n    };\n    /**\n     * Get Next paragraph in block\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getNextParagraphBlock = function (block) {\n        if (block.nextRenderedWidget instanceof ParagraphWidget) {\n            return block.nextRenderedWidget;\n        }\n        else if (block.nextRenderedWidget instanceof TableWidget) {\n            return this.documentHelper.getFirstParagraphInFirstCell(block.nextRenderedWidget);\n        }\n        if (block.containerWidget instanceof TableCellWidget) {\n            return this.getNextParagraphCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof BodyWidget) {\n            var bodyWidget = block.containerWidget;\n            return this.getNextParagraph(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof HeaderFooterWidget && this.isMoveDownOrMoveUp) {\n            return this.getFirstBlockInNextHeaderFooter(block);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getFirstBlockInNextHeaderFooter = function (block) {\n        var headerFooter = block.containerWidget;\n        var nextBlock;\n        if (headerFooter.headerFooterType.indexOf('Header') !== -1) {\n            nextBlock = headerFooter.page.footerWidget.firstChild;\n        }\n        else if (headerFooter.page.nextPage) {\n            var nextPage = headerFooter.page.nextPage;\n            var headerWidget = nextPage.headerWidget;\n            headerWidget.page = nextPage;\n            if (nextPage.footerWidget) {\n                nextPage.footerWidget.page = nextPage;\n            }\n            nextBlock = headerWidget.firstChild;\n        }\n        else {\n            return undefined;\n        }\n        if (nextBlock instanceof ParagraphWidget) {\n            return nextBlock;\n        }\n        else {\n            return this.getFirstBlockInFirstCell(nextBlock);\n        }\n    };\n    /**\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getLastBlockInPreviousHeaderFooter = function (block) {\n        var headerFooter = block.containerWidget;\n        var previousBlock;\n        if (headerFooter.headerFooterType.indexOf('Footer') !== -1) {\n            previousBlock = headerFooter.page.headerWidget.lastChild;\n        }\n        else if (headerFooter.page.previousPage) {\n            var previousPage = headerFooter.page.previousPage;\n            var footerWidget = previousPage.footerWidget;\n            footerWidget.page = previousPage;\n            if (previousPage.headerWidget) {\n                previousPage.headerWidget.page = previousPage;\n            }\n            previousBlock = footerWidget.lastChild;\n        }\n        else {\n            return undefined;\n        }\n        if (previousBlock instanceof ParagraphWidget) {\n            return previousBlock;\n        }\n        else {\n            return this.getFirstBlockInFirstCell(previousBlock);\n        }\n    };\n    /**\n     * Get previous paragraph in block\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.getPreviousParagraphBlock = function (block, isAutoList) {\n        if (block.previousRenderedWidget instanceof ParagraphWidget) {\n            return block.previousRenderedWidget;\n        }\n        else if (block.previousRenderedWidget instanceof TableWidget) {\n            return this.documentHelper.getLastParagraphInLastCell((block.previousRenderedWidget));\n        }\n        if (block.containerWidget instanceof TableCellWidget) {\n            return this.getPreviousParagraphCell((block.containerWidget));\n        }\n        else if (block.containerWidget instanceof BodyWidget) {\n            return this.getPreviousParagraph(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof HeaderFooterWidget && this.isMoveDownOrMoveUp && !isAutoList) {\n            return this.getLastBlockInPreviousHeaderFooter(block);\n        }\n        return undefined;\n    };\n    /**\n     * Return true if paragraph has valid inline\n     *\n     * @private\n     * @returns {ParagraphWidget}\n     */\n    Selection.prototype.hasValidInline = function (paragraph, start, end) {\n        var index = paragraph.childWidgets.indexOf(start.line);\n        for (var i = index; i < paragraph.childWidgets.length; i++) {\n            for (var j = 0; j < paragraph.childWidgets[i].children.length; j++) {\n                var inline = paragraph.childWidgets[i].children[j];\n                if (inline.length === 0) {\n                    continue;\n                }\n                if (inline === end) {\n                    return false;\n                }\n                if (inline instanceof TextElementBox || inline instanceof ImageElementBox\n                    || (inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Get paragraph length\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getParagraphLength = function (paragraph, endLine, elementInfo, includeShape) {\n        var length = 0;\n        if (!isNullOrUndefined(paragraph)) {\n            for (var j = 0; j < paragraph.childWidgets.length; j++) {\n                var line = paragraph.childWidgets[j];\n                if (endLine instanceof LineWidget && endLine === line) {\n                    if (elementInfo) {\n                        length += this.getLineLength(line, elementInfo, includeShape);\n                    }\n                    break;\n                }\n                length += this.getLineLength(line, undefined, includeShape);\n            }\n        }\n        return length;\n    };\n    /**\n     * Get Line length\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getLineLength = function (line, elementInfo, includeShape) {\n        var length = 0;\n        var bidi = line.paragraph.bidi;\n        for (var i = !bidi ? 0 : line.children.length - 1; bidi ? i > -1 : i < line.children.length; bidi ? i-- : i++) {\n            var element = line.children[i];\n            if (element instanceof ListTextElementBox) {\n                continue;\n            }\n            if (includeShape) {\n                if (element instanceof ShapeElementBox) {\n                    for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n                        var para = element.textFrame.childWidgets[m];\n                        length += this.getParagraphLength(para) + 1;\n                    }\n                }\n                else if (element instanceof FootnoteElementBox) {\n                    for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n                        var para = element.bodyWidget.childWidgets[m];\n                        length += this.getParagraphLength(para) + 1;\n                    }\n                }\n            }\n            if (elementInfo && elementInfo.element instanceof ElementBox && elementInfo.element === element) {\n                length += elementInfo.index;\n                break;\n            }\n            length += element.length;\n        }\n        return length;\n    };\n    /**\n     * Get line information\n     *\n     * @private\n     * @returns {LineInfo}\n     */\n    Selection.prototype.getLineInfo = function (paragraph, offset) {\n        var line = undefined;\n        var length = 0;\n        var childLength = paragraph.childWidgets.length;\n        for (var j = 0; j < childLength; j++) {\n            line = paragraph.childWidgets[j];\n            length = this.getLineLength(line);\n            if (offset <= length || j === childLength - 1) {\n                break;\n            }\n            else {\n                offset = offset - length;\n            }\n        }\n        return { 'line': line, 'offset': offset };\n    };\n    /**\n     * @private\n     * @returns {ElementInfo}\n     */\n    Selection.prototype.getElementInfo = function (line, offset) {\n        var index = 0;\n        var element = undefined;\n        for (var i = 0; i < line.children.length; i++) {\n            element = line.children[i];\n            if (element instanceof ListTextElementBox) {\n                continue;\n            }\n            if (offset > element.length\n                && (!(offset === element.length + 1 && isNullOrUndefined(element.nextNode)))) {\n                offset = offset - element.length;\n            }\n            else {\n                break;\n            }\n        }\n        return { 'element': element, 'index': offset };\n    };\n    /**\n     * Get paragraph start offset\n     *\n     * @private\n     * @returns {number}\n     */\n    Selection.prototype.getStartOffset = function (paragraph) {\n        var startOffset = 0;\n        if (paragraph.childWidgets.length > 0) {\n            var childWidgets = paragraph.childWidgets[0];\n            return this.getStartLineOffset(childWidgets);\n        }\n        return startOffset;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getStartLineOffset = function (line) {\n        var startOffset = 0;\n        for (var i = 0; i < line.children.length; i++) {\n            var inline = line.children[i];\n            if (inline.length === 0) {\n                continue;\n            }\n            if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof BookmarkElementBox\n                || inline instanceof ShapeElementBox || inline instanceof EditRangeStartElementBox\n                || inline instanceof EditRangeEndElementBox || inline instanceof CommentCharacterElementBox\n                || (inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline))\n                || inline instanceof ContentControl) {\n                return startOffset;\n            }\n            if (inline instanceof ListTextElementBox) {\n                continue;\n            }\n            startOffset += inline.length;\n        }\n        return startOffset;\n    };\n    /**\n     * Get previous paragraph from selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionCell = function (cell) {\n        if (!isNullOrUndefined(cell.previousRenderedWidget)) {\n            if (!this.isForward) {\n                var block = cell.previousRenderedWidget.childWidgets[0];\n                if (block instanceof ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.documentHelper.getFirstParagraphInLastRow(block);\n                }\n            }\n            else {\n                var widgets = cell.previousRenderedWidget.childWidgets;\n                var block = widgets[widgets.length - 1];\n                if (block instanceof ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.getPreviousParagraphSelection(block.childWidgets[block.childWidgets.length - 1]);\n                }\n            }\n        }\n        return this.getPreviousSelectionRow(cell.ownerRow);\n    };\n    /**\n     * Get previous paragraph selection in selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionRow = function (row) {\n        if (!isNullOrUndefined(row.previousRenderedWidget)) {\n            if (!this.isForward) {\n                var cell = row.previousRenderedWidget.childWidgets[0];\n                var block = cell.childWidgets[0];\n                return this.documentHelper.getFirstParagraphBlock(block);\n            }\n            else {\n                return this.getPreviousParagraphSelection(row.previousRenderedWidget);\n            }\n        }\n        return this.getPreviousSelectionBlock(row.ownerTable);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextSelectionBlock = function (block) {\n        if (block.nextRenderedWidget instanceof ParagraphWidget) {\n            return block.nextRenderedWidget;\n        }\n        else if (block.nextRenderedWidget instanceof TableWidget) {\n            if (this.isEmpty || this.isForward) {\n                return this.documentHelper.getLastParagraphInFirstRow(block.nextRenderedWidget);\n            }\n            else {\n                return this.getNextParagraphSelection(block.nextRenderedWidget.childWidgets[0]);\n            }\n        }\n        if (block.containerWidget instanceof TableCellWidget) {\n            return this.getNextSelectionCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof BodyWidget) {\n            return this.getNextSelection(block.containerWidget);\n        }\n        return undefined;\n    };\n    /**\n     * Get next paragraph from selected cell\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelectionCell = function (cell) {\n        if (!isNullOrUndefined(cell.nextRenderedWidget)) {\n            if (this.isEmpty || this.isForward) {\n                var block = cell.nextRenderedWidget.childWidgets[cell.nextRenderedWidget.childWidgets.length - 1];\n                return this.documentHelper.getLastParagraphBlock(block);\n            }\n            else {\n                //Return first paragraph in cell.\n                var block = cell.nextRenderedWidget.childWidgets[0];\n                if (block instanceof ParagraphWidget) {\n                    return block;\n                }\n                else {\n                    return this.getNextParagraphSelection(block.childWidgets[0]);\n                }\n            }\n        }\n        return this.getNextSelectionRow(cell.ownerRow);\n    };\n    /**\n     * Get next paragraph in selection\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelectionRow = function (row) {\n        if (!isNullOrUndefined(row.nextRenderedWidget)) {\n            var isForwardSelection = this.isEmpty || this.isForward;\n            if (isForwardSelection) {\n                var cell = row.nextRenderedWidget.childWidgets[row.nextRenderedWidget.childWidgets.length - 1];\n                var block = cell.childWidgets[cell.childWidgets.length - 1];\n                return this.documentHelper.getLastParagraphBlock(block);\n            }\n            else {\n                return this.getNextParagraphSelection(row.nextRenderedWidget);\n            }\n        }\n        return this.getNextSelectionBlock(row.ownerTable);\n    };\n    /**\n     * Get next block with selection\n     *\n     * @private\n     */\n    Selection.prototype.getNextSelection = function (section) {\n        if (section.nextRenderedWidget instanceof BodyWidget) {\n            var block = section.nextRenderedWidget.childWidgets[0];\n            if (block instanceof ParagraphWidget) {\n                return block;\n            }\n            else {\n                if (this.isEmpty || this.isForward) {\n                    return this.documentHelper.getLastParagraphInFirstRow(block);\n                }\n                else {\n                    return this.getNextParagraphSelection(block.childWidgets[0]);\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextParagraphSelection = function (row) {\n        //Iterate the exact cell based on UP/Down selection length.\n        var cell = row.childWidgets[0];\n        if (this.start.paragraph.isInsideTable\n            && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n            var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n            cell = this.getFirstCellInRegion(row, startCell, this.upDownSelectionLength, false);\n        }\n        var block = cell.childWidgets[0];\n        return this.documentHelper.getFirstParagraphBlock(block);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousSelectionBlock = function (block) {\n        if (block.previousRenderedWidget instanceof ParagraphWidget) {\n            return block.previousRenderedWidget;\n        }\n        else if (block.previousRenderedWidget instanceof TableWidget) {\n            if (!this.isForward) {\n                return this.documentHelper.getFirstParagraphInLastRow(block.previousRenderedWidget);\n            }\n            else {\n                return this.getPreviousParagraphSelection(block.previousRenderedWidget.childWidgets[block.previousRenderedWidget.childWidgets.length - 1]);\n            }\n        }\n        if (block.containerWidget instanceof TableCellWidget) {\n            return this.getPreviousSelectionCell(block.containerWidget);\n        }\n        else if (block.containerWidget instanceof BodyWidget) {\n            return this.getPreviousSelection(block.containerWidget);\n        }\n        return undefined;\n    };\n    /**\n     * Get previous paragraph in selection\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousSelection = function (section) {\n        if (section.previousRenderedWidget instanceof BodyWidget) {\n            var prevBodyWidget = section.previousRenderedWidget;\n            var block = prevBodyWidget.childWidgets[prevBodyWidget.childWidgets.length - 1];\n            if (block instanceof ParagraphWidget) {\n                return block;\n            }\n            else {\n                if (!this.isForward) {\n                    return this.documentHelper.getFirstParagraphInLastRow(block);\n                }\n                else {\n                    var tableWidget = block;\n                    return this.getPreviousParagraphSelection(tableWidget.childWidgets[tableWidget.childWidgets.length - 1]);\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphSelection = function (row) {\n        //Iterate the exact cell based on UP/Down selection length.\n        var cell = row.childWidgets[row.childWidgets.length - 1];\n        if (this.start.paragraph.isInsideTable\n            && row.ownerTable.contains(this.start.paragraph.associatedCell)) {\n            var startCell = this.getCellInTable(row.ownerTable, this.start.paragraph.associatedCell);\n            cell = this.getLastCellInRegion(row, startCell, this.upDownSelectionLength, true);\n        }\n        var block = cell.childWidgets[cell.childWidgets.length - 1];\n        return this.documentHelper.getLastParagraphBlock(block);\n    };\n    /**\n     * Get last cell in the selected region\n     *\n     * @private\n     */\n    Selection.prototype.getLastCellInRegion = function (row, startCell, selLength, isMovePrev) {\n        var start = this.getCellLeft(row, startCell);\n        var end = start + startCell.cellFormat.cellWidth;\n        var flag = true;\n        if (start <= selLength && selLength < end) {\n            for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n                var left = this.getCellLeft(row, row.childWidgets[i]);\n                if (HelperMethods.round(start, 2) <= HelperMethods.round(left, 2) &&\n                    HelperMethods.round(left, 2) < HelperMethods.round(end, 2)) {\n                    flag = false;\n                    return row.childWidgets[i];\n                }\n            }\n        }\n        else {\n            for (var i = row.childWidgets.length - 1; i >= 0; i--) {\n                var left = this.getCellLeft(row, row.childWidgets[i]);\n                if (left <= selLength && left + row.childWidgets[i].cellFormat.cellWidth > selLength) {\n                    flag = false;\n                    return row.childWidgets[i];\n                }\n            }\n        }\n        if (flag) {\n            if (!isNullOrUndefined(row.previousRenderedWidget) && isMovePrev) {\n                return this.getLastCellInRegion(row.previousRenderedWidget, startCell, selLength, isMovePrev);\n            }\n            else if (!isNullOrUndefined(row.nextRenderedWidget) && !isMovePrev) {\n                return this.getLastCellInRegion(row.nextRenderedWidget, startCell, selLength, isMovePrev);\n            }\n        }\n        return row.childWidgets[row.childWidgets.length - 1];\n    };\n    /**\n     * Get Container table\n     *\n     * @private\n     */\n    Selection.prototype.getCellInTable = function (table, tableCell) {\n        while (tableCell.ownerTable.isInsideTable) {\n            if (table.equals(tableCell.ownerTable)) {\n                return tableCell;\n            }\n            tableCell = tableCell.ownerTable.associatedCell;\n        }\n        return tableCell;\n    };\n    /**\n     * Get previous valid offset\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousValidOffset = function (paragraph, offset) {\n        if (offset === 0) {\n            return 0;\n        }\n        var validOffset = 0;\n        var count = 0;\n        var value = 0;\n        var bidi = paragraph.paragraphFormat.bidi;\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var lineWidget = paragraph.childWidgets[i];\n            for (var j = 0; j < lineWidget.children.length; j++) {\n                var inline = lineWidget.children[j];\n                if (inline.length === 0 || inline instanceof ListTextElementBox) {\n                    continue;\n                }\n                if (offset <= count + inline.length) {\n                    return offset - 1 === count ? validOffset : offset - 1;\n                }\n                if (inline instanceof TextElementBox || inline instanceof ImageElementBox || inline instanceof BookmarkElementBox\n                    || (inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline))) {\n                    validOffset = count + inline.length;\n                }\n                count += inline.length;\n            }\n        }\n        return offset - 1 === count ? validOffset : offset - 1;\n    };\n    /**\n     * Get next valid offset\n     *\n     * @private\n     */\n    Selection.prototype.getNextValidOffset = function (line, offset) {\n        var count = 0;\n        // if (!line.paragraph.paragraphFormat.bidi) {\n        for (var i = 0; i < line.children.length; i++) {\n            var inline = line.children[i];\n            if (inline.length === 0 || inline instanceof ListTextElementBox) {\n                continue;\n            }\n            if (offset < count + inline.length) {\n                if (inline instanceof TextElementBox || inline instanceof ImageElementBox\n                    || (inline instanceof FieldElementBox && HelperMethods.isLinkedFieldCharacter(inline))) {\n                    return (offset > count ? offset : count) + 1;\n                }\n            }\n            if (offset === count + inline.length && inline instanceof FieldElementBox &&\n                inline.fieldType === 1 && inline.previousNode instanceof ImageElementBox) {\n                return offset;\n            }\n            count += inline.length;\n        }\n        // } else {\n        //     if (offset !== this.getLineLength(line)) {\n        //         offset = line.getInlineForOffset(offset, false, undefined, false, false, true).index;\n        //     }\n        // }\n        return offset;\n    };\n    /**\n     * Get paragraph mark size info\n     *\n     * @private\n     */\n    Selection.prototype.getParagraphMarkSize = function (paragraph, topMargin, bottomMargin) {\n        var size = this.documentHelper.textHelper.getParagraphMarkSize(paragraph.characterFormat);\n        var baselineOffset = size.BaselineOffset;\n        var maxHeight = size.Height;\n        var maxBaselineOffset = baselineOffset;\n        if (paragraph instanceof ParagraphWidget) {\n            // let paragraphWidget: ParagraphWidget[] = paragraph.renderedElement() as ParagraphWidget[];\n            if (paragraph.childWidgets.length > 0) {\n                var lineWidget = paragraph.childWidgets[0];\n            }\n            //Gets line spacing.\n            var lineSpacing = this.documentHelper.layout.getLineSpacing(paragraph, maxHeight);\n            var beforeSpacing = this.documentHelper.layout.getBeforeSpacing(paragraph);\n            topMargin = maxBaselineOffset - baselineOffset;\n            bottomMargin = maxHeight - maxBaselineOffset - (size.Height - baselineOffset);\n            //Updates line spacing, paragraph after/ before spacing and aligns the text to base line offset.\n            var lineSpacingType = paragraph.paragraphFormat.lineSpacingType;\n            if (lineSpacingType === 'Multiple') {\n                if (lineSpacing > maxHeight) {\n                    bottomMargin += lineSpacing - maxHeight;\n                }\n                else {\n                    topMargin += lineSpacing - maxHeight;\n                }\n            }\n            else if (lineSpacingType === 'Exactly') {\n                topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n            }\n            else if (lineSpacing > topMargin + size.Height + bottomMargin) {\n                topMargin += lineSpacing - (topMargin + size.Height + bottomMargin);\n            }\n            topMargin += beforeSpacing;\n            bottomMargin += this.documentHelper.layout.getAfterSpacing(paragraph);\n        }\n        return { 'width': size.Width, 'height': size.Height, 'topMargin': topMargin, 'bottomMargin': bottomMargin };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPhysicalPositionInternal = function (line, offset, moveNextLine) {\n        if (line.paragraph.isEmpty()) {\n            var paragraphWidget = line.paragraph;\n            var left = paragraphWidget.x;\n            if (paragraphWidget.childWidgets.length > 0) {\n                var lineWidget = paragraphWidget.childWidgets[0];\n                left = this.getLeft(lineWidget);\n            }\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var size = this.getParagraphMarkSize(line.paragraph, topMargin, bottomMargin);\n            if (offset > 0 || (offset === 0 && paragraphWidget.isEmpty() && paragraphWidget.bidi)) {\n                left += size.width;\n            }\n            return new Point(left, paragraphWidget.y + size.topMargin);\n        }\n        else {\n            var indexInInline = 0;\n            var inlineObj = line.getInline(offset, indexInInline, line.paragraph.bidi);\n            var inline = inlineObj.element; //return indexInInline must\n            indexInInline = inlineObj.index;\n            // if (inline.length === indexInInline && !isNullOrUndefined(inline.nextNode) && this.viewer.renderedElements.containsKey(inline) &&\n            //     this.viewer.renderedElements.get(inline).length > 0 && this.viewer.renderedElements.containsKey(inline.nextNode as WInline)\n            //     && this.viewer.renderedElements.get(inline.nextNode as WInline).length > 0 &&\n            //     (this.viewer.renderedElements.get(inline)[this.viewer.renderedElements.get(inline).length - 1] as ElementBox).line !== (this.viewer.renderedElements.get(inline.nextNode as WInline)[0] as ElementBox).line) {\n            //     //Handled specifically to move the cursor at start of next line.\n            //     inline = inline.nextNode as WInline;\n            //     indexInInline = 0;\n            // }\n            return this.getPhysicalPositionInline(inline, indexInInline, moveNextLine);\n        }\n    };\n    /**\n     * Highlight selected content\n     *\n     * @private\n     */\n    Selection.prototype.highlightSelectedContent = function (start, end) {\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || (!start.paragraph.associatedCell.equals(end.paragraph.associatedCell))\n            || (!this.documentHelper.isSelectionChangedOnMouseMoved && this.isCellSelected(start.paragraph.associatedCell, start, end))\n            || this.isCellPrevSelected)) {\n            this.highlightCell(start.paragraph.associatedCell, this, start, end);\n            this.isCellPrevSelected = true;\n        }\n        else {\n            var inline = undefined;\n            var index = 0;\n            if (!this.owner.isReadOnlyMode && start.paragraph === end.paragraph) {\n                if (start.offset + 1 === end.offset) {\n                    var inlineObj = end.currentWidget.getInline(end.offset, index);\n                    inline = inlineObj.element; // return index value\n                    index = inlineObj.index;\n                    if (inline instanceof ImageElementBox || inline instanceof ShapeElementBox) {\n                        var startOffset = start.currentWidget.getOffset(inline, 0);\n                        if (startOffset !== start.offset) {\n                            inline = undefined;\n                        }\n                    }\n                }\n                else {\n                    var indexInInline = 0;\n                    var startInlineObj = start.currentWidget.getInline(start.offset, indexInInline);\n                    var startInline = startInlineObj.element; //return indexInInline\n                    indexInInline = startInlineObj.index;\n                    if (indexInInline === startInline.length) {\n                        startInline = this.getNextRenderedElementBox(startInline, indexInInline);\n                    }\n                    var endInlineObj = end.currentWidget.getInline(end.offset, indexInInline);\n                    var endInline = endInlineObj.element; //return indexInInline\n                    indexInInline = endInlineObj.index;\n                    if (startInline instanceof FieldElementBox && endInline instanceof FieldElementBox && !isNullOrUndefined(startInline.fieldSeparator)) {\n                        var fieldValue = startInline.fieldSeparator.nextNode;\n                        if (fieldValue instanceof ImageElementBox && fieldValue.nextNode === endInline) {\n                            inline = fieldValue;\n                        }\n                    }\n                }\n            }\n            if (!this.owner.isReadOnlyMode && this.owner.isDocumentLoaded && (inline instanceof ImageElementBox || inline instanceof ShapeElementBox)) {\n                var elementBoxObj = this.getElementBoxInternal(inline, index);\n                var elementBox = elementBoxObj.element; //return index\n                index = elementBoxObj.index;\n                if (this.owner.enableImageResizerMode && !this.owner.editorModule.isRemoteAction) {\n                    this.owner.imageResizerModule.positionImageResizer(elementBox);\n                    this.owner.imageResizerModule.showImageResizer();\n                }\n                if (this.documentHelper.isTouchInput) {\n                    this.documentHelper.touchStart.style.display = 'none';\n                    this.documentHelper.touchEnd.style.display = 'none';\n                }\n            }\n            else {\n                if (start.paragraph.isInsideTable\n                    && start.paragraph.associatedCell.equals(end.paragraph.associatedCell)\n                    && end.paragraph.equals(this.getLastParagraph(end.paragraph.associatedCell))\n                    && (this.getParagraphLength(end.paragraph) + 1) == end.offset) {\n                    end.offset--;\n                }\n                this.highlight(start.paragraph, start, end);\n                if (this.isHighlightNext) {\n                    this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                    this.isHighlightNext = false;\n                    this.hightLightNextParagraph = undefined;\n                }\n            }\n            if (this.isInShape) {\n                this.showResizerForShape();\n            }\n        }\n    };\n    Selection.prototype.showResizerForShape = function () {\n        var shape = this.getCurrentTextFrame().containerShape;\n        this.owner.imageResizerModule.positionImageResizer(shape);\n        this.owner.imageResizerModule.showImageResizer();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlight = function (paragraph, start, end) {\n        var selectionStartIndex = 0;\n        var selectionEndIndex = 0;\n        var startElement = undefined;\n        var endElement = undefined;\n        var startLineWidget = undefined;\n        var endLineWidget = undefined;\n        //return start Element and selection start index\n        var startLineObj = this.getStartLineWidget(paragraph, start, startElement, selectionStartIndex);\n        startElement = startLineObj.element;\n        if (isNullOrUndefined(startElement)) {\n            startLineWidget = paragraph.childWidgets[0];\n        }\n        else {\n            startLineWidget = startElement.line;\n        }\n        selectionStartIndex = startLineObj.index;\n        var endLineObj = this.getEndLineWidget(end, endElement, selectionEndIndex);\n        endElement = endLineObj.element;\n        if (endElement) {\n            endLineWidget = endElement.line;\n        }\n        else {\n            endLineWidget = end.paragraph.childWidgets[end.paragraph.childWidgets.length - 1];\n        }\n        selectionEndIndex = endLineObj.index;\n        var top = 0;\n        var left = 0;\n        if (!isNullOrUndefined(startLineWidget)) {\n            top = this.getTop(startLineWidget);\n            left = this.getLeftInternal(startLineWidget, startElement, selectionStartIndex);\n        }\n        if (!isNullOrUndefined(startLineWidget) && startLineWidget === endLineWidget) {\n            //Selection ends in current line.\n            var right = this.getLeftInternal(endLineWidget, endElement, selectionEndIndex);\n            var width = 0;\n            var isRtlText = false;\n            if (endElement instanceof TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            if (!isRtlText && startElement instanceof TextElementBox) {\n                isRtlText = startElement.isRightToLeft;\n            }\n            width = Math.abs(right - left);\n            // Handled the highlighting approach as genric for normal and rtl text.\n            if (isRtlText || paragraph.bidi) {\n                var elementBoxCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                if (elementBoxCollection && elementBoxCollection.length > 1) {\n                    for (var i = 0; i < elementBoxCollection.length; i++) {\n                        var element = elementBoxCollection[i];\n                        var elementIsRTL = false;\n                        var index = element instanceof TextElementBox ? element.length : 1;\n                        if (element === startElement) {\n                            left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                        }\n                        else if (element === endElement) {\n                            left = this.getLeftInternal(startLineWidget, element, 0);\n                            right = this.getLeftInternal(startLineWidget, element, selectionEndIndex);\n                        }\n                        else {\n                            left = this.getLeftInternal(startLineWidget, element, 0);\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                        }\n                        if (element instanceof TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        // Handled the paragraph mark highliting as special case.\n                        if (element === endElement && element instanceof TextElementBox\n                            && selectionEndIndex > element.length) {\n                            var charFormat = element.line.paragraph.characterFormat;\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                            if (paragraph.bidi && !elementIsRTL) {\n                                width -= paragraphMarkWidth;\n                                // Highlight the element.\n                                this.createHighlightBorder(startLineWidget, width, left, top, true);\n                                // Highlight the paragraph mark of Bidi paragrph. \n                                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                                this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n                                // continue to next element.\n                                continue;\n                            }\n                        }\n                        this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true);\n                    }\n                }\n                else { // Need to handle the Paragraph mark highlighting.\n                    if (endElement instanceof TextElementBox && selectionEndIndex > endElement.length) {\n                        var charFormat = endElement.line.paragraph.characterFormat;\n                        var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                        // Since isRTLText is truo, so the right is considered as left\n                        if (!paragraph.bidi && isRtlText) {\n                            right += paragraphMarkWidth;\n                            width -= paragraphMarkWidth;\n                            // Highlight the element.\n                            this.createHighlightBorder(startLineWidget, width, right, top, true);\n                            // Highlight the paragraph mark. \n                            right += endElement.width;\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, right, top, true);\n                        }\n                        else if (paragraph.bidi && !isRtlText) {\n                            width -= paragraphMarkWidth;\n                            // Highlight the element.\n                            this.createHighlightBorder(startLineWidget, width, left, top, true);\n                            // Highlight the paragraph mark of Bidi paragrph. \n                            left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n                        }\n                        else {\n                            this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false);\n                        }\n                    }\n                    else {\n                        this.createHighlightBorder(startLineWidget, width, isRtlText ? right : left, top, false);\n                    }\n                }\n            }\n            else {\n                // Start element and end element will be in reverese for Bidi paragraph highlighting. \n                // So, the right is considered based on Bidi property.\n                this.createHighlightBorder(startLineWidget, width, paragraph.bidi ? right : left, top, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(startLineWidget)) {\n                var x = startLineWidget.paragraph.x;\n                if (paragraph !== startLineWidget.paragraph) {\n                    paragraph = startLineWidget.paragraph;\n                }\n                var width = this.getWidth(startLineWidget, true) - (left - startLineWidget.paragraph.x);\n                // Handled the  highlighting approach as genric for normal and rtl text.\n                if (paragraph.bidi || (startElement instanceof TextElementBox && startElement.isRightToLeft)) {\n                    var right = 0;\n                    var elementCollection = this.getElementsForward(startLineWidget, startElement, endElement, paragraph.bidi);\n                    if (elementCollection) {\n                        var elementIsRTL = false;\n                        for (var i = 0; i < elementCollection.length; i++) {\n                            var element = elementCollection[i];\n                            elementIsRTL = false;\n                            if (element === startElement) {\n                                left = this.getLeftInternal(startLineWidget, element, selectionStartIndex);\n                            }\n                            else {\n                                left = this.getLeftInternal(startLineWidget, element, 0);\n                            }\n                            var index = element instanceof TextElementBox ? element.length : 1;\n                            right = this.getLeftInternal(startLineWidget, element, index);\n                            if (element instanceof TextElementBox) {\n                                elementIsRTL = element.isRightToLeft;\n                            }\n                            width = Math.abs(right - left);\n                            this.createHighlightBorder(startLineWidget, width, elementIsRTL ? right : left, top, true);\n                        }\n                        // Highlight the Paragrph mark for last line.\n                        if (startLineWidget.isLastLine()) {\n                            var charFormat = elementCollection[elementCollection.length - 1].line.paragraph.characterFormat;\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(charFormat).Width;\n                            if (paragraph.bidi) {\n                                // The paragraph mark will be at the left most end.\n                                left = this.getLineStartLeft(startLineWidget) - paragraphMarkWidth;\n                            }\n                            else { // The paragraph mark will at right most end.\n                                left = elementIsRTL ? startLineWidget.paragraph.x + this.getWidth(startLineWidget, false) : right;\n                            }\n                            this.createHighlightBorder(startLineWidget, paragraphMarkWidth, left, top, true);\n                        }\n                    }\n                    else {\n                        this.createHighlightBorder(startLineWidget, width, left, top, false);\n                    }\n                }\n                else {\n                    this.createHighlightBorder(startLineWidget, width, left, top, false);\n                }\n                var lineIndex = startLineWidget.paragraph.childWidgets.indexOf(startLineWidget);\n                //Iterates to last item of paragraph or selection end.                                             \n                this.highlightParagraph(paragraph, lineIndex + 1, endLineWidget, endElement, selectionEndIndex);\n                if (paragraph.childWidgets.indexOf(end.currentWidget) !== -1) {\n                    return;\n                }\n            }\n            if (this.isHideSelection(paragraph)) {\n                this.isHighlightNext = false;\n                return;\n            }\n            this.isHighlightNext = true;\n            this.hightLightNextParagraph = paragraph;\n        }\n    };\n    Selection.prototype.highlightNextBlock = function (paragraph, start, end) {\n        var block = paragraph.nextRenderedWidget;\n        if (!isNullOrUndefined(block)) {\n            if (block instanceof ParagraphWidget) {\n                this.isHighlightNext = false;\n                this.highlight(block, start, end);\n                if (this.isHighlightNext) {\n                    this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                    this.isHighlightNext = false;\n                    this.hightLightNextParagraph = undefined;\n                }\n            }\n            else {\n                this.highlightTable(block, start, end);\n            }\n        }\n    };\n    /**\n     * Get start line widget\n     * @private\n     * @returns {ElementInfo}\n     */\n    Selection.prototype.getStartLineWidget = function (paragraph, start, startElement, selectionStartIndex) {\n        var offset = paragraph === start.paragraph ? start.offset : this.getStartOffset(paragraph);\n        var startInlineObj = undefined;\n        if (paragraph === start.paragraph) {\n            startInlineObj = start.currentWidget.getInline(offset, selectionStartIndex);\n        }\n        else {\n            startInlineObj = paragraph.firstChild.getInline(offset, selectionStartIndex);\n        }\n        startElement = startInlineObj.element; //return selectionStartIndex\n        selectionStartIndex = startInlineObj.index;\n        if (startElement instanceof FieldElementBox) {\n            var inlineInfo = this.getRenderedInline(startElement, selectionStartIndex);\n            startElement = inlineInfo.element;\n            selectionStartIndex = inlineInfo.index;\n        }\n        if (offset === this.getParagraphLength(start.paragraph) + 1) {\n            selectionStartIndex++;\n        }\n        return {\n            'index': selectionStartIndex, 'element': startElement\n        };\n    };\n    /**\n     * Get end line widget\n     * @private\n     */\n    Selection.prototype.getEndLineWidget = function (end, endElement, selectionEndIndex) {\n        var endInlineObj = end.currentWidget.getInline(end.offset, selectionEndIndex);\n        endElement = endInlineObj.element; //return selection end index\n        selectionEndIndex = endInlineObj.index;\n        if (endElement instanceof FieldElementBox) {\n            var inlineInfo = this.getRenderedInline(endElement, selectionEndIndex);\n            endElement = inlineInfo.element;\n            selectionEndIndex = inlineInfo.index;\n        }\n        var lineIndex = end.paragraph.childWidgets.indexOf(end.currentWidget);\n        if (lineIndex === end.paragraph.childWidgets.length - 1 && end.offset === this.getLineLength(end.currentWidget) + 1) {\n            selectionEndIndex = endElement ? endElement.length + 1 : 1;\n        }\n        return { 'index': selectionEndIndex, 'element': endElement };\n    };\n    /**\n     * Get line widget\n     * @private\n     */\n    Selection.prototype.getLineWidgetInternal = function (line, offset, moveToNextLine) {\n        var lineWidget = undefined;\n        if (line.children.length === 0 && line instanceof LineWidget) {\n            lineWidget = line;\n        }\n        else {\n            var indexInInline = 0;\n            var inlineInfo = line.getInline(offset, indexInInline);\n            var inline = inlineInfo.element;\n            indexInInline = inlineInfo.index;\n            lineWidget = inline instanceof ElementBox ? inline.line\n                : this.getLineWidgetInternalInline(inline, indexInInline, moveToNextLine);\n        }\n        return lineWidget;\n    };\n    /**\n     * Get last line widget\n     * @private\n     */\n    Selection.prototype.getLineWidgetParagraph = function (offset, line) {\n        var linewidget = undefined;\n        if (line.children.length === 0) {\n            linewidget = line;\n        }\n        else {\n            var indexInInline = 0;\n            var inlineInfo = line.getInline(offset, indexInInline);\n            var inline = inlineInfo.element;\n            indexInInline = inlineInfo.index;\n            linewidget = this.getLineWidget(inline, indexInInline);\n        }\n        return linewidget;\n    };\n    /**\n     * Highlight selected cell\n     * @private\n     */\n    Selection.prototype.highlightCells = function (table, startCell, endCell) {\n        var start = this.getCellLeft(startCell.ownerRow, startCell);\n        var end = start + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (start > endCellLeft) {\n            start = endCellLeft;\n        }\n        if (end < endCellRight) {\n            end = endCellRight;\n        }\n        if (start > this.upDownSelectionLength) {\n            start = this.upDownSelectionLength;\n        }\n        if (end < this.upDownSelectionLength) {\n            end = this.upDownSelectionLength;\n        }\n        var tableWidgetCollection = table.getSplitWidgets();\n        var startTableIndex = tableWidgetCollection.indexOf(startCell.ownerRow.ownerTable);\n        var endTableIndex = tableWidgetCollection.indexOf(endCell.ownerRow.ownerTable);\n        if (startTableIndex === endTableIndex) {\n            var count = table.childWidgets.indexOf(endCell.ownerRow);\n            for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n                this.highlightRow(table.childWidgets[i], start, end);\n            }\n        }\n        else {\n            var startRowIndex = 0;\n            var endRowIndex = 0;\n            for (var i = startTableIndex; i <= endTableIndex; i++) {\n                table = tableWidgetCollection[i];\n                if (i === startTableIndex) {\n                    startRowIndex = table.childWidgets.indexOf(startCell.ownerRow);\n                }\n                else {\n                    startRowIndex = 0;\n                }\n                if (i === endTableIndex) {\n                    endRowIndex = table.childWidgets.indexOf(endCell.ownerRow);\n                }\n                else {\n                    endRowIndex = table.childWidgets.length - 1;\n                }\n                for (var j = startRowIndex; j <= endRowIndex; j++) {\n                    this.highlightRow(table.childWidgets[j], start, end);\n                }\n            }\n        }\n    };\n    /**\n     * highlight selected table\n     *\n     * @private\n     */\n    Selection.prototype.highlightTable = function (table, start, end) {\n        this.highlightInternal(table.childWidgets[0], start, end);\n        if (!end.paragraph.isInsideTable //Selection end is outside the table cell.\n            || !table.contains(end.paragraph.associatedCell)) { //Selection end is not inside the current table.\n            this.highlightNextBlock(table, start, end);\n        }\n    };\n    /**\n     * Get cell left\n     *\n     * @private\n     */\n    Selection.prototype.getCellLeft = function (row, cell) {\n        var left = 0;\n        left += cell.x - cell.margin.left;\n        return left;\n    };\n    /**\n     * Get next paragraph for row\n     *\n     * @private\n     */\n    Selection.prototype.getNextParagraphRow = function (row) {\n        if (!isNullOrUndefined(row.nextRenderedWidget)) {\n            var cell = row.nextRenderedWidget.childWidgets[0];\n            var block = cell.childWidgets[0];\n            return this.documentHelper.getFirstParagraphBlock(block);\n        }\n        return this.getNextParagraphBlock(row.ownerTable);\n    };\n    /**\n     * Get previous paragraph from row\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphRow = function (row) {\n        if (!isNullOrUndefined(row.previousRenderedWidget)) {\n            var cell = row.previousRenderedWidget.lastChild;\n            var block = cell.lastChild ? cell.lastChild : (cell.previousSplitWidget).lastChild;\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return this.getPreviousParagraphBlock(row.ownerTable);\n    };\n    /**\n     * Return true if row contain cell\n     *\n     * @private\n     */\n    Selection.prototype.containsRow = function (row, tableCell) {\n        if (row.childWidgets.indexOf(tableCell) !== -1) {\n            return true;\n        }\n        while (tableCell.ownerTable.isInsideTable) {\n            if (row.childWidgets.indexOf(tableCell) !== -1) {\n                return true;\n            }\n            tableCell = tableCell.ownerTable.associatedCell;\n        }\n        return row.childWidgets.indexOf(tableCell) !== -1;\n    };\n    /**\n     * Highlight selected row\n     *\n     * @private\n     */\n    Selection.prototype.highlightRow = function (row, start, end) {\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var left = this.getCellLeft(row, row.childWidgets[i]);\n            if (HelperMethods.round(start, 2) <= HelperMethods.round(left, 2) &&\n                HelperMethods.round(left, 2) < HelperMethods.round(end, 2)) {\n                this.highlightCellWidget(row.childWidgets[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.highlightInternal = function (row, start, end) {\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            this.highlightCellWidget(row.childWidgets[i]);\n        }\n        if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n            return;\n        }\n        else if (row.nextRenderedWidget instanceof TableRowWidget) {\n            this.highlightInternal(row.nextRenderedWidget, start, end);\n        }\n    };\n    /**\n     * Get last paragraph in cell\n     *\n     * @private\n     */\n    Selection.prototype.getLastParagraph = function (cell) {\n        while (cell.nextSplitWidget) {\n            if (cell.nextSplitWidget.childWidgets.length > 0) {\n                cell = cell.nextSplitWidget;\n            }\n            else {\n                break;\n            }\n        }\n        var lastBlock;\n        if (cell.childWidgets.length > 0) {\n            lastBlock = cell.lastChild;\n        }\n        else {\n            lastBlock = cell.previousSplitWidget.lastChild;\n        }\n        return this.documentHelper.getLastParagraphBlock(lastBlock);\n    };\n    /**\n     * Return true is source cell contain cell\n     *\n     * @private\n     */\n    Selection.prototype.containsCell = function (sourceCell, cell) {\n        if (sourceCell.equals(cell)) {\n            return true;\n        }\n        while (cell.ownerTable.isInsideTable) {\n            if (sourceCell.equals(cell.ownerTable.associatedCell)) {\n                return true;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return false;\n    };\n    /**\n     * Return true if cell is selected\n     *\n     * @private\n     */\n    Selection.prototype.isCellSelected = function (cell, startPosition, endPosition) {\n        var lastParagraph = this.getLastParagraph(cell);\n        var isAtCellEnd = lastParagraph === endPosition.paragraph && endPosition.offset === this.getParagraphLength(lastParagraph) + 1;\n        return isAtCellEnd || (!this.containsCell(cell, startPosition.paragraph.associatedCell) ||\n            !this.containsCell(cell, endPosition.paragraph.associatedCell));\n    };\n    /**\n     * Return Container cell\n     *\n     * @private\n     */\n    Selection.prototype.getContainerCellOf = function (cell, tableCell) {\n        while (cell.ownerTable.isInsideTable) {\n            if (cell.ownerTable.contains(tableCell)) {\n                return cell;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * Get Selected cell\n     *\n     * @private\n     */\n    Selection.prototype.getSelectedCell = function (cell, containerCell) {\n        if (cell.ownerTable.equals(containerCell.ownerTable)) {\n            return cell;\n        }\n        while (cell.ownerTable.isInsideTable) {\n            if (cell.ownerTable.associatedCell.equals(containerCell)) {\n                return cell;\n            }\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getSelectedCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.selectedWidgets.keys.length; i++) {\n            var widget = this.selectedWidgets.keys[i];\n            if (widget instanceof TableCellWidget) {\n                cells.push(widget);\n            }\n        }\n        return cells;\n    };\n    /**\n     * @private\n     * @return\n     */\n    Selection.prototype.getLevelFormatNumber = function () {\n        var numberFormat = '%';\n        numberFormat = numberFormat + (((this.paragraphFormat.listLevelNumber <= 0) ? 0 : this.paragraphFormat.listLevelNumber) + 1) + '.';\n        return numberFormat;\n    };\n    /**\n     * Get Next paragraph from cell\n     *\n     * @private\n     */\n    Selection.prototype.getNextParagraphCell = function (cell) {\n        if (cell.nextRenderedWidget && cell.nextRenderedWidget instanceof TableCellWidget) {\n            //Return first paragraph in cell.\n            cell = cell.nextRenderedWidget;\n            if (cell.getSplitWidgets()[0] instanceof TableCellWidget) {\n                cell = cell.getSplitWidgets()[0];\n            }\n            var block = cell.firstChild;\n            if (block) {\n                return this.documentHelper.getFirstParagraphBlock(block);\n            }\n            else {\n                return this.getNextParagraphCell(cell);\n            }\n        }\n        else if (cell.nextSplitWidget && cell.nextSplitWidget.childWidgets.length === 0) {\n            cell = cell.getSplitWidgets().pop();\n        }\n        return this.getNextParagraphRow(cell.containerWidget);\n    };\n    /**\n     * Get previous paragraph from cell\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousParagraphCell = function (cell) {\n        if (!isNullOrUndefined(cell.previousRenderedWidget) && cell.previousRenderedWidget instanceof TableCellWidget) {\n            cell = cell.previousRenderedWidget;\n            var block = cell.lastChild;\n            return this.documentHelper.getLastParagraphBlock(block);\n        }\n        return this.getPreviousParagraphRow(cell.ownerRow);\n    };\n    /**\n     * Get cell's container cell\n     *\n     * @private\n     */\n    Selection.prototype.getContainerCell = function (cell) {\n        while (!isNullOrUndefined(cell.ownerTable) && cell.ownerTable.isInsideTable) {\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    /**\n     * Highlight selected cell\n     *\n     * @private\n     */\n    Selection.prototype.highlightCell = function (cell, selection, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(cell, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(cell, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.highlightCellWidget(containerCell);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.highlight(start.paragraph, start, end);\n                            if (this.isHighlightNext) {\n                                this.highlightNextBlock(this.hightLightNextParagraph, start, end);\n                                this.isHighlightNext = false;\n                                this.hightLightNextParagraph = undefined;\n                            }\n                        }\n                        else {\n                            this.highlightContainer(startCell, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Selection end is not in container cell.\n                    this.highlightCellWidget(containerCell);\n                    if (containerCell.ownerRow.equals(endCell.ownerRow)) {\n                        //Highlight other selected cells in current row.\n                        startCell = containerCell;\n                        while (!isNullOrUndefined(startCell.nextRenderedWidget)) {\n                            startCell = startCell.nextRenderedWidget;\n                            this.highlightCellWidget(startCell);\n                            if (startCell === endCell) {\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        this.highlightCells(containerCell.ownerTable, containerCell, endCell);\n                    }\n                }\n            }\n            else {\n                this.highlightContainer(containerCell, start, end);\n            }\n        }\n        else {\n            var cell1 = this.getContainerCell(cell);\n            this.highlightContainer(cell1, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.highlightContainer = function (cell, start, end) {\n        this.highlightInternal(cell.containerWidget, start, end);\n        this.highlightNextBlock(cell.ownerTable.getSplitWidgets().pop(), start, end);\n    };\n    /**\n     * Get previous valid element\n     *\n     * @private\n     */\n    Selection.prototype.getPreviousValidElement = function (inline) {\n        var previousValidInline = undefined;\n        if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n            return inline;\n        }\n        while (inline instanceof FieldElementBox) {\n            if (HelperMethods.isLinkedFieldCharacter(inline)) {\n                if (inline instanceof FieldElementBox && inline.fieldType === 0) {\n                    previousValidInline = inline;\n                }\n                else if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                    previousValidInline = inline;\n                    if (isNullOrUndefined(inline.fieldSeparator)) {\n                        inline = inline.fieldBegin;\n                        previousValidInline = inline;\n                    }\n                }\n                else {\n                    inline = inline.fieldBegin;\n                    previousValidInline = inline;\n                }\n            }\n            inline = inline.previousNode;\n        }\n        return isNullOrUndefined(previousValidInline) ? inline : previousValidInline;\n    };\n    /**\n     * Get next valid element\n     *\n     * @private\n     */\n    Selection.prototype.getNextValidElement = function (inline) {\n        var nextValidInline = undefined;\n        if (inline instanceof BookmarkElementBox && inline.bookmarkType === 1) {\n            return inline;\n        }\n        while (inline instanceof FieldElementBox) {\n            if (inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n                return isNullOrUndefined(nextValidInline) ? inline : nextValidInline;\n            }\n            else if (inline.fieldType === 1 && !isNullOrUndefined(inline.fieldBegin)) {\n                nextValidInline = inline;\n            }\n            inline = inline.nextNode;\n        }\n        return (isNullOrUndefined(nextValidInline) ? inline : nextValidInline);\n    };\n    /**\n     * Return next valid inline with index\n     *\n     * @private\n     */\n    Selection.prototype.validateTextPosition = function (inline, index) {\n        var nextNode = inline.nextNode;\n        if (inline.length === index && (nextNode instanceof FieldElementBox\n            || (!(inline instanceof ImageElementBox) && (nextNode instanceof BookmarkElementBox || nextNode instanceof CommentCharacterElementBox)))) {\n            //If inline is last item within field, then set field end as text position.\n            var nextInline = this.getNextValidElement(inline.nextNode);\n            if ((nextInline instanceof FieldElementBox && nextInline.fieldType === 1)\n                || (nextInline instanceof BookmarkElementBox && nextInline.bookmarkType === 1)\n                || (nextInline instanceof CommentCharacterElementBox && nextInline.commentType === 1)) {\n                inline = nextInline;\n                index = this.documentHelper.isFormFillProtectedMode ? 0 : 1;\n            }\n        }\n        else if (index === 0 && inline.previousNode instanceof FieldElementBox) {\n            var prevInline = this.getPreviousValidElement(inline.previousNode);\n            inline = prevInline;\n            index = inline instanceof FieldElementBox ? 0 : inline.length;\n            if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                index++;\n            }\n        }\n        return { 'element': inline, 'index': index };\n    };\n    /**\n     * Get inline physical location\n     *\n     * @private\n     */\n    Selection.prototype.getPhysicalPositionInline = function (inline, index, moveNextLine) {\n        var element = undefined;\n        element = this.getElementBox(inline, index, moveNextLine).element;\n        var lineWidget = undefined;\n        if (isNullOrUndefined(element) || isNullOrUndefined(element.line)) {\n            if (inline instanceof FieldElementBox && inline.fieldType === 1) {\n                element = inline;\n            }\n            else {\n                if (inline instanceof FieldElementBox || inline instanceof BookmarkElementBox || inline instanceof CommentCharacterElementBox) {\n                    return this.getFieldCharacterPosition(inline);\n                }\n                return new Point(0, 0);\n            }\n        }\n        var margin = element.margin;\n        var top = 0;\n        var left = 0;\n        if (element instanceof TextElementBox && element.text === '\\v' && isNullOrUndefined(inline.nextNode) && !this.owner.editorModule.handledEnter) {\n            lineWidget = this.getNextLineWidget(element.line.paragraph, element);\n            index = 0;\n        }\n        else {\n            lineWidget = element.line;\n        }\n        top = this.getTop(lineWidget);\n        if (element instanceof ImageElementBox && element.textWrappingStyle === 'Inline') {\n            var format = element.line.paragraph.characterFormat;\n            var previousInline = this.getPreviousTextElement(inline);\n            if (!isNullOrUndefined(previousInline)) {\n                format = previousInline.characterFormat;\n            }\n            else {\n                var nextInline = this.getNextTextElement(inline);\n                if (!isNullOrUndefined(nextInline)) {\n                    format = nextInline.characterFormat;\n                }\n            }\n            var measureObj = this.documentHelper.textHelper.getHeight(format);\n            if (element.margin.top + element.height - measureObj.BaselineOffset > 0) {\n                top += element.margin.top + element.height - measureObj.BaselineOffset;\n            }\n        }\n        else if (!(element instanceof FieldElementBox)) {\n            top += margin.top > 0 ? margin.top : 0;\n        }\n        left = (isNullOrUndefined(element) || isNullOrUndefined(lineWidget)) ? 0 : this.getLeftInternal(lineWidget, element, index);\n        return new Point(left, top);\n    };\n    /**\n     * Get field character position\n     *\n     * @private\n     */\n    Selection.prototype.getFieldCharacterPosition = function (firstInline) {\n        var nextValidInline = this.getNextValidElementForField(firstInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if (isNullOrUndefined(nextValidInline)) {\n            var nextParagraph = firstInline.line.paragraph;\n            return this.getEndPosition(nextParagraph);\n        }\n        else {\n            return this.getPhysicalPositionInline(nextValidInline, 0, true);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isRenderBookmarkAtEnd = function (bookmark) {\n        var bookmarkElement;\n        if (bookmark.bookmarkType == 1) {\n            bookmarkElement = bookmark.reference;\n        }\n        else {\n            bookmarkElement = bookmark;\n        }\n        if (bookmarkElement && isNullOrUndefined(bookmarkElement.properties)) {\n            var endCell = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell : undefined;\n            if (isNullOrUndefined(endCell)) {\n                return false;\n            }\n            var lastRow = bookmarkElement.reference ? bookmarkElement.reference.paragraph.associatedCell.ownerRow : undefined;\n            var lastCell = lastRow ? lastRow.childWidgets[lastRow.childWidgets.length - 1] : undefined;\n            if (isNullOrUndefined(lastCell)) {\n                return false;\n            }\n            if (endCell == lastCell) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextValidElementForField = function (firstInline) {\n        if (firstInline instanceof FieldElementBox && firstInline.fieldType === 0\n            && HelperMethods.isLinkedFieldCharacter(firstInline)) {\n            var fieldBegin = firstInline;\n            if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                firstInline = fieldBegin.fieldEnd;\n            }\n            else {\n                firstInline = fieldBegin.fieldSeparator;\n            }\n        }\n        var nextValidInline = undefined;\n        if (!isNullOrUndefined(firstInline.nextNode)) {\n            nextValidInline = this.getNextValidElement(firstInline.nextNode);\n        }\n        return nextValidInline;\n    };\n    /**\n     * Get paragraph end position\n     *\n     * @private\n     */\n    Selection.prototype.getEndPosition = function (widget) {\n        var left = widget.x;\n        var top = widget.y;\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n            left += this.getWidth(lineWidget, false);\n        }\n        if (!isNullOrUndefined(lineWidget)) {\n            top = this.getTop(lineWidget);\n        }\n        var topMargin = 0;\n        var bottomMargin = 0;\n        var size = this.getParagraphMarkSize(widget, topMargin, bottomMargin);\n        return new Point(left, top + size.topMargin);\n    };\n    /**\n     * Get element box\n     *\n     * @private\n     */\n    Selection.prototype.getElementBox = function (currentInline, index, moveToNextLine) {\n        var elementBox = undefined;\n        if (!(currentInline instanceof FieldElementBox || currentInline instanceof BookmarkElementBox || currentInline instanceof CommentCharacterElementBox)) {\n            elementBox = currentInline;\n        }\n        return { 'element': elementBox, 'index': index };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPreviousTextElement = function (inline) {\n        if (inline.previousNode instanceof TextElementBox) {\n            return inline.previousNode;\n        }\n        if (!isNullOrUndefined(inline.previousNode)) {\n            return this.getPreviousTextElement(inline.previousNode);\n        }\n        return undefined;\n    };\n    /**\n     * Get next text inline\n     *\n     * @private\n     */\n    Selection.prototype.getNextTextElement = function (inline) {\n        if (inline.nextNode instanceof TextElementBox) {\n            return inline.nextNode;\n        }\n        if (!isNullOrUndefined(inline.nextNode)) {\n            return this.getNextTextElement(inline.nextNode);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getNextRenderedElementBox = function (inline, indexInInline) {\n        if (inline instanceof FieldElementBox) {\n            var fieldBegin = inline;\n            if (fieldBegin.fieldType === 0) {\n                inline = this.getRenderedField(fieldBegin);\n                if (fieldBegin === inline) {\n                    return fieldBegin;\n                }\n            }\n            indexInInline = 1;\n        }\n        while (!isNullOrUndefined(inline) && indexInInline === inline.length && inline.nextNode instanceof FieldElementBox) {\n            var nextValidInline = this.getNextValidElement((inline.nextNode));\n            if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n                var fieldBegin = nextValidInline;\n                inline = this.getRenderedField(fieldBegin);\n                if (!isNullOrUndefined(inline) && fieldBegin === inline) {\n                    return fieldBegin;\n                }\n                indexInInline = 1;\n            }\n            else {\n                inline = nextValidInline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementBoxInternal = function (inline, index) {\n        var element = undefined;\n        element = inline;\n        return {\n            'element': element, 'index': index\n        };\n    };\n    /**\n     * Get Line widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidget = function (inline, index) {\n        return this.getLineWidgetInternalInline(inline, index, true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getLineWidgetInternalInline = function (inline, index, moveToNextLine) {\n        var elementObj = this.getElementBox(inline, index, moveToNextLine);\n        var element = elementObj.element; //return index\n        index = elementObj.index;\n        if (!isNullOrUndefined(element)) {\n            if (moveToNextLine && element instanceof TextElementBox && element.text === '\\v' && index === 1) {\n                return this.getNextLineWidget(element.line.paragraph, element);\n            }\n            else {\n                return element.line;\n            }\n        }\n        var startInline = inline;\n        //ToDo: Check previous inline here.\n        var nextValidInline = this.getNextValidElementForField(startInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if (isNullOrUndefined(nextValidInline)) {\n            var lineWidget = undefined;\n            var widget = startInline.line.paragraph;\n            if (widget.childWidgets.length > 0) {\n                lineWidget = widget.childWidgets[widget.childWidgets.length - 1];\n            }\n            return lineWidget;\n        }\n        else {\n            return this.getLineWidget(nextValidInline, 0);\n        }\n    };\n    /**\n     * Get next line widget\n     *\n     * @private\n     */\n    Selection.prototype.getNextLineWidget = function (paragraph, element) {\n        var lineWidget = undefined;\n        var widget = paragraph;\n        if (widget.childWidgets.length > 0) {\n            var widgetIndex = widget.childWidgets.indexOf(element.line);\n            if (widgetIndex === widget.childWidgets.length - 1) {\n                widget = paragraph;\n                // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n                widgetIndex = -1;\n            }\n            else if (widgetIndex > widget.childWidgets.length - 1) {\n                widget = this.getNextParagraphBlock(paragraph);\n                widgetIndex = -1;\n            }\n            else if (widgetIndex < 0) {\n                // widget = paragraph.leafWidgets[paragraph.leafWidgets.length - 1];\n                widget = paragraph;\n                widgetIndex = widget.childWidgets.indexOf(element.line);\n            }\n            lineWidget = widget.childWidgets[widgetIndex + 1];\n        }\n        return lineWidget;\n    };\n    Selection.prototype.getCaretHeight = function (inline, index, format, isEmptySelection, topMargin, isItalic) {\n        var elementBoxInfo = this.getElementBox(inline, index, false);\n        var element = elementBoxInfo.element;\n        var currentInline = inline;\n        if (isNullOrUndefined(element)) {\n            if (currentInline instanceof FieldElementBox) {\n                return this.getFieldCharacterHeight(currentInline, format, isEmptySelection, topMargin, isItalic);\n            }\n            return { 'height': this.documentHelper.textHelper.getHeight(format).Height, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        var margin = element.margin;\n        var heightElement = element.height;\n        var maxLineHeight = 0;\n        if (element instanceof ImageElementBox) {\n            var previousInline = this.getPreviousTextElement(inline);\n            var nextInline = this.getNextTextElement(inline);\n            if (isNullOrUndefined(previousInline) && isNullOrUndefined(nextInline)) {\n                var top_2 = 0;\n                var bottom = 0;\n                var paragarph = inline.line.paragraph;\n                var sizeInfo = this.getParagraphMarkSize(paragarph, top_2, bottom);\n                top_2 = sizeInfo.topMargin;\n                bottom = sizeInfo.bottomMargin;\n                maxLineHeight = sizeInfo.height;\n                isItalic = paragarph.characterFormat.italic;\n                if (!isEmptySelection) {\n                    maxLineHeight += this.documentHelper.layout.getAfterSpacing(paragarph);\n                }\n            }\n            else if (isNullOrUndefined(previousInline)) {\n                isItalic = nextInline.characterFormat.italic;\n                return this.getCaretHeight(nextInline, 0, nextInline.characterFormat, isEmptySelection, topMargin, isItalic);\n            }\n            else {\n                if (!isNullOrUndefined(nextInline) && element instanceof ImageElementBox) {\n                    //Calculates the caret size using image character format.\n                    var textSizeInfo = this.documentHelper.textHelper.getHeight(element.characterFormat);\n                    var charHeight = textSizeInfo.Height;\n                    var baselineOffset = textSizeInfo.BaselineOffset;\n                    maxLineHeight = (element.margin.top < 0 && baselineOffset > element.margin.top + element.height) ? element.margin.top + element.height + charHeight - baselineOffset : charHeight;\n                    if (!isEmptySelection) {\n                        maxLineHeight += element.margin.bottom;\n                    }\n                }\n                else {\n                    isItalic = previousInline.characterFormat.italic;\n                    return this.getCaretHeight(previousInline, previousInline.length, previousInline.characterFormat, isEmptySelection, topMargin, isItalic);\n                }\n            }\n        }\n        else {\n            var baselineAlignment = this.characterFormat.baselineAlignment;\n            var elementHeight = heightElement;\n            if (baselineAlignment !== 'Normal' && isEmptySelection) {\n                //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n                elementHeight = elementHeight / 1.5;\n                if (baselineAlignment === 'Subscript') {\n                    topMargin = heightElement - elementHeight;\n                }\n            }\n            maxLineHeight = (margin.top < 0 ? margin.top : 0) + elementHeight;\n            if (!isEmptySelection) {\n                maxLineHeight += margin.bottom;\n            }\n        }\n        if (!isEmptySelection) {\n            return { 'height': maxLineHeight, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        var height = this.documentHelper.textHelper.getHeight(format).Height;\n        if (height > maxLineHeight) {\n            height = maxLineHeight;\n        }\n        return { 'height': height, 'topMargin': topMargin, 'isItalic': isItalic };\n    };\n    Selection.prototype.getFieldCharacterHeight = function (startInline, format, isEmptySelection, topMargin, isItalic) {\n        var nextValidInline = this.getNextValidElementForField(startInline);\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if (isNullOrUndefined(nextValidInline)) {\n            var nextParagraph = startInline.line.paragraph;\n            var height = this.documentHelper.textHelper.getParagraphMarkSize(format).Height;\n            var top_3 = 0;\n            var bottom = 0;\n            var sizeInfo = this.getParagraphMarkSize(nextParagraph, top_3, bottom);\n            var maxLineHeight = sizeInfo.height;\n            top_3 = sizeInfo.topMargin;\n            bottom = sizeInfo.bottomMargin;\n            if (!isEmptySelection) {\n                maxLineHeight += bottom;\n                return { 'height': maxLineHeight, 'topMargin': topMargin, 'isItalic': isItalic };\n            }\n            if (height > maxLineHeight) {\n                height = maxLineHeight;\n            }\n            return { 'height': height, 'topMargin': topMargin, 'isItalic': isItalic };\n        }\n        else {\n            return this.getCaretHeight(nextValidInline, 0, format, isEmptySelection, topMargin, isItalic);\n        }\n    };\n    /**\n     * Get rendered inline\n     *\n     * @private\n     */\n    //FieldCharacter\n    Selection.prototype.getRenderedInline = function (inline, inlineIndex) {\n        if (this.documentHelper.isFormFillProtectedMode && inline.fieldType === 2) {\n            return { 'element': inline, 'index': inlineIndex };\n        }\n        var prevInline = this.getPreviousValidElement(inline);\n        while (prevInline instanceof FieldElementBox) {\n            prevInline = this.getPreviousTextElement(prevInline);\n            if (prevInline instanceof FieldElementBox) {\n                prevInline = prevInline.previousNode;\n            }\n        }\n        if (!isNullOrUndefined(prevInline)) {\n            inlineIndex = prevInline.length;\n            return { 'element': prevInline, 'index': inlineIndex };\n        }\n        inlineIndex = 0;\n        var nextInline = this.getNextRenderedElementBox(inline, 0);\n        if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0) {\n            nextInline = nextInline.fieldSeparator;\n            nextInline = nextInline.nextNode;\n            while (nextInline instanceof FieldElementBox) {\n                if (nextInline instanceof FieldElementBox && nextInline.fieldType === 0\n                    && HelperMethods.isLinkedFieldCharacter(nextInline)) {\n                    if (isNullOrUndefined(nextInline.fieldSeparator)) {\n                        nextInline = nextInline.fieldEnd;\n                    }\n                    else {\n                        nextInline = nextInline.fieldSeparator;\n                    }\n                }\n                nextInline = nextInline.nextNode;\n            }\n        }\n        return { 'element': nextInline, 'index': inlineIndex };\n    };\n    //Field Begin\n    /**\n     * Get rendered field\n     *\n     * @private\n     */\n    Selection.prototype.getRenderedField = function (fieldBegin) {\n        var inline = fieldBegin;\n        if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            inline = fieldBegin.fieldEnd;\n        }\n        else {\n            inline = fieldBegin.fieldSeparator;\n            var paragraph = inline.line.paragraph;\n            if (paragraph === fieldBegin.fieldEnd.line.paragraph\n                && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n                inline = fieldBegin.fieldEnd;\n            }\n            else {\n                return inline;\n            }\n        }\n        return inline;\n    };\n    /**\n     * Return true is inline is tha last inline\n     *\n     * @private\n     */\n    Selection.prototype.isLastRenderedInline = function (inline, index) {\n        while (index === inline.length && inline.nextNode instanceof FieldElementBox) {\n            var nextValidInline = this.getNextValidElement(inline.nextNode);\n            index = 0;\n            if (nextValidInline instanceof FieldElementBox && nextValidInline.fieldType === 0) {\n                inline = nextValidInline;\n            }\n            if (inline instanceof FieldElementBox && inline.fieldType === 0 && !isNullOrUndefined(inline.fieldEnd)) {\n                var fieldBegin = inline;\n                if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                    inline = fieldBegin.fieldEnd;\n                    index = 1;\n                }\n                else {\n                    inline = fieldBegin.fieldSeparator;\n                    var paragraph = inline.line.paragraph;\n                    index = 1;\n                    if (paragraph === fieldBegin.fieldEnd.line.paragraph\n                        && !this.hasValidInline(paragraph, inline, fieldBegin.fieldEnd)) {\n                        inline = fieldBegin.fieldEnd;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        return index === inline.length && isNullOrUndefined(inline.nextNode);\n    };\n    /**\n     * Get page\n     *\n     * @private\n     */\n    Selection.prototype.getPage = function (widget) {\n        var page = undefined;\n        if (widget.containerWidget instanceof TextFrame) {\n            var shape = widget.containerWidget.containerShape;\n            if (shape.line) {\n                page = this.getPage(shape.line.paragraph);\n            }\n        }\n        else if (widget.containerWidget instanceof BlockContainer) {\n            var bodyWidget = widget.containerWidget;\n            page = widget.containerWidget.page;\n        }\n        else if (!isNullOrUndefined(widget.containerWidget)) {\n            page = this.getPage(widget.containerWidget);\n        }\n        return page;\n    };\n    /**\n     * Clear Selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlightInSelectedWidgets = function () {\n        var isNonEmptySelection = false;\n        var widgets = this.selectedWidgets.keys;\n        if (!this.viewer.documentHelper.isDragStarted) {\n            for (var i = 0; i < widgets.length; i++) {\n                this.removeSelectionHighlight(widgets[i]);\n                isNonEmptySelection = true;\n            }\n            this.selectedWidgets.clear();\n        }\n        return isNonEmptySelection;\n    };\n    /**\n     * Clear selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearChildSelectionHighlight = function (widget) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            if (widget.childWidgets[i] instanceof LineWidget) {\n                this.clearSelectionHighlightLineWidget(widget.childWidgets[i]);\n            }\n            else if (widget.childWidgets[i] instanceof TableCellWidget) {\n                this.clearSelectionHighlight(widget.childWidgets[i]);\n            }\n            else if (widget.childWidgets[i] instanceof Widget) {\n                this.clearChildSelectionHighlight(widget.childWidgets[i]);\n            }\n        }\n    };\n    /**\n     * Get line widget from paragraph widget\n     *\n     * @private\n     */\n    //Body Widget \n    Selection.prototype.getLineWidgetBodyWidget = function (widget, point, isGetFirstChild) {\n        isGetFirstChild = isNullOrUndefined(isGetFirstChild) ? true : isGetFirstChild;\n        var bodyWgt = widget;\n        if (bodyWgt instanceof BlockContainer) {\n            for (var x = 0; x < bodyWgt.floatingElements.length; x++) {\n                var floatWidget = bodyWgt.floatingElements[x];\n                if (floatWidget instanceof TableWidget) {\n                    var floatWidgetWidth = floatWidget.getTableCellWidth();\n                    if (point.x <= floatWidget.x + floatWidgetWidth && point.x >= floatWidget.x\n                        && point.y <= floatWidget.y + floatWidget.height && point.y >= floatWidget.y) {\n                        return this.getLineWidgetTableWidget(floatWidget, point);\n                    }\n                }\n                else if (floatWidget instanceof ShapeBase && floatWidget.x <= point.x && (floatWidget.x + floatWidget.width) >= point.x\n                    && floatWidget.y <= point.y && (floatWidget.y + floatWidget.height) >= point.y) {\n                    return floatWidget.line;\n                }\n            }\n        }\n        if (widget instanceof FootNoteWidget) {\n            var selectionBody = void 0;\n            var isFit = false;\n            for (var j = 0; j < widget.bodyWidgets.length; j++) {\n                if (widget.sectionFormat.columns.length <= 1) {\n                    for (var k = 0; k < widget.bodyWidgets[j].childWidgets.length; k++) {\n                        var footChild = widget.bodyWidgets[j].childWidgets[k];\n                        if (footChild instanceof Widget && footChild.y <= point.y\n                            && (footChild.y + footChild.height) >= point.y) {\n                            if (footChild instanceof ParagraphWidget) {\n                                return this.getLineWidgetParaWidget(footChild, point);\n                            }\n                            else {\n                                return this.getLineWidgetTableWidget(footChild, point);\n                            }\n                        }\n                    }\n                }\n                else {\n                    var bodyWidget = widget.bodyWidgets[j];\n                    if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width >= point.x && bodyWidget.firstChild.x <= point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n                        selectionBody = bodyWidget;\n                    }\n                    else if (bodyWidget.firstChild.x + bodyWidget.sectionFormat.columns[bodyWidget.columnIndex].width < point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y) {\n                        selectionBody = bodyWidget;\n                    }\n                    else if (widget.x > point.x && bodyWidget.firstChild.y <= point.y && this.documentHelper.layout.getNextWidgetHeight(bodyWidget) >= point.y && !isFit) {\n                        selectionBody = bodyWidget;\n                        isFit = true;\n                    }\n                    if (j === widget.bodyWidgets.length - 1 && !isNullOrUndefined(selectionBody)) {\n                        for (var k = 0; k < selectionBody.childWidgets.length; k++) {\n                            var footChild = selectionBody.childWidgets[k];\n                            if (footChild instanceof Widget && footChild.y <= point.y\n                                && (footChild.y + footChild.height) >= point.y) {\n                                if (footChild instanceof ParagraphWidget) {\n                                    return this.getLineWidgetParaWidget(footChild, point);\n                                }\n                                else {\n                                    return this.getLineWidgetTableWidget(footChild, point);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var childWidget = widget.childWidgets[i];\n            if (childWidget instanceof FootNoteWidget) {\n                return childWidget[i];\n            }\n            else {\n                if (childWidget instanceof Widget && childWidget.y <= point.y\n                    && (childWidget.y + childWidget.height) >= point.y) {\n                    if (childWidget instanceof ParagraphWidget) {\n                        // if ((childWidget as Widget).x <= point.x\n                        // && ((childWidget as Widget).x + (childWidget as Widget).width) >= point.x) {\n                        return this.getLineWidgetParaWidget(childWidget, point);\n                        // }// return this.getLineWidgetParaWidget((childWidget as ParagraphWidget), point);\n                    }\n                    else {\n                        var table = childWidget;\n                        if (table.wrapTextAround) {\n                            continue;\n                        }\n                        return this.getLineWidgetTableWidget(table, point);\n                    }\n                }\n            }\n        }\n        var line = undefined;\n        if (isGetFirstChild) {\n            if (widget.childWidgets.length > 0) {\n                var firstChild = widget.childWidgets[0];\n                if (firstChild instanceof Widget && firstChild.y <= point.y) {\n                    if (widget.childWidgets[widget.childWidgets.length - 1] instanceof ParagraphWidget) {\n                        for (var i = 0; i < widget.childWidgets.length; i++) {\n                            line = this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n                        }\n                    }\n                    else {\n                        for (var i = 0; i < widget.childWidgets.length; i++) {\n                            line = this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n                        }\n                    }\n                }\n                else {\n                    var childWidget = undefined;\n                    if (firstChild instanceof Widget) {\n                        childWidget = firstChild;\n                    }\n                    if (!isNullOrUndefined(childWidget)) {\n                        if (childWidget instanceof ParagraphWidget) {\n                            line = this.getLineWidgetParaWidget(firstChild, point);\n                        }\n                        else {\n                            line = this.getLineWidgetTableWidget(firstChild, point);\n                        }\n                    }\n                }\n            }\n        }\n        return line;\n    };\n    //ParagraphWidget\n    /**\n     * Get line widget from paragraph widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetParaWidget = function (widget, point) {\n        var childWidgets = widget.childWidgets;\n        var top = widget.y;\n        for (var i = 0; i < childWidgets.length; i++) {\n            var line = childWidgets[i];\n            top += line.marginTop;\n            var lineTotalHeight = line.height;\n            if (line.nextLine && line.nextLine.marginTop > 0) {\n                lineTotalHeight += line.nextLine.marginTop;\n            }\n            if (top <= point.y\n                && (top + lineTotalHeight) >= point.y) {\n                return line;\n            }\n            top += line.height;\n        }\n        var lineWidget = undefined;\n        if (childWidgets.length > 0) {\n            if (widget.y <= point.y) {\n                lineWidget = childWidgets[childWidgets.length - 1];\n            }\n            else {\n                lineWidget = childWidgets[0];\n            }\n        }\n        return lineWidget;\n    };\n    Selection.prototype.highlightParagraph = function (widget, startIndex, endLine, endElement, endIndex) {\n        var top = 0;\n        var width = 0;\n        var isRtlText = false;\n        if (widget.paragraphFormat.bidi && endLine.children.indexOf(endElement) > 0) {\n            endElement = endLine.children[0];\n        }\n        for (var i = startIndex; i < widget.childWidgets.length; i++) {\n            var line = widget.childWidgets[i];\n            if (i === startIndex) {\n                top = this.getTop(line);\n            }\n            else {\n                top += line.marginTop;\n            }\n            if (endElement instanceof TextElementBox) {\n                isRtlText = endElement.isRightToLeft;\n            }\n            var left = this.getLeft(line);\n            if (line === endLine) {\n                //Selection ends in current line.\n                var right = 0;\n                // highlighting approach for normal and rtl text.\n                if (isRtlText || widget.bidi) {\n                    var elementBoxCollection = this.getElementsBackward(line, endElement, endElement, widget.bidi);\n                    for (var i_2 = 0; i_2 < elementBoxCollection.length; i_2++) {\n                        var element = elementBoxCollection[i_2];\n                        var elementIsRTL = false;\n                        if (element === endElement) {\n                            right = this.getLeftInternal(line, element, element.length);\n                        }\n                        else {\n                            var index = element instanceof TextElementBox ? element.length : 1;\n                            right = this.getLeftInternal(line, element, index);\n                        }\n                        left = this.getLeftInternal(line, element, 0);\n                        if (element instanceof TextElementBox) {\n                            elementIsRTL = element.isRightToLeft;\n                        }\n                        width = Math.abs(right - left);\n                        // Handled the paragraph mark highliting as special case.\n                        if (element === endElement && element instanceof TextElementBox && endIndex > element.length) {\n                            var paragraphMarkWidth = this.documentHelper.textHelper.getParagraphMarkSize(element.line.paragraph.characterFormat).Width;\n                            if (!widget.bidi && elementIsRTL) {\n                                right += paragraphMarkWidth;\n                            }\n                            else if (widget.bidi && !elementIsRTL) { // Paragrph and Selection ends in normal text\n                                width -= paragraphMarkWidth;\n                                // Highlight the element.\n                                this.createHighlightBorder(line, width, left, top, true);\n                                // Highlight the paragraph mark of Bidi paragrph.\n                                left = this.getLineStartLeft(line) - paragraphMarkWidth;\n                                this.createHighlightBorder(line, paragraphMarkWidth, left, top, true);\n                                // continue to next element.\n                                continue;\n                            }\n                        }\n                        this.createHighlightBorder(line, width, elementIsRTL ? right : left, top, true);\n                    }\n                    return;\n                }\n                else {\n                    right = this.getLeftInternal(endLine, endElement, endIndex);\n                    width = Math.abs(right - left);\n                    this.createHighlightBorder(line, width, isRtlText ? right : left, top, false);\n                    return;\n                }\n            }\n            else {\n                width = this.getWidth(line, true) - (left - widget.x);\n                // Highlight the paragrph mark for Bidi paragrph.\n                if (widget.bidi && line.isLastLine()) {\n                    left -= this.documentHelper.textHelper.getParagraphMarkSize(widget.characterFormat).Width;\n                }\n                this.createHighlightBorder(line, width, left, top, false);\n                top += line.height;\n            }\n        }\n    };\n    //Table Widget\n    /**\n     * Get line widget form table widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetTableWidget = function (widget, point) {\n        var lineWidget = undefined;\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            //Removed the height condition check to handle the vertically merged cells.\n            var childWidget = widget.childWidgets[i];\n            if (childWidget instanceof TableRowWidget && childWidget.y <= point.y) {\n                if (childWidget.rowFormat.heightType === 'Exactly' &&\n                    (childWidget.y + HelperMethods.convertPointToPixel(childWidget.rowFormat.height) < point.y)) {\n                    continue;\n                }\n                lineWidget = this.getLineWidgetRowWidget(childWidget, point);\n                var cellWidget = undefined;\n                if (!isNullOrUndefined(lineWidget) && lineWidget.paragraph.containerWidget instanceof TableCellWidget) {\n                    cellWidget = lineWidget.paragraph.containerWidget;\n                }\n                var cellSpacing = 0;\n                var rowSpan = 0;\n                if (!isNullOrUndefined(cellWidget)) {\n                    var tableWidget = cellWidget.ownerRow.containerWidget;\n                    cellSpacing = HelperMethods.convertPointToPixel(tableWidget.tableFormat.cellSpacing);\n                    rowSpan = cellWidget.cellFormat.rowSpan;\n                }\n                var leftCellSpacing = 0;\n                var rightCellSpacing = 0;\n                var topCellSpacing = 0;\n                var bottomCellSpacing = 0;\n                if (cellSpacing > 0) {\n                    leftCellSpacing = cellWidget.cellIndex === 0 ? cellSpacing : cellSpacing / 2;\n                    rightCellSpacing = cellWidget.cellIndex === cellWidget.ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n                    var rowWidget = undefined;\n                    if (cellWidget.containerWidget instanceof TableRowWidget) {\n                        rowWidget = cellWidget.containerWidget;\n                    }\n                    var tableWidget = undefined;\n                    if (cellWidget.containerWidget.containerWidget instanceof TableWidget) {\n                        tableWidget = cellWidget.containerWidget.containerWidget;\n                    }\n                    if (!isNullOrUndefined(rowWidget) && !isNullOrUndefined(tableWidget)) {\n                        topCellSpacing = cellWidget.ownerRow.rowIndex === 0 ? cellSpacing : cellSpacing / 2;\n                        if (cellWidget.ownerRow.rowIndex + rowSpan === cellWidget.ownerTable.childWidgets.length) {\n                            bottomCellSpacing = cellSpacing;\n                        }\n                        else {\n                            bottomCellSpacing = cellSpacing / 2;\n                        }\n                    }\n                }\n                if ((!isNullOrUndefined(lineWidget) && lineWidget.paragraph.x <= point.x\n                    && lineWidget.paragraph.x + lineWidget.width >= point.x\n                    && lineWidget.paragraph.y <= point.y && this.getTop(lineWidget) + lineWidget.height >= point.y)\n                    || (!isNullOrUndefined(cellWidget) && cellWidget.x - cellWidget.margin.left - leftCellSpacing <= point.x\n                        && cellWidget.x + cellWidget.width + cellWidget.margin.right + rightCellSpacing >= point.x\n                        && cellWidget.y - cellWidget.margin.top - topCellSpacing <= point.y\n                        && cellWidget.y + cellWidget.height + cellWidget.margin.bottom + bottomCellSpacing >= point.y)) {\n                    break;\n                }\n            }\n        }\n        return lineWidget;\n    };\n    //TableRowWidget\n    /**\n     * Get line widget fom row\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetRowWidget = function (widget, point) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            var cellSpacing = 0;\n            cellSpacing = HelperMethods.convertPointToPixel(widget.ownerTable.tableFormat.cellSpacing);\n            var leftCellSpacing = 0;\n            var rightCellSpacing = 0;\n            if (cellSpacing > 0) {\n                leftCellSpacing = widget.childWidgets[i].columnIndex === 0 ? cellSpacing : cellSpacing / 2;\n                rightCellSpacing = widget.childWidgets[i].cellIndex === widget.childWidgets[i].ownerRow.childWidgets.length - 1 ? cellSpacing : cellSpacing / 2;\n            }\n            if (widget.childWidgets[i].x -\n                widget.childWidgets[i].margin.left - leftCellSpacing <= point.x && (widget.childWidgets[i].x +\n                widget.childWidgets[i].width) + widget.childWidgets[i].margin.right + rightCellSpacing >= point.x) {\n                return this.getLineWidgetCellWidget(widget.childWidgets[i], point);\n            }\n        }\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            if (widget.childWidgets[0].x <= point.x) {\n                lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n            }\n            else {\n                lineWidget = this.getLineWidgetCellWidget(widget.childWidgets[0], point);\n            }\n        }\n        return lineWidget;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getFirstBlock = function (cell) {\n        if (cell.childWidgets.length > 0) {\n            return cell.childWidgets[0];\n        }\n        return undefined;\n    };\n    //Table Cell Widget\n    /**\n     * Highlight selected cell widget\n     *\n     * @private\n     */\n    Selection.prototype.highlightCellWidget = function (widget) {\n        var widgets = [];\n        if (widget.previousSplitWidget || widget.nextSplitWidget) {\n            widgets = widget.getSplitWidgets();\n        }\n        else {\n            widgets.push(widget);\n        }\n        for (var i = 0; i < widgets.length; i++) {\n            widget = widgets[i];\n            //Clears Selection highlight of the child widgets.\n            this.clearChildSelectionHighlight(widget);\n            //Highlights the entire cell.\n            this.createHighlightBorderInsideTable(widget);\n        }\n    };\n    /**\n     * Clear selection highlight\n     *\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlight = function (widget) {\n        if (this.selectedWidgets.containsKey(widget)) {\n            this.removeSelectionHighlight(widget);\n            this.selectedWidgets.remove(widget);\n        }\n    };\n    /**\n     * Get line widget from cell widget\n     *\n     * @private\n     */\n    Selection.prototype.getLineWidgetCellWidget = function (widget, point) {\n        for (var i = 0; i < widget.childWidgets.length; i++) {\n            if (widget.childWidgets[i].y <= point.y\n                && (widget.childWidgets[i].y + widget.childWidgets[i].height) >= point.y) {\n                if (widget.childWidgets[i] instanceof ParagraphWidget) {\n                    return this.getLineWidgetParaWidget(widget.childWidgets[i], point);\n                }\n                else {\n                    return this.getLineWidgetTableWidget(widget.childWidgets[i], point);\n                }\n            }\n        }\n        var lineWidget = undefined;\n        if (widget.childWidgets.length > 0) {\n            if (widget.childWidgets[0].y - widget.margin.top <= point.y) {\n                if (widget.childWidgets[widget.childWidgets.length - 1] instanceof ParagraphWidget) {\n                    lineWidget = this.getLineWidgetParaWidget(widget.childWidgets[widget.childWidgets.length - 1], point);\n                }\n                else {\n                    lineWidget = this.getLineWidgetTableWidget(widget.childWidgets[0], point);\n                }\n            }\n        }\n        return lineWidget;\n    };\n    //LineWidget\n    /**\n     * update text position\n     *\n     * @private\n     */\n    Selection.prototype.updateTextPosition = function (widget, point) {\n        var caretPosition = point;\n        var element = undefined;\n        var index = 0;\n        var isImageSelected = false;\n        if (this.owner.enableHeaderAndFooter) {\n            var headerFooterWidget = this.start.paragraph.bodyWidget;\n            if (headerFooterWidget.headerFooterType.indexOf('Header') != -1) {\n                this.comparePageWidthAndMargins(headerFooterWidget.page.headerWidget, headerFooterWidget.page);\n            }\n            else {\n                this.comparePageWidthAndMargins(headerFooterWidget.page.footerWidget, headerFooterWidget.page);\n            }\n        }\n        var isImageSelectedObj = this.updateTextPositionIn(widget, element, index, point, false);\n        if (!isNullOrUndefined(isImageSelectedObj)) {\n            element = isImageSelectedObj.element;\n            index = isImageSelectedObj.index;\n            caretPosition = isImageSelectedObj.caretPosition;\n            isImageSelected = isImageSelectedObj.isImageSelected;\n            this.isImageSelected = isImageSelected;\n        }\n        if (isImageSelected) {\n            this.selectInternal(widget, element, index, caretPosition);\n            if (index === 0) {\n                this.extendForward();\n            }\n            else {\n                this.extendBackward();\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.owner.imageResizerModule)) {\n                this.owner.imageResizerModule.selectedImageWidget.clear();\n            }\n            this.selectInternal(widget, element, index, caretPosition);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateTextPositionIn = function (widget, inline, index, caretPosition, includeParagraphMark) {\n        var isImageSelected = false;\n        var top = this.getTop(widget);\n        var left = widget.paragraph.x;\n        var elementValues = this.getFirstElement(widget, left);\n        var element = elementValues.element;\n        var isRtlText = false;\n        var isParaBidi = false;\n        left = elementValues.left;\n        var children = widget.renderedElements;\n        if (isNullOrUndefined(element)) {\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var size = this.getParagraphMarkSize(widget.paragraph, topMargin, bottomMargin);\n            topMargin = size.topMargin;\n            bottomMargin = size.bottomMargin;\n            var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? (this.documentHelper.mouseDownOffset.x < left + size.width) : true;\n            if (selectParaMark && includeParagraphMark && caretPosition.x > left + size.width / 2) {\n                left += size.width;\n                if (children.length > 0) {\n                    inline = children[children.length - 1];\n                    index = inline.length;\n                }\n                index++;\n            }\n            else if (widget.paragraph.isEmpty() && widget.paragraph.bidi) {\n                left += size.width;\n            }\n            caretPosition = new Point(left, topMargin > 0 ? top + topMargin : top);\n        }\n        else {\n            if (!isNullOrUndefined(element)) {\n                if (caretPosition.x > left + element.margin.left || (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline')) {\n                    var isInInline = false;\n                    if (widget.paragraph.floatingElements.length > 0) {\n                        isInInline = this.documentHelper.checkPointIsInLine(widget, caretPosition);\n                    }\n                    for (var i = children.indexOf(element); i < children.length; i++) {\n                        element = children[i];\n                        if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline') {\n                            if (this.documentHelper.isInShapeBorder(element, caretPosition) &&\n                                !this.documentHelper.isSelectionChangedOnMouseMoved && !isInInline) {\n                                left = element.x;\n                                top = element.y;\n                                break;\n                            }\n                            continue;\n                        }\n                        var isCurrentParaBidi = false;\n                        if (element instanceof ListTextElementBox || element instanceof TextElementBox) {\n                            isCurrentParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                        }\n                        if (caretPosition.x < left + element.margin.left + element.width + element.padding.left || i === children.length - 1\n                            || ((children[i + 1] instanceof ListTextElementBox) && isCurrentParaBidi)) {\n                            break;\n                        }\n                        left += element.margin.left + element.width + element.padding.left;\n                    }\n                    if (element instanceof TextElementBox) {\n                        isRtlText = element.isRightToLeft;\n                        isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                    }\n                    if (caretPosition.x > left + element.margin.left + element.width + element.padding.left) {\n                        //Line End\n                        index = element instanceof TextElementBox ? element.length : 1;\n                        if (isRtlText && isParaBidi) {\n                            index = 0;\n                        }\n                        if ((element instanceof TextElementBox && (element.text !== \"\\v\" && element.text !== '\\f' && element.text !== String.fromCharCode(14))) || includeParagraphMark) {\n                            left += element.margin.left + element.width + element.padding.left;\n                        }\n                    }\n                    else if (element instanceof TextElementBox) {\n                        if (element instanceof TextElementBox && isRtlText) {\n                            left += element.width + element.padding.left;\n                        }\n                        var x = 0;\n                        if (isRtlText) {\n                            x = (left + element.margin.left) - caretPosition.x;\n                        }\n                        else {\n                            x = caretPosition.x - left - element.margin.left - element.padding.left;\n                        }\n                        left += (element.margin.left + element.padding.left);\n                        var prevWidth = 0;\n                        var charIndex = 0;\n                        for (var i = 1; i <= element.length; i++) {\n                            var width = 0;\n                            if (i === element.length) {\n                                width = element.width + element.padding.left;\n                            }\n                            else {\n                                width = this.documentHelper.textHelper.getWidth(element.text.substr(0, i), element.characterFormat, element.scriptType);\n                                element.trimEndWidth = width;\n                            }\n                            if (x < width || i === element.length) {\n                                //Updates exact left position of the caret.\n                                var charWidth = width - prevWidth;\n                                if (x - prevWidth > charWidth / 2) {\n                                    if (isRtlText) {\n                                        left -= width;\n                                    }\n                                    else {\n                                        left += width;\n                                    }\n                                    charIndex = i;\n                                }\n                                else {\n                                    if (isRtlText) {\n                                        left -= prevWidth;\n                                    }\n                                    else {\n                                        left += prevWidth;\n                                    }\n                                    charIndex = i - 1;\n                                    if (i === 1 && element !== children[0] && !(children[0] instanceof ShapeBase &&\n                                        children[0].textWrappingStyle !== 'Inline')) {\n                                        var curIndex = children.indexOf(element);\n                                        if (!(children[curIndex - 1] instanceof ListTextElementBox) && !isRtlText) {\n                                            element = children[curIndex - 1];\n                                            if (element instanceof ShapeBase && element.textWrappingStyle !== 'Inline' && charIndex == 0 && !isNullOrUndefined(element.previousElement)) {\n                                                element = children[children.indexOf(element) - 1];\n                                            }\n                                            charIndex = element instanceof TextElementBox ? element.length : 1;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                            prevWidth = width;\n                        }\n                        index = charIndex;\n                    }\n                    else {\n                        isImageSelected = element instanceof ImageElementBox || element instanceof ShapeElementBox;\n                        if (caretPosition.x - left - element.margin.left > element.width / 2) {\n                            index = 1;\n                            left += (element.margin.left + element.width + element.padding.left);\n                        }\n                        else if (element !== children[0] && !isImageSelected) {\n                            var curIndex = children.indexOf(element);\n                            if (!(children[curIndex - 1] instanceof ListTextElementBox)) {\n                                element = children[curIndex - 1];\n                                index = element instanceof TextElementBox ? element.length : 1;\n                            }\n                        }\n                    }\n                    if (element instanceof TextElementBox && (element.text === '\\v' || element.text === '\\f' || element.text === String.fromCharCode(14))) {\n                        index = 0;\n                    }\n                }\n                else {\n                    isRtlText = element.isRightToLeft;\n                    isParaBidi = element.line.paragraph.paragraphFormat.bidi;\n                    if (element instanceof TextElementBox && (isParaBidi || isRtlText) && caretPosition.x < left + element.margin.left + element.width + element.padding.left) {\n                        index = this.getTextLength(element.line, element) + element.length;\n                    }\n                    else {\n                        index = this.getTextLength(element.line, element);\n                    }\n                    left += element.margin.left;\n                }\n                if (element instanceof TextElementBox) {\n                    top += element.margin.top > 0 ? element.margin.top : 0;\n                }\n                else {\n                    var textMetrics = this.documentHelper.textHelper.getHeight(element.characterFormat); //for ascent and descent\n                    var height = element.height;\n                    if (element instanceof BookmarkElementBox && !this.documentHelper.layout.hasValidElement(element.line.paragraph)) {\n                        height = textMetrics.Height; //after text helper class\n                    }\n                    top += element.margin.top + height - textMetrics.BaselineOffset;\n                }\n                inline = element;\n                if (inline instanceof FieldElementBox && inline.fieldType === 2 && !isNullOrUndefined(inline.fieldBegin)) {\n                    inline = inline.fieldBegin;\n                    index = 0;\n                }\n                if (inline instanceof EditRangeEndElementBox) {\n                    index = 0;\n                }\n                if (!isNullOrUndefined(inline.previousElement) && inline.previousElement instanceof ShapeBase && inline.previousElement.textWrappingStyle !== 'Inline' && index == 0) {\n                    inline = inline.previousElement;\n                }\n                var inlineObj = this.validateTextPosition(inline, index);\n                inline = inlineObj.element;\n                index = inlineObj.index;\n                var isParagraphEnd = isNullOrUndefined(inline.nextNode) && index === inline.length;\n                var isLineEnd = inline.line.isEndsWithLineBreak\n                    && inline instanceof TextElementBox && inline.text === '\\v';\n                if (includeParagraphMark && inline.nextNode instanceof FieldElementBox && index === inline.length) {\n                    isParagraphEnd = this.isLastRenderedInline(inline, index);\n                }\n                if (includeParagraphMark && isParagraphEnd || isLineEnd) {\n                    var width = 0;\n                    //Include width of Paragraph mark.\n                    if (isParagraphEnd) {\n                        width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n                        var selectParaMark = this.documentHelper.mouseDownOffset.y >= top && this.documentHelper.mouseDownOffset.y < top + widget.height ? (this.documentHelper.mouseDownOffset.x < left + width) : true;\n                        if (selectParaMark && caretPosition.x > left + width / 2) {\n                            left += width;\n                            index = inline.length + 1;\n                        }\n                        //Include width of line break mark.\n                    }\n                    else if (isLineEnd) {\n                        width = element.width + element.padding.left;\n                        left += width;\n                        // index = inline.length;\n                    }\n                }\n                caretPosition = new Point(left, top);\n            }\n        }\n        return {\n            'element': inline,\n            'index': index,\n            'caretPosition': caretPosition,\n            'isImageSelected': isImageSelected\n        };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.checkAllFloatingElements = function (widget, caretPosition) {\n        var bodyWidget;\n        var isShapeSelected = false;\n        var isInShapeBorder = false;\n        var floatElement;\n        if (!isNullOrUndefined(widget)) {\n            bodyWidget = widget.paragraph.bodyWidget;\n            isShapeSelected = false;\n            isInShapeBorder = false;\n            for (var i = 0; i < bodyWidget.floatingElements.length; i++) {\n                if (bodyWidget.floatingElements[i] instanceof TableWidget) {\n                    continue;\n                }\n                floatElement = bodyWidget.floatingElements[i];\n                if (caretPosition.x < floatElement.x + floatElement.margin.left + floatElement.width && caretPosition.x > floatElement.x\n                    && caretPosition.y < floatElement.y + floatElement.margin.top + floatElement.height && caretPosition.y > floatElement.y) {\n                    isShapeSelected = true;\n                    if (this.documentHelper.isInShapeBorder(floatElement, caretPosition)) {\n                        isInShapeBorder = true;\n                    }\n                    break;\n                }\n            }\n        }\n        return {\n            'element': floatElement,\n            'caretPosition': caretPosition,\n            'isShapeSelected': isShapeSelected,\n            'isInShapeBorder': isInShapeBorder\n        };\n    };\n    /**\n     * Get text length if the line widget\n     *\n     * @private\n     */\n    Selection.prototype.getTextLength = function (widget, element) {\n        var length = 0;\n        var renderedElement = widget.renderedElements;\n        var count = renderedElement.indexOf(element);\n        if (renderedElement.length > 0 && renderedElement[0] instanceof ListTextElementBox) {\n            if (renderedElement[1] instanceof ListTextElementBox) {\n                count -= 2;\n            }\n            else {\n                count -= 1;\n            }\n        }\n        for (var i = 1; i < count; i++) {\n            length += renderedElement[i].length;\n        }\n        return length;\n    };\n    /**\n     * Get Line widget left\n     *\n     * @private\n     */\n    Selection.prototype.getLeft = function (widget) {\n        var left = widget.paragraph.x;\n        var paragraphFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi && !(paragraphFormat.textAlignment === 'Right')) {\n            left += HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n        }\n        var renderedElements = widget.renderedElements;\n        for (var i = 0; i < renderedElements.length; i++) {\n            var element = renderedElements[i];\n            if (element instanceof ListTextElementBox && !paragraphFormat.bidi) { //after list implementation\n                if (i === 0) {\n                    left += element.margin.left + element.width;\n                }\n                else {\n                    left += element.width;\n                }\n            }\n            else {\n                left += element.margin.left;\n                break;\n            }\n        }\n        return left;\n    };\n    /**\n     * Get line widget top\n     *\n     * @private\n     */\n    Selection.prototype.getTop = function (widget) {\n        var top = widget.paragraph.y;\n        var count = widget.paragraph.childWidgets.indexOf(widget);\n        for (var i = 0; i < count; i++) {\n            var line = widget.paragraph.childWidgets[i];\n            top = (top + line.height + line.marginTop);\n        }\n        top += widget.marginTop;\n        return top;\n    };\n    /**\n     * Get first element the widget\n     *\n     * @private\n     */\n    Selection.prototype.getFirstElement = function (widget, left) {\n        var firstLineIndent = 0;\n        if (this.isParagraphFirstLine(widget) && !widget.paragraph.paragraphFormat.bidi) {\n            firstLineIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n        }\n        left += firstLineIndent;\n        var element = undefined;\n        var renderedChild = widget.renderedElements;\n        for (var i = 0; i < renderedChild.length; i++) {\n            element = renderedChild[i];\n            if (element instanceof ListTextElementBox || element instanceof CommentCharacterElementBox) {\n                if (widget.paragraph.paragraphFormat.bidi) {\n                    left += element.margin.left;\n                    element = undefined;\n                    break;\n                }\n                left += element.margin.left + element.width;\n                element = undefined;\n                // }\n                //  else if (element instanceof FieldElementBox || element instanceof BookmarkElementBox\n                //     || (element.nextNode instanceof FieldElementBox && ((element.nextNode as FieldElementBox).fieldType === 2))) {\n                //     element = undefined;\n            }\n            else {\n                break;\n            }\n        }\n        return { 'element': element, 'left': left };\n    };\n    /**\n     * Return inline index\n     *\n     * @private\n     */\n    //ElementBox\n    Selection.prototype.getIndexInInline = function (elementBox) {\n        var indexInInline = 0;\n        if (elementBox instanceof TextElementBox) {\n            var count = elementBox.line.children.indexOf(elementBox);\n            for (var i = 0; i < count; i++) {\n                var element = elementBox.line.children[i];\n                if (element instanceof FieldElementBox || element instanceof ListTextElementBox) {\n                    continue;\n                }\n                indexInInline += element.length;\n            }\n        }\n        return indexInInline;\n    };\n    /**\n     * Return true if widget is first inline of paragraph\n     *\n     * @private\n     */\n    Selection.prototype.isParagraphFirstLine = function (widget) {\n        if (isNullOrUndefined(widget.paragraph.previousSplitWidget) &&\n            widget === widget.paragraph.firstChild) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param widget\n     * @private\n     */\n    Selection.prototype.isParagraphLastLine = function (widget) {\n        if (isNullOrUndefined(widget.paragraph.nextSplitWidget)\n            && widget === widget.paragraph.lastChild) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Return line widget width\n     *\n     * @private\n     */\n    Selection.prototype.getWidth = function (widget, includeParagraphMark) {\n        var width = 0;\n        var paraFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n            width += HelperMethods.convertPointToPixel(paraFormat.firstLineIndent);\n        }\n        for (var i = 0; i < widget.children.length; i++) {\n            var elementBox = widget.children[i];\n            if (elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            width += (elementBox.margin.left + elementBox.width + elementBox.padding.left);\n        }\n        if (includeParagraphMark && widget.paragraph.childWidgets.indexOf(widget) === widget.paragraph.childWidgets.length - 1\n            && isNullOrUndefined(widget.paragraph.nextSplitWidget)) {\n            width += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n        }\n        return width;\n    };\n    /**\n     * Return line widget left\n     *\n     * @private\n     */\n    Selection.prototype.getLeftInternal = function (widget, elementBox, index) {\n        var left = widget.paragraph.x;\n        var paraFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paraFormat.bidi) {\n            left += HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.firstLineIndent);\n        }\n        var renderedWidget = widget.renderedElements;\n        var count = renderedWidget.indexOf(elementBox);\n        if ((renderedWidget.length === 1 && renderedWidget[0] instanceof ListTextElementBox) || (renderedWidget.length === 2\n            && renderedWidget[0] instanceof ListTextElementBox && renderedWidget[1] instanceof ListTextElementBox)) {\n            count = renderedWidget.length;\n        }\n        var isFieldCode = false;\n        for (var i = 0; i < count; i++) {\n            var widgetInternal = renderedWidget[i];\n            if (widgetInternal instanceof FieldElementBox && widgetInternal.fieldType === 2) {\n                isFieldCode = false;\n            }\n            if (isFieldCode) {\n                continue;\n            }\n            if (widgetInternal instanceof ShapeBase && widgetInternal.textWrappingStyle !== 'Inline') {\n                continue;\n            }\n            if (i === 1 && widgetInternal instanceof ListTextElementBox) {\n                left += widgetInternal.width;\n            }\n            else if (widgetInternal instanceof TabElementBox && elementBox === widgetInternal) {\n                left += widgetInternal.margin.left;\n            }\n            else {\n                left += widgetInternal.margin.left + widgetInternal.width + widgetInternal.padding.left;\n            }\n            if (widgetInternal instanceof FieldElementBox && widgetInternal.fieldType === 0) {\n                isFieldCode = true;\n            }\n        }\n        var isRtlText = false;\n        var isParaBidi = widget.paragraph.bidi;\n        if (!isNullOrUndefined(elementBox)) {\n            isRtlText = elementBox.characterRange === CharacterRangeType.RightToLeft;\n            isParaBidi = elementBox.line.paragraph.paragraphFormat.bidi;\n            left += (elementBox.margin.left + elementBox.padding.left);\n            if (elementBox instanceof ShapeBase && !isNullOrUndefined(elementBox.nextElement)) {\n                left += (elementBox.nextElement.margin.left + elementBox.nextElement.padding.left);\n            }\n            if (isRtlText || (this.documentHelper.moveCaretPosition === 1 && !isRtlText && isParaBidi)) {\n                left += elementBox.width;\n            }\n        }\n        var width = 0;\n        if (elementBox instanceof TextElementBox) {\n            if ((this.documentHelper.moveCaretPosition !== 0) && (isParaBidi || isRtlText)) {\n                if ((isRtlText && isParaBidi && this.documentHelper.moveCaretPosition === 2)\n                    || (isRtlText && !isParaBidi && this.documentHelper.moveCaretPosition === 1)) {\n                    left -= elementBox.width;\n                }\n                this.documentHelper.moveCaretPosition = 0;\n                return left;\n            }\n            if (index === elementBox.length && !isRtlText) {\n                left += elementBox.width;\n            }\n            else if (index > elementBox.length) {\n                width = this.documentHelper.textHelper.getParagraphMarkWidth(elementBox.line.paragraph.characterFormat);\n                if (isRtlText) {\n                    left -= elementBox.width + width;\n                }\n                else {\n                    left += elementBox.width + width;\n                }\n            }\n            else {\n                if (index === elementBox.length && isRtlText && paraFormat.textAlignment === 'Justify') {\n                    width = elementBox.width;\n                }\n                else {\n                    width = this.documentHelper.textHelper.getWidth(elementBox.text.substr(0, index), elementBox.characterFormat, elementBox.scriptType);\n                }\n                if (isRtlText) {\n                    left -= width;\n                }\n                else {\n                    left += width;\n                }\n            }\n            this.documentHelper.moveCaretPosition = 0;\n        }\n        else if (index > 0) {\n            if (!isNullOrUndefined(elementBox) && !(elementBox instanceof ListTextElementBox)) {\n                if (!(elementBox instanceof ShapeBase && elementBox.textWrappingStyle !== 'Inline')) {\n                    left += elementBox.width;\n                }\n                if (index === 2) {\n                    var paragraph = elementBox.line.paragraph;\n                    left += this.documentHelper.textHelper.getParagraphMarkWidth(paragraph.characterFormat);\n                }\n            }\n            else {\n                left += this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n            }\n        }\n        return left;\n    };\n    /**\n     * Return line widget start offset\n     * @private\n     */\n    Selection.prototype.getLineStartLeft = function (widget) {\n        var left = widget.paragraph.x;\n        var paragraphFormat = widget.paragraph.paragraphFormat;\n        if (this.isParagraphFirstLine(widget) && !paragraphFormat.bidi) {\n            left += HelperMethods.convertPointToPixel(paragraphFormat.firstLineIndent);\n        }\n        if (widget.children.length > 0) {\n            left += widget.children[0].margin.left;\n        }\n        return left;\n    };\n    /**\n     * Update text position\n     * @private\n     */\n    Selection.prototype.updateTextPositionWidget = function (widget, point, textPosition, includeParagraphMark) {\n        var caretPosition = point;\n        var inline = undefined;\n        var index = 0;\n        var updatePositionObj;\n        updatePositionObj = this.updateTextPositionIn(widget, inline, index, caretPosition, includeParagraphMark);\n        inline = updatePositionObj.element;\n        index = updatePositionObj.index;\n        caretPosition = updatePositionObj.caretPosition;\n        textPosition.setPositionForSelection(widget, inline, index, caretPosition);\n    };\n    /**\n     * Clear selection highlight\n     * @private\n     */\n    Selection.prototype.clearSelectionHighlightLineWidget = function (widget) {\n        if (!isNullOrUndefined(this.owner) && this.selectedWidgets.length > 0) {\n            this.clearSelectionHighlight(this);\n        }\n    };\n    /**\n     * Return first element from line widget\n     * @private\n     */\n    Selection.prototype.getFirstElementInternal = function (widget) {\n        var element = undefined;\n        var childLen = widget.children.length;\n        for (var i = 0; i < childLen; i++) {\n            element = widget.children[i];\n            if (element instanceof ListTextElementBox) {\n                element = undefined;\n            }\n            else {\n                break;\n            }\n        }\n        return element;\n    };\n    //Selection API    \n    /**\n     * Select content between given range\n     * @private\n     */\n    Selection.prototype.selectRange = function (startPosition, endPosition, isBookmark) {\n        this.start.setPositionInternal(startPosition);\n        this.end.setPositionInternal(endPosition);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true, true, isBookmark);\n    };\n    /**\n     * Selects current paragraph\n     * @private\n     */\n    Selection.prototype.selectParagraphInternal = function (paragraph, positionAtStart) {\n        var line;\n        if (!isNullOrUndefined(paragraph) && !isNullOrUndefined(paragraph.firstChild)) {\n            line = paragraph.firstChild;\n            if (positionAtStart) {\n                this.start.setPosition(line, positionAtStart);\n            }\n            else {\n                var endOffset = line.getEndOffset();\n                this.start.setPositionParagraph(line, endOffset);\n            }\n        }\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = this.start.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.setPositionForBlock = function (block, selectFirstBlock) {\n        var position;\n        if (block instanceof TableWidget) {\n            if (selectFirstBlock) {\n                block = this.documentHelper.getFirstParagraphInFirstCell(block);\n            }\n            else {\n                block = this.documentHelper.getLastParagraphInLastCell(block);\n            }\n        }\n        if (block instanceof ParagraphWidget) {\n            position = new TextPosition(this.owner);\n            if (selectFirstBlock) {\n                position.setPosition(block.firstChild, true);\n            }\n            else {\n                var line = block.lastChild;\n                position.setPositionParagraph(line, line.getEndOffset());\n            }\n        }\n        return position;\n    };\n    /**\n     * Select content in given text position\n     * @private\n     */\n    Selection.prototype.selectContent = function (textPosition, clearMultiSelection) {\n        if (isNullOrUndefined(textPosition)) {\n            throw new Error('textPosition is undefined.');\n        }\n        this.start.setPositionInternal(textPosition);\n        this.end.setPositionInternal(textPosition);\n        this.upDownSelectionLength = this.end.location.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * Select paragraph\n     * @private\n     */\n    Selection.prototype.selectInternal = function (lineWidget, element, index, physicalLocation) {\n        this.start.setPositionForSelection(lineWidget, element, index, physicalLocation);\n        this.end.setPositionInternal(this.start);\n        this.upDownSelectionLength = physicalLocation.x;\n        this.fireSelectionChanged(true);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.selects = function (lineWidget, offset, skipSelectionChange) {\n        this.documentHelper.clearSelectionHighlight();\n        this.start.setPositionForLineWidget(lineWidget, offset);\n        this.end.setPositionInternal(this.start);\n        if (!skipSelectionChange) {\n            this.fireSelectionChanged(true);\n        }\n    };\n    /**\n     * Select content between start and end position\n     * @private\n     */\n    Selection.prototype.selectPosition = function (startPosition, endPosition) {\n        if (isNullOrUndefined(startPosition) || isNullOrUndefined(endPosition)) {\n            throw new Error('TextPosition cannot be undefined');\n        }\n        if (isNullOrUndefined(startPosition.paragraph)\n            || startPosition.offset > this.getParagraphLength(startPosition.paragraph) + 1) {\n            throw new Error('Start TextPosition is not valid.');\n        }\n        if (isNullOrUndefined(endPosition.paragraph)\n            || endPosition.offset > this.getParagraphLength(endPosition.paragraph) + 1) {\n            throw new Error('End TextPosition is not valid.');\n        }\n        if (startPosition.isAtSamePosition(endPosition)) {\n            // Select start position.\n            this.selectRange(startPosition, startPosition);\n        }\n        else {\n            // If both text position exists within same comment or outside comment, and not at same position.\n            if (startPosition.isExistBefore(endPosition)) {\n                endPosition.validateForwardFieldSelection(startPosition.getHierarchicalIndexInternal(), endPosition.getHierarchicalIndexInternal());\n            }\n            else {\n                startPosition.validateForwardFieldSelection(endPosition.getHierarchicalIndexInternal(), startPosition.getHierarchicalIndexInternal());\n            }\n            this.selectRange(startPosition, endPosition);\n        }\n    };\n    /**\n     * Notify selection change event\n     * @private\n     */\n    Selection.prototype.fireSelectionChanged = function (isSelectionChanged, isKeyBoardNavigation, isBookmark) {\n        if (!this.isEmpty) {\n            if (this.isForward) {\n                this.start.updatePhysicalPosition(true);\n                this.end.updatePhysicalPosition(false);\n            }\n            else {\n                this.start.updatePhysicalPosition(false);\n                this.end.updatePhysicalPosition(true);\n            }\n        }\n        if (this.isModifyingSelectionInternally) {\n            return;\n        }\n        if (this.documentHelper.formFields.length > 0) {\n            this.currentFormField = this.getCurrentFormField();\n        }\n        else {\n            this.currentFormField = undefined;\n        }\n        if (!isNullOrUndefined(this.previousSelectedFormField) && isNullOrUndefined(this.previousSelectedFormField.fieldSeparator)) {\n            this.previousSelectedFormField = this.currentFormField;\n        }\n        if (!this.skipFormatRetrieval) {\n            this.retrieveCurrentFormatProperties();\n        }\n        this.documentHelper.clearSelectionHighlight();\n        this.hideToolTip();\n        if (this.owner.isLayoutEnabled && !this.owner.isShiftingEnabled) {\n            this.highlightSelection(true, isBookmark);\n        }\n        if (this.documentHelper.restrictEditingPane.isShowRestrictPane && !this.skipEditRangeRetrieval) {\n            this.documentHelper.restrictEditingPane.updateUserInformation();\n        }\n        if (isSelectionChanged) {\n            if (this.start.paragraph.isInHeaderFooter && !this.owner.enableHeaderAndFooter) {\n                this.owner.enableHeaderAndFooter = true;\n            }\n            else if (!this.start.paragraph.isInHeaderFooter && this.owner.enableHeaderAndFooter) {\n                this.owner.enableHeaderAndFooter = false;\n            }\n            this.owner.fireSelectionChange();\n        }\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n        if (this.documentHelper.isFormFillProtectedMode && isSelectionChanged) {\n            this.triggerFormFillEvent(isKeyBoardNavigation);\n            this.previousSelectedFormField = this.currentFormField;\n        }\n        if (this.owner.rulerHelper && this.owner.documentEditorSettings && this.owner.documentEditorSettings.showRuler &&\n            !this.owner.isReadOnlyMode) {\n            this.owner.rulerHelper.updateRuler(this.owner, false);\n        }\n    };\n    //Formats Retrieval\n    /**\n     * Retrieve all current selection format\n     * @private\n     */\n    Selection.prototype.retrieveCurrentFormatProperties = function () {\n        this.isRetrieveFormatting = true;\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        this.retrieveImageFormat(startPosition, endPosition);\n        this.retrieveCharacterFormat(startPosition, endPosition);\n        this.retrieveParagraphFormat(startPosition, endPosition);\n        this.retrieveSectionFormat(startPosition, endPosition);\n        this.retrieveTableFormat(startPosition, endPosition);\n        this.isRetrieveFormatting = false;\n        this.setCurrentContextType();\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.retrieveImageFormat = function (start, end) {\n        var image;\n        if (start.currentWidget === end.currentWidget && start.offset + 1 === end.offset) {\n            var elementInfo = end.currentWidget.getInline(end.offset, 0);\n            image = elementInfo.element;\n            var index = elementInfo.index;\n            if (image instanceof ImageElementBox) {\n                var startOffset = start.currentWidget.getOffset(image, 0);\n                if (startOffset !== start.offset) {\n                    image = undefined;\n                }\n            }\n        }\n        if (image instanceof ImageElementBox) {\n            this.imageFormat.copyImageFormat(image);\n        }\n        else {\n            this.imageFormat.clearImageFormat();\n        }\n    };\n    /**\n     * Gets the context type of previous character or element.\n     * @param isElement - Decides whether to get previous context type from element or character. By default, character.\n     * @returns Returns the context type of previous character or element.\n     */\n    Selection.prototype.getPreviousContextType = function (isElement) {\n        var contextType;\n        var start = this.start;\n        if (start.offset > 0) {\n            var element = start.currentWidget.getInline(start.offset, 0).element;\n            if (isElement) {\n                element = element.previousElement;\n            }\n            else {\n                element = start.currentWidget.getInline(start.offset - 1, 0).element;\n            }\n            contextType = this.getContextElement(element);\n            return contextType;\n        }\n        return undefined;\n    };\n    /**\n     * Gets the context type of next character or element.\n     * @param isElement - Decides whether to get next context type from element or character. By default, character.\n     * @return Returns the context type of next character or element.\n     */\n    Selection.prototype.getNextContextType = function (isElement) {\n        var contextType;\n        var start = this.start;\n        var element = start.currentWidget.getInline(start.offset, 0).element;\n        if (isElement && element.nextElement) {\n            element = element.nextElement;\n        }\n        else {\n            element = start.currentWidget.getInline(start.offset + 1, 0).element;\n        }\n        contextType = this.getContextElement(element);\n        return contextType;\n    };\n    Selection.prototype.getContextElement = function (element) {\n        if (element instanceof TextElementBox) {\n            return 'Text';\n        }\n        else if (element instanceof FieldElementBox || element instanceof FieldTextElementBox) {\n            return 'Field';\n        }\n        else if (element instanceof BookmarkElementBox) {\n            return 'Bookmark';\n        }\n        else if (element instanceof ImageElementBox) {\n            return 'Image';\n        }\n        else if (element instanceof ShapeElementBox) {\n            return 'Shape';\n        }\n        else if (element instanceof CommentElementBox || element instanceof CommentCharacterElementBox) {\n            return 'Comment';\n        }\n        else if (element instanceof ListTextElementBox) {\n            return 'List';\n        }\n        else if (element instanceof EditRangeStartElementBox || element instanceof EditRangeEndElementBox) {\n            return 'EditRange';\n        }\n        else {\n            return undefined;\n        }\n    };\n    Selection.prototype.setCurrentContextType = function () {\n        var contextIsinImage = this.imageFormat.image ? true : false;\n        var contextIsinTable = (isNullOrUndefined(this.tableFormat) || isNullOrUndefined(this.tableFormat.table)) ? false : true;\n        var style = this.start.paragraph.paragraphFormat.baseStyle;\n        if (style instanceof WParagraphStyle && style.name.toLowerCase().indexOf('toc') === 0) {\n            var tocField = this.getTocFieldInternal();\n            if (!isNullOrUndefined(tocField)) {\n                this.contextTypeInternal = 'TableOfContents';\n                return;\n            }\n        }\n        var currentRevision = this.getCurrentRevision();\n        if (!isNullOrUndefined(currentRevision) && this.owner.showRevisions) {\n            this.owner.trackChangesPane.currentSelectedRevision = currentRevision[0];\n            if (isNullOrUndefined(this.owner.documentHelper.currentSelectedComment)) {\n                this.owner.commentReviewPane.selectReviewTab('Changes');\n            }\n            this.owner.notify('reviewPane', { comment: this.owner.showComments, changes: true, isUserClosed: false });\n        }\n        else if (!isNullOrUndefined(this.owner.trackChangesPane.currentSelectedRevision)) {\n            this.owner.trackChangesPane.currentSelectedRevision = undefined;\n        }\n        if (this.start.paragraph.isInHeaderFooter) {\n            var isInHeader = this.start.paragraph.bodyWidget.headerFooterType.indexOf('Header') !== -1;\n            if (contextIsinTable) {\n                if (contextIsinImage) {\n                    this.contextTypeInternal = isInHeader ? 'HeaderTableImage' : 'FooterTableImage';\n                }\n                else {\n                    this.contextTypeInternal = isInHeader ? 'HeaderTableText' : 'FooterTableText';\n                }\n            }\n            else {\n                if (contextIsinImage) {\n                    this.contextTypeInternal = isInHeader ? 'HeaderImage' : 'FooterImage';\n                }\n                else {\n                    this.contextTypeInternal = isInHeader ? 'HeaderText' : 'FooterText';\n                }\n            }\n        }\n        else {\n            if (contextIsinTable) {\n                this.contextTypeInternal = contextIsinImage ? 'TableImage' : 'TableText';\n            }\n            else {\n                this.contextTypeInternal = contextIsinImage ? 'Image' : 'Text';\n            }\n        }\n    };\n    Selection.prototype.addItemRevisions = function (currentItem, isFromAccept) {\n        for (var i = 0; i < currentItem.revisions.length; i++) {\n            var currentRevision = currentItem.revisions[i];\n            this.selectRevision(currentRevision);\n            if (isFromAccept) {\n                currentRevision.accept();\n            }\n            else {\n                currentRevision.reject();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.hasRevisions = function () {\n        if (this.getCurrentRevision()) {\n            return true;\n        }\n        return false;\n    };\n    Selection.prototype.getCurrentRevision = function () {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        var elementInfo = start.currentWidget.getInline(start.offset, 0);\n        var currentElement = elementInfo.element;\n        var startPara = start.paragraph;\n        var nextOffsetElement = start.currentWidget.getInline(start.offset + 1, 0).element;\n        var eleEndPosition;\n        if (currentElement && currentElement === nextOffsetElement) {\n            var offset = currentElement.line.getOffset(currentElement, (currentElement.length));\n            eleEndPosition = new TextPosition(this.owner);\n            eleEndPosition.setPositionParagraph(currentElement.line, offset);\n            if (end.offset === eleEndPosition.offset && !isNullOrUndefined(currentElement.nextElement)) {\n                return undefined;\n            }\n        }\n        if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n            return currentElement.revisions;\n        }\n        if (startPara.isInsideTable) {\n            var cellWidget = startPara.associatedCell;\n            if (!isNullOrUndefined(cellWidget.ownerRow) && cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n                return cellWidget.ownerRow.rowFormat.revisions;\n            }\n        }\n        if (end.offset > end.paragraph.getLength()) {\n            if (end.paragraph.characterFormat.revisions.length > 0) {\n                return end.paragraph.characterFormat.revisions;\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.processLineRevisions = function (linewidget, isFromAccept) {\n        for (var i = 0; i < linewidget.children.length; i++) {\n            var element = linewidget.children[i];\n            if (element.revisions.length > 0) {\n                this.addItemRevisions(element, isFromAccept);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param isFromAccept\n     */\n    Selection.prototype.handleAcceptReject = function (isFromAccept) {\n        if (this.isEmpty) {\n            var elementInfo = this.start.currentWidget.getInline((this.start.offset + 1), 0);\n            var currentElement = elementInfo.element;\n            var startPara = this.start.paragraph;\n            if (!isNullOrUndefined(currentElement) && currentElement.revisions.length > 0) {\n                this.addItemRevisions(currentElement, isFromAccept);\n            }\n            if (startPara.isInsideTable) {\n                var cellWidget = startPara.associatedCell;\n                if (!isNullOrUndefined(cellWidget)) {\n                    if (cellWidget.ownerRow.rowFormat.revisions.length > 0) {\n                        this.addItemRevisions(cellWidget.ownerRow.rowFormat, isFromAccept);\n                    }\n                }\n                else if (!startPara.isEmpty()) {\n                    for (var i = 0; i < cellWidget.childWidgets.length; i++) {\n                        var paraWidget = cellWidget.childWidgets[i];\n                        for (var lineIndex = void 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                            var linewidget = paraWidget.childWidgets[lineIndex];\n                            this.processLineRevisions(linewidget, isFromAccept);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var revisions = this.getselectedRevisionElements();\n            for (var i = 0; i < revisions.length; i++) {\n                this.acceptReject(revisions[i], isFromAccept);\n            }\n        }\n    };\n    Selection.prototype.acceptReject = function (currentRevision, toAccept) {\n        this.selectRevision(currentRevision);\n        if (toAccept) {\n            currentRevision.accept();\n        }\n        else {\n            currentRevision.reject();\n        }\n    };\n    Selection.prototype.getselectedRevisionElements = function () {\n        var revisionCollec = [];\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        for (var i = 0; i < this.selectedWidgets.length; i++) {\n            var currentWidget = this.selectedWidgets.keys[i];\n            if (currentWidget instanceof LineWidget) {\n                revisionCollec = this.getSelectedLineRevisions(currentWidget, start, end, revisionCollec);\n            }\n            else if (currentWidget instanceof TableCellWidget) {\n                if (currentWidget.ownerRow.rowFormat.revisions.length > 0) {\n                    revisionCollec = this.addRevisionsCollec(currentWidget.ownerRow.rowFormat.revisions, revisionCollec);\n                }\n                for (var i_3 = 0; i_3 < currentWidget.childWidgets.length; i_3++) {\n                    var paraWidget = currentWidget.childWidgets[i_3];\n                    for (var lineIndex = 0; lineIndex < paraWidget.childWidgets.length; lineIndex++) {\n                        var linewidget = paraWidget.childWidgets[lineIndex];\n                        revisionCollec = this.getSelectedLineRevisions(linewidget, start, end, revisionCollec);\n                    }\n                }\n            }\n        }\n        return revisionCollec;\n    };\n    Selection.prototype.getSelectedLineRevisions = function (currentWidget, start, end, elements) {\n        if (currentWidget.paragraph.characterFormat.revisions.length > 0) {\n            elements = this.addRevisionsCollec(currentWidget.paragraph.characterFormat.revisions, elements);\n        }\n        for (var j = 0; j < currentWidget.children.length; j++) {\n            var currentElement = currentWidget.children[j];\n            var offset = currentElement.line.getOffset(currentElement, 0);\n            var eleStartPosition = new TextPosition(this.owner);\n            eleStartPosition.setPositionParagraph(currentElement.line, offset);\n            offset = currentElement.line.getOffset(currentElement, (currentElement.length));\n            var eleEndPosition = new TextPosition(this.owner);\n            eleEndPosition.setPositionParagraph(currentElement.line, offset);\n            if (((eleEndPosition.isExistAfter(start) && eleEndPosition.isExistBefore(end))\n                || (eleStartPosition.isExistAfter(start) && eleStartPosition.isExistBefore(end))\n                || eleStartPosition.isAtSamePosition(start)\n                || (start.isExistAfter(eleStartPosition) && end.isExistBefore(eleEndPosition))) && currentElement.revisions.length > 0) {\n                elements = this.addRevisionsCollec(currentElement.revisions, elements);\n            }\n        }\n        return elements;\n    };\n    Selection.prototype.addRevisionsCollec = function (element, revisCollec) {\n        for (var i = 0; i < element.length; i++) {\n            if (revisCollec.indexOf(element[i]) === -1) {\n                revisCollec.push(element[i]);\n            }\n        }\n        return revisCollec;\n    };\n    //Table Format retrieval starts\n    /**\n     * Retrieve selection table format\n     * @private\n     */\n    Selection.prototype.retrieveTableFormat = function (start, end) {\n        var tableAdv = this.getTable(start, end);\n        if (!isNullOrUndefined(tableAdv)) {\n            this.tableFormat.table = tableAdv;\n            this.tableFormat.copyFormat(tableAdv.tableFormat);\n            this.retrieveCellFormat(start, end);\n            this.retrieveRowFormat(start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.tableFormat.clearFormat();\n        }\n    };\n    /**\n     * Retrieve selection cell format\n     * @private\n     */\n    Selection.prototype.retrieveCellFormat = function (start, end) {\n        if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n            this.cellFormat.copyFormat(start.paragraph.associatedCell.cellFormat);\n            this.getCellFormat(start.paragraph.associatedCell.ownerTable, start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.cellFormat.clearCellFormat();\n        }\n    };\n    /**\n     * Retrieve selection row format\n     * @private\n     */\n    Selection.prototype.retrieveRowFormat = function (start, end) {\n        if (start.paragraph.isInsideTable && end.paragraph.isInsideTable) {\n            this.rowFormat.copyFormat(start.paragraph.associatedCell.ownerRow.rowFormat);\n            this.getRowFormat(start.paragraph.associatedCell.ownerTable, start, end);\n        }\n        else {\n            //When the selection is out of table\n            this.rowFormat.clearRowFormat();\n        }\n    };\n    /**\n     * Get selected cell format\n     * @private\n     */\n    Selection.prototype.getCellFormat = function (table, start, end) {\n        if (start.paragraph.associatedCell.equals(end.paragraph.associatedCell)) {\n            return;\n        }\n        var isStarted = false;\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row === start.paragraph.associatedCell.ownerRow) {\n                isStarted = true;\n            }\n            if (isStarted) {\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    if (this.isCellSelected(cell, start, end)) {\n                        this.cellFormat.combineFormat(cell.cellFormat);\n                    }\n                    if (cell === end.paragraph.associatedCell) {\n                        this.cellFormat.combineFormat(cell.cellFormat);\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get selected row format\n     * @private\n     */\n    Selection.prototype.getRowFormat = function (table, start, end) {\n        var tableRow = start.paragraph.associatedCell.ownerRow;\n        if (tableRow === end.paragraph.associatedCell.ownerRow) {\n            return;\n        }\n        for (var i = table.childWidgets.indexOf(tableRow) + 1; i < table.childWidgets.length; i++) {\n            var tempTableRow = table.childWidgets[i];\n            this.rowFormat.combineFormat(tempTableRow.rowFormat);\n            if (tempTableRow === end.paragraph.associatedCell.ownerRow) {\n                return;\n            }\n        }\n    };\n    /**\n     * Return table with given text position\n     * @private\n     */\n    Selection.prototype.getTable = function (startPosition, endPosition) {\n        if (!isNullOrUndefined(startPosition.paragraph.associatedCell) && !isNullOrUndefined(endPosition.paragraph.associatedCell)) {\n            var startTable = startPosition.paragraph.associatedCell.ownerTable;\n            var endTable = startPosition.paragraph.associatedCell.ownerTable;\n            if (startTable === endTable) {\n                return startTable;\n            }\n            else {\n                if (startTable.contains(startPosition.paragraph.associatedCell)) {\n                    return startTable;\n                }\n                else if (endTable.contains(startPosition.paragraph.associatedCell)) {\n                    return endTable;\n                }\n                else if (!startTable.isInsideTable || !endTable.isInsideTable) {\n                    return undefined;\n                }\n                else {\n                    do {\n                        startTable = startTable.associatedCell.ownerTable;\n                        if (startTable === endTable || startTable.contains(endTable.associatedCell)) {\n                            return startTable;\n                        }\n                        else if (endTable.contains(startTable.associatedCell)) {\n                            return endTable;\n                        }\n                    } while (!isNullOrUndefined(startTable.associatedCell));\n                }\n            }\n        }\n        return undefined;\n    };\n    Selection.prototype.getContainerWidget = function (block) {\n        var bodyWidget;\n        if (block.containerWidget instanceof TextFrame) {\n            bodyWidget = block.containerWidget.containerShape.line.paragraph.bodyWidget;\n        }\n        else if (block.containerWidget instanceof BlockContainer) {\n            if (!isNullOrUndefined(block.containerWidget.containerWidget) && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n                bodyWidget = block.containerWidget.containerWidget;\n            }\n            else {\n                bodyWidget = block.containerWidget;\n            }\n        }\n        else {\n            bodyWidget = block.containerWidget;\n            while (!(bodyWidget instanceof BlockContainer)) {\n                if (bodyWidget instanceof TextFrame) {\n                    bodyWidget = bodyWidget.containerShape.line.paragraph;\n                }\n                bodyWidget = bodyWidget.containerWidget;\n            }\n        }\n        return bodyWidget;\n    };\n    //Table format retrieval ends\n    //Section format retrieval starts\n    /**\n     * Retrieve selection section format\n     * @private\n     */\n    Selection.prototype.retrieveSectionFormat = function (start, end) {\n        var startParaSection = this.getContainerWidget(start.paragraph);\n        var endParaSection = this.getContainerWidget(end.paragraph);\n        if (!isNullOrUndefined(startParaSection)) {\n            this.sectionFormat.copyFormat(startParaSection.sectionFormat);\n            var startPageIndex = this.documentHelper.pages.indexOf(startParaSection.page);\n            var endPageIndex = this.documentHelper.pages.indexOf(endParaSection.page);\n            for (var i = startPageIndex + 1; i <= endPageIndex; i++) {\n                this.sectionFormat.combineFormat(this.documentHelper.pages[i].bodyWidgets[0].sectionFormat);\n            }\n        }\n    };\n    //section format retrieval ends.\n    //Paragraph format retrieval implementation starts.\n    /**\n     * Retrieve selection paragraph format\n     * @private\n     */\n    Selection.prototype.retrieveParagraphFormat = function (start, end) {\n        this.getParagraphFormatForSelection(start.paragraph, this, start, end);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatForSelection = function (paragraph, selection, start, end) {\n        //Selection start in cell.\n        if (start.paragraph.isInsideTable && (!end.paragraph.isInsideTable\n            || start.paragraph.associatedCell !== end.paragraph.associatedCell\n            || this.isCellSelected(start.paragraph.associatedCell, start, end))) {\n            this.getParagraphFormatInternalInCell(start.paragraph.associatedCell, start, end);\n        }\n        else {\n            this.getParagraphFormatInternalInParagraph(paragraph, start, end);\n            if (end.paragraph === paragraph) {\n                return;\n            }\n            var block = this.getNextRenderedBlock(paragraph);\n            if (!isNullOrUndefined(block)) {\n                this.getParagraphFormatInternalInBlock(block, start, end);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphsInSelection = function () {\n        var selection = this.owner.selectionModule;\n        var selectedWidgets = selection.selectedWidgets.keys;\n        var paragraphsInSelection = [];\n        if (selection.isEmpty || selection.start.paragraph === selection.end.paragraph) {\n            return [selection.start.paragraph];\n        }\n        for (var i = 0; i < selectedWidgets.length; i++) {\n            var widget = selectedWidgets[i];\n            if (paragraphsInSelection.indexOf(widget.paragraph) === -1) {\n                paragraphsInSelection.push(widget.paragraph);\n            }\n        }\n        return paragraphsInSelection;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInParagraph = function (paragraph, start, end) {\n        if (start.paragraph === paragraph) {\n            this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n        }\n        else {\n            this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInBlock = function (block, start, end) {\n        if (block instanceof ParagraphWidget) {\n            this.getParagraphFormatInternalInParagraph(block, start, end);\n            if (end.paragraph === block) {\n                return;\n            }\n            var para = this.getNextRenderedBlock(block);\n            if (!isNullOrUndefined(para)) {\n                this.getParagraphFormatInternalInBlock(para, start, end);\n            }\n        }\n        else {\n            this.getParagraphFormatInternalInTable(block, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInTable = function (table, start, end) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var tableRow = table.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(table);\n        //Goto the next block.\n        this.getParagraphFormatInternalInBlock(block, start, end);\n    };\n    /**\n     * Get paragraph format in cell\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInCell = function (cell) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            this.getParagraphFormatInBlock(cell.childWidgets[i]);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInBlock = function (block) {\n        if (block instanceof ParagraphWidget) {\n            this.getParagraphFormatInParagraph(block);\n        }\n        else {\n            this.getParagraphFormatInTable(block);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInTable = function (tableAdv) {\n        for (var i = 0; i < tableAdv.childWidgets.length; i++) {\n            var tableRow = tableAdv.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(tableRow.childWidgets[j]);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInParagraph = function (paragraph) {\n        if (this.start.paragraph === paragraph) {\n            this.paragraphFormat.copyFormat(paragraph.paragraphFormat);\n        }\n        else {\n            this.paragraphFormat.combineFormat(paragraph.paragraphFormat);\n        }\n    };\n    /**\n     * Get paragraph format in cell\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInternalInCell = function (cellAdv, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(cellAdv, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(cellAdv, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.getParagraphFormatInCell(containerCell);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.getParagraphFormatInternalInParagraph(start.paragraph, start, end);\n                            if (end.paragraph === start.paragraph) {\n                                return;\n                            }\n                            var block = this.getNextRenderedBlock(start.paragraph);\n                            if (!isNullOrUndefined(block)) {\n                                this.getParagraphFormatInternalInBlock(block, start, end);\n                            }\n                        }\n                        else {\n                            this.getParagraphFormatInRow(startCell.ownerRow, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Format other selected cells in current table.\n                    this.getParaFormatForCell(containerCell.ownerTable, containerCell, endCell);\n                }\n            }\n            else {\n                this.getParagraphFormatInRow(containerCell.ownerRow, start, end);\n            }\n        }\n        else {\n            var cell = this.getContainerCell(cellAdv);\n            this.getParagraphFormatInRow(cell.ownerRow, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getParaFormatForCell = function (table, startCell, endCell) {\n        var startCellIn = this.getCellLeft(startCell.ownerRow, startCell);\n        var endCellIn = startCellIn + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (startCellIn > endCellLeft) {\n            startCellIn = endCellLeft;\n        }\n        if (endCellIn < endCellRight) {\n            endCellIn = endCellRight;\n        }\n        if (startCellIn > this.upDownSelectionLength) {\n            startCellIn = this.upDownSelectionLength;\n        }\n        if (startCellIn < this.upDownSelectionLength) {\n            startCellIn = this.upDownSelectionLength;\n        }\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n            var tableRow = table.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                var cell = tableRow.childWidgets[j];\n                var left = this.getCellLeft(tableRow, cell);\n                if (HelperMethods.round(startCellIn, 2) <= HelperMethods.round(left, 2)\n                    && HelperMethods.round(left, 2) < HelperMethods.round(endCellIn, 2)) {\n                    this.getParagraphFormatInCell(cell);\n                }\n            }\n        }\n    };\n    /**\n     * Get paragraph format ins row\n     * @private\n     */\n    Selection.prototype.getParagraphFormatInRow = function (tableRow, start, end) {\n        for (var i = tableRow.rowIndex; i < tableRow.ownerTable.childWidgets.length; i++) {\n            var row = tableRow.ownerTable.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.getParagraphFormatInCell(row.childWidgets[j]);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(tableRow.ownerTable);\n        //Goto the next block.\n        this.getParagraphFormatInternalInBlock(block, start, end);\n    };\n    // paragraph format retrieval implementation ends\n    // Character format retrieval implementation starts.\n    /**\n     * Retrieve Selection character format\n     * @private\n     */\n    Selection.prototype.retrieveCharacterFormat = function (start, end) {\n        this.characterFormat.copyFormat(start.paragraph.characterFormat);\n        if (start.paragraph.isEmpty()) {\n            this.characterFormat.copyFormat(start.paragraph.characterFormat, this.documentHelper.textHelper.getFontNameToRender(0, start.paragraph.characterFormat));\n        }\n        if (start.paragraph === end.paragraph && start.currentWidget.isLastLine()\n            && start.offset === this.getLineLength(start.currentWidget) && start.offset + 1 === end.offset) {\n            return;\n        }\n        var para = start.paragraph;\n        if (start.paragraph === end.paragraph && this.isSelectList) {\n            var listLevel = this.getListLevel(start.paragraph);\n            // let breakCharacterFormat: WCharacterFormat = start.paragraph.characterFormat;\n            if (listLevel && listLevel.characterFormat.uniqueCharacterFormat) {\n                this.characterFormat.copyFormat(listLevel.characterFormat);\n            }\n            return;\n        }\n        if (start.offset === this.getParagraphLength(para) && !this.isEmpty) {\n            para = this.getNextParagraphBlock(para);\n        }\n        while (!isNullOrUndefined(para) && para !== end.paragraph && para.isEmpty()) {\n            para = this.getNextParagraphBlock(para);\n        }\n        var offset = para === start.paragraph ? start.offset : 0;\n        var indexInInline = 0;\n        if (!isNullOrUndefined(para) && !para.isEmpty()) {\n            var position = new TextPosition(this.owner);\n            var elemInfo = start.currentWidget.getInline(offset, indexInInline);\n            var physicalLocation = this.getPhysicalPositionInternal(start.currentWidget, offset, true);\n            position.setPositionForSelection(start.currentWidget, elemInfo.element, elemInfo.index, physicalLocation);\n            this.getCharacterFormatForSelection(para, this, position, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForSelection = function (paragraph, selection, startPosition, endPosition) {\n        //Selection start in cell.\n        if (startPosition.paragraph instanceof ParagraphWidget && startPosition.paragraph.isInsideTable\n            && (!endPosition.paragraph.isInsideTable\n                || startPosition.paragraph.associatedCell !== endPosition.paragraph.associatedCell\n                || this.isCellSelected(startPosition.paragraph.associatedCell, startPosition, endPosition))) {\n            this.getCharacterFormatInTableCell(startPosition.paragraph.associatedCell, selection, startPosition, endPosition);\n        }\n        else {\n            this.getCharacterFormat(paragraph, startPosition, endPosition);\n        }\n    };\n    /**\n     * Get Character format\n     * @private\n     */\n    //Format Retrieval\n    Selection.prototype.getCharacterFormatForTableRow = function (tableRowAdv, start, end) {\n        for (var i = tableRowAdv.rowIndex; i < tableRowAdv.ownerTable.childWidgets.length; i++) {\n            var tableRow = tableRowAdv.ownerTable.childWidgets[i];\n            for (var j = 0; j < tableRow.childWidgets.length; j++) {\n                this.getCharacterFormatForSelectionCell(tableRow.childWidgets[j], start, end);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(tableRow, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var block = this.getNextRenderedBlock(tableRowAdv.ownerTable);\n        // //Goto the next block.\n        this.getCharacterFormatForBlock(block, start, end);\n    };\n    /**\n     * Get Character format in table\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInTableCell = function (tableCell, selection, start, end) {\n        if (end.paragraph.isInsideTable) {\n            var containerCell = this.getContainerCellOf(tableCell, end.paragraph.associatedCell);\n            if (containerCell.ownerTable.contains(end.paragraph.associatedCell)) {\n                var startCell = this.getSelectedCell(tableCell, containerCell);\n                var endCell = this.getSelectedCell(end.paragraph.associatedCell, containerCell);\n                if (this.containsCell(containerCell, end.paragraph.associatedCell)) {\n                    //Selection end is in container cell.\n                    if (this.isCellSelected(containerCell, start, end)) {\n                        this.getCharacterFormatForSelectionCell(containerCell, start, end);\n                    }\n                    else {\n                        if (startCell === containerCell) {\n                            this.getCharacterFormat(start.paragraph, start, end);\n                        }\n                        else {\n                            this.getCharacterFormatForTableRow(startCell.ownerRow, start, end);\n                        }\n                    }\n                }\n                else {\n                    //Format other selected cells in current table.\n                    this.getCharacterFormatInternalInTable(containerCell.ownerTable, containerCell, endCell, start, end);\n                }\n            }\n            else {\n                this.getCharacterFormatForTableRow(containerCell.ownerRow, start, end);\n            }\n        }\n        else {\n            var cell = this.getContainerCell(tableCell);\n            this.getCharacterFormatForTableRow(cell.ownerRow, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInternalInTable = function (table, startCell, endCell, startPosition, endPosition) {\n        var startIn = this.getCellLeft(startCell.ownerRow, startCell);\n        var endIn = startIn + startCell.cellFormat.cellWidth;\n        var endCellLeft = this.getCellLeft(endCell.ownerRow, endCell);\n        var endCellRight = endCellLeft + endCell.cellFormat.cellWidth;\n        if (startIn > endCellLeft) {\n            startIn = endCellLeft;\n        }\n        if (endIn < endCellRight) {\n            endIn = endCellRight;\n        }\n        if (startIn > this.upDownSelectionLength) {\n            startIn = this.upDownSelectionLength;\n        }\n        if (endIn < this.upDownSelectionLength) {\n            endIn = this.upDownSelectionLength;\n        }\n        var count = table.childWidgets.indexOf(endCell.ownerRow);\n        for (var i = table.childWidgets.indexOf(startCell.ownerRow); i <= count; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                var cell = row.childWidgets[j];\n                var left = this.getCellLeft(row, cell);\n                if (HelperMethods.round(startIn, 2) <= HelperMethods.round(left, 2) &&\n                    HelperMethods.round(left, 2) < HelperMethods.round(endIn, 2)) {\n                    this.getCharacterFormatForSelectionCell(cell, startPosition, endPosition);\n                }\n            }\n        }\n    };\n    /**\n     * Get character format with in selection\n     * @private\n     */\n    Selection.prototype.getCharacterFormat = function (paragraph, start, end) {\n        if (paragraph !== start.paragraph && paragraph !== end.paragraph && !paragraph.isEmpty()) {\n            this.getCharacterFormatInternal(paragraph, this);\n            if (!this.characterFormat.canRetrieveNextCharacterFormat())\n                return;\n        }\n        if (end.paragraph === paragraph && start.paragraph !== paragraph && end.offset === 0) {\n            return;\n        }\n        var startOffset = 0;\n        var length = this.getParagraphLength(paragraph);\n        if (paragraph === start.paragraph) {\n            startOffset = start.offset;\n            //Sets selection character format.            \n            var isUpdated = this.setCharacterFormat(paragraph, start, end, length);\n            if (isUpdated) {\n                return;\n            }\n        }\n        var startLineWidget = paragraph.childWidgets.indexOf(start.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(start.currentWidget) : 0;\n        var endLineWidget = paragraph.childWidgets.indexOf(end.currentWidget) !== -1 ?\n            paragraph.childWidgets.indexOf(end.currentWidget) : paragraph.childWidgets.length - 1;\n        var endOffset = end.offset;\n        if (paragraph !== end.paragraph) {\n            endOffset = length;\n        }\n        var isFieldStartSelected = false;\n        for (var i = startLineWidget; i <= endLineWidget; i++) {\n            var lineWidget = paragraph.childWidgets[i];\n            if (i !== startLineWidget) {\n                startOffset = this.getStartLineOffset(lineWidget);\n            }\n            if (lineWidget === end.currentWidget) {\n                endOffset = end.offset;\n            }\n            else {\n                endOffset = this.getLineLength(lineWidget);\n            }\n            var count = 0;\n            for (var j = 0; j < lineWidget.children.length; j++) {\n                var inline = lineWidget.children[j];\n                if (inline instanceof ListTextElementBox) {\n                    continue;\n                }\n                if (startOffset >= count + inline.length) {\n                    count += inline.length;\n                    continue;\n                }\n                if (inline instanceof FieldElementBox && inline.fieldType === 0\n                    && HelperMethods.isLinkedFieldCharacter(inline)) {\n                    var nextInline = isNullOrUndefined(inline.fieldEnd) ?\n                        inline.fieldBegin : inline.fieldEnd;\n                    j--;\n                    do {\n                        this.characterFormat.combineFormat(inline.characterFormat);\n                        count += inline.length;\n                        inline = inline.nextNode;\n                        i++;\n                        j++;\n                    } while (!isNullOrUndefined(inline) && inline !== nextInline);\n                    continue;\n                    //isFieldStartSelected = true;\n                }\n                // if (inline instanceof FieldElementBox && (inline as FieldElementBox).fieldType === 1\n                //     && HelperMethods.isLinkedFieldCharacter((inline as FieldElementBox)) && isFieldStartSelected) {\n                //     let fieldInline: ElementBox = (inline as FieldElementBox).fieldBegin;\n                //     do {\n                //         this.characterFormat.combineFormat(fieldInline.characterFormat);\n                //         fieldInline = fieldInline.nextNode as ElementBox;\n                //     } while (!(fieldInline instanceof FieldElementBox));\n                // }\n                if (inline instanceof TextElementBox || inline instanceof FieldElementBox) {\n                    this.characterFormat.combineFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                if (isNullOrUndefined(inline) || endOffset <= count + inline.length) {\n                    break;\n                }\n                count += inline.length;\n            }\n        }\n        if (end.paragraph === paragraph) {\n            return;\n        }\n        var block = this.getNextRenderedBlock(paragraph);\n        if (!isNullOrUndefined(block)) {\n            this.getCharacterFormatForBlock(block, start, end);\n        }\n    };\n    Selection.prototype.setCharacterFormat = function (para, startPos, endPos, length) {\n        var index = 0;\n        var startOffset = startPos.offset;\n        var inlineAndIndex = startPos.currentWidget.getInline(startOffset, index);\n        index = inlineAndIndex.index;\n        var inline = inlineAndIndex.element;\n        if (isNullOrUndefined(inline)) {\n            var currentLineIndex = startPos.paragraph.childWidgets.indexOf(startPos.currentWidget);\n            if (startPos.currentWidget.previousLine) {\n                inline = startPos.currentWidget.previousLine.children[startPos.currentWidget.previousLine.children.length - 1];\n                this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                return true;\n            }\n        }\n        if (startOffset < length) {\n            if (this.isEmpty) {\n                if (inline instanceof TextElementBox || (inline instanceof FieldElementBox\n                    && (inline.fieldType === 0 || inline.fieldType === 1))) {\n                    var previousNode = this.getPreviousTextElement(inline);\n                    if (startOffset === 0 && previousNode) {\n                        inline = previousNode;\n                    }\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else {\n                    if (!isNullOrUndefined(this.getPreviousTextElement(inline))) {\n                        var element = this.getPreviousTextElement(inline);\n                        this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n                    }\n                    else if (!isNullOrUndefined(this.getNextTextElement(inline))) {\n                        var element = this.getNextTextElement(inline);\n                        this.characterFormat.copyFormat(element.characterFormat, this.documentHelper.textHelper.getFontNameToRender(element.scriptType, inline.characterFormat));\n                    }\n                    else {\n                        this.characterFormat.copyFormat(para.characterFormat);\n                    }\n                }\n                return true;\n            }\n            else {\n                if (index === inline.length && !isNullOrUndefined(inline.nextNode)) {\n                    this.characterFormat.copyFormat(this.getNextValidCharacterFormat(inline), this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (inline instanceof TextElementBox) {\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (inline instanceof FieldElementBox) {\n                    this.characterFormat.copyFormat(this.getNextValidCharacterFormatOfField(inline));\n                }\n            }\n        }\n        else {\n            if (length === endPos.offset) {\n                if (inline instanceof TextElementBox || inline instanceof FieldElementBox) {\n                    this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                }\n                else if (!isNullOrUndefined(inline)) {\n                    inline = this.getPreviousTextElement(inline);\n                    if (!isNullOrUndefined(inline)) {\n                        this.characterFormat.copyFormat(inline.characterFormat, this.documentHelper.textHelper.getFontNameToRender(inline.scriptType, inline.characterFormat));\n                    }\n                }\n                else {\n                    this.characterFormat.copyFormat(para.characterFormat);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForBlock = function (block, start, end) {\n        if (block instanceof ParagraphWidget) {\n            this.getCharacterFormat(block, start, end);\n        }\n        else {\n            this.getCharacterFormatInTable(block, start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInTable = function (table, start, end) {\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            for (var j = 0; j < row.childWidgets.length; j++) {\n                this.getCharacterFormatForSelectionCell(row.childWidgets[j], start, end);\n            }\n            if (end.paragraph.isInsideTable && this.containsRow(row, end.paragraph.associatedCell)) {\n                return;\n            }\n        }\n        var blockAdv = this.getNextRenderedBlock(table);\n        // //Goto the next block.\n        if (!isNullOrUndefined(blockAdv)) {\n            this.getCharacterFormatForBlock(blockAdv, start, end);\n        }\n    };\n    /**\n     * Get character format in selection\n     * @private\n     */\n    Selection.prototype.getCharacterFormatForSelectionCell = function (cell, start, end) {\n        for (var i = 0; i < cell.childWidgets.length; i++) {\n            this.getCharacterFormatForBlock(cell.childWidgets[i], start, end);\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCharacterFormatInternal = function (paragraph, selection) {\n        for (var i = 0; i < paragraph.childWidgets.length; i++) {\n            var linewidget = paragraph.childWidgets[i];\n            for (var j = 0; j < linewidget.children.length; j++) {\n                var element = linewidget.children[j];\n                if (!(element instanceof ImageElementBox || element instanceof FieldElementBox || element instanceof ListTextElementBox)) {\n                    selection.characterFormat.combineFormat(element.characterFormat);\n                }\n            }\n        }\n    };\n    /**\n     * Get next valid character format from inline\n     * @private\n     */\n    Selection.prototype.getNextValidCharacterFormat = function (inline) {\n        var startInline = this.getNextTextElement(inline);\n        if (isNullOrUndefined(startInline)) {\n            return inline.characterFormat;\n        }\n        var fieldBegin = undefined;\n        if (startInline instanceof FieldElementBox) {\n            if (fieldBegin.fieldType === 0) {\n                fieldBegin = startInline;\n            }\n        }\n        if (isNullOrUndefined(fieldBegin)) {\n            return startInline.characterFormat;\n        }\n        else {\n            return this.getNextValidCharacterFormatOfField(fieldBegin);\n        }\n    };\n    /**\n     * Get next valid paragraph format from field\n     * @private\n     */\n    Selection.prototype.getNextValidCharacterFormatOfField = function (fieldBegin) {\n        var startInline = fieldBegin;\n        if (HelperMethods.isLinkedFieldCharacter(fieldBegin)) {\n            if (isNullOrUndefined(fieldBegin.fieldSeparator)) {\n                startInline = fieldBegin.fieldEnd;\n            }\n            else {\n                startInline = fieldBegin.fieldSeparator;\n            }\n        }\n        var nextValidInline = undefined;\n        if (!isNullOrUndefined(startInline.nextNode)) {\n            //Check the next node is a valid and returns inline.\n            nextValidInline = this.getNextValidElement(startInline.nextNode);\n        }\n        //If field separator/end exists at end of paragraph, then move to next paragraph.\n        if (isNullOrUndefined(nextValidInline)) {\n            return startInline.characterFormat;\n        }\n        return nextValidInline.characterFormat;\n    };\n    /**\n     * Return true if cursor point with in selection range\n     * @private\n     */\n    Selection.prototype.checkCursorIsInSelection = function (widget, point) {\n        if (isNullOrUndefined(this.start) || this.isEmpty || isNullOrUndefined(widget)) {\n            return false;\n        }\n        var isSelected = false;\n        do {\n            if (this.selectedWidgets.containsKey(widget)) {\n                var top_4 = void 0;\n                var left = void 0;\n                if (widget instanceof LineWidget) {\n                    top_4 = this.owner.selectionModule.getTop(widget);\n                    left = this.owner.selectionModule.getLeft(widget);\n                }\n                else {\n                    top_4 = widget.y;\n                    left = widget.x;\n                }\n                var widgetInfo = this.selectedWidgets.get(widget);\n                if (widgetInfo instanceof SelectionWidgetInfo) {\n                    isSelected = widgetInfo.left <= point.x && top_4 <= point.y &&\n                        top_4 + widget.height >= point.y && widgetInfo.left + widgetInfo.width >= point.x;\n                }\n                else {\n                    var widgetIn = widgetInfo;\n                    for (var j = 0; j < widgetIn.length; j++) {\n                        if (widgetIn[j] instanceof SelectionWidgetInfo) {\n                            isSelected = widgetIn[j].left <= point.x && top_4 <= point.y &&\n                                top_4 + widget.height >= point.y && widgetIn[j].left + widgetIn[j].width >= point.x;\n                            if (isSelected) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            widget = (widget instanceof LineWidget) ? widget.paragraph : widget.containerWidget;\n        } while (!isNullOrUndefined(widget) && !isSelected);\n        return isSelected;\n    };\n    /**\n     * Copy paragraph for to selection paragraph format\n     * @private\n     */\n    Selection.prototype.copySelectionParagraphFormat = function () {\n        var format = new WParagraphFormat();\n        this.paragraphFormat.copyToFormat(format);\n        return format;\n    };\n    /**\n     * Get hyperlink display text\n     * @private\n     */\n    Selection.prototype.getHyperlinkDisplayText = function (paragraph, fieldSeparator, fieldEnd, isNestedField, format) {\n        var para = paragraph;\n        if (para !== fieldEnd.line.paragraph) {\n            isNestedField = true;\n            return { displayText: '<<Selection in Document>>', 'isNestedField': isNestedField, 'format': format };\n        }\n        var displayText = '';\n        var lineIndex = para.childWidgets.indexOf(fieldSeparator.line);\n        var index = para.childWidgets[lineIndex].children.indexOf(fieldSeparator);\n        for (var j = lineIndex; j < para.childWidgets.length; j++) {\n            var lineWidget = para.childWidgets[j];\n            if (j !== lineIndex) {\n                index = -1;\n            }\n            for (var i = index + 1; i < lineWidget.children.length; i++) {\n                var inline = lineWidget.children[i];\n                if (inline === fieldEnd) {\n                    return { 'displayText': displayText, 'isNestedField': isNestedField, 'format': format };\n                }\n                if (inline instanceof TextElementBox) {\n                    displayText += inline.text;\n                    format = inline.characterFormat;\n                }\n                else if (inline instanceof FieldElementBox) {\n                    if (inline instanceof FieldElementBox && inline.fieldType === 0\n                        && !isNullOrUndefined(inline.fieldEnd)) {\n                        if (isNullOrUndefined(inline.fieldSeparator)) {\n                            index = lineWidget.children.indexOf(inline.fieldEnd);\n                        }\n                        else {\n                            index = lineWidget.children.indexOf(inline.fieldSeparator);\n                        }\n                    }\n                }\n                else {\n                    isNestedField = true;\n                    return { 'displayText': '<<Selection in Document>>', 'isNestedField': isNestedField, 'format': format };\n                }\n            }\n        }\n        return { 'displayText': displayText, 'isNestedField': isNestedField, 'format': format };\n    };\n    /**\n     * Navigates hyperlink on mouse Event.\n     * @private\n     */\n    Selection.prototype.navigateHyperLinkOnEvent = function (cursorPoint, isTouchInput) {\n        var _this = this;\n        var widget = this.documentHelper.getLineWidget(cursorPoint);\n        if (!isNullOrUndefined(widget)) {\n            var hyperLinkField = this.getHyperLinkFieldInCurrentSelection(widget, cursorPoint);\n            //Invokes Hyperlink navigation events.\n            if (!isNullOrUndefined(hyperLinkField)) {\n                this.documentHelper.updateTextPositionForSelection(cursorPoint, 1);\n                this.fireRequestNavigate(hyperLinkField);\n                setTimeout(function () {\n                    if (_this.viewer) {\n                        _this.documentHelper.isTouchInput = isTouchInput;\n                        _this.documentHelper.updateFocus();\n                        _this.documentHelper.isTouchInput = false;\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getLinkText = function (fieldBegin, copyAddress) {\n        var hyperlink = new Hyperlink(fieldBegin, this);\n        var link = hyperlink.navigationLink;\n        var screenTip = hyperlink.screenTip;\n        if (copyAddress) {\n            if (hyperlink.localReference.length > 0) {\n                if (hyperlink.localReference[0] === '_' && (isNullOrUndefined(link) || link.length === 0)) {\n                    link = 'Current Document';\n                }\n                else {\n                    if (hyperlink.isCrossRef) {\n                        link += hyperlink.localReference;\n                    }\n                    else {\n                        link += '#' + hyperlink.localReference;\n                    }\n                }\n            }\n            hyperlink.destroy();\n            return link;\n        }\n        else {\n            hyperlink.destroy();\n            return screenTip;\n        }\n    };\n    /**\n     * Set Hyperlink content to tool tip element\n     * @private\n     */\n    Selection.prototype.setHyperlinkContentToToolTip = function (fieldBegin, widget, xPos, isFormField) {\n        if (fieldBegin) {\n            if (this.owner.contextMenuModule &&\n                this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n                return;\n            }\n            if (!this.toolTipElement) {\n                this.toolTipElement = createElement('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n                this.screenTipElement = createElement('p');\n                this.toolTipElement.appendChild(this.screenTipElement);\n                this.toolTipTextElement = createElement('p', { styles: 'font-weight:bold' });\n                this.toolTipElement.appendChild(this.toolTipTextElement);\n            }\n            this.toolTipElement.style.display = 'block';\n            var l10n = new L10n('documenteditor', this.owner.defaultLocale);\n            l10n.setLocale(this.owner.locale);\n            var toolTipText = l10n.getConstant('Click to follow link');\n            if (this.owner.useCtrlClickToFollowHyperlink) {\n                if (this.documentHelper.isIosDevice) {\n                    toolTipText = 'Command+' + toolTipText;\n                }\n                else {\n                    toolTipText = 'Ctrl+' + toolTipText;\n                }\n            }\n            var linkText = this.getScreenTipText(fieldBegin);\n            if (isFormField) {\n                var helpText = fieldBegin.formFieldData.helpText;\n                if (isNullOrUndefined(helpText) || helpText === '') {\n                    return;\n                }\n                this.screenTipElement.innerText = helpText;\n            }\n            else {\n                this.screenTipElement.innerText = linkText;\n                this.toolTipTextElement.innerText = toolTipText;\n            }\n            var position = this.getTooltipPosition(fieldBegin.line, xPos, this.toolTipElement, false);\n            this.showToolTip(position.x, position.y);\n            if (!isNullOrUndefined(this.toolTipField) && fieldBegin !== this.toolTipField) {\n                this.toolTipObject.position = { X: position.x, Y: position.y };\n            }\n            this.toolTipObject.show();\n            this.toolTipField = fieldBegin;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n    * Get screenTip text\n    * @private\n    */\n    Selection.prototype.getScreenTipText = function (fieldBegin) {\n        var hyperlink = new Hyperlink(fieldBegin, this);\n        if (!hyperlink.screenTip && !hyperlink.localReference) {\n            return hyperlink.navigationLink;\n        }\n        else if (hyperlink.screenTip) {\n            return hyperlink.screenTip;\n        }\n        else {\n            return hyperlink.localReference;\n        }\n    };\n    /**\n     * Set Hyperlink content to tool tip element\n     * @private\n     */\n    Selection.prototype.setFootnoteContentToToolTip = function (footnote, widget, xPos) {\n        if (footnote) {\n            if (this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block' &&\n                this.owner.contextMenuModule) {\n                return;\n            }\n            if (!this.toolTipElement) {\n                this.toolTipElement = createElement('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(this.toolTipElement);\n            }\n            this.toolTipElement.style.display = 'block';\n            var ln = new L10n('documenteditor', this.owner.defaultLocale);\n            ln.setLocale(this.owner.locale);\n            var toolTipText = void 0;\n            if (footnote.footnoteType === 'Endnote') {\n                toolTipText = ln.getConstant('Click to View/Edit Endnote');\n            }\n            else if (footnote.footnoteType === 'Footnote') {\n                toolTipText = ln.getConstant('Click to View/Edit Footnote');\n            }\n            this.toolTipElement.innerHTML = '<b>' + toolTipText + '</b>';\n            var positions = this.getTooltipPosition(footnote.line, xPos, this.toolTipElement, false);\n            this.showToolTip(positions.x, positions.y);\n            if (!isNullOrUndefined(this.toolTipField)) {\n                this.toolTipObject.position = { X: positions.x, Y: positions.y };\n            }\n            this.toolTipObject.show();\n            // this.toolTipField = fieldBegin;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n     * Set locked content info to tool tip element\n     * @private\n     */\n    Selection.prototype.setLockInfoTooptip = function (widget, xPos, user) {\n        if (widget) {\n            if (this.owner.contextMenuModule &&\n                this.owner.contextMenuModule.contextMenuInstance.element.style.display === 'block') {\n                return;\n            }\n            var toolTipElement = this.toolTipElement;\n            if (!this.toolTipElement) {\n                toolTipElement = createElement('div', { className: 'e-de-tooltip' });\n                this.documentHelper.viewerContainer.appendChild(toolTipElement);\n                this.toolTipElement = toolTipElement;\n            }\n            toolTipElement.style.display = 'block';\n            var l10n = new L10n('documenteditor', this.owner.defaultLocale);\n            l10n.setLocale(this.owner.locale);\n            var toolTipInfo = l10n.getConstant('This region is locked by');\n            toolTipElement.innerHTML = toolTipInfo + ' <b>' + user + '</b>';\n            var position = this.getTooltipPosition(widget, xPos, toolTipElement, false);\n            this.showToolTip(position.x, position.y);\n            if (!isNullOrUndefined(this.toolTipField) && user !== this.toolTipField) {\n                this.toolTipObject.position = { X: position.x, Y: position.y };\n            }\n            this.toolTipObject.show();\n            this.toolTipField = user;\n        }\n        else {\n            this.hideToolTip();\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getTooltipPosition = function (widget, xPos, toolTipElement, isFormField) {\n        var widgetTop = this.getTop(widget) * this.documentHelper.zoomFactor;\n        var page = this.getPage(widget.paragraph);\n        var containerWidth = this.documentHelper.viewerContainer.getBoundingClientRect().width + this.documentHelper.viewerContainer.scrollLeft;\n        var left = page.boundingRectangle.x + xPos * this.documentHelper.zoomFactor;\n        if ((left + toolTipElement.clientWidth + 10) > containerWidth) {\n            left = left - ((toolTipElement.clientWidth - (containerWidth - left)) + 15);\n        }\n        var offsetHeight = !isFormField ? toolTipElement.offsetHeight : 0;\n        var top = this.getPageTop(page) + (widgetTop - offsetHeight);\n        top = top > this.documentHelper.viewerContainer.scrollTop ? top : top + widget.height + offsetHeight;\n        return new Point(left, top);\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateSelectionInfo = function (info) {\n        var cells = this.selectedWidgets.keys;\n        if (cells[0] instanceof TableCellWidget && cells[cells.length - 1] instanceof TableCellWidget) {\n            if (cells.length > 0) {\n                var firstcell = cells[0];\n                var lastCell = cells[cells.length - 1];\n                var firstrow = firstcell.ownerRow;\n                var lastRow = lastCell.ownerRow;\n                var startCell = firstrow.getCell(firstrow.rowIndex, undefined, 0);\n                var firstPara = this.owner.documentHelper.getFirstParagraphInCell(startCell);\n                info.start = this.owner.documentHelper.selection.getHierarchicalIndex(firstPara, \"0\");\n                var lastCellInRow = lastRow.getCell(lastRow.rowIndex, undefined, lastRow.childWidgets.length - 1);\n                var lastPara = this.getLastParagraph(lastCellInRow);\n                var offset = this.getParagraphLength(lastPara);\n                info.end = this.owner.documentHelper.selection.getHierarchicalIndex(lastPara, offset.toString());\n            }\n        }\n        return info;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.createPasteElement = function (top, left) {\n        var items;\n        var locale = new L10n('documenteditor', this.owner.defaultLocale);\n        locale.setLocale(this.owner.locale);\n        switch (this.currentPasteAction) {\n            case 'DefaultPaste':\n                items = [\n                    {\n                        text: locale.getConstant('Keep source formatting'),\n                        iconCss: 'e-icons e-de-paste-source'\n                    },\n                    {\n                        text: locale.getConstant('Match destination formatting'),\n                        iconCss: 'e-icons e-de-paste-merge'\n                    },\n                    {\n                        text: locale.getConstant('Text only'),\n                        iconCss: 'e-icons e-de-paste-text'\n                    }\n                ];\n                break;\n            case 'TextOnly':\n                items = [\n                    {\n                        text: locale.getConstant('Text only'),\n                        iconCss: 'e-icons e-de-paste-text'\n                    }\n                ];\n                break;\n            case 'InsertAsColumns':\n            case 'OverwriteCells':\n            case 'InsertAsRows':\n                items = [\n                    {\n                        text: locale.getConstant('NestTable'),\n                        iconCss: 'e-icons e-de-paste-nested-table'\n                    },\n                    {\n                        text: locale.getConstant('InsertAsRows'),\n                        iconCss: 'e-icons e-de-paste-row'\n                    }\n                ];\n                if (this.currentPasteAction === 'InsertAsColumns') {\n                    var obj = {\n                        text: locale.getConstant('InsertAsColumns'),\n                        iconCss: 'e-icons e-de-paste-column'\n                    };\n                    items.unshift(obj);\n                }\n                else if (this.currentPasteAction === 'OverwriteCells') {\n                    var obj = {\n                        text: locale.getConstant('OverwriteCells'),\n                        iconCss: 'e-icons e-de-paste-overwrite-cells'\n                    };\n                    items.splice(2, 0, obj);\n                }\n                break;\n        }\n        if (!this.pasteElement) {\n            this.pasteElement = createElement('div', { className: 'e-de-tooltip' });\n            this.documentHelper.viewerContainer.appendChild(this.pasteElement);\n            var splitButtonEle = createElement('button', { id: this.owner.containerId + '_iconsplitbtn' });\n            this.pasteElement.appendChild(splitButtonEle);\n            this.pasteDropDwn = new DropDownButton({\n                items: items, iconCss: 'e-icons e-de-paste', select: this.pasteOptions\n            });\n            this.pasteDropDwn.appendTo(splitButtonEle);\n        }\n        else {\n            this.pasteDropDwn.items = items;\n        }\n        this.pasteElement.style.display = 'block';\n        this.pasteElement.style.position = 'absolute';\n        this.pasteElement.style.left = left;\n        this.pasteElement.style.top = top;\n        this.pasteDropDwn.dataBind();\n    };\n    /**\n     * Show hyperlink tooltip\n     * @private\n     */\n    Selection.prototype.showToolTip = function (x, y) {\n        if (!this.toolTipObject) {\n            this.toolTipObject = new Popup(this.toolTipElement, {\n                height: 'auto',\n                width: 'auto',\n                relateTo: this.documentHelper.viewerContainer.parentElement,\n                position: { X: x, Y: y }\n            });\n        }\n    };\n    /**\n     * Hide tooltip object\n     * @private\n     */\n    Selection.prototype.hideToolTip = function () {\n        this.toolTipField = undefined;\n        if (this.toolTipObject) {\n            this.toolTipElement.style.display = 'none';\n            this.toolTipObject.hide();\n            this.toolTipObject.destroy();\n            this.toolTipObject = undefined;\n        }\n    };\n    /**\n     * Return hyperlink field\n     * @private\n     */\n    Selection.prototype.getHyperLinkFieldInCurrentSelection = function (widget, cursorPosition, isFormField) {\n        var inline = undefined;\n        var top = this.getTop(widget);\n        var lineStartLeft = this.getLineStartLeft(widget);\n        var leftIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.leftIndent);\n        var rightIndent = HelperMethods.convertPointToPixel(widget.paragraph.paragraphFormat.rightIndent);\n        if (cursorPosition.y < top || cursorPosition.y > top + widget.height\n            || cursorPosition.x < lineStartLeft || cursorPosition.x > lineStartLeft + widget.paragraph.width + leftIndent + rightIndent) {\n            return undefined;\n        }\n        var left = widget.paragraph.x;\n        var elementValues = this.getFirstElement(widget, left);\n        left = elementValues.left;\n        var element = elementValues.element;\n        if (isNullOrUndefined(element)) {\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(widget.paragraph.characterFormat);\n            if (cursorPosition.x <= lineStartLeft + width || cursorPosition.x >= lineStartLeft + width) {\n                //Check if paragraph is within a field result.\n                var checkedFields = [];\n                var field = this.getHyperLinkFields(widget.paragraph, checkedFields, false, isFormField);\n                checkedFields = [];\n                checkedFields = undefined;\n                return field;\n            }\n        }\n        else {\n            var renderedChild = widget.renderedElements;\n            if (cursorPosition.x > left + element.margin.left) {\n                for (var i = renderedChild.indexOf(element); i < renderedChild.length; i++) {\n                    element = renderedChild[i];\n                    if (cursorPosition.x < left + element.margin.left + element.width || i === renderedChild.length - 1) {\n                        break;\n                    }\n                    left += element.margin.left + element.width;\n                }\n            }\n            inline = element;\n            var width = element.margin.left + element.width;\n            if (isNullOrUndefined(inline.nextNode)) {\n                //Include width of Paragraph mark.\n                width += this.documentHelper.textHelper.getParagraphMarkWidth(inline.line.paragraph.characterFormat);\n            }\n            if (cursorPosition.x <= left + width) {\n                //Check if inline is within a field result.\n                var checkedFields = [];\n                var field = this.getHyperLinkFieldInternal(inline.line.paragraph, inline, checkedFields, false, isFormField);\n                checkedFields = [];\n                checkedFields = undefined;\n                return field;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Return FootnoteElementBox\n     * @private\n     */\n    Selection.prototype.getFootNoteElementInCurrentSelection = function (lineWidget, position) {\n        var inline = undefined;\n        var top = this.getTop(lineWidget);\n        var lineStartInLeft = this.getLineStartLeft(lineWidget);\n        if (position.y < top || position.y > top + lineWidget.height\n            || position.x < lineStartInLeft\n            || position.x > lineStartInLeft + lineWidget.paragraph.width) {\n            return undefined;\n        }\n        var leftLength = lineWidget.paragraph.x;\n        var elementValues = this.getFirstElement(lineWidget, leftLength);\n        leftLength = elementValues.left;\n        var element = elementValues.element;\n        if (isNullOrUndefined(element)) {\n            var width = this.documentHelper.textHelper.getParagraphMarkWidth(lineWidget.paragraph.characterFormat);\n            if (position.x <= lineStartInLeft + width || position.x >= lineStartInLeft + width) {\n                //Check if paragraph is within a field result.\n                var inlineObj = this.documentHelper.selection.start.currentWidget.getInline(this.documentHelper.selection.start.offset, 0);\n                var footNote = inlineObj.element;\n                if (footNote instanceof FootnoteElementBox) {\n                    return footNote;\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n        else {\n            if (position.x > leftLength + element.margin.left) {\n                for (var i = lineWidget.children.indexOf(element); i < lineWidget.children.length; i++) {\n                    element = lineWidget.children[i];\n                    if (position.x < leftLength + element.margin.left + element.width || i === lineWidget.children.length - 1) {\n                        break;\n                    }\n                    leftLength += element.margin.left + element.width;\n                }\n            }\n            if (element instanceof FootnoteElementBox) {\n                inline = element;\n            }\n            var width = element.margin.left + element.width;\n            if (isNullOrUndefined(element.nextNode)) {\n                //Include width of Paragraph mark.\n                width += this.documentHelper.textHelper.getParagraphMarkWidth(element.line.paragraph.characterFormat);\n            }\n            if (position.x <= leftLength + width) {\n                return inline;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Return field if paragraph contain hyperlink field\n     * @private\n     */\n    Selection.prototype.getHyperlinkField = function (isRetrieve) {\n        if (isNullOrUndefined(this.end)) {\n            return undefined;\n        }\n        var index = 0;\n        var selection = this.documentHelper.selection;\n        var start = selection.start;\n        var end = selection.end;\n        if (!selection.isForward) {\n            start = selection.end;\n            end = selection.start;\n            ;\n        }\n        var currentInline = this.end.currentWidget.getInline(end.offset, index);\n        index = currentInline.index;\n        var inline = currentInline.element;\n        var checkedFields = [];\n        var field = undefined;\n        if (isNullOrUndefined(inline)) {\n            field = this.getHyperLinkFields(this.end.paragraph, checkedFields, isRetrieve);\n        }\n        else if (this.documentHelper.isFormFillProtectedMode && inline instanceof BookmarkElementBox\n            && inline.previousNode instanceof FieldElementBox && inline.previousNode.fieldType === 1) {\n            field = undefined;\n        }\n        else {\n            var paragraph = inline.line.paragraph;\n            field = this.getHyperLinkFieldInternal(paragraph, inline, checkedFields, isRetrieve, false);\n        }\n        checkedFields = [];\n        return field;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHyperLinkFields = function (paragraph, checkedFields, isRetrieve, checkFormField) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            if (checkedFields.indexOf(this.documentHelper.fields[i]) !== -1 || isNullOrUndefined(this.documentHelper.fields[i].fieldSeparator)) {\n                continue;\n            }\n            else {\n                checkedFields.push(this.documentHelper.fields[i]);\n            }\n            var field = this.getFieldCode(this.documentHelper.fields[i]);\n            field = field.trim().toLowerCase();\n            var isParagraph = this.paragraphIsInFieldResult(this.documentHelper.fields[i], paragraph);\n            if ((isRetrieve || (!isRetrieve && field.match('hyperlink '))) && isParagraph) {\n                return this.documentHelper.fields[i];\n            }\n            if (isParagraph && checkFormField && this.documentHelper.fields[i].formFieldData) {\n                return this.documentHelper.fields[i];\n            }\n            if ((isRetrieve || (!isRetrieve && field.match('ref '))) && isParagraph) {\n                return this.documentHelper.fields[i];\n            }\n        }\n        // if (paragraph.containerWidget instanceof BodyWidget && !(paragraph instanceof WHeaderFooter)) {\n        //     return this.getHyperLinkFields((paragraph.con as WCompositeNode), checkedFields);\n        // }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHyperLinkFieldInternal = function (paragraph, inline, fields, isRetrieve, checkFormField) {\n        for (var i = 0; i < this.documentHelper.fields.length; i++) {\n            if (fields.indexOf(this.documentHelper.fields[i]) !== -1 || isNullOrUndefined(this.documentHelper.fields[i].fieldSeparator)) {\n                continue;\n            }\n            else {\n                fields.push(this.documentHelper.fields[i]);\n            }\n            var fieldCode = this.getFieldCode(this.documentHelper.fields[i]);\n            fieldCode = fieldCode.trim().toLowerCase();\n            var fieldBegin = this.documentHelper.fields[i];\n            var fieldEnd = fieldBegin.fieldEnd;\n            if (isRetrieve && fieldBegin.nextNode instanceof BookmarkElementBox && fieldBegin.nextNode.reference) {\n                fieldEnd = fieldBegin.nextNode.reference;\n            }\n            var isInline = (this.inlineIsInFieldResult(fieldBegin, fieldEnd, fieldBegin.fieldSeparator, inline, isRetrieve) || this.isImageField());\n            if ((isRetrieve || (!isRetrieve && fieldCode.match('hyperlink '))) && isInline) {\n                return this.documentHelper.fields[i];\n            }\n            if (isInline && checkFormField && this.documentHelper.fields[i].formFieldData) {\n                return this.documentHelper.fields[i];\n            }\n            if ((isRetrieve || (!isRetrieve && fieldCode.match('ref '))) && isInline) {\n                return this.documentHelper.fields[i];\n            }\n        }\n        if (paragraph.containerWidget instanceof BodyWidget && !(paragraph instanceof HeaderFooterWidget)) {\n            return this.getHyperLinkFieldInternal(paragraph.containerWidget, inline, fields, isRetrieve, checkFormField);\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getBlock = function (currentIndex) {\n        if (currentIndex === '' || isNullOrUndefined(currentIndex)) {\n            return undefined;\n        }\n        var index = { index: currentIndex };\n        var page = this.start.getPage(index);\n        var bodyIndex = index.index.indexOf(';');\n        var value = index.index.substring(0, bodyIndex);\n        index.index = index.index.substring(bodyIndex).replace(';', '');\n        var bodyWidget = page.bodyWidgets[parseInt(value, 10)];\n        return this.getBlockInternal(bodyWidget, index.index);\n    };\n    /**\n     * Return Block relative to position\n     * @private\n     */\n    Selection.prototype.getBlockInternal = function (widget, position) {\n        if (position === '' || isNullOrUndefined(position)) {\n            return undefined;\n        }\n        var index = position.indexOf(';');\n        var value = position.substring(0, index);\n        position = position.substring(index).replace(';', '');\n        var node = widget;\n        // if (node instanceof Widget && value === 'HF') {\n        //     //Gets the block in Header footers.\n        //     let blockObj: BlockInfo = this.getBlock((node as WSection).headersFooters, position);\n        //     return { 'node': (!isNullOrUndefined(blockObj)) ? blockObj.node : undefined, 'position': (!isNullOrUndefined(blockObj)) ? blockObj.position : undefined };\n        // }\n        index = parseInt(value, 10);\n        if (index >= 0 && index < widget.childWidgets.length) {\n            var child = widget.childWidgets[(index)];\n            if (position.indexOf(';') >= 0) {\n                if (child instanceof ParagraphWidget) {\n                    if (position.indexOf(';') >= 0) {\n                        position = '0';\n                    }\n                    return child;\n                }\n                if (child instanceof BlockWidget) {\n                    var blockObj = this.getBlockInternal(child, position);\n                    return blockObj;\n                }\n            }\n            else {\n                return child;\n            }\n        }\n        else {\n            return node;\n        }\n        return node;\n    };\n    /**\n     * Return true if inline is in field result\n     * @private\n     */\n    Selection.prototype.inlineIsInFieldResult = function (fieldBegin, fieldEnd, fieldSeparator, inline, isRetrieve) {\n        if (!isNullOrUndefined(fieldEnd) && !isNullOrUndefined(fieldSeparator)) {\n            if (this.isExistBeforeInline(fieldSeparator, inline)) {\n                return this.isExistAfterInline(fieldEnd, inline, isRetrieve);\n            }\n        }\n        return false;\n    };\n    /**\n     * Retrieve true if paragraph is in field result\n     * @private\n     */\n    Selection.prototype.paragraphIsInFieldResult = function (fieldBegin, paragraph) {\n        if (!isNullOrUndefined(fieldBegin.fieldEnd) && !isNullOrUndefined(fieldBegin.fieldSeparator)) {\n            var fieldParagraph = fieldBegin.fieldSeparator.line.paragraph;\n            if (fieldBegin.fieldSeparator.line.paragraph === paragraph\n                || this.isExistBefore(fieldParagraph, paragraph)) {\n                var currentParagraph = fieldBegin.fieldEnd.line.paragraph;\n                return (currentParagraph !== paragraph && this.isExistAfter(fieldParagraph, paragraph));\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if image is In field\n     * @private\n     */\n    Selection.prototype.isImageField = function () {\n        if (this.start.paragraph.isEmpty() || this.end.paragraph.isEmpty()) {\n            return false;\n        }\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        var indexInInline = 0;\n        var inlineInfo = startPosition.paragraph.getInline(startPosition.offset, indexInInline);\n        var inline = inlineInfo.element;\n        indexInInline = inlineInfo.index;\n        if (indexInInline === inline.length) {\n            inline = this.getNextRenderedElementBox(inline, indexInInline);\n        }\n        inlineInfo = endPosition.paragraph.getInline(endPosition.offset, indexInInline);\n        var endInline = inlineInfo.element;\n        indexInInline = inlineInfo.index;\n        if (inline instanceof FieldElementBox && inline.fieldType === 0\n            && endInline instanceof FieldElementBox && endInline.fieldType === 1 && inline.fieldSeparator) {\n            var fieldValue = inline.fieldSeparator.nextNode;\n            if (fieldValue instanceof ImageElementBox && fieldValue.nextNode === endInline) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in Form field\n     * @private\n     */\n    Selection.prototype.isFormField = function () {\n        var inline = this.currentFormField;\n        if (inline instanceof FieldElementBox && inline.formFieldData) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in reference field\n     * @private\n     */\n    Selection.prototype.isReferenceField = function (field) {\n        if (isNullOrUndefined(field)) {\n            field = this.getHyperlinkField(true);\n        }\n        if (field) {\n            var fieldCode = this.getFieldCode(field);\n            fieldCode = fieldCode.toLowerCase();\n            if (field instanceof FieldElementBox && fieldCode.match('ref ')) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Return true if selection is in text form field\n     * @private\n     */\n    Selection.prototype.isInlineFormFillMode = function (field) {\n        if (this.documentHelper.isInlineFormFillProtectedMode) {\n            field = isNullOrUndefined(field) ? this.currentFormField : field;\n            if (isNullOrUndefined(field)) {\n                field = this.getCurrentFormField();\n            }\n            if (field) {\n                if (field.formFieldData instanceof TextFormField && field.formFieldData.type === 'Text') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getFormFieldType = function (formField) {\n        if (isNullOrUndefined(formField)) {\n            formField = this.currentFormField;\n        }\n        if (formField instanceof FieldElementBox) {\n            if (formField.formFieldData instanceof TextFormField) {\n                return 'Text';\n            }\n            else if (formField.formFieldData instanceof CheckBoxFormField) {\n                return 'CheckBox';\n            }\n            else if (formField.formFieldData instanceof DropDownFormField) {\n                return 'DropDown';\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Get selected form field type\n     * @private\n     */\n    Selection.prototype.getCurrentFormField = function (checkFieldResult) {\n        var field;\n        if (checkFieldResult || this.documentHelper.isFormFillProtectedMode && this.owner.documentEditorSettings.formFieldSettings &&\n            this.owner.documentEditorSettings.formFieldSettings.formFillingMode === 'Inline') {\n            for (var i = 0; i < this.documentHelper.formFields.length; i++) {\n                var formField = this.documentHelper.formFields[i];\n                var start = this.start;\n                var end = this.end;\n                if (!this.isForward) {\n                    start = this.end;\n                    end = this.start;\n                }\n                if (HelperMethods.isLinkedFieldCharacter(formField)) {\n                    var offset = formField.fieldSeparator.line.getOffset(formField.fieldSeparator, 1);\n                    var fieldStart = new TextPosition(this.owner);\n                    fieldStart.setPositionParagraph(formField.fieldSeparator.line, offset);\n                    var fieldEndElement = formField.fieldEnd;\n                    offset = fieldEndElement.line.getOffset(fieldEndElement, 0);\n                    var fieldEnd = new TextPosition(this.owner);\n                    fieldEnd.setPositionParagraph(fieldEndElement.line, offset);\n                    if ((start.isExistAfter(fieldStart) || start.isAtSamePosition(fieldStart))\n                        && (end.isExistBefore(fieldEnd) || end.isAtSamePosition(fieldEnd))) {\n                        field = formField;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            field = this.getHyperlinkField(true);\n        }\n        if (field instanceof FieldElementBox && field.fieldType === 0 && !isNullOrUndefined(field.formFieldData)) {\n            return field;\n        }\n        return undefined;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getCurrentTextFrame = function () {\n        var container = this.start.paragraph.containerWidget;\n        do {\n            if (container instanceof TextFrame) {\n                return container;\n            }\n            if (container) {\n                container = container.containerWidget;\n            }\n        } while (container);\n        return null;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isTableSelected = function (isNested) {\n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (isNullOrUndefined(start.paragraph.associatedCell) ||\n            isNullOrUndefined(end.paragraph.associatedCell)) {\n            return false;\n        }\n        var table = start.paragraph.associatedCell.ownerTable.getSplitWidgets();\n        var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n        var lastParagraph = this.getLastBlockInLastCell(table[table.length - 1]);\n        if (isNested) {\n            var nestedTable = lastParagraph.associatedCell.ownerTable;\n            while (nestedTable.containerWidget instanceof TableCellWidget) {\n                nestedTable = nestedTable.containerWidget.ownerTable;\n            }\n            lastParagraph = this.getLastBlockInLastCell(nestedTable);\n        }\n        return start.paragraph.associatedCell.equals(firstParagraph.associatedCell) &&\n            end.paragraph.associatedCell.equals(lastParagraph.associatedCell)\n            && (!firstParagraph.associatedCell.equals(lastParagraph.associatedCell) || (start.offset === 0\n                && end.offset === this.getLineLength(lastParagraph.lastChild) + 1));\n    };\n    /**\n     * Select List Text\n     * @private\n     */\n    Selection.prototype.selectListText = function () {\n        var lineWidget = this.documentHelper.selectionLineWidget;\n        var endOffset = '0';\n        var selectionIndex = lineWidget.getHierarchicalIndex(endOffset);\n        var startPosition = this.getTextPosition(selectionIndex);\n        var endPosition = this.getTextPosition(selectionIndex);\n        this.isSelectList = true;\n        this.selectRange(startPosition, endPosition);\n        this.isSelectList = false;\n        this.highlightListText(this.documentHelper.selectionLineWidget);\n        this.contextTypeInternal = 'List';\n    };\n    /**\n     * Manually select the list text\n     * @private\n     */\n    Selection.prototype.highlightListText = function (linewidget) {\n        var width = linewidget.children[0].width;\n        var left = this.documentHelper.getLeftValue(linewidget);\n        var top = linewidget.paragraph.y;\n        this.createHighlightBorder(linewidget, width, left, top, false);\n        this.documentHelper.isListTextSelected = true;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateImageSize = function (imageFormat) {\n        this.owner.isShiftingEnabled = true;\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        var inline = null;\n        var index = 0;\n        var paragraph = startPosition.paragraph;\n        if (paragraph === endPosition.paragraph\n            && startPosition.offset + 1 === endPosition.offset) {\n            var inlineObj = paragraph.getInline(endPosition.offset, index);\n            inline = inlineObj.element;\n            index = inlineObj.index;\n        }\n        if (inline instanceof ImageElementBox || inline instanceof ShapeElementBox) {\n            var width = inline.width;\n            var height = inline.height;\n            var alternateText = inline.alternateText;\n            inline.width = imageFormat.width;\n            inline.height = imageFormat.height;\n            inline.alternateText = imageFormat.alternatetext;\n            imageFormat.width = width;\n            imageFormat.height = height;\n            imageFormat.alternatetext = alternateText;\n            if (paragraph !== null && paragraph.containerWidget !== null && this.owner.editorModule) {\n                var lineIndex = paragraph.childWidgets.indexOf(inline.line);\n                var elementIndex = inline.line.children.indexOf(inline);\n                this.documentHelper.layout.reLayoutParagraph(paragraph, lineIndex, elementIndex);\n                this.highlightSelection(false);\n            }\n        }\n    };\n    /**\n     * Gets selected table content\n     * @private\n     */\n    Selection.prototype.getSelectedCellsInTable = function (table, startCell, endCell) {\n        var startColumnIndex = startCell.columnIndex;\n        var endColumnIndex = endCell.columnIndex + endCell.cellFormat.columnSpan - 1;\n        var startRowindex = startCell.ownerRow.index;\n        var endRowIndex = endCell.ownerRow.index;\n        var cells = [];\n        for (var i = 0; i < table.childWidgets.length; i++) {\n            var row = table.childWidgets[i];\n            if (row.index >= startRowindex && row.index <= endRowIndex) {\n                for (var j = 0; j < row.childWidgets.length; j++) {\n                    var cell = row.childWidgets[j];\n                    if (cell.columnIndex >= startColumnIndex && cell.columnIndex <= endColumnIndex) {\n                        cells.push(cell);\n                    }\n                }\n            }\n            if (row.index > endRowIndex) {\n                break;\n            }\n        }\n        return cells;\n        // return html;\n    };\n    /**\n     * Copies the selected content to clipboard.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copy = function () {\n        if (this.isEmpty) {\n            return;\n        }\n        this.copySelectedContent(false);\n    };\n    /**\n     * @private\n     *\n     * @returns {void}\n     */\n    Selection.prototype.copySelectedContent = function (isCut) {\n        if (isNullOrUndefined(this.owner.sfdtExportModule)) {\n            return;\n        }\n        this.owner.editorModule.isCopying = true;\n        this.copyToClipboard(this.getHtmlContent());\n        this.owner.editorModule.isCopying = false;\n        if (isCut && this.owner.editorModule) {\n            this.owner.editorModule.handleCut(this);\n        }\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n    };\n    /**\n     * Write the selected content as SFDT.\n     * @returns SFDT Object.\n     */\n    Selection.prototype.writeSfdt = function () {\n        var startPosition = this.start;\n        var endPosition = this.end;\n        if (!this.isForward) {\n            startPosition = this.end;\n            endPosition = this.start;\n        }\n        return (this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), startPosition.currentWidget, startPosition.offset, endPosition.currentWidget, endPosition.offset, true));\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getHtmlContent = function () {\n        var documentContent = this.writeSfdt();\n        if (this.owner.editorModule) {\n            this.owner.editorModule.copiedData = JSON.stringify(documentContent);\n        }\n        var isOptimizedSfdt = this.owner.documentEditorSettings.optimizeSfdt;\n        return this.htmlWriter.writeHtml(documentContent, isOptimizedSfdt);\n    };\n    Selection.prototype.copyToClipboard = function (htmlContent) {\n        window.getSelection().removeAllRanges();\n        //Skip the copy operation Using shadow DOM if it is mobile device or IE browser.\n        var isSafariOnMac = (navigator.vendor && navigator.vendor.indexOf('Apple') > -1 &&\n            navigator.userAgent &&\n            navigator.userAgent.indexOf('Macintosh') > -1 &&\n            navigator.userAgent.indexOf('Safari') > -1 &&\n            navigator.userAgent.indexOf('Chrome') === -1);\n        var isMobileDeviceOrInternetExplorer = /Android|Windows Phone|iPhone|Trident|webOS/i.test(navigator.userAgent) || isSafariOnMac;\n        var shadowRoot;\n        var div = document.createElement('div');\n        div.style.left = '-10000px';\n        div.style.top = '-10000px';\n        div.style.position = 'relative';\n        div.innerHTML = htmlContent;\n        if (!isMobileDeviceOrInternetExplorer) {\n            shadowRoot = document.createElement('div');\n            var shadowDOM = shadowRoot.attachShadow({ mode: 'open' });\n            shadowDOM.appendChild(div);\n            document.body.appendChild(shadowRoot);\n        }\n        else {\n            document.body.appendChild(div);\n        }\n        if (navigator !== undefined && navigator.userAgent.indexOf('Firefox') !== -1) {\n            div.contentEditable = 'true';\n        }\n        var range = document.createRange();\n        range.selectNodeContents(div);\n        window.getSelection().addRange(range);\n        var copySuccess = false;\n        try {\n            copySuccess = document.execCommand('copy');\n        }\n        catch (e) {\n            // Copying data to Clipboard can potentially fail - for example, if another application is holding Clipboard open.       \n        }\n        finally {\n            window.getSelection().removeAllRanges();\n            div.parentNode.removeChild(div);\n            if (!isMobileDeviceOrInternetExplorer) {\n                shadowRoot.parentNode.removeChild(shadowRoot);\n            }\n        }\n        return copySuccess;\n    };\n    // Caret implementation starts\n    /**\n     * Shows caret in current selection position.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.showCaret = function () {\n        var page = !isNullOrUndefined(this.documentHelper.currentPage) ? this.documentHelper.currentPage : this.documentHelper.currentRenderingPage;\n        if (isNullOrUndefined(page) || this.documentHelper.isRowOrCellResizing || (this.owner.enableImageResizerMode && this.owner.imageResizerModule.isImageResizerVisible && !this.owner.imageResizerModule.isShapeResize)) {\n            return;\n        }\n        var left = page.boundingRectangle.x;\n        var right;\n        if (this.viewer instanceof PageLayoutViewer) {\n            right = page.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n        }\n        else {\n            right = page.boundingRectangle.width - this.owner.viewer.padding.right - this.documentHelper.scrollbarWidth;\n        }\n        if (!this.owner.enableImageResizerMode || (!this.owner.imageResizerModule.isImageResizerVisible || this.owner.imageResizerModule.isShapeResize)) {\n            if (this.isHideSelection(this.start.paragraph)) {\n                this.caret.style.display = 'none';\n            }\n            else if (this.isEmpty && (!this.owner.isReadOnly || this.owner.enableCursorOnReadOnly || this.isInlineFormFillMode())) {\n                var caretLeft = parseInt(this.caret.style.left.replace('px', ''), 10);\n                if (caretLeft < left || caretLeft > right) {\n                    this.caret.style.display = 'none';\n                }\n                else {\n                    this.caret.style.display = 'block';\n                }\n            }\n            else if (this.isImageSelected && !this.owner.enableImageResizerMode) {\n                this.caret.style.display = 'block';\n            }\n            else {\n                if (this.caret.style.display === 'block' || isNullOrUndefined(this)) {\n                    if (!this.documentHelper.isComposingIME) {\n                        this.caret.style.display = 'none';\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this) && this.documentHelper.isTouchInput && !this.owner.isReadOnlyMode) {\n            var caretStartLeft = parseInt(this.documentHelper.touchStart.style.left.replace('px', ''), 10) + 14;\n            var caretEndLeft = parseInt(this.documentHelper.touchEnd.style.left.replace('px', ''), 10) + 14;\n            var page_1 = this.getSelectionPage(this.start);\n            if (page_1) {\n                if (caretEndLeft < left || caretEndLeft > right) {\n                    this.documentHelper.touchEnd.style.display = 'none';\n                }\n                else {\n                    this.documentHelper.touchEnd.style.display = 'block';\n                }\n                if (!this.isEmpty) {\n                    left = page_1.boundingRectangle.x;\n                    right = page_1.boundingRectangle.width * this.documentHelper.zoomFactor + left;\n                }\n                if (caretStartLeft < left || caretStartLeft > right) {\n                    this.documentHelper.touchStart.style.display = 'none';\n                }\n                else {\n                    this.documentHelper.touchStart.style.display = 'block';\n                }\n            }\n        }\n        else {\n            this.documentHelper.touchStart.style.display = 'none';\n            this.documentHelper.touchEnd.style.display = 'none';\n        }\n    };\n    /**\n     * To set the editable div caret position\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.setEditableDivCaretPosition = function (index) {\n        this.documentHelper.editableDiv.focus();\n        var child = this.documentHelper.editableDiv.childNodes[this.documentHelper.editableDiv.childNodes.length - 1];\n        if (child) {\n            var range = document.createRange();\n            range.setStart(child, index);\n            range.collapse(true);\n            window.getSelection().removeAllRanges();\n            window.getSelection().addRange(range);\n        }\n    };\n    /**\n     * Initializes caret.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.initCaret = function () {\n        this.caret = createElement('div', {\n            styles: 'position:absolute',\n            className: 'e-de-blink-cursor e-de-cursor-animation'\n        });\n        this.caret.style.display = 'none';\n        this.owner.documentHelper.viewerContainer.appendChild(this.caret);\n    };\n    /**\n     * Updates caret position.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateCaretPosition = function () {\n        var caretPosition = this.end.location;\n        var page = this.getSelectionPage(this.end);\n        if (page && !isNullOrUndefined(this.caret)) {\n            this.caret.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor) + 'px';\n            var caretInfo = this.updateCaretSize(this.owner.selectionModule.end);\n            var topMargin = caretInfo.topMargin;\n            //let caretHeight: number = caretInfo.height;\n            var viewer = this.viewer;\n            var pageTop = (page.boundingRectangle.y - viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1)) * this.documentHelper.zoomFactor + viewer.pageGap * (this.documentHelper.pages.indexOf(page) + 1);\n            this.caret.style.top = pageTop + (Math.round(caretPosition.y + topMargin) * this.documentHelper.zoomFactor) + 'px';\n            if (this.owner.selectionModule.characterFormat.baselineAlignment === 'Subscript') {\n                this.caret.style.top = parseFloat(this.caret.style.top) + (parseFloat(this.caret.style.height) / 2) + 'px';\n            }\n            if (this.documentHelper.isTouchInput || this.documentHelper.touchStart.style.display !== 'none') {\n                this.documentHelper.touchStart.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n                this.documentHelper.touchStart.style.top = pageTop + ((caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor) + 'px';\n                this.documentHelper.touchEnd.style.left = page.boundingRectangle.x + (Math.round(caretPosition.x) * this.documentHelper.zoomFactor - 14) + 'px';\n                this.documentHelper.touchEnd.style.top = pageTop + ((caretPosition.y + caretInfo.height) * this.documentHelper.zoomFactor) + 'px';\n            }\n        }\n        this.showHidePasteOptions(this.caret.style.top, this.caret.style.left);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.showHidePasteOptions = function (top, left) {\n        if (Browser.isIE) {\n            return;\n        }\n        if (this.isViewPasteOptions) {\n            if (this.pasteElement && this.pasteElement.style.display === 'block') {\n                return;\n            }\n            this.createPasteElement(top, left);\n        }\n        else if (this.pasteElement) {\n            this.pasteElement.style.display = 'none';\n            if (!isNullOrUndefined(this.owner.editorModule)) {\n                this.owner.editorModule.isHtmlPaste = false;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getRect = function (position) {\n        var caretPosition = position.location;\n        var page = this.getSelectionPage(position);\n        if (page) {\n            var documentHelper = this.owner.documentHelper;\n            var left = page.boundingRectangle.x + (Math.round(caretPosition.x) * documentHelper.zoomFactor);\n            var pageGap = this.viewer.pageGap;\n            var pageTop = (page.boundingRectangle.y - pageGap * (page.index + 1)) * documentHelper.zoomFactor + pageGap * (page.index + 1);\n            var top_5 = pageTop + (Math.round(caretPosition.y) * documentHelper.zoomFactor);\n            return new Point(left, top_5);\n        }\n        return new Point(0, 0);\n    };\n    /**\n     * Gets current selected page\n     * @private\n     */\n    Selection.prototype.getSelectionPage = function (position) {\n        var lineWidget = this.getLineWidgetInternal(position.currentWidget, position.offset, true);\n        if (lineWidget) {\n            return this.getPage(lineWidget.paragraph);\n        }\n        return undefined;\n    };\n    /**\n     * Updates caret size.\n     * @private\n     */\n    Selection.prototype.updateCaretSize = function (textPosition, skipUpdate) {\n        var topMargin = 0;\n        var isItalic = false;\n        var caret;\n        var index = 0;\n        var caretHeight = 0;\n        if (this.characterFormat.italic) {\n            isItalic = this.characterFormat.italic;\n        }\n        if (textPosition.paragraph.isEmpty()) {\n            var paragraph = textPosition.paragraph;\n            var bottomMargin = 0;\n            var paragraphInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n            topMargin = paragraphInfo.topMargin;\n            bottomMargin = paragraphInfo.bottomMargin;\n            var height = paragraphInfo.height;\n            var baselineAlignment = this.characterFormat.baselineAlignment;\n            var elementHeight = height;\n            if (baselineAlignment !== 'Normal') {\n                //Set the caret height as sub/super script text height and updates the top margin for sub script text.\n                elementHeight = elementHeight / 1.5;\n                if (baselineAlignment === 'Subscript') {\n                    topMargin = height - elementHeight;\n                }\n            }\n            caretHeight = topMargin < 0 ? topMargin + elementHeight : elementHeight;\n            if (!skipUpdate) {\n                this.caret.style.height = caretHeight * this.documentHelper.zoomFactor + 'px';\n            }\n            topMargin = 0;\n        }\n        else {\n            var inlineInfo = textPosition.currentWidget.getInline(textPosition.offset, index);\n            index = inlineInfo.index;\n            var inline = inlineInfo.element;\n            if (!isNullOrUndefined(inline)) {\n                caret = this.getCaretHeight(inline, index, inline.characterFormat, true, topMargin, isItalic);\n                caretHeight = caret.height;\n                if (!skipUpdate) {\n                    this.caret.style.height = caret.height * this.documentHelper.zoomFactor + 'px';\n                }\n            }\n        }\n        if (!skipUpdate) {\n            if (isItalic) {\n                this.caret.style.transform = 'rotate(13deg)';\n            }\n            else {\n                this.caret.style.transform = '';\n            }\n        }\n        return {\n            'topMargin': topMargin,\n            'height': caretHeight\n        };\n    };\n    /**\n     * Updates caret to page.\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateCaretToPage = function (startPosition, endPage) {\n        if (!isNullOrUndefined(endPage)) {\n            this.documentHelper.selectionEndPage = endPage;\n            if (this.owner.selectionModule.isEmpty) {\n                this.documentHelper.selectionStartPage = endPage;\n            }\n            else {\n                var startLineWidget = this.getLineWidgetParagraph(startPosition.offset, startPosition.paragraph.childWidgets[0]);\n                //Gets start page.\n                var startPage = this.getPage(startLineWidget.paragraph);\n                if (!isNullOrUndefined(startPage)) {\n                    this.documentHelper.selectionStartPage = startPage;\n                }\n            }\n        }\n        if (this.owner.enableAutoFocus) {\n            this.checkForCursorVisibility();\n        }\n    };\n    /**\n     * Gets caret bottom position.\n     * @private\n     */\n    Selection.prototype.getCaretBottom = function (textPosition, isEmptySelection) {\n        var bottom = textPosition.location.y;\n        if (textPosition.paragraph.isEmpty()) {\n            var paragraph = textPosition.paragraph;\n            var topMargin = 0;\n            var bottomMargin = 0;\n            var sizeInfo = this.getParagraphMarkSize(paragraph, topMargin, bottomMargin);\n            topMargin = sizeInfo.topMargin;\n            bottomMargin = sizeInfo.bottomMargin;\n            bottom += sizeInfo.height;\n            bottom += topMargin;\n            if (!isEmptySelection) {\n                bottom += bottomMargin;\n            }\n        }\n        else {\n            var index = 0;\n            var inlineInfo = textPosition.paragraph.getInline(textPosition.offset, index);\n            var inline = inlineInfo.element;\n            index = inlineInfo.index;\n            var topMargin = 0;\n            var isItalic = false;\n            var caretHeightInfo = this.getCaretHeight(inline, index, inline.characterFormat, false, topMargin, isItalic);\n            topMargin = caretHeightInfo.topMargin;\n            isItalic = caretHeightInfo.isItalic;\n            bottom += caretHeightInfo.height;\n            if (isEmptySelection) {\n                bottom -= HelperMethods.convertPointToPixel(this.documentHelper.layout.getAfterSpacing(textPosition.paragraph));\n            }\n        }\n        return bottom;\n    };\n    /**\n     * Checks for cursor visibility.\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.checkForCursorVisibility = function () {\n        this.showCaret();\n    };\n    // caret implementation ends\n    /**\n     * Keyboard shortcuts\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.onKeyDownInternal = function (event, ctrl, shift, alt) {\n        var key = event.which || event.keyCode;\n        this.owner.focusIn();\n        if (ctrl && !shift && !alt) {\n            this.documentHelper.isControlPressed = true;\n            switch (key) {\n                // case 9:\n                //     event.preventDefault();\n                //     if (this.owner.acceptTab) {\n                //         this.selection.handleTabKey(false, false);\n                //     }\n                //     break;\n                case 35:\n                    this.handleControlEndKey();\n                    break;\n                case 36:\n                    this.handleControlHomeKey();\n                    break;\n                case 37:\n                    this.handleControlLeftKey();\n                    break;\n                case 38:\n                    this.handleControlUpKey();\n                    break;\n                case 39:\n                    this.handleControlRightKey();\n                    break;\n                case 40:\n                    this.handleControlDownKey();\n                    break;\n                case 65:\n                    this.owner.selectionModule.selectAll();\n                    break;\n                case 67:\n                    event.preventDefault();\n                    this.copy();\n                    break;\n                case 70:\n                    event.preventDefault();\n                    if (!isNullOrUndefined(this.owner.optionsPaneModule)) {\n                        this.owner.documentEditorSettings.showNavigationPane = true;\n                        this.owner.optionsPaneModule.showHideOptionsPane(true);\n                    }\n                    break;\n            }\n        }\n        else if (shift && !ctrl && !alt) {\n            this.documentHelper.isCompleted = false;\n            switch (key) {\n                case 33:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(false, shift);\n                    break;\n                case 34:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(true, shift);\n                    break;\n                case 35:\n                    this.handleShiftEndKey();\n                    event.preventDefault();\n                    break;\n                case 36:\n                    this.handleShiftHomeKey();\n                    event.preventDefault();\n                    break;\n                case 37:\n                    this.handleShiftLeftKey();\n                    event.preventDefault();\n                    break;\n                case 38:\n                    this.handleShiftUpKey();\n                    event.preventDefault();\n                    break;\n                case 39:\n                    this.handleShiftRightKey();\n                    event.preventDefault();\n                    break;\n                case 40:\n                    this.handleShiftDownKey();\n                    event.preventDefault();\n                    break;\n            }\n        }\n        else if (shift && ctrl && !alt) {\n            switch (key) {\n                case 32:\n                    this.owner.editorModule.insertText(String.fromCharCode(160));\n                    break;\n                case 35:\n                    this.handleControlShiftEndKey();\n                    break;\n                case 36:\n                    this.handleControlShiftHomeKey();\n                    break;\n                case 37:\n                    this.handleControlShiftLeftKey();\n                    break;\n                case 38:\n                    this.handleControlShiftUpKey();\n                    break;\n                case 39:\n                    this.handleControlShiftRightKey();\n                    break;\n                case 40:\n                    this.handleControlShiftDownKey();\n                    break;\n                case 56:\n                    this.owner.toggleShowHiddenMarksInternal();\n                    break;\n            }\n        }\n        else {\n            switch (key) {\n                // case 9:\n                //     event.preventDefault();\n                //     if (this.owner.acceptTab) {\n                //         this.handleTabKey(true, false);\n                //     }\n                //     break;  \n                case 33:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(false, shift);\n                    break;\n                case 34:\n                    event.preventDefault();\n                    this.handlePageUpPageDownKey(true, shift);\n                    break;\n                case 35:\n                    this.handleEndKey();\n                    event.preventDefault();\n                    break;\n                case 36:\n                    this.handleHomeKey();\n                    event.preventDefault();\n                    break;\n                case 37:\n                    this.handleLeftKey();\n                    event.preventDefault();\n                    break;\n                case 38:\n                    this.handleUpKey();\n                    event.preventDefault();\n                    break;\n                case 39:\n                    this.handleRightKey();\n                    event.preventDefault();\n                    break;\n                case 40:\n                    this.handleDownKey();\n                    event.preventDefault();\n                    break;\n            }\n        }\n        if (this.isFormField() && !(this.documentHelper.isDocumentProtected)) {\n            var formField = this.getCurrentFormField(true);\n            if (formField && formField.formFieldData instanceof DropDownFormField) {\n                formField = (event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 40) ? formField : formField.nextElement instanceof BookmarkElementBox ? formField.nextElement.reference : formField.fieldEnd;\n                var index = event.keyCode === 39 ? 1 : 0;\n                var offset = formField.line.getOffset(formField, index);\n                var point = this.getPhysicalPositionInternal(formField.line, offset, false);\n                this.selectInternal(formField.line, formField, index, point);\n            }\n        }\n        if (!this.owner.isReadOnlyMode || this.documentHelper.isCommentOnlyMode || this.isInlineFormFillMode()) {\n            this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n        }\n        else if (this.documentHelper.isDocumentProtected && this.documentHelper.protectionType === 'FormFieldsOnly') {\n            if (event.keyCode === 9 || event.keyCode === 32) {\n                this.owner.editorModule.onKeyDownInternal(event, ctrl, shift, alt);\n            }\n        }\n        if (this.owner.searchModule) {\n            if (!isNullOrUndefined(this.owner.searchModule.searchHighlighters) && this.owner.searchModule.searchHighlighters.length > 0) {\n                this.owner.searchModule.searchResults.clear();\n            }\n        }\n        if (event.keyCode === 27 || event.which === 27) {\n            if (!isNullOrUndefined(this.owner.optionsPaneModule)) {\n                this.owner.optionsPaneModule.showHideOptionsPane(false);\n                this.documentHelper.updateFocus();\n            }\n            if (this.owner.enableHeaderAndFooter) {\n                this.disableHeaderFooter();\n            }\n        }\n    };\n    //#region Enable or disable Header Footer\n    /**\n     * @private\n     */\n    Selection.prototype.checkAndEnableHeaderFooter = function (point, pagePoint) {\n        var page = this.documentHelper.currentPage;\n        if (this.isCursorInsidePageRect(point, page)) {\n            if (this.isCursorInHeaderRegion(point, page)) {\n                if (this.owner.enableHeaderAndFooter) {\n                    return false;\n                }\n                return this.enableHeadersFootersRegion(page.headerWidget, page);\n            }\n            if (this.isCursorInFooterRegion(point, page)) {\n                if (this.owner.enableHeaderAndFooter) {\n                    return false;\n                }\n                return this.enableHeadersFootersRegion(page.footerWidget, page);\n            }\n        }\n        if (this.owner.enableHeaderAndFooter) {\n            this.owner.enableHeaderAndFooter = false;\n            this.documentHelper.updateTextPositionForSelection(pagePoint, 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInsidePageRect = function (point, page) {\n        if ((this.viewer.containerLeft + point.x) >= page.boundingRectangle.x &&\n            (this.viewer.containerLeft + point.x) <= (page.boundingRectangle.x + (page.boundingRectangle.width * this.documentHelper.zoomFactor)) && this.viewer instanceof PageLayoutViewer) {\n            return true;\n        }\n        else if ((this.viewer.containerLeft + point.x) >= page.boundingRectangle.x &&\n            (this.viewer.containerLeft + point.x) <= (page.boundingRectangle.x + page.boundingRectangle.width)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInHeaderRegion = function (point, page) {\n        if (this.viewer instanceof PageLayoutViewer) {\n            var pageTop = this.getPageTop(page);\n            var headerHeight = 0;\n            var header = page.headerWidget;\n            if (header) {\n                headerHeight = (header.y + header.height);\n            }\n            var isEmpty = header.isEmpty && !this.owner.enableHeaderAndFooter;\n            var topMargin = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.topMargin);\n            var pageHeight = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.pageHeight);\n            var height = isEmpty ? topMargin : Math.min(Math.max(headerHeight, topMargin), pageHeight / 100 * 40);\n            height = height * this.documentHelper.zoomFactor;\n            if ((this.viewer.containerTop + point.y) >= pageTop && (this.viewer.containerTop + point.y) <= pageTop + height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isCursorInFooterRegion = function (point, page) {\n        if (this.viewer instanceof PageLayoutViewer) {\n            var pageRect = page.boundingRectangle;\n            var pageTop = this.getPageTop(page);\n            var pageBottom = pageTop + (pageRect.height * this.documentHelper.zoomFactor);\n            var footerDistance = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.footerDistance);\n            var footerHeight = 0;\n            if (page.footerWidget) {\n                footerHeight = page.footerWidget.height;\n            }\n            var bottomMargin = HelperMethods.convertPointToPixel(page.bodyWidgets[0].sectionFormat.bottomMargin);\n            var isEmpty = page.footerWidget.isEmpty && !this.owner.enableHeaderAndFooter;\n            var height = pageRect.height;\n            if (isEmpty) {\n                height = (height - bottomMargin) * this.documentHelper.zoomFactor;\n            }\n            else {\n                height = (height - Math.min(pageRect.height / 100 * 40, Math.max(footerHeight + footerDistance, bottomMargin))) * this.documentHelper.zoomFactor;\n            }\n            if ((this.viewer.containerTop + point.y) <= pageBottom && (this.viewer.containerTop + point.y) >= pageTop + height) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.enableHeadersFootersRegion = function (widget, page) {\n        if (this.viewer instanceof PageLayoutViewer) {\n            this.owner.enableHeaderAndFooter = true;\n            widget.page = page;\n            this.comparePageWidthAndMargins(widget, page);\n            this.updateTextPositionForBlockContainer(widget);\n            this.shiftBlockOnHeaderFooterEnableDisable();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * /* Here is the explanation for the code below:\n        1. When there are multiple sections in a document, the first section is the parent section of the other sections.\n        2. If you change the page width or header distance of the parent section, the child section will inherit the page width or header distance of the parent section.\n        3. So when you change the page width or header distance of the parent section, the child section should be relayouted.\n     * @private\n     */\n    Selection.prototype.comparePageWidthAndMargins = function (parentHFWidget, page) {\n        var headerFooterType = parentHFWidget.headerFooterType;\n        var currentHFWidget;\n        var isHeader = headerFooterType.indexOf('Header') != -1;\n        var isRelayout = false;\n        if (isHeader) {\n            currentHFWidget = page.headerWidgetIn;\n        }\n        else {\n            currentHFWidget = page.footerWidgetIn;\n        }\n        if (!isNullOrUndefined(currentHFWidget)) {\n            var parentSectionFormat = parentHFWidget.sectionFormat;\n            var currentSectionFormat = currentHFWidget.sectionFormat;\n            if (!isNullOrUndefined(parentSectionFormat) && !isNullOrUndefined(currentSectionFormat)) {\n                if (isHeader) {\n                    if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.headerDistance != currentSectionFormat.headerDistance) {\n                        isRelayout = true;\n                    }\n                }\n                else {\n                    if (parentHFWidget.width != currentHFWidget.width || parentSectionFormat.footerDistance != currentSectionFormat.footerDistance) {\n                        isRelayout = true;\n                    }\n                }\n            }\n            if (isRelayout) {\n                this.owner.viewer.updateHFClientArea(parentHFWidget.sectionFormat, isHeader);\n                parentHFWidget = this.documentHelper.layout.layoutHeaderFooterItems(this.owner.viewer, parentHFWidget);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.shiftBlockOnHeaderFooterEnableDisable = function () {\n        for (var i = 0; i < this.documentHelper.headersFooters.length; i++) {\n            var headerFooter = this.documentHelper.headersFooters[i];\n            var bodywidget = this.getBodyWidgetInternal(i, 0);\n            if (isNullOrUndefined(bodywidget)) {\n                continue;\n            }\n            var sectionFormat = bodywidget.sectionFormat;\n            for (var _i = 0, _a = Object.keys(headerFooter); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var widget = headerFooter[key];\n                if (widget.isEmpty) {\n                    this.owner.editorModule.shiftPageContent(widget.headerFooterType, sectionFormat);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.updateTextPositionForBlockContainer = function (widget) {\n        var block = widget.firstChild;\n        if (block instanceof TableWidget) {\n            block = this.getFirstBlockInFirstCell(block);\n            if (block instanceof TableWidget) {\n                block = this.getFirstBlockInFirstCell(block);\n            }\n        }\n        this.selectParagraphInternal(block, true);\n    };\n    /**\n     * Disable Header footer\n     * @private\n     */\n    Selection.prototype.disableHeaderFooter = function () {\n        var page = this.getPage(this.start.paragraph);\n        this.updateTextPositionForBlockContainer(page.bodyWidgets[0]);\n        this.owner.enableHeaderAndFooter = false;\n        this.shiftBlockOnHeaderFooterEnableDisable();\n    };\n    //#endregion\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.clear = function () {\n        if (this.editRegionHighlighters) {\n            this.editRegionHighlighters.clear();\n        }\n        this.editRangeCollection = [];\n        if (this.selectedWidgets) {\n            this.selectedWidgets.clear();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.contextTypeInternal)) {\n            this.contextTypeInternal = undefined;\n        }\n        if (this.pasteDropDwn) {\n            this.pasteDropDwn.destroy();\n            this.pasteDropDwn = undefined;\n        }\n        this.caret = undefined;\n        this.contextTypeInternal = undefined;\n        this.upDownSelectionLength = undefined;\n        this.owner = undefined;\n        this.upDownSelectionLength = undefined;\n        this.isSkipLayouting = undefined;\n        this.isImageSelected = undefined;\n        if (!isNullOrUndefined(this.documentHelper)) {\n            this.documentHelper = undefined;\n        }\n        this.contextTypeInternal = undefined;\n        this.isRetrieveFormatting = undefined;\n        if (this.characterFormatIn) {\n            this.characterFormatIn.destroy();\n        }\n        this.characterFormatIn = undefined;\n        if (this.paragraphFormatIn) {\n            this.paragraphFormatIn.destroy();\n        }\n        this.paragraphFormatIn = undefined;\n        if (this.sectionFormatIn) {\n            this.sectionFormatIn.destroy();\n        }\n        this.sectionFormatIn = undefined;\n        if (this.tableFormatIn) {\n            this.tableFormatIn.destroy();\n        }\n        this.tableFormatIn = undefined;\n        if (this.cellFormatIn) {\n            this.cellFormatIn.destroy();\n        }\n        this.cellFormatIn = undefined;\n        if (this.rowFormatIn) {\n            this.rowFormatIn.destroy();\n        }\n        this.rowFormatIn = undefined;\n        this.imageFormatInternal = undefined;\n        this.skipFormatRetrieval = undefined;\n        this.startInternal = undefined;\n        this.endInternal = undefined;\n        this.htmlWriterIn = undefined;\n        this.toolTipElement = undefined;\n        if (!isNullOrUndefined(this.toolTipObject)) {\n            this.toolTipObject.destroy();\n        }\n        this.toolTipField = undefined;\n        this.isMoveDownOrMoveUp = undefined;\n        this.pasteElement = undefined;\n        this.currentPasteAction = undefined;\n        this.isViewPasteOptions = undefined;\n        this.skipEditRangeRetrieval = undefined;\n        this.editPosition = undefined;\n        if (!isNullOrUndefined(this.selectedWidgets)) {\n            this.selectedWidgets.destroy();\n        }\n        this.isHighlightEditRegionIn = undefined;\n        this.isHighlightFormFields = undefined;\n        this.editRangeCollection = [];\n        this.editRangeCollection = undefined;\n        this.isHightlightEditRegionInternal = undefined;\n        this.isCurrentUser = undefined;\n        this.isHighlightNext = undefined;\n        this.hightLightNextParagraph = undefined;\n        this.isWebLayout = undefined;\n        if (!isNullOrUndefined(this.editRegionHighlighters)) {\n            this.editRegionHighlighters.destroy();\n        }\n        if (!isNullOrUndefined(this.formFieldHighlighters)) {\n            this.formFieldHighlighters.destroy();\n        }\n        this.isCellPrevSelected = undefined;\n        this.currentFormField = undefined;\n    };\n    /**\n     * Returns the cells in between the bounds.\n     * @param table Specify the table to find cells.\n     * @param columnFirst Specify start index of column to find cells.\n     * @param columnLast Specify end index of column to find cells.\n     * @param bookmark Specify the bookmark element.\n     */\n    Selection.prototype.getCellsToSelect = function (table, columnFirst, columnLast, bookmark) {\n        var rows = table.childWidgets;\n        if (isNullOrUndefined(bookmark.paragraph.associatedCell) || !isNullOrUndefined(bookmark.reference) && isNullOrUndefined(bookmark.reference.paragraph.associatedCell)) {\n            return undefined;\n        }\n        var startRowIndex = bookmark.paragraph.associatedCell.ownerRow.rowIndex;\n        var endRowIndex = bookmark.reference.paragraph.associatedCell.ownerRow.rowIndex;\n        var cellArray = [];\n        for (var i = startRowIndex; i <= endRowIndex; i++) {\n            var row = rows[i];\n            for (var j = columnFirst; j <= columnLast; j++) {\n                var cell = row.childWidgets[j];\n                if (!isNullOrUndefined(cell)) {\n                    cellArray.push(cell);\n                }\n            }\n        }\n        return cellArray;\n    };\n    /**\n     * Selects the cells between bookmark start and end.\n     * @param bookmark Specify the bookmark.\n     */\n    Selection.prototype.selectBookmarkInTable = function (bookmark) {\n        this.documentHelper.clearSelectionHighlight();\n        var columnFirst = parseInt(bookmark.properties['columnFirst']);\n        var columnLast = parseInt(bookmark.properties['columnLast']);\n        var table = bookmark.paragraph.associatedCell.ownerTable;\n        var cellArray = this.getCellsToSelect(table, columnFirst, columnLast, bookmark);\n        if (!isNullOrUndefined(cellArray)) {\n            for (var i = 0; i < cellArray.length; i++) {\n                this.highlightCellWidget(cellArray[i]);\n            }\n        }\n    };\n    /**\n     * Navigates to the specified bookmark.\n     * @param name\n     * @param moveToStart\n     * @param excludeBookmarkStartEnd\n     * @private\n     */\n    Selection.prototype.navigateBookmark = function (name, moveToStart, excludeBookmarkStartEnd) {\n        var bookmarks = this.documentHelper.bookmarks;\n        if (bookmarks.containsKey(name)) {\n            //bookmark start element\n            var bookmrkElmnt = bookmarks.get(name);\n            if (!isNullOrUndefined(bookmrkElmnt.properties)) {\n                this.selectBookmarkInTable(bookmrkElmnt);\n            }\n            else {\n                var offset = bookmrkElmnt.line.getOffset(bookmrkElmnt, 0);\n                if (excludeBookmarkStartEnd) {\n                    offset++;\n                }\n                var startPosition = new TextPosition(this.owner);\n                startPosition.setPositionParagraph(bookmrkElmnt.line, offset);\n                if (moveToStart) {\n                    this.documentHelper.selection.selectRange(startPosition, startPosition, true);\n                }\n                else {\n                    //bookmark end element\n                    var bookmrkEnd = bookmrkElmnt.reference;\n                    if (bookmrkElmnt.reference && bookmrkElmnt.reference.line.paragraph.bodyWidget == null) {\n                        bookmrkEnd = bookmrkElmnt;\n                    }\n                    var endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n                    if (bookmrkEnd instanceof BookmarkElementBox && !excludeBookmarkStartEnd) {\n                        if (!isNullOrUndefined(bookmrkEnd.properties)) {\n                            if (bookmrkEnd.properties['isAfterParagraphMark']) {\n                                endoffset = bookmrkEnd.line.getOffset(bookmrkEnd, 1);\n                            }\n                        }\n                    }\n                    if (excludeBookmarkStartEnd) {\n                        endoffset--;\n                    }\n                    var endPosition = new TextPosition(this.owner);\n                    endPosition.setPositionParagraph(bookmrkEnd.line, endoffset);\n                    //selects the bookmark range\n                    this.documentHelper.selection.selectRange(startPosition, endPosition, true);\n                }\n            }\n        }\n    };\n    /**\n     * Selects the specified bookmark.\n     * @param name Specify the bookmark name to select.\n     * @param excludeBookmarkStartEnd Specify true to exclude bookmark start and end from selection, otherwise false.\n     */\n    Selection.prototype.selectBookmark = function (name, excludeBookmarkStartEnd) {\n        this.navigateBookmark(name, undefined, excludeBookmarkStartEnd);\n    };\n    /**\n     * Returns the toc field from the selection.\n     * @private\n     */\n    Selection.prototype.getTocField = function () {\n        var paragraph = this.start.paragraph;\n        var tocPara = undefined;\n        while ((paragraph !== undefined && this.isTocStyle(paragraph))) {\n            tocPara = paragraph;\n            paragraph = paragraph.previousRenderedWidget;\n        }\n        if (tocPara !== undefined) {\n            var lineWidget = tocPara.childWidgets[0];\n            if (lineWidget !== undefined) {\n                return lineWidget.children[0];\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if the paragraph has toc style.\n     */\n    Selection.prototype.isTocStyle = function (paragraph) {\n        var style = paragraph.paragraphFormat.baseStyle;\n        return (style !== undefined && (style.name.toLowerCase().indexOf('toc') !== -1));\n    };\n    /**\n     * Return true if selection is in TOC\n     * @private\n     */\n    Selection.prototype.isTOC = function () {\n        var info = this.getParagraphInfo(this.start);\n        var para = info.paragraph;\n        for (var i = 0; i < para.childWidgets[0].children.length; i++) {\n            var element = para.childWidgets[0].children[i];\n            if (element instanceof FieldElementBox) {\n                var fieldCode = this.owner.selectionModule.getFieldCode(element);\n                if (fieldCode.match('TOC ') || fieldCode.match('Toc')) {\n                    return true;\n                }\n            }\n            else {\n                continue;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementsForward = function (lineWidget, startElement, endElement, bidi) {\n        if (isNullOrUndefined(startElement)) {\n            return undefined;\n        }\n        var elements = [];\n        // while (bidi && startElement && startElement !== endElement && startElement.nextElement && !startElement.isRightToLeft) {\n        //     startElement = startElement.nextElement;\n        // }\n        // while (bidi && endElement && startElement !== endElement && endElement.previousElement && !endElement.isRightToLeft) {\n        //     endElement = endElement.previousElement;\n        // }\n        var elementIndex = lineWidget.children.indexOf(startElement);\n        while (elementIndex >= 0) {\n            for (var i = elementIndex; i < lineWidget.children.length; i++) {\n                var inlineElement = lineWidget.children[i];\n                if (inlineElement.line === lineWidget) {\n                    if (inlineElement === endElement) {\n                        elements.push(inlineElement);\n                        elementIndex = -1;\n                        break;\n                    }\n                    else {\n                        elements.push(inlineElement);\n                    }\n                }\n                else {\n                    elementIndex = -1;\n                    break;\n                }\n            }\n            // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n            elementIndex = -1;\n        }\n        return elements.length === 0 ? undefined : elements;\n    };\n    // Gets the current line elements in inline reverse order from the end element.\n    /**\n     * @private\n     */\n    Selection.prototype.getElementsBackward = function (lineWidget, startElement, endElement, bidi) {\n        var elements = [];\n        while (bidi && startElement && startElement.previousElement && (!startElement.isRightToLeft\n            || startElement instanceof TextElementBox && this.documentHelper.textHelper.isRTLText(startElement.text))) {\n            startElement = startElement.previousElement;\n        }\n        var elementIndex = lineWidget.children.indexOf(startElement);\n        while (elementIndex >= 0) {\n            for (var i = elementIndex; i > -1 && i < lineWidget.children.length; bidi ? i++ : i--) {\n                var inlineElement = lineWidget.children[i];\n                if (inlineElement.line === lineWidget) {\n                    elements.push(inlineElement);\n                }\n                else {\n                    elementIndex = -1;\n                    break;\n                }\n            }\n            // inline = inline !== null && inline.NextNode !== null ? (inline.NextNode as Inline).GetNextRenderedInline() : null;\n            elementIndex = -1;\n        }\n        return elements;\n    };\n    /**\n     * Navigates to the previous comment in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigatePreviousComment = function () {\n        this.commentNavigateInternal(false);\n    };\n    /**\n     * Navigates to the next comment in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateNextComment = function () {\n        this.commentNavigateInternal(true);\n    };\n    Selection.prototype.commentNavigateInternal = function (next) {\n        if (!this.documentHelper.currentSelectedComment) {\n            if (this.documentHelper.comments.length === 0) {\n                return;\n            }\n            this.documentHelper.currentSelectedComment = this.documentHelper.comments[0];\n        }\n        if (this.documentHelper.currentSelectedComment) {\n            var comments = this.documentHelper.comments;\n            var comment = this.documentHelper.currentSelectedComment;\n            var index = comments.indexOf(comment);\n            if (next) {\n                comment = (index === (comments.length - 1)) ? comments[0] : comments[index + 1];\n            }\n            else {\n                comment = index === 0 ? comments[comments.length - 1] : comments[index - 1];\n            }\n            this.documentHelper.currentSelectedComment = comment;\n            this.selectComment(comment);\n        }\n    };\n    /**\n     * Navigates to the previous revision in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigatePreviousRevision = function () {\n        this.revisionNavigateInternal(false);\n    };\n    /**\n     * Navigates to the next revision in the document.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateNextRevision = function () {\n        this.revisionNavigateInternal(true);\n    };\n    /**\n     * Method to navigate revisions\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.revisionNavigateInternal = function (next) {\n        if (!this.documentHelper.currentSelectedRevisionInternal) {\n            if (this.documentHelper.owner.revisions.length === 0) {\n                return;\n            }\n            this.documentHelper.currentSelectedRevision = this.documentHelper.owner.revisions.get(0);\n        }\n        if (this.documentHelper.currentSelectedRevision) {\n            var revisions = this.documentHelper.owner.revisions.changes;\n            var revision = this.documentHelper.currentSelectedRevision;\n            var index = revisions.indexOf(revision);\n            if (next) {\n                revision = (index === (revisions.length - 1)) ? revisions[0] : revisions[index + 1];\n            }\n            else {\n                revision = index === 0 ? revisions[revisions.length - 1] : revisions[index - 1];\n            }\n            this.documentHelper.currentSelectedRevision = revision;\n            this.selectRevision(revision);\n        }\n        this.owner.trackChangesPane.currentSelectedRevision = this.documentHelper.currentSelectedRevision;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.selectComment = function (comment) {\n        if (!isNullOrUndefined(comment)) {\n            var startPosition = this.getElementPosition(comment.commentStart, true).startPosition;\n            var endPosition = this.getElementPosition(comment.commentEnd, false).startPosition;\n            if (this.owner.commentReviewPane) {\n                this.owner.commentReviewPane.selectComment(comment);\n            }\n            this.selectPosition(startPosition, endPosition);\n        }\n    };\n    /**\n     * @private\n     * @param revision\n     * @returns {void}\n     */\n    Selection.prototype.selectRevision = function (revision, startPosition, endPosition) {\n        var isSelect = false;\n        if (isNullOrUndefined(startPosition) && isNullOrUndefined(endPosition)) {\n            isSelect = true;\n        }\n        if (!isNullOrUndefined(revision) && revision.range.length > 0) {\n            var firstElement = revision.range[0];\n            var lastElement = revision.range[revision.range.length - 1];\n            if (firstElement instanceof WRowFormat) {\n                var rowWidget = firstElement.ownerBase;\n                var firstCell = rowWidget.childWidgets[0];\n                var lastCell = rowWidget.childWidgets[rowWidget.childWidgets.length - 1];\n                var firstPara = this.getFirstParagraph(firstCell);\n                var lastPara = this.getLastParagraph(lastCell);\n                this.start.setPosition(firstPara.firstChild, true);\n                this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                this.selectPosition(this.start, this.end);\n            }\n            else if (firstElement && lastElement) {\n                if (isNullOrUndefined(startPosition)) {\n                    startPosition = new TextPosition(this.owner);\n                }\n                var offset = 0;\n                if (firstElement instanceof WCharacterFormat) {\n                    var currentPara = firstElement.ownerBase;\n                    // Set the offset based on length of para - length of remaning lines except last line because we have added the remaning line length in getParagraphInfoInternal method.\n                    //when we have add para length to the offset, again added the length of remaning lines except last line in getParagraphInfoInternal method. so when perform undo, the offset is greater than para length + 1. in this case, we set the para length to start and end offset, so paramark doesn't comes to selection region (undo case for splitted para but paramark only tracked).\n                    if (currentPara.childWidgets.length > 1) {\n                        offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n                    }\n                    else {\n                        // added the condition to set offset to paragraph start when para without contain text elements.\n                        if (this.isEmptyWidget(currentPara)) {\n                            offset = 0;\n                        }\n                        else {\n                            offset = currentPara.getLength();\n                        }\n                    }\n                    startPosition.setPositionParagraph(currentPara.lastChild, offset);\n                }\n                else {\n                    offset = firstElement.line.getOffset(firstElement, 0);\n                    var line = firstElement.line;\n                    if (line.isFirstLine()) {\n                        for (var i = 0; i < line.children.length; i++) {\n                            if (firstElement === line.children[i] && line.children[i] instanceof TextElementBox) {\n                                offset = 0;\n                                break;\n                            }\n                            else if (line.children[i] instanceof TextElementBox) {\n                                break;\n                            }\n                        }\n                    }\n                    startPosition.setPositionForLineWidget(firstElement.line, offset);\n                }\n                if (isNullOrUndefined(endPosition)) {\n                    endPosition = new TextPosition(this.owner);\n                }\n                if (lastElement instanceof WCharacterFormat) {\n                    var currentPara = lastElement.ownerBase;\n                    var splittedWidgets = currentPara.getSplitWidgets();\n                    currentPara = splittedWidgets[splittedWidgets.length - 1];\n                    if (currentPara.isEndsWithPageBreak || currentPara.isEndsWithColumnBreak) {\n                        this.owner.trackChangesPane.isTrackingPageBreak = true;\n                    }\n                    // Changed the condition to get last child of current paragraph instead of next para of current para if current para contain page break\n                    if (currentPara.childWidgets.length > 1) {\n                        offset = this.getParagraphLength(currentPara) - this.getParagraphLength(currentPara, currentPara.lastChild);\n                    }\n                    else {\n                        offset = currentPara.getLength();\n                    }\n                    endPosition.setPositionParagraph(currentPara.lastChild, offset + 1);\n                }\n                else {\n                    offset = lastElement.line.getOffset(lastElement, 0) + lastElement.length;\n                    if (this.isTOC()) {\n                        offset += 1;\n                    }\n                    endPosition.setPositionForLineWidget(lastElement.line, offset);\n                }\n                var curentPosition = startPosition.clone();\n                if (!startPosition.isExistBefore(endPosition)) {\n                    startPosition = endPosition;\n                    endPosition = curentPosition;\n                }\n                if (isSelect) {\n                    this.selectPosition(startPosition, endPosition);\n                }\n            }\n        }\n    };\n    Selection.prototype.isEmptyWidget = function (block) {\n        if (block instanceof TableWidget) {\n            return false;\n        }\n        else if (block.isEmpty()) {\n            return true;\n        }\n        else {\n            for (var i = 0; i < block.childWidgets.length; i++) {\n                var line = block.childWidgets[i];\n                for (var j = 0; j < line.children.length; j++) {\n                    if (line.children[j] instanceof TextElementBox) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.selectTableRevision = function (revision) {\n        if (!isNullOrUndefined(revision) && revision[0].range.length > 0) {\n            var firstElementTable = revision[0].range[0];\n            var lastElementTable = revision[revision.length - 1].range[0];\n            if (firstElementTable instanceof WRowFormat) {\n                var firstRowWidget = firstElementTable.ownerBase;\n                var firstCell = firstRowWidget.childWidgets[0];\n                var secondRowWidget = lastElementTable.ownerBase;\n                var lastCell = secondRowWidget.childWidgets[secondRowWidget.childWidgets.length - 1];\n                var firstPara = this.getFirstParagraph(firstCell);\n                var lastPara = this.getLastParagraph(lastCell);\n                this.start.setPosition(firstPara.firstChild, true);\n                this.end.setPositionParagraph(lastPara.lastChild, lastPara.lastChild.getEndOffset() + 1);\n                this.selectPosition(this.start, this.end);\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.updateEditRangeCollection = function () {\n        if (this.editRangeCollection.length > 0) {\n            this.editRangeCollection = [];\n        }\n        var editRangeStart;\n        var everyOneArea;\n        if (!this.documentHelper.isDocumentProtected) {\n            for (var i = 0; i < this.documentHelper.editRanges.length; i++) {\n                var user = this.documentHelper.editRanges.keys[i];\n                editRangeStart = this.documentHelper.editRanges.get(user);\n                for (var j = 0; j < editRangeStart.length; j++) {\n                    this.editRangeCollection.push(editRangeStart[j]);\n                }\n            }\n        }\n        else {\n            if (this.documentHelper.editRanges.containsKey(this.owner.currentUser)) {\n                editRangeStart = this.documentHelper.editRanges.get(this.owner.currentUser);\n                for (var j = 0; j < editRangeStart.length; j++) {\n                    this.editRangeCollection.push(editRangeStart[j]);\n                }\n            }\n            if (this.documentHelper.editRanges.containsKey('Everyone')) {\n                var user = 'Everyone';\n                everyOneArea = this.documentHelper.editRanges.get(user);\n                for (var j = 0; j < everyOneArea.length; j++) {\n                    this.editRangeCollection.push(everyOneArea[j]);\n                }\n            }\n        }\n    };\n    //Restrict editing implementation starts\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.onHighlight = function () {\n        if (this.isHighlightEditRegion) {\n            this.highlightEditRegion();\n        }\n        else {\n            this.unHighlightEditRegion();\n        }\n        this.viewer.renderVisiblePages();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightEditRegion = function () {\n        this.updateEditRangeCollection();\n        if (this.owner.enableLockAndEdit) {\n            this.viewer.updateScrollBars();\n            return;\n        }\n        if (!this.isHighlightEditRegion) {\n            this.unHighlightEditRegion();\n            return;\n        }\n        this.isHightlightEditRegionInternal = true;\n        if (isNullOrUndefined(this.editRegionHighlighters)) {\n            this.editRegionHighlighters = new Dictionary();\n        }\n        this.editRegionHighlighters.clear();\n        for (var j = 0; j < this.editRangeCollection.length; j++) {\n            this.highlightEditRegionInternal(this.editRangeCollection[j]);\n        }\n        this.isHightlightEditRegionInternal = false;\n        this.viewer.updateScrollBars();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightFormFields = function () {\n        if (isNullOrUndefined(this.formFieldHighlighters)) {\n            this.formFieldHighlighters = new Dictionary();\n        }\n        this.formFieldHighlighters.clear();\n        var formFields = this.documentHelper.formFields;\n        if (!isNullOrUndefined(formFields) && formFields.length > 0) {\n            for (var i = 0; i < formFields.length; i++) {\n                var formField = formFields[i];\n                if (HelperMethods.isLinkedFieldCharacter(formField)) {\n                    var offset = formField.line.getOffset(formField, 0);\n                    var startPosition = new TextPosition(this.owner);\n                    startPosition.setPositionParagraph(formField.line, offset);\n                    var endElement = formField.fieldEnd;\n                    offset = endElement.line.getOffset(endElement, 1);\n                    var endPosition = new TextPosition(this.owner);\n                    endPosition.setPositionParagraph(endElement.line, offset);\n                    this.isHighlightFormFields = true;\n                    this.highlight(startPosition.paragraph, startPosition, endPosition);\n                    if (this.isHighlightNext) {\n                        this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                        this.isHighlightNext = false;\n                        this.hightLightNextParagraph = undefined;\n                    }\n                }\n            }\n            this.isHighlightFormFields = false;\n            this.viewer.updateScrollBars();\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.unHighlightEditRegion = function () {\n        if (!isNullOrUndefined(this.editRegionHighlighters)) {\n            this.editRegionHighlighters.clear();\n            this.editRegionHighlighters = undefined;\n        }\n        this.isHightlightEditRegionInternal = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.highlightEditRegionInternal = function (editRangeStart) {\n        var positionInfo = this.getPosition(editRangeStart);\n        var startPosition = positionInfo.startPosition;\n        var endPosition = positionInfo.endPosition;\n        // if (editRangeStart.user === this.owner.currentUser && editRangeStart.group === '') {\n        this.isCurrentUser = true;\n        // }\n        this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n        this.isCurrentUser = false;\n    };\n    /**\n     * Shows all the editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.showAllEditingRegion = function () {\n        if (this.editRangeCollection.length === 0) {\n            this.updateEditRangeCollection();\n        }\n        this.documentHelper.clearSelectionHighlight();\n        for (var j = 0; j < this.editRangeCollection.length; j++) {\n            var editRangeStart = this.editRangeCollection[j];\n            var positionInfo = this.getPosition(editRangeStart);\n            var startPosition = positionInfo.startPosition;\n            var endPosition = positionInfo.endPosition;\n            this.highlightEditRegions(editRangeStart, startPosition, endPosition);\n        }\n    };\n    Selection.prototype.highlightEditRegions = function (editRangeStart, startPosition, endPosition) {\n        if (!editRangeStart.line.paragraph.isInsideTable\n            || (editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable) || editRangeStart.columnFirst === -1) {\n            this.highlight(editRangeStart.line.paragraph, startPosition, endPosition);\n            if (this.isHighlightNext) {\n                this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                this.isHighlightNext = false;\n                this.hightLightNextParagraph = undefined;\n            }\n        }\n        else {\n            var row = editRangeStart.line.paragraph.associatedCell.ownerRow;\n            var cell = row.childWidgets[editRangeStart.columnFirst];\n            if (cell) {\n                for (var i = 0; i < cell.childWidgets.length; i++) {\n                    if (cell.childWidgets[i] instanceof ParagraphWidget) {\n                        this.highlight(cell.childWidgets[i], startPosition, endPosition);\n                        if (this.isHighlightNext) {\n                            this.highlightNextBlock(this.hightLightNextParagraph, startPosition, endPosition);\n                            this.isHighlightNext = false;\n                            this.hightLightNextParagraph = undefined;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Navigates to the next editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.navigateToNextEditingRegion = function () {\n        var editRange = this.getEditRangeStartElement();\n        if (this.editRangeCollection.length > 0) {\n            this.sortEditRangeCollection();\n            var length_2 = this.editRangeCollection.length;\n            var index = length_2;\n            if (!isNullOrUndefined(editRange)) {\n                index = this.editRangeCollection.indexOf(editRange);\n            }\n            var editRangeStart = index < length_2 - 1 ?\n                this.editRangeCollection[index + 1] : this.editRangeCollection[0];\n            var positionInfo = this.getPosition(editRangeStart);\n            var startPosition = positionInfo.startPosition;\n            var endPosition = positionInfo.endPosition;\n            this.selectRange(startPosition, endPosition);\n        }\n    };\n    Selection.prototype.sortEditRangeCollection = function () {\n        //Sort based on position\n        for (var i = this.editRangeCollection.length - 1; i >= 0; i--) {\n            for (var j = 1; j <= i; j++) {\n                var nextPosition = this.getPosition(this.editRangeCollection[j - 1]).startPosition;\n                var firstPosition = this.getPosition(this.editRangeCollection[j]).startPosition;\n                if (nextPosition.isExistAfter(firstPosition)) {\n                    var temp = this.editRangeCollection[j - 1];\n                    this.editRangeCollection[j - 1] = this.editRangeCollection[j];\n                    this.editRangeCollection[j] = temp;\n                }\n            }\n        }\n    };\n    /**\n     * Highlights all the editing region, where current user can edit.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.toggleEditingRegionHighlight = function () {\n        this.isHighlightEditRegion = !this.isHighlightEditRegion;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getEditRangeStartElement = function () {\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editStart = this.editRangeCollection[i];\n            var position = this.getPosition(editStart);\n            var start = position.startPosition;\n            var end = position.endPosition;\n            if ((this.start.isExistAfter(start) || this.start.isAtSamePosition(start))\n                && (this.end.isExistBefore(end) || this.end.isAtSamePosition(end))) {\n                return editStart;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Determines whether the selection is inside the edit region.\n     *\n     * @returns {boolean} Returns true if the selection is inside the edit region; Otherwise, false.\n     */\n    Selection.prototype.isSelectionInEditRegion = function () {\n        if (!this.documentHelper.isDocumentProtected) {\n            return false;\n        }\n        return this.checkSelectionIsAtEditRegion();\n    };\n    /**\n     * Determines whether the specified start and end position of the selection is inside the edit region.\n     * @param {TextPosition} start Specify the start position of the selection.\n     * @param {TextPosition} end Specify the end position of the selection.\n     * @returns {boolean} Returns true if the specified start and end position of the selection is inside the edit region; Otherwise, false.\n     */\n    Selection.prototype.checkSelectionIsAtEditRegion = function (start, end) {\n        if (isNullOrUndefined(start) && isNullOrUndefined(end)) {\n            start = this.start;\n            end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n        }\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editRangeStart = this.editRangeCollection[i];\n            if (!editRangeStart.line.paragraph.isInsideTable\n                || (editRangeStart.line.paragraph.isInsideTable && !editRangeStart.editRangeEnd.line.paragraph.isInsideTable)\n                || editRangeStart.columnFirst === -1) {\n                if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n                    return true;\n                }\n            }\n            else {\n                if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd &&\n                    editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n                    var editRangeRow = editRangeStart.paragraph.associatedCell.ownerRow;\n                    var startCell = start.paragraph.associatedCell;\n                    var endCell = end.paragraph.associatedCell;\n                    if (!isNullOrUndefined(startCell) && !isNullOrUndefined(endCell)) {\n                        if (editRangeRow.equals(startCell.ownerRow) && editRangeRow.equals(endCell.ownerRow)\n                            && startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n                            if (this.isEmpty && startCell.index === editRangeStart.line.paragraph.associatedCell.index) {\n                                if (this.isSelectionInsideEditRange(editRangeStart, start, end)) {\n                                    return true;\n                                }\n                            }\n                            else if (!this.isCellSelected(startCell, start, end)) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.isEditRangeCellSelected = function (start, end) {\n        if (isNullOrUndefined(start) && isNullOrUndefined(end)) {\n            start = this.start;\n            end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n        }\n        for (var i = 0; i < this.editRangeCollection.length; i++) {\n            var editRangeStart = this.editRangeCollection[i];\n            if (editRangeStart.paragraph.isInsideTable && editRangeStart.editRangeEnd &&\n                editRangeStart.editRangeEnd.line.paragraph.isInsideTable) {\n                var startCell = start.paragraph.associatedCell;\n                var endCell = end.paragraph.associatedCell;\n                var editRangeCell = editRangeStart.paragraph.associatedCell;\n                if (!isNullOrUndefined(startCell) && !isNullOrUndefined(endCell)) {\n                    if (startCell.index >= editRangeStart.columnFirst && startCell.index <= editRangeStart.columnLast) {\n                        if (this.isCellSelected(editRangeCell, start, end)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    Selection.prototype.isSelectionInsideEditRange = function (editRangeStart, start, end) {\n        var positionInfo = this.getPosition(editRangeStart);\n        var startPosition = positionInfo.startPosition;\n        var endPosition = positionInfo.endPosition;\n        if ((start.isExistAfter(startPosition) || start.isAtSamePosition(startPosition))\n            && (end.isExistBefore(endPosition) || end.isAtSamePosition(endPosition))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPosition = function (element) {\n        var offset = element.line.getOffset(element, 1);\n        var startPosition = new TextPosition(this.owner);\n        startPosition.setPositionParagraph(element.line, offset);\n        var endElement;\n        if (element instanceof EditRangeStartElementBox) {\n            endElement = element.editRangeEnd;\n        }\n        else if (element instanceof ContentControl) {\n            endElement = element.reference;\n        }\n        else if (element instanceof BookmarkElementBox) {\n            endElement = element.reference;\n        }\n        else if (element instanceof CommentCharacterElementBox) {\n            endElement = element.comment.commentEnd;\n        }\n        var endPosition;\n        if (!isNullOrUndefined(endElement.line)) {\n            offset = endElement.line.getOffset(endElement, 1);\n            endPosition = new TextPosition(this.owner);\n            endPosition.setPositionParagraph(endElement.line, offset);\n        }\n        else {\n            endPosition = startPosition.clone();\n        }\n        return { 'startPosition': startPosition, 'endPosition': endPosition };\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.checkContentControlLocked = function (checkFormat) {\n        this.owner.editorModule.isXmlMapped = false;\n        for (var i = 0; i < this.documentHelper.contentControlCollection.length; i++) {\n            var contentControlStart = this.documentHelper.contentControlCollection[i];\n            if (isNullOrUndefined(contentControlStart.reference) || contentControlStart.reference.indexInOwner === -1) {\n                continue;\n            }\n            var position = this.getPosition(contentControlStart);\n            var cCstart = position.startPosition;\n            var cCend = position.endPosition;\n            var start = this.start;\n            var end = this.end;\n            if (!this.isForward) {\n                start = this.end;\n                end = this.start;\n            }\n            if (isNullOrUndefined(checkFormat)) {\n                var cCStartInsideSelction = ((cCstart.isExistAfter(start) || cCstart.isAtSamePosition(start)) && (cCstart.isExistBefore(end) || cCstart.isAtSamePosition(end)));\n                var cCEndInsideSelction = ((cCend.isExistAfter(start) || cCend.isAtSamePosition(start)) && (cCend.isExistBefore(end) || cCend.isAtSamePosition(end)));\n                if (cCStartInsideSelction && cCEndInsideSelction) {\n                    if (contentControlStart.contentControlProperties.lockContentControl) {\n                        this.owner.trigger(contentControlEvent);\n                        return true;\n                    }\n                    return false;\n                }\n                if ((cCStartInsideSelction) || (cCEndInsideSelction)) {\n                    if (!(cCstart.isAtSamePosition(start) || cCend.isAtSamePosition(start)) && (contentControlStart.contentControlProperties.lockContentControl || contentControlStart.contentControlProperties.lockContents)) {\n                        return true;\n                    }\n                }\n            }\n            if ((start.isExistAfter(cCstart) || start.isAtSamePosition(cCstart))\n                && (end.isExistBefore(cCend) || end.isAtSamePosition(cCend))) {\n                if (contentControlStart.contentControlProperties.xmlMapping\n                    && contentControlStart.contentControlProperties.xmlMapping.isMapped) {\n                    this.owner.editorModule.isXmlMapped = true;\n                }\n                if (contentControlStart.contentControlProperties.lockContents) {\n                    this.owner.trigger(contentControlEvent);\n                    return true;\n                }\n                else if (isNullOrUndefined(checkFormat)\n                    && (contentControlStart.contentControlProperties.type === 'CheckBox'\n                        || contentControlStart.contentControlProperties.type === 'ComboBox'\n                        || contentControlStart.contentControlProperties.type === 'DropDownList'\n                        || contentControlStart.contentControlProperties.type === 'Date')) {\n                    this.owner.trigger(contentControlEvent);\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getElementPosition = function (element, isEnd) {\n        var offset = element.line.getOffset(element, isEnd ? 0 : 1);\n        var startPosition = new TextPosition(this.owner);\n        startPosition.setPositionParagraph(element.line, offset);\n        return { 'startPosition': startPosition, 'endPosition': undefined };\n    };\n    //Restrict editing implementation ends\n    /**\n     * Update ref field.\n     * @private\n     */\n    Selection.prototype.updateRefField = function (field) {\n        if (isNullOrUndefined(field)) {\n            field = this.getHyperlinkField(true);\n        }\n        if (!isNullOrUndefined(field)) {\n            if (!this.isReferenceField(field)) {\n                return;\n            }\n            var fieldCode = this.getFieldCode(field).replace(/\\s+/g, ' ');\n            fieldCode = fieldCode.trim();\n            if (fieldCode.toLowerCase().indexOf('ref') === 0) {\n                var code = fieldCode.split(' ');\n                if (code.length > 1) {\n                    var bookmarkId = code[1];\n                    if (this.documentHelper.bookmarks.containsKey(bookmarkId)) {\n                        var start = this.start;\n                        var end = this.end;\n                        if (!this.isForward) {\n                            start = this.end;\n                            end = this.start;\n                        }\n                        var bookmarkStart = this.documentHelper.bookmarks.get(bookmarkId);\n                        var bookmarkEnd = bookmarkStart.reference;\n                        var previousNode = bookmarkStart.previousNode;\n                        if ((isNullOrUndefined(previousNode) || !(previousNode instanceof FieldElementBox))\n                            && bookmarkEnd && bookmarkEnd.previousNode instanceof FieldElementBox\n                            && bookmarkEnd.previousNode.fieldType === 1\n                            && !isNullOrUndefined(bookmarkEnd.previousNode.fieldBegin)\n                            && !isNullOrUndefined(bookmarkEnd.previousNode.fieldBegin.formFieldData)) {\n                            bookmarkStart = bookmarkEnd.previousNode.fieldBegin.fieldSeparator;\n                            bookmarkEnd = bookmarkEnd.previousNode.fieldBegin.fieldEnd;\n                        }\n                        else if (previousNode instanceof FieldElementBox && previousNode.fieldType === 0\n                            && !isNullOrUndefined(previousNode.formFieldData)) {\n                            bookmarkStart = previousNode.fieldSeparator;\n                            bookmarkEnd = previousNode.fieldEnd;\n                        }\n                        var offset = bookmarkStart.line.getOffset(bookmarkStart, 1);\n                        start.setPositionParagraph(bookmarkStart.line, offset);\n                        end.setPositionParagraph(bookmarkEnd.line, bookmarkEnd.line.getOffset(bookmarkEnd, 0));\n                        var documentContent = this.owner.sfdtExportModule.write((this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0), start.currentWidget, start.offset, end.currentWidget, end.offset, false, true);\n                        var startElement = field.fieldSeparator;\n                        var endElement = field.fieldEnd;\n                        start.setPositionParagraph(startElement.line, startElement.line.getOffset(startElement, 1));\n                        end.setPositionParagraph(endElement.line, endElement.line.getOffset(endElement, 0));\n                        this.owner.editorModule.pasteContents(documentContent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     * @returns {void}\n     */\n    Selection.prototype.footnoteReferenceElement = function (start, end, inline) {\n        var container = this.getContainerWidget(start.paragraph);\n        var count = 0;\n        if (container instanceof FootNoteWidget) {\n            var footNoteElement = this.start.paragraph.bodyWidget.footNoteReference;\n            for (var i = 0; i < this.documentHelper.pages.length; i++) {\n                count = 0;\n                var page = this.documentHelper.pages[i];\n                for (var j = 0; j < page.bodyWidgets.length; j++) {\n                    var bodyWidget = page.bodyWidgets[j];\n                    for (var k = 0; k < bodyWidget.childWidgets.length; k++) {\n                        var paragraph = bodyWidget.childWidgets[k];\n                        if (paragraph instanceof TableWidget) {\n                            for (var tr = 0; tr < paragraph.childWidgets.length; tr++) {\n                                var tablerow = paragraph.childWidgets[tr];\n                                for (var tc = 0; tc < tablerow.childWidgets.length; tc++) {\n                                    var tablecell = tablerow.childWidgets[tc];\n                                    for (var para = 0; para < tablecell.childWidgets.length; para++) {\n                                        var paragr = tablecell.childWidgets[para];\n                                        for (var line = 0; line < paragr.childWidgets.length; line++) {\n                                            var lines = paragr.childWidgets[line];\n                                            count = 0;\n                                            if (!isNullOrUndefined(lines.children)) {\n                                                for (var m = 0; m < lines.children.length; m++) {\n                                                    var child = lines.children[m];\n                                                    count += child.length;\n                                                    if (child instanceof FootnoteElementBox && child === footNoteElement) {\n                                                        start.setPositionParagraph(lines, count - 1);\n                                                        end.setPositionParagraph(lines, count);\n                                                        this.selectRange(start, end);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var l = 0; l < paragraph.childWidgets.length; l++) {\n                                var lines = paragraph.childWidgets[l];\n                                count = 0;\n                                if (!isNullOrUndefined(lines.children)) {\n                                    for (var m = 0; m < lines.children.length; m++) {\n                                        var child = lines.children[m];\n                                        count += child.length;\n                                        if (child instanceof FootnoteElementBox && child === footNoteElement) {\n                                            start.setPositionParagraph(lines, count - 1);\n                                            end.setPositionParagraph(lines, count);\n                                            this.selectRange(start, end);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Convert hierachical index to linear index;\n     * @private\n     */\n    Selection.prototype.getAbsolutePositionFromRelativePosition = function (textPosition) {\n        var startPosition;\n        if (typeof textPosition == 'string') {\n            startPosition = this.getTextPosBasedOnLogicalIndex(textPosition);\n        }\n        else {\n            startPosition = textPosition;\n        }\n        var paragraphInfo = this.getParagraphInfo(startPosition);\n        var positionInfo = { position: 0, done: false };\n        this.getPositionInfoForHeaderFooter(paragraphInfo, positionInfo);\n        if (!positionInfo.done) {\n            //Iterate Footnotes content;\n        }\n        return positionInfo.position;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPositionInfoForBodyContent = function (paragraphInfo, positionInfo, blockWidget, tableBlock) {\n        var block = !isNullOrUndefined(blockWidget) ? blockWidget : this.documentHelper.pages[0].bodyWidgets[0].childWidgets[0];\n        //Iterate body content;\n        positionInfo.position += this.getBlockIndex(block, paragraphInfo, positionInfo, tableBlock);\n        return positionInfo;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getPositionInfoForHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n        positionInfo = this.getPositionInfoForBodyContent(paragraphInfo, positionInfo, undefined, tableBlock);\n        if (!positionInfo.done) {\n            //Iterate header/footer content;\n            this.getBlockIndexFromHeaderFooter(paragraphInfo, positionInfo, tableBlock);\n        }\n        return positionInfo;\n    };\n    Selection.prototype.getBlockIndexFromHeaderFooter = function (paragraphInfo, positionInfo, tableBlock) {\n        //Iterate header/footer content;\n        var headersFooters = this.documentHelper.headersFooters;\n        for (var _i = 0, headersFooters_1 = headersFooters; _i < headersFooters_1.length; _i++) {\n            var headerFooter = headersFooters_1[_i];\n            for (var i = 0; i < 6; i++) {\n                var currentHeaderFooter = headerFooter[i];\n                if (currentHeaderFooter) {\n                    positionInfo.position += this.getBlockIndex(currentHeaderFooter.childWidgets[0], paragraphInfo, positionInfo, tableBlock);\n                    if (positionInfo.done) {\n                        return positionInfo;\n                    }\n                }\n                else {\n                    positionInfo.position += 1;\n                }\n            }\n        }\n        return positionInfo;\n    };\n    Selection.prototype.getBlockIndex = function (block, paragraphInfo, positionInfo, tableBlock) {\n        var position = 0;\n        var fieldResult = { length: 0 };\n        do {\n            if (block instanceof ParagraphWidget && !isNullOrUndefined(paragraphInfo) && !isNullOrUndefined(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n                //Paragraph start\n                position += 1;\n                var elementInfo = block.getInline(paragraphInfo.offset, 0);\n                position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n                // if (this.isEndOffset && this.end.offset === this.getLineLength(this.end.currentWidget) + 1) {\n                //     position += 1;\n                // }\n                // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n                //     position -= fieldResult.length;\n                // }\n                positionInfo.done = true;\n                break;\n            }\n            position = this.getBlockLength(paragraphInfo, block, position, positionInfo, true, tableBlock, fieldResult);\n            if (positionInfo.done) {\n                // if (this.owner.documentHelper.isDocumentProtected && this.owner.documentHelper.protectionType === 'FormFieldsOnly') {\n                //     position -= fieldResult.length;\n                // }\n                break;\n            }\n            if (!isNullOrUndefined(block)) {\n                if (block.containerWidget instanceof BodyWidget && block.containerWidget.containerWidget instanceof FootNoteWidget) {\n                    var nextBlock = block.getSplitWidgets().pop().nextRenderedWidget;\n                    if (!isNullOrUndefined(nextBlock) && block.containerWidget !== nextBlock.containerWidget) {\n                        break;\n                    }\n                    else {\n                        block = nextBlock;\n                    }\n                }\n                else {\n                    block = block.getSplitWidgets().pop().nextRenderedWidget;\n                }\n            }\n        } while (block);\n        //positionInfo.position = position;\n        return position;\n    };\n    Selection.prototype.getBlockTotalLength = function (block, targetBlock, positionInfo, tableBlock, fieldResult) {\n        var offset = 0;\n        var isDropdown = false;\n        var splittedWidget = block.getSplitWidgets();\n        for (var i = 0; i < splittedWidget.length; i++) {\n            for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n                var line = splittedWidget[i].childWidgets[j];\n                for (var k = 0; k < line.children.length; k++) {\n                    var element = line.children[k];\n                    if (element instanceof ListTextElementBox) {\n                        continue;\n                    }\n                    if (element instanceof ShapeElementBox || element instanceof FootnoteElementBox) {\n                        if (element instanceof ShapeElementBox) {\n                            if (element.textFrame.childWidgets.length > 0) {\n                                offset += this.getBlockIndex(element.textFrame.childWidgets[0], targetBlock, positionInfo, undefined);\n                            }\n                        }\n                        else {\n                            offset += this.getBlockIndex(element.bodyWidget.childWidgets[0], targetBlock, positionInfo, undefined);\n                        }\n                        if (positionInfo.done) {\n                            return offset;\n                        }\n                    }\n                    if (element instanceof FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof DropDownFormField) {\n                        isDropdown = true;\n                    }\n                    if (isDropdown && element instanceof FieldElementBox && element.fieldType == 1) {\n                        if (element.previousNode instanceof TextElementBox) {\n                            fieldResult.length += element.previousNode.length;\n                            isDropdown = false;\n                        }\n                    }\n                    if (!element.skipformFieldLength) {\n                        offset += element.length;\n                    }\n                }\n            }\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Selection.prototype.getBlockLength = function (paragraphInfo, block, position, completed, skipShapeElement, tableBlock, fieldResult) {\n        if (paragraphInfo && block instanceof ParagraphWidget && !isNullOrUndefined(paragraphInfo.paragraph) && paragraphInfo.paragraph.equals(block)) {\n            //Paragraph start\n            position += 1;\n            var elementInfo = block.getInline(paragraphInfo.offset, 0);\n            position += this.getBlockOffsetByElement(paragraphInfo, block, elementInfo.element, elementInfo.index, fieldResult);\n            if (this.isEndOffset && block.isInsideTable && block.associatedCell.lastChild.equals(block) && paragraphInfo.offset === this.getParagraphLength(block) + 1) {\n                position += 1;\n            }\n            completed.done = true;\n            return position;\n        }\n        if (block instanceof ParagraphWidget) {\n            // Code for Comparing the offset calculated using old approach and optimized approach\n            // if (this.isNewApproach) {\n            // position += 1;\n            // if (!skipShapeElement) {\n            //     position += block.length;\n            // } else {\n            //     position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n            // }\n            // } else {\n            //Add Paragraph start length;\n            position += 1;\n            if (!skipShapeElement) {\n                position += (block.getTotalLength());\n            }\n            else {\n                position += this.getBlockTotalLength(block, paragraphInfo, completed, tableBlock, fieldResult);\n            }\n            // }\n        }\n        else if (block instanceof TableWidget) {\n            // Table start mark length\n            position += 1;\n            if (!isNullOrUndefined(tableBlock)) {\n                if (tableBlock instanceof TableWidget) {\n                    if (tableBlock.equals(block)) {\n                        completed.done = true;\n                        return position;\n                    }\n                }\n            }\n            var row = block.firstChild;\n            while (row) {\n                // Row mark length\n                position += 1;\n                if (!isNullOrUndefined(tableBlock)) {\n                    if (tableBlock instanceof TableRowWidget) {\n                        if (tableBlock.equals(row)) {\n                            completed.done = true;\n                            return position;\n                        }\n                    }\n                }\n                var cell = row.firstChild;\n                while (cell) {\n                    // Cell mark length\n                    position += 1;\n                    if (!isNullOrUndefined(tableBlock)) {\n                        if (tableBlock instanceof TableCellWidget) {\n                            if (tableBlock.equals(cell)) {\n                                completed.done = true;\n                                return position;\n                            }\n                        }\n                    }\n                    var childBlock = cell.firstChild;\n                    while (childBlock) {\n                        position = this.getBlockLength(paragraphInfo, childBlock, position, completed, skipShapeElement, tableBlock, fieldResult);\n                        if (completed.done) {\n                            return position;\n                        }\n                        childBlock = childBlock.getSplitWidgets().pop().nextRenderedWidget;\n                    }\n                    cell = cell.nextWidget;\n                }\n                var tableIndex = row.ownerTable.index;\n                row = row.getSplitWidgets().pop().nextRenderedWidget;\n                if (row && row.ownerTable.index !== tableIndex) {\n                    row = undefined;\n                }\n            }\n            // Table end mark length\n            // position += 1;\n        }\n        return position;\n    };\n    /**\n     * Calculate the cell length.\n     * @private\n     */\n    Selection.prototype.calculateCellLength = function (cell) {\n        var block = cell.firstChild;\n        var position = 0;\n        var completed = { \"done\": false };\n        var paragraphInfo = { 'paragraph': null, 'offset': 0 };\n        while (block) {\n            position = this.getBlockLength(paragraphInfo, block, position, completed, true, undefined, undefined);\n            block = block.getSplitWidgets().pop().nextRenderedWidget;\n        }\n        return position;\n    };\n    Selection.prototype.getBlockOffsetByElement = function (paragraphInfo, block, targetElement, elementIndex, fieldResult) {\n        var offset = 0;\n        var isDropdown = false;\n        var splittedWidget = block.getSplitWidgets();\n        for (var i = 0; i < splittedWidget.length; i++) {\n            for (var j = 0; j < splittedWidget[i].childWidgets.length; j++) {\n                var line = splittedWidget[i].childWidgets[j];\n                for (var k = 0; k < line.children.length; k++) {\n                    var element = line.children[k];\n                    if (element instanceof ListTextElementBox) {\n                        continue;\n                    }\n                    if (element instanceof FieldElementBox && element.fieldType == 0 && element.formFieldData instanceof DropDownFormField) {\n                        isDropdown = true;\n                    }\n                    if (isDropdown && element instanceof FieldElementBox && element.fieldType == 1) {\n                        if (element.previousNode instanceof TextElementBox) {\n                            fieldResult.length += element.previousNode.length;\n                            isDropdown = false;\n                        }\n                    }\n                    if (element === targetElement) {\n                        return offset + elementIndex;\n                    }\n                    if (element instanceof ShapeElementBox || element instanceof FootnoteElementBox) {\n                        if (element instanceof ShapeElementBox) {\n                            if (element.textFrame.childWidgets.length > 0) {\n                                for (var m = 0; m < element.textFrame.childWidgets.length; m++) {\n                                    offset = this.getBlockLength(paragraphInfo, element.textFrame.childWidgets[m], offset, { done: false }, false, undefined, undefined);\n                                }\n                            }\n                        }\n                        else {\n                            if (element.bodyWidget.childWidgets.length > 0) {\n                                for (var m = 0; m < element.bodyWidget.childWidgets.length; m++) {\n                                    offset = this.getBlockLength(paragraphInfo, element.bodyWidget.childWidgets[m], offset, { done: false }, false, undefined, undefined);\n                                }\n                            }\n                        }\n                    }\n                    if (!element.skipformFieldLength) {\n                        offset += element.length;\n                    }\n                }\n            }\n        }\n        return offset;\n    };\n    /**\n     * This method is for collaborative editing.\n     * @private\n     */\n    Selection.prototype.getTableRelativeValue = function (startPosition, endPosition) {\n        // If start is in firset row first cell and end is in last row last cell or next table or next para. we need to minus the offset to 3. Else checking row.\n        // If start is first cell and end is in row last cell or other row last cell or other widgets. we need to minus the offset to 2. else return 0.\n        if (startPosition.currentWidget.paragraph.isInsideTable) {\n            if (this.isTableSelected()) {\n                return 3;\n            }\n            else if (this.isRowSelect() && endPosition.paragraph.isInsideTable && startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                return 2;\n            }\n            else {\n                var table = startPosition.paragraph.associatedCell.ownerTable.getSplitWidgets();\n                var firstParagraph = this.getFirstBlockInFirstCell(table[0]);\n                if (startPosition.paragraph.associatedCell.equals(firstParagraph.associatedCell)) {\n                    if (endPosition.paragraph.isInsideTable) {\n                        if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                            var length_3 = this.isRowSelect() ? 2 : 3;\n                            var table_1 = startPosition.paragraph.associatedCell.ownerTable;\n                            while (table_1.containerWidget instanceof TableCellWidget) {\n                                length_3 += 3;\n                                table_1 = table_1.containerWidget.ownerTable;\n                                if (table_1.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                                    break;\n                                }\n                            }\n                            return length_3;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                    else {\n                        return 3;\n                    }\n                }\n                else {\n                    if (endPosition.currentWidget.paragraph.isInsideTable) {\n                        if (!startPosition.paragraph.associatedCell.ownerTable.equals(endPosition.paragraph.associatedCell.ownerTable)) {\n                            return 2;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                    else {\n                        return 2;\n                    }\n                }\n            }\n        }\n        return 0;\n    };\n    /**\n     *\n     * @private\n     */\n    Selection.prototype.isRowSelect = function () {\n        // This method wil return if start row child widgets equals to end row child widgets. \n        var start = this.start;\n        var end = this.end;\n        if (!this.isForward) {\n            start = this.end;\n            end = this.start;\n        }\n        if (isNullOrUndefined(start.paragraph.associatedCell) ||\n            isNullOrUndefined(end.paragraph.associatedCell) || start.paragraph.associatedCell.equals(end.paragraph.associatedCell) || this.isTableSelected(true)) {\n            return false;\n        }\n        var endTable = end.paragraph.associatedCell.ownerTable;\n        var isRowSelect = false;\n        if (endTable.containerWidget instanceof TableCellWidget) {\n            while (endTable.containerWidget instanceof TableCellWidget) {\n                endTable = endTable.containerWidget.ownerTable;\n                for (var i = 0; i < endTable.childWidgets.length; i++) {\n                    var row_1 = endTable.childWidgets[i];\n                    if (row_1.childWidgets[row_1.childWidgets.length - 1].equals(endTable.containerWidget)) {\n                        isRowSelect = true;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < endTable.childWidgets.length; i++) {\n                var row_2 = endTable.childWidgets[i];\n                if (row_2.childWidgets[row_2.childWidgets.length - 1].equals(end.paragraph.associatedCell)) {\n                    isRowSelect = true;\n                }\n            }\n        }\n        var row = start.paragraph.associatedCell.ownerRow.getSplitWidgets();\n        var firstcell;\n        if (row[0].childWidgets.length > 0) {\n            firstcell = row[0].childWidgets[0];\n        }\n        return start.paragraph.associatedCell.equals(firstcell) && isRowSelect;\n    };\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}