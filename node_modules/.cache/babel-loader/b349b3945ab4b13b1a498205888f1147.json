{"ast":null,"code":"import optimizeClientRects from \"./optimize-client-rects\";\n\nconst getClientRects = (range, containerEl, shouldOptimize = true) => {\n  let clientRects = Array.from(range.getClientRects());\n  const offset = containerEl.getBoundingClientRect();\n  const rects = clientRects.map(rect => {\n    return {\n      top: rect.top + containerEl.scrollTop - offset.top,\n      left: rect.left + containerEl.scrollLeft - offset.left,\n      width: rect.width,\n      height: rect.height\n    };\n  });\n  return shouldOptimize ? optimizeClientRects(rects) : rects;\n};\n\nexport default getClientRects;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/react-pdf-highlighter/build/lib/get-client-rects.js"],"names":["optimizeClientRects","getClientRects","range","containerEl","shouldOptimize","clientRects","Array","from","offset","getBoundingClientRect","rects","map","rect","top","scrollTop","left","scrollLeft","width","height"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,yBAAhC;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,cAAc,GAAG,IAAtC,KAA+C;AACpE,MAAIC,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACD,cAAN,EAAX,CAAlB;AACA,QAAMO,MAAM,GAAGL,WAAW,CAACM,qBAAZ,EAAf;AACA,QAAMC,KAAK,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,IAAI,IAAI;AACpC,WAAO;AACLC,MAAAA,GAAG,EAAED,IAAI,CAACC,GAAL,GAAWV,WAAW,CAACW,SAAvB,GAAmCN,MAAM,CAACK,GAD1C;AAELE,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,GAAYZ,WAAW,CAACa,UAAxB,GAAqCR,MAAM,CAACO,IAF7C;AAGLE,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAHP;AAILC,MAAAA,MAAM,EAAEN,IAAI,CAACM;AAJR,KAAP;AAMD,GAPa,CAAd;AAQA,SAAOd,cAAc,GAAGJ,mBAAmB,CAACU,KAAD,CAAtB,GAAgCA,KAArD;AACD,CAZD;;AAcA,eAAeT,cAAf","sourcesContent":["import optimizeClientRects from \"./optimize-client-rects\";\n\nconst getClientRects = (range, containerEl, shouldOptimize = true) => {\n  let clientRects = Array.from(range.getClientRects());\n  const offset = containerEl.getBoundingClientRect();\n  const rects = clientRects.map(rect => {\n    return {\n      top: rect.top + containerEl.scrollTop - offset.top,\n      left: rect.left + containerEl.scrollLeft - offset.left,\n      width: rect.width,\n      height: rect.height\n    };\n  });\n  return shouldOptimize ? optimizeClientRects(rects) : rects;\n};\n\nexport default getClientRects;"]},"metadata":{},"sourceType":"module"}