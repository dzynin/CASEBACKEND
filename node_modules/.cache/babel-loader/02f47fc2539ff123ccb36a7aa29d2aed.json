{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/TextEditor.js\";\nimport React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\"; // Time in milliseconds to auto save the document\n\nconst SAVE_INTERVAL_MS = 3000; // Options available in toolbar\n\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"blockquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor({\n  id,\n  fileName,\n  showTextEditor,\n  setShowTextEditor\n}) {\n  const documentId = id;\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState(); // const [openaiResponse, setOpenaiResponse] = useState(\"\");\n\n  const [openaiResponses, setOpenaiResponses] = useState([]);\n\n  const handleCopyToClipboard = text => {\n    // Copy to clipboard\n    navigator.clipboard.writeText(text).then(() => {\n      console.log('Text copied to clipboard');\n    }, err => {\n      console.error('Could not copy text: ', err);\n    }); // Paste into the Quill editor at the current cursor position, or at the end if no selection is made\n\n    const range = quill.getSelection();\n    const position = range ? range.index : quill.getLength();\n    quill.insertText(position, text);\n    quill.setSelection(position + text.length); // Move cursor to the end of the inserted text\n  };\n\n  useEffect(() => {\n    const s = io(\"http://localhost:8000\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []); // To load Initial document\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once(\"load-document\", document => {\n      quill.setContents(document);\n      quill.enable();\n    });\n    socket.emit(\"get-document\", JSON.stringify({\n      documentId,\n      fileName\n    }));\n    console.log(documentId, fileName);\n  }, [socket, quill, documentId]); // To auto save document according to SAVE_INTERVAL_MS\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const interval = setInterval(() => {\n      socket.emit(\"save-document\", quill.getContents());\n    }, SAVE_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]); // to revieve the changes done somewhere else in the same document\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    q.disable();\n    q.setText(\"Loading...\");\n    setQuill(q);\n  }, []); // to close note editor\n\n  const handleClose = () => {\n    setShowTextEditor(false);\n    socket.disconnect();\n  }; // called when save button in clicked\n\n\n  const handleNoteSave = () => {\n    if (socket == null || quill == null) return;\n    socket.emit(\"save-document\", quill.getContents());\n    handleClose();\n  }; //openai call\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      socket.emit(\"openai_call\", quill.getContents());\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (socket == null) return;\n\n    const handler = data => {\n      setOpenaiResponses(currentResponses => [data.message, ...currentResponses]);\n    };\n\n    socket.on(\"openai_response\", handler);\n    return () => {\n      socket.off(\"openai_response\", handler);\n    };\n  }, [socket]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    style: {\n      color: \"#050505\"\n    },\n    show: showTextEditor || false,\n    onHide: handleClose,\n    backdrop: \"static\",\n    size: \"xl\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    style: {\n      height: '60vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 7,\n      marginRight: '20px'\n    },\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 3,\n      borderLeft: '1px solid #ccc',\n      paddingLeft: '20px',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 6\n    }\n  }, \"Label Recommendations\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column-reverse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, \" \", openaiResponses.map((response, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      border: '1px solid #ccc',\n      padding: '10px',\n      margin: '5px 0',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 8\n    }\n  }, response), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    onClick: () => handleCopyToClipboard(response),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 8\n    }\n  }, \"Copy & Paste\"))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 6\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleNoteSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 6\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/TextEditor.js"],"names":["React","useCallback","useEffect","useState","Quill","Button","Modal","io","SAVE_INTERVAL_MS","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","TextEditor","id","fileName","showTextEditor","setShowTextEditor","documentId","socket","setSocket","quill","setQuill","openaiResponses","setOpenaiResponses","handleCopyToClipboard","text","navigator","clipboard","writeText","then","console","log","err","error","range","getSelection","position","index","getLength","insertText","setSelection","length","s","disconnect","once","document","setContents","enable","emit","JSON","stringify","interval","setInterval","getContents","clearInterval","handler","delta","updateContents","on","off","wrapperRef","wrapper","innerHTML","editor","createElement","append","q","theme","modules","toolbar","disable","setText","handleClose","handleNoteSave","data","currentResponses","message","height","display","flexDirection","flex","marginRight","borderLeft","paddingLeft","overflowY","map","response","border","padding","margin","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\";\n\n// Time in milliseconds to auto save the document\nconst SAVE_INTERVAL_MS = 3000;\n\n\n\n// Options available in toolbar\nconst TOOLBAR_OPTIONS = [\n\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t[{ font: [] }],\n\t[{ list: \"ordered\" }, { list: \"bullet\" }],\n\t[\"bold\", \"italic\", \"underline\"],\n\t[{ color: [] }, { background: [] }],\n\t[{ script: \"sub\" }, { script: \"super\" }],\n\t[{ align: [] }],\n\t[\"blockquote\", \"code-block\"],\n\t[\"clean\"],\n];\n\nexport default function TextEditor({\n\tid,\n\tfileName,\n\tshowTextEditor,\n\tsetShowTextEditor,\n}) {\n\tconst documentId = id;\n\tconst [socket, setSocket] = useState();\n\tconst [quill, setQuill] = useState();\n\t// const [openaiResponse, setOpenaiResponse] = useState(\"\");\n\tconst [openaiResponses, setOpenaiResponses] = useState([]);\n\n\tconst handleCopyToClipboard = (text) => {\n\t\t// Copy to clipboard\n\t\tnavigator.clipboard.writeText(text).then(() => {\n\t\t  console.log('Text copied to clipboard');\n\t\t}, (err) => {\n\t\t  console.error('Could not copy text: ', err);\n\t\t});\n\t  \n\t\t// Paste into the Quill editor at the current cursor position, or at the end if no selection is made\n\t\tconst range = quill.getSelection();\n\t\tconst position = range ? range.index : quill.getLength();\n\t\tquill.insertText(position, text);\n\t\tquill.setSelection(position + text.length); // Move cursor to the end of the inserted text\n\t  };\n\t  \n\tuseEffect(() => {\n\t\tconst s = io(\"http://localhost:8000\");\n\t\tsetSocket(s);\n\n\t\treturn () => {\n\t\t\ts.disconnect();\n\t\t};\n\t}, []);\n\n\t// To load Initial document\n\tuseEffect(() => {\n\t\tif (socket == null || quill == null) return;\n\n\t\tsocket.once(\"load-document\", (document) => {\n\t\t\tquill.setContents(document);\n\t\t\tquill.enable();\n\t\t});\n\n\t\tsocket.emit(\"get-document\", JSON.stringify({ documentId, fileName }));\n\t\tconsole.log(documentId, fileName);\n\t}, [socket, quill, documentId]);\n\n\t// To auto save document according to SAVE_INTERVAL_MS\n\tuseEffect(() => {\n\t\tif (socket == null || quill == null) return;\n\n\t\tconst interval = setInterval(() => {\n\t\t\tsocket.emit(\"save-document\", quill.getContents());\n\t\t}, SAVE_INTERVAL_MS);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [socket, quill]);\n\n\t// to revieve the changes done somewhere else in the same document\n\tuseEffect(() => {\n\t\tif (socket == null || quill == null) return;\n\n\t\tconst handler = (delta) => {\n\t\t\tquill.updateContents(delta);\n\t\t};\n\t\tsocket.on(\"receive-changes\", handler);\n\n\t\treturn () => {\n\t\t\tsocket.off(\"receive-changes\", handler);\n\t\t};\n\t}, [socket, quill]);\n\n\tconst wrapperRef = useCallback((wrapper) => {\n\t\tif (wrapper == null) return;\n\n\t\twrapper.innerHTML = \"\";\n\t\tconst editor = document.createElement(\"div\");\n\t\twrapper.append(editor);\n\t\tconst q = new Quill(editor, {\n\t\t\ttheme: \"snow\",\n\t\t\tmodules: { toolbar: TOOLBAR_OPTIONS },\n\t\t});\n\t\tq.disable();\n\t\tq.setText(\"Loading...\");\n\t\tsetQuill(q);\n\t}, []);\n\n\t// to close note editor\n\tconst handleClose = () => {\n\t\tsetShowTextEditor(false);\n\t\tsocket.disconnect();\n\t};\n\n\t// called when save button in clicked\n\tconst handleNoteSave = () => {\n\t\tif (socket == null || quill == null) return;\n\t\tsocket.emit(\"save-document\", quill.getContents());\n\t\thandleClose();\n\t};\n\n\t//openai call\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsocket.emit(\"openai_call\",quill.getContents());\n\t\t}, 5000);\n\t\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [socket]);\n\t\n\tuseEffect(() => {\n\t\tif (socket == null) return;\n\t\n\t\tconst handler = (data) => {\n\t\t\tsetOpenaiResponses(currentResponses => [data.message, ...currentResponses]);\n\t\t};\n\t\n\t\tsocket.on(\"openai_response\", handler);\n\t\n\t\treturn () => {\n\t\t\tsocket.off(\"openai_response\", handler);\n\t\t};\n\t}, [socket]);\n\t\n\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Modal\n\t\t\t\tstyle={{ color: \"#050505\" }}\n\t\t\t\tshow={showTextEditor || false}\n\t\t\t\tonHide={handleClose}\n\t\t\t\tbackdrop=\"static\"\n\t\t\t\tsize=\"xl\"\n\t\t\t\tcentered={true}\n\t\t\t>\n\t\t\t\t<Modal.Body style={{ height: '60vh' }}>\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row', height: '100%' }}>\n\t\t\t\t\t<div style={{ flex: 7, marginRight: '20px' }} ref={wrapperRef}></div>\n\t\t\t\t\t<div style={{\n\t\t\t\t\tflex: 3,\n\t\t\t\t\tborderLeft: '1px solid #ccc',\n\t\t\t\t\tpaddingLeft: '20px',\n\t\t\t\t\toverflowY: 'auto'\n\t\t\t\t\t}}>\n\t\t\t\t\t<h4>Label Recommendations</h4>\n\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column-reverse' }}> {/* This ensures the latest (top) item is added first */}\n\t\t\t\t\t\t{openaiResponses.map((response, index) => (\n\t\t\t\t\t\t<div key={index} style={{ border: '1px solid #ccc', padding: '10px', margin: '5px 0', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n\t\t\t\t\t\t\t<span>{response}</span>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => handleCopyToClipboard(response)}>Copy & Paste</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleNoteSave}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}