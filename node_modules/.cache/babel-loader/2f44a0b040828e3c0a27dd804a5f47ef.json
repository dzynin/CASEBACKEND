{"ast":null,"code":"const sort = rects => rects.sort((A, B) => {\n  const top = A.top - B.top;\n  if (top === 0) {\n    return A.left - B.left;\n  }\n  return top;\n});\nconst overlaps = (A, B) => A.left <= B.left && B.left <= A.left + A.width;\nconst sameLine = (A, B, yMargin = 5) => Math.abs(A.top - B.top) < yMargin && Math.abs(A.height - B.height) < yMargin;\nconst inside = (A, B) => A.top > B.top && A.left > B.left && A.top + A.height < B.top + B.height && A.left + A.width < B.left + B.width;\nconst nextTo = (A, B, xMargin = 10) => {\n  const Aright = A.left + A.width;\n  const Bright = B.left + B.width;\n  return A.left <= B.left && Aright <= Bright && B.left - Aright <= xMargin;\n};\nconst extendWidth = (A, B) => {\n  // extend width of A to cover B\n  A.width = Math.max(B.width - A.left + B.left, A.width);\n};\nconst optimizeClientRects = clientRects => {\n  const rects = sort(clientRects);\n  const toRemove = new Set();\n  const firstPass = rects.filter(rect => {\n    return rects.every(otherRect => {\n      return !inside(rect, otherRect);\n    });\n  });\n  let passCount = 0;\n  while (passCount <= 2) {\n    firstPass.forEach(A => {\n      firstPass.forEach(B => {\n        if (A === B || toRemove.has(A) || toRemove.has(B)) {\n          return;\n        }\n        if (!sameLine(A, B)) {\n          return;\n        }\n        if (overlaps(A, B)) {\n          extendWidth(A, B);\n          A.height = Math.max(A.height, B.height);\n          toRemove.add(B);\n        }\n        if (nextTo(A, B)) {\n          extendWidth(A, B);\n          toRemove.add(B);\n        }\n      });\n    });\n    passCount += 1;\n  }\n  return firstPass.filter(rect => !toRemove.has(rect));\n};\nexport default optimizeClientRects;","map":{"version":3,"names":["sort","rects","A","B","top","left","overlaps","width","sameLine","yMargin","Math","abs","height","inside","nextTo","xMargin","Aright","Bright","extendWidth","max","optimizeClientRects","clientRects","toRemove","Set","firstPass","filter","rect","every","otherRect","passCount","forEach","has","add"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/react-pdf-highlighter/build/lib/optimize-client-rects.js"],"sourcesContent":["const sort = rects => rects.sort((A, B) => {\n  const top = A.top - B.top;\n\n  if (top === 0) {\n    return A.left - B.left;\n  }\n\n  return top;\n});\n\nconst overlaps = (A, B) => A.left <= B.left && B.left <= A.left + A.width;\n\nconst sameLine = (A, B, yMargin = 5) => Math.abs(A.top - B.top) < yMargin && Math.abs(A.height - B.height) < yMargin;\n\nconst inside = (A, B) => A.top > B.top && A.left > B.left && A.top + A.height < B.top + B.height && A.left + A.width < B.left + B.width;\n\nconst nextTo = (A, B, xMargin = 10) => {\n  const Aright = A.left + A.width;\n  const Bright = B.left + B.width;\n  return A.left <= B.left && Aright <= Bright && B.left - Aright <= xMargin;\n};\n\nconst extendWidth = (A, B) => {\n  // extend width of A to cover B\n  A.width = Math.max(B.width - A.left + B.left, A.width);\n};\n\nconst optimizeClientRects = clientRects => {\n  const rects = sort(clientRects);\n  const toRemove = new Set();\n  const firstPass = rects.filter(rect => {\n    return rects.every(otherRect => {\n      return !inside(rect, otherRect);\n    });\n  });\n  let passCount = 0;\n\n  while (passCount <= 2) {\n    firstPass.forEach(A => {\n      firstPass.forEach(B => {\n        if (A === B || toRemove.has(A) || toRemove.has(B)) {\n          return;\n        }\n\n        if (!sameLine(A, B)) {\n          return;\n        }\n\n        if (overlaps(A, B)) {\n          extendWidth(A, B);\n          A.height = Math.max(A.height, B.height);\n          toRemove.add(B);\n        }\n\n        if (nextTo(A, B)) {\n          extendWidth(A, B);\n          toRemove.add(B);\n        }\n      });\n    });\n    passCount += 1;\n  }\n\n  return firstPass.filter(rect => !toRemove.has(rect));\n};\n\nexport default optimizeClientRects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}