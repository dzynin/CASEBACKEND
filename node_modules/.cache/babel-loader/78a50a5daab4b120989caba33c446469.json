{"ast":null,"code":"import { isNullOrUndefined } from \"@syncfusion/ej2-base\";\nimport { MajorMinorFontScheme } from \"./major-minor-font-scheme\";\n/**\n * @private\n */\nvar FontScheme = /** @class */function () {\n  function FontScheme(node) {\n    this.majFontScheme = new MajorMinorFontScheme();\n    this.minFontScheme = new MajorMinorFontScheme();\n  }\n  Object.defineProperty(FontScheme.prototype, \"fontSchemeName\", {\n    get: function () {\n      return this.schemeName;\n    },\n    set: function (value) {\n      this.schemeName = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FontScheme.prototype, \"majorFontScheme\", {\n    get: function () {\n      return this.majFontScheme;\n    },\n    set: function (value) {\n      this.majFontScheme = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FontScheme.prototype, \"minorFontScheme\", {\n    get: function () {\n      return this.minFontScheme;\n    },\n    set: function (value) {\n      this.minFontScheme = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FontScheme.prototype.copyFormat = function (fontScheme) {\n    if (!isNullOrUndefined(fontScheme)) {\n      this.schemeName = fontScheme.schemeName;\n      this.majFontScheme.copyFormat(fontScheme.majFontScheme);\n      this.minFontScheme.copyFormat(fontScheme.minFontScheme);\n    }\n  };\n  FontScheme.prototype.destroy = function () {\n    this.schemeName = undefined;\n    this.majFontScheme = undefined;\n    this.minFontScheme = undefined;\n  };\n  return FontScheme;\n}();\nexport { FontScheme };\n/**\n * @private\n */\nvar FontSchemeStruct = /** @class */function () {\n  function FontSchemeStruct() {}\n  Object.defineProperty(FontSchemeStruct.prototype, \"name\", {\n    get: function () {\n      return this.fontName;\n    },\n    set: function (value) {\n      this.fontName = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FontSchemeStruct.prototype, \"typeface\", {\n    get: function () {\n      return this.fontTypeface;\n    },\n    set: function (value) {\n      this.fontTypeface = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FontSchemeStruct.prototype, \"panose\", {\n    get: function () {\n      return this.pnose;\n    },\n    set: function (value) {\n      this.pnose = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FontSchemeStruct.prototype.copyFormat = function (fontSchemeStructure) {\n    if (!isNullOrUndefined(fontSchemeStructure)) {\n      this.fontName = fontSchemeStructure.fontName;\n      this.fontTypeface = fontSchemeStructure.fontTypeface;\n      this.pnose = fontSchemeStructure.panose;\n    }\n  };\n  FontSchemeStruct.prototype.destroy = function () {\n    this.fontName = undefined;\n    this.fontTypeface = undefined;\n    this.pnose = undefined;\n  };\n  return FontSchemeStruct;\n}();\nexport { FontSchemeStruct };","map":{"version":3,"names":["isNullOrUndefined","MajorMinorFontScheme","FontScheme","node","majFontScheme","minFontScheme","Object","defineProperty","prototype","get","schemeName","set","value","enumerable","configurable","copyFormat","fontScheme","destroy","undefined","FontSchemeStruct","fontName","fontTypeface","pnose","fontSchemeStructure","panose"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/themes/font-scheme.js"],"sourcesContent":["import { isNullOrUndefined } from \"@syncfusion/ej2-base\";\nimport { MajorMinorFontScheme } from \"./major-minor-font-scheme\";\n/**\n * @private\n */\nvar FontScheme = /** @class */ (function () {\n    function FontScheme(node) {\n        this.majFontScheme = new MajorMinorFontScheme();\n        this.minFontScheme = new MajorMinorFontScheme();\n    }\n    Object.defineProperty(FontScheme.prototype, \"fontSchemeName\", {\n        get: function () {\n            return this.schemeName;\n        },\n        set: function (value) {\n            this.schemeName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FontScheme.prototype, \"majorFontScheme\", {\n        get: function () {\n            return this.majFontScheme;\n        },\n        set: function (value) {\n            this.majFontScheme = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FontScheme.prototype, \"minorFontScheme\", {\n        get: function () {\n            return this.minFontScheme;\n        },\n        set: function (value) {\n            this.minFontScheme = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FontScheme.prototype.copyFormat = function (fontScheme) {\n        if (!isNullOrUndefined(fontScheme)) {\n            this.schemeName = fontScheme.schemeName;\n            this.majFontScheme.copyFormat(fontScheme.majFontScheme);\n            this.minFontScheme.copyFormat(fontScheme.minFontScheme);\n        }\n    };\n    FontScheme.prototype.destroy = function () {\n        this.schemeName = undefined;\n        this.majFontScheme = undefined;\n        this.minFontScheme = undefined;\n    };\n    return FontScheme;\n}());\nexport { FontScheme };\n/**\n * @private\n */\nvar FontSchemeStruct = /** @class */ (function () {\n    function FontSchemeStruct() {\n    }\n    Object.defineProperty(FontSchemeStruct.prototype, \"name\", {\n        get: function () {\n            return this.fontName;\n        },\n        set: function (value) {\n            this.fontName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FontSchemeStruct.prototype, \"typeface\", {\n        get: function () {\n            return this.fontTypeface;\n        },\n        set: function (value) {\n            this.fontTypeface = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FontSchemeStruct.prototype, \"panose\", {\n        get: function () {\n            return this.pnose;\n        },\n        set: function (value) {\n            this.pnose = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FontSchemeStruct.prototype.copyFormat = function (fontSchemeStructure) {\n        if (!isNullOrUndefined(fontSchemeStructure)) {\n            this.fontName = fontSchemeStructure.fontName;\n            this.fontTypeface = fontSchemeStructure.fontTypeface;\n            this.pnose = fontSchemeStructure.panose;\n        }\n    };\n    FontSchemeStruct.prototype.destroy = function () {\n        this.fontName = undefined;\n        this.fontTypeface = undefined;\n        this.pnose = undefined;\n    };\n    return FontSchemeStruct;\n}());\nexport { FontSchemeStruct };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}