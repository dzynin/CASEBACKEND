{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL_DEV } from '../utils';\nexport async function fetchAndSetFileHighlights(dispatch, state, file, setIsLoading) {\n  try {\n    console.log(\"Starting to fetch and set file highlights for file:\", file);\n    const url = `${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${file.name}`;\n    console.log(`Fetching highlights for file: ${file.name} from ${url}`);\n    const result = await axios.get(url, {\n      headers: {\n        'x-access-token': state.auth && state.auth.authToken\n      }\n    });\n    const fileHighlights = result.data;\n    console.log(`Received highlights for file: ${file.name}`, fileHighlights);\n    const updatedFile = {\n      ...file,\n      name: file.name.split('.')[0] // Set only the filename without extension\n    };\n    dispatch({\n      type: \"SET_CURR_FILE\",\n      payload: updatedFile\n    });\n    console.log(\"Dispatched SET_CURR_FILE with payload:\", updatedFile);\n    if (fileHighlights && Array.isArray(fileHighlights.highlights)) {\n      dispatch({\n        type: \"SET_FILE_HIGHLIGHTS\",\n        payload: {\n          name: updatedFile.name,\n          highlights: fileHighlights.highlights\n        }\n      });\n      console.log(\"Dispatched SET_FILE_HIGHLIGHTS with highlights:\", fileHighlights.highlights);\n    } else {\n      dispatch({\n        type: \"SET_FILE_HIGHLIGHTS\",\n        payload: {\n          name: updatedFile.name,\n          highlights: [] // Ensure highlights is an array\n        }\n      });\n      console.log(\"Dispatched SET_FILE_HIGHLIGHTS with empty highlights array\");\n    }\n    const filesResult = await axios.get(`${BASE_URL_DEV}/get/files`, {\n      headers: {\n        \"x-access-token\": state.auth && state.auth.authToken\n      }\n    });\n    const filesResponse = filesResult.data && filesResult.data.files;\n    console.log(\"Fetched files response:\", filesResponse);\n    if (filesResponse && filesResponse.length > 0) {\n      const graphResult = await axios.get(`${BASE_URL_DEV}/get-graphdata`, {\n        headers: {\n          \"x-access-token\": state.auth && state.auth.authToken\n        }\n      });\n      const allgraphs = graphResult.data;\n      console.log(\"Fetched graph data:\", allgraphs);\n      let Obj = {};\n      let _id = \"\";\n      allgraphs.graphdata.forEach(x => {\n        _id = x.fileName;\n        Obj[_id] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n      });\n      const fileNew = filesResponse.map(element => {\n        return {\n          ...element,\n          CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n          PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n        };\n      });\n      console.log(\"New file data with citations and provisions:\", fileNew);\n      setIsLoading(false);\n      dispatch({\n        type: \"ADD_FILE\",\n        payload: fileNew\n      });\n      dispatch({\n        type: \"SET_MODAL\",\n        payload: true\n      });\n    }\n  } catch (error) {\n    console.log(\"General error during fetching and setting file highlights:\", error);\n    setIsLoading(false);\n  }\n}","map":{"version":3,"names":["axios","BASE_URL_DEV","fetchAndSetFileHighlights","dispatch","state","file","setIsLoading","console","log","url","auth","userPublicId","name","result","get","headers","authToken","fileHighlights","data","updatedFile","split","type","payload","Array","isArray","highlights","filesResult","filesResponse","files","length","graphResult","allgraphs","Obj","_id","graphdata","forEach","x","fileName","links","filter","e","source","fileNew","map","element","CITATION","PROVISION","error"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/utils/setPdfHighlights.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL_DEV } from '../utils';\n\nexport async function fetchAndSetFileHighlights(dispatch, state, file, setIsLoading) {\n    try {\n        console.log(\"Starting to fetch and set file highlights for file:\", file);\n\n        const url = `${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${file.name}`;\n        console.log(`Fetching highlights for file: ${file.name} from ${url}`);\n\n        const result = await axios.get(url, {\n            headers: {\n                'x-access-token': state.auth && state.auth.authToken,\n            }\n        });\n\n        const fileHighlights = result.data;\n        console.log(`Received highlights for file: ${file.name}`, fileHighlights);\n\n        const updatedFile = {\n            ...file,\n            name: file.name.split('.')[0]  // Set only the filename without extension\n        };\n\n        dispatch({ type: \"SET_CURR_FILE\", payload: updatedFile });\n        console.log(\"Dispatched SET_CURR_FILE with payload:\", updatedFile);\n\n        if (fileHighlights && Array.isArray(fileHighlights.highlights)) {\n            dispatch({\n                type: \"SET_FILE_HIGHLIGHTS\",\n                payload: {\n                    name: updatedFile.name,\n                    highlights: fileHighlights.highlights\n                }\n            });\n            console.log(\"Dispatched SET_FILE_HIGHLIGHTS with highlights:\", fileHighlights.highlights);\n        } else {\n            dispatch({\n                type: \"SET_FILE_HIGHLIGHTS\",\n                payload: {\n                    name: updatedFile.name,\n                    highlights: [] // Ensure highlights is an array\n                }\n            });\n            console.log(\"Dispatched SET_FILE_HIGHLIGHTS with empty highlights array\");\n        }\n\n        const filesResult = await axios.get(`${BASE_URL_DEV}/get/files`, {\n            headers: {\n                \"x-access-token\": state.auth && state.auth.authToken,\n            },\n        });\n\n        const filesResponse = filesResult.data && filesResult.data.files;\n        console.log(\"Fetched files response:\", filesResponse);\n\n        if (filesResponse && filesResponse.length > 0) {\n            const graphResult = await axios.get(`${BASE_URL_DEV}/get-graphdata`, {\n                headers: {\n                    \"x-access-token\": state.auth && state.auth.authToken,\n                },\n            });\n\n            const allgraphs = graphResult.data;\n            console.log(\"Fetched graph data:\", allgraphs);\n\n            let Obj = {};\n            let _id = \"\";\n\n            allgraphs.graphdata.forEach(x => {\n                _id = x.fileName;\n                Obj[_id] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n            });\n\n            const fileNew = filesResponse.map(element => {\n                return {\n                    ...element,\n                    CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n                    PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n                };\n            });\n\n            console.log(\"New file data with citations and provisions:\", fileNew);\n\n            setIsLoading(false);\n            dispatch({ type: \"ADD_FILE\", payload: fileNew });\n            dispatch({ type: \"SET_MODAL\", payload: true });\n        }\n    } catch (error) {\n        console.log(\"General error during fetching and setting file highlights:\", error);\n        setIsLoading(false);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}