{"ast":null,"code":"/**\n * Size defines and processes the size(width/height) of the objects\n * @private\n */\nvar Size = /** @class */function () {\n  function Size(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  /**\n   * isEmpty method \\\n   *\n   * @returns { boolean } isEmpty method .\\\n   *\n   * @private\n   */\n  Size.prototype.isEmpty = function () {\n    return this.height === 0 && this.width === 0;\n  };\n  // public static get empty(): Size {\n  //     return new Size();\n  // }\n  // public get isEmpty(): boolean {\n  //     return this.equals(Size.empty);\n  // }\n  // public equals(size2: Size): boolean {\n  //     return this.width === size2.width && this.height === size2.height;\n  // }\n  // public union(size: Size): void {\n  //     size.width = Math.max(size.width, this.width);\n  //     size.height = Math.max(size.height, this.height);\n  // }\n  /**\n   * clone method \\\n   *\n   * @returns { Size } clone method .\\\n   *\n   * @private\n   */\n  Size.prototype.clone = function () {\n    return new Size(this.width, this.height);\n  };\n  return Size;\n}();\nexport { Size };","map":{"version":3,"names":["Size","width","height","prototype","isEmpty","clone"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/utility/size.js"],"sourcesContent":["/**\n * Size defines and processes the size(width/height) of the objects\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * isEmpty method \\\n     *\n     * @returns { boolean } isEmpty method .\\\n     *\n     * @private\n     */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**\n     * clone method \\\n     *\n     * @returns { Size } clone method .\\\n     *\n     * @private\n     */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAG,aAAe,YAAY;EAClC,SAASA,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACzB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIF,IAAI,CAACG,SAAS,CAACC,OAAO,GAAG,YAAY;IACjC,OAAO,IAAI,CAACF,MAAM,KAAK,CAAC,IAAI,IAAI,CAACD,KAAK,KAAK,CAAC;EAChD,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACID,IAAI,CAACG,SAAS,CAACE,KAAK,GAAG,YAAY;IAC/B,OAAO,IAAIL,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;EAC5C,CAAC;EACD,OAAOF,IAAI;AACf,CAAC,CAAC,CAAE;AACJ,SAASA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}