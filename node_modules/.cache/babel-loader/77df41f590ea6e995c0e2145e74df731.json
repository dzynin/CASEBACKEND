{"ast":null,"code":"import { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { XmlWriter } from '@syncfusion/ej2-file-utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../index';\nimport { Dictionary, LocaleId } from '../../index';\nimport { sectionsProperty, paraStyleNameProperty, isLegalStyleNumberingProperty, breakClearTypeProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, backgroundProperty, stylesProperty, defaultTabWidthProperty, formattingProperty, trackChangesProperty, protectionTypeProperty, enforcementProperty, hashValueProperty, saltValueProperty, doNotUseHTMLParagraphAutoSpacingProperty, formFieldShadingProperty, footnotesProperty, endnotesProperty, compatibilityModeProperty, themeFontLanguagesProperty, themesProperty, nameProperty, basedOnProperty, nextProperty, linkProperty, localeIdProperty, localeIdFarEastProperty, localeIdBidiProperty, boldProperty, italicProperty, underlineProperty, baselineAlignmentProperty, strikethroughProperty, highlightColorProperty, fontSizeProperty, fontColorProperty, fontFamilyProperty, styleNameProperty, bidiProperty, bdoProperty, fontSizeBidiProperty, fontFamilyBidiProperty, boldBidiProperty, italicBidiProperty, allCapsProperty, complexScriptProperty, fontFamilyAsciiProperty, fontFamilyFarEastProperty, fontFamilyNonFarEastProperty, revisionIdsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, spaceAfterAutoProperty, spaceBeforeAutoProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, keepWithNextProperty, widowControlProperty, keepLinesTogetherProperty, outlineLevelProperty, contextualSpacingProperty, bordersProperty, tabsProperty, headerDistanceProperty, footerDistanceProperty, differentFirstPageProperty, differentOddAndEvenPagesProperty, pageWidthProperty, pageHeightProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, restartPageNumberingProperty, pageStartingNumberProperty, endnoteNumberFormatProperty, footNoteNumberFormatProperty, restartIndexForFootnotesProperty, restartIndexForEndnotesProperty, initialFootNoteNumberProperty, initialEndNoteNumberProperty, pageNumberStyleProperty, columnsProperty, numberOfColumnsProperty, equalWidthProperty, lineBetweenColumnsProperty, breakCodeProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, allowBreakAcrossPagesProperty, isHeaderProperty, heightTypeProperty, gridBeforeProperty, gridBeforeWidthProperty, gridBeforeWidthTypeProperty, gridAfterProperty, gridAfterWidthProperty, gridAfterWidthTypeProperty, allowAutoFitProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, textureProperty, backgroundColorProperty, foregroundColorProperty, shadowProperty, hasNoneStyleProperty, verticalProperty, horizontalProperty, diagonalUpProperty, diagonalDownProperty, lineStyleProperty, lineWidthProperty, dataFormatProperty, yValueProperty, chartDataProperty, categoryXNameProperty, lineProperty, foreColorProperty, directionProperty, endStyleProperty, numberValueProperty, markerStyleProperty, markerSizeProperty, forwardProperty, backwardProperty, interceptProperty, isDisplayRSquaredProperty, isDisplayEquationProperty, seriesNameProperty, dataLabelProperty, errorBarProperty, seriesFormatProperty, trendLinesProperty, dataPointsProperty, firstSliceAngleProperty, holeSizeProperty, isLegendKeyProperty, isBubbleSizeProperty, isCategoryNameProperty, isSeriesNameProperty, isValueProperty, isPercentageProperty, isLeaderLinesProperty, showSeriesKeysProperty, hasHorizontalBorderProperty, hasVerticalBorderProperty, hasBordersProperty, chartCategoryProperty, chartSeriesProperty, chartTitleAreaProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartPrimaryValueAxisProperty, chartTitleProperty, chartTypeProperty, gapWidthProperty, overlapProperty, chartDataTableProperty, textProperty, shapeIdProperty, alternativeTextProperty, widthProperty, heightProperty, lineFormatProperty, fillFormatProperty, textWrappingStyleProperty, textWrappingTypeProperty, zOrderPositionProperty, layoutInCellProperty, lockAnchorProperty, autoShapeTypeProperty, textFrameProperty, colorProperty, fillProperty, textVerticalAlignmentProperty, imageStringProperty, metaFileImageStringProperty, isMetaFileProperty, topProperty, bottomProperty, rightProperty, leftProperty, formFieldDataProperty, fieldTypeProperty, textInputProperty, checkBoxProperty, dropDownListProperty, defaultValueProperty, formatProperty, sizeTypeProperty, sizeProperty, checkedProperty, dropDownItemsProperty, selectedIndexProperty, commentIdProperty, commentCharacterTypeProperty, footnoteTypeProperty, inlinesProperty, contentControlPropertiesProperty, lockContentControlProperty, lockContentsProperty, tagProperty, titleProperty, hasPlaceHolderTextProperty, multiLineProperty, isTemporaryProperty, dateCalendarTypeProperty, dateStorageFormatProperty, dateDisplayLocaleProperty, dateDisplayFormatProperty, isCheckedProperty, uncheckedStateProperty, checkedStateProperty, contentControlListItemsProperty, xmlMappingProperty, fontProperty, valueProperty, displayTextProperty, isMappedProperty, xPathProperty, storeItemIdProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, descriptionProperty, wrapTextAroundProperty, positioningProperty, tableFormatProperty, allowOverlapProperty, distanceTopProperty, distanceRightProperty, distanceLeftProperty, distanceBottomProperty, verticalOriginProperty, verticalPositionProperty, horizontalOriginProperty, horizontalAlignmentProperty, horizontalPositionProperty, blocksProperty, headerProperty, footerProperty, evenHeaderProperty, evenFooterProperty, firstPageHeaderProperty, firstPageFooterProperty, headersFootersProperty, sectionFormatProperty, listLevelPatternProperty, followCharacterProperty, startAtProperty, levelNumberProperty, numberFormatProperty, abstractListIdProperty, levelsProperty, overrideListLevelProperty, levelOverridesProperty, separatorProperty, continuationSeparatorProperty, continuationNoticeProperty, bookmarkTypeProperty, propertiesProperty, tabJustificationProperty, positionProperty, deletePositionProperty, tabLeaderProperty, editRangeIdProperty, columnFirstProperty, columnLastProperty, userProperty, groupProperty, editableRangeStartProperty, spaceProperty, fontSchemeProperty, fontSchemeNameProperty, majorFontSchemeProperty, minorFontSchemeProperty, fontSchemeListProperty, fontTypefaceProperty, typefaceProperty, panoseProperty, typeProperty, majorUnitProperty, maximumValueProperty, minimumValueProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, rgbProperty, appearanceProperty, lineFormatTypeProperty, allowSpaceOfSameStyleInTableProperty, weightProperty, fontNameProperty, columnIndexProperty, isAfterRowMarkProperty, isAfterParagraphMarkProperty, columnCountProperty, gridProperty, characterSpacingProperty, scalingProperty, horizontalRuleProperty } from '../../index';\n/**\n * Exports the document to Word format.\n */\nvar WordExport = /** @class */function () {\n  function WordExport() {\n    //Part path\n    this.customXMLItemsPath = 'customXml/item';\n    this.customXMLItemsPropspath = 'customXml/itemProps';\n    this.itemPropsPath = 'itemProps';\n    this.documentPath = 'word/document.xml';\n    this.stylePath = 'word/styles.xml';\n    this.chartPath = 'word/charts';\n    this.numberingPath = 'word/numbering.xml';\n    this.settingsPath = 'word/settings.xml';\n    this.headerPath = 'word/header';\n    this.footerPath = 'word/footer';\n    //private commentsPath: string = 'word/comments.xml';\n    this.imagePath = 'word/media/image';\n    this.footnotesPath = 'word/footnotes.xml';\n    this.endnotesPath = 'word/endnotes.xml';\n    this.appPath = 'docProps/app.xml';\n    this.corePath = 'docProps/core.xml';\n    // private CustomPath: string = 'docProps/custom.xml';\n    // private FontTablePath: string = 'word/fontTable.xml';\n    this.contentTypesPath = '[Content_Types].xml';\n    // private ChartsPath: string = 'word/charts/';\n    this.defaultEmbeddingPath = 'word/embeddings/';\n    this.commentsPath = 'word/comments.xml';\n    this.commentsExtendedPath = 'word/commentsExtended.xml';\n    // private EmbeddingPath:string = 'word\\embeddings\\';\n    // private DrawingPath:string = 'word\\drawings\\';\n    this.themePath = 'word/theme/theme1.xml';\n    // private FontsPath:string = 'word\\fonts\\';\n    // private DiagramPath:string = \"word/diagrams/';\n    // private ControlPath:string = \"word/activeX/';\n    // private VbaProject: string = 'vbaProject.bin';\n    // private VbaData: string = 'vbaData.xml';\n    // private VbaProjectPath: string = 'word/vbaProject.bin';\n    // private VbaDataPath: string = 'word/vbaData.xml';\n    // private CustomXMLPath:string = 'customXml\\';\n    //Relationship path\n    this.generalRelationPath = '_rels/.rels';\n    this.wordRelationPath = 'word/_rels/document.xml.rels';\n    this.customXMLRelPath = 'customXml/_rels/item';\n    this.excelRelationPath = 'xl/_rels/workbook.xml.rels';\n    // private FontRelationPath: string = 'word/_rels/fontTable.xml.rels';\n    // private CommentsRelationPath: string = 'word/_rels/comments.xml.rels';\n    this.footnotesRelationPath = 'word/_rels/footnotes.xml.rels';\n    this.endnotesRelationPath = 'word/_rels/endnotes.xml.rels';\n    // private NumberingRelationPath: string = 'word/_rels/numbering.xml.rels';\n    this.headerRelationPath = 'word/_rels/header';\n    this.footerRelationPath = 'word/_rels/footer';\n    // private SettingsRelationpath: string = 'word/_rels/settings.xml.rels';\n    // private VbaProjectRelsPath: string = 'word/_rels/vbaProject.bin.rels';\n    //Content type of the parts\n    this.xmlContentType = 'application/xml';\n    this.fontContentType = 'application/vnd.openxmlformats-officedocument.obfuscatedFont';\n    this.documentContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml';\n    this.TemplateContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml';\n    // private CommentsContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml';\n    this.settingsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml';\n    this.commentsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml';\n    this.commentsExContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.commentsExtended+xml';\n    this.endnoteContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml';\n    // private FontTableContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml';\n    this.footerContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml';\n    this.footnoteContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml';\n    // private GlossaryDocumentContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml';\n    this.headerContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml';\n    this.numberingContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml';\n    this.stylesContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml';\n    this.webSettingsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml';\n    this.appContentType = 'application/vnd.openxmlformats-officedocument.extended-properties+xml';\n    this.coreContentType = 'application/vnd.openxmlformats-package.core-properties+xml';\n    this.customContentType = 'application/vnd.openxmlformats-officedocument.custom-properties+xml';\n    this.customXmlContentType = 'application/vnd.openxmlformats-officedocument.customXmlProperties+xml';\n    this.relationContentType = 'application/vnd.openxmlformats-package.relationships+xml';\n    // private DiagramColor: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml';\n    // private DiagramData: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml';\n    // private DiagramLayout: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml';\n    // private DiagramStyle: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml';\n    this.chartsContentType = 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml';\n    this.themeContentType = 'application/vnd.openxmlformats-officedocument.theme+xml';\n    // private ChartDrawingContentType: string = 'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml';\n    // private ActiveXContentType: string = 'application/vnd.ms-office.activeX+xml';\n    // private ActiveXBinContentType: string = 'application/vnd.ms-office.activeX';\n    this.tableStyleContentType = 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml';\n    // private ChartStyleContentType: string = 'application/vnd.ms-office.chartstyle+xml';\n    this.chartColorStyleContentType = 'application/vnd.ms-office.chartcolorstyle+xml';\n    // private VbaProjectContentType: string = 'application/vnd.ms-office.vbaProject';\n    // private VbaDataContentType: string = 'application/vnd.ms-word.vbaData+xml';\n    // private MacroDocumentContentType: string = 'application/vnd.ms-word.document.macroEnabled.main+xml';\n    // private MacroTemplateContentType: string = 'application/vnd.ms-word.template.macroEnabledTemplate.main+xml';\n    // private OleObjectContentType: string = 'application/vnd.openxmlformats-officedocument.oleObject';\n    // Relationship types of document parts\n    // private AltChunkRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/aFChunk';\n    this.commentsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments';\n    this.commentsExRelType = 'http://schemas.microsoft.com/office/2011/relationships/commentsExtended';\n    this.settingsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings';\n    this.endnoteRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes';\n    // private FontTableRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable';\n    this.footerRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer';\n    this.footnoteRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes';\n    this.headerRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header';\n    this.documentRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument';\n    this.numberingRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering';\n    this.stylesRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles';\n    // private OleObjectRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject';\n    this.chartRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart';\n    this.ThemeRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme';\n    this.fontRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/font';\n    this.tableStyleRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/tableStyles';\n    this.coreRelType = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\n    this.appRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\n    this.customRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\n    this.imageRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image';\n    this.hyperlinkRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink';\n    this.controlRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/control';\n    this.packageRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/package';\n    // private VbaProjectRelType: string = 'http://schemas.microsoft.com/office/2006/relationships/vbaProject';\n    // private VbaDataRelType: string = 'http://schemas.microsoft.com/office/2006/relationships/wordVbaData';\n    this.customXmlRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml';\n    this.customUIRelType = 'http://schemas.microsoft.com/office/2006/relationships/ui/extensibility';\n    this.attachedTemplateRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/attachedTemplate';\n    this.chartColorStyleRelType = 'http://schemas.microsoft.com/office/2011/relationships/chartColorStyle';\n    // private ChartStyleRelType: string = 'http://schemas.microsoft.com/office/2011/relationships/chartStyle';\n    // private ChartUserShapesRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartUserShapes';\n    // private ChartContentType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/package';\n    // Namespaces\n    // private PKG_namespace: string = 'http://schemas.microsoft.com/office/2006/xmlPackage';\n    this.wNamespace = 'http://schemas.openxmlformats.org/wordprocessingml/2006/main';\n    this.wpNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing';\n    this.pictureNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/picture';\n    this.aNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/main';\n    this.a14Namespace = 'http://schemas.microsoft.com/office/drawing/2010/main';\n    this.svgNamespace = 'http://schemas.microsoft.com/office/drawing/2016/SVG/main';\n    this.rNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships';\n    this.rpNamespace = 'http://schemas.openxmlformats.org/package/2006/relationships';\n    this.vNamespace = 'urn:schemas-microsoft-com:vml';\n    this.oNamespace = 'urn:schemas-microsoft-com:office:office';\n    this.xmlNamespace = 'http://www.w3.org/XML/1998/namespace';\n    this.w10Namespace = 'urn:schemas-microsoft-com:office:word';\n    this.cpNamespace = 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties';\n    this.dcNamespace = 'http://purl.org/dc/elements/1.1/';\n    // private DCTERMS_namespace: string = 'http://purl.org/dc/terms/';\n    // private XSI_namespace: string = 'http://www.w3.org/2001/XMLSchema-instance';\n    this.docPropsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/extended-properties';\n    this.veNamespace = 'http://schemas.openxmlformats.org/markup-compatibility/2006';\n    this.mNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/math';\n    this.wneNamespace = 'http://schemas.microsoft.com/office/word/2006/wordml';\n    // private DCMI_namespace: string = 'http://purl.org/dc/dcmitype/';\n    this.customPropsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/custom-properties';\n    this.vtNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes';\n    this.chartNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/chart';\n    this.slNamespace = 'http://schemas.openxmlformats.org/schemaLibrary/2006/main';\n    //2003WML namespace\n    // private amlNamespace: string = 'http://schemas.microsoft.com/aml/2001/core';\n    this.dtNamespace = 'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882';\n    this.wmlNamespace = 'http://schemas.microsoft.com/office/word/2003/wordml';\n    //2010 namespaces\n    this.w14Namespace = 'http://schemas.microsoft.com/office/word/2010/wordml';\n    this.wpCanvasNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas';\n    this.wpDrawingNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing';\n    this.wpGroupNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingGroup';\n    this.wpInkNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingInk';\n    this.wpShapeNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingShape';\n    //2013 namespaces\n    this.w15Namespace = 'http://schemas.microsoft.com/office/word/2012/wordml';\n    this.diagramNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/diagram';\n    //Encryption namespaces\n    this.eNamespace = 'http://schemas.microsoft.com/office/2006/encryption';\n    this.pNamespace = 'http://schemas.microsoft.com/office/2006/keyEncryptor/password';\n    this.certNamespace = 'http://schemas.microsoft.com/office/2006/keyEncryptor/certificate';\n    this.cxNamespace = 'http://schemas.microsoft.com/office/drawing/2014/chartex';\n    // chart\n    this.c15Namespace = 'http://schemas.microsoft.com/office/drawing/2015/06/chart';\n    this.c7Namespace = 'http://schemas.microsoft.com/office/drawing/2007/8/2/chart';\n    this.csNamespace = 'http://schemas.microsoft.com/office/drawing/2012/chartStyle';\n    // worksheet\n    this.spreadSheetNamespace = 'http://schemas.openxmlformats.org/spreadsheetml/2006/main';\n    this.spreadSheet9 = 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main';\n    // Dls xml tags\n    this.cRelationshipsTag = 'Relationships';\n    this.cRelationshipTag = 'Relationship';\n    this.cIdTag = 'Id';\n    this.cTypeTag = 'Type';\n    this.cTargetTag = 'Target';\n    this.cUserShapesTag = 'userShapes';\n    this.cExternalData = 'externalData';\n    this.twipsInOnePoint = 20;\n    this.twentiethOfPoint = 20;\n    this.borderMultiplier = 8;\n    this.percentageFactor = 50;\n    this.emusPerPoint = 12700;\n    // private const TOC_SYMBOL:string = (char)0x01;\n    // private const FOOTNOTE_SYMBOL:string = (char)0x02;\n    // private const PAGENUMBER_SYMBOL:string = (char)0xB;\n    // private DEF_FIT_TEXT_TO_SHAPE: string = 'mso-fit-shape-to-text:t';\n    // Document tags\n    this.cConditionalTableStyleTag = 'tblStylePr';\n    this.cTableFormatTag = 'tblPr';\n    this.cTowFormatTag = 'trPr';\n    this.cCellFormatTag = 'tcPr';\n    this.cParagraphFormatTag = 'pPr';\n    this.cCharacterFormatTag = 'rPr';\n    this.packageType = 'http://schemas.microsoft.com/office/2006/xmlPackage';\n    this.relsPartPath = '/_rels/.rels';\n    this.documentRelsPartPath = '/word/_rels/document.xml.rels';\n    this.webSettingsPath = '/word/webSettings.xml';\n    this.wordMLDocumentPath = '/word/document.xml';\n    this.wordMLStylePath = '/word/styles.xml';\n    this.wordMLNumberingPath = '/word/numbering.xml';\n    this.wordMLSettingsPath = '/word/settings.xml';\n    this.wordMLHeaderPath = '/word/header';\n    this.wordMLFooterPath = '/word/footer';\n    this.wordMLCommentsPath = '/word/comments.xml';\n    this.wordMLImagePath = '/word/media/image';\n    this.wordMLFootnotesPath = '/word/footnotes.xml';\n    this.wordMLEndnotesPath = '/word/endnotes.xml';\n    this.wordMLAppPath = '/docProps/app.xml';\n    this.wordMLCorePath = '/docProps/core.xml';\n    this.wordMLCustomPath = '/docProps/custom.xml';\n    this.wordMLFontTablePath = '/word/fontTable.xml';\n    this.wordMLChartsPath = '/word/charts/';\n    this.wordMLDefaultEmbeddingPath = '/word/embeddings/';\n    this.wordMLEmbeddingPath = '/word/embeddings/';\n    this.wordMLDrawingPath = '/word/drawings/';\n    this.wordMLThemePath = '/word/theme/theme1.xml';\n    this.wordMLFontsPath = '/word/fonts/';\n    this.wordMLDiagramPath = '/word/diagrams/';\n    this.wordMLControlPath = '/word/activeX/';\n    this.wordMLVbaProject = '/vbaProject.bin';\n    this.wordMLVbaData = '/vbaData.xml';\n    this.wordMLVbaProjectPath = '/word/vbaProject.bin';\n    this.wordMLVbaDataPath = '/word/vbaData.xml';\n    // private WordMLCustomXMLPath: string = '/customXml/';\n    this.wordMLWebSettingsPath = '/word/webSettings.xml';\n    this.wordMLCustomItemProp1Path = '/customXml/itemProps1.xml';\n    // private WordMLCustomXMLRelPath: string = '/customXml/_rels/item1.xml.rels';\n    this.wordMLFootnoteRelPath = '/word/_rels/footnotes.xml.rels';\n    this.wordMLEndnoteRelPath = '/word/_rels/endnotes.xml.rels';\n    this.wordMLSettingsRelPath = '/word/_rels/settings.xml.rels';\n    this.wordMLNumberingRelPath = '/word/_rels/numbering.xml.rels';\n    this.wordMLFontTableRelPath = '/word/_rels/fontTable.xml.rels';\n    this.wordMLCustomXmlPropsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps';\n    this.wordMLControlRelType = 'http://schemas.microsoft.com/office/2006/relationships/activeXControlBinary';\n    this.wordMLDiagramContentType = 'application/vnd.ms-office.drawingml.diagramDrawing+xml';\n    this.dsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/customXml';\n    this.excelFiles = undefined;\n    this.lastSection = false;\n    this.mRelationShipID = 0;\n    this.cRelationShipId = 0;\n    this.eRelationShipId = 0;\n    this.efRelationShipId = 0;\n    this.mDocPrID = 1;\n    this.chartCount = 0;\n    this.seriesCount = 0;\n    this.chartStringCount = 0;\n    this.mDifferentFirstPage = false;\n    this.mBookmarks = undefined;\n    this.mComments = [];\n    this.revisions = [];\n    this.customXMLProps = [];\n    this.paraID = 0;\n    this.commentParaID = 0;\n    this.commentParaIDInfo = {};\n    this.isInsideComment = false;\n    this.commentId = {};\n    this.currentCommentId = 0;\n    this.trackChangesId = 0;\n    this.prevRevisionIds = [];\n    this.isRevisionContinuous = false;\n    this.isBookmarkAtEnd = false;\n    this.isBookmarkAtRowEnd = false;\n    this.keywordIndex = undefined;\n    this.isHeaderFooter = false;\n    this.isSerializeFootEndNote = undefined;\n    this.containerWidth = 0;\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    /* eslint-enable */\n  }\n  WordExport.prototype.getModuleName = function () {\n    return 'WordExport';\n  };\n  Object.defineProperty(WordExport.prototype, \"bookmarks\", {\n    // Gets the bookmark name\n    get: function () {\n      if (isNullOrUndefined(this.mBookmarks)) {\n        this.mBookmarks = [];\n      }\n      return this.mBookmarks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"documentImages\", {\n    // Gets the collection of images present in the document body\n    get: function () {\n      if (this.mDocumentImages === undefined) {\n        this.mDocumentImages = new Dictionary();\n      }\n      return this.mDocumentImages;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"svgImages\", {\n    // Gets the collection of images present in the document body\n    get: function () {\n      if (this.mSvgImages === undefined) {\n        this.mSvgImages = new Dictionary();\n      }\n      return this.mSvgImages;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"externalImages\", {\n    // Gets the collection of images present in the document body\n    get: function () {\n      if (this.mExternalLinkImages === undefined) {\n        this.mExternalLinkImages = new Dictionary();\n      }\n      return this.mExternalLinkImages;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"headerFooterImages\", {\n    // Gets the collections of images present in the HeaderFooters\n    get: function () {\n      if (this.mHeaderFooterImages === undefined) {\n        this.mHeaderFooterImages = new Dictionary();\n      }\n      return this.mHeaderFooterImages;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"headerFooterSvgImages\", {\n    // Gets the collections of images present in the HeaderFooters\n    get: function () {\n      if (this.mHeaderFooterSvgImages === undefined) {\n        this.mHeaderFooterSvgImages = new Dictionary();\n      }\n      return this.mHeaderFooterSvgImages;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"documentCharts\", {\n    // Gets the collection of charts present in the document body\n    get: function () {\n      if (this.mDocumentCharts === undefined) {\n        this.mDocumentCharts = new Dictionary();\n      }\n      return this.mDocumentCharts;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"headersFooters\", {\n    /// Gets the HeaderFooter Collection\n    get: function () {\n      if (this.mHeaderFooterColl === undefined) {\n        this.mHeaderFooterColl = new Dictionary();\n      }\n      return this.mHeaderFooterColl;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WordExport.prototype, \"endnotesFootnotes\", {\n    /// Gets the Endnote and Footnote Collection\n    get: function () {\n      if (this.mFootEndnotesColl === undefined) {\n        this.mFootEndnotesColl = new Dictionary();\n      }\n      return this.mFootEndnotesColl;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @private\n   * @param {DocumentHelper} documentHelper - Document helper\n   * @param {string} fileName - file name\n   * @returns {void}\n   */\n  WordExport.prototype.save = function (documentHelper, fileName, formatType) {\n    var _this = this;\n    this.fileName = fileName;\n    this.serialize(documentHelper, formatType);\n    var excelFiles = this.serializeExcelFiles();\n    if (excelFiles && excelFiles.length > 0) {\n      Promise.all(excelFiles).then(function () {\n        _this.saveInternal(fileName, formatType);\n      });\n    } else {\n      this.saveInternal(fileName, formatType);\n    }\n    this.close();\n  };\n  WordExport.prototype.saveInternal = function (fileName, formatType) {\n    if (formatType == 'Docx') {\n      this.mArchive.save(fileName + '.docx').then(function (mArchive) {\n        mArchive.destroy();\n      });\n    } else if (formatType == 'Dotx') {\n      this.mArchive.save(fileName + '.dotx').then(function (mArchive) {\n        mArchive.destroy();\n      });\n    }\n  };\n  /**\n   * @private\n   * @param {DocumentHelper} documentHelper - Document helper\n   * @returns {Promise<Blob>} - Return Promise\n   */\n  WordExport.prototype.saveAsBlob = function (documentHelper, formatType) {\n    var _this = this;\n    this.serialize(documentHelper, formatType);\n    var excelFiles = this.serializeExcelFiles();\n    /* eslint-disable */\n    return new Promise(function (resolve, reject) {\n      if (excelFiles.length > 0) {\n        Promise.all(excelFiles).then(function () {\n          _this.mArchive.saveAsBlob().then(function (blob) {\n            _this.mArchive.destroy();\n            blob = new Blob([blob], {\n              type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            });\n            resolve(blob);\n          });\n        });\n      } else {\n        _this.mArchive.saveAsBlob().then(function (blob) {\n          _this.mArchive.destroy();\n          blob = new Blob([blob], {\n            type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n          });\n          resolve(blob);\n        });\n      }\n    });\n    /* eslint-enable */\n  };\n  WordExport.prototype.serializeExcelFiles = function () {\n    var _this = this;\n    var excelFiles = this.excelFiles;\n    var files = [];\n    if (excelFiles && excelFiles.length > 0) {\n      var _loop_1 = function (i) {\n        var fileName = excelFiles.keys[parseInt(i.toString(), 10)];\n        var excelFile = excelFiles.get(fileName);\n        var excelPromise = excelFile.saveAsBlob();\n        files.push(excelPromise);\n        excelPromise.then(function (blob) {\n          var zipArchiveItem = new ZipArchiveItem(blob, fileName);\n          _this.mArchive.addItem(zipArchiveItem);\n        });\n      };\n      for (var i = 0; i < excelFiles.length; i++) {\n        _loop_1(i);\n      }\n      this.excelFiles.clear();\n    }\n    return files;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  WordExport.prototype.saveExcel = function () {\n    var xlsxPath = this.defaultEmbeddingPath + 'Microsoft_Excel_Worksheet' + this.chartCount + '.xlsx';\n    this.excelFiles.add(xlsxPath, this.mArchiveExcel);\n    this.mArchiveExcel = undefined;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  WordExport.prototype.destroy = function () {\n    this.clearDocument();\n    this.mRelationShipID = undefined;\n    this.mDocPrID = undefined;\n    this.mDifferentFirstPage = undefined;\n    this.fileName = undefined;\n    this.imageRelationIds = undefined;\n    this.svgImageRelationIds = undefined;\n    if (this.mArchive) {\n      this.mArchive.destroy();\n      this.mArchive = undefined;\n    }\n    if (this.mArchiveExcel) {\n      this.mArchiveExcel.destroy();\n      this.mArchiveExcel = undefined;\n    }\n  };\n  // Saves the word document in the stream\n  WordExport.prototype.serialize = function (documentHelper, formatType) {\n    this.keywordIndex = documentHelper.owner.documentEditorSettings.optimizeSfdt ? 1 : 0;\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    var document = documentHelper.owner.sfdtExportModule.write(this.keywordIndex);\n    this.setDocument(document);\n    this.mComments = documentHelper.comments;\n    this.mCustomXML = documentHelper.customXmlData;\n    this.mImages = documentHelper.images;\n    this.revisions = documentHelper.owner.revisions.changes;\n    this.mArchive = new ZipArchive();\n    this.mArchive.compressionLevel = 'Normal';\n    this.commentParaIDInfo = {};\n    this.commentParaID = 0;\n    this.currentCommentId = 0;\n    this.commentId = {};\n    this.mVerticalMerge = new Dictionary();\n    this.mGridSpans = new Dictionary();\n    this.imageRelationIds = new Dictionary();\n    this.svgImageRelationIds = new Dictionary();\n    var contenttype;\n    //document.xml\n    this.serializeDocument();\n    //Styles.xml\n    this.serializeStyles();\n    //numbering.xml\n    this.serializeNumberings();\n    //comments.xml\n    this.serializeComments();\n    //commentsExtended.xml\n    this.serializeCommentsExtended();\n    //theme.xml\n    // if (m_document.DocHasThemes && !isNullOrUndefined(m_document.Themes))\n    this.serializeThemes();\n    // else\n    // this.serializeDefaultThemes();\n    //settings.xml\n    this.serializeSettings();\n    //core.xml\n    this.serializeCoreProperties();\n    //app.xml\n    this.serializeAppProperties();\n    //fontTable.xml\n    this.serializeFontTable(contenttype);\n    //custom.xml\n    // if (!isNullOrUndefined(this.wordDocument.CustomDocumentProperties) && m_document.CustomDocumentProperties.length > 0) {\n    //     SerializeCustomProperties();\n    // }\n    //Settings Relations\n    this.serializeSettingsRelation();\n    //Numbering relation if the document has picture bullet\n    // if (PictureBullets.length > 0) {\n    //     SerializeNumberingsRelation();\n    // }\n    this.serializeHeaderFooters();\n    this.serializeFootnotes();\n    this.serializeEndnotes();\n    //document relations\n    this.serializeDocumentRelations();\n    // Add controls to archieve.\n    // if (ControlsPathNames.length > 0) {\n    //     AddControlsToZip(m_document.DocxPackage);\n    // }\n    // if (!isNullOrUndefined(m_document.CustomUIPartContainer))\n    //     AddPartContainerToArchive(m_document.CustomUIPartContainer);\n    // if (!isNullOrUndefined(m_document.CustomXMLContainer))\n    //     AddPartContainerToArchive(m_document.CustomXMLContainer);\n    //general relations\n    this.serializeGeneralRelations();\n    //[ContentTypes].xml\n    this.serializeContentTypes(contenttype, formatType);\n    // Clears the internal fields maintained for serializing.\n    this.clearDocument();\n  };\n  // Sets the document\n  WordExport.prototype.setDocument = function (document, keyindex) {\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = keyindex;\n    }\n    this.document = document;\n    this.mSections = document[sectionsProperty[this.keywordIndex]];\n    this.mLists = document[listsProperty[this.keywordIndex]];\n    this.mAbstractLists = document[abstractListsProperty[this.keywordIndex]];\n    this.defCharacterFormat = document[characterFormatProperty[this.keywordIndex]];\n    this.defParagraphFormat = document[paragraphFormatProperty[this.keywordIndex]];\n    this.defaultTabWidthValue = document[defaultTabWidthProperty[this.keywordIndex]];\n    this.themeFontLang = document[themeFontLanguagesProperty[this.keywordIndex]];\n    this.dontUseHtmlParagraphAutoSpacing = HelperMethods.parseBoolValue(document[doNotUseHTMLParagraphAutoSpacingProperty[this.keywordIndex]]);\n    this.mStyles = document[stylesProperty[this.keywordIndex]];\n    this.mThemes = document[themesProperty[this.keywordIndex]];\n    this.formatting = HelperMethods.parseBoolValue(document[formattingProperty[this.keywordIndex]]);\n    this.enforcement = HelperMethods.parseBoolValue(document[enforcementProperty[this.keywordIndex]]);\n    this.hashValue = document[hashValueProperty[this.keywordIndex]];\n    this.saltValue = document[saltValueProperty[this.keywordIndex]];\n    this.protectionType = document[protectionTypeProperty[this.keywordIndex]];\n    this.formFieldShading = HelperMethods.parseBoolValue(document[formFieldShadingProperty[this.keywordIndex]]);\n    this.trackChanges = HelperMethods.parseBoolValue(document[trackChangesProperty[this.keywordIndex]]);\n    this.compatibilityMode = document[compatibilityModeProperty[this.keywordIndex]];\n    this.allowSpaceOfSameStyleInTable = HelperMethods.parseBoolValue(document[allowSpaceOfSameStyleInTableProperty[this.keywordIndex]]);\n  };\n  // Clears the document\n  WordExport.prototype.clearDocument = function () {\n    // Owner Nodes\n    this.section = undefined;\n    this.lastSection = undefined;\n    this.blockOwner = undefined;\n    this.paragraph = undefined;\n    this.table = undefined;\n    this.row = undefined;\n    this.headerFooter = undefined;\n    this.commentParaIDInfo = {};\n    this.commentParaID = 0;\n    this.currentCommentId = 0;\n    this.commentId = {};\n    this.document = undefined;\n    this.mSections = undefined;\n    this.mLists = undefined;\n    this.mAbstractLists = undefined;\n    this.defCharacterFormat = undefined;\n    this.defParagraphFormat = undefined;\n    this.defaultTabWidthValue = undefined;\n    this.trackChanges = undefined;\n    this.customXMLProps = [];\n    this.mRelationShipID = 0;\n    this.eRelationShipId = 0;\n    this.cRelationShipId = 0;\n    this.efRelationShipId = 0;\n    this.mDocPrID = 1;\n    this.chartCount = 0;\n    this.keywordIndex = undefined;\n    this.mDifferentFirstPage = false;\n    if (this.mHeaderFooterColl) {\n      this.mHeaderFooterColl.destroy();\n      this.mHeaderFooterColl = undefined;\n    }\n    if (this.mVerticalMerge) {\n      this.mVerticalMerge.destroy();\n      this.mVerticalMerge = undefined;\n    }\n    if (this.mGridSpans) {\n      this.mGridSpans.destroy();\n      this.mGridSpans = undefined;\n    }\n    if (this.mDocumentImages) {\n      this.mDocumentImages.destroy();\n      this.mDocumentImages = undefined;\n    }\n    if (this.mSvgImages) {\n      this.mSvgImages.destroy();\n      this.mSvgImages = undefined;\n    }\n    if (this.mExternalLinkImages) {\n      this.mExternalLinkImages.destroy();\n      this.mExternalLinkImages = undefined;\n    }\n    if (this.mHeaderFooterImages) {\n      this.mHeaderFooterImages.destroy();\n      this.mHeaderFooterImages = undefined;\n    }\n    if (this.mHeaderFooterSvgImages) {\n      this.mHeaderFooterSvgImages.destroy();\n      this.mHeaderFooterSvgImages = undefined;\n    }\n    if (this.mDocumentCharts) {\n      this.mDocumentCharts.destroy();\n      this.mDocumentCharts = undefined;\n    }\n    if (this.mFootEndnotesColl) {\n      this.mFootEndnotesColl.destroy();\n      this.mFootEndnotesColl = undefined;\n    }\n  };\n  // Serializes the document elements (document.xml)\n  WordExport.prototype.serializeDocument = function () {\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'document', this.wNamespace);\n    this.writeCommonAttributeStrings(writer);\n    writer.writeStartElement('w', 'background', this.wNamespace);\n    writer.writeAttributeString('w', 'color', undefined, this.getColor(this.document[backgroundProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n    writer.writeEndElement();\n    this.serializeDocumentBody(writer);\n    writer.writeEndElement(); //end of document tag\n    var archiveItem = new ZipArchiveItem(writer.buffer, this.documentPath);\n    this.mArchive.addItem(archiveItem);\n  };\n  WordExport.prototype.writeCommonAttributeStrings = function (writer) {\n    writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n    this.writeCustom(writer);\n    writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n    writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n    writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n    writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n    this.writeDup(writer);\n    writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n    writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15 wp14');\n  };\n  WordExport.prototype.writeDup = function (writer) {\n    writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n    writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n    writer.writeAttributeString('xmlns', 'wpg', undefined, this.wpGroupNamespace);\n    writer.writeAttributeString('xmlns', 'wpi', undefined, this.wpInkNamespace);\n  };\n  WordExport.prototype.writeCustom = function (writer) {\n    writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n    writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n  };\n  // Serializes the document body\n  WordExport.prototype.serializeDocumentBody = function (writer) {\n    writer.writeStartElement(undefined, 'body', this.wNamespace);\n    var count = this.document[sectionsProperty[this.keywordIndex]].length;\n    for (var i = 0; i < count; i++) {\n      this.section = this.document[sectionsProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n      this.lastSection = i === count - 1;\n      this.containerWidth = this.section[sectionFormatProperty[this.keywordIndex]][pageWidthProperty[this.keywordIndex]] - (this.section[sectionFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] + this.section[sectionFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]]);\n      this.serializeSection(writer, this.section, i === count - 1);\n      this.section = undefined;\n    }\n    writer.writeEndElement();\n  };\n  // Serializes the Section.\n  WordExport.prototype.serializeSection = function (writer, section, last) {\n    this.blockOwner = section;\n    if (!isNullOrUndefined(section[blocksProperty[this.keywordIndex]])) {\n      this.serializeBodyItems(writer, section[blocksProperty[this.keywordIndex]], last);\n    }\n    if (last) {\n      this.serializeSectionProperties(writer, section);\n    }\n    this.blockOwner = undefined;\n  };\n  // Serialize the comments (comments.xml)\n  WordExport.prototype.serializeComments = function () {\n    if (this.mComments.length === 0 || this.mComments.length === 1 && this.mComments[0].text === '') {\n      return;\n    }\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'comments', this.wNamespace);\n    this.serializeCommentCommonAttribute(writer);\n    this.serializeCommentInternal(writer, this.mComments);\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.commentsPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  //SerializeThemes the themes (theme.xml)\n  WordExport.prototype.serializeThemes = function () {\n    if (!isNullOrUndefined(this.mThemes)) {\n      var writer = new XmlWriter();\n      writer.writeStartElement('a', 'theme', this.aNamespace);\n      writer.writeAttributeString(undefined, 'name', undefined, 'Office Theme');\n      writer.writeStartElement(undefined, 'themeElements', this.aNamespace);\n      writer.writeRaw('<a:clrScheme name=\"Office\"><a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\" /></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\" /></a:lt1><a:dk2><a:srgbClr val=\"44546A\" /></a:dk2><a:lt2><a:srgbClr val=\"E7E6E6\" /></a:lt2><a:accent1><a:srgbClr val=\"4472C4\" /></a:accent1><a:accent2><a:srgbClr val=\"ED7D31\" /></a:accent2><a:accent3><a:srgbClr val=\"A5A5A5\" /></a:accent3><a:accent4><a:srgbClr val=\"FFC000\" /></a:accent4><a:accent5><a:srgbClr val=\"5B9BD5\" /></a:accent5><a:accent6><a:srgbClr val=\"70AD47\" /></a:accent6><a:hlink><a:srgbClr val=\"0563C1\" /></a:hlink><a:folHlink><a:srgbClr val=\"954F72\" /></a:folHlink></a:clrScheme>');\n      writer.writeStartElement(undefined, 'fontScheme', this.aNamespace);\n      writer.writeAttributeString(undefined, 'name', undefined, this.mThemes[fontSchemeNameProperty[this.keywordIndex]]);\n      writer.writeStartElement(undefined, 'majorFont', this.aNamespace);\n      for (var i = 0; i < this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]].length; i++) {\n        var theme = this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n        this.themeFont(writer, theme);\n      }\n      var keys = Object.keys(this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]]);\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        this.themeType(writer, key, this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]][\"\" + key]);\n      }\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'minorFont', this.aNamespace);\n      for (var i = 0; i < this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]].length; i++) {\n        var theme = this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n        this.themeFont(writer, theme);\n      }\n      keys = Object.keys(this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]]);\n      for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n        var key = keys_2[_a];\n        this.themeType(writer, key, this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]][\"\" + key]);\n      }\n      writer.writeEndElement();\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'fmtScheme', this.aNamespace);\n      writer.writeAttributeString(undefined, 'name', undefined, 'Office');\n      writer.writeRaw('<a:fillStyleLst><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"110000\" /><a:satMod val=\"105000\" /><a:tint val=\"67000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\" /><a:satMod val=\"103000\" /><a:tint val=\"73000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\" /><a:satMod val=\"109000\" /><a:tint val=\"81000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:satMod val=\"103000\" /><a:lumMod val=\"102000\" /><a:tint val=\"94000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:satMod val=\"110000\" /><a:lumMod val=\"100000\" /><a:shade val=\"100000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"99000\" /><a:satMod val=\"120000\" /><a:shade val=\"78000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill></a:fillStyleLst><a:lnStyleLst><a:ln w=\"6350\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln><a:ln w=\"12700\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln><a:ln w=\"19050\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln></a:lnStyleLst><a:effectStyleLst><a:effectStyle><a:effectLst /></a:effectStyle><a:effectStyle><a:effectLst /></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"57150\" dist=\"19050\" dir=\"5400000\" algn=\"ctr\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"63000\" /></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle></a:effectStyleLst><a:bgFillStyleLst><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:solidFill><a:schemeClr val=\"phClr\"><a:tint val=\"95000\" /><a:satMod val=\"170000\" /></a:schemeClr></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"93000\" /><a:satMod val=\"150000\" /><a:shade val=\"98000\" /><a:lumMod val=\"102000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:tint val=\"98000\" /><a:satMod val=\"130000\" /><a:shade val=\"90000\" /><a:lumMod val=\"103000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"63000\" /><a:satMod val=\"120000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill></a:bgFillStyleLst>');\n      writer.writeEndElement();\n      writer.writeEndElement();\n      writer.writeEndElement();\n      var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.themePath);\n      this.mArchive.addItem(zipArchiveItem);\n    }\n  };\n  WordExport.prototype.themeFont = function (writer, theme) {\n    if (theme[nameProperty[this.keywordIndex]] == 'latin' || theme[nameProperty[this.keywordIndex]] == 'ea' || theme[nameProperty[this.keywordIndex]] == 'cs') {\n      writer.writeStartElement(undefined, theme[nameProperty[this.keywordIndex]], this.aNamespace);\n      writer.writeAttributeString(undefined, 'typeface', undefined, theme[typefaceProperty[this.keywordIndex]]);\n      writer.writeAttributeString(undefined, 'panose', undefined, theme[panoseProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.themeType = function (writer, script, typeFace) {\n    writer.writeStartElement(undefined, 'font', this.aNamespace);\n    writer.writeAttributeString(undefined, 'script', undefined, script);\n    writer.writeAttributeString(undefined, 'typeface', undefined, typeFace);\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeCommentCommonAttribute = function (writer) {\n    writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n    writer.writeAttributeString('xmlns', 'cx', undefined, this.cxNamespace);\n    writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n    writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n    writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n    writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n    writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n    writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n    writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n    writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n  };\n  WordExport.prototype.serializeCommentInternal = function (writer, comments) {\n    for (var i = 0; i < comments.length; i++) {\n      var comment = comments[parseInt(i.toString(), 10)];\n      writer.writeStartElement('w', 'comment', this.wNamespace);\n      writer.writeAttributeString('w', 'id', this.wNamespace, this.commentId[comment.commentId].toString());\n      if (comment.author && comment.author !== ' ') {\n        writer.writeAttributeString('w', 'author', this.wNamespace, comment.author);\n      }\n      if (comment.date) {\n        writer.writeAttributeString('w', 'date', this.wNamespace, comment.date);\n      }\n      if (comment.initial && comment.initial !== '') {\n        writer.writeAttributeString('w', 'initials', this.wNamespace, comment.initial);\n      }\n      var blocks = this.retrieveCommentText(comment.text, comment.mentions);\n      for (var k = 0; k < blocks.length; k++) {\n        this.isInsideComment = true;\n        this.commentParaID++;\n        this.serializeBodyItem(writer, blocks[parseInt(k.toString(), 10)], true);\n        this.isInsideComment = false;\n      }\n      if (blocks.length === 0) {\n        this.isInsideComment = true;\n        this.commentParaID++;\n      }\n      this.commentParaIDInfo[comment.commentId] = this.commentParaID;\n      //}\n      this.isInsideComment = false;\n      //}\n      writer.writeEndElement();\n      if (comment.replyComments.length > 0) {\n        this.serializeCommentInternal(writer, comment.replyComments);\n      }\n    }\n  };\n  WordExport.prototype.retrieveCommentText = function (text, mentions) {\n    var blocks = [];\n    var multiText = text.split('\\n');\n    var tempText = \"\";\n    while (multiText.length > 0) {\n      var block = {};\n      block[inlinesProperty[this.keywordIndex]] = [];\n      var inlines = {};\n      var dataName = \"\";\n      if (mentions && mentions.length > 0) {\n        var text_1 = \"\";\n        var url = \"\";\n        for (var i = 0; i < mentions.length; i++) {\n          dataName = mentions[parseInt(i.toString(), 10)].Name;\n          if (multiText[0].indexOf('span') !== -1 && mentions[parseInt(i.toString(), 10)].Name) {\n            var regex = /(<span[^>]*>.*<\\/span>)/;\n            var match = multiText[0].match(regex);\n            text_1 = multiText[0].substring(match.index + match[0].length);\n            var temp = text_1.split(\"&nbsp;\");\n            dataName = mentions[parseInt(i.toString(), 10)].Name;\n            url = mentions[parseInt(i.toString(), 10)].EmailId;\n            tempText = temp.length > 1 ? temp[1] : temp[0];\n          }\n        }\n        block = this.serializeMentions(dataName, url, block);\n      }\n      if (multiText[0].indexOf('span') !== -1) {\n        var email = multiText[0].match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/);\n        var matchText = multiText[0].match(/&nbsp;(.+)/);\n        var text_2 = matchText ? matchText[1] : '';\n        multiText[0] = email + \" \" + text_2;\n      }\n      inlines[textProperty[this.keywordIndex]] = mentions.length > 0 ? tempText : multiText[0];\n      block[inlinesProperty[this.keywordIndex]].push(inlines);\n      blocks.push(block);\n      multiText.splice(0, 1);\n    }\n    return blocks;\n  };\n  WordExport.prototype.serializeMentions = function (dataName, url, blocks) {\n    var inlines = {};\n    inlines[characterFormatProperty[this.keywordIndex]] = {};\n    inlines[\"fieldType\"] = 0;\n    inlines[\"hasFieldEnd\"] = true;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n    var inlines2 = {};\n    inlines2[characterFormatProperty[this.keywordIndex]] = {};\n    inlines2[textProperty[this.keywordIndex]] = ' HYPERLINK \\\"' + url + '\\\" ';\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines2);\n    var inlines3 = {};\n    inlines3[characterFormatProperty[this.keywordIndex]] = {};\n    inlines3[\"fieldType\"] = 2;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines3);\n    var inlines4 = {};\n    inlines4[characterFormatProperty[this.keywordIndex]] = {\n      \"underline\": \"Single\",\n      \"fontColor\": \"#0563c1\",\n      \"bidi\": false\n    };\n    inlines4[textProperty[this.keywordIndex]] = dataName;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines4);\n    var inlines5 = {};\n    inlines5[characterFormatProperty[this.keywordIndex]] = {};\n    inlines5[\"fieldType\"] = 1;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines5);\n    return blocks;\n  };\n  // Serialize the comments (commentsExtended.xml)\n  WordExport.prototype.serializeCommentsExtended = function () {\n    if (this.mComments.length === 0 || this.mComments.length === 1 && this.mComments[0].text === '') {\n      return;\n    }\n    var writer = new XmlWriter();\n    writer.writeStartElement('w15', 'commentsEx', this.wNamespace);\n    this.serializeCommentCommonAttribute(writer);\n    this.serializeCommentsExInternal(writer, this.mComments, false);\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.commentsExtendedPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeCommentsExInternal = function (writer, comments, isReply) {\n    for (var i = 0; i < comments.length; i++) {\n      var comment = comments[parseInt(i.toString(), 10)];\n      writer.writeStartElement('w15', 'commentEx', this.wNamespace);\n      //if (comment.blocks.length > 0) {\n      var syncParaID = this.commentParaIDInfo[comment.commentId];\n      if (isReply) {\n        var paraID = this.commentParaIDInfo[comment.ownerComment.commentId];\n        writer.writeAttributeString('w15', 'paraIdParent', this.wNamespace, paraID.toString());\n      }\n      writer.writeAttributeString('w15', 'paraId', this.wNamespace, syncParaID.toString());\n      //}\n      var val = comment.done ? 1 : 0;\n      writer.writeAttributeString('w15', 'done', this.wNamespace, val.toString());\n      writer.writeEndElement();\n      if (comment.replyComments.length > 0) {\n        this.serializeCommentsExInternal(writer, comment.replyComments, true);\n      }\n    }\n  };\n  // Serialize the section properties.\n  WordExport.prototype.serializeSectionProperties = function (writer, section) {\n    if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n      this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n    }\n    writer.writeStartElement('w', 'sectPr', this.wNamespace);\n    if (section[headersFootersProperty[this.keywordIndex]]) {\n      this.serializeHFReference(writer, section[headersFootersProperty[this.keywordIndex]]);\n    }\n    // if (IsNeedToSerializeSectionFootNoteProperties(section))\n    //     SerializeFootnoteProperties(section);\n    // if (IsNeedToSerializeSectionEndNoteProperties(section))\n    //     SerializeEndnoteProperties(section);\n    if (section[sectionFormatProperty[this.keywordIndex]][breakCodeProperty[this.keywordIndex]] === 'NoBreak') {\n      this.serializeSectionType(writer, 'continuous');\n    } else {\n      this.serializeSectionType(writer, 'nextPage');\n    }\n    this.serializePageSetup(writer, section[sectionFormatProperty[this.keywordIndex]]);\n    this.serializeColumns(writer, section[sectionFormatProperty[this.keywordIndex]]);\n    this.serializeFootNotesPr(writer, section[sectionFormatProperty[this.keywordIndex]]);\n    this.serializeEndNotesPr(writer, section[sectionFormatProperty[this.keywordIndex]]);\n    // this.serializeSectionProtection(section);\n    // if (section.PageSetup.VerticalAlignment !== PageAlignment.Top) {\n    //     writer.writeStartElement('vAlign', this.wNamespace);\n    //     switch (section.PageSetup.VerticalAlignment) {\n    //         case PageAlignment.Top:\n    //             writer.WriteAttributeString('val', this.wNamespace, 'top');\n    //             break;\n    //         case PageAlignment.Middle:\n    //             writer.WriteAttributeString('val', this.wNamespace, 'center');\n    //             break;\n    //         case PageAlignment.Justified:\n    //             writer.WriteAttributeString('val', this.wNamespace, 'both');\n    //             break;\n    //         case PageAlignment.Bottom:\n    //             writer.WriteAttributeString('val', this.wNamespace, 'bottom');\n    //             break;\n    //     }\n    //     writer.WriteEndElement();\n    // }\n    if (section[sectionFormatProperty[this.keywordIndex]] !== undefined && HelperMethods.parseBoolValue(section[sectionFormatProperty[this.keywordIndex]][differentFirstPageProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'titlePg', this.wNamespace);\n      writer.writeEndElement();\n    }\n    // SerializeTextDirection(section);\n    if (!isNullOrUndefined(section[sectionFormatProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(section[sectionFormatProperty[this.keywordIndex]][bidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'bidi', this.wNamespace);\n      writer.writeEndElement();\n    }\n    //rtlGutter\n    // SerializeDocGrid(section);\n    //printerSettings\n    writer.writeEndElement(); //end of sectPr tag\n  };\n  WordExport.prototype.serializeFootNotesPr = function (writer, section) {\n    if (section[footNoteNumberFormatProperty[this.keywordIndex]] || section[restartIndexForFootnotesProperty[this.keywordIndex]]) {\n      writer.writeStartElement(undefined, 'footnotePr', this.wNamespace);\n      writer.writeStartElement(undefined, 'pos', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, 'pageBottom');\n      writer.writeEndElement();\n      if (section[footNoteNumberFormatProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberFormat(section[footNoteNumberFormatProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n      }\n      if (section[restartIndexForFootnotesProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numRestart', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberRestart(section[restartIndexForFootnotesProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n      }\n      if (section[initialFootNoteNumberProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numStart', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, section[initialFootNoteNumberProperty[this.keywordIndex]].toString());\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.getFootNoteNumberFormat = function (numberFormat) {\n    var patternType;\n    switch (numberFormat) {\n      case 'UpperCaseRoman':\n      case 1:\n        patternType = 'upperRoman';\n        break;\n      case 'LowerCaseRoman':\n      case 2:\n        patternType = 'lowerRoman';\n        break;\n      case 'UpperCaseLetter':\n      case 3:\n        patternType = 'upperLetter';\n        break;\n      case 'LowerCaseLetter':\n      case 4:\n        patternType = 'lowerLetter';\n        break;\n      default:\n        patternType = 'decimal';\n        break;\n    }\n    return patternType;\n  };\n  WordExport.prototype.getFootNoteNumberRestart = function (numberRestart) {\n    switch (numberRestart) {\n      case 'RestartForEachSection ':\n      case 1:\n        return 'eachSect';\n      case 'RestartForEachPage':\n      case 2:\n        return 'eachPage';\n      default:\n        return 'continuous';\n    }\n  };\n  WordExport.prototype.getPageNumberFormat = function (numberFormat) {\n    var patternType;\n    switch (numberFormat) {\n      case 'RomanUpper':\n        patternType = 'upperRoman';\n        break;\n      case 'RomanLower':\n        patternType = 'lowerRoman';\n        break;\n      case 'LetterUpper':\n        patternType = 'upperLetter';\n        break;\n      case 'LetterLower':\n        patternType = 'lowerLetter';\n        break;\n      default:\n        patternType = 'Arabic';\n        break;\n    }\n    return patternType;\n  };\n  // Serialize the Footnote Properties\n  WordExport.prototype.serializeEndNotesPr = function (writer, section) {\n    if (section[endnoteNumberFormatProperty[this.keywordIndex]] || section[restartIndexForEndnotesProperty[this.keywordIndex]]) {\n      writer.writeStartElement(undefined, 'endnotePr', this.wNamespace);\n      writer.writeStartElement(undefined, 'pos', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, 'docEnd');\n      writer.writeEndElement();\n      if (section[endnoteNumberFormatProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberFormat(section[endnoteNumberFormatProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n      }\n      if (section[restartIndexForEndnotesProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numRestart', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberRestart(section[restartIndexForEndnotesProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n      }\n      if (section[initialEndNoteNumberProperty[this.keywordIndex]] !== undefined) {\n        writer.writeStartElement(undefined, 'numStart', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, section[initialEndNoteNumberProperty[this.keywordIndex]].toString());\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the column properties of section.\n  WordExport.prototype.serializeColumns = function (writer, sectionFormat) {\n    if (sectionFormat[numberOfColumnsProperty[this.keywordIndex]] !== undefined && sectionFormat[numberOfColumnsProperty[this.keywordIndex]] > 1) {\n      writer.writeStartElement(undefined, 'cols', this.wNamespace);\n      writer.writeAttributeString(undefined, 'num', this.wNamespace, sectionFormat[numberOfColumnsProperty[this.keywordIndex]].toString());\n      if (HelperMethods.parseBoolValue(sectionFormat[lineBetweenColumnsProperty[this.keywordIndex]])) {\n        writer.writeAttributeString(undefined, 'sep', this.wNamespace, '1');\n      }\n      if (HelperMethods.parseBoolValue(sectionFormat[equalWidthProperty[this.keywordIndex]])) {\n        writer.writeAttributeString(undefined, 'equalWidth', this.wNamespace, '1');\n      } else {\n        writer.writeAttributeString(undefined, 'equalWidth', this.wNamespace, '0');\n        if (sectionFormat[columnsProperty[this.keywordIndex]] !== undefined && sectionFormat[columnsProperty[this.keywordIndex]].length > 0) {\n          for (var i = 0; i < sectionFormat[columnsProperty[this.keywordIndex]].length; i++) {\n            writer.writeStartElement(undefined, 'col', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(sectionFormat[columnsProperty[this.keywordIndex]][parseInt(i.toString(), 10)][widthProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n            writer.writeAttributeString(undefined, 'space', this.wNamespace, this.roundToTwoDecimal(sectionFormat[columnsProperty[this.keywordIndex]][parseInt(i.toString(), 10)][spaceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n            writer.writeEndElement();\n          }\n        }\n      }\n      writer.writeEndElement();\n    }\n    // ColumnCollection columns = section.Columns;\n    // writer.WriteStartElement('cols', this.wNamespace);\n    // if (columns.length > 0)\n    // {\n    //     writer.WriteAttributeString('num', this.wNamespace, columns.length.ToString());\n    // }\n    // if (section.PageSetup.DrawLinesBetweenCols)\n    //     writer.WriteAttributeString('sep', this.wNamespace, '1');\n    // if (columns.OwnerSection.PageSetup.EqualColumnWidth)\n    // {\n    //     writer.WriteAttributeString('equalWidth', this.wNamespace, '1');\n    //     //When the column count is negative, MS word just reset the column's count to zero\n    //     //To avoid index out of exception, checked the columns count\n    //     writer.WriteAttributeString('space', this.wNamespace, ToString(columns.length > 0 ? columns[0].Space * this.TwentiethOfPoint : 0));\n    // }\n    // else if (columns.length > 0)\n    // {\n    //     writer.WriteAttributeString('equalWidth', this.wNamespace, '0');\n    //     foreach (Column column in columns)\n    //     {\n    //         writer.WriteStartElement('col', this.wNamespace);\n    //         writer.WriteAttributeString('w', this.wNamespace, ToString(column.Width * this.TwentiethOfPoint));\n    //         writer.WriteAttributeString('space', this.wNamespace, ToString(column.Space * this.TwentiethOfPoint));\n    //         writer.WriteEndElement();\n    //     }\n    // }\n    // writer.WriteEndElement();\n  };\n  // Serialize the page setup properties.\n  WordExport.prototype.serializePageSetup = function (writer, pageSetup) {\n    if (pageSetup !== undefined) {\n      this.serializePageSize(writer, pageSetup);\n      this.serializePageMargins(writer, pageSetup);\n      this.serializePageNumberType(writer, pageSetup);\n    }\n    // // StartElement paperSrc (if any)\n    // if (pageSetup.FirstPageTray > 0 || pageSetup.OtherPagesTray > 0) {\n    //     writer.WriteStartElement('paperSrc', this.wNamespace);\n    //     if (pageSetup.FirstPageTray > 0) {\n    //         writer.WriteAttributeString('first', this.wNamespace, pageSetup.FirstPageTray.ToString());\n    //     }\n    //     if (pageSetup.OtherPagesTray > 0) {\n    //         writer.WriteAttributeString('other', this.wNamespace, pageSetup.OtherPagesTray.ToString());\n    //     }\n    //     writer.WriteEndElement();\n    // }\n    if (HelperMethods.parseBoolValue(pageSetup[restartPageNumberingProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'pgNumType', this.wNamespace);\n      writer.writeAttributeString(undefined, 'start', this.wNamespace, pageSetup[pageStartingNumberProperty[this.keywordIndex]].toString());\n      writer.writeEndElement();\n    }\n    writer.writeStartElement(undefined, 'pgBorders', this.wNamespace);\n    // //zOrder\n    // if (pageSetup.PageBordersApplyType === PageBordersApplyType.FirstPage)\n    //     writer.WriteAttributeString('display', this.wNamespace, 'firstPage');\n    // else if (pageSetup.PageBordersApplyType === PageBordersApplyType.AllExceptFirstPage)\n    //     writer.WriteAttributeString('display', this.wNamespace, 'notFirstPage');\n    // if (pageSetup.PageBorderOffsetFrom === PageBorderOffsetFrom.PageEdge) {\n    //     writer.WriteAttributeString('offsetFrom', this.wNamespace, 'page');\n    // }\n    // //Serializing zOrder of the front page border\n    // if (!pageSetup.IsFrontPageBorder) {\n    //     writer.WriteAttributeString('zOrder', this.wNamespace, 'back');\n    // }\n    // SerializePageBorders(pageSetup.Borders);\n    writer.writeEndElement();\n    // this.serializeLineNumberType(writer, pageSetup);\n    //this.serializePageNumberType(writer, pageSetup);\n  };\n  // serialize the page size\n  WordExport.prototype.serializePageSize = function (writer, pageSetup) {\n    writer.writeStartElement(undefined, 'pgSz', this.wNamespace);\n    writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(pageSetup[pageWidthProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    writer.writeAttributeString(undefined, 'h', this.wNamespace, this.roundToTwoDecimal(pageSetup[pageHeightProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    // if (pageSetup.Orientation === PageOrientation.Landscape)\n    // {\n    //     writer.WriteAttributeString('orient', this.wNamespace, 'landscape');\n    // }\n    writer.writeEndElement();\n  };\n  // Serialize the border.\n  WordExport.prototype.serializePageMargins = function (writer, pageSetup) {\n    writer.writeStartElement(undefined, 'pgMar', this.wNamespace);\n    var marginValue = Math.round(pageSetup[topMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n    writer.writeAttributeString(undefined, 'top', this.wNamespace, marginValue.toString());\n    marginValue = Math.round(pageSetup[rightMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n    writer.writeAttributeString(undefined, 'right', this.wNamespace, marginValue.toString());\n    marginValue = Math.round(pageSetup[bottomMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n    writer.writeAttributeString(undefined, 'bottom', this.wNamespace, marginValue.toString());\n    marginValue = Math.round(pageSetup[leftMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n    writer.writeAttributeString(undefined, 'left', this.wNamespace, marginValue.toString());\n    writer.writeAttributeString(undefined, 'header', this.wNamespace, this.roundToTwoDecimal(pageSetup[headerDistanceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    writer.writeAttributeString(undefined, 'footer', this.wNamespace, this.roundToTwoDecimal(pageSetup[footerDistanceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    writer.writeAttributeString(undefined, 'gutter', this.wNamespace, '0');\n    writer.writeEndElement();\n  };\n  //Serialize the page number type\n  WordExport.prototype.serializePageNumberType = function (writer, pageSetup) {\n    if (pageSetup[pageNumberStyleProperty[this.keywordIndex]] !== undefined) {\n      writer.writeStartElement(undefined, 'pgNumType', this.wNamespace);\n      writer.writeAttributeString(undefined, 'fmt', this.wNamespace, this.getPageNumberFormat(pageSetup[pageNumberStyleProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the section type.\n  WordExport.prototype.serializeSectionType = function (writer, sectionBreakCode) {\n    writer.writeStartElement('w', 'type', this.wNamespace);\n    writer.writeAttributeString('w', 'val', this.wNamespace, sectionBreakCode); //GetSectionBreakCode(sectionBreakCode));\n    writer.writeEndElement();\n  };\n  // Serialize the heeader/footer reference.\n  WordExport.prototype.serializeHFReference = function (writer, headersFooters) {\n    var hfId = '';\n    if (headersFooters !== undefined) {\n      this.mDifferentFirstPage = HelperMethods.parseBoolValue(this.section[sectionFormatProperty[this.keywordIndex]][differentOddAndEvenPagesProperty[this.keywordIndex]]);\n      var hf = headersFooters[firstPageHeaderProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'first');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'FirstPageHeader', hfId);\n        writer.writeEndElement();\n      }\n      hf = headersFooters[firstPageFooterProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'first');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'FirstPageFooter', hfId);\n        writer.writeEndElement();\n      }\n      hf = headersFooters[evenHeaderProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'even');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'EvenHeader', hfId);\n        writer.writeEndElement();\n      }\n      hf = headersFooters[evenFooterProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'even');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'EvenFooter', hfId);\n        writer.writeEndElement();\n      }\n      hf = headersFooters[headerProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'default');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'OddHeader', hfId);\n        writer.writeEndElement();\n      }\n      hf = headersFooters[footerProperty[this.keywordIndex]];\n      if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n        writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'default');\n        hfId = this.getNextRelationShipID();\n        writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n        this.addHeaderFooter(hf, 'OddFooter', hfId);\n        writer.writeEndElement();\n      }\n    }\n  };\n  // Adds the header footer details to the collection.\n  WordExport.prototype.addHeaderFooter = function (hf, hfType, id) {\n    var hfColl = new Dictionary();\n    this.headersFooters.add(hfType, hfColl);\n    this.headersFooters.get(hfType).add(id, hf);\n  };\n  // Serializes the bodyItems\n  WordExport.prototype.serializeBodyItems = function (writer, blockCollection, isLastSection) {\n    for (var i = 0; i < blockCollection.length; i++) {\n      this.serializeBodyItem(writer, blockCollection[parseInt(i.toString(), 10)], isLastSection);\n    }\n  };\n  // serialize the content Control\n  /* eslint-disable-next-line max-len */\n  WordExport.prototype.serializeContentControl = function (writer, contentControlItem, item, isLastSection, inlines) {\n    if (isNullOrUndefined(contentControlItem)) {\n      throw new Error('contentCOntrol should not be undefined');\n    }\n    writer.writeStartElement('w', 'sdt', this.wNamespace);\n    writer.writeStartElement(undefined, 'sdtPr', this.wNamespace);\n    if (!isNullOrUndefined(contentControlItem)) {\n      this.serializeContentProperties(writer, contentControlItem, item, isLastSection, inlines);\n    }\n  };\n  // serialize Content Control Properties\n  /* eslint-disable-next-line max-len */\n  WordExport.prototype.serializeContentProperties = function (writer, contentProperties, items, isLastSection, inlines) {\n    var repeatSdt = undefined;\n    if (!isNullOrUndefined(contentProperties[titleProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'alias', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, contentProperties[titleProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'tag', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, contentProperties[tagProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[characterFormatProperty[this.keywordIndex]])) {\n      this.serializeCharacterFormat(writer, items[contentControlPropertiesProperty[this.keywordIndex]][characterFormatProperty[this.keywordIndex]]);\n    }\n    // if (items.hasOwnProperty('blocks') && contentProperties.type !== 'CheckBox') {\n    //     this.serializeContentParagraph(writer, items);\n    // }\n    if (HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]]) || HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'lock', this.wNamespace);\n      if (HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'sdtContentLocked');\n      } else if (HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'sdtLocked');\n      } else if (HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'contentLocked');\n      }\n      writer.writeEndElement();\n    }\n    if (HelperMethods.parseBoolValue(contentProperties[hasPlaceHolderTextProperty[this.keywordIndex]]) && isNullOrUndefined(repeatSdt)) {\n      writer.writeStartElement('w', 'placeholder', undefined);\n      writer.writeAttributeString('w', 'docPart', this.wNamespace, undefined);\n      writer.writeEndElement();\n      writer.writeStartElement('w', 'showingPlcHdr', undefined);\n      writer.writeEndElement();\n    }\n    if (HelperMethods.parseBoolValue(contentProperties[isTemporaryProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'temporary', undefined);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[appearanceProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w15', 'appearance', undefined);\n      writer.writeAttributeString('w15', 'val', undefined, this.keywordIndex == 1 ? this.getContentControlAppearance(contentProperties[appearanceProperty[this.keywordIndex]]).toLowerCase() : contentProperties[appearanceProperty[this.keywordIndex]].toLowerCase());\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[colorProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w15', 'color', undefined);\n      writer.writeAttributeString('w', 'val', undefined, this.getColor(contentProperties[colorProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n    }\n    if (HelperMethods.parseBoolValue(contentProperties[multiLineProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'text', this.wNamespace);\n      writer.writeAttributeString('w', 'multiLine', this.wNamespace, '1');\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[xmlMappingProperty[this.keywordIndex]])) {\n      if (HelperMethods.parseBoolValue(contentProperties[xmlMappingProperty[this.keywordIndex]][isMappedProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'dataBinding', this.wNamespace);\n        writer.writeAttributeString('w', 'xpath', undefined, contentProperties[xmlMappingProperty[this.keywordIndex]][xPathProperty[this.keywordIndex]]);\n        writer.writeAttributeString('w', 'storeItemID', undefined, contentProperties[xmlMappingProperty[this.keywordIndex]][storeItemIdProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n    }\n    if (contentProperties.picture) {\n      writer.writeStartElement('w', 'picture', this.wNamespace);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[uncheckedStateProperty[this.keywordIndex]] || contentProperties[checkedStateProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w14', 'checkbox', undefined);\n      if (HelperMethods.parseBoolValue(contentProperties[isCheckedProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w14', 'checked', undefined);\n        writer.writeAttributeString('w14', 'val', undefined, '1');\n        writer.writeEndElement();\n      } else {\n        writer.writeStartElement('w14', 'checked', undefined);\n        writer.writeAttributeString('w14', 'val', undefined, '0');\n        writer.writeEndElement();\n      }\n      if (contentProperties[uncheckedStateProperty[this.keywordIndex]]) {\n        writer.writeStartElement('w14', 'uncheckedState', undefined);\n        writer.writeAttributeString('w14', 'val', undefined, this.toUnicode(contentProperties[uncheckedStateProperty[this.keywordIndex]][valueProperty[this.keywordIndex]]));\n        writer.writeAttributeString('w14', 'font', undefined, contentProperties[uncheckedStateProperty[this.keywordIndex]][fontProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      if (contentProperties[checkedStateProperty[this.keywordIndex]]) {\n        writer.writeStartElement('w14', 'checkedState', undefined);\n        writer.writeAttributeString('w14', 'val', undefined, this.toUnicode(contentProperties[checkedStateProperty[this.keywordIndex]][valueProperty[this.keywordIndex]]));\n        writer.writeAttributeString('w14', 'font', undefined, contentProperties[checkedStateProperty[this.keywordIndex]][fontProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[contentControlListItemsProperty[this.keywordIndex]]) && contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 5 : 'DropDownList')) {\n      var dropDownLists = contentProperties[contentControlListItemsProperty[this.keywordIndex]];\n      writer.writeStartElement(undefined, 'dropDownList', this.wNamespace);\n      this.serializeContentControlList(writer, dropDownLists);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(contentProperties[contentControlListItemsProperty[this.keywordIndex]]) && contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 3 : 'ComboBox')) {\n      var comboList = contentProperties[contentControlListItemsProperty[this.keywordIndex]];\n      writer.writeStartElement(undefined, 'comboBox', this.wNamespace);\n      this.serializeContentControlList(writer, comboList);\n      writer.writeEndElement();\n    }\n    this.serializeContentControlDate(writer, contentProperties);\n    if (!isNullOrUndefined(contentProperties[typeProperty[this.keywordIndex]])) {\n      if (contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 7 : 'Picture')) {\n        writer.writeStartElement(undefined, 'picture', this.wNamespace);\n        writer.writeEndElement();\n      }\n    }\n    writer.writeEndElement();\n    writer.writeStartElement('w', 'sdtContent', this.wNamespace);\n    if (inlines) {\n      return;\n    }\n    /* eslint-disable */\n    if (items.hasOwnProperty(blocksProperty[this.keywordIndex]) && isNullOrUndefined(items[cellFormatProperty[this.keywordIndex]])) {\n      for (var i = 0; i < items[blocksProperty[this.keywordIndex]].length; i++) {\n        var block = items[blocksProperty[this.keywordIndex]][i];\n        if (block.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n          this.paragraph = block;\n          this.serializeParagraph(writer, block, isLastSection);\n          this.paragraph = undefined;\n        } else if (block.hasOwnProperty(rowFormatProperty[this.keywordIndex])) {\n          var mVerticalMerge = new Dictionary();\n          this.serializeRow(writer, block, mVerticalMerge);\n        } else if (block.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n          this.serializeContentControl(writer, block[contentControlPropertiesProperty[this.keywordIndex]], block, isLastSection);\n        } else {\n          var table = block;\n          this.serializeTable(writer, table);\n        }\n      }\n    } else if (items.hasOwnProperty(rowFormatProperty[this.keywordIndex])) {\n      if (items[cellsProperty[this.keywordIndex]].length > 0) {\n        var mVerticalMerge = new Dictionary();\n        this.serializeRow(writer, items, mVerticalMerge);\n      }\n    } else if (items.hasOwnProperty(cellFormatProperty[this.keywordIndex])) {\n      var mVerticalMerge = new Dictionary();\n      this.serializeCell(writer, items, mVerticalMerge);\n    }\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  WordExport.prototype.toUnicode = function (code) {\n    var charCode = code.charCodeAt(0);\n    return charCode.toString(16);\n  };\n  //serialize dropdown and list property\n  WordExport.prototype.serializeContentControlList = function (writer, lists) {\n    for (var i = 0; i < lists.length; i++) {\n      writer.writeStartElement(undefined, 'listItem', this.wNamespace);\n      if (!isNullOrUndefined(lists[i][displayTextProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'displayText', this.wNamespace, lists[i][displayTextProperty[this.keywordIndex]]);\n      }\n      writer.writeAttributeString('w', 'value', this.wNamespace, lists[i][valueProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n  };\n  //Serialize character formatfor content control\n  WordExport.prototype.serializeContentParagraph = function (writer, items) {\n    for (var i = 0; i < items[blocksProperty[this.keywordIndex]].length; i++) {\n      var blocks = items[blocksProperty[this.keywordIndex]][i];\n      if (blocks.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n        for (var j = 0; j < blocks[inlinesProperty[this.keywordIndex]].length; j++) {\n          var inlines = blocks[inlinesProperty[this.keywordIndex]][j];\n          if (!isNullOrUndefined(inlines[characterFormatProperty[this.keywordIndex]])) {\n            this.serializeCharacterFormat(writer, inlines[characterFormatProperty[this.keywordIndex]]);\n          }\n        }\n      }\n    }\n  };\n  // serialize content control date property\n  WordExport.prototype.serializeContentControlDate = function (writer, contentProperties) {\n    if (contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 4 : 'Date')) {\n      writer.writeStartElement('w', 'date', this.wNamespace);\n      if (!isNullOrUndefined(contentProperties[dateCalendarTypeProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'calender', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getDateCalendarType(contentProperties[dateCalendarTypeProperty[this.keywordIndex]]) : contentProperties[dateCalendarTypeProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      if (!isNullOrUndefined(contentProperties[dateDisplayLocaleProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'lid', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, contentProperties[dateDisplayLocaleProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      if (!isNullOrUndefined(contentProperties[dateStorageFormatProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'storeMappedDataAs', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getDateStorageFormat(contentProperties[dateStorageFormatProperty[this.keywordIndex]]) : contentProperties[dateStorageFormatProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      if (!isNullOrUndefined(contentProperties[dateDisplayFormatProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'dateFormat', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, contentProperties[dateDisplayFormatProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the TextBody item\n  WordExport.prototype.serializeBodyItem = function (writer, item, isLastSection) {\n    if (isNullOrUndefined(item)) {\n      throw new Error('BodyItem should not be undefined');\n    }\n    if (item.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n      this.serializeContentControl(writer, item[contentControlPropertiesProperty[this.keywordIndex]], item, isLastSection);\n    } else if (item.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n      this.paragraph = item;\n      this.serializeParagraph(writer, item, isLastSection);\n      this.paragraph = undefined;\n    } else {\n      var table = item;\n      for (var i = 0; i < table[rowsProperty[this.keywordIndex]].length; i++) {\n        if (table[rowsProperty[this.keywordIndex]][i][cellsProperty[this.keywordIndex]].length > 0) {\n          this.serializeTable(writer, table);\n          break;\n        }\n      }\n      var sec = this.blockOwner;\n      //Need to write the Section Properties if the Table is last item in the section\n      if (!isLastSection && sec.hasOwnProperty(sectionFormatProperty[this.keywordIndex]) && sec[blocksProperty[this.keywordIndex]].indexOf(table) === sec[blocksProperty[this.keywordIndex]].length - 1) {\n        writer.writeStartElement('w', 'p', this.wNamespace);\n        writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n        this.serializeSectionProperties(writer, sec);\n        writer.writeEndElement();\n        writer.writeEndElement();\n      }\n    }\n  };\n  // Serialize the paragraph\n  WordExport.prototype.serializeParagraph = function (writer, paragraph, isLastSection) {\n    if (isNullOrUndefined(paragraph)) {\n      throw new Error('Paragraph should not be undefined');\n    }\n    // if (paragraph.ParagraphFormat.PageBreakAfter && !IsPageBreakNeedToBeSkipped(paragraph as Entity))\n    //     paragraph.InsertBreak(BreakType.PageBreak);\n    // if (paragraph.ParagraphFormat.ColumnBreakAfter && !IsPageBreakNeedToBeSkipped(paragraph as Entity))\n    //     paragraph.InsertBreak(BreakType.ColumnBreak);\n    //Splits the paragraph based on the newline character\n    // paragraph.SplitTextRange();\n    if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n      this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n    }\n    writer.writeStartElement('w', 'p', this.wNamespace);\n    if (this.isInsideComment) {\n      writer.writeAttributeString('w14', 'paraId', undefined, this.commentParaID.toString());\n    }\n    writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n    if (!isNullOrUndefined(paragraph[paragraphFormatProperty[this.keywordIndex]])) {\n      this.serializeParagraphFormat(writer, paragraph[paragraphFormatProperty[this.keywordIndex]], paragraph);\n    }\n    if (!isNullOrUndefined(paragraph[characterFormatProperty[this.keywordIndex]])) {\n      this.serializeCharacterFormat(writer, paragraph[characterFormatProperty[this.keywordIndex]]);\n    }\n    var sec = this.blockOwner;\n    //Need to write the Section Properties if the Paragraph is last item in the section\n    if (!isLastSection && sec.hasOwnProperty(sectionFormatProperty[this.keywordIndex]) && sec[blocksProperty[this.keywordIndex]].indexOf(paragraph) === sec[blocksProperty[this.keywordIndex]].length - 1) {\n      this.serializeSectionProperties(writer, sec);\n    }\n    writer.writeEndElement(); //end of pPr\n    // Serialize watermark if paragraph is the first item of Header document.\n    // EnsureWatermark(paragraph);\n    this.prevRevisionIds = [];\n    this.serializeParagraphItems(writer, paragraph[inlinesProperty[this.keywordIndex]]);\n    if (!this.isBookmarkAtEnd && !this.isBookmarkAtRowEnd) {\n      writer.writeEndElement(); //end of paragraph tag.\n    }\n    this.isBookmarkAtEnd = false;\n  };\n  //Serialize Revision start\n  WordExport.prototype.serializeRevisionStart = function (writer, item, previousNode) {\n    if (item.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n      if (!isNullOrUndefined(previousNode) && previousNode.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex]) && previousNode[bookmarkTypeProperty[this.keywordIndex]] === 0 && !(previousNode[nameProperty[this.keywordIndex]].indexOf('_Toc') >= 0) && isNullOrUndefined(item[revisionIdsProperty[this.keywordIndex]])) {\n        return;\n      }\n      var ids = item[revisionIdsProperty[this.keywordIndex]];\n      for (var i = 0; i < ids.length; i++) {\n        var revision = this.retrieveRevision(ids[i]);\n        if (revision.revisionType === 'Insertion') {\n          this.serializeTrackChanges(writer, 'ins', revision.author, revision.date);\n        }\n        if (revision.revisionType === 'Deletion') {\n          this.serializeTrackChanges(writer, 'del', revision.author, revision.date);\n        }\n      }\n    }\n  };\n  //Serialize track changes\n  WordExport.prototype.serializeTrackChanges = function (writer, type, author, date) {\n    writer.writeStartElement('w', type, this.wNamespace);\n    writer.writeAttributeString('w', 'id', this.wNamespace, (this.trackChangesId++).toString());\n    if (author != \"Unknown\") {\n      writer.writeAttributeString('w', 'author', this.wNamespace, author);\n    }\n    writer.writeAttributeString('w', 'date', this.wNamespace, date);\n  };\n  WordExport.prototype.retrieveRevision = function (id) {\n    var matchedRevisions = [];\n    for (var i = 0; i < this.revisions.length; i++) {\n      if (this.revisions[i].revisionID === id) {\n        return this.revisions[i];\n      }\n    }\n    return undefined;\n  };\n  // Serialize the paragraph items\n  WordExport.prototype.serializeParagraphItems = function (writer, paraItems, keyindex) {\n    if (isNullOrUndefined(paraItems)) {\n      throw new Error('Paragraph should not be undefined');\n    }\n    var inlines;\n    var previousNode = undefined;\n    var isContinueOverride = false;\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = keyindex;\n    }\n    for (var i = 0; i < paraItems.length; i++) {\n      var item = paraItems[i];\n      if (item.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n        inlines = true;\n        this.serializeContentControl(writer, item[contentControlPropertiesProperty[this.keywordIndex]], item, undefined, inlines);\n        this.serializeParagraphItems(writer, item[inlinesProperty[this.keywordIndex]]);\n      }\n      if (item.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n        this.serializeParagraphItems(writer, item);\n      }\n      this.serializeRevisionStart(writer, item, previousNode);\n      var isBdo = false;\n      if (item[characterFormatProperty[this.keywordIndex]]) {\n        isBdo = !isNullOrUndefined(item[characterFormatProperty[this.keywordIndex]][bdoProperty[this.keywordIndex]]) && item[characterFormatProperty[this.keywordIndex]][bdoProperty[this.keywordIndex]] !== 0;\n        if (isBdo && !isContinueOverride) {\n          this.serializeBiDirectionalOverride(writer, item[characterFormatProperty[this.keywordIndex]]);\n          isContinueOverride = true;\n        }\n      }\n      if (isContinueOverride && !isBdo) {\n        writer.writeEndElement();\n        isContinueOverride = false;\n      }\n      if (item.hasOwnProperty(fieldTypeProperty[this.keywordIndex])) {\n        this.serializeFieldCharacter(writer, item);\n      } else if (item.hasOwnProperty(imageStringProperty[this.keywordIndex])) {\n        this.serializePicture(writer, item);\n      } else if (item.hasOwnProperty(shapeIdProperty[this.keywordIndex])) {\n        var currentParargaph = this.paragraph;\n        this.serializeShape(writer, item);\n        this.paragraph = currentParargaph;\n      } else if (item.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex])) {\n        this.serializeBookMark(writer, item);\n      } else if (item.hasOwnProperty(editRangeIdProperty[this.keywordIndex])) {\n        this.serializeEditRange(writer, item);\n      } else if (item.hasOwnProperty(chartTypeProperty[this.keywordIndex])) {\n        this.chart = item;\n        this.serializeChart(writer, item);\n        // chart.xml\n        this.serializeChartStructure();\n      } else if (item.hasOwnProperty(commentCharacterTypeProperty[this.keywordIndex])) {\n        this.serializeComment(writer, item);\n      } else if (item.hasOwnProperty(footnoteTypeProperty[this.keywordIndex])) {\n        this.serializeEFReference(writer, item);\n      } else {\n        this.serializeTextRange(writer, item, previousNode);\n      }\n      //Serialize revision end\n      this.serializeRevisionEnd(writer, item, previousNode);\n      previousNode = item;\n      if (inlines) {\n        writer.writeEndElement();\n        writer.writeEndElement();\n        inlines = false;\n      }\n    }\n    if (isContinueOverride) {\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.serializeEFReference = function (writer, item) {\n    var efId = '';\n    var ef = item[blocksProperty[this.keywordIndex]];\n    if (item[footnoteTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Footnote')) {\n      writer.writeStartElement(undefined, 'r', this.wNamespace);\n      this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n      writer.writeStartElement(undefined, 'footnoteReference', this.wNamespace);\n      if (this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] && this.efRelationShipId === 0) {\n        this.efRelationShipId = 1;\n      }\n      efId = this.getEFNextRelationShipID();\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, efId);\n      this.addFootnotesEndnotes(ef, 'footnote', efId);\n      writer.writeEndElement();\n      writer.writeEndElement();\n    } else {\n      writer.writeStartElement(undefined, 'r', this.wNamespace);\n      this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n      writer.writeStartElement(undefined, 'endnoteReference', this.wNamespace);\n      efId = this.getEFNextRelationShipID();\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, efId);\n      this.addFootnotesEndnotes(ef, 'endnote', efId);\n      writer.writeEndElement();\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.addFootnotesEndnotes = function (ef, efType, id) {\n    var efColl = new Dictionary();\n    this.endnotesFootnotes.add(efType, efColl);\n    this.endnotesFootnotes.get(efType).add(id, ef);\n  };\n  WordExport.prototype.serializeEndnotesFootnote = function (writer, efType) {\n    if (this.endnotesFootnotes.length === 0) {\n      return;\n    }\n    var endnoteFootnotePath;\n    var endnoteFootnoteRelsPath;\n    if (!this.endnotesFootnotes.containsKey(efType)) {\n      return;\n    }\n    var efColl = this.endnotesFootnotes.get(efType);\n    var ef = undefined;\n    for (var i = 0; i < efColl.keys.length; i++) {\n      var id = efColl.keys[i];\n      ef = efColl.get(id);\n      if (efType === 'endnote') {\n        endnoteFootnotePath = this.endnotesPath;\n        endnoteFootnoteRelsPath = this.endnotesRelationPath;\n        this.serializeInlineEndnotes(writer, ef, id);\n      } else {\n        endnoteFootnotePath = this.footnotesPath;\n        endnoteFootnoteRelsPath = this.footnotesRelationPath;\n        this.serializeInlineFootnotes(writer, ef, id);\n      }\n    }\n  };\n  WordExport.prototype.serializeInlineEndnotes = function (writer, endNote, id) {\n    this.isSerializeFootEndNote = \"Endnote\";\n    this.endNoteFootnote = endNote;\n    var owner = this.blockOwner;\n    this.blockOwner = endNote;\n    writer.writeStartElement('w', 'endnote', this.wNamespace);\n    writer.writeAttributeString(undefined, 'id', this.wNamespace, id);\n    this.serializeBodyItems(writer, endNote, true);\n    writer.writeEndElement();\n    this.blockOwner = owner;\n    this.endNoteFootnote = undefined;\n    this.isSerializeFootEndNote = undefined;\n  };\n  WordExport.prototype.serializeInlineFootnotes = function (writer, footNote, id) {\n    this.isSerializeFootEndNote = \"Footnote\";\n    this.endNoteFootnote = footNote;\n    var owner = this.blockOwner;\n    this.blockOwner = footNote;\n    writer.writeStartElement('w', 'footnote', this.wNamespace);\n    writer.writeAttributeString(undefined, 'id', this.wNamespace, id);\n    this.serializeBodyItems(writer, footNote, true);\n    writer.writeEndElement();\n    this.blockOwner = owner;\n    this.endNoteFootnote = undefined;\n    this.isSerializeFootEndNote = undefined;\n  };\n  // private footnoteXMLItem(fileIndex: number): any {\n  //     let writer = new XmlWriter;\n  //     writer.writeStartElement(undefined, 'Sources', this.wNamespace)\n  //     writer.writeAttributeString('xmlns', 'b', undefined, 'http://schemas.openxmlformats.org/officeDocument/2006/bibliography')\n  //     writer.writeAttributeString(undefined,'xmlns',  undefined, 'http://schemas.openxmlformats.org/officeDocument/2006/bibliography')\n  //     writer.writeAttributeString(undefined,'SelectedStyle', undefined,\"\\APASixthEditionOfficeOnline.xsl\")\n  //     writer.writeAttributeString(undefined,'StyleName',  undefined,\"APA\")\n  //     writer.writeAttributeString(undefined,'Version',  undefined,\"6\")\n  //     writer.writeEndElement();\n  //     let itemPath: string = this.customXMLItemsPath + fileIndex + '.xml';\n  //     let zipArchiveItem: ZipArchiveItem = new ZipArchiveItem(writer.buffer, itemPath);\n  //     this.mArchive.addItem(zipArchiveItem);\n  //     return itemPath;\n  // }\n  // private footnoteXMLItemProps(itemID: string, fileIndex: number): any {\n  //     let writer: XmlWriter = new XmlWriter();\n  //     let customitemPropsPath: string = this.customXMLItemsPropspath + fileIndex + '.xml';\n  //     let itemPropsPath: string = this.itemPropsPath + fileIndex + '.xml';\n  //     writer.writeStartElement('ds', 'datastoreItem', this.wNamespace);\n  //     writer.writeAttributeString('ds', 'itemID', undefined, itemID);\n  //     writer.writeAttributeString('xmlns', 'ds', undefined, this.dsNamespace);\n  //     writer.writeStartElement('ds','schemaRefs', this.wNamespace);\n  //     writer.writeStartElement('ds', 'schemaRef', this.wNamespace);\n  //     writer.writeAttributeString('ds','uri', undefined,'http://schemas.openxmlformats.org/officeDocument/2006/bibliography' )\n  //     writer.writeEndElement();\n  //     writer.writeEndElement();\n  //     writer.writeEndElement();\n  //     this.customXMLProps.push(customitemPropsPath);\n  //     let zipArchiveItem: ZipArchiveItem = new ZipArchiveItem(writer.buffer, customitemPropsPath);\n  //     this.mArchive.addItem(zipArchiveItem);\n  //     return itemPropsPath;\n  // }\n  //Serialize the Footnote Endnotes Common Atributes\n  WordExport.prototype.writeEFCommonAttributes = function (writer) {\n    writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n    writer.writeAttributeString('xmlns', 'cx', undefined, this.cxNamespace);\n    writer.writeAttributeString('xmlns', 'aink', undefined, 'http://schemas.microsoft.com/office/drawing/2016/ink');\n    writer.writeAttributeString('xmlns', 'am3d', undefined, 'http://schemas.microsoft.com/office/drawing/2017/,odel3d');\n    this.writeCustom(writer);\n    writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n    writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n    writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n    this.writeDup(writer);\n    writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n    writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n  };\n  WordExport.prototype.serializeFootnotes = function () {\n    if (isNullOrUndefined(this.document[footnotesProperty[this.keywordIndex]])) {\n      return;\n    } else {\n      var writer = new XmlWriter();\n      writer.writeStartElement('w', 'footnotes', this.wNamespace);\n      this.writeEFCommonAttributes(writer);\n      writer.writeStartElement('w', 'footnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'separator');\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n      this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]], true);\n      writer.writeEndElement();\n      writer.writeStartElement('w', 'footnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationSeparator');\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n      this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]], true);\n      writer.writeEndElement();\n      if (this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]) {\n        writer.writeStartElement('w', 'footnote', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationNotice');\n        writer.writeAttributeString(undefined, 'id', this.wNamespace, '1');\n        this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]], true);\n        writer.writeEndElement();\n      }\n      this.serializeEndnotesFootnote(writer, 'footnote');\n      writer.writeEndElement();\n      var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.footnotesPath);\n      this.mArchive.addItem(zipArchiveItem);\n    }\n  };\n  WordExport.prototype.serializeEndnotes = function () {\n    if (isNullOrUndefined(this.document[endnotesProperty[this.keywordIndex]])) {\n      return;\n    } else {\n      var writer = new XmlWriter();\n      writer.writeStartElement('w', 'endnotes', this.wNamespace);\n      this.writeEFCommonAttributes(writer);\n      writer.writeStartElement('w', 'endnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'separator');\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n      this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]], true);\n      writer.writeEndElement();\n      writer.writeStartElement('w', 'endnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationSeparator');\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n      this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]], true);\n      writer.writeEndElement();\n      if (this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]) {\n        writer.writeStartElement('w', 'endnote', this.wNamespace);\n        writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationNotice');\n        writer.writeAttributeString(undefined, 'id', this.wNamespace, '1');\n        this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]], true);\n        writer.writeEndElement();\n      }\n      this.serializeEndnotesFootnote(writer, 'endnote');\n      writer.writeEndElement();\n      var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.endnotesPath);\n      this.mArchive.addItem(zipArchiveItem);\n    }\n  };\n  //Serialize Revision end\n  WordExport.prototype.serializeRevisionEnd = function (writer, item, previousNode) {\n    if (item.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n      if (!isNullOrUndefined(previousNode) && previousNode.hasOwnProperty(fieldTypeProperty[this.keywordIndex]) && previousNode[fieldTypeProperty[this.keywordIndex]] === 0 && item[textProperty[this.keywordIndex]].indexOf('TOC') >= 0) {\n        return;\n      }\n      for (var i = 0; i < item[revisionIdsProperty[this.keywordIndex]].length; i++) {\n        var revision = this.retrieveRevision(item[revisionIdsProperty[this.keywordIndex]][i]);\n        if (revision.revisionType === 'Insertion' || revision.revisionType === 'Deletion') {\n          writer.writeEndElement();\n        }\n      }\n    }\n  };\n  // Serialize the comment\n  WordExport.prototype.serializeComment = function (writer, comment) {\n    if (!(this.mComments.length === 1 && this.mComments[0].text === '')) {\n      if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 0) {\n        writer.writeStartElement('w', 'commentRangeStart', this.wNamespace);\n      } else if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 1) {\n        writer.writeStartElement('w', 'commentRangeEnd', this.wNamespace);\n      }\n      var commentId = this.commentId[comment[commentIdProperty[this.keywordIndex]]];\n      if (isNullOrUndefined(commentId)) {\n        commentId = this.commentId[comment[commentIdProperty[this.keywordIndex]]] = this.currentCommentId++;\n      }\n      writer.writeAttributeString('w', 'id', this.wNamespace, commentId.toString());\n      writer.writeEndElement();\n      if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 1) {\n        this.serializeCommentItems(writer, commentId);\n      }\n    }\n  };\n  WordExport.prototype.serializeCommentItems = function (writer, commentId) {\n    writer.writeStartElement('w', 'r', this.wNamespace);\n    writer.writeStartElement('w', 'commentReference', this.wNamespace);\n    writer.writeAttributeString('w', 'id', this.wNamespace, commentId.toString());\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeBiDirectionalOverride = function (writer, characterFormat) {\n    writer.writeStartElement(undefined, 'bdo', this.wNamespace);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getBiDirectionalOverride(characterFormat[bdoProperty[this.keywordIndex]]).toLowerCase() : characterFormat[bdoProperty[this.keywordIndex]].toLowerCase());\n  };\n  // Serialize Document Protection\n  //<w:permStart w:id=\"627587516\" w:edGrp=\"everyone\" />\n  WordExport.prototype.serializeEditRange = function (writer, editElement) {\n    if (editElement.hasOwnProperty(editableRangeStartProperty[this.keywordIndex])) {\n      writer.writeStartElement('w', 'permEnd', this.wNamespace);\n    } else {\n      writer.writeStartElement('w', 'permStart', this.wNamespace);\n      if (editElement[userProperty[this.keywordIndex]] && editElement[userProperty[this.keywordIndex]] !== '') {\n        writer.writeAttributeString('w', 'ed', this.wNamespace, editElement[userProperty[this.keywordIndex]]);\n      }\n      if (editElement[groupProperty[this.keywordIndex]] && editElement[groupProperty[this.keywordIndex]] !== '') {\n        writer.writeAttributeString('w', 'edGrp', this.wNamespace, editElement[groupProperty[this.keywordIndex]].toLowerCase());\n      }\n      if (editElement[columnFirstProperty[this.keywordIndex]] && editElement[columnFirstProperty[this.keywordIndex]] !== -1) {\n        writer.writeAttributeString('w', 'colFirst', this.wNamespace, editElement[columnFirstProperty[this.keywordIndex]].toString());\n      }\n      if (editElement[columnLastProperty[this.keywordIndex]] && editElement[columnLastProperty[this.keywordIndex]] !== -1) {\n        writer.writeAttributeString('w', 'colLast', this.wNamespace, editElement[columnLastProperty[this.keywordIndex]].toString());\n      }\n    }\n    writer.writeAttributeString('w', 'id', this.wNamespace, editElement[editRangeIdProperty[this.keywordIndex]]);\n    writer.writeEndElement();\n  };\n  // Serialize the book mark\n  WordExport.prototype.serializeBookMark = function (writer, bookmark) {\n    var bookmarkId = this.getBookmarkId(bookmark[nameProperty[this.keywordIndex]]);\n    var bookmarkName = bookmark[nameProperty[this.keywordIndex]];\n    if (bookmark[bookmarkTypeProperty[this.keywordIndex]] === 0) {\n      writer.writeStartElement('w', 'bookmarkStart', this.wNamespace);\n      writer.writeAttributeString('w', 'name', this.wNamespace, bookmarkName);\n      if (!isNullOrUndefined(bookmark[propertiesProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'colFirst', this.wNamespace, bookmark[propertiesProperty[this.keywordIndex]][columnFirstProperty[this.keywordIndex]].toString());\n        writer.writeAttributeString('w', 'colLast', this.wNamespace, bookmark[propertiesProperty[this.keywordIndex]][columnLastProperty[this.keywordIndex]].toString());\n      }\n    } else if (bookmark[bookmarkTypeProperty[this.keywordIndex]] === 1) {\n      if (!isNullOrUndefined(bookmark[propertiesProperty[this.keywordIndex]]) && !this.isBookmarkAtEnd && !this.isBookmarkAtRowEnd) {\n        if (HelperMethods.parseBoolValue(bookmark[propertiesProperty[this.keywordIndex]][isAfterParagraphMarkProperty[this.keywordIndex]])) {\n          writer.writeEndElement();\n          this.isBookmarkAtEnd = true;\n        } else if (HelperMethods.parseBoolValue(bookmark[propertiesProperty[this.keywordIndex]][isAfterRowMarkProperty[this.keywordIndex]])) {\n          writer.writeEndElement();\n          writer.writeEndElement();\n          writer.writeEndElement();\n          this.isBookmarkAtRowEnd = true;\n        }\n      }\n      writer.writeStartElement('w', 'bookmarkEnd', this.wNamespace);\n    }\n    writer.writeAttributeString('w', 'id', this.wNamespace, bookmarkId.toString());\n    writer.writeEndElement();\n  };\n  WordExport.prototype.getBookmarkId = function (name) {\n    var index = this.bookmarks.indexOf(name);\n    if (index < 0) {\n      index = this.bookmarks.length;\n      this.bookmarks.push(name);\n    }\n    return index;\n  };\n  // Serialize the picture.\n  WordExport.prototype.serializePicture = function (writer, image) {\n    if (image[widthProperty[this.keywordIndex]] >= 0 && image[heightProperty[this.keywordIndex]] >= 0) {\n      writer.writeStartElement(undefined, 'r', this.wNamespace);\n      this.serializeCharacterFormat(writer, image[characterFormatProperty[this.keywordIndex]]);\n      this.serializeDrawing(writer, image);\n      writer.writeEndElement(); //end of run element\n    }\n  };\n  WordExport.prototype.serializeShape = function (writer, item) {\n    if (item[widthProperty[this.keywordIndex]] >= 0 && item[heightProperty[this.keywordIndex]] >= 0) {\n      writer.writeStartElement(undefined, 'r', this.wNamespace);\n      this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n      if (item[horizontalRuleProperty[this.keywordIndex]] > 0) {\n        this.serializeHorizontalRule(writer, item);\n      } else {\n        this.serializeDrawing(writer, item);\n      }\n      writer.writeEndElement(); //end of run element\n    }\n  };\n  WordExport.prototype.serializeHorizontalRule = function (writer, shape) {\n    writer.writeStartElement(undefined, 'pict', this.wNamespace);\n    writer.writeStartElement('v', 'rect', undefined);\n    var cx = Math.round(shape[widthProperty[this.keywordIndex]]);\n    var cy = Math.round(shape[heightProperty[this.keywordIndex]]);\n    writer.writeAttributeString(undefined, 'style', undefined, 'width:' + cx.toString() + ';height:' + cy.toString());\n    if (shape[horizontalAlignmentProperty[this.keywordIndex]] > 0) {\n      var horAlig = this.keywordIndex == 1 ? this.getShapeHorizontalAlignment(shape[horizontalAlignmentProperty[this.keywordIndex]]) : shape[horizontalAlignmentProperty[this.keywordIndex]].toString();\n      writer.writeAttributeString('o', 'hralign', undefined, horAlig.toLowerCase());\n    }\n    writer.writeAttributeString('o', 'hrstd', undefined, 't');\n    writer.writeAttributeString('o', 'hr', undefined, 't');\n    writer.writeAttributeString(undefined, 'fillcolor', undefined, this.getColor(shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n    writer.writeAttributeString(undefined, 'stroked', undefined, 'f');\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  // Serialize the drawing element.\n  WordExport.prototype.serializeDrawing = function (writer, draw) {\n    writer.writeStartElement(undefined, 'drawing', this.wNamespace);\n    if (draw.hasOwnProperty(chartTypeProperty[this.keywordIndex])) {\n      this.serializeInlineCharts(writer, draw);\n    } else {\n      if (draw[textWrappingStyleProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Inline')) {\n        this.serializeInlinePictureAndShape(writer, draw);\n      } else {\n        this.serializeWrappingPictureAndShape(writer, draw);\n      }\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the Other Wrapping picture & Shape.\n  WordExport.prototype.serializeWrappingPictureAndShape = function (writer, picture) {\n    if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n      this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n    }\n    writer.writeStartElement('wp', 'anchor', this.wpNamespace);\n    this.serializePictureAndShapeDistance(writer, picture);\n    writer.writeAttributeString(undefined, 'simplePos', undefined, '0');\n    writer.writeAttributeString(undefined, 'relativeHeight', undefined, picture[zOrderPositionProperty[this.keywordIndex]] ? Math.abs(picture[zOrderPositionProperty[this.keywordIndex]]).toString() : '0');\n    var behindText = picture[textWrappingStyleProperty[this.keywordIndex]] && picture[textWrappingStyleProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 4 : 'Behind');\n    writer.writeAttributeString(undefined, 'behindDoc', undefined, behindText ? '1' : '0');\n    // LockAnchor & LayoutInCell & AllowOverlap in these boolean has 0 and 1 as values.If the value is null or undefined then set the default value as 0.\n    var lockAnchor = this.keywordIndex == 1 ? !isNullOrUndefined(picture[lockAnchorProperty[this.keywordIndex]]) ? picture[lockAnchorProperty[this.keywordIndex]].toString() : '0' : picture[lockAnchorProperty[this.keywordIndex]] ? '1' : '0';\n    writer.writeAttributeString(undefined, 'locked', undefined, lockAnchor);\n    var layoutcell = this.keywordIndex == 1 ? !isNullOrUndefined(picture[layoutInCellProperty[this.keywordIndex]]) ? picture[layoutInCellProperty[this.keywordIndex]].toString() : '0' : picture[layoutInCellProperty[this.keywordIndex]] ? '1' : '0';\n    writer.writeAttributeString(undefined, 'layoutInCell', undefined, layoutcell);\n    var allowOverlap = this.keywordIndex == 1 ? !isNullOrUndefined(picture[allowOverlapProperty[this.keywordIndex]]) ? picture[allowOverlapProperty[this.keywordIndex]].toString() : '0' : picture[allowOverlapProperty[this.keywordIndex]] ? '1' : '0';\n    writer.writeAttributeString(undefined, 'allowOverlap', undefined, allowOverlap);\n    writer.writeStartElement('wp', 'simplePos', this.wpNamespace);\n    writer.writeAttributeString(undefined, 'x', undefined, '0');\n    writer.writeAttributeString(undefined, 'y', undefined, '0');\n    writer.writeEndElement();\n    writer.writeStartElement('wp', 'positionH', this.wpNamespace);\n    var horizontalOrigin = this.keywordIndex == 1 ? this.getHorizontalOrigin(picture[horizontalOriginProperty[this.keywordIndex]]) : picture[horizontalOriginProperty[this.keywordIndex]].toString();\n    writer.writeAttributeString(undefined, 'relativeFrom', undefined, HelperMethods.formatText(\"firstlower\", horizontalOrigin));\n    if (picture[horizontalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n      writer.writeStartElement('wp', 'posOffset', this.wpNamespace);\n      var horPos = Math.round(picture[horizontalPositionProperty[this.keywordIndex]] * this.emusPerPoint);\n      writer.writeString(horPos.toString());\n      writer.writeEndElement(); //end of posOffset\n    } else {\n      writer.writeStartElement('wp', 'align', this.wpNamespace);\n      var horAlig = this.keywordIndex == 1 ? this.getShapeHorizontalAlignment(picture[horizontalAlignmentProperty[this.keywordIndex]]) : picture[horizontalAlignmentProperty[this.keywordIndex]].toString();\n      writer.writeString(horAlig.toLowerCase());\n      writer.writeEndElement(); //end of align\n    }\n    writer.writeEndElement(); //end of postionH\n    writer.writeStartElement('wp', 'positionV', this.wpNamespace);\n    var verticalOrigin = this.keywordIndex == 1 ? this.getVerticalOrigin(picture[verticalOriginProperty[this.keywordIndex]]) : picture[verticalOriginProperty[this.keywordIndex]].toString();\n    writer.writeAttributeString(undefined, 'relativeFrom', undefined, HelperMethods.formatText(\"firstlower\", verticalOrigin));\n    if (picture[verticalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n      writer.writeStartElement('wp', 'posOffset', this.wpNamespace);\n      var vertPos = Math.round(picture[verticalPositionProperty[this.keywordIndex]] * this.emusPerPoint);\n      writer.writeString(vertPos.toString());\n      writer.writeEndElement(); // end of posOffset\n    } else {\n      writer.writeStartElement('wp', 'align', this.wpNamespace);\n      var verAlig = this.keywordIndex == 1 ? this.getShapeVerticalAlignment(picture[verticalAlignmentProperty[this.keywordIndex]]) : picture[verticalAlignmentProperty[this.keywordIndex]];\n      writer.writeString(verAlig.toLowerCase());\n      writer.writeEndElement(); //end of align\n    }\n    writer.writeEndElement(); //end of postionV\n    writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n    var cx = Math.round(picture[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n    var cy = Math.round(picture[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n    writer.writeEndElement();\n    if (!isNullOrUndefined(picture[imageStringProperty[this.keywordIndex]])) {\n      // this.serializePicProperties(writer, draw);\n      this.serializeShapeWrapStyle(writer, picture);\n      this.serializeDrawingGraphics(writer, picture);\n    } else {\n      this.serializeShapeDrawingGraphics(writer, picture);\n    }\n    writer.writeEndElement(); // end of anchor\n  };\n  // Serialize the inline picture & Shape.\n  WordExport.prototype.serializeInlinePictureAndShape = function (writer, draw) {\n    writer.writeStartElement(undefined, 'inline', this.wpNamespace);\n    this.writeDefaultDistAttribute(writer);\n    writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n    var cx = Math.round(draw[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n    var cy = Math.round(draw[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n    writer.writeEndElement();\n    // double borderWidth = (double)picture.PictureShape.PictureDescriptor.BorderLeft.LineWidth / DLSConstants.BorderLineFactor;\n    // if (borderWidth > 0 && picture.DocxProps.length === 0) {\n    //     long leftTop = 0, rightBottom = 0;\n    //     picture.PictureShape.GetEffectExtent(borderWidth, ref leftTop, ref rightBottom);\n    //     m_writer.WriteStartElement('effectExtent', WP_namespace);\n    //     m_writer.WriteAttributeString('l', leftTop.ToString(CultureInfo.InvariantCulture));\n    //     m_writer.WriteAttributeString('t', leftTop.ToString(CultureInfo.InvariantCulture));\n    //     m_writer.WriteAttributeString('r', rightBottom.ToString(CultureInfo.InvariantCulture));\n    //     m_writer.WriteAttributeString('b', rightBottom.ToString(CultureInfo.InvariantCulture));\n    //     m_writer.WriteEndElement();\n    // }\n    //this.serializePicProperties(writer, image);\n    if (!isNullOrUndefined(draw[imageStringProperty[this.keywordIndex]])) {\n      this.serializeShapeWrapStyle(writer, draw);\n      this.serializeDrawingGraphics(writer, draw);\n    } else {\n      this.serializeShapeDrawingGraphics(writer, draw);\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializePictureAndShapeDistance = function (writer, draw) {\n    var top = draw[distanceTopProperty[this.keywordIndex]] ? Math.round(draw[distanceTopProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '0';\n    writer.writeAttributeString(undefined, 'distT', undefined, top);\n    var bottom = draw[distanceBottomProperty[this.keywordIndex]] ? Math.round(draw[distanceBottomProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '0';\n    writer.writeAttributeString(undefined, 'distB', undefined, bottom);\n    var left = draw[distanceLeftProperty[this.keywordIndex]] ? Math.round(draw[distanceLeftProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '114300';\n    writer.writeAttributeString(undefined, 'distL', undefined, left);\n    var right = draw[distanceRightProperty[this.keywordIndex]] ? Math.round(draw[distanceRightProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '114300';\n    writer.writeAttributeString(undefined, 'distR', undefined, right);\n  };\n  WordExport.prototype.writeDefaultDistAttribute = function (writer) {\n    writer.writeAttributeString(undefined, 'distT', undefined, '0');\n    writer.writeAttributeString(undefined, 'distB', undefined, '0');\n    writer.writeAttributeString(undefined, 'distL', undefined, '0');\n    writer.writeAttributeString(undefined, 'distR', undefined, '0');\n  };\n  // serialize inline chart\n  WordExport.prototype.serializeInlineCharts = function (writer, item) {\n    writer.writeStartElement(undefined, 'inline', this.wpNamespace);\n    this.writeDefaultDistAttribute(writer);\n    writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n    var cx = Math.round(item[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n    var cy = Math.round(item[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n    writer.writeEndElement(); // end of wp:extend\n    writer.writeStartElement(undefined, 'effectExtent', this.wpNamespace);\n    writer.writeAttributeString(undefined, 'l', undefined, '0');\n    writer.writeAttributeString(undefined, 't', undefined, '0');\n    writer.writeAttributeString(undefined, 'r', undefined, '0');\n    writer.writeAttributeString(undefined, 'b', undefined, '0');\n    writer.writeEndElement(); // end of wp: effectExtent\n    this.serializeDrawingGraphicsChart(writer, item);\n    writer.writeEndElement(); // end of inline\n  };\n  // Serialize the graphics element for chart.\n  WordExport.prototype.serializeDrawingGraphicsChart = function (writer, chart) {\n    var id = '';\n    id = this.updatechartId(chart);\n    // Processing chart\n    writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n    writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n    writer.writeAttributeString(undefined, 'name', undefined, this.getNextChartName());\n    writer.writeEndElement(); // end of wp docPr\n    writer.writeStartElement('wp', 'cNvGraphicFramePr', this.wpNamespace);\n    writer.writeEndElement(); // end of cNvGraphicFramePr\n    writer.writeStartElement('a', 'graphic', this.aNamespace);\n    writer.writeStartElement('a', 'graphicData', this.aNamespace);\n    writer.writeAttributeString(undefined, 'uri', undefined, this.chartNamespace);\n    writer.writeStartElement('c', 'chart', this.chartNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('r', 'id', undefined, id);\n    writer.writeEndElement(); // end of chart\n    writer.writeEndElement(); // end of graphic data\n    writer.writeEndElement(); // end of graphic\n  };\n  WordExport.prototype.getBase64ImageString = function (image) {\n    var base64ImageString = !isNullOrUndefined(image[metaFileImageStringProperty[this.keywordIndex]]) ? this.mImages.get(parseInt(image[metaFileImageStringProperty[this.keywordIndex]])) : this.mImages.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n    var imageString = base64ImageString[HelperMethods.parseBoolValue(image[isMetaFileProperty[this.keywordIndex]]) ? 1 : 0];\n    var index = this.startsWith(imageString, \"https://\") || this.startsWith(imageString, \"http://\") || this.startsWith(imageString, \"file://\") ? 1 : 0;\n    var metaFileImageString = base64ImageString[index];\n    return {\n      imageString: imageString,\n      metaFileImageString: metaFileImageString\n    };\n  };\n  WordExport.prototype.getNextChartName = function () {\n    return 'Chart' + ++this.chartCount;\n  };\n  // serialize chart\n  WordExport.prototype.serializeChart = function (writer, chart) {\n    writer.writeStartElement('w', 'r', this.wNamespace);\n    this.serializeCharacterFormat(writer, chart[characterFormatProperty[this.keywordIndex]]);\n    this.serializeDrawing(writer, chart);\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeChartStructure = function () {\n    this.serializeChartXML();\n    this.serializeChartColors();\n    this.serializeChartExcelData();\n    this.serializeChartRelations();\n    this.chart = undefined;\n    this.saveExcel();\n  };\n  // serialize Chart.xml\n  WordExport.prototype.serializeChartXML = function () {\n    var chartPath = '';\n    var writer = new XmlWriter();\n    writer.writeStartElement('c', 'chartSpace', this.chartNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'c16r2', undefined, this.c15Namespace);\n    this.serializeChartData(writer, this.chart);\n    writer.writeStartElement('c', 'externalData', this.chartNamespace);\n    writer.writeAttributeString('r', 'id', undefined, 'rId1');\n    writer.writeStartElement('c', 'autoUpdate', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of autoUpdate\n    writer.writeEndElement(); // end of externalData\n    writer.writeEndElement(); // end of chartSpace\n    chartPath = this.chartPath + '/chart' + this.chartCount + '.xml';\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, chartPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  // serialize chart colors.xml\n  WordExport.prototype.serializeChartColors = function () {\n    var writer = new XmlWriter();\n    var colorPath = '';\n    writer.writeStartElement('cs', 'colorStyle', this.csNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeAttributeString(undefined, 'meth', undefined, 'cycle');\n    writer.writeAttributeString(undefined, 'id', undefined, '10');\n    this.serializeChartColor(writer);\n    colorPath = this.chartPath + '/colors' + this.chartCount + '.xml';\n    writer.writeEndElement(); // end of cs:colorStyle chart color\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, colorPath);\n    this.mArchive.addItem(zipArchiveItem);\n    colorPath = '';\n  };\n  WordExport.prototype.serializeChartColor = function (writer) {\n    for (var i = 1; i <= 6; i++) {\n      writer.writeStartElement('a', 'schemeClr', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'accent' + i);\n      writer.writeEndElement(); // end of a:schemeClr\n    }\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '60000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '80000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeStartElement('a', 'lumOff', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '20000');\n    writer.writeEndElement(); // end of lumoff\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '80000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '60000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeStartElement('a', 'lumOff', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '40000');\n    writer.writeEndElement(); // end of lumoff\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '50000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '70000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeStartElement('a', 'lumOff', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '30000');\n    writer.writeEndElement(); // end of lumoff\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '70000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeEndElement(); // end of cs:variation\n    writer.writeStartElement('cs', 'variation', this.csNamespace);\n    writer.writeStartElement('a', 'lumMod', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '50000');\n    writer.writeEndElement(); // end of lumMod\n    writer.writeStartElement('a', 'lumOff', this.aNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '50000');\n    writer.writeEndElement(); // end of lumoff\n    writer.writeEndElement(); // end of cs:variation\n  };\n  // serialize chart Excel Data\n  WordExport.prototype.serializeChartExcelData = function () {\n    if (isNullOrUndefined(this.excelFiles)) {\n      this.excelFiles = new Dictionary();\n    }\n    this.mArchiveExcel = new ZipArchive();\n    this.mArchiveExcel.compressionLevel = 'Normal';\n    var type = this.chart[chartTypeProperty[this.keywordIndex]];\n    var isScatterType = type === 'Scatter_Markers' || type === 'Bubble';\n    this.serializeWorkBook();\n    this.serializeSharedString(isScatterType);\n    this.serializeExcelContentTypes();\n    this.serializeExcelData(isScatterType);\n    this.serializeExcelStyles();\n    this.serializeExcelRelation();\n    this.serializeExcelGeneralRelations();\n    this.chartStringCount = 0;\n  };\n  WordExport.prototype.serializeWorkBook = function () {\n    var writer = new XmlWriter();\n    var workbookPath = 'xl/workbook.xml';\n    this.resetExcelRelationShipId();\n    writer.writeStartElement(undefined, 'workbook', undefined);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n    writer.writeStartElement(undefined, 'sheets', undefined);\n    writer.writeStartElement(undefined, 'sheet', undefined);\n    writer.writeAttributeString(undefined, 'name', undefined, 'Sheet1');\n    writer.writeAttributeString(undefined, 'sheetId', undefined, '1');\n    writer.writeAttributeString('r', 'id', undefined, this.getNextExcelRelationShipID());\n    writer.writeEndElement(); // end of sheet\n    writer.writeEndElement(); // end of sheets\n    writer.writeEndElement(); // end of workbook\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, workbookPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeExcelStyles = function () {\n    var writer = new XmlWriter();\n    var stylePath = 'xl/styles.xml';\n    writer.writeStartElement(undefined, 'styleSheet', undefined);\n    writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'x14ac');\n    writer.writeAttributeString('xmlns', 'x14ac', undefined, 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac');\n    writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n    writer.writeEndElement(); // end of styleSheet\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, stylePath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeExcelData = function (isScatterType) {\n    // excel data\n    var sheetPath = '';\n    var writer = new XmlWriter();\n    writer.writeStartElement(undefined, 'worksheet', undefined);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'x14', undefined, this.spreadSheet9);\n    writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n    this.serializeExcelSheet(writer, isScatterType);\n    writer.writeEndElement(); // end of worksheet\n    sheetPath = 'xl/worksheets' + '/sheet1.xml';\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, sheetPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeSharedString = function (isScatterType) {\n    var chart = this.chart;\n    var writer = new XmlWriter();\n    var sharedStringPath = '';\n    var chartSharedString = [];\n    var type = this.chart[chartTypeProperty[this.keywordIndex]];\n    var seriesLength = chart[chartSeriesProperty[this.keywordIndex]].length;\n    for (var column = 0; column < seriesLength; column++) {\n      var series = chart[chartSeriesProperty[this.keywordIndex]][column];\n      var seriesName = series[seriesNameProperty[this.keywordIndex]];\n      var isString = seriesName.match(/[a-z]/i);\n      if (isScatterType && column === 0) {\n        chartSharedString.push('X-Values');\n      }\n      if (isString) {\n        chartSharedString.push(series[seriesNameProperty[this.keywordIndex]]);\n        this.chartStringCount++;\n      }\n    }\n    if (type === 'Bubble') {\n      chartSharedString.push('Size');\n    }\n    for (var row = 0; row < chart[chartCategoryProperty[this.keywordIndex]].length; row++) {\n      var category = chart[chartCategoryProperty[this.keywordIndex]][row];\n      var format = chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n      var categoryName = category[categoryXNameProperty[this.keywordIndex]];\n      var isString = categoryName.match(/[a-z]/i);\n      if (isString || format === 'm/d/yyyy') {\n        chartSharedString.push(category[categoryXNameProperty[this.keywordIndex]]);\n        this.chartStringCount++;\n      }\n    }\n    var uniqueCount = this.chartStringCount + 1;\n    writer.writeStartElement(undefined, 'sst', undefined);\n    writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n    writer.writeAttributeString(undefined, 'count', undefined, uniqueCount.toString());\n    writer.writeAttributeString(undefined, 'uniqueCount', undefined, uniqueCount.toString());\n    for (var i = 0; i <= chartSharedString.length; i++) {\n      writer.writeStartElement(undefined, 'si', undefined);\n      writer.writeStartElement(undefined, 't', undefined);\n      if (i !== chartSharedString.length) {\n        writer.writeString(chartSharedString[i]);\n      } else if (!isScatterType) {\n        writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n        writer.writeString(' ');\n      }\n      writer.writeEndElement(); // end of t\n      writer.writeEndElement(); // end of si\n    }\n    writer.writeEndElement(); // end of sst\n    sharedStringPath = 'xl/sharedStrings' + '.xml';\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, sharedStringPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  // excel sheet data\n  WordExport.prototype.serializeExcelSheet = function (writer, isScatterType) {\n    var chart = this.chart;\n    var type = 's';\n    var isBubbleType = chart[chartTypeProperty[this.keywordIndex]] === 'Bubble';\n    var bubbleLength;\n    var categoryLength = chart[chartCategoryProperty[this.keywordIndex]].length + 1;\n    var format = chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n    var seriesLength = chart[chartSeriesProperty[this.keywordIndex]].length + 1;\n    if (isBubbleType) {\n      bubbleLength = seriesLength;\n      seriesLength = seriesLength + 1;\n    }\n    var category = undefined;\n    var series = undefined;\n    var count = 0;\n    writer.writeStartElement(undefined, 'sheetData', undefined);\n    for (var row = 0; row < categoryLength; row++) {\n      writer.writeStartElement(undefined, 'row', undefined);\n      writer.writeAttributeString(undefined, 'r', undefined, (row + 1).toString());\n      for (var column = 0; column < seriesLength; column++) {\n        var alphaNumeric = String.fromCharCode('A'.charCodeAt(0) + column) + (row + 1).toString();\n        writer.writeStartElement(undefined, 'c', undefined);\n        writer.writeAttributeString(undefined, 'r', undefined, alphaNumeric);\n        if (row !== 0 && column === 0) {\n          category = chart[chartCategoryProperty[this.keywordIndex]][row - 1];\n          var categoryName = category[categoryXNameProperty[this.keywordIndex]];\n          var isString = categoryName.match(/[a-z]/i);\n          if (isNullOrUndefined(isString) && format === 'm/d/yyyy') {\n            type = 's';\n          } else if (!isString || isScatterType) {\n            type = 'n';\n          } else {\n            type = 's';\n          }\n        } else if (row === 0 && column !== 0 && column !== bubbleLength) {\n          series = chart[chartSeriesProperty[this.keywordIndex]][column - 1];\n          var seriesName = series[seriesNameProperty[this.keywordIndex]];\n          var isString = seriesName.match(/[a-z]/i);\n          if (!isString) {\n            type = 'n';\n          } else {\n            type = 's';\n          }\n        } else if (row === 0 && isBubbleType && column === bubbleLength) {\n          type = 's';\n        } else if (row === 0 && column === 0) {\n          type = 's';\n        } else {\n          type = 'n';\n        }\n        writer.writeAttributeString(undefined, 't', undefined, type);\n        writer.writeStartElement(undefined, 'v', undefined);\n        if (row === 0 && column === 0 && !isScatterType) {\n          writer.writeString(this.chartStringCount.toString());\n        } else if (type === 's' && count < this.chartStringCount) {\n          writer.writeString(count.toString());\n          count++;\n        } else if (row !== 0 && type !== 's' && column === 0 && column !== bubbleLength) {\n          writer.writeString(category[categoryXNameProperty[this.keywordIndex]]);\n        } else if (column !== 0 && type !== 's' && row === 0 && column !== bubbleLength) {\n          writer.writeString(series[seriesNameProperty[this.keywordIndex]]);\n        } else if (column !== 0 && column !== bubbleLength) {\n          var data = category[chartDataProperty[this.keywordIndex]][column - 1];\n          var yValue = data[yValueProperty[this.keywordIndex]];\n          writer.writeString(yValue.toString());\n        } else if (isBubbleType && column === bubbleLength) {\n          var data = category[chartDataProperty[this.keywordIndex]][column - 2];\n          var size = data[sizeProperty[this.keywordIndex]];\n          writer.writeString(size.toString());\n        }\n        writer.writeEndElement(); // end of v[value]\n        writer.writeEndElement(); // end of c[column]\n        type = '';\n      }\n      writer.writeEndElement(); // end of row\n    }\n    writer.writeEndElement(); // end of sheetData\n  };\n  // excel content types\n  WordExport.prototype.serializeExcelContentTypes = function () {\n    var writer = new XmlWriter();\n    writer.writeStartElement(undefined, 'Types', 'http://schemas.openxmlformats.org/package/2006/content-types');\n    this.serializeDefaultContentType(writer, 'xml', this.xmlContentType);\n    this.serializeDefaultContentType(writer, 'rels', this.relationContentType);\n    this.serializeOverrideContentType(writer, 'xl/styles.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml');\n    this.serializeOverrideContentType(writer, 'xl/workbook.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml');\n    // this.serializeOverrideContentType(writer, '/docProps/app.xml', 'application/vnd.openxmlformats-officedocument.extended-properties+xml');\n    // this.serializeOverrideContentType(writer, '/docProps/core.xml', 'application/vnd.openxmlformats-package.core-properties+xml');\n    this.serializeOverrideContentType(writer, 'xl/sharedStrings.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml');\n    this.serializeOverrideContentType(writer, 'xl/worksheets/sheet1.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml');\n    writer.writeEndElement(); // end of types tag\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.contentTypesPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeExcelRelation = function () {\n    var writer = new XmlWriter();\n    this.resetExcelRelationShipId();\n    var worksheetType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet';\n    var sharedStringType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings';\n    writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n    this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), worksheetType, 'worksheets/sheet1.xml');\n    this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), this.stylesRelType, 'styles.xml');\n    this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), sharedStringType, 'sharedStrings.xml');\n    writer.writeEndElement(); // end of relationships\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.excelRelationPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeExcelGeneralRelations = function () {\n    var writer = new XmlWriter();\n    this.resetExcelRelationShipId();\n    writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n    this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), this.documentRelType, 'xl/workbook.xml');\n    writer.writeEndElement(); // end of relationships\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.generalRelationPath);\n    this.mArchiveExcel.addItem(zipArchiveItem);\n  };\n  // get the next Excel relationship ID\n  WordExport.prototype.getNextExcelRelationShipID = function () {\n    return 'rId' + ++this.eRelationShipId;\n  };\n  // get the next Chart relationship ID\n  WordExport.prototype.getNextChartRelationShipID = function () {\n    return 'rId' + ++this.cRelationShipId;\n  };\n  //  chart data\n  WordExport.prototype.serializeChartData = function (writer, chart) {\n    writer.writeStartElement('c', 'date1904', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement();\n    writer.writeStartElement('c', 'lang', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, 'en-US');\n    writer.writeEndElement();\n    writer.writeStartElement('c', 'roundedCorners', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement();\n    writer.writeStartElement('mc', 'AlternateContent', this.veNamespace);\n    writer.writeStartElement('mc', 'Choice', this.veNamespace);\n    writer.writeAttributeString('xmlns', 'c14', undefined, this.c7Namespace);\n    writer.writeAttributeString(undefined, 'Requires', undefined, 'c14');\n    writer.writeStartElement('c14', 'style', undefined);\n    writer.writeAttributeString(undefined, 'val', undefined, '102');\n    writer.writeEndElement(); // c14 style end\n    writer.writeEndElement(); // mc:choice ened\n    writer.writeStartElement('mc', 'Fallback', this.veNamespace);\n    writer.writeStartElement('c', 'style', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '2');\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement(); // end tag of mc alternate content\n    writer.writeStartElement('c', 'chart', this.chartNamespace);\n    if (!isNullOrUndefined(this.chart[chartTitleProperty[this.keywordIndex]])) {\n      writer.writeStartElement('c', 'title', this.chartNamespace);\n      this.serializeTextProperties(writer, this.chart[chartTitleAreaProperty[this.keywordIndex]], this.chart[chartTitleProperty[this.keywordIndex]]);\n      writer.writeEndElement(); // end tag of title\n    }\n    // serialize plot area\n    this.serializeChartPlotArea(writer, chart);\n    writer.writeEndElement(); // end tag of chart\n    this.serializeShapeProperties(writer, 'D9D9D9', true);\n    writer.writeStartElement('c', 'txPr', this.chartNamespace);\n    writer.writeAttributeString('xmlns', 'c', undefined, this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeEndElement(); // end tag of bodyPr\n    writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeEndElement(); // end of a:lstStyle\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeStartElement('a', 'pPr', this.aNamespace);\n    writer.writeStartElement('a', 'defRPr', this.aNamespace);\n    writer.writeEndElement(); // end tag of defRPr\n    writer.writeEndElement(); // end tag of pPr\n    writer.writeStartElement('a', 'endParaRPr', this.aNamespace);\n    writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n    writer.writeEndElement(); // end of a:endParaRPr\n    writer.writeEndElement(); // end tag of p\n    writer.writeEndElement(); // end tag of txPr\n  };\n  //  chart plot area\n  /* eslint-disable */\n  WordExport.prototype.serializeChartPlotArea = function (writer, chart) {\n    writer.writeStartElement('c', 'autoTitleDeleted', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of autoTitleDeleted\n    writer.writeStartElement('c', 'plotArea', this.chartNamespace);\n    writer.writeStartElement('c', 'layout', this.chartNamespace);\n    writer.writeEndElement();\n    // chart Type\n    var serializationChartType = this.chartType(chart);\n    var isPieTypeSerialization = serializationChartType === 'pieChart' || serializationChartType === 'doughnutChart';\n    var isScatterType = serializationChartType === 'scatterChart' || serializationChartType === 'bubbleChart';\n    writer.writeStartElement('c', serializationChartType, this.chartNamespace);\n    if (serializationChartType === 'barChart') {\n      var barDiv = '';\n      if (chart[chartTypeProperty[this.keywordIndex]] === 'Column_Clustered' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked_100') {\n        barDiv = 'col';\n      } else {\n        barDiv = 'bar';\n      }\n      writer.writeStartElement('c', 'barDir', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, barDiv);\n      writer.writeEndElement(); // end of barDir\n    }\n    if (!isPieTypeSerialization && !isScatterType) {\n      var grouping = this.chartGrouping(chart[chartTypeProperty[this.keywordIndex]]);\n      writer.writeStartElement('c', 'grouping', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, grouping);\n      writer.writeEndElement(); // end of grouping\n    }\n    if (serializationChartType === 'scatterChart') {\n      writer.writeStartElement('c', 'scatterStyle', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'marker');\n      writer.writeEndElement(); // end of scatterStyle\n    }\n    writer.writeStartElement('c', 'varyColors', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c:varyColors\n    var valueSheet = '';\n    for (var i = 0; i < chart[chartSeriesProperty[this.keywordIndex]].length; i++) {\n      var series = chart[chartSeriesProperty[this.keywordIndex]][i];\n      this.seriesCount = i;\n      writer.writeStartElement('c', 'ser', this.chartNamespace);\n      writer.writeStartElement('c', 'idx', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, i.toString());\n      writer.writeEndElement(); // end of c:idx\n      writer.writeStartElement('c', 'order', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, i.toString());\n      writer.writeEndElement(); // end of c:order\n      writer.writeStartElement('c', 'tx', this.chartNamespace);\n      writer.writeStartElement('c', 'strRef', this.chartNamespace);\n      writer.writeStartElement('c', 'f', this.chartNamespace);\n      var alphaNumeric = String.fromCharCode('B'.charCodeAt(0) + i);\n      valueSheet = 'Sheet1!$' + alphaNumeric;\n      writer.writeString(valueSheet + '$1');\n      valueSheet = valueSheet + '$2:$' + alphaNumeric + '$';\n      writer.writeEndElement(); // end of c:f\n      writer.writeStartElement('c', 'strCache', this.chartNamespace);\n      writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '1');\n      writer.writeEndElement(); // end of ptCount\n      writer.writeStartElement('c', 'pt', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'idx', undefined, '0');\n      writer.writeStartElement('c', 'v', this.chartNamespace);\n      writer.writeString(series[seriesNameProperty[this.keywordIndex]]);\n      writer.writeEndElement(); // end of c:v\n      writer.writeEndElement(); // end of pt\n      writer.writeEndElement(); // end of strCache\n      writer.writeEndElement(); // end of strRef\n      writer.writeEndElement(); // end of tx\n      if (chart[chartTypeProperty[this.keywordIndex]] === 'Pie' || chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut') {\n        this.parseChartDataPoint(writer, series);\n        writer.writeStartElement('c', 'explosion', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of explosion\n      } else if (!isScatterType) {\n        this.parseChartSeriesColor(writer, series[dataPointsProperty[this.keywordIndex]], serializationChartType);\n      }\n      if (serializationChartType === 'scatterChart') {\n        var fillColor = series[dataPointsProperty[this.keywordIndex]][0][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n        writer.writeStartElement('c', 'marker', this.chartNamespace);\n        writer.writeStartElement('c', 'symbol', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, 'circle');\n        writer.writeEndElement(); // end of a: symbol\n        writer.writeStartElement('c', 'size', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '5');\n        writer.writeEndElement(); // end of a: size\n        this.serializeShapeProperties(writer, fillColor, false);\n        writer.writeEndElement(); // end of a: marker\n      }\n      if (series[dataLabelProperty[this.keywordIndex]]) {\n        this.parseChartDataLabels(writer, series[dataLabelProperty[this.keywordIndex]]);\n      }\n      if (series[trendLinesProperty[this.keywordIndex]]) {\n        this.parseChartTrendLines(writer, series);\n      }\n      if (series[errorBarProperty[this.keywordIndex]]) {\n        this.serializeChartErrorBar(writer, series);\n      }\n      if (serializationChartType === 'scatterChart') {\n        this.serializeDefaultShapeProperties(writer);\n      } else if (serializationChartType === 'bubbleChart') {\n        this.serializeShapeProperties(writer, series[dataPointsProperty[this.keywordIndex]][i][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]], false);\n      }\n      var categoryType = 'cat';\n      var categoryRef = 'strRef';\n      var cacheType = 'strCache';\n      if (serializationChartType === 'scatterChart') {\n        categoryType = 'xVal';\n        categoryRef = 'numRef';\n        cacheType = 'numCache';\n      }\n      writer.writeStartElement('c', categoryType, this.chartNamespace);\n      writer.writeStartElement('c', categoryRef, this.chartNamespace);\n      this.serializeChartCategory(writer, chart, cacheType); // serialize chart yvalue\n      writer.writeEndElement(); // end of categoryRef\n      writer.writeEndElement(); // end of cat\n      this.serializeChartValue(writer, valueSheet, serializationChartType);\n      writer.writeEndElement(); // end of c:ser\n    }\n    writer.writeStartElement('c', 'dLbls', this.chartNamespace);\n    if (isPieTypeSerialization) {\n      writer.writeStartElement('c', 'dLblPos', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'bestFit');\n      writer.writeEndElement(); // end of dLblPos\n    }\n    writer.writeStartElement('c', 'showLegendKey', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showLegendKey\n    writer.writeStartElement('c', 'showVal', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showVal\n    writer.writeStartElement('c', 'showCatName', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showCatName\n    writer.writeStartElement('c', 'showSerName', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showSerName\n    writer.writeStartElement('c', 'showPercent', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showPercent\n    writer.writeStartElement('c', 'showBubbleSize', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: showBubbleSize\n    writer.writeStartElement('c', 'showLeaderLines', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '1');\n    writer.writeEndElement(); // end of c: showLeaderLines\n    writer.writeEndElement(); // end of c: dLbls\n    if (isPieTypeSerialization) {\n      var series = this.chart[chartSeriesProperty[this.keywordIndex]][0];\n      var sliceAngle = 0;\n      var holeSize = 0;\n      if (series.hasOwnProperty(firstSliceAngleProperty[this.keywordIndex])) {\n        sliceAngle = series[firstSliceAngleProperty[this.keywordIndex]];\n      }\n      writer.writeStartElement('c', 'firstSliceAng', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, sliceAngle.toString());\n      writer.writeEndElement(); // end of c: firstSliceAng\n      if (chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut') {\n        holeSize = series[holeSizeProperty[this.keywordIndex]];\n        writer.writeStartElement('c', 'holeSize', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, holeSize.toString());\n        writer.writeEndElement(); // end of c: holeSize\n      }\n    }\n    if (serializationChartType !== 'lineChart' && !isScatterType) {\n      writer.writeStartElement('c', 'gapWidth', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, this.chart[gapWidthProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of gapWidth\n      writer.writeStartElement('c', 'overlap', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, this.chart[overlapProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of overlap\n    } else if (serializationChartType !== 'bubbleChart') {\n      writer.writeStartElement('c', 'smooth', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '0');\n      writer.writeEndElement(); // end of smooth\n    }\n    if (serializationChartType === 'bubbleChart') {\n      writer.writeStartElement('c', 'sizeRepresents', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'area');\n      writer.writeEndElement(); // end of smooth\n    }\n    var type = this.chart[chartTypeProperty[this.keywordIndex]];\n    if (!isPieTypeSerialization) {\n      writer.writeStartElement('c', 'axId', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '335265000');\n      writer.writeEndElement(); // end of axId\n      writer.writeStartElement('c', 'axId', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '335263360');\n      writer.writeEndElement(); // end of axId\n    }\n    writer.writeEndElement(); // end of chart type\n    var isStackedPercentage = type === 'Column_Stacked_100' || type === 'Area_Stacked_100' || type === 'Bar_Stacked_100' || type === 'Line_Stacked_100' || type === 'Line_Markers_Stacked_100';\n    var format = this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][chartTypeProperty[this.keywordIndex]];\n    if (!isPieTypeSerialization) {\n      this.serializeCategoryAxis(writer, format, isStackedPercentage);\n      this.serializeValueAxis(writer, format, isStackedPercentage);\n    }\n    if (this.chart.hasOwnProperty(chartDataTableProperty[this.keywordIndex])) {\n      var dataTable = this.chart[chartDataTableProperty[this.keywordIndex]];\n      var showHorzBorder = 0;\n      var showVertBorder = 0;\n      var showOutline = 0;\n      var showKeys = 0;\n      if (HelperMethods.parseBoolValue(dataTable[showSeriesKeysProperty[this.keywordIndex]])) {\n        showKeys = 1;\n      }\n      if (HelperMethods.parseBoolValue(dataTable[hasHorizontalBorderProperty[this.keywordIndex]])) {\n        showHorzBorder = 1;\n      }\n      if (HelperMethods.parseBoolValue(dataTable[hasVerticalBorderProperty[this.keywordIndex]])) {\n        showVertBorder = 1;\n      }\n      if (HelperMethods.parseBoolValue(dataTable[hasBordersProperty[this.keywordIndex]])) {\n        showOutline = 1;\n      }\n      writer.writeStartElement('c', 'dTable', this.chartNamespace);\n      writer.writeStartElement('c', 'showHorzBorder', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, showHorzBorder.toString());\n      writer.writeEndElement(); // end of showHorzBorder\n      writer.writeStartElement('c', 'showVertBorder', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, showVertBorder.toString());\n      writer.writeEndElement(); // end of showVertBorder\n      writer.writeStartElement('c', 'showOutline', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, showOutline.toString());\n      writer.writeEndElement(); // end of showOutline\n      writer.writeStartElement('c', 'showKeys', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, showKeys.toString());\n      writer.writeEndElement(); // end of showKeys\n      writer.writeEndElement(); // end of dTable\n    }\n    this.serializeDefaultShapeProperties(writer);\n    writer.writeEndElement(); // end of plot area\n    // legend\n    if (!isNullOrUndefined(this.chart[chartLegendProperty[this.keywordIndex]][positionProperty[this.keywordIndex]])) {\n      this.serializeChartLegend(writer);\n    }\n    writer.writeStartElement('c', 'plotVisOnly', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '1');\n    writer.writeEndElement(); // end of c: plotVisOnly\n    writer.writeStartElement('c', 'dispBlanksAs', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, 'gap');\n    writer.writeEndElement(); // end of c: dispBlanksAs\n  };\n  WordExport.prototype.serializeChartLegend = function (writer) {\n    var legendPosition = this.chartLegendPosition(this.chart[chartLegendProperty[this.keywordIndex]]);\n    var title = this.chart[chartLegendProperty[this.keywordIndex]][chartTitleAreaProperty[this.keywordIndex]];\n    var fill = title[dataFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n    writer.writeStartElement('c', 'legend', this.chartNamespace);\n    writer.writeStartElement('c', 'legendPos', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, legendPosition);\n    writer.writeEndElement();\n    writer.writeStartElement('c', 'overlay', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement();\n    this.serializeDefaultShapeProperties(writer);\n    writer.writeStartElement('c', 'txPr', this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeChartErrorBar = function (writer, series) {\n    var errorBar = series[errorBarProperty[this.keywordIndex]];\n    var errorBarValueType = this.errorBarValueType(errorBar[typeProperty[this.keywordIndex]]);\n    var endStyle = 0;\n    if (errorBar[endStyleProperty[this.keywordIndex]] !== 'Cap') {\n      endStyle = 1;\n    }\n    writer.writeStartElement('c', 'errBars', this.chartNamespace);\n    writer.writeStartElement('c', 'errBarType', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, errorBar[directionProperty[this.keywordIndex]].toLowerCase());\n    writer.writeEndElement(); // end of c: errBarType\n    writer.writeStartElement('c', 'errValType', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, errorBarValueType);\n    writer.writeEndElement(); // end of c: errValType\n    writer.writeStartElement('c', 'noEndCap', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, endStyle.toString());\n    writer.writeEndElement(); // end of c: noEndCap\n    writer.writeStartElement('c', 'val', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, errorBar[numberValueProperty[this.keywordIndex]].toString());\n    writer.writeEndElement(); // end of c: val\n    this.serializeShapeProperties(writer, '595959', true);\n    writer.writeEndElement(); // end of c: errBars\n  };\n  WordExport.prototype.errorBarValueType = function (type) {\n    var valueType = '';\n    switch (type) {\n      case 'StandardError':\n        valueType = 'stdErr';\n        break;\n      case 'StandardDeviation':\n        valueType = 'stdDev';\n        break;\n      case 'Percentage':\n        valueType = 'percentage';\n        break;\n      case 'Fixed':\n        valueType = 'fixedVal';\n        break;\n      default:\n        valueType = 'stdErr';\n        break;\n    }\n    return valueType;\n  };\n  WordExport.prototype.serializeCategoryAxis = function (writer, format, isStackedPercentage) {\n    // serialize category axis\n    var axisType = 'catAx';\n    var formatCode = this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n    var type = this.chart[chartTypeProperty[this.keywordIndex]];\n    var isScatterType = type === 'Scatter_Markers' || type === 'Bubble';\n    if (format === 'Time') {\n      axisType = 'dateAx';\n    }\n    if (isScatterType) {\n      axisType = 'valAx';\n    }\n    writer.writeStartElement('c', axisType, this.chartNamespace);\n    writer.writeStartElement('c', 'axId', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '335265000');\n    writer.writeEndElement(); // end of axId\n    this.serializeAxis(writer, '335263360', this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]], formatCode, isStackedPercentage);\n    if (!isScatterType) {\n      writer.writeStartElement('c', 'auto', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '1');\n      writer.writeEndElement(); // end of auto\n      writer.writeStartElement('c', 'lblAlgn', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'ctr');\n      writer.writeEndElement(); // end of lblAlgn\n      writer.writeStartElement('c', 'lblOffset', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '100');\n      writer.writeEndElement(); // end of lblOffset\n    }\n    if (format === 'Time') {\n      writer.writeStartElement('c', 'baseTimeUnit', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'days');\n      writer.writeEndElement(); // end of baseTimeUnit\n    } else if (this.chart[chartTypeProperty[this.keywordIndex]] !== 'Bubble') {\n      writer.writeStartElement('c', 'noMultiLvlLbl', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '0');\n      writer.writeEndElement(); // end of noMultiLvlLbl\n    }\n    writer.writeEndElement(); // end of catAx\n  };\n  WordExport.prototype.serializeValueAxis = function (writer, format, isStackedPercentage) {\n    // serialize category axis\n    var valueAxis = this.chart[chartPrimaryValueAxisProperty[this.keywordIndex]];\n    var crossBetween = 'between';\n    if (format === 'Time') {\n      crossBetween = 'midCat';\n    }\n    writer.writeStartElement('c', 'valAx', this.chartNamespace);\n    writer.writeStartElement('c', 'axId', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '335263360');\n    writer.writeEndElement(); // end of axId\n    this.serializeAxis(writer, '335265000', valueAxis, 'General', isStackedPercentage);\n    writer.writeStartElement('c', 'crossBetween', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, crossBetween);\n    writer.writeEndElement(); // end of crossBetween\n    if (valueAxis[majorUnitProperty[this.keywordIndex]] !== 0 && !isStackedPercentage) {\n      writer.writeStartElement('c', 'majorUnit', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, valueAxis[majorUnitProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of majorUnit\n    }\n    writer.writeEndElement(); // end of valAx\n  };\n  WordExport.prototype.serializeAxis = function (writer, axisID, axis, formatCode, isStackedPercentage) {\n    var majorTickMark = 'none';\n    var minorTickMark = 'none';\n    var tickLabelPosition = 'nextTo';\n    writer.writeStartElement('c', 'scaling', this.chartNamespace);\n    writer.writeStartElement('c', 'orientation', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, 'minMax');\n    writer.writeEndElement(); // end of orientation\n    if (axis[maximumValueProperty[this.keywordIndex]] !== 0 && !isStackedPercentage) {\n      writer.writeStartElement('c', 'max', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, axis[maximumValueProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of max\n      writer.writeStartElement('c', 'min', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, axis[minimumValueProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of min\n    }\n    writer.writeEndElement(); // end of scaling\n    writer.writeStartElement('c', 'delete', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of delete\n    writer.writeStartElement('c', 'axPos', this.chartNamespace);\n    if (axisID === '335265000') {\n      writer.writeAttributeString(undefined, 'val', undefined, 'l');\n    } else {\n      writer.writeAttributeString(undefined, 'val', undefined, 'b');\n    }\n    writer.writeEndElement(); // end of axPos\n    if (HelperMethods.parseBoolValue(axis[hasMajorGridLinesProperty[this.keywordIndex]])) {\n      writer.writeStartElement('c', 'majorGridlines', this.chartNamespace);\n      this.serializeShapeProperties(writer, 'D9D9D9', true);\n      writer.writeEndElement(); // end of majorGridlines\n    }\n    if (HelperMethods.parseBoolValue(axis[hasMinorGridLinesProperty[this.keywordIndex]])) {\n      writer.writeStartElement('c', 'minorGridlines', this.chartNamespace);\n      this.serializeShapeProperties(writer, 'F2F2F2', true);\n      writer.writeEndElement(); // end of minorGridlines\n    }\n    if (axis[chartTitleProperty[this.keywordIndex]]) {\n      writer.writeStartElement('c', 'title', this.chartNamespace);\n      this.serializeTextProperties(writer, axis[chartTitleAreaProperty[this.keywordIndex]], axis[chartTitleProperty[this.keywordIndex]]);\n      writer.writeEndElement(); // end tag of title\n    }\n    writer.writeStartElement('c', 'numFmt', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'formatCode', undefined, formatCode);\n    writer.writeAttributeString(undefined, 'sourceLinked', undefined, '1');\n    writer.writeEndElement(); // end of numFmt\n    writer.writeStartElement('c', 'majorTickMark', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, majorTickMark);\n    writer.writeEndElement(); // end of majorTickMark\n    writer.writeStartElement('c', 'minorTickMark', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, minorTickMark);\n    writer.writeEndElement(); // end of minorTickMark\n    writer.writeStartElement('c', 'tickLblPos', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, tickLabelPosition);\n    writer.writeEndElement(); // end of tickLblPos\n    if (this.chart[chartTypeProperty[this.keywordIndex]] === 'Bubble') {\n      this.serializeShapeProperties(writer, 'BFBFBF', true);\n    } else {\n      this.serializeDefaultShapeProperties(writer);\n    }\n    writer.writeStartElement('c', 'txPr', this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeEndElement(); // end of bodyPr\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    this.serializeChartTitleFont(writer, axis[fontSizeProperty[this.keywordIndex]], '595959', axis[fontNameProperty[this.keywordIndex]]);\n    writer.writeEndElement(); // end of a: p\n    writer.writeEndElement(); // end of c: txPr\n    writer.writeStartElement('c', 'crossAx', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, axisID);\n    writer.writeEndElement(); // end of crossAx\n    writer.writeStartElement('c', 'crosses', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, 'autoZero');\n    writer.writeEndElement(); // end of crosses\n  };\n  WordExport.prototype.parseChartTrendLines = function (writer, series) {\n    for (var i = 0; i < series[trendLinesProperty[this.keywordIndex]].length; i++) {\n      var data = series[trendLinesProperty[this.keywordIndex]][i];\n      var type = this.chartTrendLineType(data[typeProperty[this.keywordIndex]]);\n      var dispRSqr = 0;\n      var dispEq = 0;\n      if (HelperMethods.parseBoolValue(data[isDisplayEquationProperty[this.keywordIndex]])) {\n        dispEq = 1;\n      } else if (HelperMethods.parseBoolValue(data[isDisplayRSquaredProperty[this.keywordIndex]])) {\n        dispRSqr = 1;\n      }\n      var solidFill = series[dataPointsProperty[this.keywordIndex]][i];\n      writer.writeStartElement('c', 'trendline', this.chartNamespace);\n      writer.writeStartElement('c', 'spPr', this.chartNamespace);\n      writer.writeStartElement('a', 'ln', this.aNamespace);\n      writer.writeAttributeString(undefined, 'w', undefined, '19050');\n      this.serializeChartSolidFill(writer, solidFill[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]], false);\n      writer.writeStartElement('a', 'prstDash', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'sysDot');\n      writer.writeEndElement(); // end of a: prstDash\n      writer.writeStartElement('a', 'round', this.aNamespace);\n      writer.writeEndElement(); // end of a: round\n      writer.writeEndElement(); // end of a: ln\n      writer.writeEndElement(); // end of c: spPr\n      writer.writeStartElement('c', 'trendlineType', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, type);\n      writer.writeEndElement(); // end of c: trendlineType\n      writer.writeStartElement('c', 'forward', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, data[forwardProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of c: forward\n      writer.writeStartElement('c', 'backward', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, data[backwardProperty[this.keywordIndex]].toString());\n      writer.writeEndElement(); // end of c: backward\n      if (data[interceptProperty[this.keywordIndex]] !== 'NaN') {\n        writer.writeStartElement('c', 'intercept', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, data[interceptProperty[this.keywordIndex]].toString());\n        writer.writeEndElement(); // end of c: intercept\n      }\n      writer.writeStartElement('c', 'dispRSqr', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, dispRSqr.toString());\n      writer.writeEndElement(); // end of c: dispRSqr\n      writer.writeStartElement('c', 'dispEq', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, dispEq.toString());\n      writer.writeEndElement(); // end of c: dispEq\n      writer.writeEndElement(); // end of c: trendline\n    }\n  };\n  WordExport.prototype.chartTrendLineType = function (type) {\n    var trendlineType = '';\n    switch (type) {\n      case 'Linear':\n        trendlineType = 'linear';\n        break;\n      case 'Exponential':\n        trendlineType = 'exp';\n        break;\n    }\n    return trendlineType;\n  };\n  WordExport.prototype.parseChartDataLabels = function (writer, dataLabels) {\n    var position = '';\n    var dataLabelPosition = dataLabels[positionProperty[this.keywordIndex]];\n    var isLegendKey = 0;\n    var isBubbleSize = 0;\n    var isCategoryName = 0;\n    var isSeriesName = 0;\n    var isValue = 0;\n    var isPercentage = 0;\n    var isLeaderLines = 0;\n    switch (dataLabelPosition) {\n      case 'Center':\n        position = 'ctr';\n        break;\n      case 'Left':\n        position = 'l';\n        break;\n      case 'Right':\n        position = 'r';\n        break;\n      case 'Outside':\n        position = 'outEnd';\n        break;\n      case 'BestFit':\n        position = 'bestFit';\n        break;\n      case 'Bottom':\n      case 'OutsideBase':\n        position = 'inBase';\n        break;\n      case 'Inside':\n        position = 'inEnd';\n        break;\n      case 'Above':\n        position = 't';\n        break;\n      case 'Below':\n        position = 'b';\n        break;\n      default:\n        position = 'Automatic';\n        break;\n    }\n    writer.writeStartElement('c', 'dLbls', this.chartNamespace);\n    this.serializeDefaultShapeProperties(writer);\n    writer.writeStartElement('c', 'txPr', this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeEndElement(); //end of a:bodyPr.\n    writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n    writer.writeEndElement(); //end of a:lstStyle.\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    this.serializeChartTitleFont(writer, dataLabels[fontSizeProperty[this.keywordIndex]], dataLabels[fontColorProperty[this.keywordIndex]], dataLabels[fontNameProperty[this.keywordIndex]]);\n    writer.writeEndElement(); //end of a:p.\n    writer.writeEndElement(); //end of c:txPr.\n    if (HelperMethods.parseBoolValue(dataLabels[isLegendKeyProperty[this.keywordIndex]])) {\n      isLegendKey = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isBubbleSizeProperty[this.keywordIndex]])) {\n      isBubbleSize = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isCategoryNameProperty[this.keywordIndex]])) {\n      isCategoryName = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isSeriesNameProperty[this.keywordIndex]])) {\n      isSeriesName = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isValueProperty[this.keywordIndex]])) {\n      isValue = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isPercentageProperty[this.keywordIndex]])) {\n      isPercentage = 1;\n    } else if (HelperMethods.parseBoolValue(dataLabels[isLeaderLinesProperty[this.keywordIndex]])) {\n      isLeaderLines = 1;\n    }\n    if (position !== 'Automatic') {\n      writer.writeStartElement('c', 'dLblPos', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, position);\n      writer.writeEndElement(); // end of dLblPos\n    }\n    writer.writeStartElement('c', 'showLegendKey', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isLegendKey.toString());\n    writer.writeEndElement(); // end of showLegendKey\n    writer.writeStartElement('c', 'showVal', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isValue.toString());\n    writer.writeEndElement(); // end of showVal\n    writer.writeStartElement('c', 'showCatName', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isCategoryName.toString());\n    writer.writeEndElement(); // end of showCatName\n    writer.writeStartElement('c', 'showSerName', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isSeriesName.toString());\n    writer.writeEndElement(); // end of showSerName\n    writer.writeStartElement('c', 'showPercent', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isPercentage.toString());\n    writer.writeEndElement(); // end of showPercent\n    writer.writeStartElement('c', 'showBubbleSize', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isBubbleSize.toString());\n    writer.writeEndElement(); // end of showBubbleSize\n    writer.writeStartElement('c', 'showLeaderLines', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, isLeaderLines.toString());\n    writer.writeEndElement(); // end of showBubbleSize\n    writer.writeEndElement(); // end of dLbls\n  };\n  WordExport.prototype.serializeShapeProperties = function (writer, color, isLine) {\n    var chartType = this.chart[chartTypeProperty[this.keywordIndex]];\n    var isScatterType = chartType === 'Scatter_Markers' || chartType === 'Bubble';\n    // serialize shape\n    writer.writeStartElement('c', 'spPr', this.chartNamespace);\n    if (!isScatterType || isLine) {\n      writer.writeStartElement('a', 'ln', this.aNamespace);\n      writer.writeAttributeString(undefined, 'w', undefined, '9525');\n      this.serializeChartSolidFill(writer, color, false);\n      writer.writeStartElement('a', 'prstDash', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, 'solid');\n      writer.writeEndElement(); // end of prstDash\n      writer.writeStartElement('a', 'round', this.aNamespace);\n      writer.writeEndElement(); // end tag of round\n      writer.writeEndElement(); // end tag of ln\n    } else if (chartType === 'Scatter_Markers') {\n      this.serializeChartSolidFill(writer, color, false);\n      this.serializeDefaultLineProperties(writer);\n    } else if (chartType === 'Bubble') {\n      this.serializeChartSolidFill(writer, color, true);\n      this.serializeDefaultLineProperties(writer);\n    }\n    writer.writeStartElement('a', 'effectLst', this.aNamespace);\n    writer.writeEndElement(); // end of a: effectLst\n    writer.writeEndElement(); // end tag of spPr\n  };\n  WordExport.prototype.serializeDefaultShapeProperties = function (writer) {\n    writer.writeStartElement('c', 'spPr', this.chartNamespace);\n    writer.writeStartElement('a', 'noFill', this.aNamespace);\n    writer.writeEndElement(); // end of a: noFill\n    this.serializeDefaultLineProperties(writer);\n    writer.writeStartElement('a', 'effectLst', this.aNamespace);\n    writer.writeEndElement(); // end of a: effectLst\n    writer.writeEndElement(); // end of c: spPr\n  };\n  WordExport.prototype.serializeDefaultLineProperties = function (writer) {\n    writer.writeStartElement('a', 'ln', this.aNamespace);\n    writer.writeStartElement('a', 'noFill', this.aNamespace);\n    writer.writeEndElement(); // end of a: noFill\n    writer.writeStartElement('a', 'round', this.aNamespace);\n    writer.writeEndElement(); // end of a: round\n    writer.writeEndElement(); // end of a: ln\n  };\n  WordExport.prototype.serializeTextProperties = function (writer, title, chartTitleName) {\n    var fill = title[dataFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n    var fontSize = title[fontSizeProperty[this.keywordIndex]] * 100;\n    writer.writeStartElement('c', 'tx', this.chartNamespace);\n    writer.writeStartElement('c', 'rich', this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeAttributeString(undefined, 'rot', undefined, '0');\n    writer.writeAttributeString(undefined, 'vert', undefined, 'horz');\n    writer.writeEndElement(); // end of a: bodyPr\n    writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n    writer.writeEndElement(); // end of a:lstStyle\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n    writer.writeStartElement('a', 'r', this.aNamespace);\n    writer.writeStartElement('a', 'rPr', this.aNamespace);\n    writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n    writer.writeAttributeString(undefined, 'b', undefined, '0');\n    writer.writeAttributeString(undefined, 'sz', undefined, fontSize.toString());\n    writer.writeAttributeString(undefined, 'baseline', undefined, '0');\n    this.serializeChartSolidFill(writer, fill, false);\n    this.serializeFont(writer, title[fontNameProperty[this.keywordIndex]]);\n    writer.writeEndElement(); // end of a: rPr\n    writer.writeStartElement('a', 't', this.aNamespace);\n    writer.writeString(chartTitleName);\n    writer.writeEndElement(); // end of a:t\n    writer.writeEndElement(); // end of a: r\n    writer.writeEndElement(); // end of a: p\n    writer.writeEndElement(); // end of c: rich\n    writer.writeEndElement(); // end of c: tx\n    writer.writeStartElement('c', 'layout', this.chartNamespace);\n    // writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: layout\n    writer.writeStartElement('c', 'overlay', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, '0');\n    writer.writeEndElement(); // end of c: overlay\n    this.serializeDefaultShapeProperties(writer);\n    writer.writeStartElement('c', 'txPr', this.chartNamespace);\n    writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n    writer.writeEndElement(); // end of a: bodyPr\n    writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n    writer.writeEndElement(); // end of a: lstStyle\n    writer.writeStartElement('a', 'p', this.aNamespace);\n    writer.writeEndElement(); // end of a: p\n    this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n    writer.writeEndElement(); // end of c: txPr\n  };\n  WordExport.prototype.serializeChartTitleFont = function (writer, fontSize, fill, fontName) {\n    var fontSizeCalc = fontSize * 100;\n    writer.writeStartElement('a', 'pPr', this.aNamespace);\n    writer.writeStartElement('a', 'defRPr', this.aNamespace);\n    writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n    writer.writeAttributeString(undefined, 'b', undefined, '0');\n    writer.writeAttributeString(undefined, 'sz', undefined, fontSizeCalc.toString());\n    writer.writeAttributeString(undefined, 'baseline', undefined, '0');\n    this.serializeChartSolidFill(writer, fill, false);\n    this.serializeFont(writer, fontName);\n    writer.writeEndElement(); // end of defRPr\n    writer.writeEndElement(); // end of a: pPr\n  };\n  WordExport.prototype.serializeChartSolidFill = function (writer, fill, isSeriesFill) {\n    writer.writeStartElement('a', 'solidFill', this.aNamespace);\n    writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n    if (fill !== '000000') {\n      writer.writeAttributeString(undefined, 'val', undefined, fill);\n    } else {\n      writer.writeAttributeString(undefined, 'val', undefined, '595959');\n    }\n    if (this.chart[chartTypeProperty[this.keywordIndex]] === 'Bubble' && isSeriesFill) {\n      writer.writeStartElement('a', 'alpha', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '75000');\n      writer.writeEndElement(); // end of alpha\n    }\n    writer.writeEndElement(); // end of srgbClr\n    writer.writeEndElement(); // end of solidFill\n  };\n  WordExport.prototype.serializeFont = function (writer, fontName) {\n    writer.writeStartElement('a', 'latin', this.aNamespace);\n    writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n    writer.writeEndElement(); // end of a:latin\n    writer.writeStartElement('a', 'ea', this.aNamespace);\n    writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n    writer.writeEndElement(); // end of a:ea\n    writer.writeStartElement('a', 'cs', this.aNamespace);\n    writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n    writer.writeEndElement(); // end of a:cs\n  };\n  WordExport.prototype.parseChartSeriesColor = function (writer, dataPoints, chartType) {\n    for (var i = 0; i < dataPoints.length; i++) {\n      var data = dataPoints[i];\n      writer.writeStartElement('c', 'spPr', this.chartNamespace);\n      if (chartType === 'lineChart') {\n        writer.writeStartElement('a', 'ln', this.aNamespace);\n        writer.writeAttributeString(undefined, 'w', undefined, '28575');\n        writer.writeAttributeString(undefined, 'cap', undefined, 'rnd');\n      }\n      if (chartType !== 'lineChart') {\n        this.serializeChartSolidFill(writer, this.getColor(data[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]]), true);\n      } else {\n        this.serializeChartSolidFill(writer, data[lineProperty[this.keywordIndex]][colorProperty[this.keywordIndex]], true);\n      }\n      if (chartType !== 'lineChart') {\n        writer.writeStartElement('a', 'ln', this.aNamespace);\n        writer.writeStartElement('a', 'noFill', this.aNamespace);\n        writer.writeEndElement(); // end of a: noFill\n      }\n      writer.writeStartElement('a', 'round', this.aNamespace);\n      writer.writeEndElement(); // end of a: round\n      writer.writeEndElement(); // end of a: ln\n      writer.writeStartElement('a', 'effectLst', this.aNamespace);\n      writer.writeEndElement(); // end of a: effectLst\n      writer.writeEndElement(); // end of c: spPr\n      if (chartType === 'lineChart') {\n        var symbolType = 'none';\n        var size = 0;\n        if (this.chart[chartSeriesProperty[this.keywordIndex]][i].hasOwnProperty(seriesFormatProperty[this.keywordIndex])) {\n          symbolType = this.chart[chartSeriesProperty[this.keywordIndex]][i][seriesFormatProperty[this.keywordIndex]][markerStyleProperty[this.keywordIndex]];\n          size = this.chart[chartSeriesProperty[this.keywordIndex]][i][seriesFormatProperty[this.keywordIndex]][markerSizeProperty[this.keywordIndex]];\n        }\n        writer.writeStartElement('c', 'marker', this.chartNamespace);\n        writer.writeStartElement('c', 'symbol', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, symbolType.toLowerCase());\n        writer.writeEndElement(); // end of a: symbol\n        if (this.chart[chartSeriesProperty[this.keywordIndex]][i].hasOwnProperty(seriesFormatProperty[this.keywordIndex])) {\n          writer.writeStartElement('c', 'size', this.chartNamespace);\n          writer.writeAttributeString(undefined, 'val', undefined, size.toString());\n          writer.writeEndElement(); // end of a: size\n        }\n        writer.writeEndElement(); // end of a: marker\n      }\n    }\n  };\n  WordExport.prototype.parseChartDataPoint = function (writer, series) {\n    // data point\n    var dataPoints = series[dataPointsProperty[this.keywordIndex]];\n    var points = [];\n    for (var j = 0; j < dataPoints.length; j++) {\n      points.push(dataPoints[j]);\n      writer.writeStartElement('c', 'dPt', this.chartNamespace);\n      writer.writeStartElement('c', 'idx', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, j.toString());\n      writer.writeEndElement(); // end of c:idx\n      writer.writeStartElement('c', 'bubble3D', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '0');\n      writer.writeEndElement(); // end of c:bubble3D\n      this.parseChartSeriesColor(writer, points, this.chart[chartTypeProperty[this.keywordIndex]]);\n      writer.writeEndElement(); // end of c:dPt\n      points = [];\n    }\n  };\n  // chart data value\n  WordExport.prototype.serializeChartCategory = function (writer, chart, cacheType) {\n    var chartCategory = chart[chartCategoryProperty[this.keywordIndex]];\n    var chartCategoryCount = chartCategory.length;\n    writer.writeStartElement('c', 'f', this.chartNamespace);\n    writer.writeString('Sheet1!$A$2:$A$' + (chartCategoryCount + 1).toString());\n    writer.writeEndElement(); // end of f\n    writer.writeStartElement('c', cacheType, this.chartNamespace);\n    if (cacheType === 'numCache') {\n      writer.writeStartElement('c', 'formatCode', this.chartNamespace);\n      writer.writeString('General');\n      writer.writeEndElement(); // end of formatCode\n    }\n    writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, chartCategoryCount.toString());\n    writer.writeEndElement(); // end of ptCount\n    for (var i = 0; i < chartCategory.length; i++) {\n      var category = chartCategory[i];\n      writer.writeStartElement('c', 'pt', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'idx', undefined, i.toString());\n      writer.writeStartElement('c', 'v', this.chartNamespace);\n      if (category[categoryXNameProperty[this.keywordIndex]] !== '') {\n        writer.writeString(category[categoryXNameProperty[this.keywordIndex]]);\n      }\n      writer.writeEndElement(); // end of v\n      writer.writeEndElement(); // end of pt\n    }\n    writer.writeEndElement(); // end of cacheType\n  };\n  // chart value\n  WordExport.prototype.serializeChartValue = function (writer, valueSheet, chartType) {\n    var isScatterType = chartType === 'scatterChart' || chartType === 'bubbleChart';\n    var valueType = 'val';\n    if (isScatterType) {\n      valueType = 'yVal';\n    }\n    this.serializeChartYValue(writer, valueType, valueSheet);\n    if (chartType === 'bubbleChart') {\n      valueType = 'bubbleSize';\n      valueSheet = 'Sheet1!$C$2:$C$';\n      this.serializeChartYValue(writer, valueType, valueSheet);\n    }\n    if (chartType === 'lineChart' || chartType === 'scatterChart') {\n      writer.writeStartElement('c', 'smooth', this.chartNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, '0');\n      writer.writeEndElement(); // end of smooth\n    }\n  };\n  WordExport.prototype.serializeChartYValue = function (writer, valueType, valueSheet) {\n    var chart = this.chart;\n    var chartCategory = chart[chartCategoryProperty[this.keywordIndex]];\n    var chartCategoryCount = chartCategory.length;\n    writer.writeStartElement('c', valueType, this.chartNamespace);\n    writer.writeStartElement('c', 'numRef', this.chartNamespace);\n    writer.writeStartElement('c', 'f', this.chartNamespace);\n    writer.writeString(valueSheet + (chartCategoryCount + 1).toString());\n    writer.writeEndElement(); // end of f\n    writer.writeStartElement('c', 'numCache', this.chartNamespace);\n    writer.writeStartElement('c', 'formatCode', this.chartNamespace);\n    writer.writeString('General');\n    writer.writeEndElement(); // end of formatCode\n    writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n    writer.writeAttributeString(undefined, 'val', undefined, chartCategoryCount.toString());\n    writer.writeEndElement(); // end of ptCount\n    for (var j = 0; j < chartCategoryCount; j++) {\n      var category = chartCategory[j];\n      for (var k = 0; k < category[chartDataProperty[this.keywordIndex]].length; k++) {\n        if (k === this.seriesCount) {\n          var chartData = category[chartDataProperty[this.keywordIndex]][this.seriesCount];\n          writer.writeStartElement('c', 'pt', this.chartNamespace);\n          writer.writeAttributeString(undefined, 'idx', undefined, j.toString());\n          writer.writeStartElement('c', 'v', this.chartNamespace);\n          if (valueType !== 'bubbleSize') {\n            writer.writeString(chartData[yValueProperty[this.keywordIndex]].toString());\n          } else {\n            writer.writeString(chartData[sizeProperty[this.keywordIndex]].toString());\n          }\n          writer.writeEndElement(); // end of v\n          writer.writeEndElement(); // end of pt\n        }\n      }\n    }\n    writer.writeEndElement(); // end of numCache\n    writer.writeEndElement(); // end of numRef\n    writer.writeEndElement(); // end of val\n  };\n  // chart type\n  WordExport.prototype.chartType = function (chart) {\n    var chartType = chart[chartTypeProperty[this.keywordIndex]];\n    switch (chartType) {\n      case 'Pie':\n        chartType = 'pieChart';\n        break;\n      case 'Doughnut':\n        chartType = 'doughnutChart';\n        break;\n      case 'Scatter_Markers':\n        chartType = 'scatterChart';\n        break;\n      case 'Bubble':\n        chartType = 'bubbleChart';\n        break;\n    }\n    if (chartType === 'Area' || chartType === 'Area_Stacked' || chartType === 'Area_Stacked_100') {\n      chartType = 'areaChart';\n    }\n    if (chartType === 'Bar_Stacked_100' || chartType === 'Bar_Stacked' || chartType === 'Bar_Clustered' || chartType === 'Column_Clustered' || chartType === 'Column_Stacked' || chartType === 'Column_Stacked_100') {\n      chartType = 'barChart';\n    }\n    if (chartType === 'Line' || chartType === 'Line_Markers' || chartType === 'Line_Markers_Stacked' || chartType === 'Line_Stacked' || chartType === 'Line_Markers_Stacked_100' || chartType === 'Line_Stacked_100') {\n      chartType = 'lineChart';\n    }\n    return chartType;\n  };\n  // chart group\n  WordExport.prototype.chartGrouping = function (type) {\n    var grouping = 'standard';\n    if (type === 'Bar_Stacked' || type === 'Column_Stacked' || type === 'Area_Stacked' || type === 'Line_Stacked' || type === 'Line_Markers_Stacked') {\n      grouping = 'stacked';\n    } else if (type === 'Bar_Stacked_100' || type === 'Column_Stacked_100' || type === 'Area_Stacked_100' || type === 'Line_Stacked_100' || type === 'Line_Markers_Stacked_100') {\n      grouping = 'percentStacked';\n    } else if (type === 'Bar_Clustered' || type === 'Column_Clustered') {\n      grouping = 'clustered';\n    }\n    return grouping;\n  };\n  // chart legend position\n  WordExport.prototype.chartLegendPosition = function (chart) {\n    var legendPosition = chart[positionProperty[this.keywordIndex]];\n    switch (legendPosition) {\n      case 'Top':\n        legendPosition = 't';\n        break;\n      case 'Bottom':\n        legendPosition = 'b';\n        break;\n      case 'Left':\n        legendPosition = 'l';\n        break;\n      case 'Right':\n        legendPosition = 'r';\n        break;\n      case 'Corner':\n        legendPosition = 'tr';\n        break;\n      default:\n        legendPosition = 'b';\n        break;\n    }\n    return legendPosition;\n  };\n  // update the chard id\n  WordExport.prototype.updatechartId = function (chart) {\n    var id = '';\n    if (id === '') {\n      id = this.addChartRelation(this.documentCharts, chart);\n    }\n    return id;\n  };\n  // adds the chart relation.\n  WordExport.prototype.addChartRelation = function (chartCollection, chart) {\n    var relationId = '';\n    relationId = this.getNextRelationShipID();\n    chartCollection.add(relationId, chart);\n    return relationId;\n  };\n  /**\n   * @private\n   */\n  WordExport.prototype.startsWith = function (sourceString, startString) {\n    return startString.length > 0 && sourceString.substring(0, startString.length) === startString;\n  };\n  WordExport.prototype.serializeShapeDrawingGraphics = function (writer, shape) {\n    var val = shape[autoShapeTypeProperty[this.keywordIndex]];\n    var id = shape[shapeIdProperty[this.keywordIndex]];\n    this.serializeShapeWrapStyle(writer, shape);\n    writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n    writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n    writer.writeAttributeString(undefined, 'name', undefined, shape[nameProperty[this.keywordIndex]]);\n    writer.writeAttributeString(undefined, 'title', undefined, shape[titleProperty[this.keywordIndex]]);\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'graphic', this.aNamespace);\n    writer.writeStartElement('a', 'graphicData', this.aNamespace);\n    writer.writeAttributeString(undefined, 'uri', undefined, this.wpShapeNamespace);\n    writer.writeStartElement('wps', 'wsp', this.wpShapeNamespace);\n    writer.writeStartElement('wps', 'cNvCnPr', this.wpShapeNamespace);\n    writer.writeStartElement('a', 'cxnSpLocks', this.aNamespace);\n    writer.writeAttributeString(undefined, 'noChangeShapeType', undefined, '1');\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeStartElement('wps', 'spPr', this.wpShapeNamespace);\n    writer.writeAttributeString(undefined, 'bwMode', undefined, 'auto');\n    writer.writeStartElement('a', 'xfrm', this.aNamespace);\n    writer.writeStartElement('a', 'off', this.aNamespace);\n    writer.writeAttributeString(undefined, 'x', undefined, '0');\n    writer.writeAttributeString(undefined, 'y', undefined, '0');\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'ext', this.aNamespace);\n    var cx = Math.round(shape[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n    var cy = Math.round(shape[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'prstGeom', this.aNamespace);\n    if (val === (this.keywordIndex == 1 ? 3 : 'StraightConnector')) {\n      writer.writeAttributeString(undefined, 'prst', undefined, 'straightConnector1');\n    } else if (val === (this.keywordIndex == 1 ? 2 : 'RoundedRectangle')) {\n      writer.writeAttributeString(undefined, 'prst', undefined, 'roundRect');\n    } else {\n      writer.writeAttributeString(undefined, 'prst', undefined, 'rect');\n    }\n    writer.writeStartElement('a', 'avLst', this.aNamespace);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    if (shape[fillFormatProperty[this.keywordIndex]] && shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] && HelperMethods.parseBoolValue(shape[fillFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]])) {\n      writer.writeStartElement('a', 'solidFill', this.aNamespace);\n      writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, this.getColor(shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n      writer.writeEndElement();\n    } else {\n      writer.writeStartElement('a', 'noFill', this.aNamespace);\n      writer.writeEndElement();\n    }\n    var lineWeight = shape[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] ? shape[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] * this.emusPerPoint : this.emusPerPoint;\n    writer.writeStartElement('a', 'ln', this.aNamespace);\n    writer.writeAttributeString(undefined, 'w', undefined, Math.round(lineWeight).toString());\n    if (!isNullOrUndefined(shape[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]]) && shape[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 3 : 'None') && HelperMethods.parseBoolValue(shape[lineFormatProperty[this.keywordIndex]][lineProperty[this.keywordIndex]])) {\n      writer.writeStartElement('a', 'solidFill', this.aNamespace);\n      writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n      writer.writeAttributeString(undefined, 'val', undefined, this.getColor(shape[lineFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n      writer.writeEndElement();\n      writer.writeStartElement('a', 'round', this.aNamespace);\n      writer.writeEndElement();\n      writer.writeStartElement('a', 'headEnd', this.aNamespace);\n      writer.writeEndElement();\n      writer.writeStartElement('a', 'tailEnd', this.aNamespace);\n      writer.writeEndElement();\n    } else {\n      writer.writeStartElement('a', 'noFill', this.aNamespace);\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n    writer.writeEndElement();\n    if (val === (this.keywordIndex == 1 ? 1 : 'Rectangle') || val === (this.keywordIndex == 1 ? 2 : 'RoundedRectangle')) {\n      writer.writeStartElement('wps', 'txbx', this.wpShapeNamespace);\n      writer.writeStartElement(undefined, 'txbxContent', this.wNamespace);\n      this.serializeBodyItems(writer, shape[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]], true);\n      writer.writeEndElement();\n      writer.writeEndElement();\n    }\n    writer.writeStartElement('wps', 'bodyPr', this.wpShapeNamespace);\n    if (!isNullOrUndefined(shape[textFrameProperty[this.keywordIndex]])) {\n      var margin = void 0;\n      if (shape[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] >= 0) {\n        margin = Math.round(shape[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n        writer.writeAttributeString(undefined, 'lIns', undefined, margin);\n      }\n      if (shape[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] >= 0) {\n        margin = Math.round(shape[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n        writer.writeAttributeString(undefined, 'tIns', undefined, margin);\n      }\n      if (shape[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] >= 0) {\n        margin = Math.round(shape[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n        writer.writeAttributeString(undefined, 'rIns', undefined, margin);\n      }\n      if (shape[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] >= 0) {\n        margin = Math.round(shape[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n        writer.writeAttributeString(undefined, 'bIns', undefined, margin);\n      }\n      if (shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]]) {\n        var vert = void 0;\n        if (this.keywordIndex == 1) {\n          vert = HelperMethods.getTextVerticalAlignment(shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]]).toString().toLowerCase();\n        } else {\n          vert = shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]].toString().toLowerCase();\n        }\n        writer.writeAttributeString(undefined, 'anchor', undefined, this.getTextVerticalAlignmentProperty(vert));\n      }\n      writer.writeAttributeString(undefined, 'anchorCtr', undefined, '0');\n    }\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  WordExport.prototype.getTextVerticalAlignmentProperty = function (vert) {\n    switch (vert) {\n      case 'top':\n        return 't';\n      case 'middle':\n      case 'center':\n        return 'ctr';\n      case 'bottom':\n        return 'b';\n      default:\n        return vert;\n    }\n  };\n  WordExport.prototype.serializeShapeWrapStyle = function (writer, shape) {\n    var wrappingStyle = this.keywordIndex == 1 ? this.getTextWrappingStyle(shape[textWrappingStyleProperty[this.keywordIndex]]) : shape[textWrappingStyleProperty[this.keywordIndex]];\n    if (wrappingStyle !== 'Inline') {\n      var textWrappingStyle = 'wrapNone';\n      if (wrappingStyle && wrappingStyle !== 'InFrontOfText' && wrappingStyle !== 'Behind') {\n        textWrappingStyle = 'wrap' + wrappingStyle;\n        if (wrappingStyle === 'Tight') {\n          textWrappingStyle = 'wrap' + 'Square';\n        }\n      }\n      writer.writeStartElement('wp', textWrappingStyle, this.wpNamespace);\n      if (wrappingStyle && wrappingStyle !== 'InFrontOfText' && wrappingStyle !== 'Behind' && !isNullOrUndefined(shape[textWrappingTypeProperty[this.keywordIndex]])) {\n        var wrapType = this.keywordIndex == 1 ? this.getTextWrappingType(shape[textWrappingTypeProperty[this.keywordIndex]]) : shape[textWrappingTypeProperty[this.keywordIndex]] === 'Both' ? 'bothSides' : shape[textWrappingTypeProperty[this.keywordIndex]].toLowerCase();\n        writer.writeAttributeString(undefined, 'wrapText', undefined, wrapType);\n      }\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the graphics element for pictures.\n  WordExport.prototype.serializeDrawingGraphics = function (writer, picture) {\n    var id = '';\n    var format;\n    var imageStringInfo = this.getBase64ImageString(picture);\n    var imageString = imageStringInfo.imageString;\n    if (HelperMethods.parseBoolValue(picture[isMetaFileProperty[this.keywordIndex]])) {\n      format = HelperMethods.formatClippedString(imageStringInfo.metaFileImageString).extension;\n      if (format !== '.svg') {\n        imageString = imageStringInfo.metaFileImageString;\n      }\n    }\n    id = this.updateShapeId(picture, false);\n    // picture.ShapeId = this.getNextDocPrID();\n    // Processing picture\n    writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n    writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n    if (!isNullOrUndefined(picture[alternativeTextProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'descr', undefined, picture[alternativeTextProperty[this.keywordIndex]]);\n    }\n    writer.writeAttributeString(undefined, 'name', undefined, !isNullOrUndefined(picture[nameProperty[this.keywordIndex]]) ? picture[nameProperty[this.keywordIndex]] : '');\n    if (!isNullOrUndefined(picture[titleProperty[this.keywordIndex]])) writer.writeAttributeString(undefined, 'title', undefined, picture[titleProperty[this.keywordIndex]]);\n    // else\n    // writer.writeAttributeString(undefined, 'title', undefined, '');\n    // if (!picture.Visible)\n    //     m_writer.WriteAttributeString('hidden', '1');\n    // SerializePictureHyperlink(picture);\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'graphic', this.aNamespace);\n    writer.writeStartElement('a', 'graphicData', this.aNamespace);\n    writer.writeAttributeString(undefined, 'uri', undefined, this.pictureNamespace);\n    writer.writeStartElement('pic', 'pic', this.pictureNamespace);\n    writer.writeStartElement('pic', 'nvPicPr', this.pictureNamespace);\n    writer.writeStartElement('pic', 'cNvPr', this.pictureNamespace);\n    writer.writeAttributeString(undefined, 'id', undefined, '0');\n    writer.writeAttributeString(undefined, 'name', undefined, '');\n    writer.writeAttributeString(undefined, 'descr', undefined, '');\n    writer.writeEndElement();\n    writer.writeStartElement('pic', 'cNvPicPr', this.pictureNamespace);\n    writer.writeStartElement('a', 'picLocks', this.aNamespace);\n    writer.writeAttributeString(undefined, 'noChangeAspect', undefined, '1');\n    writer.writeAttributeString(undefined, 'noChangeArrowheads', undefined, '1');\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeStartElement('pic', 'blipFill', this.pictureNamespace);\n    writer.writeStartElement('a', 'blip', this.aNamespace);\n    if (this.startsWith(imageString, 'data:image')) {\n      writer.writeAttributeString('r', 'embed', this.rNamespace, id);\n    } else {\n      if (this.documentImages.containsKey(id)) {\n        //Remove the image document images collection for this particular key\n        //If the picture image data has href means MS Word contains the image in media folder as well as \n        //it is having external relationship id\n        // if (!this.startsWith(picture.imageString, 'data:image')) {\n        this.documentImages.remove(id);\n        this.externalImages.add(id, imageString);\n        writer.writeAttributeString(undefined, 'link', this.rNamespace, id);\n        if (!isNullOrUndefined(imageStringInfo.metaFileImageString) && (this.startsWith(imageString, \"https://\") || this.startsWith(imageString, \"http://\") || this.startsWith(imageString, \"file://\"))) {\n          var newRId = this.getNextRelationShipID();\n          this.documentImages.add(newRId, imageStringInfo.metaFileImageString);\n          writer.writeAttributeString('r', 'embed', this.rNamespace, newRId);\n        }\n      }\n    }\n    if (format === '.svg') {\n      this.serializeBlipExtensions(writer, picture);\n    }\n    //End Element Blip\n    writer.writeEndElement();\n    if (!isNullOrUndefined(picture[topProperty[this.keywordIndex]]) && picture[topProperty[this.keywordIndex]] !== 0 || !isNullOrUndefined(picture[bottomProperty[this.keywordIndex]]) && picture[bottomProperty[this.keywordIndex]] !== 0 || !isNullOrUndefined(picture[leftProperty[this.keywordIndex]]) && picture[leftProperty[this.keywordIndex]] !== 0 || !isNullOrUndefined(picture[rightProperty[this.keywordIndex]]) && picture[rightProperty[this.keywordIndex]] !== 0) {\n      writer.writeStartElement('a', 'srcRect', this.aNamespace);\n      var l = Math.round(picture[leftProperty[this.keywordIndex]] * 1000);\n      writer.writeAttributeString(undefined, 'l', undefined, l.toString());\n      var t = Math.round(picture[topProperty[this.keywordIndex]] * 1000);\n      writer.writeAttributeString(undefined, 't', undefined, t.toString());\n      var r = Math.round(picture[rightProperty[this.keywordIndex]] * 1000);\n      writer.writeAttributeString(undefined, 'r', undefined, r.toString());\n      var b = Math.round(picture[bottomProperty[this.keywordIndex]] * 1000);\n      writer.writeAttributeString(undefined, 'b', undefined, b.toString());\n      writer.writeEndElement();\n    }\n    writer.writeStartElement('a', 'stretch', this.aNamespace);\n    writer.writeStartElement('a', 'fillRect', this.aNamespace);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeStartElement('pic', 'spPr', this.pictureNamespace);\n    writer.writeAttributeString(undefined, 'bwMode', undefined, 'auto');\n    writer.writeStartElement('a', 'xfrm', this.aNamespace);\n    // if (picture.Rotation !== 0)\n    //     m_writer.WriteAttributeString('rot', picture.Rotation.ToString());\n    writer.writeStartElement('a', 'off', this.aNamespace);\n    writer.writeAttributeString(undefined, 'x', undefined, '0');\n    writer.writeAttributeString(undefined, 'y', undefined, '0');\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'ext', this.aNamespace);\n    var cx = Math.round(picture[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n    var cy = Math.round(picture[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n    writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeStartElement('a', 'prstGeom', this.aNamespace);\n    writer.writeAttributeString(undefined, 'prst', undefined, 'rect');\n    writer.writeStartElement('a', 'avLst', this.aNamespace);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    //When the picture border has been added next to effect list\n    //if not, Picture border has not been preserved\n    // if (picture.HasBorder)\n    // {\n    //     if (picture.TextWrappingStyle === TextWrappingStyle.Inline && picture.IsShape)\n    //         SerializeInlineShapeLine(picture.PictureShape);\n    //     else\n    //         SerializeShapeLine(picture.PictureShape);\n    // }\n    // if (picture.DocxProps.length > 0)\n    //     SerializeDocxProps(picture.DocxProps, 'effectLst');\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeBlipExtensions = function (writer, picture) {\n    writer.writeStartElement('a', 'extLst', this.aNamespace);\n    writer.writeStartElement('a', \"ext\", this.aNamespace);\n    writer.writeAttributeString(undefined, 'uri', undefined, '{96DAC541-7B7A-43D3-8B79-37D633B846F1}');\n    writer.writeStartElement(\"asvg\", \"svgBlip\", this.svgNamespace);\n    var id = this.updateShapeId(picture, true);\n    writer.writeAttributeString(\"r\", \"embed\", undefined, id);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    writer.writeEndElement();\n  };\n  /// Update the shape id.\n  WordExport.prototype.updateShapeId = function (picture, isSvgData) {\n    var id = '';\n    var tOwner = this.paragraph;\n    // Adding picture byte data to the corresponding picture collection \n    // depending on its owner subdocument\n    if (this.headerFooter) {\n      id = this.updateHFImageRels(this.headerFooter, picture, isSvgData);\n    } else {\n      if (id === '') {\n        if (tOwner.hasOwnProperty(sectionFormatProperty[this.keywordIndex]) || tOwner.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n          id = this.addImageRelation(!isSvgData ? this.documentImages : this.svgImages, picture, isSvgData);\n          // if (owner is WFootnote)\n          // {\n          //     if ((owner as WFootnote).FootnoteType === FootnoteType.Footnote)\n          //         id = AddImageRelation(FootnoteImages, picture.ImageRecord);\n          //     else\n          //         id = AddImageRelation(EndnoteImages, picture.ImageRecord);\n          // }\n          // if (owner is WComment)\n          //     id = AddImageRelation(CommentImages, picture.ImageRecord);\n        }\n      }\n    }\n    return id;\n  };\n  // Adds the image relation.\n  WordExport.prototype.addImageRelation = function (imageCollection, image, isSvgData) {\n    var relationId = '';\n    var index = isSvgData ? this.svgImageRelationIds.keys.indexOf(parseInt(image[imageStringProperty[this.keywordIndex]])) : this.imageRelationIds.keys.indexOf(parseInt(image[imageStringProperty[this.keywordIndex]]));\n    if (index < 0 || this.isHeaderFooter) {\n      relationId = this.getNextRelationShipID();\n      isSvgData ? this.svgImageRelationIds.add(parseInt(image[imageStringProperty[this.keywordIndex]]), relationId) : this.imageRelationIds.add(parseInt(image[imageStringProperty[this.keywordIndex]]), relationId);\n    } else {\n      relationId = isSvgData ? this.svgImageRelationIds.get(parseInt(image[imageStringProperty[this.keywordIndex]])) : this.imageRelationIds.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n    }\n    imageCollection.add(relationId, image);\n    return relationId;\n  };\n  // Update the HeaderFooter image relations.\n  WordExport.prototype.updateHFImageRels = function (hf, image, isSvgImage) {\n    var id = '';\n    // UpdateImages(image);\n    var headerId = '';\n    var types = this.headersFooters.keys;\n    for (var i = 0; i < types.length; i++) {\n      var hfColl = this.headersFooters.get(types[i]);\n      var hfKeys = hfColl.keys;\n      for (var j = 0; j < hfKeys.length; j++) {\n        if (hfColl.get(hfKeys[j]) === hf) {\n          headerId = hfKeys[j];\n          var headerImages = void 0;\n          if (isSvgImage) {\n            if (this.headerFooterSvgImages.containsKey(headerId)) {\n              headerImages = this.headerFooterSvgImages.get(headerId);\n              id = this.addImageRelation(headerImages, image, true);\n            } else {\n              headerImages = new Dictionary();\n              id = this.addImageRelation(headerImages, image, true);\n              this.headerFooterSvgImages.add(headerId, headerImages);\n            }\n          } else {\n            if (this.headerFooterImages.containsKey(headerId)) {\n              headerImages = this.headerFooterImages.get(headerId);\n              id = this.addImageRelation(headerImages, image, false);\n            } else {\n              headerImages = new Dictionary();\n              id = this.addImageRelation(headerImages, image, false);\n              this.headerFooterImages.add(headerId, headerImages);\n            }\n          }\n        }\n      }\n    }\n    return id;\n  };\n  // Serialize the table\n  WordExport.prototype.serializeTable = function (writer, table) {\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = 0;\n    }\n    if (table[rowsProperty[this.keywordIndex]].length <= 0) {\n      return;\n    }\n    var owner = this.table;\n    this.table = table;\n    writer.writeStartElement(undefined, 'tbl', this.wNamespace);\n    var tableFormat = table[rowsProperty[this.keywordIndex]][0][rowFormatProperty[this.keywordIndex]];\n    this.serializeTableFormat(writer, tableFormat, table);\n    this.serializeTableGrid(writer, table);\n    var mVerticalMerge = new Dictionary();\n    var mHorizontalMerge = new Dictionary();\n    var cellFormats = new Dictionary();\n    var rows = table[rowsProperty[this.keywordIndex]];\n    if (rows.length > 0) {\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        var row = rows[rowIndex];\n        if (row[cellsProperty[this.keywordIndex]].length > 0) {\n          if (row.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n            this.serializeContentControl(writer, row[contentControlPropertiesProperty[this.keywordIndex]], row);\n            continue;\n          }\n          var owner_1 = this.row;\n          this.row = row;\n          writer.writeStartElement(undefined, 'tr', this.wNamespace);\n          this.serializeRowFormat(writer, row);\n          var cells = row[cellsProperty[this.keywordIndex]];\n          var cellLength = cells.length;\n          var prevColIndex = 0;\n          for (var i = 0; i < cellLength; i++) {\n            var cell = cells[i];\n            var columnIndex = cell[columnIndexProperty[this.keywordIndex]];\n            if (cell.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n              this.serializeContentControl(writer, cell[contentControlPropertiesProperty[this.keywordIndex]], cell);\n              continue;\n            }\n            var cellFormat = cell[cellFormatProperty[this.keywordIndex]];\n            if (columnIndex - prevColIndex > 0) {\n              var checkIndex = i === 0 ? 0 : prevColIndex + 1;\n              for (var k = checkIndex; k < columnIndex; k++) {\n                if (mVerticalMerge.containsKey(k)) {\n                  var format = this.getMergeCellFormat(cellFormat, cellFormats.get(k), k < cell[columnIndexProperty[this.keywordIndex]]);\n                  this.serializeTableCell(writer, cell, format, false);\n                  mVerticalMerge.set(k, mVerticalMerge.get(k) - 1);\n                  if (mVerticalMerge.get(k) === 1) {\n                    mVerticalMerge.remove(k);\n                    cellFormats.remove(k);\n                    if (mHorizontalMerge.containsKey(k)) {\n                      mHorizontalMerge.remove(k);\n                    }\n                  }\n                  if (mHorizontalMerge.containsKey(k)) {\n                    prevColIndex += mHorizontalMerge.get(k) - 1;\n                    k += mHorizontalMerge.get(k);\n                    if (k > 0) {\n                      k--;\n                    }\n                  }\n                }\n              }\n            }\n            prevColIndex = columnIndex;\n            if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n              mVerticalMerge.add(columnIndex, cellFormat[rowSpanProperty[this.keywordIndex]]);\n              cellFormats.add(columnIndex, cellFormat);\n            }\n            this.serializeTableCell(writer, cell, cellFormat, true);\n            if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1 && cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n              mHorizontalMerge.add(columnIndex, cellFormat[columnSpanProperty[this.keywordIndex]]);\n            }\n            for (var j = columnIndex + 1;; j++) {\n              if (mVerticalMerge.containsKey(j)) {\n                var mergeFormat = this.getMergeCellFormat(cellFormat, cellFormats.get(j), j < cell[columnIndexProperty[this.keywordIndex]]);\n                this.serializeTableCell(writer, cell, mergeFormat, false);\n                mVerticalMerge.set(j, mVerticalMerge.get(j) - 1);\n                prevColIndex++;\n                if (mVerticalMerge.get(j) === 1) {\n                  mVerticalMerge.remove(j);\n                  cellFormats.remove(j);\n                  if (mHorizontalMerge.containsKey(j)) {\n                    mHorizontalMerge.remove(j);\n                  }\n                }\n                if (mHorizontalMerge.containsKey(j)) {\n                  prevColIndex += mHorizontalMerge.get(j) - 1;\n                  j += mHorizontalMerge.get(j);\n                }\n              } else if (!(i === cellLength - 1 && j < table[columnCountProperty[this.keywordIndex]])) {\n                break;\n              }\n            }\n          }\n          if (!this.isBookmarkAtRowEnd) {\n            writer.writeEndElement(); //end od table row 'tr'\n          }\n          this.isBookmarkAtRowEnd = false;\n          this.row = owner_1;\n        }\n      }\n    }\n    writer.writeEndElement();\n    this.table = owner;\n  };\n  WordExport.prototype.getMergeCellFormat = function (cellFormat, mergedCellFormat, before) {\n    var format = mergedCellFormat;\n    if (before) {\n      format[bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]] = cellFormat[bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]];\n    } else {\n      format[bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]] = cellFormat[bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]];\n    }\n    return format;\n  };\n  WordExport.prototype.serializeTableCell = function (xmlWriter, cell, cellFormat, mergeStart) {\n    var owner = this.blockOwner;\n    this.blockOwner = cell;\n    xmlWriter.writeStartElement(undefined, 'tc', this.wNamespace);\n    xmlWriter.writeStartElement(undefined, 'tcPr', this.wNamespace);\n    this.serializeCellWidth(xmlWriter, cellFormat);\n    this.serializeCellMargins(xmlWriter, cellFormat);\n    xmlWriter.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n    this.serializeBorders(xmlWriter, cellFormat[bordersProperty[this.keywordIndex]], 8, false);\n    xmlWriter.writeEndElement(); // end of tcBorders\n    this.serializeShading(xmlWriter, cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n    this.serializeTableCellDirection(xmlWriter, cellFormat);\n    this.serializeCellVerticalAlign(xmlWriter, cellFormat[verticalAlignmentProperty[this.keywordIndex]]);\n    if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1) {\n      var num = cellFormat[columnSpanProperty[this.keywordIndex]];\n      xmlWriter.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n      xmlWriter.writeAttributeString('w', 'val', this.wNamespace, num.toString());\n      xmlWriter.writeEndElement();\n    }\n    if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n      xmlWriter.writeStartElement(undefined, 'vMerge', this.wNamespace);\n      xmlWriter.writeAttributeString('w', 'val', this.wNamespace, mergeStart ? 'restart' : 'continue');\n      xmlWriter.writeEndElement(); // end of vMerge\n    }\n    xmlWriter.writeEndElement(); // end of tcPr\n    if (cell && cell[blocksProperty[this.keywordIndex]].length > 0) {\n      var itemIndex = 0;\n      var item = undefined;\n      while (itemIndex < cell[blocksProperty[this.keywordIndex]].length) {\n        item = cell[blocksProperty[this.keywordIndex]][itemIndex];\n        this.serializeBodyItem(xmlWriter, item, false);\n        itemIndex += 1;\n      }\n    } else {\n      xmlWriter.writeStartElement(undefined, 'p', this.wNamespace);\n      xmlWriter.writeStartElement(undefined, 'pPr', this.wNamespace);\n      xmlWriter.writeStartElement(undefined, 'pStyle', this.wNamespace);\n      xmlWriter.writeAttributeString('w', 'val', this.wNamespace, 'Normal');\n      xmlWriter.writeEndElement(); //end of pStyle\n      xmlWriter.writeEndElement(); //end of pPr\n      xmlWriter.writeEndElement(); //end of P\n    }\n    if (!this.isBookmarkAtRowEnd) {\n      xmlWriter.writeEndElement(); //end of table cell 'tc' \n    }\n    this.blockOwner = owner;\n  };\n  // Serialize the table grid\n  WordExport.prototype.serializeTableGrid = function (writer, table) {\n    writer.writeStartElement(undefined, 'tblGrid', this.wNamespace);\n    if (table[gridProperty[this.keywordIndex]].length !== 0) {\n      this.serializeGridColumns(writer, table[gridProperty[this.keywordIndex]]);\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the table rows\n  WordExport.prototype.serializeTableRows = function (writer, rows) {\n    var mVerticalMerge = new Dictionary();\n    if (rows.length > 0) {\n      for (var i = 0; i < rows.length; i++) {\n        var row = rows[i];\n        if (row[cellsProperty[this.keywordIndex]].length > 0) {\n          if (row.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n            this.serializeContentControl(writer, row[contentControlPropertiesProperty[this.keywordIndex]], row);\n            continue;\n          }\n          this.serializeRow(writer, row, mVerticalMerge);\n        }\n      }\n    }\n  };\n  // Serialize the table row\n  WordExport.prototype.serializeRow = function (writer, row, mVerticalMerge) {\n    var owner = this.row;\n    this.row = row;\n    writer.writeStartElement(undefined, 'tr', this.wNamespace);\n    this.serializeRowFormat(writer, row);\n    this.serializeCells(writer, row[cellsProperty[this.keywordIndex]], mVerticalMerge);\n    writer.writeEndElement(); //end od table row 'tr'\n    this.row = owner;\n  };\n  // Serialize the row format\n  WordExport.prototype.serializeRowFormat = function (writer, row) {\n    this.serializeRowMargins(writer, row[rowFormatProperty[this.keywordIndex]]);\n    writer.writeStartElement(undefined, 'trPr', this.wNamespace);\n    //Serialize Row Height\n    if (row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] > 0) {\n      writer.writeStartElement(undefined, 'trHeight', this.wNamespace);\n      if (row[rowFormatProperty[this.keywordIndex]][heightTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Exactly')) {\n        writer.writeAttributeString('w', 'hRule', this.wNamespace, 'exact');\n      } else if (row[rowFormatProperty[this.keywordIndex]][heightTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'AtLeast')) {\n        writer.writeAttributeString('w', 'hRule', this.wNamespace, 'atLeast');\n      }\n      var height = this.roundToTwoDecimal(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] * this.twentiethOfPoint).toString();\n      writer.writeAttributeString('w', 'val', this.wNamespace, height);\n      writer.writeEndElement();\n    }\n    var rowFormat = row[rowFormatProperty[this.keywordIndex]];\n    // //Serialize 'gridBefore' element\n    var gridBefore = rowFormat[gridBeforeProperty[this.keywordIndex]];\n    if (gridBefore > 0) {\n      writer.writeStartElement(undefined, 'gridBefore', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, gridBefore.toString());\n      writer.writeEndElement();\n    }\n    // //Serialize 'gridAfter' element\n    var gridAfter = rowFormat[gridAfterProperty[this.keywordIndex]];\n    if (gridAfter > 0) {\n      writer.writeStartElement(undefined, 'gridAfter', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, gridAfter.toString());\n      writer.writeEndElement();\n    }\n    // //Serialize 'wBefore' element \n    if (gridBefore > 0) {\n      writer.writeStartElement(undefined, 'wBefore', this.wNamespace);\n      switch (rowFormat[gridBeforeWidthTypeProperty[this.keywordIndex]]) {\n        case 'Percent':\n        case 1:\n          var width = this.roundToTwoDecimal(rowFormat[gridBeforeWidthProperty[this.keywordIndex]] * this.percentageFactor).toString();\n          writer.writeAttributeString('w', 'w', this.wNamespace, width);\n          writer.writeAttributeString('w', 'type', this.wNamespace, 'pct');\n          break;\n        case 'Point':\n        case 2:\n          var pointWidth = this.roundToTwoDecimal(rowFormat[gridBeforeWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n          writer.writeAttributeString('w', 'w', this.wNamespace, pointWidth);\n          writer.writeAttributeString('w', 'type', this.wNamespace, 'dxa');\n          break;\n      }\n      writer.writeEndElement();\n    }\n    //Serialize 'wAfter' element\n    if (gridAfter > 0) {\n      writer.writeStartElement(undefined, 'wAfter', this.wNamespace);\n      switch (rowFormat[gridAfterWidthTypeProperty[this.keywordIndex]]) {\n        case 'Percent':\n        case 1:\n          var width = this.roundToTwoDecimal(rowFormat[gridAfterWidthProperty[this.keywordIndex]] * this.percentageFactor).toString();\n          writer.writeAttributeString('w', 'val', this.wNamespace, width);\n          writer.writeAttributeString('w', 'type', this.wNamespace, 'pct');\n          break;\n        case 'Point':\n        case 2:\n          var pointWidth = this.roundToTwoDecimal(rowFormat[gridAfterWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n          writer.writeAttributeString('w', 'val', this.wNamespace, pointWidth);\n          writer.writeAttributeString('w', 'type', this.wNamespace, 'dxa');\n          break;\n      }\n      writer.writeEndElement();\n    }\n    //Serialize 'cantSplit' element \n    if (!HelperMethods.parseBoolValue(rowFormat[allowBreakAcrossPagesProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'cantSplit', this.wNamespace);\n      writer.writeEndElement();\n    }\n    // //Serialize 'tblHeader' element \n    if (HelperMethods.parseBoolValue(rowFormat[isHeaderProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'tblHeader', this.wNamespace);\n      writer.writeEndElement();\n    }\n    //serialize revision\n    if (!isNullOrUndefined(rowFormat[revisionIdsProperty[this.keywordIndex]]) && rowFormat[revisionIdsProperty[this.keywordIndex]].length > 0) {\n      this.serializeRevisionStart(writer, rowFormat, undefined);\n      this.serializeRevisionEnd(writer, rowFormat, undefined);\n    }\n    writer.writeEndElement();\n  };\n  // serialize the table cells\n  WordExport.prototype.serializeCells = function (writer, cells, mVerticalMerge) {\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n        this.serializeContentControl(writer, cells[i][contentControlPropertiesProperty[this.keywordIndex]], cells[i]);\n        continue;\n      }\n      this.serializeCell(writer, cells[i], mVerticalMerge);\n    }\n  };\n  // Serialize the table cell\n  WordExport.prototype.serializeCell = function (writer, cell, mVerticalMerge) {\n    var owner = this.blockOwner;\n    this.blockOwner = cell;\n    writer.writeStartElement(undefined, 'tc', this.wNamespace);\n    mVerticalMerge = this.serializeCellFormat(writer, cell[cellFormatProperty[this.keywordIndex]], true, true, mVerticalMerge);\n    if (cell[blocksProperty[this.keywordIndex]].length > 0) {\n      var itemIndex = 0;\n      var item = undefined;\n      while (itemIndex < cell[blocksProperty[this.keywordIndex]].length) {\n        item = cell[blocksProperty[this.keywordIndex]][itemIndex];\n        this.serializeBodyItem(writer, item, false);\n        itemIndex += 1;\n      }\n    } else {\n      writer.writeStartElement(undefined, 'p', this.wNamespace);\n      writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n      writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, 'Normal');\n      writer.writeEndElement(); //end of pStyle\n      writer.writeEndElement(); //end of pPr\n      writer.writeEndElement(); //end of P\n    }\n    writer.writeEndElement(); //end of table cell 'tc' \n    var increment = 1;\n    // let count: number = 0;\n    if (mVerticalMerge.containsKey(cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1 + increment) && this.row[cellsProperty[this.keywordIndex]].length === 1) {\n      var length_1 = mVerticalMerge.keys[mVerticalMerge.keys.length - 1];\n      while (increment <= length_1) {\n        increment = this.createCellForMerge(writer, cell, mVerticalMerge, increment);\n        increment++;\n      }\n    } else {\n      this.createCellForMerge(writer, cell, mVerticalMerge, increment);\n    }\n    this.blockOwner = owner;\n  };\n  WordExport.prototype.createCellForMerge = function (writer, cell, mVerticalMerge, increment) {\n    while (mVerticalMerge.containsKey(cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1 + increment) && (this.row[cellsProperty[this.keywordIndex]].indexOf(cell) === this.row[cellsProperty[this.keywordIndex]].length - 1 || this.row[cellsProperty[this.keywordIndex]].indexOf(cell) === cell[columnIndexProperty[this.keywordIndex]]) && cell.nextNode === undefined) {\n      var collKey = cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1 + increment;\n      writer.writeStartElement(undefined, 'tc', this.wNamespace);\n      var endProperties = true;\n      if (!isNullOrUndefined(this.spanCellFormat)) {\n        endProperties = false;\n        mVerticalMerge = this.serializeCellFormat(writer, this.spanCellFormat, false, endProperties, mVerticalMerge);\n      } else {\n        writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n        endProperties = false;\n      }\n      this.serializeColumnSpan(collKey, writer);\n      writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, 'continue');\n      writer.writeEndElement();\n      if (isNullOrUndefined(this.spanCellFormat)) {\n        writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n        this.serializeBorders(writer, cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], 8, false);\n        writer.writeEndElement();\n      }\n      if (!endProperties) {\n        writer.writeEndElement();\n      }\n      mVerticalMerge = this.checkMergeCell(collKey, mVerticalMerge);\n      writer.writeStartElement('w', 'p', this.wNamespace);\n      writer.writeEndElement(); //end of P\n      writer.writeEndElement(); //end of table cell 'tc'  \n      increment++;\n      //count++;\n    }\n    return increment;\n  };\n  // Serialize the cell formatting\n  WordExport.prototype.serializeCellFormat = function (writer, cellFormat, ensureMerge, endProperties, mVerticalMerge) {\n    var cell = this.blockOwner;\n    //Get the table fomat\n    var tf = this.table[tableFormatProperty[this.keywordIndex]];\n    //Get the row format\n    var rf = this.row[rowFormatProperty[this.keywordIndex]];\n    writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n    //w:cnfStyle -   Table Cell Conditional Formatting\n    // SerializeCnfStyleElement(cell);\n    //w:tcW -    Preferred Table Cell Width\n    this.serializeCellWidth(writer, cellFormat);\n    // serialize cell margins\n    this.serializeCellMargins(writer, cellFormat);\n    if (ensureMerge) {\n      //w:hMerge -    Horizontally Merged Cell and w:vMerge -    Vertically Merged Cell\n      mVerticalMerge = this.serializeCellMerge(writer, cellFormat, mVerticalMerge);\n      //w:gridSpan -   Grid Columns Spanned by Current Table Cell\n      this.serializeGridSpan(writer, cell);\n    }\n    //w:tcBorders -    Table Cell Borders\n    writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n    this.serializeBorders(writer, cellFormat[bordersProperty[this.keywordIndex]], 8, false);\n    writer.writeEndElement();\n    //w:shd -  Table Cell Shading\n    this.serializeShading(writer, cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n    // //w:noWrap -   Don't Wrap Cell Content\n    // if (cellFormat.HasValue(CellFormat.TextWrapKey)) {\n    //     m_writer.WriteStartElement('noWrap', W_namespace);\n    //     if (cellFormat.TextWrap)\n    //         m_writer.WriteAttributeString('w', 'val', W_namespace, 'false');\n    //     m_writer.WriteEndElement();\n    // }\n    // //w:tcMar -  Single Table Cell Margins\n    // if (!cellFormat.SamePaddingsAsTable) {\n    //     m_writer.WriteStartElement('tcMar', W_namespace);\n    //     SerializePaddings(cellFormat.Paddings);\n    //     m_writer.WriteEndElement();\n    // }\n    //w:textDirection -   Table Cell Text Flow Direction\n    this.serializeTableCellDirection(writer, cellFormat);\n    // //w:tcFitText -  Fit Text Within Cell\n    // if (cellFormat.FitText) {\n    //     m_writer.WriteStartElement('tcFitText', W_namespace);\n    //     m_writer.WriteEndElement();\n    // }\n    // //w:hideMark \n    // if (cellFormat.HideMark) {\n    //     m_writer.WriteStartElement('hideMark', W_namespace);\n    //     m_writer.WriteEndElement();\n    // }\n    //w:vAlign -  Table Cell Vertical Alignment\n    // if (cellFormat.HasValue(CellFormat.VrAlignmentKey))\n    this.serializeCellVerticalAlign(writer, cellFormat[verticalAlignmentProperty[this.keywordIndex]]);\n    // //w:hideMark -   Ignore End Of Cell Marker In Row Height Calculation\n    // SerializeDocxProps(tempDocxProps, 'hideMark');\n    // //w:cellIns -    Table Cell Insertion\n    // SerializeDocxProps(tempDocxProps, 'cellIns');\n    // //w:cellDel -    Table Cell Deletion\n    // SerializeDocxProps(tempDocxProps, 'cellDel');\n    // //w:cellMerge -   Vertically Merged/Split Table Cells\n    // SerializeDocxProps(tempDocxProps, 'cellMerge');\n    // if (cellFormat.OldPropertiesHash.length > 0 && !m_isAlternativeCellFormat) {\n    //     m_isAlternativeCellFormat = true;\n    //     SerializeTrackChangeProps('tcPrChange', cellFormat.FormatChangeAuthorName, cellFormat.FormatChangeDateTime);\n    //     Dictionary < int, object > oldPropertyHash = new Dictionary<int, object>(cellFormat.OldPropertiesHash);\n    //     Dictionary < int, object > propertyHash = new Dictionary<int, object>(cellFormat.PropertiesHash);\n    //     cellFormat.PropertiesHash.Clear();\n    //     cellFormat.OldPropertiesHash.Clear();\n    //     foreach(KeyValuePair < int, object > keyValue in oldPropertyHash)\n    //     cellFormat.PropertiesHash[keyValue.Key] = keyValue.Value;\n    //     SerializeCellFormat(cellFormat);\n    //     cellFormat.PropertiesHash.Clear();\n    //     foreach(KeyValuePair < int, object > keyValue in propertyHash)\n    //     cellFormat.PropertiesHash[keyValue.Key] = keyValue.Value;\n    //     foreach(KeyValuePair < int, object > keyValue in oldPropertyHash)\n    //     cellFormat.OldPropertiesHash[keyValue.Key] = keyValue.Value;\n    //     m_writer.WriteEndElement();\n    //     m_isAlternativeCellFormat = false;\n    // }\n    if (endProperties) {\n      writer.writeEndElement();\n    }\n    return mVerticalMerge;\n  };\n  // Serialize the cell width\n  WordExport.prototype.serializeCellWidth = function (writer, cf) {\n    writer.writeStartElement(undefined, 'tcW', this.wNamespace);\n    if (cf[preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Percent')) {\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'pct');\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(cf[preferredWidthProperty[this.keywordIndex]] * this.percentageFactor).toString());\n    } else if (cf[preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Auto')) {\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'auto');\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, '0');\n    } else {\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(cf[preferredWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n    }\n    writer.writeEndElement();\n  };\n  // Serialize cell merge\n  WordExport.prototype.serializeCellMerge = function (writer, cellFormat, mVerticalMerge) {\n    var cell = this.blockOwner;\n    var isserialized = false;\n    var collKey;\n    var currentIndex = cell[columnIndexProperty[this.keywordIndex]];\n    var cellIndex = this.row[cellsProperty[this.keywordIndex]].indexOf(cell);\n    var prevIndex = cellIndex > 0 ? this.row[cellsProperty[this.keywordIndex]][cellIndex - 1][columnIndexProperty[this.keywordIndex]] : cell[columnIndexProperty[this.keywordIndex]];\n    if (cell[columnIndexProperty[this.keywordIndex]] === cellIndex) {\n      collKey = cell[columnIndexProperty[this.keywordIndex]];\n      isserialized = true;\n    } else {\n      isserialized = false;\n    }\n    if (!isserialized) {\n      if (cellIndex === 0) {\n        currentIndex = cell[columnIndexProperty[this.keywordIndex]];\n        prevIndex = -1;\n      }\n      for (var i = prevIndex; i < currentIndex; i++) {\n        collKey = prevIndex + 1;\n        prevIndex += 1;\n        if (collKey === 0 && mVerticalMerge.containsKey(collKey)) {\n          mVerticalMerge = this.createMerge(writer, collKey, cell, mVerticalMerge);\n        }\n      }\n    }\n    if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n      writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n      this.spanCellFormat = cellFormat;\n      mVerticalMerge.add(collKey, cellFormat[rowSpanProperty[this.keywordIndex]] - 1);\n      if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1) {\n        this.mGridSpans.add(collKey, cellFormat[columnSpanProperty[this.keywordIndex]]);\n      }\n      writer.writeAttributeString('w', 'val', this.wNamespace, 'restart');\n      writer.writeEndElement();\n    } else if (mVerticalMerge.containsKey(collKey) && isserialized) {\n      mVerticalMerge = this.createMerge(writer, collKey, cell, mVerticalMerge);\n    }\n    return mVerticalMerge;\n  };\n  WordExport.prototype.createMerge = function (writer, collKey, cell, mVerticalMerge) {\n    this.serializeColumnSpan(collKey, writer);\n    writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n    writer.writeAttributeString('w', 'val', this.wNamespace, 'continue');\n    writer.writeEndElement();\n    writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n    this.serializeBorders(writer, cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], 8, false);\n    writer.writeEndElement();\n    writer.writeEndElement(); //end tcPr\n    writer.writeStartElement('w', 'p', this.wNamespace);\n    writer.writeEndElement();\n    writer.writeEndElement(); //end tc\n    writer.writeStartElement(undefined, 'tc', this.wNamespace);\n    writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n    this.serializeCellWidth(writer, cell[cellFormatProperty[this.keywordIndex]]);\n    mVerticalMerge = this.checkMergeCell(collKey, mVerticalMerge);\n    return mVerticalMerge;\n  };\n  WordExport.prototype.serializeColumnSpan = function (collKey, writer) {\n    if (this.mGridSpans.keys.length > 0 && this.mGridSpans.containsKey(collKey)) {\n      writer.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.mGridSpans.get(collKey).toString());\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.checkMergeCell = function (collKey, mVerticalMerge) {\n    if (mVerticalMerge.get(collKey) - 1 === 0) {\n      mVerticalMerge.remove(collKey);\n      this.spanCellFormat = undefined;\n      if (this.mGridSpans.keys.length > 0 && this.mGridSpans.containsKey(collKey)) {\n        this.mGridSpans.remove(collKey);\n      }\n    } else {\n      mVerticalMerge.set(collKey, mVerticalMerge.get(collKey) - 1);\n    }\n    return mVerticalMerge;\n  };\n  // Serialize the grid span element of cell.\n  WordExport.prototype.serializeGridSpan = function (writer, cell) {\n    // int gridSpan = cell.cellFormat.GridSpan;\n    if (cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] > 1) {\n      var num = cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]];\n      writer.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, num.toString());\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the table cell direction\n  WordExport.prototype.serializeTableCellDirection = function (writer, cellFormat) {\n    // if (cellFormat..textDirection !== TextDirection.Horizontal)\n    // {\n    //     m_writer.WriteStartElement('textDirection', W_namespace);\n    //     switch (cellFormat.TextDirection)\n    //     {\n    //         case TextDirection.Horizontal:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'lrTb');\n    //             break;\n    //         case TextDirection.VerticalBottomToTop:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'btLr');\n    //             break;\n    //         case TextDirection.VerticalTopToBottom:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbRl');\n    //             break;\n    //         case TextDirection.HorizontalFarEast:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'lrTbV');\n    //             break;\n    //         case TextDirection.Vertical:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbLrV');\n    //             break;\n    //         case TextDirection.VerticalFarEast:\n    //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbRlV');\n    //             break;\n    //     }\n    //     m_writer.WriteEndElement();\n    // }\n  };\n  // Serialize the cell vertical alignment\n  WordExport.prototype.serializeCellVerticalAlign = function (writer, alignment) {\n    writer.writeStartElement(undefined, 'vAlign', this.wNamespace);\n    switch (alignment) {\n      case 'Center':\n      case 1:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'center');\n        break;\n      case 'Bottom':\n      case 2:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'bottom');\n        break;\n      default:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'top');\n        break;\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the table grid columns.\n  WordExport.prototype.serializeGridColumns = function (writer, grid) {\n    for (var i = 0, count = grid.length; i < count; i++) {\n      var gridValue = Math.round(grid[i] * 20);\n      writer.writeStartElement(undefined, 'gridCol', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, gridValue.toString());\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the row formattings.\n  // Table parameter is passed for serializing table format and undefined for serializing row format.\n  WordExport.prototype.serializeTableFormat = function (writer, format, table) {\n    // if (!isNullOrUndefined(table))\n    // {\n    //     List<Stream> tempDocxProps = new List<Stream>();\n    //     for (int i = 0, cnt = table.DocxTableFormat.NodeArray.length; i < cnt; i++)\n    //         tempDocxProps.Add(table.DocxTableFormat.NodeArray[i]);\n    writer.writeStartElement(undefined, 'tblPr', this.wNamespace);\n    //     SerializeTableStlye(format);\n    //     if (format.WrapTextAround &&!((table.OwnerTextBody.Owner is WTextBox) || \n    //(table.OwnerTextBody.Owner is WComment) || (table.OwnerTextBody.Owner is WFootnote)))\n    //     {\n    //         SerializeTablePositioning(format.Positioning);\n    //         if (!format.Positioning.AllowOverlap)\n    //         {\n    //             m_writer.WriteStartElement('tblOverlap', W_namespace);\n    //             m_writer.WriteAttributeString('val', W_namespace, 'never');\n    //             m_writer.WriteEndElement();\n    //         }\n    //     }\n    //     SerializeDocxProps(tempDocxProps, 'tblStyleRowBandSize');\n    //     SerializeDocxProps(tempDocxProps, 'tblStyleColBandSize');  \n    if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, \"tblStyle\", this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, table[tableFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n    this.serializeTablePositioning(writer, table);\n    this.serializeTableWidth(writer, table);\n    this.serializeTableAlignment(writer, table[tableFormatProperty[this.keywordIndex]]);\n    this.serializeCellSpacing(writer, table[tableFormatProperty[this.keywordIndex]]);\n    this.serializeTableIndentation(writer, table[tableFormatProperty[this.keywordIndex]]);\n    this.serializeTableMargins(writer, table[tableFormatProperty[this.keywordIndex]]);\n    this.serializeTableBorders(writer, table[tableFormatProperty[this.keywordIndex]]);\n    this.serializeShading(writer, table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n    if (HelperMethods.parseBoolValue(table[tableFormatProperty[this.keywordIndex]][bidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'bidiVisual', this.wNamespace);\n      writer.writeEndElement();\n    }\n    this.serializeTblLayout(writer, table[tableFormatProperty[this.keywordIndex]]);\n    // this.serializeTableCellMargin(writer, table.tableFormat);\n    //     SerializeTableLook(table);\n    //         if (!isNullOrUndefined(table.Title))\n    //             SerializeTableTitle(table);\n    //         if (!isNullOrUndefined(table.Description))\n    //             SerializeTableDescription(table);\n    // }\n    // else\n    // {\n    //     SerializeCellSpacing(format);\n    //     SerializeTableIndentation(format);\n    //     SerializeTableBorders(format);\n    //     SerializeTableShading(format);\n    //     SerializeTblLayout(format);\n    //     SerializeTableCellMargin(format);\n    // }\n    // if (!isNullOrUndefined(format.OwnerBase) && format.OwnerBase is WTable\n    //   && format.OldPropertiesHash.length > 0 && !m_isAlternativeTableFormat)\n    // {\n    //     m_isAlternativeTableFormat = true;\n    //     SerializeTrackChangeProps('tblPrChange', format.FormatChangeAuthorName, format.FormatChangeDateTime);\n    //     SerializeTableTrackChanges(format, format.OwnerBase as WTable);\n    //     m_writer.WriteEndElement();\n    //     m_isAlternativeTableFormat = false;\n    // }\n    // if (!isNullOrUndefined(format.OwnerRow) && format.OldPropertiesHash.length > 0)\n    // {\n    //     SerializeTrackChangeProps('tblPrExChange', format.FormatChangeAuthorName, format.FormatChangeDateTime);\n    //     SerializeTableTrackChanges(format, undefined);\n    //     m_writer.WriteEndElement();\n    // }\n    // SerializeTblTrackChanges(format);\n    if (!isNullOrUndefined(table)) {\n      writer.writeEndElement(); //end of tblPr\n    }\n  };\n  // Serialize the table position\n  WordExport.prototype.serializeTablePositioning = function (writer, table) {\n    if (HelperMethods.parseBoolValue(table[wrapTextAroundProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'tblpPr', this.wNamespace);\n      if (table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] > 0) {\n        var left = Math.round(table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'leftFromText', this.wNamespace, left);\n      }\n      if (table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] > 0) {\n        var right = Math.round(table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'rightFromText', this.wNamespace, right);\n      }\n      if (table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] > 0) {\n        var top_1 = Math.round(table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'topFromText', this.wNamespace, top_1);\n      }\n      if (table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] > 0) {\n        var bottom = Math.round(table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'bottomFromText', this.wNamespace, bottom);\n      }\n      if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]])) {\n        var verticalOrigin = table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Paragraph') ? 'text' : this.keywordIndex == 1 ? this.getTableVerticalRelation(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]]).toLowerCase() : this.getTableVerticalRelation(this.getTableVerticalRelationEnumValue(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]])).toLowerCase();\n        writer.writeAttributeString('w', 'vertAnchor', this.wNamespace, verticalOrigin);\n      }\n      if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'Column')) {\n        var horizontalOrigin = this.keywordIndex == 1 ? this.getTableHorizontalRelation(table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]]).toLowerCase() : table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]].toLowerCase();\n        writer.writeAttributeString('w', 'horzAnchor', this.wNamespace, horizontalOrigin);\n      }\n      if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'Left')) {\n        var horizontalAlignment = this.keywordIndex == 1 ? this.getTableHorizontalAlignment(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) : table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]].toLowerCase();\n        writer.writeAttributeString('w', 'tblpXSpec', this.wNamespace, horizontalAlignment);\n      }\n      if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None')) {\n        var verticalAlignment = this.keywordIndex == 1 ? this.getTableVerticalAlignment(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) : table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]].toLowerCase();\n        writer.writeAttributeString('w', 'tblpYSpec', this.wNamespace, verticalAlignment);\n      }\n      if ((!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Left') || !table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] > 0) {\n        var horizontalPosition = Math.round(table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'tblpX', this.wNamespace, horizontalPosition);\n      }\n      if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n        var verticalPosition = Math.round(table[positioningProperty[this.keywordIndex]][verticalPositionProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n        writer.writeAttributeString('w', 'tblpY', this.wNamespace, verticalPosition);\n      }\n      writer.writeEndElement();\n      if (!HelperMethods.parseBoolValue(table[positioningProperty[this.keywordIndex]][allowOverlapProperty[this.keywordIndex]])) {\n        writer.writeStartElement('w', 'tblOverlap', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'never');\n        writer.writeEndElement();\n      }\n    }\n    if (!isNullOrUndefined(table[descriptionProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'tblDescription', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, table[descriptionProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(table[titleProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'tblCaption', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, table[titleProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n  };\n  // serialize the table margin\n  WordExport.prototype.serializeTableMargins = function (writer, format) {\n    this.serializeMargins(writer, format, 'tblCellMar');\n  };\n  // serialize the row margin\n  WordExport.prototype.serializeRowMargins = function (writer, format) {\n    writer.writeStartElement(undefined, 'tblPrEx', this.wNamespace);\n    // serialize the row borders\n    writer.writeStartElement(undefined, 'tblBorders', this.wNamespace);\n    this.serializeBorders(writer, format[bordersProperty[this.keywordIndex]], 8, false);\n    writer.writeEndElement();\n    this.serializeMargins(writer, format, 'tblCellMar');\n    writer.writeEndElement();\n  };\n  // serialize the cell margins\n  WordExport.prototype.serializeCellMargins = function (writer, format) {\n    this.serializeMargins(writer, format, 'tcMar');\n  };\n  // serialize the table margins, row margins, cell margins\n  WordExport.prototype.serializeMargins = function (writer, format, tag) {\n    writer.writeStartElement(undefined, tag, this.wNamespace);\n    if (!isNullOrUndefined(format[topMarginProperty[this.keywordIndex]])) {\n      var topMargin = Math.round(format[topMarginProperty[this.keywordIndex]] * 20);\n      writer.writeStartElement(undefined, 'top', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, topMargin.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(format[leftMarginProperty[this.keywordIndex]])) {\n      var leftMargin = Math.round(format[leftMarginProperty[this.keywordIndex]] * 20);\n      writer.writeStartElement(undefined, 'left', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, leftMargin.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(format[bottomMarginProperty[this.keywordIndex]])) {\n      var bottomMargin = Math.round(format[bottomMarginProperty[this.keywordIndex]] * 20);\n      writer.writeStartElement(undefined, 'bottom', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, bottomMargin.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(format[rightMarginProperty[this.keywordIndex]])) {\n      var rightMargin = Math.round(format[rightMarginProperty[this.keywordIndex]] * 20);\n      writer.writeStartElement(undefined, 'right', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, rightMargin.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the table borders\n  WordExport.prototype.serializeShading = function (writer, format) {\n    // if (format.textureStyle !== 'TextureNone') {\n    writer.writeStartElement(undefined, 'shd', this.wNamespace);\n    if (format[backgroundColorProperty[this.keywordIndex]] && format[backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n      writer.writeAttributeString(undefined, 'fill', this.wNamespace, this.getColor(format[backgroundColorProperty[this.keywordIndex]]));\n    } else {\n      writer.writeAttributeString(undefined, 'fill', this.wNamespace, 'auto');\n    }\n    if (format[foregroundColorProperty[this.keywordIndex]] === 'empty' || isNullOrUndefined(format[foregroundColorProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'color', this.wNamespace, 'auto');\n    } else {\n      writer.writeAttributeString(undefined, 'color', this.wNamespace, this.getColor(format[foregroundColorProperty[this.keywordIndex]]));\n    }\n    if (!isNullOrUndefined(format[textureProperty[this.keywordIndex]])) {\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.getTextureStyle(format[textureProperty[this.keywordIndex]]));\n    }\n    writer.writeEndElement();\n    // }\n  };\n  WordExport.prototype.getTextureStyle = function (textureStyle) {\n    switch (textureStyle) {\n      case 'Texture5Percent':\n      case 'Texture2Pt5Percent':\n      case 'Texture7Pt5Percent':\n      case 1:\n      case 2:\n      case 3:\n        return 'pct5';\n      case 'Texture10Percent':\n      case 4:\n        return 'pct10';\n      case 'Texture12Pt5Percent':\n      case 5:\n        return 'pct12';\n      case 'Texture15Percent':\n      case 'Texture17Pt5Percent':\n      case 6:\n      case 7:\n        return 'pct15';\n      case 'Texture20Percent':\n      case 'Texture22Pt5Percent':\n      case 8:\n      case 9:\n        return 'pct20';\n      case 'Texture25Percent':\n      case 'Texture27Pt5Percent':\n      case 10:\n      case 11:\n        return 'pct25';\n      case 'Texture30Percent':\n      case 'Texture32Pt5Percent':\n      case 12:\n      case 13:\n        return 'pct30';\n      case 'Texture35Percent':\n      case 14:\n        return 'pct35';\n      case 'Texture37Pt5Percent':\n      case 15:\n        return 'pct37';\n      case 'Texture40Percent':\n      case 'Texture42Pt5Percent':\n      case 16:\n      case 17:\n        return 'pct40';\n      case 'Texture45Percent':\n      case 'Texture47Pt5Percent':\n      case 18:\n      case 19:\n        return 'pct45';\n      case 'Texture50Percent':\n      case 'Texture52Pt5Percent':\n      case 20:\n      case 21:\n        return 'pct50';\n      case 'Texture55Percent':\n      case 'Texture57Pt5Percent':\n      case 22:\n      case 23:\n        return 'pct55';\n      case 'Texture60Percent':\n      case 24:\n        return 'pct60';\n      case 'Texture62Pt5Percent':\n      case 25:\n        return 'pct62';\n      case 'Texture65Percent':\n      case 'Texture67Pt5Percent':\n      case 26:\n      case 27:\n        return 'pct65';\n      case 'Texture70Percent':\n      case 'Texture72Pt5Percent':\n      case 28:\n      case 29:\n        return 'pct70';\n      case 'Texture75Percent':\n      case 'Texture77Pt5Percent':\n      case 30:\n      case 31:\n        return 'pct75';\n      case 'Texture80Percent':\n      case 'Texture82Pt5Percent':\n      case 32:\n      case 33:\n        return 'pct80';\n      case 'Texture85Percent':\n      case 34:\n        return 'pct85';\n      case 'Texture87Pt5Percent':\n      case 35:\n        return 'pct87';\n      case 'Texture90Percent':\n      case 'Texture92Pt5Percent':\n      case 36:\n      case 37:\n        return 'pct90';\n      case 'Texture95Percent':\n      case 'Texture97Pt5Percent':\n      case 38:\n      case 39:\n        return 'pct95';\n      case 40:\n        return 'solid';\n      case 'TextureCross':\n        return 'thinHorzCross';\n      case 'TextureDarkCross':\n        return 'horzCross';\n      case 'TextureDarkDiagonalCross':\n        return 'diagCross';\n      case 'TextureDarkDiagonalDown':\n        return 'reverseDiagStripe';\n      case 'TextureDarkDiagonalUp':\n        return 'diagStripe';\n      case 'TextureDarkHorizontal':\n      case 41:\n        return 'horzStripe';\n      case 'TextureDarkVertical':\n      case 42:\n        return 'vertStripe';\n      case 43:\n        return 'reverseDiagStripe';\n      case 44:\n        return 'diagStripe';\n      case 45:\n        return 'horzCross';\n      case 46:\n        return 'diagCross';\n      case 'TextureDiagonalCross':\n        return 'thinDiagCross';\n      case 'TextureDiagonalDown':\n        return 'thinReverseDiagStripe';\n      case 'TextureDiagonalUp':\n        return 'thinDiagStripe';\n      case 'TextureHorizontal':\n      case 47:\n        return 'thinHorzStripe';\n      case 'TextureSolid':\n        return 'solid';\n      case 'TextureVertical':\n      case 48:\n        return 'thinVertStripe';\n      case 49:\n        return 'thinReverseDiagStripe';\n      case 50:\n        return 'thinDiagStripe';\n      case 51:\n        return 'thinHorzCross';\n      case 52:\n        return 'thinDiagCross';\n      default:\n        return 'clear';\n    }\n  };\n  //serialize the paragraph border\n  WordExport.prototype.serializeParagraphBorders = function (writer, formatPara) {\n    var borders = formatPara[bordersProperty[this.keywordIndex]];\n    if (isNullOrUndefined(borders)) {\n      return;\n    }\n    writer.writeStartElement(undefined, 'pBdr', this.wNamespace);\n    this.serializeBorders(writer, formatPara[bordersProperty[this.keywordIndex]], 8, true);\n    writer.writeEndElement();\n  };\n  // Serialize the table borders\n  WordExport.prototype.serializeTableBorders = function (writer, format) {\n    var borders = format[bordersProperty[this.keywordIndex]];\n    if (isNullOrUndefined(borders)) {\n      return;\n    }\n    writer.writeStartElement(undefined, 'tblBorders', this.wNamespace);\n    this.serializeBorders(writer, format[bordersProperty[this.keywordIndex]], 8, false);\n    writer.writeEndElement();\n  };\n  // Serialize the borders.\n  WordExport.prototype.serializeBorders = function (writer, borders, multipler, isParagraphBorder) {\n    this.serializeBorder(writer, borders[topProperty[this.keywordIndex]], 'top', multipler);\n    this.serializeBorder(writer, borders[leftProperty[this.keywordIndex]], 'left', multipler);\n    this.serializeBorder(writer, borders[bottomProperty[this.keywordIndex]], 'bottom', multipler);\n    this.serializeBorder(writer, borders[rightProperty[this.keywordIndex]], 'right', multipler);\n    if (isParagraphBorder) {\n      this.serializeBorder(writer, borders[horizontalProperty[this.keywordIndex]], 'between', multipler);\n      this.serializeBorder(writer, borders[verticalProperty[this.keywordIndex]], 'bar', multipler);\n    } else {\n      this.serializeBorder(writer, borders[horizontalProperty[this.keywordIndex]], 'insideH', multipler);\n      this.serializeBorder(writer, borders[verticalProperty[this.keywordIndex]], 'insideV', multipler);\n      this.serializeBorder(writer, borders[diagonalDownProperty[this.keywordIndex]], 'tl2br', multipler);\n      this.serializeBorder(writer, borders[diagonalUpProperty[this.keywordIndex]], 'tr2bl', multipler);\n    }\n  };\n  // Serialize the table layout element\n  WordExport.prototype.serializeTblLayout = function (writer, format) {\n    if (!HelperMethods.parseBoolValue(format[allowAutoFitProperty[this.keywordIndex]]) || format[preferredWidthProperty[this.keywordIndex]] > this.containerWidth) {\n      writer.writeStartElement(undefined, 'tblLayout', this.wNamespace);\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'fixed');\n      writer.writeEndElement();\n    }\n  };\n  // Serializes the Border\n  WordExport.prototype.serializeBorder = function (writer, border, tagName, multiplier) {\n    var borderStyle = border[lineStyleProperty[this.keywordIndex]];\n    var sz = (border[lineWidthProperty[this.keywordIndex]] ? border[lineWidthProperty[this.keywordIndex]] : 0) * multiplier;\n    var space = border[spaceProperty[this.keywordIndex]] ? border[spaceProperty[this.keywordIndex]] : 0;\n    if (borderStyle === (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      writer.writeStartElement(undefined, tagName, this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, 'nil');\n      writer.writeEndElement();\n      return;\n    } else if ((borderStyle === (this.keywordIndex == 1 ? 1 : 'None') || isNullOrUndefined(borderStyle)) && !HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]]) || sz < 0 && !HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      return;\n    }\n    writer.writeStartElement(undefined, tagName, this.wNamespace);\n    writer.writeAttributeString('w', 'val', this.wNamespace, this.getBorderStyle(borderStyle));\n    // if (border.color === '#000000')\n    // {\n    //     writer.writeAttributeString(undefined, 'color', this.wNamespace, 'auto');\n    // }\n    // else\n    // {\n    if (border[colorProperty[this.keywordIndex]]) {\n      writer.writeAttributeString(undefined, 'color', this.wNamespace, this.getColor(border[colorProperty[this.keywordIndex]]));\n    }\n    // }\n    writer.writeAttributeString(undefined, 'sz', this.wNamespace, this.roundToTwoDecimal(sz).toString());\n    writer.writeAttributeString(undefined, 'space', this.wNamespace, space.toString());\n    if (HelperMethods.parseBoolValue(border[shadowProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'shadow', this.wNamespace, 'on');\n    }\n    writer.writeEndElement();\n  };\n  // Get the border style as string\n  WordExport.prototype.getBorderStyle = function (borderStyle) {\n    switch (borderStyle) {\n      case 'Cleared':\n        return 'cleared';\n      case 'None':\n      case 1:\n        return 'None';\n      case 'DashSmallGap':\n        return 'dashSmallGap';\n      case 'Triple':\n        return 'triple';\n      case 'Dot':\n      case 2:\n        return 'dotted';\n      case 3:\n        return 'dashSmallGap';\n      case 'DashDot':\n        return 'dotDash';\n      case 'DashLargeGap':\n      case 4:\n        return 'dashed';\n      case 5:\n        return 'dotDash';\n      case 'DashDotDot':\n      case 6:\n        return 'dotDotDash';\n      case 'Double':\n      case 7:\n        return 'double';\n      case 8:\n        return 'triple';\n      case 'ThinThickSmallGap':\n      case 9:\n        return 'thinThickSmallGap';\n      case 'ThickThinSmallGap':\n      case 10:\n        return 'thickThinSmallGap';\n      case 'ThinThickThinSmallGap':\n      case 11:\n        return 'thinThickThinSmallGap';\n      case 'ThickThinMediumGap':\n      case 12:\n        return 'thickThinMediumGap';\n      case 'ThinThickMediumGap':\n      case 13:\n        return 'thinThickMediumGap';\n      case 'ThinThickThinMediumGap':\n      case 14:\n        return 'thinThickThinMediumGap';\n      case 'ThickThinLargeGap':\n        return 'thickThinLargeGap';\n      case 'ThinThickLargeGap':\n      case 15:\n        return 'thinThickLargeGap';\n      case 16:\n        return 'thickThinLargeGap';\n      case 'ThinThickThinLargeGap':\n      case 17:\n        return 'thinThickThinLargeGap';\n      case 'Thick':\n        return 'thick';\n      case 'SingleWavy':\n      case 18:\n        return 'wave';\n      case 'DoubleWavy':\n      case 19:\n        return 'doubleWave';\n      case 'DashDotStroked':\n      case 20:\n        return 'dashDotStroked';\n      case 'Engrave3D':\n        return 'threeDEngrave';\n      case 'Emboss3D':\n      case 21:\n        return 'threeDEmboss';\n      case 22:\n        return 'threeDEngrave';\n      case 'Outset':\n      case 23:\n        return 'outset';\n      case 'Inset':\n      case 24:\n        return 'inset';\n      case 25:\n        return 'thick';\n      case 26:\n        return 'cleared';\n      // case 'None':\n      //     return 'none';\n      default:\n        return 'single';\n    }\n  };\n  // Serialize the table indentation.\n  WordExport.prototype.serializeTableIndentation = function (writer, format) {\n    if (!isNullOrUndefined(format[leftIndentProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'tblInd', this.wNamespace);\n      var tableIndent = Math.round(format[leftIndentProperty[this.keywordIndex]] * this.twipsInOnePoint);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, tableIndent.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the cell spacing.\n  WordExport.prototype.serializeCellSpacing = function (writer, format) {\n    if (!isNullOrUndefined(format[cellSpacingProperty[this.keywordIndex]]) && format[cellSpacingProperty[this.keywordIndex]] > 0) {\n      writer.writeStartElement(undefined, 'tblCellSpacing', this.wNamespace);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(format[cellSpacingProperty[this.keywordIndex]] / 2 * this.twentiethOfPoint).toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the table width\n  WordExport.prototype.serializeTableWidth = function (writer, table) {\n    writer.writeStartElement(undefined, 'tblW', this.wNamespace);\n    if (table[tableFormatProperty[this.keywordIndex]][preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Percent')) {\n      var tableWidth = Math.round(table[tableFormatProperty[this.keywordIndex]][preferredWidthProperty[this.keywordIndex]] * this.percentageFactor);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, tableWidth.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'pct');\n    } else if (table[tableFormatProperty[this.keywordIndex]][preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Point')) {\n      var tableWidth = Math.round(table[tableFormatProperty[this.keywordIndex]][preferredWidthProperty[this.keywordIndex]] * this.twipsInOnePoint);\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, tableWidth.toString());\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n    } else {\n      writer.writeAttributeString(undefined, 'w', this.wNamespace, '0');\n      writer.writeAttributeString(undefined, 'type', this.wNamespace, 'auto');\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the table alignment\n  WordExport.prototype.serializeTableAlignment = function (writer, format) {\n    writer.writeStartElement(undefined, 'jc', this.wNamespace);\n    switch (format[tableAlignmentProperty[this.keywordIndex]]) {\n      case 'Right':\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'right');\n        break;\n      case 'Center':\n      case 1:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'center');\n        break;\n      case 2:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'right');\n        break;\n      default:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'left');\n        break;\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the field\n  WordExport.prototype.serializeFieldCharacter = function (writer, field) {\n    writer.writeStartElement(undefined, 'r', this.wNamespace);\n    this.serializeCharacterFormat(writer, field[characterFormatProperty[this.keywordIndex]]);\n    writer.writeStartElement(undefined, 'fldChar', this.wNamespace);\n    var type = field[fieldTypeProperty[this.keywordIndex]] === 0 ? 'begin' : field[fieldTypeProperty[this.keywordIndex]] === 1 ? 'end' : 'separate';\n    writer.writeAttributeString(undefined, 'fldCharType', this.wNamespace, type);\n    if (type === 'begin' && !isNullOrUndefined(field[formFieldDataProperty[this.keywordIndex]])) {\n      var formFieldData = field[formFieldDataProperty[this.keywordIndex]];\n      writer.writeStartElement(undefined, 'ffData', this.wNamespace);\n      writer.writeStartElement(undefined, 'name', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[nameProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'enabled', this.wNamespace);\n      writer.writeEndElement();\n      if (formFieldData.hasOwnProperty(textInputProperty[this.keywordIndex])) {\n        writer.writeStartElement(undefined, 'textInput', this.wNamespace);\n        var type_1 = this.keywordIndex == 1 ? this.getTextFormFieldType(formFieldData[textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]]) : formFieldData[textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]].toString();\n        if (type_1 === 'Number' || 'Date') {\n          writer.writeStartElement(undefined, 'type', this.wNamespace);\n          writer.writeAttributeString(undefined, 'val', this.wNamespace, type_1 == 'Calculation' ? 'calculated' : type_1.toLowerCase());\n          writer.writeEndElement();\n        }\n        writer.writeStartElement(undefined, 'default', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[textInputProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n        writer.writeStartElement(undefined, 'format', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 && type_1 === 'Text' ? this.getTextFormFieldFormat(formFieldData[textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]]) : formFieldData[textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n        writer.writeEndElement();\n      } else if (formFieldData.hasOwnProperty(checkBoxProperty[this.keywordIndex])) {\n        writer.writeStartElement(undefined, 'checkBox', this.wNamespace);\n        if (formFieldData[checkBoxProperty[this.keywordIndex]][sizeTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Auto')) {\n          writer.writeStartElement(undefined, 'sizeAuto', this.wNamespace);\n          writer.writeEndElement();\n        } else {\n          writer.writeStartElement(undefined, 'size', this.wNamespace);\n          writer.writeAttributeString(undefined, 'val', this.wNamespace, this.roundToTwoDecimal(formFieldData[checkBoxProperty[this.keywordIndex]][sizeProperty[this.keywordIndex]] * 2).toString());\n          writer.writeEndElement();\n        }\n        writer.writeStartElement(undefined, 'defalut', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[checkBoxProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] ? '1' : '0');\n        writer.writeEndElement();\n        if (formFieldData[checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]]) {\n          writer.writeStartElement(undefined, 'checked', this.wNamespace);\n          writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]] ? '1' : '0');\n          writer.writeEndElement();\n        }\n        writer.writeEndElement();\n      } else {\n        writer.writeStartElement(undefined, 'ddList', this.wNamespace);\n        if (formFieldData[dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]] !== 0) {\n          writer.writeStartElement(undefined, 'result', this.wNamespace);\n          writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]].toString());\n          writer.writeEndElement();\n        }\n        for (var i = 0; i < formFieldData[dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]].length; i++) {\n          writer.writeStartElement(undefined, 'listEntry', this.wNamespace);\n          writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]][i].toString());\n          writer.writeEndElement();\n        }\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n    writer.writeEndElement();\n    if (field[fieldTypeProperty[this.keywordIndex]] === 0 && field[fieldTypeProperty[this.keywordIndex]] === 'FieldFormTextInput') {\n      writer.writeStartElement('w', 'r', this.wNamespace);\n      writer.writeStartElement(undefined, 'instrText', this.wNamespace);\n      writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n      writer.writeString('FORMTEXT');\n      writer.writeEndElement();\n      writer.writeEndElement();\n    }\n  };\n  // Serialize the text range.\n  WordExport.prototype.serializeTextRange = function (writer, span, previousNode, efType) {\n    writer.writeStartElement('w', 'r', this.wNamespace);\n    if (!isNullOrUndefined(span[characterFormatProperty[this.keywordIndex]])) {\n      this.serializeCharacterFormat(writer, span[characterFormatProperty[this.keywordIndex]]);\n    }\n    if (span[textProperty[this.keywordIndex]] === '\\t') {\n      writer.writeElementString(undefined, 'tab', this.wNamespace, undefined);\n    } else if (span[textProperty[this.keywordIndex]] === '\\v') {\n      writer.writeElementString(undefined, 'br', this.wNamespace, undefined);\n    } else if (!isNullOrUndefined(span[breakClearTypeProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'br', this.wNamespace);\n      writer.writeAttributeString('w', 'type', this.wNamespace, \"textWrapping\");\n      writer.writeAttributeString('w', 'clear', this.wNamespace, this.getBreakClearType(span[breakClearTypeProperty[this.keywordIndex]]).toString().toLowerCase());\n      writer.writeEndElement();\n    } else if (span[textProperty[this.keywordIndex]] === '\\f') {\n      writer.writeStartElement(undefined, 'br', this.wNamespace);\n      writer.writeAttributeString('w', 'type', this.wNamespace, 'page');\n      writer.writeEndElement();\n    } else if (span[textProperty[this.keywordIndex]] === '\\r') {\n      writer.writeStartElement('w', 'cr', this.wNamespace);\n      writer.writeEndElement();\n    } else if (span[textProperty[this.keywordIndex]] === String.fromCharCode(14)) {\n      writer.writeStartElement(undefined, 'br', this.wNamespace);\n      writer.writeAttributeString('w', 'type', this.wNamespace, 'column');\n      writer.writeEndElement();\n    } else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%02') {\n      writer.writeStartElement(undefined, 'footnoteRef', this.wNamespace);\n      writer.writeEndElement();\n    } else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%02' && efType === 'endnote') {\n      writer.writeStartElement(undefined, 'endnoteRef', this.wNamespace);\n      writer.writeEndElement();\n    } else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%03') {\n      writer.writeStartElement(undefined, 'separator', this.wNamespace);\n      writer.writeEndElement();\n    } else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%04') {\n      writer.writeStartElement(undefined, 'continuationSeparator', this.wNamespace);\n      writer.writeEndElement();\n    } else {\n      var isDeleteText = this.retrieveDeleteRevision(span);\n      var isField = !isNullOrUndefined(previousNode) && previousNode.hasOwnProperty(fieldTypeProperty[this.keywordIndex]) && previousNode[fieldTypeProperty[this.keywordIndex]] !== 2;\n      var localName = isField ? isDeleteText ? 'delInstrText' : 'instrText' : isDeleteText ? 'delText' : 't';\n      writer.writeStartElement(undefined, localName, this.wNamespace);\n      writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n      writer.writeString(span[textProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.retrieveDeleteRevision = function (span) {\n    if (span.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n      if (span[revisionIdsProperty[this.keywordIndex]].length > 0) {\n        for (var i = 0; i < span[revisionIdsProperty[this.keywordIndex]].length; i++) {\n          if (this.retrieveRevision(span[revisionIdsProperty[this.keywordIndex]][i]).revisionType === 'Deletion') {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  // Serializes the paragraph format\n  WordExport.prototype.serializeParagraphFormat = function (writer, paragraphFormat, paragraph, keyindex) {\n    if (isNullOrUndefined(paragraphFormat)) {\n      return;\n    }\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = keyindex;\n    }\n    this.serializeParagraphBorders(writer, paragraphFormat);\n    if (!isNullOrUndefined(paragraphFormat[styleNameProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, paragraphFormat[styleNameProperty[this.keywordIndex]]);\n      writer.writeEndElement(); //end of pStyle\n    }\n    if (!isNullOrUndefined(paragraph)) {\n      this.serializeListFormat(writer, paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]);\n    } else {\n      this.serializeListFormat(writer, paragraphFormat[listFormatProperty[this.keywordIndex]]);\n    }\n    if (HelperMethods.parseBoolValue(paragraphFormat[bidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'bidi', this.wNamespace);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(paragraphFormat[keepWithNextProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'keepNext', this.wNamespace);\n      if (!HelperMethods.parseBoolValue(paragraphFormat[keepWithNextProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n      }\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(paragraphFormat[keepLinesTogetherProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'keepLines', this.wNamespace);\n      if (!HelperMethods.parseBoolValue(paragraphFormat[keepLinesTogetherProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n      }\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(paragraphFormat[outlineLevelProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'outlineLvl', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.getOutlineLevelValue(paragraphFormat[outlineLevelProperty[this.keywordIndex]]).toString());\n      writer.writeEndElement();\n    }\n    this.serializeParagraphSpacing(writer, paragraphFormat);\n    if (!isNullOrUndefined(paragraphFormat[contextualSpacingProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'contextualSpacing', this.wNamespace);\n      if (!HelperMethods.parseBoolValue(paragraphFormat[contextualSpacingProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n      }\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(paragraphFormat[widowControlProperty[this.keywordIndex]])) {\n      writer.writeStartElement('w', 'widowControl', this.wNamespace);\n      if (HelperMethods.parseBoolValue(paragraphFormat[widowControlProperty[this.keywordIndex]])) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, '1');\n      } else {\n        writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n      }\n      writer.writeEndElement();\n    }\n    this.serializeIndentation(writer, paragraphFormat);\n    this.serializeParagraphAlignment(writer, paragraphFormat[textAlignmentProperty[this.keywordIndex]], HelperMethods.parseBoolValue(paragraphFormat[bidiProperty[this.keywordIndex]]));\n    if (!isNullOrUndefined(paragraphFormat[tabsProperty[this.keywordIndex]]) && paragraphFormat[tabsProperty[this.keywordIndex]].length > 0) {\n      this.serializeTabs(writer, paragraphFormat[tabsProperty[this.keywordIndex]]);\n    }\n  };\n  WordExport.prototype.getOutlineLevelValue = function (outlineLvl) {\n    if (this.keywordIndex == 1) {\n      if (outlineLvl > 0) {\n        return outlineLvl - 1;\n      }\n    } else {\n      if (outlineLvl.toString().indexOf('Level') !== -1) {\n        var lvlNumber = parseInt(outlineLvl.toString().substring(5), 10);\n        if (lvlNumber > 0) {\n          return lvlNumber - 1;\n        }\n      }\n    }\n    return 9;\n  };\n  // Serialize Tabs\n  WordExport.prototype.serializeTabs = function (writer, tabStops) {\n    writer.writeStartElement('w', 'tabs', this.wNamespace);\n    for (var i = 0; i < tabStops.length; i++) {\n      this.serializeTab(writer, tabStops[i]);\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeTab = function (writer, tabStop) {\n    var position = 0;\n    writer.writeStartElement('w', 'tab', this.wNamespace);\n    if (tabStop[positionProperty[this.keywordIndex]] === 0 && tabStop[deletePositionProperty[this.keywordIndex]] !== 0) {\n      position = tabStop[deletePositionProperty[this.keywordIndex]] * this.twentiethOfPoint;\n      writer.writeAttributeString('w', 'val', this.wNamespace, 'clear');\n    } else {\n      position = tabStop[positionProperty[this.keywordIndex]] * this.twentiethOfPoint;\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.getTabJustification(tabStop[tabJustificationProperty[this.keywordIndex]]));\n    }\n    if (!isNullOrUndefined(tabStop[tabLeaderProperty[this.keywordIndex]]) && tabStop[tabLeaderProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None')) {\n      writer.writeAttributeString('w', 'leader', this.wNamespace, this.getTabLeader(tabStop[tabLeaderProperty[this.keywordIndex]]));\n    }\n    if (!isNaN(position)) {\n      writer.writeAttributeString('w', 'pos', this.wNamespace, position.toString() + '');\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.getTextWrappingType = function (textWrappingType) {\n    switch (textWrappingType) {\n      case 0:\n        return 'bothSides';\n      case 1:\n        return 'left';\n      case 2:\n        return 'right';\n      case 3:\n        return 'largest';\n      default:\n        return 'bothSides';\n    }\n  };\n  WordExport.prototype.getTextWrappingStyle = function (textWrappingStyle) {\n    switch (textWrappingStyle) {\n      case 1:\n        return 'InFrontOfText';\n      case 2:\n        return 'Square';\n      case 3:\n        return 'TopAndBottom';\n      case 4:\n        return 'Behind';\n      default:\n        return 'Inline';\n    }\n  };\n  WordExport.prototype.getDateStorageFormat = function (dateStorageFormat) {\n    switch (dateStorageFormat) {\n      case 2:\n        return 'DateStorageDateTime';\n      case 3:\n        return 'DateStorageText';\n      default:\n        return 'DateStorageDate';\n    }\n  };\n  WordExport.prototype.getDateCalendarType = function (dateCalendarType) {\n    switch (dateCalendarType) {\n      case 1:\n        return 'GregorianArabic';\n      case 2:\n        return 'GregorianEnglish';\n      case 3:\n        return 'GregorianMiddleEastFrench';\n      case 4:\n        return 'GregorianTransliteratedEnglish';\n      case 5:\n        return 'GregorianTransliteratedFrench';\n      case 6:\n        return 'Hebrew';\n      case 7:\n        return 'Hijri';\n      case 8:\n        return 'Japan';\n      case 9:\n        return 'Korean';\n      case 10:\n        return 'Saka';\n      case 11:\n        return 'Taiwan';\n      case 12:\n        return 'Thai';\n      default:\n        return 'Gregorian';\n    }\n  };\n  WordExport.prototype.getContentControlAppearance = function (contentControlAppearance) {\n    switch (contentControlAppearance) {\n      case 2:\n        return 'Hidden';\n      case 3:\n        return 'Tags';\n      default:\n        return 'BoundingBox';\n    }\n  };\n  WordExport.prototype.getTextFormFieldFormat = function (textFormFieldFormat) {\n    switch (textFormFieldFormat) {\n      case 1:\n        return 'FirstCapital';\n      case 2:\n        return 'Lowercase';\n      case 3:\n        return 'Uppercase';\n      case 4:\n        return 'Titlecase';\n      default:\n        return 'None';\n    }\n  };\n  WordExport.prototype.getTextFormFieldType = function (textFormFieldType) {\n    switch (textFormFieldType) {\n      case 1:\n        return 'Number';\n      case 2:\n        return 'Date';\n      case 3:\n        return 'Calculation';\n      default:\n        return 'Text';\n    }\n  };\n  WordExport.prototype.getTabLeader = function (tabLeader) {\n    switch (tabLeader) {\n      case 'Dot':\n      case 2:\n        return 'dot';\n      case 'Hyphen':\n      case 3:\n        return 'hyphen';\n      case 'Underscore':\n      case 4:\n        return 'underscore';\n      default:\n        return 'none';\n    }\n  };\n  WordExport.prototype.getTabJustification = function (tabJustification) {\n    switch (tabJustification) {\n      case 'Bar':\n      case 0:\n        return 'left';\n      case 1:\n        return 'bar';\n      case 'Center':\n      case 2:\n        return 'center';\n      case 'Decimal':\n      case 3:\n        return 'decimal';\n      case 'Left':\n        return 'left';\n      case 'List':\n      case 4:\n        return 'num';\n      case 'Right':\n      case 5:\n        return 'right';\n      default:\n        return 'clear';\n    }\n  };\n  WordExport.prototype.getTableVerticalAlignment = function (tableVerticalPosition) {\n    switch (tableVerticalPosition) {\n      case 1:\n        return 'top';\n      case 2:\n        return 'center';\n      case 3:\n        return 'bottom';\n      case 4:\n        return 'inside';\n      case 5:\n        return 'outside';\n      default:\n        return 'none';\n    }\n  };\n  WordExport.prototype.getTableHorizontalAlignment = function (tableHorizontalPosition) {\n    switch (tableHorizontalPosition) {\n      case 1:\n        return 'center';\n      case 2:\n        return 'inside';\n      case 3:\n        return 'outside';\n      case 4:\n        return 'right';\n      default:\n        return 'left';\n    }\n  };\n  WordExport.prototype.getTableVerticalRelationEnumValue = function (tableRelation) {\n    switch (tableRelation) {\n      case 'Paragraph':\n        return 0;\n      case 'Margin':\n        return 1;\n      case 'Page':\n        return 2;\n      default:\n        return 0;\n    }\n  };\n  WordExport.prototype.getTableVerticalRelation = function (tableRelation) {\n    switch (tableRelation) {\n      case 1:\n        return 'Margin';\n      case 2:\n        return 'Page';\n      default:\n        return 'Paragraph';\n    }\n  };\n  WordExport.prototype.getTableHorizontalRelation = function (tableRelation) {\n    switch (tableRelation) {\n      case 1:\n        return 'Margin';\n      case 2:\n        return 'Page';\n      default:\n        return 'Column';\n    }\n  };\n  WordExport.prototype.getVerticalOrigin = function (verticalOrigin) {\n    switch (verticalOrigin) {\n      case 1:\n        return 'BottomMargin';\n      case 2:\n        return 'InsideMargin';\n      case 3:\n        return 'Line';\n      case 4:\n        return 'Margin';\n      case 5:\n        return 'OutsideMargin';\n      case 6:\n        return 'Page';\n      case 7:\n        return 'TopMargin';\n      default:\n        return 'Paragraph';\n    }\n  };\n  WordExport.prototype.getHorizontalOrigin = function (horizontalOrigin) {\n    switch (horizontalOrigin) {\n      case 1:\n        return 'Character';\n      case 2:\n        return 'InsideMargin';\n      case 3:\n        return 'LeftMargin';\n      case 4:\n        return 'Margin';\n      case 5:\n        return 'OutsideMargin';\n      case 6:\n        return 'Page';\n      case 7:\n        return 'RightMargin';\n      default:\n        return 'Column';\n    }\n  };\n  WordExport.prototype.getShapeVerticalAlignment = function (shapeVerticalAlignment) {\n    switch (shapeVerticalAlignment) {\n      case 1:\n        return 'Top';\n      case 2:\n        return 'Center';\n      case 3:\n        return 'Bottom';\n      case 4:\n        return 'Inline';\n      case 5:\n        return 'Inside';\n      case 6:\n        return 'Outside';\n      default:\n        return 'None';\n    }\n  };\n  WordExport.prototype.getShapeHorizontalAlignment = function (shapeHorizontalAlignment) {\n    switch (shapeHorizontalAlignment) {\n      case 1:\n        return 'Center';\n      case 2:\n        return 'Inside';\n      case 3:\n        return 'Left';\n      case 4:\n        return 'Outside';\n      case 5:\n        return 'Right';\n      default:\n        return 'None';\n    }\n  };\n  WordExport.prototype.getBiDirectionalOverride = function (biDirectionalOverride) {\n    switch (biDirectionalOverride) {\n      case 1:\n        return 'LTR';\n      case 2:\n        return 'RTL';\n      default:\n        return 'None';\n    }\n  };\n  WordExport.prototype.getBreakClearType = function (breakClearType) {\n    switch (breakClearType) {\n      case 0:\n        return 'None';\n      case 1:\n        return 'Left';\n      case 2:\n        return 'Right';\n      case 3:\n        return 'All';\n      default:\n        return breakClearType;\n    }\n  };\n  // // Seraializes the pargraph list format\n  // private serializeListParagraph(writer: XmlWriter, paragraph: any): void {\n  //     if (!isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n  //         this.serializeListFormat(writer, paragraph.paragraphFormat.listFormat);\n  //     }\n  // }\n  // Serialize the list format\n  WordExport.prototype.serializeListFormat = function (writer, lf) {\n    // let pStyleName = undefined;\n    // if (lf.CurrentListStyle.IsBuiltInStyle && !isNullOrUndefined(lf.OwnerParagraph))\n    // {\n    //     pStyleName = lf.OwnerParagraph.StyleName;\n    // }\n    // int listId = GetListId(lf);\n    // if (!isNullOrUndefined(pStyleName) && string.IsNullOrEmpty(lf.LFOStyleName)) \n    // {\n    //     WordDocument doc = lf.OwnerParagraph.Document;\n    //     WParagraphStyle style = doc.Styles.FindByName(pStyleName, StyleType.ParagraphStyle) as WParagraphStyle;\n    //     if (style.ListIndex === -1)\n    //     {\n    //         ListStyle lstStyle = lf.OwnerParagraph.Document.ListStyles.FindByName(lf.CustomStyleName);\n    //         style.ListIndex = listId;\n    //         if (lstStyle.Levels.length > 1)\n    //         {\n    //             style.ListLevel = lf.ListLevelNumber;\n    //         }\n    //         pStyleName = pStyleName.Replace(' ', '');\n    //         lstStyle.Levels[lf.ListLevelNumber].ParaStyleName = pStyleName;\n    //     }\n    // }\n    // else\n    // {\n    // if (!isNullOrUndefined(lf.listId) && !isNullOrUndefined(lf.listLevelNumber)) {\n    //     this.serializeNumPr(writer, lf.listId, lf.listLevelNumber);\n    // }\n    // }\n    if (!isNullOrUndefined(lf[listIdProperty[this.keywordIndex]]) || !isNullOrUndefined(lf[listLevelNumberProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'numPr', this.wNamespace);\n      if (!isNullOrUndefined(lf[listLevelNumberProperty[this.keywordIndex]]) && lf[listLevelNumberProperty[this.keywordIndex]] !== -1) {\n        writer.writeStartElement(undefined, 'ilvl', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, lf[listLevelNumberProperty[this.keywordIndex]].toString());\n        writer.writeEndElement();\n      }\n      if (!isNullOrUndefined(lf[listIdProperty[this.keywordIndex]])) {\n        writer.writeStartElement(undefined, 'numId', this.wNamespace);\n        var listId = (lf[listIdProperty[this.keywordIndex]] + 1).toString();\n        // When attempting to open the exported document in tika server, the empty listId value is having trouble.So commented this below lines\n        // if (lf[listIdProperty[this.keywordIndex]] === -1) {\n        //     listId = '';\n        // }\n        writer.writeAttributeString('w', 'val', this.wNamespace, listId);\n        writer.writeEndElement();\n      }\n      writer.writeEndElement();\n    }\n  };\n  // // Serializes the numbering properties to the paragraph\n  // private serializeNumPr(writer: XmlWriter, listId: number, listLevel: number): void {\n  //     writer.writeStartElement(undefined, 'numPr', this.wNamespace);\n  //     if (listLevel !== -1) {\n  //         writer.writeStartElement(undefined, 'ilvl', this.wNamespace);\n  //         writer.writeAttributeString('w', 'val', this.wNamespace, listLevel.toString());\n  //         writer.writeEndElement();\n  //     }\n  //     if (listId !== -1) {\n  //         writer.writeStartElement(undefined, 'numId', this.wNamespace);\n  //         writer.writeAttributeString('w', 'val', this.wNamespace, listId.toString());\n  //         writer.writeEndElement();\n  //     }\n  //     writer.writeEndElement();\n  // }\n  WordExport.prototype.serializeParagraphAlignment = function (writer, txtAlignment, isBidi) {\n    if (!isNullOrUndefined(txtAlignment)) {\n      writer.writeStartElement(undefined, 'jc', this.wNamespace);\n      var alignment = void 0;\n      switch (txtAlignment) {\n        case 'Center':\n        case 1:\n          alignment = 'center';\n          break;\n        case 'Right':\n        case 2:\n          alignment = 'right';\n          break;\n        case 'Justify':\n        case 3:\n          alignment = 'both';\n          break;\n        default:\n          alignment = 'left';\n          break;\n      }\n      writer.writeAttributeString('w', 'val', this.wNamespace, alignment);\n      writer.writeEndElement();\n    }\n  };\n  // Serializes the paragraph spacings\n  WordExport.prototype.serializeParagraphSpacing = function (writer, paragraphFormat) {\n    writer.writeStartElement(undefined, 'spacing', this.wNamespace);\n    // if (paragraphFormat.HasValue(WParagraphFormat.BeforeLinesKey))\n    // {\n    //     short beforeLines = (short)Math.Round(paragraphFormat.BeforeLines * DLSConstants.HundredthsUnit);\n    //     writer.WriteAttributeString('beforeLines', this.wNamespace, ToString((float)beforeLines));               \n    // }\n    // if (paragraphFormat.HasValue(WParagraphFormat.AfterLinesKey))\n    // {\n    //     short afterLines = (short)Math.Round(paragraphFormat.AfterLines * DLSConstants.HundredthsUnit);\n    //     writer.WriteAttributeString('afterLines', this.wNamespace, ToString((float)afterLines));                 \n    // }\n    if (!isNullOrUndefined(paragraphFormat[beforeSpacingProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'before', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[beforeSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    }\n    if (!isNullOrUndefined(paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]])) {\n      var value = this.keywordIndex == 1 ? paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]].toString() : paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]] ? \"1\" : \"0\";\n      writer.writeAttributeString(undefined, 'beforeAutospacing', this.wNamespace, value);\n    }\n    //TODO:ISSUEFIX(paragraphFormat.beforeSpacing * this.twentiethOfPoint).toString());\n    // if (paragraphFormat.HasValue(WParagraphFormat.SpacingBeforeAutoKey))\n    // {\n    //     if (paragraphFormat.SpaceBeforeAuto)\n    //     {\n    //         writer.WriteAttributeString('beforeAutospacing', this.wNamespace, '1');\n    //     }\n    //     else\n    //     {\n    //         writer.WriteAttributeString('beforeAutospacing', this.wNamespace, '0');\n    //     }\n    // }\n    if (!isNullOrUndefined(paragraphFormat[afterSpacingProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'after', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[afterSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n    }\n    if (!isNullOrUndefined(paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]])) {\n      var value = this.keywordIndex == 1 ? paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]].toString() : paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]] ? \"1\" : \"0\";\n      writer.writeAttributeString(undefined, 'afterAutospacing', this.wNamespace, value);\n    }\n    //TODO:ISSUEFIX(paragraphFormat.afterSpacing * this.twentiethOfPoint).toString());\n    // if (paragraphFormat.HasValue(WParagraphFormat.SpacingAfterAutoKey))\n    // {\n    //     if (paragraphFormat.SpaceAfterAuto)\n    //     {\n    //         writer.WriteAttributeString('afterAutospacing', this.wNamespace, '1');\n    //     }\n    //     else\n    //     {\n    //         writer.WriteAttributeString('afterAutospacing', this.wNamespace, '0');\n    //     }\n    // }\n    //TODO:ISSUEFIX((paragraphFormat.lineSpacing) * this.twentiethOfPoint).toString());\n    // lineSpacingType has enum values 0,1,2 for AtLeast, Exactly and Multiple respectively\n    if (!isNullOrUndefined(paragraphFormat[lineSpacingProperty[this.keywordIndex]])) {\n      var lineSpacingValue = paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'AtLeast') || paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Exactly') ? this.roundToTwoDecimal(paragraphFormat[lineSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint) : this.roundToTwoDecimal(paragraphFormat[lineSpacingProperty[this.keywordIndex]] * 240);\n      writer.writeAttributeString(undefined, 'line', this.wNamespace, lineSpacingValue.toString());\n    }\n    if (!isNullOrUndefined(paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]])) {\n      var lineSpacingType = 'auto';\n      if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'AtLeast')) {\n        lineSpacingType = 'atLeast';\n      } else if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Exactly')) {\n        lineSpacingType = 'exact';\n      }\n      writer.writeAttributeString(undefined, 'lineRule', this.wNamespace, lineSpacingType);\n    }\n    writer.writeEndElement();\n  };\n  // Serializes the paragraph indentation\n  WordExport.prototype.serializeIndentation = function (writer, paragraphFormat) {\n    writer.writeStartElement(undefined, 'ind', this.wNamespace);\n    if (!isNullOrUndefined(paragraphFormat[leftIndentProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'left', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[leftIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n    }\n    if (!isNullOrUndefined(paragraphFormat[rightIndentProperty[this.keywordIndex]])) {\n      writer.writeAttributeString(undefined, 'right', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[rightIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n    }\n    if (!isNullOrUndefined(paragraphFormat[firstLineIndentProperty[this.keywordIndex]])) {\n      if (paragraphFormat[firstLineIndentProperty[this.keywordIndex]] < 0) {\n        writer.writeAttributeString(undefined, 'hanging', this.wNamespace, this.roundToTwoDecimal(-1 * paragraphFormat[firstLineIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n      } else {\n        writer.writeAttributeString(undefined, 'firstLine', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[firstLineIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n      }\n    }\n    writer.writeEndElement();\n  };\n  //creates custom xml mapping\n  WordExport.prototype.serializeCustomXMLMapping = function (customXML, writer) {\n    if (customXML.length > 0) {\n      var keys = customXML.keys;\n      for (var i = 0; i < keys.length; i++) {\n        var customXmlWriter = new XmlWriter();\n        customXmlWriter.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        var xmlData = this.mCustomXML.get(keys[i]);\n        var itemID = keys[i];\n        var id = this.getNextRelationShipID();\n        var fileIndex = i + 1;\n        var itemPath = this.createXMLItem(xmlData, id, fileIndex);\n        var itemPropsPath = this.createXMLItemProps(itemID, fileIndex);\n        this.serializeRelationShip(writer, id, this.customXmlRelType, '../' + itemPath);\n        this.customXMLRelation(customXmlWriter, fileIndex, itemPropsPath);\n        customXmlWriter.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(customXmlWriter.buffer, this.customXMLRelPath + fileIndex + '.xml.rels');\n        this.mArchive.addItem(zipArchiveItem);\n      }\n    }\n  };\n  WordExport.prototype.customXMLRelation = function (writer, fileIndex, itemPropsPath) {\n    this.serializeRelationShip(writer, 'rId1', this.wordMLCustomXmlPropsRelType, itemPropsPath);\n  };\n  WordExport.prototype.createXMLItem = function (xmlData, id, fileIndex) {\n    var xmlBlob = new Blob([xmlData], {\n      type: 'text/plain'\n    });\n    var itemPath = this.customXMLItemsPath + fileIndex + '.xml';\n    var zipArchiveItem = new ZipArchiveItem(xmlBlob, itemPath);\n    this.mArchive.addItem(zipArchiveItem);\n    return itemPath;\n  };\n  WordExport.prototype.createXMLItemProps = function (itemID, fileIndex) {\n    var writer = new XmlWriter();\n    var customitemPropsPath = this.customXMLItemsPropspath + fileIndex + '.xml';\n    var itemPropsPath = this.itemPropsPath + fileIndex + '.xml';\n    writer.writeStartElement('ds', 'datastoreItem', this.wNamespace);\n    writer.writeAttributeString('ds', 'itemID', undefined, itemID);\n    writer.writeAttributeString('xmlns', 'ds', undefined, this.dsNamespace);\n    writer.writeEndElement();\n    this.customXMLProps.push(customitemPropsPath);\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, customitemPropsPath);\n    this.mArchive.addItem(zipArchiveItem);\n    return itemPropsPath;\n  };\n  // Serialize the styles (styles.xml)\n  WordExport.prototype.serializeStyles = function () {\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'styles', this.wNamespace);\n    writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n    writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n    writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n    //writes the document defaults, latent styles and default styles.\n    this.serializeDefaultStyles(writer);\n    //writes the document styles\n    this.serializeDocumentStyles(writer);\n    writer.writeEndElement(); //end of styles tag\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.stylePath);\n    this.mArchive.addItem(zipArchiveItem); //this.stylePath, styleStream, false, FileAttributes.Archive);\n  };\n  // Serializes the default styles (document default paragraph and character format)\n  WordExport.prototype.serializeDefaultStyles = function (writer) {\n    writer.writeStartElement(undefined, 'docDefaults', this.wNamespace);\n    //if (HasDefaultCharFormat())\n    //{\n    writer.writeStartElement(undefined, 'rPrDefault', this.wNamespace);\n    // if (!isNullOrUndefined(this.mDocument.characterFormat)) {\n    this.serializeCharacterFormat(writer, this.defCharacterFormat);\n    writer.writeEndElement(); // end of rPrDefault\n    // }\n    // else {\n    //     writer.writeStartElement(undefined, 'rPr', this.wNamespace);\n    //     writer.writeStartElement(undefined, 'rFonts', this.wNamespace);\n    //     if (!string.IsNullOrEmpty(m_document.StandardAsciiFont))\n    //         writer.WriteAttributeString('ascii', this.wNamespace, m_document.StandardAsciiFont);\n    //     if (!string.IsNullOrEmpty(m_document.StandardFarEastFont))\n    //         writer.WriteAttributeString('eastAsia', this.wNamespace, m_document.StandardFarEastFont);\n    //     if (!string.IsNullOrEmpty(m_document.StandardNonFarEastFont))\n    //         writer.WriteAttributeString('hAnsi', this.wNamespace, m_document.StandardNonFarEastFont);\n    //     if (!string.IsNullOrEmpty(m_document.StandardBidiFont))\n    //         writer.WriteAttributeString('cs', this.wNamespace, m_document.StandardBidiFont);\n    //     writer.WriteEndElement();\n    //     float fontSize = GetDefFontSize(m_document, WCharacterFormat.FontSizeKey);\n    //     if (fontSize !== 0f)\n    //     {\n    //         writer.WriteStartElement('sz', this.wNamespace);\n    //         writer.WriteAttributeString('val', this.wNamespace, (fontSize * 2).ToString(CultureInfo.InvariantCulture));\n    //         writer.WriteEndElement();\n    //     }\n    //     fontSize = GetDefFontSize(m_document, WCharacterFormat.FontSizeBidiKey);\n    //     if (fontSize !== 0f)\n    //     {\n    //         writer.WriteStartElement('szCs', this.wNamespace);\n    //         writer.WriteAttributeString('val', this.wNamespace, (fontSize * 2).ToString(CultureInfo.InvariantCulture));\n    //         writer.WriteEndElement();\n    //     }\n    //     writer.WriteEndElement();\n    // }\n    // writer.WriteEndElement();\n    // //}\n    writer.writeStartElement(undefined, 'pPrDefault', this.wNamespace);\n    if (!isNullOrUndefined(this.defParagraphFormat)) {\n      writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n      this.serializeParagraphFormat(writer, this.defParagraphFormat, undefined);\n      writer.writeEndElement(); //end of pPr\n    }\n    writer.writeEndElement(); //end of pPrDefault\n    // writer.WriteEndElement();\n    // SerializeLatentStyles();\n    // //Default styles\n    // if (m_document.Styles.length === 0 || isNullOrUndefined(m_document.Styles.FindByName('Normal')))\n    // {\n    //     SerializeDefaultParagraphStyle();\n    // }\n    // if (!IsDocumentContainsDefaultTableStyle())\n    // {\n    //     SerializeTableNormalStyle();\n    // }\n    // if (isNullOrUndefined(m_document.Styles.FindByName('No List')) && isNullOrUndefined(m_document.Styles.FindByName('NoList')))\n    //     SerializeNoListStyle();\n    // if (isNullOrUndefined(m_document.Styles.FindByName('Table Grid')) && isNullOrUndefined(m_document.Styles.FindByName('TableGrid')))\n    // {\n    //     SerializeTableGridStyle();\n    // }\n    // }        \n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeDocumentStyles = function (writer) {\n    for (var i = 0; i < this.mStyles.length; i++) {\n      var style = this.mStyles[i];\n      writer.writeStartElement(undefined, 'style', this.wNamespace);\n      var type = this.getStyleType(style[typeProperty[this.keywordIndex]]);\n      writer.writeAttributeString('w', 'type', this.wNamespace, type);\n      writer.writeAttributeString('w', 'styleId', this.wNamespace, style[nameProperty[this.keywordIndex]]);\n      //name\n      writer.writeStartElement(undefined, 'name', this.wNamespace);\n      var list = [\"TOC 1\", \"TOC 2\", \"TOC 3\", \"TOC 4\", \"TOC 5\", \"TOC 6\", \"TOC 7\", \"TOC 8\", \"TOC 9\"];\n      if (list.indexOf(style[nameProperty[this.keywordIndex]]) != -1) {\n        writer.writeAttributeString('w', 'val', this.wNamespace, style[nameProperty[this.keywordIndex]].toLowerCase());\n      } else {\n        writer.writeAttributeString('w', 'val', this.wNamespace, style[nameProperty[this.keywordIndex]]);\n      }\n      writer.writeEndElement();\n      //basedOn\n      if (!isNullOrUndefined(style[basedOnProperty[this.keywordIndex]])) {\n        writer.writeStartElement(undefined, 'basedOn', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, style[basedOnProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      //next\n      if (!isNullOrUndefined(style[nextProperty[this.keywordIndex]])) {\n        writer.writeStartElement(undefined, 'next', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, style[nextProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      //link\n      if (!isNullOrUndefined(style[linkProperty[this.keywordIndex]])) {\n        writer.writeStartElement(undefined, 'link', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, style[linkProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n      }\n      if (style[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Paragraph')) {\n        writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n        this.serializeParagraphFormat(writer, style[paragraphFormatProperty[this.keywordIndex]], undefined);\n        writer.writeEndElement();\n      }\n      // let value = (style.characterFormat as WCharacterFormat).newgetCharacterFormat();\n      if (style[typeProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 2 : 'Table')) {\n        this.serializeCharacterFormat(writer, style[characterFormatProperty[this.keywordIndex]]);\n      }\n      writer.writeEndElement(); //end of Style\n    }\n  };\n  // Serializes the Character format\n  WordExport.prototype.serializeCharacterFormat = function (writer, characterFormat) {\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = 0;\n    }\n    writer.writeStartElement(undefined, 'rPr', this.wNamespace);\n    if (!isNullOrUndefined(characterFormat[styleNameProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'rStyle', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, characterFormat[styleNameProperty[this.keywordIndex]]);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[fontFamilyProperty[this.keywordIndex]]) || !isNullOrUndefined(characterFormat[fontFamilyBidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'rFonts', this.wNamespace);\n      if (!isNullOrUndefined(characterFormat[fontFamilyAsciiProperty[this.keywordIndex]])) {\n        var key = HelperMethods.isThemeFont(characterFormat[fontFamilyAsciiProperty[this.keywordIndex]]) ? 'asciiTheme' : 'ascii';\n        writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyAsciiProperty[this.keywordIndex]]);\n      }\n      if (!isNullOrUndefined(characterFormat[fontFamilyFarEastProperty[this.keywordIndex]])) {\n        var key = HelperMethods.isThemeFont(characterFormat[fontFamilyFarEastProperty[this.keywordIndex]]) ? 'eastAsiaTheme' : 'eastAsia';\n        writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyFarEastProperty[this.keywordIndex]]);\n      }\n      if (!isNullOrUndefined(characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]])) {\n        var key = HelperMethods.isThemeFont(characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]]) ? 'hAnsiTheme' : 'hAnsi';\n        writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]]);\n      }\n      if (!isNullOrUndefined(characterFormat[fontFamilyBidiProperty[this.keywordIndex]])) {\n        var key = HelperMethods.isThemeFont(characterFormat[fontFamilyBidiProperty[this.keywordIndex]]) ? 'cstheme' : 'cs';\n        writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyBidiProperty[this.keywordIndex]]);\n      }\n      writer.writeEndElement(); //end         \n    }\n    if (!isNullOrUndefined(characterFormat[boldProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'b', HelperMethods.parseBoolValue(characterFormat[boldProperty[this.keywordIndex]]));\n    }\n    if (HelperMethods.parseBoolValue(characterFormat[boldBidiProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'bCs', HelperMethods.parseBoolValue(characterFormat[boldBidiProperty[this.keywordIndex]]));\n    }\n    if (!isNullOrUndefined(characterFormat[italicProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'i', HelperMethods.parseBoolValue(characterFormat[italicProperty[this.keywordIndex]]));\n    }\n    if (!isNullOrUndefined(characterFormat[italicBidiProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'iCs', HelperMethods.parseBoolValue(characterFormat[italicBidiProperty[this.keywordIndex]]));\n    }\n    if (HelperMethods.parseBoolValue(characterFormat[bidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'rtl', this.wNamespace);\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[allCapsProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'caps', HelperMethods.parseBoolValue(characterFormat[allCapsProperty[this.keywordIndex]]));\n    }\n    if (HelperMethods.parseBoolValue(characterFormat[complexScriptProperty[this.keywordIndex]])) {\n      this.serializeBoolProperty(writer, 'cs', HelperMethods.parseBoolValue(characterFormat[complexScriptProperty[this.keywordIndex]]));\n    }\n    if (!isNullOrUndefined(characterFormat[strikethroughProperty[this.keywordIndex]])) {\n      switch (characterFormat[strikethroughProperty[this.keywordIndex]]) {\n        case 'SingleStrike':\n        case 1:\n          this.serializeBoolProperty(writer, 'strike', true);\n          break;\n        case 'DoubleStrike':\n        case 2:\n          this.serializeBoolProperty(writer, 'dstrike', true);\n          break;\n        default:\n          this.serializeBoolProperty(writer, 'strike', false);\n          this.serializeBoolProperty(writer, 'dstrike', false);\n          break;\n      }\n    }\n    if (!isNullOrUndefined(characterFormat[fontColorProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'color', this.wNamespace);\n      // \"empty\" is old value used for auto color till v19.2.49. It is maintained for backward compatibility.\n      if (characterFormat[fontColorProperty[this.keywordIndex]] === 'empty' || characterFormat[fontColorProperty[this.keywordIndex]] === '#00000000') {\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'auto');\n      } else {\n        writer.writeAttributeString('w', 'val', this.wNamespace, this.getColor(characterFormat[fontColorProperty[this.keywordIndex]]));\n      }\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[fontSizeProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'sz', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.roundToTwoDecimal(characterFormat[fontSizeProperty[this.keywordIndex]] * 2).toString());\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[characterSpacingProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'spacing', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, (characterFormat[characterSpacingProperty[this.keywordIndex]] * 20).toString());\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[scalingProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'w', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, characterFormat[scalingProperty[this.keywordIndex]].toString());\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[fontSizeBidiProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'szCs', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.roundToTwoDecimal(characterFormat[fontSizeBidiProperty[this.keywordIndex]] * 2).toString());\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[highlightColorProperty[this.keywordIndex]]) && characterFormat[highlightColorProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'NoColor')) {\n      writer.writeStartElement(undefined, 'highlight', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.getHighlightColor(characterFormat[highlightColorProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[revisionIdsProperty[this.keywordIndex]]) && characterFormat[revisionIdsProperty[this.keywordIndex]].length > 0) {\n      this.serializeRevisionStart(writer, characterFormat, undefined);\n      this.serializeRevisionEnd(writer, characterFormat, undefined);\n    }\n    if (!isNullOrUndefined(characterFormat[underlineProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'u', this.wNamespace);\n      writer.writeAttributeString('w', 'val', this.wNamespace, this.getUnderlineStyle(characterFormat[underlineProperty[this.keywordIndex]]));\n      writer.writeEndElement();\n    }\n    if (!isNullOrUndefined(characterFormat[baselineAlignmentProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'vertAlign', this.wNamespace);\n      switch (characterFormat[baselineAlignmentProperty[this.keywordIndex]]) {\n        case 'Superscript':\n        case 1:\n          writer.writeAttributeString('w', 'val', this.wNamespace, 'superscript');\n          break;\n        case 'Subscript':\n        case 2:\n          writer.writeAttributeString('w', 'val', this.wNamespace, 'subscript');\n          break;\n        default:\n          writer.writeAttributeString('w', 'val', this.wNamespace, 'baseline');\n          break;\n      }\n      writer.writeEndElement();\n    }\n    writer.writeEndElement(); //end of rPrChange\n  };\n  WordExport.prototype.getColor = function (color) {\n    if (color.length > 0) {\n      if (color[0] === '#') {\n        color = color.substr(1);\n      }\n      if (color.length > 6) {\n        color = color.substr(0, 6);\n      }\n    }\n    return color;\n  };\n  WordExport.prototype.getStyleType = function (styleType) {\n    switch (styleType) {\n      case 'Character':\n      case 1:\n        return 'character';\n      case 'Table':\n      case 2:\n        return 'table';\n      default:\n        return 'paragraph';\n    }\n  };\n  // Get the underline style as string\n  WordExport.prototype.getUnderlineStyle = function (underlineStyle) {\n    switch (underlineStyle) {\n      case 'None':\n      case 0:\n        return 'none';\n      case 'Single':\n      case 1:\n        return 'single';\n      case 'Words':\n      case 2:\n        return 'words';\n      case 'Double':\n      case 3:\n        return 'double';\n      case 'Dotted':\n      case 4:\n        return 'dotted';\n      case 'Thick':\n      case 5:\n        return 'thick';\n      case 6:\n        return 'dash';\n      case 'DashLong':\n      case 7:\n        return 'dashLong';\n      case 'DotDash':\n      case 8:\n        return 'dotDash';\n      case 'DotDotDash':\n      case 9:\n        return 'dotDotDash';\n      case 'Wavy':\n      case 10:\n        return 'wave';\n      case 'DottedHeavy':\n      case 11:\n        return 'dottedHeavy';\n      case 'DashHeavy':\n      case 12:\n        return 'dashedHeavy';\n      case 'DashLongHeavy':\n      case 13:\n        return 'dashLongHeavy';\n      case 'DotDashHeavy':\n      case 14:\n        return 'dashDotHeavy';\n      case 'DotDotDashHeavy':\n      case 15:\n        return 'dashDotDotHeavy';\n      case 'WavyHeavy':\n      case 16:\n        return 'wavyHeavy';\n      case 'WavyDouble':\n      case 17:\n        return 'wavyDouble';\n      default:\n        return 'dash';\n    }\n  };\n  WordExport.prototype.getHighlightColor = function (highlight) {\n    switch (highlight) {\n      // Highlights the content with bright green (#ff00ff00) color.\n      case 'BrightGreen':\n      case 2:\n        return 'green';\n      // Highlights the content with turquoise (#ff00ffff) color.\n      case 'Turquoise':\n      case 3:\n        return 'cyan';\n      // Highlights the content with pink (#ffff00ff) color.\n      case 'Pink':\n      case 4:\n        return 'magenta';\n      // Highlights the content with blue (#ff0000ff) color.\n      case 'Blue':\n      case 5:\n        return 'blue';\n      // Highlights the content with red (#ffff0000) color.\n      case 'Red':\n      case 6:\n        return 'red';\n      // Highlights the content with dark blue (#ff000080) color.\n      case 'DarkBlue':\n      case 7:\n        return 'darkBlue';\n      // Highlights the content with teal (#ff008080) color.\n      case 'Teal':\n      case 8:\n        return 'darkCyan';\n      // Highlights the content with green (#ff008000) color.\n      case 'Green':\n      case 9:\n        return 'darkGreen';\n      // Highlights the content with violet (#ff800080) color.\n      case 'Violet':\n      case 10:\n        return 'darkMagenta';\n      // Highlights the content with dark red (#ff800000) color.\n      case 'DarkRed':\n      case 11:\n        return 'darkRed';\n      // Highlights the content with dark yellow (#ff808000)  color.\n      case 'DarkYellow':\n      case 12:\n        return 'darkYellow';\n      // Highlights the content with gray 50 (#ff808080) color.\n      case 'Gray50':\n      case 13:\n        return 'darkGray';\n      // Highlights the content with gray 25 (#ffc0c0c0) color.\n      case 'Gray25':\n      case 14:\n        return 'lightGray';\n      // Highlights the content with black (#ff000000) color.\n      case 'Black':\n      case 15:\n        return 'black';\n      // Highlights the content with yellow (#ffffff00) color.\n      default:\n        return 'yellow';\n    }\n  };\n  /*private toggleFirstCahar(text: string) {\n      return text.charAt(0).toLowerCase() + text.slice(1);\n  }*/\n  // Serializes the bool character format property\n  WordExport.prototype.serializeBoolProperty = function (writer, tag, value) {\n    writer.writeStartElement(undefined, tag, this.wNamespace);\n    if (!value) {\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, '0');\n    }\n    writer.writeEndElement();\n  };\n  // Serialize the list styles and numberings (numberings.xml)\n  WordExport.prototype.serializeNumberings = function () {\n    if (this.document[listsProperty[this.keywordIndex]].length === 0) {\n      return;\n    }\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'numbering', this.wNamespace);\n    this.writeCommonAttributeStrings(writer);\n    // this.serializePictureBullets(writer, this.mDocument.lists);\n    this.serializeAbstractListStyles(writer, this.document[abstractListsProperty[this.keywordIndex]]);\n    this.serializeListInstances(writer, this.document[listsProperty[this.keywordIndex]]);\n    // SerializeListOverrides(writer, this.mDocument.ridesm_document.ListOverrides);\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.numberingPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  // Serializes the abstract list styles\n  WordExport.prototype.serializeAbstractListStyles = function (writer, listStyles) {\n    for (var i = 0; i < listStyles.length; i++) {\n      var abstractList = listStyles[i];\n      writer.writeStartElement(undefined, 'abstractNum', this.wNamespace);\n      writer.writeAttributeString(undefined, 'abstractNumId', this.wNamespace, abstractList[abstractListIdProperty[this.keywordIndex]].toString());\n      writer.writeStartElement(undefined, 'nsid', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, this.generateHex());\n      writer.writeEndElement();\n      for (var ilvl = 0, cnt = abstractList[levelsProperty[this.keywordIndex]].length; ilvl < cnt; ilvl++) {\n        this.serializeListLevel(writer, abstractList[levelsProperty[this.keywordIndex]][ilvl], ilvl);\n      }\n      writer.writeEndElement(); //end of abstractNum\n    }\n  };\n  // Serializes the list styles\n  WordExport.prototype.serializeListInstances = function (writer, listStyles) {\n    for (var i = 0; i < listStyles.length; i++) {\n      var list = listStyles[i];\n      writer.writeStartElement(undefined, 'num', this.wNamespace);\n      writer.writeAttributeString(undefined, 'numId', this.wNamespace, (list[listIdProperty[this.keywordIndex]] + 1).toString());\n      writer.writeStartElement(undefined, 'abstractNumId', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, list[abstractListIdProperty[this.keywordIndex]].toString());\n      writer.writeEndElement();\n      for (var lvl = 0, cnt = list[levelOverridesProperty[this.keywordIndex]].length; lvl < cnt; lvl++) {\n        this.serializeLevelOverrides(writer, list[levelOverridesProperty[this.keywordIndex]][lvl], list[levelOverridesProperty[this.keywordIndex]][lvl][levelNumberProperty[this.keywordIndex]]);\n      }\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.generateHex = function () {\n    return (Math.floor(Math.random() * (4000000000 - 270000000)) + 270000000).toString(16).toUpperCase();\n  };\n  WordExport.prototype.roundToTwoDecimal = function (num) {\n    return Math.round(num); // * 100) / 100;\n  };\n  // Serialize the list level\n  WordExport.prototype.serializeListLevel = function (writer, listLevel, levelIndex) {\n    writer.writeStartElement(undefined, 'lvl', this.wNamespace);\n    writer.writeAttributeString(undefined, 'ilvl', this.wNamespace, levelIndex.toString());\n    if (!isNullOrUndefined(listLevel[isLegalStyleNumberingProperty[this.keywordIndex]]) && listLevel[isLegalStyleNumberingProperty[this.keywordIndex]]) {\n      writer.writeElementString(undefined, 'isLgl', this.wNamespace, undefined);\n    }\n    writer.writeStartElement(undefined, 'start', this.wNamespace);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[startAtProperty[this.keywordIndex]].toString());\n    writer.writeEndElement();\n    writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getLevelPattern(listLevel[listLevelPatternProperty[this.keywordIndex]]));\n    writer.writeEndElement();\n    if (!isNullOrUndefined(listLevel[paraStyleNameProperty[this.keywordIndex]]) && listLevel[paraStyleNameProperty[this.keywordIndex]].toString() !== '') {\n      writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[paraStyleNameProperty[this.keywordIndex]].toString());\n      writer.writeEndElement();\n    }\n    // if (listLevel.restartLevel > 0) {\n    //     writer.writeStartElement(undefined, 'lvlRestart', this.wNamespace);\n    //     writer.writeAttributeString(undefined, 'val', this.wNamespace, '0');\n    //     writer.writeEndElement();\n    // }\n    // if (!isNullOrUndefined(listLevel.paragraphFormat)) {\n    //     string name = listLevel.ParaStyleName.Substring(0, 1).ToUpper() + listLevel.ParaStyleName.Remove(0, 1);\n    //     writer.WriteStartElement('pStyle', this.wNamespace);\n    //     writer.WriteAttributeString('val', this.wNamespace, name);\n    //     writer.WriteEndElement();\n    // }\n    // if (listLevel.IsLegalStyleNumbering) {\n    //     writer.WriteStartElement('isLgl', this.wNamespace);\n    //     writer.WriteEndElement();\n    // }\n    this.serializeLevelFollow(writer, listLevel);\n    this.serializeLevelText(writer, listLevel, levelIndex + 1);\n    // SerializeLegacyProperties(listLevel);\n    // if (listLevel.PicBulletId > 0) {\n    //     writer.WriteStartElement('lvlPicBulletId', this.wNamespace);\n    //     writer.WriteAttributeString('val', this.wNamespace, listLevel.PicBulletId.ToString());\n    //     writer.WriteEndElement();\n    // }\n    // //lvlJc\n    // if (listLevel.NumberAlignment !== ListNumberAlignment.Left) {\n    //     writer.WriteStartElement('lvlJc', this.wNamespace);\n    //     string alignment = string.Empty;\n    //     if (listLevel.NumberAlignment === ListNumberAlignment.Right) {\n    //         alignment = 'right';\n    //     }\n    //     else {\n    //         alignment = 'center';\n    //     }\n    //     writer.WriteAttributeString('val', this.wNamespace, alignment);\n    //     writer.WriteEndElement();\n    // }\n    writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n    this.serializeParagraphFormat(writer, listLevel[paragraphFormatProperty[this.keywordIndex]], undefined);\n    writer.writeEndElement(); //end of pPr\n    this.serializeCharacterFormat(writer, listLevel[characterFormatProperty[this.keywordIndex]]);\n    writer.writeEndElement();\n  };\n  //Serialize the levelOverrides\n  WordExport.prototype.serializeLevelOverrides = function (writer, listLevel, levelIndex) {\n    writer.writeStartElement(undefined, 'lvlOverride', this.wNamespace);\n    writer.writeAttributeString(undefined, 'ilvl', this.wNamespace, levelIndex.toString());\n    if (!isNullOrUndefined(listLevel[overrideListLevelProperty[this.keywordIndex]])) this.serializeListLevel(writer, listLevel[overrideListLevelProperty[this.keywordIndex]], levelIndex);\n    if (!isNullOrUndefined(listLevel[startAtProperty[this.keywordIndex]])) {\n      writer.writeStartElement(undefined, 'startOverride', this.wNamespace);\n      writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[startAtProperty[this.keywordIndex]].toString());\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.getLevelPattern = function (levelPattern) {\n    var patternType;\n    switch (levelPattern) {\n      case 'None':\n      case 0:\n        patternType = 'none';\n        break;\n      case 'Arabic':\n      case 1:\n        patternType = 'decimal';\n        break;\n      case 'UpRoman':\n      case 2:\n        patternType = 'upperRoman';\n        break;\n      case 'LowRoman':\n      case 3:\n        patternType = 'lowerRoman';\n        break;\n      case 'UpLetter':\n      case 4:\n        patternType = 'upperLetter';\n        break;\n      case 'LowLetter':\n      case 5:\n        patternType = 'lowerLetter';\n        break;\n      case 'Ordinal':\n      case 6:\n        patternType = 'ordinal';\n        break;\n      case 'Number':\n      case 7:\n        patternType = 'cardinalText';\n        break;\n      case 'OrdinalText':\n      case 8:\n        patternType = 'ordinalText';\n        break;\n      case 'LeadingZero':\n      case 9:\n        patternType = 'decimalZero';\n        break;\n      case 'FarEast':\n      case 11:\n        patternType = 'aiueoFullWidth';\n        break;\n      case 'Special':\n      case 12:\n        patternType = 'russianLower';\n        break;\n      // case 'Bullet':\n      default:\n        patternType = 'bullet';\n        break;\n    }\n    return patternType;\n  };\n  // Serializes the level text\n  WordExport.prototype.serializeLevelText = function (writer, listLevel, lvlIndex) {\n    writer.writeStartElement(undefined, 'lvlText', this.wNamespace);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[numberFormatProperty[this.keywordIndex]]);\n    writer.writeEndElement();\n  };\n  // Serialize the level follow character\n  WordExport.prototype.serializeLevelFollow = function (writer, listLevel) {\n    var fc;\n    //TODO:Type issue returns number instead of string\n    if (listLevel[followCharacterProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Tab')) {\n      fc = 'tab';\n    } else if (listLevel[followCharacterProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Space')) {\n      fc = 'space';\n    } else {\n      fc = 'nothing';\n    }\n    writer.writeStartElement(undefined, 'suff', this.wNamespace);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, fc);\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeThemeFontLang = function (writer) {\n    var isLanguageIdBi = this.themeFontLang[localeIdBidiProperty[this.keywordIndex]] > 0;\n    var isLanguageId = this.themeFontLang[localeIdProperty[this.keywordIndex]] > 0;\n    var isLanguageIdFarEast = this.themeFontLang[localeIdFarEastProperty[this.keywordIndex]] > 0;\n    if (isLanguageId || isLanguageIdFarEast || isLanguageIdBi) {\n      writer.writeStartElement('w', 'themeFontLang', undefined);\n      if (isLanguageId) {\n        var ascii = LocaleId[this.themeFontLang[localeIdProperty[this.keywordIndex]]];\n        writer.writeAttributeString('w', 'val', undefined, ascii.replace('_', '-')); //Ascii key\n      }\n      if (isLanguageIdBi) {\n        var bidi = LocaleId[this.themeFontLang[localeIdBidiProperty[this.keywordIndex]]];\n        writer.writeAttributeString('w', 'bidi', undefined, bidi.replace('_', '-')); //Bidi key\n      }\n      if (isLanguageIdFarEast) {\n        var farEast = LocaleId[this.themeFontLang[localeIdFarEastProperty[this.keywordIndex]]];\n        writer.writeAttributeString('w', 'eastAsia', undefined, farEast.replace('_', '-')); //EastAsia key\n      }\n      writer.writeEndElement();\n    }\n  };\n  WordExport.prototype.serializeDocumentProtectionSettings = function (writer) {\n    writer.writeStartElement('w', 'documentProtection', this.wNamespace);\n    if (this.formatting) {\n      writer.writeAttributeString('w', 'formatting', this.wNamespace, '1');\n    }\n    if (this.protectionType && this.protectionType !== 0) {\n      var editMode = void 0;\n      switch (this.protectionType) {\n        case 'ReadOnly':\n        case 1:\n          editMode = 'readOnly';\n          break;\n        case 'FormFieldsOnly':\n        case 2:\n          editMode = 'forms';\n          break;\n        case 'CommentsOnly':\n        case 3:\n          editMode = 'comments';\n          break;\n        case 'RevisionsOnly':\n        case 4:\n          editMode = 'trackedChanges';\n          break;\n      }\n      writer.writeAttributeString('w', 'edit', this.wNamespace, editMode);\n    }\n    writer.writeAttributeString('w', 'cryptProviderType', this.wNamespace, 'rsaAES');\n    writer.writeAttributeString('w', 'cryptAlgorithmClass', this.wNamespace, 'hash');\n    writer.writeAttributeString('w', 'cryptAlgorithmType', this.wNamespace, 'typeAny');\n    writer.writeAttributeString('w', 'cryptAlgorithmSid', this.wNamespace, '14');\n    writer.writeAttributeString('w', 'cryptSpinCount', this.wNamespace, '100000');\n    if (this.enforcement) {\n      writer.writeAttributeString('w', 'enforcement', this.wNamespace, '1');\n    }\n    if (this.hashValue) {\n      writer.writeAttributeString('w', 'hash', this.wNamespace, this.hashValue);\n    }\n    if (this.saltValue) {\n      writer.writeAttributeString('w', 'salt', this.wNamespace, this.saltValue);\n    }\n    writer.writeEndElement();\n  };\n  WordExport.prototype.serializeSettings = function () {\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'settings', this.wNamespace);\n    this.writeCustom(writer);\n    // writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n    // writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n    // writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    // writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n    // writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n    writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n    writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n    writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n    writer.writeAttributeString('xmlns', 'sl', undefined, this.slNamespace);\n    writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n    // //w:writeProtection - Write Protection\n    this.serializeDocumentProtectionSettings(writer);\n    //w:view - Document View Setting\n    // if (this.mDocument.ViewSetup.DocumentViewType !== DocumentViewType.PrintLayout &&\n    //   m_document.ViewSetup.DocumentViewType !== DocumentViewType.NormalLayout)\n    // {\n    //     writer.writeStartElement('view', this.wNamespace);\n    //     string viewTypeStr = string.Empty;\n    //     if (m_document.ViewSetup.DocumentViewType === DocumentViewType.OutlineLayout)\n    //     {\n    //         viewTypeStr = 'outline';\n    //     }\n    //     else if (m_document.ViewSetup.DocumentViewType === DocumentViewType.WebLayout)\n    //     {\n    //         viewTypeStr = 'web';\n    //     }\n    //     writer.writeAttributeString('val', this.wNamespace, viewTypeStr);\n    //     writer.writeEndElement();\n    // }\n    //w:zoom - Magnification Setting\n    writer.writeStartElement('w', 'zoom', this.wNamespace);\n    // switch (m_document.ViewSetup.ZoomType)\n    // {\n    //     case ZoomType.FullPage:\n    //         writer.writeAttributeString('w', 'val', this.wNamespace, 'fullPage');\n    //         break;\n    //     case ZoomType.PageWidth:\n    //         writer.writeAttributeString('w', 'val', this.wNamespace, 'bestFit');\n    //         break;\n    //     case ZoomType.TextFit:\n    //         writer.writeAttributeString('w', 'val', this.wNamespace, 'textFit');\n    //         break;\n    // default:\n    writer.writeAttributeString('w', 'val', this.wNamespace, 'none');\n    // break;\n    // }\n    writer.writeAttributeString('w', 'percent', this.wNamespace, '100');\n    writer.writeEndElement();\n    //<w:themeFontLang>\n    this.serializeThemeFontLang(writer);\n    //w:displayBackgroundShape - Display Background Objects When Displaying Document\n    // if (m_document.Background.Type !== BackgroundType.NoBackground)\n    // {\n    writer.writeStartElement(undefined, 'displayBackgroundShape', this.wNamespace);\n    writer.writeEndElement();\n    // }\n    //w:defaultTabStop - Distance Between Automatic Tab Stops\n    writer.writeStartElement(undefined, 'defaultTabStop', this.wNamespace);\n    var tabWidth = Math.round(this.defaultTabWidthValue * this.twipsInOnePoint);\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, tabWidth.toString());\n    writer.writeEndElement();\n    if (this.trackChanges) {\n      writer.writeStartElement(undefined, 'trackRevisions', this.wNamespace);\n      writer.writeEndElement();\n    }\n    //w:evenAndOddHeaders - Different Even/Odd Page Headers and Footers        \n    if (this.mDifferentFirstPage) {\n      writer.writeStartElement(undefined, 'evenAndOddHeaders', this.wNamespace);\n      writer.writeEndElement();\n    }\n    //w:footnotePr - Document-Wide Footnote Properties and w:endnotePr - Document-Wide Endnote Properties\n    // SerializeFootnoteSettings();\n    //w:compat - Compatibility Settings\n    if (!this.formFieldShading) {\n      writer.writeStartElement(undefined, 'doNotShadeFormData', this.wNamespace);\n      writer.writeEndElement();\n    }\n    writer.writeStartElement(undefined, 'compat', this.wNamespace);\n    if (this.dontUseHtmlParagraphAutoSpacing) {\n      this.serializeBoolProperty(writer, 'doNotUseHTMLParagraphAutoSpacing', this.dontUseHtmlParagraphAutoSpacing);\n    }\n    if (this.allowSpaceOfSameStyleInTable) {\n      this.serializeBoolProperty(writer, 'allowSpaceOfSameStyleInTable', this.allowSpaceOfSameStyleInTable);\n    }\n    writer.writeStartElement(undefined, 'compatSetting', this.wNamespace);\n    writer.writeAttributeString(undefined, 'name', this.wNamespace, 'compatibilityMode');\n    writer.writeAttributeString(undefined, 'uri', this.wNamespace, 'http://schemas.microsoft.com/office/word');\n    var compatValue = this.keywordIndex === 1 ? HelperMethods.getCompatibilityModeValue(this.compatibilityMode) : HelperMethods.getCompatibilityModeValue(this.getCompatibilityModeEnumValue(this.compatibilityMode.toString()));\n    writer.writeAttributeString(undefined, 'val', this.wNamespace, compatValue);\n    writer.writeEndElement();\n    writer.writeEndElement();\n    if (this.document[footnotesProperty[this.keywordIndex]]) {\n      //this.serializeFootNotesPr(writer, this.document.section.sectionFormat);\n      writer.writeStartElement(undefined, 'footnotePr', this.wNamespace);\n      writer.writeStartElement(undefined, 'footnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'footnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n      writer.writeEndElement();\n      writer.writeEndElement();\n    }\n    if (this.document[endnotesProperty[this.keywordIndex]]) {\n      // this.serializeEndNotesPr(writer, this.document.section.sectionFormat);\n      writer.writeStartElement(undefined, 'endnotePr', this.wNamespace);\n      writer.writeStartElement(undefined, 'endnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n      writer.writeEndElement();\n      writer.writeStartElement(undefined, 'endnote', this.wNamespace);\n      writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n      writer.writeEndElement();\n      writer.writeEndElement();\n    }\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.settingsPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeCoreProperties = function () {\n    //implementation\n  };\n  WordExport.prototype.serializeAppProperties = function () {\n    //implementation\n  };\n  WordExport.prototype.serializeFontTable = function (contentType) {\n    //implementation\n  };\n  WordExport.prototype.serializeSettingsRelation = function () {\n    //implementation\n  };\n  WordExport.prototype.getCompatibilityModeEnumValue = function (compatibilityMode) {\n    switch (compatibilityMode) {\n      case 'Word2013':\n        return 0;\n      case 'Word2003':\n        return 1;\n      case 'Word2007':\n        return 2;\n      case 'Word2010':\n        return 3;\n    }\n  };\n  WordExport.prototype.serializeHeaderFooters = function () {\n    this.isHeaderFooter = true;\n    this.serializeHeaderFooter('EvenFooter');\n    this.serializeHeaderFooter('EvenHeader');\n    this.serializeHeaderFooter('FirstPageFooter');\n    this.serializeHeaderFooter('FirstPageHeader');\n    this.serializeHeaderFooter('OddFooter');\n    this.serializeHeaderFooter('OddHeader');\n    this.isHeaderFooter = false;\n  };\n  // Serializes the Header/Footer\n  WordExport.prototype.serializeHeaderFooter = function (hfType) {\n    if (this.headersFooters.length === 0) {\n      return;\n    }\n    var headerFooterPath;\n    var headerFooterRelsPath;\n    if (!this.headersFooters.containsKey(hfType)) {\n      return;\n    }\n    var hfColl = this.headersFooters.get(hfType);\n    var hf = undefined;\n    for (var i = 0; i < hfColl.keys.length; i++) {\n      var id = hfColl.keys[i];\n      hf = hfColl.get(id);\n      if (hfType === 'EvenHeader' || hfType === 'FirstPageHeader' || hfType === 'OddHeader') {\n        headerFooterPath = this.headerPath + id.replace('rId', '') + '.xml';\n        headerFooterRelsPath = this.headerRelationPath + id.replace('rId', '') + '.xml.rels';\n        this.serializeHeader(hf, id, headerFooterPath, headerFooterRelsPath);\n      } else {\n        headerFooterPath = this.footerPath + id.replace('rId', '') + '.xml';\n        headerFooterRelsPath = this.footerRelationPath + id.replace('rId', '') + '.xml.rels';\n        this.serializeFooter(hf, id, headerFooterPath, headerFooterRelsPath);\n      }\n    }\n  };\n  // Serialize the header part\n  WordExport.prototype.serializeHeader = function (header, id, headerFooterPath, headerFooterRelsPath) {\n    this.headerFooter = header;\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'hdr', this.wNamespace);\n    this.writeHFCommonAttributes(writer);\n    var owner = this.blockOwner;\n    this.blockOwner = header;\n    this.serializeBodyItems(writer, header[blocksProperty[this.keywordIndex]], true);\n    this.blockOwner = owner;\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterPath);\n    this.mArchive.addItem(zipArchiveItem);\n    this.serializeHFRelations(id, headerFooterRelsPath);\n    this.headerFooter = undefined;\n  };\n  // Serializes the HeaderFooter relations\n  WordExport.prototype.serializeHFRelations = function (hfId, headerFooterRelsPath) {\n    var hasHFImage = this.headerFooterImages.containsKey(hfId);\n    // let hasHFHyperlinks = HeaderFooterHyperlinks.ContainsKey(hfId);\n    // let hasHFInclPics = HeaderFooterInclPicUrls.ContainsKey(hfId);\n    // let hasHFAlternateChunks = HeaderFooterAlternateChunks.ContainsKey(hfId);\n    if (hasHFImage) {\n      // || hasHFHyperlinks ||hasHFAlternateChunks\n      var writer = new XmlWriter();\n      writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n      this.serializeImagesRelations(this.headerFooterImages.get(hfId), writer, false);\n      if (this.headerFooterSvgImages.containsKey(hfId)) {\n        this.serializeSvgImageRelation(this.headerFooterSvgImages.get(hfId), writer);\n      }\n      // if (hasHFHyperlinks)\n      //     SerializeHyperlinkRelations(stream, HeaderFooterHyperlinks[hfId]);\n      // if (hasHFAlternateChunks)\n      //     SerializeAltChunkRelations(stream, HeaderFooterAlternateChunks[hfId]);\n      // if (hasHFInclPics)\n      //     SerializeIncludePictureUrlRelations(stream, HeaderFooterInclPicUrls[hfId]);\n      // if (HFOleContainers.ContainsKey(hfId))\n      // {\n      //     AddOLEToZip(HFOleContainers[hfId]);\n      // }\n      // if (HFRelations.ContainsKey(hfId))\n      //     SerializeHFCommonRelations(stream, HFRelations[hfId]);\n      writer.writeEndElement();\n      var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterRelsPath);\n      this.mArchive.addItem(zipArchiveItem);\n    } else {\n      return;\n    }\n  };\n  WordExport.prototype.writeHFCommonAttributes = function (writer) {\n    writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n    writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n    writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n    writer.writeAttributeString('xmlns', 've', undefined, this.veNamespace);\n    writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n    writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n    writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n    writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n    writer.writeAttributeString('xmlns', 'pic', undefined, this.pictureNamespace);\n    writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n    writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n    writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n    this.writeDup(writer);\n    writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n    writer.writeAttributeString('ve', 'Ignorable', undefined, 'w14 w15 wp14');\n  };\n  // Serailize the footer and its relations\n  WordExport.prototype.serializeFooter = function (footer, id, headerFooterPath, headerFooterRelsPath) {\n    this.headerFooter = footer;\n    var writer = new XmlWriter();\n    writer.writeStartElement('w', 'ftr', this.wNamespace);\n    this.writeHFCommonAttributes(writer);\n    this.serializeBodyItems(writer, footer[blocksProperty[this.keywordIndex]], true);\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterPath);\n    this.mArchive.addItem(zipArchiveItem);\n    this.serializeHFRelations(id, headerFooterRelsPath);\n  };\n  WordExport.prototype.serializeDocumentRelations = function () {\n    var writer = new XmlWriter();\n    writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n    this.serializeRelationShip(writer, this.getNextRelationShipID(), this.stylesRelType, 'styles.xml');\n    this.serializeRelationShip(writer, this.getNextRelationShipID(), this.settingsRelType, 'settings.xml');\n    if (this.document[endnotesProperty[this.keywordIndex]]) {\n      this.serializeRelationShip(writer, this.getNextRelationShipID(), this.endnoteRelType, 'endnotes.xml');\n    }\n    if (this.document[footnotesProperty[this.keywordIndex]]) {\n      this.serializeRelationShip(writer, this.getNextRelationShipID(), this.footnoteRelType, 'footnotes.xml');\n    }\n    if (this.mComments.length > 0) {\n      if (!(this.mComments.length === 1 && this.mComments[0].text === '')) {\n        this.serializeRelationShip(writer, this.getNextRelationShipID(), this.commentsRelType, 'comments.xml');\n        this.serializeRelationShip(writer, this.getNextRelationShipID(), this.commentsExRelType, 'commentsExtended.xml');\n      }\n    }\n    if (!isNullOrUndefined(this.mThemes)) {\n      this.serializeRelationShip(writer, this.getNextRelationShipID(), this.ThemeRelType, 'theme/theme1.xml');\n    }\n    if (this.document[listsProperty[this.keywordIndex]].length > 0) {\n      this.serializeRelationShip(writer, this.getNextRelationShipID(), this.numberingRelType, 'numbering.xml');\n    }\n    //this.serializeFootnoteEndnoteRelations(writer);\n    this.serializeHeaderFooterRelations(writer);\n    //this.serializeFootnoteXMLMapping(writer);\n    // if (HasFontTable) {\n    //     SerializeRelationShip(docRelstream, GetNextRelationShipID(), this.FontTableRelType, 'fontTable.xml');\n    // }\n    // SerializeIncludePictureUrlRelations(docRelstream, InclPicFieldUrl);\n    // //// Creating relationships for every hyperlink and image containing in the document\n    this.serializeImagesRelations(this.documentImages, writer, false);\n    this.serializeSvgImageRelation(this.svgImages, writer);\n    // serialize custom xml\n    this.serializeCustomXMLMapping(this.mCustomXML, writer);\n    // serialize chart relations\n    this.serializeChartDocumentRelations(this.documentCharts, writer);\n    this.serializeExternalLinkImages(writer);\n    // if (HasHyperlink && HyperlinkTargets.length > 0) {\n    //     SerializeHyperlinkRelations(docRelstream, HyperlinkTargets);\n    // }\n    // if (m_document.HasMacros\n    //     && IsMacroEnabled)\n    //     SerializeRelationShip(docRelstream, GetNextRelationShipID(), this.VbaProjectRelType, this.VbaProject);\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.wordRelationPath);\n    this.mArchive.addItem(zipArchiveItem);\n    this.headerFooter = undefined;\n  };\n  // serialize chart relations\n  WordExport.prototype.serializeChartDocumentRelations = function (charts, writer) {\n    if (charts.length > 0) {\n      var keys = charts.keys;\n      for (var i = 1; i <= keys.length; i++) {\n        this.serializeRelationShip(writer, keys[i - 1], this.chartRelType, 'charts/chart' + i + '.xml');\n      }\n    }\n  };\n  WordExport.prototype.serializeChartRelations = function () {\n    var writer = new XmlWriter();\n    this.resetChartRelationShipId();\n    writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n    var chartColorPath = 'colors' + this.chartCount + '.xml';\n    var chartRelationPath = this.chartPath + '/_rels/chart' + this.chartCount + '.xml.rels';\n    var chartExcelPath = '../embeddings/Microsoft_Excel_Worksheet' + this.chartCount + '.xlsx';\n    this.serializeRelationShip(writer, this.getNextChartRelationShipID(), this.packageRelType, chartExcelPath);\n    this.serializeRelationShip(writer, this.getNextChartRelationShipID(), this.chartColorStyleRelType, chartColorPath);\n    writer.writeEndElement(); // end of relationships\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, chartRelationPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  // Serializes the image relations\n  WordExport.prototype.serializeImagesRelations = function (images, writer, isSvg) {\n    if (images.length > 0) {\n      var imagePath = '';\n      var base64ImageString = void 0;\n      var keys = images.keys;\n      for (var i = 0; i < keys.length; i++) {\n        var mImage = images.get(keys[i]);\n        var imageStringInfo = void 0;\n        if (typeof mImage === 'string' && this.startsWith(mImage, 'data')) {\n          base64ImageString = mImage;\n        } else {\n          imageStringInfo = this.getBase64ImageString(mImage);\n          base64ImageString = imageStringInfo.imageString;\n          if (HelperMethods.parseBoolValue(mImage[isMetaFileProperty[this.keywordIndex]])) {\n            var format = HelperMethods.formatClippedString(imageStringInfo.metaFileImageString).extension;\n            if (format !== '.svg' || isSvg) {\n              base64ImageString = imageStringInfo.metaFileImageString;\n            }\n          }\n        }\n        if (isNullOrUndefined(base64ImageString)) {\n          imagePath = this.imagePath + '/0.jpeg';\n          this.serializeRelationShip(writer, keys[i], this.imageRelType, imagePath.replace('word/', ''));\n        } else {\n          var imageInfo = HelperMethods.formatClippedString(base64ImageString);\n          var extension = imageInfo.extension;\n          var formatClippedString = imageInfo.formatClippedString;\n          imagePath = this.imagePath + keys[i] + extension;\n          this.serializeRelationShip(writer, keys[i], this.imageRelType, imagePath.replace('word/', ''));\n          //if (m_archive.Find(imagePath.Replace('\\\\', '/')) === -1)\n          // {\n          var imageBlob = void 0;\n          if (this.startsWith(base64ImageString, 'data:image/svg+xml;utf8,')) {\n            imageBlob = new Blob([formatClippedString]);\n          } else {\n            imageBlob = new Blob([this.encodedString(formatClippedString)]);\n          }\n          var zipArchiveItem = new ZipArchiveItem(imageBlob, imagePath);\n          // let TestArchive = new ZipArchive();\n          this.mArchive.addItem(zipArchiveItem);\n          // TestArchive.save('image.zip').then(function (): void {\n          //     TestArchive.destroy();\n          // });\n          // }\n        }\n      }\n    }\n  };\n  WordExport.prototype.serializeSvgImageRelation = function (svgImages, writer) {\n    this.serializeImagesRelations(svgImages, writer, true);\n  };\n  /**\n   * @private\n   */\n  WordExport.prototype.encodedString = function (input) {\n    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var encode1;\n    var encode2;\n    var encode3;\n    var encode4;\n    var count = 0;\n    var resultIndex = 0;\n    /*let dataUrlPrefix: string = 'data:';*/\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n      totalLength--;\n    }\n    if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n      totalLength--;\n    }\n    if (totalLength % 1 !== 0) {\n      // totalLength is not an integer, the length does not match a valid\n      // base64 content. That can happen if:\n      // - the input is not a base64 content\n      // - the input is *almost* a base64 content, with a extra chars at the\n      // beginning or at the end\n      // - the input uses a base64 variant (base64url for example)\n      throw new Error('Invalid base64 input, bad content length.');\n    }\n    var output = new Uint8Array(totalLength | 0);\n    while (count < input.length) {\n      encode1 = keyStr.indexOf(input.charAt(count++));\n      encode2 = keyStr.indexOf(input.charAt(count++));\n      encode3 = keyStr.indexOf(input.charAt(count++));\n      encode4 = keyStr.indexOf(input.charAt(count++));\n      chr1 = encode1 << 2 | encode2 >> 4;\n      chr2 = (encode2 & 15) << 4 | encode3 >> 2;\n      chr3 = (encode3 & 3) << 6 | encode4;\n      output[resultIndex++] = chr1;\n      if (encode3 !== 64) {\n        output[resultIndex++] = chr2;\n      }\n      if (encode4 !== 64) {\n        output[resultIndex++] = chr3;\n      }\n    }\n    return output;\n  };\n  WordExport.prototype.serializeExternalLinkImages = function (writer) {\n    var imagePath = '';\n    var keys = this.externalImages.keys;\n    for (var i = 0; i < this.externalImages.keys.length; i++) {\n      this.serializeRelationShip(writer, keys[i], this.imageRelType, this.externalImages.get(keys[i]));\n    }\n  };\n  // Serializes the HeaderFooters relations to the document relations stream\n  WordExport.prototype.serializeHeaderFooterRelations = function (writer) {\n    this.serializeHFRelation(writer, 'EvenFooter');\n    this.serializeHFRelation(writer, 'EvenHeader');\n    this.serializeHFRelation(writer, 'FirstPageFooter');\n    this.serializeHFRelation(writer, 'FirstPageHeader');\n    this.serializeHFRelation(writer, 'OddFooter');\n    this.serializeHFRelation(writer, 'OddHeader');\n  };\n  // Serializes the headers footers relations.\n  WordExport.prototype.serializeHFRelation = function (writer, hfType) {\n    var headerFooterPath = '';\n    var relType;\n    if (!this.headersFooters.containsKey(hfType)) {\n      return;\n    }\n    var hfColl = this.headersFooters.get(hfType);\n    for (var i = 0; i < hfColl.keys.length; i++) {\n      var id = hfColl.keys[i];\n      if (hfType === 'EvenHeader' || hfType === 'FirstPageHeader' || hfType === 'OddHeader') {\n        headerFooterPath = 'header' + id.replace('rId', '') + '.xml';\n        relType = this.headerRelType;\n      } else {\n        headerFooterPath = 'footer' + id.replace('rId', '') + '.xml';\n        relType = this.footerRelType;\n      }\n      this.serializeRelationShip(writer, id, relType, headerFooterPath);\n    }\n  };\n  // Serializes the relationship\n  WordExport.prototype.serializeRelationShip = function (writer, relationshipID, relationshipType, targetPath) {\n    writer.writeStartElement(undefined, 'Relationship', undefined);\n    writer.writeAttributeString(undefined, 'Id', undefined, relationshipID);\n    writer.writeAttributeString(undefined, 'Type', undefined, relationshipType);\n    writer.writeAttributeString(undefined, 'Target', undefined, targetPath.replace('\\\\', '/').replace('\\v', ''));\n    if (relationshipType === this.hyperlinkRelType || this.startsWith(targetPath, 'http://') || this.startsWith(targetPath, 'https://') || this.startsWith(targetPath, 'file:///')) {\n      // Uri targetUri;\n      // if ((!targetPath.StartsWith('file:///')) && Uri.TryCreate(targetPath, UriKind.Absolute, out targetUri))\n      // {\n      //     //Handled using Try catch to avoid exception if the Host name type is None because in \n      //Silverlight 'HostNameType' property is not available.\n      //     try\n      //     {\n      //         m_writer.WriteAttributeString('Target', targetUri.AbsoluteUri);\n      //     }\n      //     catch\n      //     {\n      //         m_writer.WriteAttributeString('Target', targetPath.Replace('\\\\', '/').Replace(ControlChar.LineBreak, string.Empty));\n      //     }\n      // }\n      // else\n      // {\n      //     m_writer.WriteAttributeString('Target', targetPath.Replace('\\\\', '/').Replace(ControlChar.LineBreak, string.Empty));\n      // }\n      writer.writeAttributeString(undefined, 'TargetMode', undefined, 'External');\n    }\n    writer.writeEndElement();\n  };\n  // Get the next relationship ID\n  WordExport.prototype.getNextRelationShipID = function () {\n    return 'rId' + ++this.mRelationShipID;\n  };\n  WordExport.prototype.getEFNextRelationShipID = function () {\n    return (++this.efRelationShipId).toString();\n  };\n  WordExport.prototype.serializeGeneralRelations = function () {\n    var writer = new XmlWriter();\n    this.resetRelationShipID();\n    writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n    this.serializeRelationShip(writer, this.getNextRelationShipID(), this.documentRelType, this.documentPath);\n    // this.serializeRelationShip(writer, this.getNextRelationShipID(), this.AppRelType, this.appPath);\n    // this.serializeRelationShip(writer, this.getNextRelationShipID(), this.CoreRelType, this.corePath);\n    //End of Relationships tag\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.generalRelationPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  WordExport.prototype.serializeContentTypes = function (contentType, formatType) {\n    var writer = new XmlWriter();\n    writer.writeStartElement(undefined, 'Types', 'http://schemas.openxmlformats.org/package/2006/content-types');\n    //if (m_hasOleObject)\n    //{\n    //    //<Default Extension='bin' ContentType='application/vnd.openxmlformats-officedocument.oleObject'/>\n    //    SerializeDefaultContentType(contentStream, 'bin', 'application/vnd.openxmlformats-officedocument.oleObject');\n    //}\n    this.serializeDefaultContentType(writer, 'rels', this.relationContentType);\n    this.serializeDefaultContentType(writer, 'xml', this.xmlContentType);\n    // if (m_hasEmbedFonts && !string.IsNullOrEmpty(type))\n    // {\n    //     SerializeDefaultContentType(contentStream,type, this.fontContentType);\n    // }\n    if (this.documentImages.length > 0 || this.externalImages.length > 0 || this.headerFooterImages.length > 0) {\n      this.serializeDefaultContentType(writer, 'png', 'image/png');\n      this.serializeDefaultContentType(writer, 'bmp', 'image/bmp');\n      this.serializeDefaultContentType(writer, 'emf', 'image/x-emf');\n      this.serializeDefaultContentType(writer, 'wmf', 'image/x-wmf');\n      this.serializeDefaultContentType(writer, 'gif', 'image/gif');\n      this.serializeDefaultContentType(writer, 'ico', 'image/x-icon');\n      this.serializeDefaultContentType(writer, 'tif', 'image/tiff');\n      this.serializeDefaultContentType(writer, 'tiff', 'image/tiff');\n      this.serializeDefaultContentType(writer, 'jpeg', 'image/jpeg');\n      this.serializeDefaultContentType(writer, 'jpg', 'image/jpeg');\n      this.serializeDefaultContentType(writer, 'svg', 'image/svg+xml');\n    }\n    // if (m_document.HasMacros\n    //     && IsMacroEnabled && !m_isSkipBinExtension)\n    // {\n    //     SerializeDefaultContentType(contentStream, 'bin', this.VbaProjectContentType);\n    //     m_isSkipBinExtension = true;\n    // }\n    // if (m_hasOleObject)\n    // {\n    //     SerializeOleContentType(contentStream);\n    // }\n    //document.xml\n    if (formatType == 'Docx') {\n      this.serializeOverrideContentType(writer, this.documentPath, this.documentContentType);\n    } else if (formatType == 'Dotx') {\n      this.serializeOverrideContentType(writer, this.documentPath, this.TemplateContentType);\n    }\n    //<Override PartName='/word/numbering.xml' ContentType='application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml'/>\n    // if (HasNumbering) {\n    this.serializeOverrideContentType(writer, this.numberingPath, this.numberingContentType);\n    // }\n    //Add the header/footer Alternate chunks\n    // if (HeaderFooterAlternateChunks.length > 0) {\n    //     foreach(Dictionary < string, string > item in m_headerFooterAlternateChunks.Values)\n    //     AddAlternateChunkItem(item);\n    // }\n    //styles.xml\n    this.serializeOverrideContentType(writer, this.stylePath, this.stylesContentType);\n    //settings.xml\n    this.serializeOverrideContentType(writer, this.settingsPath, this.settingsContentType);\n    this.serializeOverrideContentType(writer, this.commentsPath, this.commentsContentType);\n    this.serializeOverrideContentType(writer, this.themePath, this.themeContentType);\n    //comments.xml\n    this.serializeOverrideContentType(writer, this.commentsExtendedPath, this.commentsExContentType);\n    //charts.xml\n    if (this.chartCount > 0) {\n      var count = 1;\n      this.serializeDefaultContentType(writer, 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n      while (count <= this.chartCount) {\n        this.serializeOverrideContentType(writer, 'word/charts/chart' + count + '.xml', this.chartsContentType);\n        this.serializeOverrideContentType(writer, 'word/charts/colors' + count + '.xml', this.chartColorStyleContentType);\n        count++;\n      }\n    }\n    // Custom XML mapping\n    if (this.customXMLProps.length > 0) {\n      for (var i = 0; i < this.customXMLProps.length; i++) {\n        this.serializeOverrideContentType(writer, this.customXMLProps[i], this.customXmlContentType);\n      }\n    }\n    //             //core.xml\n    //             SerializeOverrideContentType(contentStream, this.corePath, this.CoreContentType);\n    //             //app.xml\n    //             SerializeOverrideContentType(contentStream, this.appPath, this.AppContentType);\n    //             //custom.xml\n    //             if (!isNullOrUndefined(m_document.CustomDocumentProperties) && m_document.CustomDocumentProperties.length > 0)\n    //                 SerializeOverrideContentType(contentStream, this.CustomPath, this.CustomContentType);\n    // #if Chart\n    //             if (m_hasChart)\n    //                 SerializeChartContentType(contentStream);\n    // #endif\n    this.serializeHFContentTypes(writer);\n    this.SerializeEFContentTypes(writer);\n    // WriteXmlItemsContentTypes(contentStream);\n    //End of Types tag\n    writer.writeEndElement();\n    var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.contentTypesPath);\n    this.mArchive.addItem(zipArchiveItem);\n  };\n  // Serializes the HeaderFooter content types\n  WordExport.prototype.serializeHFContentTypes = function (writer) {\n    this.serializeHeaderFootersContentType(writer, 'EvenFooter');\n    this.serializeHeaderFootersContentType(writer, 'EvenHeader');\n    this.serializeHeaderFootersContentType(writer, 'FirstPageFooter');\n    this.serializeHeaderFootersContentType(writer, 'FirstPageHeader');\n    this.serializeHeaderFootersContentType(writer, 'OddFooter');\n    this.serializeHeaderFootersContentType(writer, 'OddHeader');\n  };\n  // Serializes the HeaderFooter content types.\n  WordExport.prototype.serializeHeaderFootersContentType = function (writer, headerFooterType) {\n    var contentType;\n    var partName;\n    if (!this.headersFooters.containsKey(headerFooterType)) {\n      return;\n    }\n    var hfColl = this.headersFooters.get(headerFooterType);\n    for (var i = 0; i < hfColl.keys.length; i++) {\n      var id = hfColl.keys[i];\n      if (headerFooterType === 'EvenHeader' || headerFooterType === 'FirstPageHeader' || headerFooterType === 'OddHeader') {\n        partName = this.headerPath + id.replace('rId', '') + '.xml';\n        contentType = this.headerContentType;\n      } else {\n        partName = this.footerPath + id.replace('rId', '') + '.xml';\n        contentType = this.footerContentType;\n      }\n      this.serializeOverrideContentType(writer, partName, contentType);\n    }\n  };\n  WordExport.prototype.SerializeEFContentTypes = function (writer) {\n    this.serializeEFContentType(writer);\n  };\n  // Serializes the HeaderFooter content types.\n  WordExport.prototype.serializeEFContentType = function (writer) {\n    var contentType;\n    var partName;\n    partName = this.endnotesPath;\n    contentType = this.endnoteContentType;\n    this.serializeOverrideContentType(writer, partName, contentType);\n    partName = this.footnotesPath;\n    contentType = this.footnoteContentType;\n    this.serializeOverrideContentType(writer, partName, contentType);\n  };\n  // Serializes the Override content type.\n  WordExport.prototype.serializeOverrideContentType = function (writer, partName, contentType) {\n    writer.writeStartElement(undefined, 'Override', undefined);\n    writer.writeAttributeString(undefined, 'PartName', undefined, '/' + partName.replace('\\\\', '/'));\n    writer.writeAttributeString(undefined, 'ContentType', undefined, contentType);\n    writer.writeEndElement();\n  };\n  // Serializes the default content type\n  WordExport.prototype.serializeDefaultContentType = function (writer, extension, contentType) {\n    writer.writeStartElement(undefined, 'Default', undefined);\n    writer.writeAttributeString(undefined, 'Extension', undefined, extension);\n    writer.writeAttributeString(undefined, 'ContentType', undefined, contentType);\n    writer.writeEndElement();\n  };\n  // Reset the relationship id counter\n  WordExport.prototype.resetRelationShipID = function () {\n    this.mRelationShipID = 0;\n  };\n  WordExport.prototype.resetExcelRelationShipId = function () {\n    this.eRelationShipId = 0;\n  };\n  WordExport.prototype.resetChartRelationShipId = function () {\n    this.cRelationShipId = 0;\n  };\n  WordExport.prototype.close = function () {\n    //Implement\n  };\n  return WordExport;\n}();\nexport { WordExport };","map":{"version":3,"names":["ZipArchive","ZipArchiveItem","XmlWriter","isNullOrUndefined","HelperMethods","Dictionary","LocaleId","sectionsProperty","paraStyleNameProperty","isLegalStyleNumberingProperty","breakClearTypeProperty","characterFormatProperty","paragraphFormatProperty","listsProperty","abstractListsProperty","backgroundProperty","stylesProperty","defaultTabWidthProperty","formattingProperty","trackChangesProperty","protectionTypeProperty","enforcementProperty","hashValueProperty","saltValueProperty","doNotUseHTMLParagraphAutoSpacingProperty","formFieldShadingProperty","footnotesProperty","endnotesProperty","compatibilityModeProperty","themeFontLanguagesProperty","themesProperty","nameProperty","basedOnProperty","nextProperty","linkProperty","localeIdProperty","localeIdFarEastProperty","localeIdBidiProperty","boldProperty","italicProperty","underlineProperty","baselineAlignmentProperty","strikethroughProperty","highlightColorProperty","fontSizeProperty","fontColorProperty","fontFamilyProperty","styleNameProperty","bidiProperty","bdoProperty","fontSizeBidiProperty","fontFamilyBidiProperty","boldBidiProperty","italicBidiProperty","allCapsProperty","complexScriptProperty","fontFamilyAsciiProperty","fontFamilyFarEastProperty","fontFamilyNonFarEastProperty","revisionIdsProperty","listIdProperty","listLevelNumberProperty","leftIndentProperty","rightIndentProperty","firstLineIndentProperty","textAlignmentProperty","afterSpacingProperty","beforeSpacingProperty","spaceAfterAutoProperty","spaceBeforeAutoProperty","lineSpacingProperty","lineSpacingTypeProperty","listFormatProperty","keepWithNextProperty","widowControlProperty","keepLinesTogetherProperty","outlineLevelProperty","contextualSpacingProperty","bordersProperty","tabsProperty","headerDistanceProperty","footerDistanceProperty","differentFirstPageProperty","differentOddAndEvenPagesProperty","pageWidthProperty","pageHeightProperty","leftMarginProperty","rightMarginProperty","topMarginProperty","bottomMarginProperty","restartPageNumberingProperty","pageStartingNumberProperty","endnoteNumberFormatProperty","footNoteNumberFormatProperty","restartIndexForFootnotesProperty","restartIndexForEndnotesProperty","initialFootNoteNumberProperty","initialEndNoteNumberProperty","pageNumberStyleProperty","columnsProperty","numberOfColumnsProperty","equalWidthProperty","lineBetweenColumnsProperty","breakCodeProperty","columnSpanProperty","rowSpanProperty","verticalAlignmentProperty","allowBreakAcrossPagesProperty","isHeaderProperty","heightTypeProperty","gridBeforeProperty","gridBeforeWidthProperty","gridBeforeWidthTypeProperty","gridAfterProperty","gridAfterWidthProperty","gridAfterWidthTypeProperty","allowAutoFitProperty","cellSpacingProperty","shadingProperty","tableAlignmentProperty","preferredWidthProperty","preferredWidthTypeProperty","textureProperty","backgroundColorProperty","foregroundColorProperty","shadowProperty","hasNoneStyleProperty","verticalProperty","horizontalProperty","diagonalUpProperty","diagonalDownProperty","lineStyleProperty","lineWidthProperty","dataFormatProperty","yValueProperty","chartDataProperty","categoryXNameProperty","lineProperty","foreColorProperty","directionProperty","endStyleProperty","numberValueProperty","markerStyleProperty","markerSizeProperty","forwardProperty","backwardProperty","interceptProperty","isDisplayRSquaredProperty","isDisplayEquationProperty","seriesNameProperty","dataLabelProperty","errorBarProperty","seriesFormatProperty","trendLinesProperty","dataPointsProperty","firstSliceAngleProperty","holeSizeProperty","isLegendKeyProperty","isBubbleSizeProperty","isCategoryNameProperty","isSeriesNameProperty","isValueProperty","isPercentageProperty","isLeaderLinesProperty","showSeriesKeysProperty","hasHorizontalBorderProperty","hasVerticalBorderProperty","hasBordersProperty","chartCategoryProperty","chartSeriesProperty","chartTitleAreaProperty","chartLegendProperty","chartPrimaryCategoryAxisProperty","chartPrimaryValueAxisProperty","chartTitleProperty","chartTypeProperty","gapWidthProperty","overlapProperty","chartDataTableProperty","textProperty","shapeIdProperty","alternativeTextProperty","widthProperty","heightProperty","lineFormatProperty","fillFormatProperty","textWrappingStyleProperty","textWrappingTypeProperty","zOrderPositionProperty","layoutInCellProperty","lockAnchorProperty","autoShapeTypeProperty","textFrameProperty","colorProperty","fillProperty","textVerticalAlignmentProperty","imageStringProperty","metaFileImageStringProperty","isMetaFileProperty","topProperty","bottomProperty","rightProperty","leftProperty","formFieldDataProperty","fieldTypeProperty","textInputProperty","checkBoxProperty","dropDownListProperty","defaultValueProperty","formatProperty","sizeTypeProperty","sizeProperty","checkedProperty","dropDownItemsProperty","selectedIndexProperty","commentIdProperty","commentCharacterTypeProperty","footnoteTypeProperty","inlinesProperty","contentControlPropertiesProperty","lockContentControlProperty","lockContentsProperty","tagProperty","titleProperty","hasPlaceHolderTextProperty","multiLineProperty","isTemporaryProperty","dateCalendarTypeProperty","dateStorageFormatProperty","dateDisplayLocaleProperty","dateDisplayFormatProperty","isCheckedProperty","uncheckedStateProperty","checkedStateProperty","contentControlListItemsProperty","xmlMappingProperty","fontProperty","valueProperty","displayTextProperty","isMappedProperty","xPathProperty","storeItemIdProperty","cellFormatProperty","rowFormatProperty","cellsProperty","rowsProperty","descriptionProperty","wrapTextAroundProperty","positioningProperty","tableFormatProperty","allowOverlapProperty","distanceTopProperty","distanceRightProperty","distanceLeftProperty","distanceBottomProperty","verticalOriginProperty","verticalPositionProperty","horizontalOriginProperty","horizontalAlignmentProperty","horizontalPositionProperty","blocksProperty","headerProperty","footerProperty","evenHeaderProperty","evenFooterProperty","firstPageHeaderProperty","firstPageFooterProperty","headersFootersProperty","sectionFormatProperty","listLevelPatternProperty","followCharacterProperty","startAtProperty","levelNumberProperty","numberFormatProperty","abstractListIdProperty","levelsProperty","overrideListLevelProperty","levelOverridesProperty","separatorProperty","continuationSeparatorProperty","continuationNoticeProperty","bookmarkTypeProperty","propertiesProperty","tabJustificationProperty","positionProperty","deletePositionProperty","tabLeaderProperty","editRangeIdProperty","columnFirstProperty","columnLastProperty","userProperty","groupProperty","editableRangeStartProperty","spaceProperty","fontSchemeProperty","fontSchemeNameProperty","majorFontSchemeProperty","minorFontSchemeProperty","fontSchemeListProperty","fontTypefaceProperty","typefaceProperty","panoseProperty","typeProperty","majorUnitProperty","maximumValueProperty","minimumValueProperty","hasMajorGridLinesProperty","hasMinorGridLinesProperty","rgbProperty","appearanceProperty","lineFormatTypeProperty","allowSpaceOfSameStyleInTableProperty","weightProperty","fontNameProperty","columnIndexProperty","isAfterRowMarkProperty","isAfterParagraphMarkProperty","columnCountProperty","gridProperty","characterSpacingProperty","scalingProperty","horizontalRuleProperty","WordExport","customXMLItemsPath","customXMLItemsPropspath","itemPropsPath","documentPath","stylePath","chartPath","numberingPath","settingsPath","headerPath","footerPath","imagePath","footnotesPath","endnotesPath","appPath","corePath","contentTypesPath","defaultEmbeddingPath","commentsPath","commentsExtendedPath","themePath","generalRelationPath","wordRelationPath","customXMLRelPath","excelRelationPath","footnotesRelationPath","endnotesRelationPath","headerRelationPath","footerRelationPath","xmlContentType","fontContentType","documentContentType","TemplateContentType","settingsContentType","commentsContentType","commentsExContentType","endnoteContentType","footerContentType","footnoteContentType","headerContentType","numberingContentType","stylesContentType","webSettingsContentType","appContentType","coreContentType","customContentType","customXmlContentType","relationContentType","chartsContentType","themeContentType","tableStyleContentType","chartColorStyleContentType","commentsRelType","commentsExRelType","settingsRelType","endnoteRelType","footerRelType","footnoteRelType","headerRelType","documentRelType","numberingRelType","stylesRelType","chartRelType","ThemeRelType","fontRelType","tableStyleRelType","coreRelType","appRelType","customRelType","imageRelType","hyperlinkRelType","controlRelType","packageRelType","customXmlRelType","customUIRelType","attachedTemplateRelType","chartColorStyleRelType","wNamespace","wpNamespace","pictureNamespace","aNamespace","a14Namespace","svgNamespace","rNamespace","rpNamespace","vNamespace","oNamespace","xmlNamespace","w10Namespace","cpNamespace","dcNamespace","docPropsNamespace","veNamespace","mNamespace","wneNamespace","customPropsNamespace","vtNamespace","chartNamespace","slNamespace","dtNamespace","wmlNamespace","w14Namespace","wpCanvasNamespace","wpDrawingNamespace","wpGroupNamespace","wpInkNamespace","wpShapeNamespace","w15Namespace","diagramNamespace","eNamespace","pNamespace","certNamespace","cxNamespace","c15Namespace","c7Namespace","csNamespace","spreadSheetNamespace","spreadSheet9","cRelationshipsTag","cRelationshipTag","cIdTag","cTypeTag","cTargetTag","cUserShapesTag","cExternalData","twipsInOnePoint","twentiethOfPoint","borderMultiplier","percentageFactor","emusPerPoint","cConditionalTableStyleTag","cTableFormatTag","cTowFormatTag","cCellFormatTag","cParagraphFormatTag","cCharacterFormatTag","packageType","relsPartPath","documentRelsPartPath","webSettingsPath","wordMLDocumentPath","wordMLStylePath","wordMLNumberingPath","wordMLSettingsPath","wordMLHeaderPath","wordMLFooterPath","wordMLCommentsPath","wordMLImagePath","wordMLFootnotesPath","wordMLEndnotesPath","wordMLAppPath","wordMLCorePath","wordMLCustomPath","wordMLFontTablePath","wordMLChartsPath","wordMLDefaultEmbeddingPath","wordMLEmbeddingPath","wordMLDrawingPath","wordMLThemePath","wordMLFontsPath","wordMLDiagramPath","wordMLControlPath","wordMLVbaProject","wordMLVbaData","wordMLVbaProjectPath","wordMLVbaDataPath","wordMLWebSettingsPath","wordMLCustomItemProp1Path","wordMLFootnoteRelPath","wordMLEndnoteRelPath","wordMLSettingsRelPath","wordMLNumberingRelPath","wordMLFontTableRelPath","wordMLCustomXmlPropsRelType","wordMLControlRelType","wordMLDiagramContentType","dsNamespace","excelFiles","undefined","lastSection","mRelationShipID","cRelationShipId","eRelationShipId","efRelationShipId","mDocPrID","chartCount","seriesCount","chartStringCount","mDifferentFirstPage","mBookmarks","mComments","revisions","customXMLProps","paraID","commentParaID","commentParaIDInfo","isInsideComment","commentId","currentCommentId","trackChangesId","prevRevisionIds","isRevisionContinuous","isBookmarkAtEnd","isBookmarkAtRowEnd","keywordIndex","isHeaderFooter","isSerializeFootEndNote","containerWidth","prototype","getModuleName","Object","defineProperty","get","enumerable","configurable","mDocumentImages","mSvgImages","mExternalLinkImages","mHeaderFooterImages","mHeaderFooterSvgImages","mDocumentCharts","mHeaderFooterColl","mFootEndnotesColl","save","documentHelper","fileName","formatType","_this","serialize","serializeExcelFiles","length","Promise","all","then","saveInternal","close","mArchive","destroy","saveAsBlob","resolve","reject","blob","Blob","type","files","_loop_1","i","keys","parseInt","toString","excelFile","excelPromise","push","zipArchiveItem","addItem","clear","saveExcel","xlsxPath","add","mArchiveExcel","clearDocument","imageRelationIds","svgImageRelationIds","owner","documentEditorSettings","optimizeSfdt","document","sfdtExportModule","write","setDocument","comments","mCustomXML","customXmlData","mImages","images","changes","compressionLevel","mVerticalMerge","mGridSpans","contenttype","serializeDocument","serializeStyles","serializeNumberings","serializeComments","serializeCommentsExtended","serializeThemes","serializeSettings","serializeCoreProperties","serializeAppProperties","serializeFontTable","serializeSettingsRelation","serializeHeaderFooters","serializeFootnotes","serializeEndnotes","serializeDocumentRelations","serializeGeneralRelations","serializeContentTypes","keyindex","mSections","mLists","mAbstractLists","defCharacterFormat","defParagraphFormat","defaultTabWidthValue","themeFontLang","dontUseHtmlParagraphAutoSpacing","parseBoolValue","mStyles","mThemes","formatting","enforcement","hashValue","saltValue","protectionType","formFieldShading","trackChanges","compatibilityMode","allowSpaceOfSameStyleInTable","section","blockOwner","paragraph","table","row","headerFooter","writer","writeStartElement","writeCommonAttributeStrings","writeAttributeString","getColor","writeEndElement","serializeDocumentBody","archiveItem","buffer","writeCustom","writeDup","count","serializeSection","last","serializeBodyItems","serializeSectionProperties","text","serializeCommentCommonAttribute","serializeCommentInternal","writeRaw","theme","themeFont","_i","keys_1","key","themeType","_a","keys_2","script","typeFace","comment","author","date","initial","blocks","retrieveCommentText","mentions","k","serializeBodyItem","replyComments","multiText","split","tempText","block","inlines","dataName","text_1","url","Name","indexOf","regex","match","substring","index","temp","EmailId","serializeMentions","email","matchText","text_2","splice","inlines2","inlines3","inlines4","inlines5","serializeCommentsExInternal","isReply","syncParaID","ownerComment","val","done","serializeHFReference","serializeSectionType","serializePageSetup","serializeColumns","serializeFootNotesPr","serializeEndNotesPr","getFootNoteNumberFormat","getFootNoteNumberRestart","numberFormat","patternType","numberRestart","getPageNumberFormat","sectionFormat","roundToTwoDecimal","pageSetup","serializePageSize","serializePageMargins","serializePageNumberType","marginValue","Math","round","sectionBreakCode","headersFooters","hfId","hf","getNextRelationShipID","addHeaderFooter","hfType","id","hfColl","blockCollection","isLastSection","serializeContentControl","contentControlItem","item","Error","serializeContentProperties","contentProperties","items","repeatSdt","serializeCharacterFormat","getContentControlAppearance","toLowerCase","picture","toUnicode","dropDownLists","serializeContentControlList","comboList","serializeContentControlDate","hasOwnProperty","serializeParagraph","serializeRow","serializeTable","serializeCell","code","charCode","charCodeAt","lists","serializeContentParagraph","j","getDateCalendarType","getDateStorageFormat","sec","serializeParagraphFormat","serializeParagraphItems","serializeRevisionStart","previousNode","ids","revision","retrieveRevision","revisionType","serializeTrackChanges","matchedRevisions","revisionID","paraItems","isContinueOverride","isBdo","serializeBiDirectionalOverride","serializeFieldCharacter","serializePicture","currentParargaph","serializeShape","serializeBookMark","serializeEditRange","chart","serializeChart","serializeChartStructure","serializeComment","serializeEFReference","serializeTextRange","serializeRevisionEnd","efId","ef","getEFNextRelationShipID","addFootnotesEndnotes","efType","efColl","endnotesFootnotes","serializeEndnotesFootnote","endnoteFootnotePath","endnoteFootnoteRelsPath","containsKey","serializeInlineEndnotes","serializeInlineFootnotes","endNote","endNoteFootnote","footNote","writeEFCommonAttributes","serializeCommentItems","characterFormat","getBiDirectionalOverride","editElement","bookmark","bookmarkId","getBookmarkId","bookmarkName","name","bookmarks","image","serializeDrawing","serializeHorizontalRule","shape","cx","cy","horAlig","getShapeHorizontalAlignment","draw","serializeInlineCharts","serializeInlinePictureAndShape","serializeWrappingPictureAndShape","serializePictureAndShapeDistance","abs","behindText","lockAnchor","layoutcell","allowOverlap","horizontalOrigin","getHorizontalOrigin","formatText","horPos","writeString","verticalOrigin","getVerticalOrigin","vertPos","verAlig","getShapeVerticalAlignment","serializeShapeWrapStyle","serializeDrawingGraphics","serializeShapeDrawingGraphics","writeDefaultDistAttribute","top","bottom","left","right","serializeDrawingGraphicsChart","updatechartId","getNextChartName","getBase64ImageString","base64ImageString","imageString","startsWith","metaFileImageString","serializeChartXML","serializeChartColors","serializeChartExcelData","serializeChartRelations","serializeChartData","colorPath","serializeChartColor","isScatterType","serializeWorkBook","serializeSharedString","serializeExcelContentTypes","serializeExcelData","serializeExcelStyles","serializeExcelRelation","serializeExcelGeneralRelations","workbookPath","resetExcelRelationShipId","getNextExcelRelationShipID","sheetPath","serializeExcelSheet","sharedStringPath","chartSharedString","seriesLength","column","series","seriesName","isString","category","format","categoryName","uniqueCount","isBubbleType","bubbleLength","categoryLength","alphaNumeric","String","fromCharCode","data","yValue","size","serializeDefaultContentType","serializeOverrideContentType","worksheetType","sharedStringType","serializeRelationShip","getNextChartRelationShipID","serializeTextProperties","serializeChartPlotArea","serializeShapeProperties","serializationChartType","chartType","isPieTypeSerialization","barDiv","grouping","chartGrouping","valueSheet","parseChartDataPoint","parseChartSeriesColor","fillColor","parseChartDataLabels","parseChartTrendLines","serializeChartErrorBar","serializeDefaultShapeProperties","categoryType","categoryRef","cacheType","serializeChartCategory","serializeChartValue","sliceAngle","holeSize","isStackedPercentage","serializeCategoryAxis","serializeValueAxis","dataTable","showHorzBorder","showVertBorder","showOutline","showKeys","serializeChartLegend","legendPosition","chartLegendPosition","title","fill","serializeChartTitleFont","errorBar","errorBarValueType","endStyle","valueType","axisType","formatCode","serializeAxis","valueAxis","crossBetween","axisID","axis","majorTickMark","minorTickMark","tickLabelPosition","chartTrendLineType","dispRSqr","dispEq","solidFill","serializeChartSolidFill","trendlineType","dataLabels","position","dataLabelPosition","isLegendKey","isBubbleSize","isCategoryName","isSeriesName","isValue","isPercentage","isLeaderLines","color","isLine","serializeDefaultLineProperties","chartTitleName","fontSize","serializeFont","fontName","fontSizeCalc","isSeriesFill","dataPoints","symbolType","points","chartCategory","chartCategoryCount","serializeChartYValue","chartData","addChartRelation","documentCharts","chartCollection","relationId","sourceString","startString","lineWeight","margin","vert","getTextVerticalAlignment","getTextVerticalAlignmentProperty","wrappingStyle","getTextWrappingStyle","textWrappingStyle","wrapType","getTextWrappingType","imageStringInfo","formatClippedString","extension","updateShapeId","documentImages","remove","externalImages","newRId","serializeBlipExtensions","l","t","r","b","isSvgData","tOwner","updateHFImageRels","addImageRelation","svgImages","imageCollection","isSvgImage","headerId","types","hfKeys","headerImages","headerFooterSvgImages","headerFooterImages","tableFormat","serializeTableFormat","serializeTableGrid","mHorizontalMerge","cellFormats","rows","rowIndex","owner_1","serializeRowFormat","cells","cellLength","prevColIndex","cell","columnIndex","cellFormat","checkIndex","getMergeCellFormat","serializeTableCell","set","mergeFormat","mergedCellFormat","before","xmlWriter","mergeStart","serializeCellWidth","serializeCellMargins","serializeBorders","serializeShading","serializeTableCellDirection","serializeCellVerticalAlign","num","itemIndex","serializeGridColumns","serializeTableRows","serializeCells","serializeRowMargins","height","rowFormat","gridBefore","gridAfter","width","pointWidth","serializeCellFormat","increment","length_1","createCellForMerge","nextNode","collKey","endProperties","spanCellFormat","serializeColumnSpan","checkMergeCell","ensureMerge","tf","rf","serializeCellMerge","serializeGridSpan","cf","isserialized","currentIndex","cellIndex","prevIndex","createMerge","alignment","grid","gridValue","serializeTablePositioning","serializeTableWidth","serializeTableAlignment","serializeCellSpacing","serializeTableIndentation","serializeTableMargins","serializeTableBorders","serializeTblLayout","top_1","getTableVerticalRelation","getTableVerticalRelationEnumValue","getTableHorizontalRelation","horizontalAlignment","getTableHorizontalAlignment","verticalAlignment","getTableVerticalAlignment","horizontalPosition","verticalPosition","serializeMargins","tag","topMargin","leftMargin","bottomMargin","rightMargin","getTextureStyle","textureStyle","serializeParagraphBorders","formatPara","borders","multipler","isParagraphBorder","serializeBorder","border","tagName","multiplier","borderStyle","sz","space","getBorderStyle","tableIndent","tableWidth","field","formFieldData","type_1","getTextFormFieldType","getTextFormFieldFormat","span","writeElementString","getBreakClearType","encodeURI","isDeleteText","retrieveDeleteRevision","isField","localName","paragraphFormat","serializeListFormat","getOutlineLevelValue","serializeParagraphSpacing","serializeIndentation","serializeParagraphAlignment","serializeTabs","outlineLvl","lvlNumber","tabStops","serializeTab","tabStop","getTabJustification","getTabLeader","isNaN","textWrappingType","dateStorageFormat","dateCalendarType","contentControlAppearance","textFormFieldFormat","textFormFieldType","tabLeader","tabJustification","tableVerticalPosition","tableHorizontalPosition","tableRelation","shapeVerticalAlignment","shapeHorizontalAlignment","biDirectionalOverride","breakClearType","lf","listId","txtAlignment","isBidi","value","lineSpacingValue","lineSpacingType","serializeCustomXMLMapping","customXML","customXmlWriter","xmlData","itemID","fileIndex","itemPath","createXMLItem","createXMLItemProps","customXMLRelation","xmlBlob","customitemPropsPath","serializeDefaultStyles","serializeDocumentStyles","style","getStyleType","list","isThemeFont","serializeBoolProperty","getHighlightColor","getUnderlineStyle","substr","styleType","underlineStyle","highlight","serializeAbstractListStyles","serializeListInstances","listStyles","abstractList","generateHex","ilvl","cnt","serializeListLevel","lvl","serializeLevelOverrides","floor","random","toUpperCase","listLevel","levelIndex","getLevelPattern","serializeLevelFollow","serializeLevelText","levelPattern","lvlIndex","fc","serializeThemeFontLang","isLanguageIdBi","isLanguageId","isLanguageIdFarEast","ascii","replace","bidi","farEast","serializeDocumentProtectionSettings","editMode","tabWidth","compatValue","getCompatibilityModeValue","getCompatibilityModeEnumValue","contentType","serializeHeaderFooter","headerFooterPath","headerFooterRelsPath","serializeHeader","serializeFooter","header","writeHFCommonAttributes","serializeHFRelations","hasHFImage","serializeImagesRelations","serializeSvgImageRelation","footer","serializeHeaderFooterRelations","serializeChartDocumentRelations","serializeExternalLinkImages","charts","resetChartRelationShipId","chartColorPath","chartRelationPath","chartExcelPath","isSvg","mImage","imageInfo","imageBlob","encodedString","input","keyStr","chr1","chr2","chr3","encode1","encode2","encode3","encode4","resultIndex","totalLength","charAt","output","Uint8Array","serializeHFRelation","relType","relationshipID","relationshipType","targetPath","resetRelationShipID","serializeHFContentTypes","SerializeEFContentTypes","serializeHeaderFootersContentType","headerFooterType","partName","serializeEFContentType"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/writer/word-export.js"],"sourcesContent":["import { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { XmlWriter } from '@syncfusion/ej2-file-utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../index';\nimport { Dictionary, LocaleId } from '../../index';\nimport { sectionsProperty, paraStyleNameProperty, isLegalStyleNumberingProperty, breakClearTypeProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, backgroundProperty, stylesProperty, defaultTabWidthProperty, formattingProperty, trackChangesProperty, protectionTypeProperty, enforcementProperty, hashValueProperty, saltValueProperty, doNotUseHTMLParagraphAutoSpacingProperty, formFieldShadingProperty, footnotesProperty, endnotesProperty, compatibilityModeProperty, themeFontLanguagesProperty, themesProperty, nameProperty, basedOnProperty, nextProperty, linkProperty, localeIdProperty, localeIdFarEastProperty, localeIdBidiProperty, boldProperty, italicProperty, underlineProperty, baselineAlignmentProperty, strikethroughProperty, highlightColorProperty, fontSizeProperty, fontColorProperty, fontFamilyProperty, styleNameProperty, bidiProperty, bdoProperty, fontSizeBidiProperty, fontFamilyBidiProperty, boldBidiProperty, italicBidiProperty, allCapsProperty, complexScriptProperty, fontFamilyAsciiProperty, fontFamilyFarEastProperty, fontFamilyNonFarEastProperty, revisionIdsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, spaceAfterAutoProperty, spaceBeforeAutoProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, keepWithNextProperty, widowControlProperty, keepLinesTogetherProperty, outlineLevelProperty, contextualSpacingProperty, bordersProperty, tabsProperty, headerDistanceProperty, footerDistanceProperty, differentFirstPageProperty, differentOddAndEvenPagesProperty, pageWidthProperty, pageHeightProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, restartPageNumberingProperty, pageStartingNumberProperty, endnoteNumberFormatProperty, footNoteNumberFormatProperty, restartIndexForFootnotesProperty, restartIndexForEndnotesProperty, initialFootNoteNumberProperty, initialEndNoteNumberProperty, pageNumberStyleProperty, columnsProperty, numberOfColumnsProperty, equalWidthProperty, lineBetweenColumnsProperty, breakCodeProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, allowBreakAcrossPagesProperty, isHeaderProperty, heightTypeProperty, gridBeforeProperty, gridBeforeWidthProperty, gridBeforeWidthTypeProperty, gridAfterProperty, gridAfterWidthProperty, gridAfterWidthTypeProperty, allowAutoFitProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, textureProperty, backgroundColorProperty, foregroundColorProperty, shadowProperty, hasNoneStyleProperty, verticalProperty, horizontalProperty, diagonalUpProperty, diagonalDownProperty, lineStyleProperty, lineWidthProperty, dataFormatProperty, yValueProperty, chartDataProperty, categoryXNameProperty, lineProperty, foreColorProperty, directionProperty, endStyleProperty, numberValueProperty, markerStyleProperty, markerSizeProperty, forwardProperty, backwardProperty, interceptProperty, isDisplayRSquaredProperty, isDisplayEquationProperty, seriesNameProperty, dataLabelProperty, errorBarProperty, seriesFormatProperty, trendLinesProperty, dataPointsProperty, firstSliceAngleProperty, holeSizeProperty, isLegendKeyProperty, isBubbleSizeProperty, isCategoryNameProperty, isSeriesNameProperty, isValueProperty, isPercentageProperty, isLeaderLinesProperty, showSeriesKeysProperty, hasHorizontalBorderProperty, hasVerticalBorderProperty, hasBordersProperty, chartCategoryProperty, chartSeriesProperty, chartTitleAreaProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartPrimaryValueAxisProperty, chartTitleProperty, chartTypeProperty, gapWidthProperty, overlapProperty, chartDataTableProperty, textProperty, shapeIdProperty, alternativeTextProperty, widthProperty, heightProperty, lineFormatProperty, fillFormatProperty, textWrappingStyleProperty, textWrappingTypeProperty, zOrderPositionProperty, layoutInCellProperty, lockAnchorProperty, autoShapeTypeProperty, textFrameProperty, colorProperty, fillProperty, textVerticalAlignmentProperty, imageStringProperty, metaFileImageStringProperty, isMetaFileProperty, topProperty, bottomProperty, rightProperty, leftProperty, formFieldDataProperty, fieldTypeProperty, textInputProperty, checkBoxProperty, dropDownListProperty, defaultValueProperty, formatProperty, sizeTypeProperty, sizeProperty, checkedProperty, dropDownItemsProperty, selectedIndexProperty, commentIdProperty, commentCharacterTypeProperty, footnoteTypeProperty, inlinesProperty, contentControlPropertiesProperty, lockContentControlProperty, lockContentsProperty, tagProperty, titleProperty, hasPlaceHolderTextProperty, multiLineProperty, isTemporaryProperty, dateCalendarTypeProperty, dateStorageFormatProperty, dateDisplayLocaleProperty, dateDisplayFormatProperty, isCheckedProperty, uncheckedStateProperty, checkedStateProperty, contentControlListItemsProperty, xmlMappingProperty, fontProperty, valueProperty, displayTextProperty, isMappedProperty, xPathProperty, storeItemIdProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, descriptionProperty, wrapTextAroundProperty, positioningProperty, tableFormatProperty, allowOverlapProperty, distanceTopProperty, distanceRightProperty, distanceLeftProperty, distanceBottomProperty, verticalOriginProperty, verticalPositionProperty, horizontalOriginProperty, horizontalAlignmentProperty, horizontalPositionProperty, blocksProperty, headerProperty, footerProperty, evenHeaderProperty, evenFooterProperty, firstPageHeaderProperty, firstPageFooterProperty, headersFootersProperty, sectionFormatProperty, listLevelPatternProperty, followCharacterProperty, startAtProperty, levelNumberProperty, numberFormatProperty, abstractListIdProperty, levelsProperty, overrideListLevelProperty, levelOverridesProperty, separatorProperty, continuationSeparatorProperty, continuationNoticeProperty, bookmarkTypeProperty, propertiesProperty, tabJustificationProperty, positionProperty, deletePositionProperty, tabLeaderProperty, editRangeIdProperty, columnFirstProperty, columnLastProperty, userProperty, groupProperty, editableRangeStartProperty, spaceProperty, fontSchemeProperty, fontSchemeNameProperty, majorFontSchemeProperty, minorFontSchemeProperty, fontSchemeListProperty, fontTypefaceProperty, typefaceProperty, panoseProperty, typeProperty, majorUnitProperty, maximumValueProperty, minimumValueProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, rgbProperty, appearanceProperty, lineFormatTypeProperty, allowSpaceOfSameStyleInTableProperty, weightProperty, fontNameProperty, columnIndexProperty, isAfterRowMarkProperty, isAfterParagraphMarkProperty, columnCountProperty, gridProperty, characterSpacingProperty, scalingProperty, horizontalRuleProperty } from '../../index';\n/**\n * Exports the document to Word format.\n */\nvar WordExport = /** @class */ (function () {\n    function WordExport() {\n        //Part path\n        this.customXMLItemsPath = 'customXml/item';\n        this.customXMLItemsPropspath = 'customXml/itemProps';\n        this.itemPropsPath = 'itemProps';\n        this.documentPath = 'word/document.xml';\n        this.stylePath = 'word/styles.xml';\n        this.chartPath = 'word/charts';\n        this.numberingPath = 'word/numbering.xml';\n        this.settingsPath = 'word/settings.xml';\n        this.headerPath = 'word/header';\n        this.footerPath = 'word/footer';\n        //private commentsPath: string = 'word/comments.xml';\n        this.imagePath = 'word/media/image';\n        this.footnotesPath = 'word/footnotes.xml';\n        this.endnotesPath = 'word/endnotes.xml';\n        this.appPath = 'docProps/app.xml';\n        this.corePath = 'docProps/core.xml';\n        // private CustomPath: string = 'docProps/custom.xml';\n        // private FontTablePath: string = 'word/fontTable.xml';\n        this.contentTypesPath = '[Content_Types].xml';\n        // private ChartsPath: string = 'word/charts/';\n        this.defaultEmbeddingPath = 'word/embeddings/';\n        this.commentsPath = 'word/comments.xml';\n        this.commentsExtendedPath = 'word/commentsExtended.xml';\n        // private EmbeddingPath:string = 'word\\embeddings\\';\n        // private DrawingPath:string = 'word\\drawings\\';\n        this.themePath = 'word/theme/theme1.xml';\n        // private FontsPath:string = 'word\\fonts\\';\n        // private DiagramPath:string = \"word/diagrams/';\n        // private ControlPath:string = \"word/activeX/';\n        // private VbaProject: string = 'vbaProject.bin';\n        // private VbaData: string = 'vbaData.xml';\n        // private VbaProjectPath: string = 'word/vbaProject.bin';\n        // private VbaDataPath: string = 'word/vbaData.xml';\n        // private CustomXMLPath:string = 'customXml\\';\n        //Relationship path\n        this.generalRelationPath = '_rels/.rels';\n        this.wordRelationPath = 'word/_rels/document.xml.rels';\n        this.customXMLRelPath = 'customXml/_rels/item';\n        this.excelRelationPath = 'xl/_rels/workbook.xml.rels';\n        // private FontRelationPath: string = 'word/_rels/fontTable.xml.rels';\n        // private CommentsRelationPath: string = 'word/_rels/comments.xml.rels';\n        this.footnotesRelationPath = 'word/_rels/footnotes.xml.rels';\n        this.endnotesRelationPath = 'word/_rels/endnotes.xml.rels';\n        // private NumberingRelationPath: string = 'word/_rels/numbering.xml.rels';\n        this.headerRelationPath = 'word/_rels/header';\n        this.footerRelationPath = 'word/_rels/footer';\n        // private SettingsRelationpath: string = 'word/_rels/settings.xml.rels';\n        // private VbaProjectRelsPath: string = 'word/_rels/vbaProject.bin.rels';\n        //Content type of the parts\n        this.xmlContentType = 'application/xml';\n        this.fontContentType = 'application/vnd.openxmlformats-officedocument.obfuscatedFont';\n        this.documentContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml';\n        this.TemplateContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml';\n        // private CommentsContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml';\n        this.settingsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml';\n        this.commentsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml';\n        this.commentsExContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.commentsExtended+xml';\n        this.endnoteContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml';\n        // private FontTableContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml';\n        this.footerContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml';\n        this.footnoteContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml';\n        // private GlossaryDocumentContentType: string = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml';\n        this.headerContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml';\n        this.numberingContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml';\n        this.stylesContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml';\n        this.webSettingsContentType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml';\n        this.appContentType = 'application/vnd.openxmlformats-officedocument.extended-properties+xml';\n        this.coreContentType = 'application/vnd.openxmlformats-package.core-properties+xml';\n        this.customContentType = 'application/vnd.openxmlformats-officedocument.custom-properties+xml';\n        this.customXmlContentType = 'application/vnd.openxmlformats-officedocument.customXmlProperties+xml';\n        this.relationContentType = 'application/vnd.openxmlformats-package.relationships+xml';\n        // private DiagramColor: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml';\n        // private DiagramData: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml';\n        // private DiagramLayout: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml';\n        // private DiagramStyle: string = 'application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml';\n        this.chartsContentType = 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml';\n        this.themeContentType = 'application/vnd.openxmlformats-officedocument.theme+xml';\n        // private ChartDrawingContentType: string = 'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml';\n        // private ActiveXContentType: string = 'application/vnd.ms-office.activeX+xml';\n        // private ActiveXBinContentType: string = 'application/vnd.ms-office.activeX';\n        this.tableStyleContentType = 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml';\n        // private ChartStyleContentType: string = 'application/vnd.ms-office.chartstyle+xml';\n        this.chartColorStyleContentType = 'application/vnd.ms-office.chartcolorstyle+xml';\n        // private VbaProjectContentType: string = 'application/vnd.ms-office.vbaProject';\n        // private VbaDataContentType: string = 'application/vnd.ms-word.vbaData+xml';\n        // private MacroDocumentContentType: string = 'application/vnd.ms-word.document.macroEnabled.main+xml';\n        // private MacroTemplateContentType: string = 'application/vnd.ms-word.template.macroEnabledTemplate.main+xml';\n        // private OleObjectContentType: string = 'application/vnd.openxmlformats-officedocument.oleObject';\n        // Relationship types of document parts\n        // private AltChunkRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/aFChunk';\n        this.commentsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments';\n        this.commentsExRelType = 'http://schemas.microsoft.com/office/2011/relationships/commentsExtended';\n        this.settingsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings';\n        this.endnoteRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes';\n        // private FontTableRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable';\n        this.footerRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer';\n        this.footnoteRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes';\n        this.headerRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header';\n        this.documentRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument';\n        this.numberingRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering';\n        this.stylesRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles';\n        // private OleObjectRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject';\n        this.chartRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart';\n        this.ThemeRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme';\n        this.fontRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/font';\n        this.tableStyleRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/tableStyles';\n        this.coreRelType = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\n        this.appRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\n        this.customRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\n        this.imageRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image';\n        this.hyperlinkRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink';\n        this.controlRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/control';\n        this.packageRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/package';\n        // private VbaProjectRelType: string = 'http://schemas.microsoft.com/office/2006/relationships/vbaProject';\n        // private VbaDataRelType: string = 'http://schemas.microsoft.com/office/2006/relationships/wordVbaData';\n        this.customXmlRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml';\n        this.customUIRelType = 'http://schemas.microsoft.com/office/2006/relationships/ui/extensibility';\n        this.attachedTemplateRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/attachedTemplate';\n        this.chartColorStyleRelType = 'http://schemas.microsoft.com/office/2011/relationships/chartColorStyle';\n        // private ChartStyleRelType: string = 'http://schemas.microsoft.com/office/2011/relationships/chartStyle';\n        // private ChartUserShapesRelType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartUserShapes';\n        // private ChartContentType: string = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/package';\n        // Namespaces\n        // private PKG_namespace: string = 'http://schemas.microsoft.com/office/2006/xmlPackage';\n        this.wNamespace = 'http://schemas.openxmlformats.org/wordprocessingml/2006/main';\n        this.wpNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing';\n        this.pictureNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/picture';\n        this.aNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/main';\n        this.a14Namespace = 'http://schemas.microsoft.com/office/drawing/2010/main';\n        this.svgNamespace = 'http://schemas.microsoft.com/office/drawing/2016/SVG/main';\n        this.rNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships';\n        this.rpNamespace = 'http://schemas.openxmlformats.org/package/2006/relationships';\n        this.vNamespace = 'urn:schemas-microsoft-com:vml';\n        this.oNamespace = 'urn:schemas-microsoft-com:office:office';\n        this.xmlNamespace = 'http://www.w3.org/XML/1998/namespace';\n        this.w10Namespace = 'urn:schemas-microsoft-com:office:word';\n        this.cpNamespace = 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties';\n        this.dcNamespace = 'http://purl.org/dc/elements/1.1/';\n        // private DCTERMS_namespace: string = 'http://purl.org/dc/terms/';\n        // private XSI_namespace: string = 'http://www.w3.org/2001/XMLSchema-instance';\n        this.docPropsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/extended-properties';\n        this.veNamespace = 'http://schemas.openxmlformats.org/markup-compatibility/2006';\n        this.mNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/math';\n        this.wneNamespace = 'http://schemas.microsoft.com/office/word/2006/wordml';\n        // private DCMI_namespace: string = 'http://purl.org/dc/dcmitype/';\n        this.customPropsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/custom-properties';\n        this.vtNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes';\n        this.chartNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/chart';\n        this.slNamespace = 'http://schemas.openxmlformats.org/schemaLibrary/2006/main';\n        //2003WML namespace\n        // private amlNamespace: string = 'http://schemas.microsoft.com/aml/2001/core';\n        this.dtNamespace = 'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882';\n        this.wmlNamespace = 'http://schemas.microsoft.com/office/word/2003/wordml';\n        //2010 namespaces\n        this.w14Namespace = 'http://schemas.microsoft.com/office/word/2010/wordml';\n        this.wpCanvasNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas';\n        this.wpDrawingNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing';\n        this.wpGroupNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingGroup';\n        this.wpInkNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingInk';\n        this.wpShapeNamespace = 'http://schemas.microsoft.com/office/word/2010/wordprocessingShape';\n        //2013 namespaces\n        this.w15Namespace = 'http://schemas.microsoft.com/office/word/2012/wordml';\n        this.diagramNamespace = 'http://schemas.openxmlformats.org/drawingml/2006/diagram';\n        //Encryption namespaces\n        this.eNamespace = 'http://schemas.microsoft.com/office/2006/encryption';\n        this.pNamespace = 'http://schemas.microsoft.com/office/2006/keyEncryptor/password';\n        this.certNamespace = 'http://schemas.microsoft.com/office/2006/keyEncryptor/certificate';\n        this.cxNamespace = 'http://schemas.microsoft.com/office/drawing/2014/chartex';\n        // chart\n        this.c15Namespace = 'http://schemas.microsoft.com/office/drawing/2015/06/chart';\n        this.c7Namespace = 'http://schemas.microsoft.com/office/drawing/2007/8/2/chart';\n        this.csNamespace = 'http://schemas.microsoft.com/office/drawing/2012/chartStyle';\n        // worksheet\n        this.spreadSheetNamespace = 'http://schemas.openxmlformats.org/spreadsheetml/2006/main';\n        this.spreadSheet9 = 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main';\n        // Dls xml tags\n        this.cRelationshipsTag = 'Relationships';\n        this.cRelationshipTag = 'Relationship';\n        this.cIdTag = 'Id';\n        this.cTypeTag = 'Type';\n        this.cTargetTag = 'Target';\n        this.cUserShapesTag = 'userShapes';\n        this.cExternalData = 'externalData';\n        this.twipsInOnePoint = 20;\n        this.twentiethOfPoint = 20;\n        this.borderMultiplier = 8;\n        this.percentageFactor = 50;\n        this.emusPerPoint = 12700;\n        // private const TOC_SYMBOL:string = (char)0x01;\n        // private const FOOTNOTE_SYMBOL:string = (char)0x02;\n        // private const PAGENUMBER_SYMBOL:string = (char)0xB;\n        // private DEF_FIT_TEXT_TO_SHAPE: string = 'mso-fit-shape-to-text:t';\n        // Document tags\n        this.cConditionalTableStyleTag = 'tblStylePr';\n        this.cTableFormatTag = 'tblPr';\n        this.cTowFormatTag = 'trPr';\n        this.cCellFormatTag = 'tcPr';\n        this.cParagraphFormatTag = 'pPr';\n        this.cCharacterFormatTag = 'rPr';\n        this.packageType = 'http://schemas.microsoft.com/office/2006/xmlPackage';\n        this.relsPartPath = '/_rels/.rels';\n        this.documentRelsPartPath = '/word/_rels/document.xml.rels';\n        this.webSettingsPath = '/word/webSettings.xml';\n        this.wordMLDocumentPath = '/word/document.xml';\n        this.wordMLStylePath = '/word/styles.xml';\n        this.wordMLNumberingPath = '/word/numbering.xml';\n        this.wordMLSettingsPath = '/word/settings.xml';\n        this.wordMLHeaderPath = '/word/header';\n        this.wordMLFooterPath = '/word/footer';\n        this.wordMLCommentsPath = '/word/comments.xml';\n        this.wordMLImagePath = '/word/media/image';\n        this.wordMLFootnotesPath = '/word/footnotes.xml';\n        this.wordMLEndnotesPath = '/word/endnotes.xml';\n        this.wordMLAppPath = '/docProps/app.xml';\n        this.wordMLCorePath = '/docProps/core.xml';\n        this.wordMLCustomPath = '/docProps/custom.xml';\n        this.wordMLFontTablePath = '/word/fontTable.xml';\n        this.wordMLChartsPath = '/word/charts/';\n        this.wordMLDefaultEmbeddingPath = '/word/embeddings/';\n        this.wordMLEmbeddingPath = '/word/embeddings/';\n        this.wordMLDrawingPath = '/word/drawings/';\n        this.wordMLThemePath = '/word/theme/theme1.xml';\n        this.wordMLFontsPath = '/word/fonts/';\n        this.wordMLDiagramPath = '/word/diagrams/';\n        this.wordMLControlPath = '/word/activeX/';\n        this.wordMLVbaProject = '/vbaProject.bin';\n        this.wordMLVbaData = '/vbaData.xml';\n        this.wordMLVbaProjectPath = '/word/vbaProject.bin';\n        this.wordMLVbaDataPath = '/word/vbaData.xml';\n        // private WordMLCustomXMLPath: string = '/customXml/';\n        this.wordMLWebSettingsPath = '/word/webSettings.xml';\n        this.wordMLCustomItemProp1Path = '/customXml/itemProps1.xml';\n        // private WordMLCustomXMLRelPath: string = '/customXml/_rels/item1.xml.rels';\n        this.wordMLFootnoteRelPath = '/word/_rels/footnotes.xml.rels';\n        this.wordMLEndnoteRelPath = '/word/_rels/endnotes.xml.rels';\n        this.wordMLSettingsRelPath = '/word/_rels/settings.xml.rels';\n        this.wordMLNumberingRelPath = '/word/_rels/numbering.xml.rels';\n        this.wordMLFontTableRelPath = '/word/_rels/fontTable.xml.rels';\n        this.wordMLCustomXmlPropsRelType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps';\n        this.wordMLControlRelType = 'http://schemas.microsoft.com/office/2006/relationships/activeXControlBinary';\n        this.wordMLDiagramContentType = 'application/vnd.ms-office.drawingml.diagramDrawing+xml';\n        this.dsNamespace = 'http://schemas.openxmlformats.org/officeDocument/2006/customXml';\n        this.excelFiles = undefined;\n        this.lastSection = false;\n        this.mRelationShipID = 0;\n        this.cRelationShipId = 0;\n        this.eRelationShipId = 0;\n        this.efRelationShipId = 0;\n        this.mDocPrID = 1;\n        this.chartCount = 0;\n        this.seriesCount = 0;\n        this.chartStringCount = 0;\n        this.mDifferentFirstPage = false;\n        this.mBookmarks = undefined;\n        this.mComments = [];\n        this.revisions = [];\n        this.customXMLProps = [];\n        this.paraID = 0;\n        this.commentParaID = 0;\n        this.commentParaIDInfo = {};\n        this.isInsideComment = false;\n        this.commentId = {};\n        this.currentCommentId = 0;\n        this.trackChangesId = 0;\n        this.prevRevisionIds = [];\n        this.isRevisionContinuous = false;\n        this.isBookmarkAtEnd = false;\n        this.isBookmarkAtRowEnd = false;\n        this.keywordIndex = undefined;\n        this.isHeaderFooter = false;\n        this.isSerializeFootEndNote = undefined;\n        this.containerWidth = 0;\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n        /* eslint-enable */\n    }\n    WordExport.prototype.getModuleName = function () {\n        return 'WordExport';\n    };\n    Object.defineProperty(WordExport.prototype, \"bookmarks\", {\n        // Gets the bookmark name\n        get: function () {\n            if (isNullOrUndefined(this.mBookmarks)) {\n                this.mBookmarks = [];\n            }\n            return this.mBookmarks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"documentImages\", {\n        // Gets the collection of images present in the document body\n        get: function () {\n            if (this.mDocumentImages === undefined) {\n                this.mDocumentImages = new Dictionary();\n            }\n            return this.mDocumentImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"svgImages\", {\n        // Gets the collection of images present in the document body\n        get: function () {\n            if (this.mSvgImages === undefined) {\n                this.mSvgImages = new Dictionary();\n            }\n            return this.mSvgImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"externalImages\", {\n        // Gets the collection of images present in the document body\n        get: function () {\n            if (this.mExternalLinkImages === undefined) {\n                this.mExternalLinkImages = new Dictionary();\n            }\n            return this.mExternalLinkImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"headerFooterImages\", {\n        // Gets the collections of images present in the HeaderFooters\n        get: function () {\n            if (this.mHeaderFooterImages === undefined) {\n                this.mHeaderFooterImages = new Dictionary();\n            }\n            return this.mHeaderFooterImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"headerFooterSvgImages\", {\n        // Gets the collections of images present in the HeaderFooters\n        get: function () {\n            if (this.mHeaderFooterSvgImages === undefined) {\n                this.mHeaderFooterSvgImages = new Dictionary();\n            }\n            return this.mHeaderFooterSvgImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"documentCharts\", {\n        // Gets the collection of charts present in the document body\n        get: function () {\n            if (this.mDocumentCharts === undefined) {\n                this.mDocumentCharts = new Dictionary();\n            }\n            return this.mDocumentCharts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"headersFooters\", {\n        /// Gets the HeaderFooter Collection\n        get: function () {\n            if (this.mHeaderFooterColl === undefined) {\n                this.mHeaderFooterColl = new Dictionary();\n            }\n            return this.mHeaderFooterColl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WordExport.prototype, \"endnotesFootnotes\", {\n        /// Gets the Endnote and Footnote Collection\n        get: function () {\n            if (this.mFootEndnotesColl === undefined) {\n                this.mFootEndnotesColl = new Dictionary();\n            }\n            return this.mFootEndnotesColl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @param {DocumentHelper} documentHelper - Document helper\n     * @param {string} fileName - file name\n     * @returns {void}\n     */\n    WordExport.prototype.save = function (documentHelper, fileName, formatType) {\n        var _this = this;\n        this.fileName = fileName;\n        this.serialize(documentHelper, formatType);\n        var excelFiles = this.serializeExcelFiles();\n        if (excelFiles && excelFiles.length > 0) {\n            Promise.all(excelFiles).then(function () {\n                _this.saveInternal(fileName, formatType);\n            });\n        }\n        else {\n            this.saveInternal(fileName, formatType);\n        }\n        this.close();\n    };\n    WordExport.prototype.saveInternal = function (fileName, formatType) {\n        if (formatType == 'Docx') {\n            this.mArchive.save(fileName + '.docx').then(function (mArchive) {\n                mArchive.destroy();\n            });\n        }\n        else if (formatType == 'Dotx') {\n            this.mArchive.save(fileName + '.dotx').then(function (mArchive) {\n                mArchive.destroy();\n            });\n        }\n    };\n    /**\n     * @private\n     * @param {DocumentHelper} documentHelper - Document helper\n     * @returns {Promise<Blob>} - Return Promise\n     */\n    WordExport.prototype.saveAsBlob = function (documentHelper, formatType) {\n        var _this = this;\n        this.serialize(documentHelper, formatType);\n        var excelFiles = this.serializeExcelFiles();\n        /* eslint-disable */\n        return new Promise(function (resolve, reject) {\n            if (excelFiles.length > 0) {\n                Promise.all(excelFiles).then(function () {\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        _this.mArchive.destroy();\n                        blob = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\n                        resolve(blob);\n                    });\n                });\n            }\n            else {\n                _this.mArchive.saveAsBlob().then(function (blob) {\n                    _this.mArchive.destroy();\n                    blob = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\n                    resolve(blob);\n                });\n            }\n        });\n        /* eslint-enable */\n    };\n    WordExport.prototype.serializeExcelFiles = function () {\n        var _this = this;\n        var excelFiles = this.excelFiles;\n        var files = [];\n        if (excelFiles && excelFiles.length > 0) {\n            var _loop_1 = function (i) {\n                var fileName = excelFiles.keys[parseInt(i.toString(), 10)];\n                var excelFile = excelFiles.get(fileName);\n                var excelPromise = excelFile.saveAsBlob();\n                files.push(excelPromise);\n                excelPromise.then(function (blob) {\n                    var zipArchiveItem = new ZipArchiveItem(blob, fileName);\n                    _this.mArchive.addItem(zipArchiveItem);\n                });\n            };\n            for (var i = 0; i < excelFiles.length; i++) {\n                _loop_1(i);\n            }\n            this.excelFiles.clear();\n        }\n        return files;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    WordExport.prototype.saveExcel = function () {\n        var xlsxPath = this.defaultEmbeddingPath + 'Microsoft_Excel_Worksheet' + this.chartCount + '.xlsx';\n        this.excelFiles.add(xlsxPath, this.mArchiveExcel);\n        this.mArchiveExcel = undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    WordExport.prototype.destroy = function () {\n        this.clearDocument();\n        this.mRelationShipID = undefined;\n        this.mDocPrID = undefined;\n        this.mDifferentFirstPage = undefined;\n        this.fileName = undefined;\n        this.imageRelationIds = undefined;\n        this.svgImageRelationIds = undefined;\n        if (this.mArchive) {\n            this.mArchive.destroy();\n            this.mArchive = undefined;\n        }\n        if (this.mArchiveExcel) {\n            this.mArchiveExcel.destroy();\n            this.mArchiveExcel = undefined;\n        }\n    };\n    // Saves the word document in the stream\n    WordExport.prototype.serialize = function (documentHelper, formatType) {\n        this.keywordIndex = documentHelper.owner.documentEditorSettings.optimizeSfdt ? 1 : 0;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        var document = documentHelper.owner.sfdtExportModule.write(this.keywordIndex);\n        this.setDocument(document);\n        this.mComments = documentHelper.comments;\n        this.mCustomXML = documentHelper.customXmlData;\n        this.mImages = documentHelper.images;\n        this.revisions = documentHelper.owner.revisions.changes;\n        this.mArchive = new ZipArchive();\n        this.mArchive.compressionLevel = 'Normal';\n        this.commentParaIDInfo = {};\n        this.commentParaID = 0;\n        this.currentCommentId = 0;\n        this.commentId = {};\n        this.mVerticalMerge = new Dictionary();\n        this.mGridSpans = new Dictionary();\n        this.imageRelationIds = new Dictionary();\n        this.svgImageRelationIds = new Dictionary();\n        var contenttype;\n        //document.xml\n        this.serializeDocument();\n        //Styles.xml\n        this.serializeStyles();\n        //numbering.xml\n        this.serializeNumberings();\n        //comments.xml\n        this.serializeComments();\n        //commentsExtended.xml\n        this.serializeCommentsExtended();\n        //theme.xml\n        // if (m_document.DocHasThemes && !isNullOrUndefined(m_document.Themes))\n        this.serializeThemes();\n        // else\n        // this.serializeDefaultThemes();\n        //settings.xml\n        this.serializeSettings();\n        //core.xml\n        this.serializeCoreProperties();\n        //app.xml\n        this.serializeAppProperties();\n        //fontTable.xml\n        this.serializeFontTable(contenttype);\n        //custom.xml\n        // if (!isNullOrUndefined(this.wordDocument.CustomDocumentProperties) && m_document.CustomDocumentProperties.length > 0) {\n        //     SerializeCustomProperties();\n        // }\n        //Settings Relations\n        this.serializeSettingsRelation();\n        //Numbering relation if the document has picture bullet\n        // if (PictureBullets.length > 0) {\n        //     SerializeNumberingsRelation();\n        // }\n        this.serializeHeaderFooters();\n        this.serializeFootnotes();\n        this.serializeEndnotes();\n        //document relations\n        this.serializeDocumentRelations();\n        // Add controls to archieve.\n        // if (ControlsPathNames.length > 0) {\n        //     AddControlsToZip(m_document.DocxPackage);\n        // }\n        // if (!isNullOrUndefined(m_document.CustomUIPartContainer))\n        //     AddPartContainerToArchive(m_document.CustomUIPartContainer);\n        // if (!isNullOrUndefined(m_document.CustomXMLContainer))\n        //     AddPartContainerToArchive(m_document.CustomXMLContainer);\n        //general relations\n        this.serializeGeneralRelations();\n        //[ContentTypes].xml\n        this.serializeContentTypes(contenttype, formatType);\n        // Clears the internal fields maintained for serializing.\n        this.clearDocument();\n    };\n    // Sets the document\n    WordExport.prototype.setDocument = function (document, keyindex) {\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = keyindex;\n        }\n        this.document = document;\n        this.mSections = document[sectionsProperty[this.keywordIndex]];\n        this.mLists = document[listsProperty[this.keywordIndex]];\n        this.mAbstractLists = document[abstractListsProperty[this.keywordIndex]];\n        this.defCharacterFormat = document[characterFormatProperty[this.keywordIndex]];\n        this.defParagraphFormat = document[paragraphFormatProperty[this.keywordIndex]];\n        this.defaultTabWidthValue = document[defaultTabWidthProperty[this.keywordIndex]];\n        this.themeFontLang = document[themeFontLanguagesProperty[this.keywordIndex]];\n        this.dontUseHtmlParagraphAutoSpacing = HelperMethods.parseBoolValue(document[doNotUseHTMLParagraphAutoSpacingProperty[this.keywordIndex]]);\n        this.mStyles = document[stylesProperty[this.keywordIndex]];\n        this.mThemes = document[themesProperty[this.keywordIndex]];\n        this.formatting = HelperMethods.parseBoolValue(document[formattingProperty[this.keywordIndex]]);\n        this.enforcement = HelperMethods.parseBoolValue(document[enforcementProperty[this.keywordIndex]]);\n        this.hashValue = document[hashValueProperty[this.keywordIndex]];\n        this.saltValue = document[saltValueProperty[this.keywordIndex]];\n        this.protectionType = document[protectionTypeProperty[this.keywordIndex]];\n        this.formFieldShading = HelperMethods.parseBoolValue(document[formFieldShadingProperty[this.keywordIndex]]);\n        this.trackChanges = HelperMethods.parseBoolValue(document[trackChangesProperty[this.keywordIndex]]);\n        this.compatibilityMode = document[compatibilityModeProperty[this.keywordIndex]];\n        this.allowSpaceOfSameStyleInTable = HelperMethods.parseBoolValue(document[allowSpaceOfSameStyleInTableProperty[this.keywordIndex]]);\n    };\n    // Clears the document\n    WordExport.prototype.clearDocument = function () {\n        // Owner Nodes\n        this.section = undefined;\n        this.lastSection = undefined;\n        this.blockOwner = undefined;\n        this.paragraph = undefined;\n        this.table = undefined;\n        this.row = undefined;\n        this.headerFooter = undefined;\n        this.commentParaIDInfo = {};\n        this.commentParaID = 0;\n        this.currentCommentId = 0;\n        this.commentId = {};\n        this.document = undefined;\n        this.mSections = undefined;\n        this.mLists = undefined;\n        this.mAbstractLists = undefined;\n        this.defCharacterFormat = undefined;\n        this.defParagraphFormat = undefined;\n        this.defaultTabWidthValue = undefined;\n        this.trackChanges = undefined;\n        this.customXMLProps = [];\n        this.mRelationShipID = 0;\n        this.eRelationShipId = 0;\n        this.cRelationShipId = 0;\n        this.efRelationShipId = 0;\n        this.mDocPrID = 1;\n        this.chartCount = 0;\n        this.keywordIndex = undefined;\n        this.mDifferentFirstPage = false;\n        if (this.mHeaderFooterColl) {\n            this.mHeaderFooterColl.destroy();\n            this.mHeaderFooterColl = undefined;\n        }\n        if (this.mVerticalMerge) {\n            this.mVerticalMerge.destroy();\n            this.mVerticalMerge = undefined;\n        }\n        if (this.mGridSpans) {\n            this.mGridSpans.destroy();\n            this.mGridSpans = undefined;\n        }\n        if (this.mDocumentImages) {\n            this.mDocumentImages.destroy();\n            this.mDocumentImages = undefined;\n        }\n        if (this.mSvgImages) {\n            this.mSvgImages.destroy();\n            this.mSvgImages = undefined;\n        }\n        if (this.mExternalLinkImages) {\n            this.mExternalLinkImages.destroy();\n            this.mExternalLinkImages = undefined;\n        }\n        if (this.mHeaderFooterImages) {\n            this.mHeaderFooterImages.destroy();\n            this.mHeaderFooterImages = undefined;\n        }\n        if (this.mHeaderFooterSvgImages) {\n            this.mHeaderFooterSvgImages.destroy();\n            this.mHeaderFooterSvgImages = undefined;\n        }\n        if (this.mDocumentCharts) {\n            this.mDocumentCharts.destroy();\n            this.mDocumentCharts = undefined;\n        }\n        if (this.mFootEndnotesColl) {\n            this.mFootEndnotesColl.destroy();\n            this.mFootEndnotesColl = undefined;\n        }\n    };\n    // Serializes the document elements (document.xml)\n    WordExport.prototype.serializeDocument = function () {\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'document', this.wNamespace);\n        this.writeCommonAttributeStrings(writer);\n        writer.writeStartElement('w', 'background', this.wNamespace);\n        writer.writeAttributeString('w', 'color', undefined, this.getColor(this.document[backgroundProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n        this.serializeDocumentBody(writer);\n        writer.writeEndElement(); //end of document tag\n        var archiveItem = new ZipArchiveItem(writer.buffer, this.documentPath);\n        this.mArchive.addItem(archiveItem);\n    };\n    WordExport.prototype.writeCommonAttributeStrings = function (writer) {\n        writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n        this.writeCustom(writer);\n        writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n        writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n        writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n        writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n        this.writeDup(writer);\n        writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n        writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15 wp14');\n    };\n    WordExport.prototype.writeDup = function (writer) {\n        writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n        writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n        writer.writeAttributeString('xmlns', 'wpg', undefined, this.wpGroupNamespace);\n        writer.writeAttributeString('xmlns', 'wpi', undefined, this.wpInkNamespace);\n    };\n    WordExport.prototype.writeCustom = function (writer) {\n        writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n        writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n    };\n    // Serializes the document body\n    WordExport.prototype.serializeDocumentBody = function (writer) {\n        writer.writeStartElement(undefined, 'body', this.wNamespace);\n        var count = this.document[sectionsProperty[this.keywordIndex]].length;\n        for (var i = 0; i < count; i++) {\n            this.section = this.document[sectionsProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n            this.lastSection = i === count - 1;\n            this.containerWidth = this.section[sectionFormatProperty[this.keywordIndex]][pageWidthProperty[this.keywordIndex]] - (this.section[sectionFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] + this.section[sectionFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]]);\n            this.serializeSection(writer, this.section, i === count - 1);\n            this.section = undefined;\n        }\n        writer.writeEndElement();\n    };\n    // Serializes the Section.\n    WordExport.prototype.serializeSection = function (writer, section, last) {\n        this.blockOwner = section;\n        if (!isNullOrUndefined(section[blocksProperty[this.keywordIndex]])) {\n            this.serializeBodyItems(writer, section[blocksProperty[this.keywordIndex]], last);\n        }\n        if (last) {\n            this.serializeSectionProperties(writer, section);\n        }\n        this.blockOwner = undefined;\n    };\n    // Serialize the comments (comments.xml)\n    WordExport.prototype.serializeComments = function () {\n        if (this.mComments.length === 0 || (this.mComments.length === 1 && this.mComments[0].text === '')) {\n            return;\n        }\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'comments', this.wNamespace);\n        this.serializeCommentCommonAttribute(writer);\n        this.serializeCommentInternal(writer, this.mComments);\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.commentsPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    //SerializeThemes the themes (theme.xml)\n    WordExport.prototype.serializeThemes = function () {\n        if (!isNullOrUndefined(this.mThemes)) {\n            var writer = new XmlWriter();\n            writer.writeStartElement('a', 'theme', this.aNamespace);\n            writer.writeAttributeString(undefined, 'name', undefined, 'Office Theme');\n            writer.writeStartElement(undefined, 'themeElements', this.aNamespace);\n            writer.writeRaw('<a:clrScheme name=\"Office\"><a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\" /></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\" /></a:lt1><a:dk2><a:srgbClr val=\"44546A\" /></a:dk2><a:lt2><a:srgbClr val=\"E7E6E6\" /></a:lt2><a:accent1><a:srgbClr val=\"4472C4\" /></a:accent1><a:accent2><a:srgbClr val=\"ED7D31\" /></a:accent2><a:accent3><a:srgbClr val=\"A5A5A5\" /></a:accent3><a:accent4><a:srgbClr val=\"FFC000\" /></a:accent4><a:accent5><a:srgbClr val=\"5B9BD5\" /></a:accent5><a:accent6><a:srgbClr val=\"70AD47\" /></a:accent6><a:hlink><a:srgbClr val=\"0563C1\" /></a:hlink><a:folHlink><a:srgbClr val=\"954F72\" /></a:folHlink></a:clrScheme>');\n            writer.writeStartElement(undefined, 'fontScheme', this.aNamespace);\n            writer.writeAttributeString(undefined, 'name', undefined, this.mThemes[fontSchemeNameProperty[this.keywordIndex]]);\n            writer.writeStartElement(undefined, 'majorFont', this.aNamespace);\n            for (var i = 0; i < this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]].length; i++) {\n                var theme = this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n                this.themeFont(writer, theme);\n            }\n            var keys = Object.keys(this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                this.themeType(writer, key, this.mThemes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]][\"\" + key]);\n            }\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'minorFont', this.aNamespace);\n            for (var i = 0; i < this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]].length; i++) {\n                var theme = this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontSchemeListProperty[this.keywordIndex]][parseInt(i.toString(), 10)];\n                this.themeFont(writer, theme);\n            }\n            keys = Object.keys(this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]]);\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                this.themeType(writer, key, this.mThemes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]][fontTypefaceProperty[this.keywordIndex]][\"\" + key]);\n            }\n            writer.writeEndElement();\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'fmtScheme', this.aNamespace);\n            writer.writeAttributeString(undefined, 'name', undefined, 'Office');\n            writer.writeRaw('<a:fillStyleLst><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"110000\" /><a:satMod val=\"105000\" /><a:tint val=\"67000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\" /><a:satMod val=\"103000\" /><a:tint val=\"73000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\" /><a:satMod val=\"109000\" /><a:tint val=\"81000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:satMod val=\"103000\" /><a:lumMod val=\"102000\" /><a:tint val=\"94000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:satMod val=\"110000\" /><a:lumMod val=\"100000\" /><a:shade val=\"100000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"99000\" /><a:satMod val=\"120000\" /><a:shade val=\"78000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill></a:fillStyleLst><a:lnStyleLst><a:ln w=\"6350\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln><a:ln w=\"12700\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln><a:ln w=\"19050\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:prstDash val=\"solid\" /><a:miter lim=\"800000\" /></a:ln></a:lnStyleLst><a:effectStyleLst><a:effectStyle><a:effectLst /></a:effectStyle><a:effectStyle><a:effectLst /></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"57150\" dist=\"19050\" dir=\"5400000\" algn=\"ctr\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"63000\" /></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle></a:effectStyleLst><a:bgFillStyleLst><a:solidFill><a:schemeClr val=\"phClr\" /></a:solidFill><a:solidFill><a:schemeClr val=\"phClr\"><a:tint val=\"95000\" /><a:satMod val=\"170000\" /></a:schemeClr></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"93000\" /><a:satMod val=\"150000\" /><a:shade val=\"98000\" /><a:lumMod val=\"102000\" /></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:tint val=\"98000\" /><a:satMod val=\"130000\" /><a:shade val=\"90000\" /><a:lumMod val=\"103000\" /></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"63000\" /><a:satMod val=\"120000\" /></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\" /></a:gradFill></a:bgFillStyleLst>');\n            writer.writeEndElement();\n            writer.writeEndElement();\n            writer.writeEndElement();\n            var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.themePath);\n            this.mArchive.addItem(zipArchiveItem);\n        }\n    };\n    WordExport.prototype.themeFont = function (writer, theme) {\n        if (theme[nameProperty[this.keywordIndex]] == 'latin' || theme[nameProperty[this.keywordIndex]] == 'ea' || theme[nameProperty[this.keywordIndex]] == 'cs') {\n            writer.writeStartElement(undefined, theme[nameProperty[this.keywordIndex]], this.aNamespace);\n            writer.writeAttributeString(undefined, 'typeface', undefined, theme[typefaceProperty[this.keywordIndex]]);\n            writer.writeAttributeString(undefined, 'panose', undefined, theme[panoseProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.themeType = function (writer, script, typeFace) {\n        writer.writeStartElement(undefined, 'font', this.aNamespace);\n        writer.writeAttributeString(undefined, 'script', undefined, script);\n        writer.writeAttributeString(undefined, 'typeface', undefined, typeFace);\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeCommentCommonAttribute = function (writer) {\n        writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n        writer.writeAttributeString('xmlns', 'cx', undefined, this.cxNamespace);\n        writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n        writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n        writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n        writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n        writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n        writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n        writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n        writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n    };\n    WordExport.prototype.serializeCommentInternal = function (writer, comments) {\n        for (var i = 0; i < comments.length; i++) {\n            var comment = comments[parseInt(i.toString(), 10)];\n            writer.writeStartElement('w', 'comment', this.wNamespace);\n            writer.writeAttributeString('w', 'id', this.wNamespace, this.commentId[comment.commentId].toString());\n            if (comment.author && comment.author !== ' ') {\n                writer.writeAttributeString('w', 'author', this.wNamespace, comment.author);\n            }\n            if (comment.date) {\n                writer.writeAttributeString('w', 'date', this.wNamespace, comment.date);\n            }\n            if (comment.initial && comment.initial !== '') {\n                writer.writeAttributeString('w', 'initials', this.wNamespace, comment.initial);\n            }\n            var blocks = this.retrieveCommentText(comment.text, comment.mentions);\n            for (var k = 0; k < blocks.length; k++) {\n                this.isInsideComment = true;\n                this.commentParaID++;\n                this.serializeBodyItem(writer, blocks[parseInt(k.toString(), 10)], true);\n                this.isInsideComment = false;\n            }\n            if (blocks.length === 0) {\n                this.isInsideComment = true;\n                this.commentParaID++;\n            }\n            this.commentParaIDInfo[comment.commentId] = this.commentParaID;\n            //}\n            this.isInsideComment = false;\n            //}\n            writer.writeEndElement();\n            if (comment.replyComments.length > 0) {\n                this.serializeCommentInternal(writer, comment.replyComments);\n            }\n        }\n    };\n    WordExport.prototype.retrieveCommentText = function (text, mentions) {\n        var blocks = [];\n        var multiText = text.split('\\n');\n        var tempText = \"\";\n        while (multiText.length > 0) {\n            var block = {};\n            block[inlinesProperty[this.keywordIndex]] = [];\n            var inlines = {};\n            var dataName = \"\";\n            if (mentions && mentions.length > 0) {\n                var text_1 = \"\";\n                var url = \"\";\n                for (var i = 0; i < mentions.length; i++) {\n                    dataName = mentions[parseInt(i.toString(), 10)].Name;\n                    if (multiText[0].indexOf('span') !== -1 && mentions[parseInt(i.toString(), 10)].Name) {\n                        var regex = /(<span[^>]*>.*<\\/span>)/;\n                        var match = multiText[0].match(regex);\n                        text_1 = multiText[0].substring(match.index + match[0].length);\n                        var temp = text_1.split(\"&nbsp;\");\n                        dataName = mentions[parseInt(i.toString(), 10)].Name;\n                        url = mentions[parseInt(i.toString(), 10)].EmailId;\n                        tempText = temp.length > 1 ? temp[1] : temp[0];\n                    }\n                }\n                block = this.serializeMentions(dataName, url, block);\n            }\n            if (multiText[0].indexOf('span') !== -1) {\n                var email = multiText[0].match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/);\n                var matchText = multiText[0].match(/&nbsp;(.+)/);\n                var text_2 = matchText ? matchText[1] : '';\n                multiText[0] = email + \" \" + text_2;\n            }\n            inlines[textProperty[this.keywordIndex]] = mentions.length > 0 ? tempText : multiText[0];\n            block[inlinesProperty[this.keywordIndex]].push(inlines);\n            blocks.push(block);\n            multiText.splice(0, 1);\n        }\n        return blocks;\n    };\n    WordExport.prototype.serializeMentions = function (dataName, url, blocks) {\n        var inlines = {};\n        inlines[characterFormatProperty[this.keywordIndex]] = {};\n        inlines[\"fieldType\"] = 0;\n        inlines[\"hasFieldEnd\"] = true;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n        var inlines2 = {};\n        inlines2[characterFormatProperty[this.keywordIndex]] = {};\n        inlines2[textProperty[this.keywordIndex]] = ' HYPERLINK \\\"' + url + '\\\" ';\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines2);\n        var inlines3 = {};\n        inlines3[characterFormatProperty[this.keywordIndex]] = {};\n        inlines3[\"fieldType\"] = 2;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines3);\n        var inlines4 = {};\n        inlines4[characterFormatProperty[this.keywordIndex]] = {\n            \"underline\": \"Single\",\n            \"fontColor\": \"#0563c1\",\n            \"bidi\": false\n        };\n        inlines4[textProperty[this.keywordIndex]] = dataName;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines4);\n        var inlines5 = {};\n        inlines5[characterFormatProperty[this.keywordIndex]] = {};\n        inlines5[\"fieldType\"] = 1;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines5);\n        return blocks;\n    };\n    // Serialize the comments (commentsExtended.xml)\n    WordExport.prototype.serializeCommentsExtended = function () {\n        if (this.mComments.length === 0 || (this.mComments.length === 1 && this.mComments[0].text === '')) {\n            return;\n        }\n        var writer = new XmlWriter();\n        writer.writeStartElement('w15', 'commentsEx', this.wNamespace);\n        this.serializeCommentCommonAttribute(writer);\n        this.serializeCommentsExInternal(writer, this.mComments, false);\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.commentsExtendedPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeCommentsExInternal = function (writer, comments, isReply) {\n        for (var i = 0; i < comments.length; i++) {\n            var comment = comments[parseInt(i.toString(), 10)];\n            writer.writeStartElement('w15', 'commentEx', this.wNamespace);\n            //if (comment.blocks.length > 0) {\n            var syncParaID = this.commentParaIDInfo[comment.commentId];\n            if (isReply) {\n                var paraID = this.commentParaIDInfo[comment.ownerComment.commentId];\n                writer.writeAttributeString('w15', 'paraIdParent', this.wNamespace, paraID.toString());\n            }\n            writer.writeAttributeString('w15', 'paraId', this.wNamespace, syncParaID.toString());\n            //}\n            var val = comment.done ? 1 : 0;\n            writer.writeAttributeString('w15', 'done', this.wNamespace, val.toString());\n            writer.writeEndElement();\n            if (comment.replyComments.length > 0) {\n                this.serializeCommentsExInternal(writer, comment.replyComments, true);\n            }\n        }\n    };\n    // Serialize the section properties.\n    WordExport.prototype.serializeSectionProperties = function (writer, section) {\n        if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n            this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n        }\n        writer.writeStartElement('w', 'sectPr', this.wNamespace);\n        if (section[headersFootersProperty[this.keywordIndex]]) {\n            this.serializeHFReference(writer, section[headersFootersProperty[this.keywordIndex]]);\n        }\n        // if (IsNeedToSerializeSectionFootNoteProperties(section))\n        //     SerializeFootnoteProperties(section);\n        // if (IsNeedToSerializeSectionEndNoteProperties(section))\n        //     SerializeEndnoteProperties(section);\n        if (section[sectionFormatProperty[this.keywordIndex]][breakCodeProperty[this.keywordIndex]] === 'NoBreak') {\n            this.serializeSectionType(writer, 'continuous');\n        }\n        else {\n            this.serializeSectionType(writer, 'nextPage');\n        }\n        this.serializePageSetup(writer, section[sectionFormatProperty[this.keywordIndex]]);\n        this.serializeColumns(writer, section[sectionFormatProperty[this.keywordIndex]]);\n        this.serializeFootNotesPr(writer, section[sectionFormatProperty[this.keywordIndex]]);\n        this.serializeEndNotesPr(writer, section[sectionFormatProperty[this.keywordIndex]]);\n        // this.serializeSectionProtection(section);\n        // if (section.PageSetup.VerticalAlignment !== PageAlignment.Top) {\n        //     writer.writeStartElement('vAlign', this.wNamespace);\n        //     switch (section.PageSetup.VerticalAlignment) {\n        //         case PageAlignment.Top:\n        //             writer.WriteAttributeString('val', this.wNamespace, 'top');\n        //             break;\n        //         case PageAlignment.Middle:\n        //             writer.WriteAttributeString('val', this.wNamespace, 'center');\n        //             break;\n        //         case PageAlignment.Justified:\n        //             writer.WriteAttributeString('val', this.wNamespace, 'both');\n        //             break;\n        //         case PageAlignment.Bottom:\n        //             writer.WriteAttributeString('val', this.wNamespace, 'bottom');\n        //             break;\n        //     }\n        //     writer.WriteEndElement();\n        // }\n        if (section[sectionFormatProperty[this.keywordIndex]] !== undefined && HelperMethods.parseBoolValue(section[sectionFormatProperty[this.keywordIndex]][differentFirstPageProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'titlePg', this.wNamespace);\n            writer.writeEndElement();\n        }\n        // SerializeTextDirection(section);\n        if (!isNullOrUndefined(section[sectionFormatProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(section[sectionFormatProperty[this.keywordIndex]][bidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'bidi', this.wNamespace);\n            writer.writeEndElement();\n        }\n        //rtlGutter\n        // SerializeDocGrid(section);\n        //printerSettings\n        writer.writeEndElement(); //end of sectPr tag\n    };\n    WordExport.prototype.serializeFootNotesPr = function (writer, section) {\n        if (section[footNoteNumberFormatProperty[this.keywordIndex]] || section[restartIndexForFootnotesProperty[this.keywordIndex]]) {\n            writer.writeStartElement(undefined, 'footnotePr', this.wNamespace);\n            writer.writeStartElement(undefined, 'pos', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, 'pageBottom');\n            writer.writeEndElement();\n            if (section[footNoteNumberFormatProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberFormat(section[footNoteNumberFormatProperty[this.keywordIndex]]));\n                writer.writeEndElement();\n            }\n            if (section[restartIndexForFootnotesProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numRestart', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberRestart(section[restartIndexForFootnotesProperty[this.keywordIndex]]));\n                writer.writeEndElement();\n            }\n            if (section[initialFootNoteNumberProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numStart', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, (section[initialFootNoteNumberProperty[this.keywordIndex]]).toString());\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.getFootNoteNumberFormat = function (numberFormat) {\n        var patternType;\n        switch (numberFormat) {\n            case 'UpperCaseRoman':\n            case 1:\n                patternType = 'upperRoman';\n                break;\n            case 'LowerCaseRoman':\n            case 2:\n                patternType = 'lowerRoman';\n                break;\n            case 'UpperCaseLetter':\n            case 3:\n                patternType = 'upperLetter';\n                break;\n            case 'LowerCaseLetter':\n            case 4:\n                patternType = 'lowerLetter';\n                break;\n            default:\n                patternType = 'decimal';\n                break;\n        }\n        return patternType;\n    };\n    WordExport.prototype.getFootNoteNumberRestart = function (numberRestart) {\n        switch (numberRestart) {\n            case 'RestartForEachSection ':\n            case 1:\n                return 'eachSect';\n            case 'RestartForEachPage':\n            case 2:\n                return 'eachPage';\n            default:\n                return 'continuous';\n        }\n    };\n    WordExport.prototype.getPageNumberFormat = function (numberFormat) {\n        var patternType;\n        switch (numberFormat) {\n            case 'RomanUpper':\n                patternType = 'upperRoman';\n                break;\n            case 'RomanLower':\n                patternType = 'lowerRoman';\n                break;\n            case 'LetterUpper':\n                patternType = 'upperLetter';\n                break;\n            case 'LetterLower':\n                patternType = 'lowerLetter';\n                break;\n            default:\n                patternType = 'Arabic';\n                break;\n        }\n        return patternType;\n    };\n    // Serialize the Footnote Properties\n    WordExport.prototype.serializeEndNotesPr = function (writer, section) {\n        if (section[endnoteNumberFormatProperty[this.keywordIndex]] || section[restartIndexForEndnotesProperty[this.keywordIndex]]) {\n            writer.writeStartElement(undefined, 'endnotePr', this.wNamespace);\n            writer.writeStartElement(undefined, 'pos', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, 'docEnd');\n            writer.writeEndElement();\n            if (section[endnoteNumberFormatProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberFormat(section[endnoteNumberFormatProperty[this.keywordIndex]]));\n                writer.writeEndElement();\n            }\n            if (section[restartIndexForEndnotesProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numRestart', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getFootNoteNumberRestart(section[restartIndexForEndnotesProperty[this.keywordIndex]]));\n                writer.writeEndElement();\n            }\n            if (section[initialEndNoteNumberProperty[this.keywordIndex]] !== undefined) {\n                writer.writeStartElement(undefined, 'numStart', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, (section[initialEndNoteNumberProperty[this.keywordIndex]]).toString());\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the column properties of section.\n    WordExport.prototype.serializeColumns = function (writer, sectionFormat) {\n        if (sectionFormat[numberOfColumnsProperty[this.keywordIndex]] !== undefined && sectionFormat[numberOfColumnsProperty[this.keywordIndex]] > 1) {\n            writer.writeStartElement(undefined, 'cols', this.wNamespace);\n            writer.writeAttributeString(undefined, 'num', this.wNamespace, sectionFormat[numberOfColumnsProperty[this.keywordIndex]].toString());\n            if (HelperMethods.parseBoolValue(sectionFormat[lineBetweenColumnsProperty[this.keywordIndex]])) {\n                writer.writeAttributeString(undefined, 'sep', this.wNamespace, '1');\n            }\n            if (HelperMethods.parseBoolValue(sectionFormat[equalWidthProperty[this.keywordIndex]])) {\n                writer.writeAttributeString(undefined, 'equalWidth', this.wNamespace, '1');\n            }\n            else {\n                writer.writeAttributeString(undefined, 'equalWidth', this.wNamespace, '0');\n                if (sectionFormat[columnsProperty[this.keywordIndex]] !== undefined && sectionFormat[columnsProperty[this.keywordIndex]].length > 0) {\n                    for (var i = 0; i < sectionFormat[columnsProperty[this.keywordIndex]].length; i++) {\n                        writer.writeStartElement(undefined, 'col', this.wNamespace);\n                        writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(sectionFormat[columnsProperty[this.keywordIndex]][parseInt(i.toString(), 10)][widthProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n                        writer.writeAttributeString(undefined, 'space', this.wNamespace, this.roundToTwoDecimal(sectionFormat[columnsProperty[this.keywordIndex]][parseInt(i.toString(), 10)][spaceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n                        writer.writeEndElement();\n                    }\n                }\n            }\n            writer.writeEndElement();\n        }\n        // ColumnCollection columns = section.Columns;\n        // writer.WriteStartElement('cols', this.wNamespace);\n        // if (columns.length > 0)\n        // {\n        //     writer.WriteAttributeString('num', this.wNamespace, columns.length.ToString());\n        // }\n        // if (section.PageSetup.DrawLinesBetweenCols)\n        //     writer.WriteAttributeString('sep', this.wNamespace, '1');\n        // if (columns.OwnerSection.PageSetup.EqualColumnWidth)\n        // {\n        //     writer.WriteAttributeString('equalWidth', this.wNamespace, '1');\n        //     //When the column count is negative, MS word just reset the column's count to zero\n        //     //To avoid index out of exception, checked the columns count\n        //     writer.WriteAttributeString('space', this.wNamespace, ToString(columns.length > 0 ? columns[0].Space * this.TwentiethOfPoint : 0));\n        // }\n        // else if (columns.length > 0)\n        // {\n        //     writer.WriteAttributeString('equalWidth', this.wNamespace, '0');\n        //     foreach (Column column in columns)\n        //     {\n        //         writer.WriteStartElement('col', this.wNamespace);\n        //         writer.WriteAttributeString('w', this.wNamespace, ToString(column.Width * this.TwentiethOfPoint));\n        //         writer.WriteAttributeString('space', this.wNamespace, ToString(column.Space * this.TwentiethOfPoint));\n        //         writer.WriteEndElement();\n        //     }\n        // }\n        // writer.WriteEndElement();\n    };\n    // Serialize the page setup properties.\n    WordExport.prototype.serializePageSetup = function (writer, pageSetup) {\n        if (pageSetup !== undefined) {\n            this.serializePageSize(writer, pageSetup);\n            this.serializePageMargins(writer, pageSetup);\n            this.serializePageNumberType(writer, pageSetup);\n        }\n        // // StartElement paperSrc (if any)\n        // if (pageSetup.FirstPageTray > 0 || pageSetup.OtherPagesTray > 0) {\n        //     writer.WriteStartElement('paperSrc', this.wNamespace);\n        //     if (pageSetup.FirstPageTray > 0) {\n        //         writer.WriteAttributeString('first', this.wNamespace, pageSetup.FirstPageTray.ToString());\n        //     }\n        //     if (pageSetup.OtherPagesTray > 0) {\n        //         writer.WriteAttributeString('other', this.wNamespace, pageSetup.OtherPagesTray.ToString());\n        //     }\n        //     writer.WriteEndElement();\n        // }\n        if (HelperMethods.parseBoolValue(pageSetup[restartPageNumberingProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'pgNumType', this.wNamespace);\n            writer.writeAttributeString(undefined, 'start', this.wNamespace, pageSetup[pageStartingNumberProperty[this.keywordIndex]].toString());\n            writer.writeEndElement();\n        }\n        writer.writeStartElement(undefined, 'pgBorders', this.wNamespace);\n        // //zOrder\n        // if (pageSetup.PageBordersApplyType === PageBordersApplyType.FirstPage)\n        //     writer.WriteAttributeString('display', this.wNamespace, 'firstPage');\n        // else if (pageSetup.PageBordersApplyType === PageBordersApplyType.AllExceptFirstPage)\n        //     writer.WriteAttributeString('display', this.wNamespace, 'notFirstPage');\n        // if (pageSetup.PageBorderOffsetFrom === PageBorderOffsetFrom.PageEdge) {\n        //     writer.WriteAttributeString('offsetFrom', this.wNamespace, 'page');\n        // }\n        // //Serializing zOrder of the front page border\n        // if (!pageSetup.IsFrontPageBorder) {\n        //     writer.WriteAttributeString('zOrder', this.wNamespace, 'back');\n        // }\n        // SerializePageBorders(pageSetup.Borders);\n        writer.writeEndElement();\n        // this.serializeLineNumberType(writer, pageSetup);\n        //this.serializePageNumberType(writer, pageSetup);\n    };\n    // serialize the page size\n    WordExport.prototype.serializePageSize = function (writer, pageSetup) {\n        writer.writeStartElement(undefined, 'pgSz', this.wNamespace);\n        writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(pageSetup[pageWidthProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        writer.writeAttributeString(undefined, 'h', this.wNamespace, this.roundToTwoDecimal(pageSetup[pageHeightProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        // if (pageSetup.Orientation === PageOrientation.Landscape)\n        // {\n        //     writer.WriteAttributeString('orient', this.wNamespace, 'landscape');\n        // }\n        writer.writeEndElement();\n    };\n    // Serialize the border.\n    WordExport.prototype.serializePageMargins = function (writer, pageSetup) {\n        writer.writeStartElement(undefined, 'pgMar', this.wNamespace);\n        var marginValue = Math.round(pageSetup[topMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n        writer.writeAttributeString(undefined, 'top', this.wNamespace, marginValue.toString());\n        marginValue = Math.round(pageSetup[rightMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n        writer.writeAttributeString(undefined, 'right', this.wNamespace, marginValue.toString());\n        marginValue = Math.round(pageSetup[bottomMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n        writer.writeAttributeString(undefined, 'bottom', this.wNamespace, marginValue.toString());\n        marginValue = Math.round(pageSetup[leftMarginProperty[this.keywordIndex]] * this.twentiethOfPoint);\n        writer.writeAttributeString(undefined, 'left', this.wNamespace, marginValue.toString());\n        writer.writeAttributeString(undefined, 'header', this.wNamespace, this.roundToTwoDecimal(pageSetup[headerDistanceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        writer.writeAttributeString(undefined, 'footer', this.wNamespace, this.roundToTwoDecimal(pageSetup[footerDistanceProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        writer.writeAttributeString(undefined, 'gutter', this.wNamespace, '0');\n        writer.writeEndElement();\n    };\n    //Serialize the page number type\n    WordExport.prototype.serializePageNumberType = function (writer, pageSetup) {\n        if (pageSetup[pageNumberStyleProperty[this.keywordIndex]] !== undefined) {\n            writer.writeStartElement(undefined, 'pgNumType', this.wNamespace);\n            writer.writeAttributeString(undefined, 'fmt', this.wNamespace, this.getPageNumberFormat(pageSetup[pageNumberStyleProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the section type.\n    WordExport.prototype.serializeSectionType = function (writer, sectionBreakCode) {\n        writer.writeStartElement('w', 'type', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, sectionBreakCode); //GetSectionBreakCode(sectionBreakCode));\n        writer.writeEndElement();\n    };\n    // Serialize the heeader/footer reference.\n    WordExport.prototype.serializeHFReference = function (writer, headersFooters) {\n        var hfId = '';\n        if (headersFooters !== undefined) {\n            this.mDifferentFirstPage = HelperMethods.parseBoolValue(this.section[sectionFormatProperty[this.keywordIndex]][differentOddAndEvenPagesProperty[this.keywordIndex]]);\n            var hf = headersFooters[firstPageHeaderProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'first');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'FirstPageHeader', hfId);\n                writer.writeEndElement();\n            }\n            hf = headersFooters[firstPageFooterProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'first');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'FirstPageFooter', hfId);\n                writer.writeEndElement();\n            }\n            hf = headersFooters[evenHeaderProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'even');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'EvenHeader', hfId);\n                writer.writeEndElement();\n            }\n            hf = headersFooters[evenFooterProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'even');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'EvenFooter', hfId);\n                writer.writeEndElement();\n            }\n            hf = headersFooters[headerProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'headerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'default');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'OddHeader', hfId);\n                writer.writeEndElement();\n            }\n            hf = headersFooters[footerProperty[this.keywordIndex]];\n            if (hf && hf[blocksProperty[this.keywordIndex]] && hf[blocksProperty[this.keywordIndex]].length > 0) {\n                writer.writeStartElement(undefined, 'footerReference', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'default');\n                hfId = this.getNextRelationShipID();\n                writer.writeAttributeString(undefined, 'id', this.rNamespace, hfId);\n                this.addHeaderFooter(hf, 'OddFooter', hfId);\n                writer.writeEndElement();\n            }\n        }\n    };\n    // Adds the header footer details to the collection.\n    WordExport.prototype.addHeaderFooter = function (hf, hfType, id) {\n        var hfColl = new Dictionary();\n        this.headersFooters.add(hfType, hfColl);\n        this.headersFooters.get(hfType).add(id, hf);\n    };\n    // Serializes the bodyItems\n    WordExport.prototype.serializeBodyItems = function (writer, blockCollection, isLastSection) {\n        for (var i = 0; i < blockCollection.length; i++) {\n            this.serializeBodyItem(writer, blockCollection[parseInt(i.toString(), 10)], isLastSection);\n        }\n    };\n    // serialize the content Control\n    /* eslint-disable-next-line max-len */\n    WordExport.prototype.serializeContentControl = function (writer, contentControlItem, item, isLastSection, inlines) {\n        if (isNullOrUndefined(contentControlItem)) {\n            throw new Error('contentCOntrol should not be undefined');\n        }\n        writer.writeStartElement('w', 'sdt', this.wNamespace);\n        writer.writeStartElement(undefined, 'sdtPr', this.wNamespace);\n        if (!isNullOrUndefined(contentControlItem)) {\n            this.serializeContentProperties(writer, contentControlItem, item, isLastSection, inlines);\n        }\n    };\n    // serialize Content Control Properties\n    /* eslint-disable-next-line max-len */\n    WordExport.prototype.serializeContentProperties = function (writer, contentProperties, items, isLastSection, inlines) {\n        var repeatSdt = undefined;\n        if (!isNullOrUndefined(contentProperties[titleProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'alias', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, contentProperties[titleProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'tag', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, contentProperties[tagProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[characterFormatProperty[this.keywordIndex]])) {\n            this.serializeCharacterFormat(writer, items[contentControlPropertiesProperty[this.keywordIndex]][characterFormatProperty[this.keywordIndex]]);\n        }\n        // if (items.hasOwnProperty('blocks') && contentProperties.type !== 'CheckBox') {\n        //     this.serializeContentParagraph(writer, items);\n        // }\n        if (HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]]) || HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'lock', this.wNamespace);\n            if (HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'sdtContentLocked');\n            }\n            else if (HelperMethods.parseBoolValue(contentProperties[lockContentControlProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'sdtLocked');\n            }\n            else if (HelperMethods.parseBoolValue(contentProperties[lockContentsProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'contentLocked');\n            }\n            writer.writeEndElement();\n        }\n        if (HelperMethods.parseBoolValue(contentProperties[hasPlaceHolderTextProperty[this.keywordIndex]]) && isNullOrUndefined(repeatSdt)) {\n            writer.writeStartElement('w', 'placeholder', undefined);\n            writer.writeAttributeString('w', 'docPart', this.wNamespace, undefined);\n            writer.writeEndElement();\n            writer.writeStartElement('w', 'showingPlcHdr', undefined);\n            writer.writeEndElement();\n        }\n        if (HelperMethods.parseBoolValue(contentProperties[isTemporaryProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'temporary', undefined);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[appearanceProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w15', 'appearance', undefined);\n            writer.writeAttributeString('w15', 'val', undefined, this.keywordIndex == 1 ? this.getContentControlAppearance(contentProperties[appearanceProperty[this.keywordIndex]]).toLowerCase() : contentProperties[appearanceProperty[this.keywordIndex]].toLowerCase());\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[colorProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w15', 'color', undefined);\n            writer.writeAttributeString('w', 'val', undefined, this.getColor(contentProperties[colorProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n        }\n        if (HelperMethods.parseBoolValue(contentProperties[multiLineProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'text', this.wNamespace);\n            writer.writeAttributeString('w', 'multiLine', this.wNamespace, '1');\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[xmlMappingProperty[this.keywordIndex]])) {\n            if (HelperMethods.parseBoolValue(contentProperties[xmlMappingProperty[this.keywordIndex]][isMappedProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'dataBinding', this.wNamespace);\n                writer.writeAttributeString('w', 'xpath', undefined, contentProperties[xmlMappingProperty[this.keywordIndex]][xPathProperty[this.keywordIndex]]);\n                writer.writeAttributeString('w', 'storeItemID', undefined, contentProperties[xmlMappingProperty[this.keywordIndex]][storeItemIdProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n        }\n        if (contentProperties.picture) {\n            writer.writeStartElement('w', 'picture', this.wNamespace);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[uncheckedStateProperty[this.keywordIndex]] || contentProperties[checkedStateProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w14', 'checkbox', undefined);\n            if (HelperMethods.parseBoolValue(contentProperties[isCheckedProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w14', 'checked', undefined);\n                writer.writeAttributeString('w14', 'val', undefined, '1');\n                writer.writeEndElement();\n            }\n            else {\n                writer.writeStartElement('w14', 'checked', undefined);\n                writer.writeAttributeString('w14', 'val', undefined, '0');\n                writer.writeEndElement();\n            }\n            if (contentProperties[uncheckedStateProperty[this.keywordIndex]]) {\n                writer.writeStartElement('w14', 'uncheckedState', undefined);\n                writer.writeAttributeString('w14', 'val', undefined, this.toUnicode(contentProperties[uncheckedStateProperty[this.keywordIndex]][valueProperty[this.keywordIndex]]));\n                writer.writeAttributeString('w14', 'font', undefined, (contentProperties[uncheckedStateProperty[this.keywordIndex]][fontProperty[this.keywordIndex]]));\n                writer.writeEndElement();\n            }\n            if (contentProperties[checkedStateProperty[this.keywordIndex]]) {\n                writer.writeStartElement('w14', 'checkedState', undefined);\n                writer.writeAttributeString('w14', 'val', undefined, this.toUnicode(contentProperties[checkedStateProperty[this.keywordIndex]][valueProperty[this.keywordIndex]]));\n                writer.writeAttributeString('w14', 'font', undefined, contentProperties[checkedStateProperty[this.keywordIndex]][fontProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[contentControlListItemsProperty[this.keywordIndex]]) && contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 5 : 'DropDownList')) {\n            var dropDownLists = contentProperties[contentControlListItemsProperty[this.keywordIndex]];\n            writer.writeStartElement(undefined, 'dropDownList', this.wNamespace);\n            this.serializeContentControlList(writer, dropDownLists);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(contentProperties[contentControlListItemsProperty[this.keywordIndex]]) && contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 3 : 'ComboBox')) {\n            var comboList = contentProperties[contentControlListItemsProperty[this.keywordIndex]];\n            writer.writeStartElement(undefined, 'comboBox', this.wNamespace);\n            this.serializeContentControlList(writer, comboList);\n            writer.writeEndElement();\n        }\n        this.serializeContentControlDate(writer, contentProperties);\n        if (!isNullOrUndefined(contentProperties[typeProperty[this.keywordIndex]])) {\n            if (contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 7 : 'Picture')) {\n                writer.writeStartElement(undefined, 'picture', this.wNamespace);\n                writer.writeEndElement();\n            }\n        }\n        writer.writeEndElement();\n        writer.writeStartElement('w', 'sdtContent', this.wNamespace);\n        if (inlines) {\n            return;\n        }\n        /* eslint-disable */\n        if (items.hasOwnProperty(blocksProperty[this.keywordIndex]) && (isNullOrUndefined(items[cellFormatProperty[this.keywordIndex]]))) {\n            for (var i = 0; i < items[blocksProperty[this.keywordIndex]].length; i++) {\n                var block = items[blocksProperty[this.keywordIndex]][i];\n                if (block.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                    this.paragraph = block;\n                    this.serializeParagraph(writer, block, isLastSection);\n                    this.paragraph = undefined;\n                }\n                else if (block.hasOwnProperty(rowFormatProperty[this.keywordIndex])) {\n                    var mVerticalMerge = new Dictionary();\n                    this.serializeRow(writer, block, mVerticalMerge);\n                }\n                else if (block.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                    this.serializeContentControl(writer, block[contentControlPropertiesProperty[this.keywordIndex]], block, isLastSection);\n                }\n                else {\n                    var table = block;\n                    this.serializeTable(writer, table);\n                }\n            }\n        }\n        else if (items.hasOwnProperty(rowFormatProperty[this.keywordIndex])) {\n            if (items[cellsProperty[this.keywordIndex]].length > 0) {\n                var mVerticalMerge = new Dictionary();\n                this.serializeRow(writer, items, mVerticalMerge);\n            }\n        }\n        else if (items.hasOwnProperty(cellFormatProperty[this.keywordIndex])) {\n            var mVerticalMerge = new Dictionary();\n            this.serializeCell(writer, items, mVerticalMerge);\n        }\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    WordExport.prototype.toUnicode = function (code) {\n        var charCode = code.charCodeAt(0);\n        return charCode.toString(16);\n    };\n    //serialize dropdown and list property\n    WordExport.prototype.serializeContentControlList = function (writer, lists) {\n        for (var i = 0; i < lists.length; i++) {\n            writer.writeStartElement(undefined, 'listItem', this.wNamespace);\n            if (!isNullOrUndefined(lists[i][displayTextProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'displayText', this.wNamespace, lists[i][displayTextProperty[this.keywordIndex]]);\n            }\n            writer.writeAttributeString('w', 'value', this.wNamespace, lists[i][valueProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n    };\n    //Serialize character formatfor content control\n    WordExport.prototype.serializeContentParagraph = function (writer, items) {\n        for (var i = 0; i < items[blocksProperty[this.keywordIndex]].length; i++) {\n            var blocks = items[blocksProperty[this.keywordIndex]][i];\n            if (blocks.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                for (var j = 0; j < blocks[inlinesProperty[this.keywordIndex]].length; j++) {\n                    var inlines = blocks[inlinesProperty[this.keywordIndex]][j];\n                    if (!isNullOrUndefined(inlines[characterFormatProperty[this.keywordIndex]])) {\n                        this.serializeCharacterFormat(writer, inlines[characterFormatProperty[this.keywordIndex]]);\n                    }\n                }\n            }\n        }\n    };\n    // serialize content control date property\n    WordExport.prototype.serializeContentControlDate = function (writer, contentProperties) {\n        if (contentProperties[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 4 : 'Date')) {\n            writer.writeStartElement('w', 'date', this.wNamespace);\n            if (!isNullOrUndefined(contentProperties[dateCalendarTypeProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'calender', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getDateCalendarType(contentProperties[dateCalendarTypeProperty[this.keywordIndex]]) : contentProperties[dateCalendarTypeProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            if (!isNullOrUndefined(contentProperties[dateDisplayLocaleProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'lid', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, contentProperties[dateDisplayLocaleProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            if (!isNullOrUndefined(contentProperties[dateStorageFormatProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'storeMappedDataAs', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getDateStorageFormat(contentProperties[dateStorageFormatProperty[this.keywordIndex]]) : contentProperties[dateStorageFormatProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            if (!isNullOrUndefined(contentProperties[dateDisplayFormatProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'dateFormat', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, contentProperties[dateDisplayFormatProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the TextBody item\n    WordExport.prototype.serializeBodyItem = function (writer, item, isLastSection) {\n        if (isNullOrUndefined(item)) {\n            throw new Error('BodyItem should not be undefined');\n        }\n        if (item.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n            this.serializeContentControl(writer, item[contentControlPropertiesProperty[this.keywordIndex]], item, isLastSection);\n        }\n        else if (item.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n            this.paragraph = item;\n            this.serializeParagraph(writer, item, isLastSection);\n            this.paragraph = undefined;\n        }\n        else {\n            var table = item;\n            for (var i = 0; i < table[rowsProperty[this.keywordIndex]].length; i++) {\n                if (table[rowsProperty[this.keywordIndex]][i][cellsProperty[this.keywordIndex]].length > 0) {\n                    this.serializeTable(writer, table);\n                    break;\n                }\n            }\n            var sec = this.blockOwner;\n            //Need to write the Section Properties if the Table is last item in the section\n            if (!isLastSection && sec.hasOwnProperty(sectionFormatProperty[this.keywordIndex])\n                && sec[blocksProperty[this.keywordIndex]].indexOf(table) === sec[blocksProperty[this.keywordIndex]].length - 1) {\n                writer.writeStartElement('w', 'p', this.wNamespace);\n                writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n                this.serializeSectionProperties(writer, sec);\n                writer.writeEndElement();\n                writer.writeEndElement();\n            }\n        }\n    };\n    // Serialize the paragraph\n    WordExport.prototype.serializeParagraph = function (writer, paragraph, isLastSection) {\n        if (isNullOrUndefined(paragraph)) {\n            throw new Error('Paragraph should not be undefined');\n        }\n        // if (paragraph.ParagraphFormat.PageBreakAfter && !IsPageBreakNeedToBeSkipped(paragraph as Entity))\n        //     paragraph.InsertBreak(BreakType.PageBreak);\n        // if (paragraph.ParagraphFormat.ColumnBreakAfter && !IsPageBreakNeedToBeSkipped(paragraph as Entity))\n        //     paragraph.InsertBreak(BreakType.ColumnBreak);\n        //Splits the paragraph based on the newline character\n        // paragraph.SplitTextRange();\n        if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n            this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n        }\n        writer.writeStartElement('w', 'p', this.wNamespace);\n        if (this.isInsideComment) {\n            writer.writeAttributeString('w14', 'paraId', undefined, this.commentParaID.toString());\n        }\n        writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n        if (!isNullOrUndefined(paragraph[paragraphFormatProperty[this.keywordIndex]])) {\n            this.serializeParagraphFormat(writer, paragraph[paragraphFormatProperty[this.keywordIndex]], paragraph);\n        }\n        if (!isNullOrUndefined(paragraph[characterFormatProperty[this.keywordIndex]])) {\n            this.serializeCharacterFormat(writer, paragraph[characterFormatProperty[this.keywordIndex]]);\n        }\n        var sec = this.blockOwner;\n        //Need to write the Section Properties if the Paragraph is last item in the section\n        if (!isLastSection && sec.hasOwnProperty(sectionFormatProperty[this.keywordIndex])\n            && sec[blocksProperty[this.keywordIndex]].indexOf(paragraph) === sec[blocksProperty[this.keywordIndex]].length - 1) {\n            this.serializeSectionProperties(writer, sec);\n        }\n        writer.writeEndElement(); //end of pPr\n        // Serialize watermark if paragraph is the first item of Header document.\n        // EnsureWatermark(paragraph);\n        this.prevRevisionIds = [];\n        this.serializeParagraphItems(writer, paragraph[inlinesProperty[this.keywordIndex]]);\n        if (!this.isBookmarkAtEnd && !this.isBookmarkAtRowEnd) {\n            writer.writeEndElement(); //end of paragraph tag.\n        }\n        this.isBookmarkAtEnd = false;\n    };\n    //Serialize Revision start\n    WordExport.prototype.serializeRevisionStart = function (writer, item, previousNode) {\n        if (item.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n            if (!isNullOrUndefined(previousNode) && previousNode.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex]) && (previousNode[bookmarkTypeProperty[this.keywordIndex]] === 0 && !(previousNode[nameProperty[this.keywordIndex]].indexOf('_Toc') >= 0) && isNullOrUndefined(item[revisionIdsProperty[this.keywordIndex]]))) {\n                return;\n            }\n            var ids = item[revisionIdsProperty[this.keywordIndex]];\n            for (var i = 0; i < ids.length; i++) {\n                var revision = this.retrieveRevision(ids[i]);\n                if (revision.revisionType === 'Insertion') {\n                    this.serializeTrackChanges(writer, 'ins', revision.author, revision.date);\n                }\n                if (revision.revisionType === 'Deletion') {\n                    this.serializeTrackChanges(writer, 'del', revision.author, revision.date);\n                }\n            }\n        }\n    };\n    //Serialize track changes\n    WordExport.prototype.serializeTrackChanges = function (writer, type, author, date) {\n        writer.writeStartElement('w', type, this.wNamespace);\n        writer.writeAttributeString('w', 'id', this.wNamespace, (this.trackChangesId++).toString());\n        if (author != \"Unknown\") {\n            writer.writeAttributeString('w', 'author', this.wNamespace, author);\n        }\n        writer.writeAttributeString('w', 'date', this.wNamespace, date);\n    };\n    WordExport.prototype.retrieveRevision = function (id) {\n        var matchedRevisions = [];\n        for (var i = 0; i < this.revisions.length; i++) {\n            if (this.revisions[i].revisionID === id) {\n                return this.revisions[i];\n            }\n        }\n        return undefined;\n    };\n    // Serialize the paragraph items\n    WordExport.prototype.serializeParagraphItems = function (writer, paraItems, keyindex) {\n        if (isNullOrUndefined(paraItems)) {\n            throw new Error('Paragraph should not be undefined');\n        }\n        var inlines;\n        var previousNode = undefined;\n        var isContinueOverride = false;\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = keyindex;\n        }\n        for (var i = 0; i < paraItems.length; i++) {\n            var item = paraItems[i];\n            if (item.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                inlines = true;\n                this.serializeContentControl(writer, item[contentControlPropertiesProperty[this.keywordIndex]], item, undefined, inlines);\n                this.serializeParagraphItems(writer, item[inlinesProperty[this.keywordIndex]]);\n            }\n            if (item.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                this.serializeParagraphItems(writer, item);\n            }\n            this.serializeRevisionStart(writer, item, previousNode);\n            var isBdo = false;\n            if (item[characterFormatProperty[this.keywordIndex]]) {\n                isBdo = !isNullOrUndefined(item[characterFormatProperty[this.keywordIndex]][bdoProperty[this.keywordIndex]]) && item[characterFormatProperty[this.keywordIndex]][bdoProperty[this.keywordIndex]] !== 0;\n                if (isBdo && !isContinueOverride) {\n                    this.serializeBiDirectionalOverride(writer, item[characterFormatProperty[this.keywordIndex]]);\n                    isContinueOverride = true;\n                }\n            }\n            if (isContinueOverride && !isBdo) {\n                writer.writeEndElement();\n                isContinueOverride = false;\n            }\n            if (item.hasOwnProperty(fieldTypeProperty[this.keywordIndex])) {\n                this.serializeFieldCharacter(writer, item);\n            }\n            else if (item.hasOwnProperty(imageStringProperty[this.keywordIndex])) {\n                this.serializePicture(writer, item);\n            }\n            else if (item.hasOwnProperty(shapeIdProperty[this.keywordIndex])) {\n                var currentParargaph = this.paragraph;\n                this.serializeShape(writer, item);\n                this.paragraph = currentParargaph;\n            }\n            else if (item.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex])) {\n                this.serializeBookMark(writer, item);\n            }\n            else if (item.hasOwnProperty(editRangeIdProperty[this.keywordIndex])) {\n                this.serializeEditRange(writer, item);\n            }\n            else if (item.hasOwnProperty(chartTypeProperty[this.keywordIndex])) {\n                this.chart = item;\n                this.serializeChart(writer, item);\n                // chart.xml\n                this.serializeChartStructure();\n            }\n            else if (item.hasOwnProperty(commentCharacterTypeProperty[this.keywordIndex])) {\n                this.serializeComment(writer, item);\n            }\n            else if (item.hasOwnProperty(footnoteTypeProperty[this.keywordIndex])) {\n                this.serializeEFReference(writer, item);\n            }\n            else {\n                this.serializeTextRange(writer, item, previousNode);\n            }\n            //Serialize revision end\n            this.serializeRevisionEnd(writer, item, previousNode);\n            previousNode = item;\n            if (inlines) {\n                writer.writeEndElement();\n                writer.writeEndElement();\n                inlines = false;\n            }\n        }\n        if (isContinueOverride) {\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.serializeEFReference = function (writer, item) {\n        var efId = '';\n        var ef = item[blocksProperty[this.keywordIndex]];\n        if (item[footnoteTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Footnote')) {\n            writer.writeStartElement(undefined, 'r', this.wNamespace);\n            this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n            writer.writeStartElement(undefined, 'footnoteReference', this.wNamespace);\n            if (this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] && this.efRelationShipId === 0) {\n                this.efRelationShipId = 1;\n            }\n            efId = this.getEFNextRelationShipID();\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, efId);\n            this.addFootnotesEndnotes(ef, 'footnote', efId);\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n        else {\n            writer.writeStartElement(undefined, 'r', this.wNamespace);\n            this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n            writer.writeStartElement(undefined, 'endnoteReference', this.wNamespace);\n            efId = this.getEFNextRelationShipID();\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, efId);\n            this.addFootnotesEndnotes(ef, 'endnote', efId);\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.addFootnotesEndnotes = function (ef, efType, id) {\n        var efColl = new Dictionary();\n        this.endnotesFootnotes.add(efType, efColl);\n        this.endnotesFootnotes.get(efType).add(id, ef);\n    };\n    WordExport.prototype.serializeEndnotesFootnote = function (writer, efType) {\n        if (this.endnotesFootnotes.length === 0) {\n            return;\n        }\n        var endnoteFootnotePath;\n        var endnoteFootnoteRelsPath;\n        if (!this.endnotesFootnotes.containsKey(efType)) {\n            return;\n        }\n        var efColl = this.endnotesFootnotes.get(efType);\n        var ef = undefined;\n        for (var i = 0; i < efColl.keys.length; i++) {\n            var id = efColl.keys[i];\n            ef = efColl.get(id);\n            if (efType === 'endnote') {\n                endnoteFootnotePath = this.endnotesPath;\n                endnoteFootnoteRelsPath = this.endnotesRelationPath;\n                this.serializeInlineEndnotes(writer, ef, id);\n            }\n            else {\n                endnoteFootnotePath = this.footnotesPath;\n                endnoteFootnoteRelsPath = this.footnotesRelationPath;\n                this.serializeInlineFootnotes(writer, ef, id);\n            }\n        }\n    };\n    WordExport.prototype.serializeInlineEndnotes = function (writer, endNote, id) {\n        this.isSerializeFootEndNote = \"Endnote\";\n        this.endNoteFootnote = endNote;\n        var owner = this.blockOwner;\n        this.blockOwner = endNote;\n        writer.writeStartElement('w', 'endnote', this.wNamespace);\n        writer.writeAttributeString(undefined, 'id', this.wNamespace, id);\n        this.serializeBodyItems(writer, endNote, true);\n        writer.writeEndElement();\n        this.blockOwner = owner;\n        this.endNoteFootnote = undefined;\n        this.isSerializeFootEndNote = undefined;\n    };\n    WordExport.prototype.serializeInlineFootnotes = function (writer, footNote, id) {\n        this.isSerializeFootEndNote = \"Footnote\";\n        this.endNoteFootnote = footNote;\n        var owner = this.blockOwner;\n        this.blockOwner = footNote;\n        writer.writeStartElement('w', 'footnote', this.wNamespace);\n        writer.writeAttributeString(undefined, 'id', this.wNamespace, id);\n        this.serializeBodyItems(writer, footNote, true);\n        writer.writeEndElement();\n        this.blockOwner = owner;\n        this.endNoteFootnote = undefined;\n        this.isSerializeFootEndNote = undefined;\n    };\n    // private footnoteXMLItem(fileIndex: number): any {\n    //     let writer = new XmlWriter;\n    //     writer.writeStartElement(undefined, 'Sources', this.wNamespace)\n    //     writer.writeAttributeString('xmlns', 'b', undefined, 'http://schemas.openxmlformats.org/officeDocument/2006/bibliography')\n    //     writer.writeAttributeString(undefined,'xmlns',  undefined, 'http://schemas.openxmlformats.org/officeDocument/2006/bibliography')\n    //     writer.writeAttributeString(undefined,'SelectedStyle', undefined,\"\\APASixthEditionOfficeOnline.xsl\")\n    //     writer.writeAttributeString(undefined,'StyleName',  undefined,\"APA\")\n    //     writer.writeAttributeString(undefined,'Version',  undefined,\"6\")\n    //     writer.writeEndElement();\n    //     let itemPath: string = this.customXMLItemsPath + fileIndex + '.xml';\n    //     let zipArchiveItem: ZipArchiveItem = new ZipArchiveItem(writer.buffer, itemPath);\n    //     this.mArchive.addItem(zipArchiveItem);\n    //     return itemPath;\n    // }\n    // private footnoteXMLItemProps(itemID: string, fileIndex: number): any {\n    //     let writer: XmlWriter = new XmlWriter();\n    //     let customitemPropsPath: string = this.customXMLItemsPropspath + fileIndex + '.xml';\n    //     let itemPropsPath: string = this.itemPropsPath + fileIndex + '.xml';\n    //     writer.writeStartElement('ds', 'datastoreItem', this.wNamespace);\n    //     writer.writeAttributeString('ds', 'itemID', undefined, itemID);\n    //     writer.writeAttributeString('xmlns', 'ds', undefined, this.dsNamespace);\n    //     writer.writeStartElement('ds','schemaRefs', this.wNamespace);\n    //     writer.writeStartElement('ds', 'schemaRef', this.wNamespace);\n    //     writer.writeAttributeString('ds','uri', undefined,'http://schemas.openxmlformats.org/officeDocument/2006/bibliography' )\n    //     writer.writeEndElement();\n    //     writer.writeEndElement();\n    //     writer.writeEndElement();\n    //     this.customXMLProps.push(customitemPropsPath);\n    //     let zipArchiveItem: ZipArchiveItem = new ZipArchiveItem(writer.buffer, customitemPropsPath);\n    //     this.mArchive.addItem(zipArchiveItem);\n    //     return itemPropsPath;\n    // }\n    //Serialize the Footnote Endnotes Common Atributes\n    WordExport.prototype.writeEFCommonAttributes = function (writer) {\n        writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n        writer.writeAttributeString('xmlns', 'cx', undefined, this.cxNamespace);\n        writer.writeAttributeString('xmlns', 'aink', undefined, 'http://schemas.microsoft.com/office/drawing/2016/ink');\n        writer.writeAttributeString('xmlns', 'am3d', undefined, 'http://schemas.microsoft.com/office/drawing/2017/,odel3d');\n        this.writeCustom(writer);\n        writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n        writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n        writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n        this.writeDup(writer);\n        writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n        writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n    };\n    WordExport.prototype.serializeFootnotes = function () {\n        if (isNullOrUndefined(this.document[footnotesProperty[this.keywordIndex]])) {\n            return;\n        }\n        else {\n            var writer = new XmlWriter();\n            writer.writeStartElement('w', 'footnotes', this.wNamespace);\n            this.writeEFCommonAttributes(writer);\n            writer.writeStartElement('w', 'footnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'separator');\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n            this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]], true);\n            writer.writeEndElement();\n            writer.writeStartElement('w', 'footnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationSeparator');\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n            this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]], true);\n            writer.writeEndElement();\n            if (this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]) {\n                writer.writeStartElement('w', 'footnote', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationNotice');\n                writer.writeAttributeString(undefined, 'id', this.wNamespace, '1');\n                this.serializeBodyItems(writer, this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]], true);\n                writer.writeEndElement();\n            }\n            this.serializeEndnotesFootnote(writer, 'footnote');\n            writer.writeEndElement();\n            var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.footnotesPath);\n            this.mArchive.addItem(zipArchiveItem);\n        }\n    };\n    WordExport.prototype.serializeEndnotes = function () {\n        if (isNullOrUndefined(this.document[endnotesProperty[this.keywordIndex]])) {\n            return;\n        }\n        else {\n            var writer = new XmlWriter();\n            writer.writeStartElement('w', 'endnotes', this.wNamespace);\n            this.writeEFCommonAttributes(writer);\n            writer.writeStartElement('w', 'endnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'separator');\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n            this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]], true);\n            writer.writeEndElement();\n            writer.writeStartElement('w', 'endnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationSeparator');\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n            this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]], true);\n            writer.writeEndElement();\n            if (this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]) {\n                writer.writeStartElement('w', 'endnote', this.wNamespace);\n                writer.writeAttributeString(undefined, 'type', this.wNamespace, 'continuationNotice');\n                writer.writeAttributeString(undefined, 'id', this.wNamespace, '1');\n                this.serializeBodyItems(writer, this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]], true);\n                writer.writeEndElement();\n            }\n            this.serializeEndnotesFootnote(writer, 'endnote');\n            writer.writeEndElement();\n            var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.endnotesPath);\n            this.mArchive.addItem(zipArchiveItem);\n        }\n    };\n    //Serialize Revision end\n    WordExport.prototype.serializeRevisionEnd = function (writer, item, previousNode) {\n        if (item.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n            if (!isNullOrUndefined(previousNode) && previousNode.hasOwnProperty(fieldTypeProperty[this.keywordIndex]) && (previousNode[fieldTypeProperty[this.keywordIndex]] === 0 && item[textProperty[this.keywordIndex]].indexOf('TOC') >= 0)) {\n                return;\n            }\n            for (var i = 0; i < item[revisionIdsProperty[this.keywordIndex]].length; i++) {\n                var revision = this.retrieveRevision(item[revisionIdsProperty[this.keywordIndex]][i]);\n                if (revision.revisionType === 'Insertion' || revision.revisionType === 'Deletion') {\n                    writer.writeEndElement();\n                }\n            }\n        }\n    };\n    // Serialize the comment\n    WordExport.prototype.serializeComment = function (writer, comment) {\n        if (!(this.mComments.length === 1 && this.mComments[0].text === '')) {\n            if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 0) {\n                writer.writeStartElement('w', 'commentRangeStart', this.wNamespace);\n            }\n            else if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 1) {\n                writer.writeStartElement('w', 'commentRangeEnd', this.wNamespace);\n            }\n            var commentId = this.commentId[comment[commentIdProperty[this.keywordIndex]]];\n            if (isNullOrUndefined(commentId)) {\n                commentId = this.commentId[comment[commentIdProperty[this.keywordIndex]]] = this.currentCommentId++;\n            }\n            writer.writeAttributeString('w', 'id', this.wNamespace, commentId.toString());\n            writer.writeEndElement();\n            if (comment[commentCharacterTypeProperty[this.keywordIndex]] === 1) {\n                this.serializeCommentItems(writer, commentId);\n            }\n        }\n    };\n    WordExport.prototype.serializeCommentItems = function (writer, commentId) {\n        writer.writeStartElement('w', 'r', this.wNamespace);\n        writer.writeStartElement('w', 'commentReference', this.wNamespace);\n        writer.writeAttributeString('w', 'id', this.wNamespace, commentId.toString());\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeBiDirectionalOverride = function (writer, characterFormat) {\n        writer.writeStartElement(undefined, 'bdo', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 ? this.getBiDirectionalOverride(characterFormat[bdoProperty[this.keywordIndex]]).toLowerCase() : characterFormat[bdoProperty[this.keywordIndex]].toLowerCase());\n    };\n    // Serialize Document Protection\n    //<w:permStart w:id=\"627587516\" w:edGrp=\"everyone\" />\n    WordExport.prototype.serializeEditRange = function (writer, editElement) {\n        if (editElement.hasOwnProperty(editableRangeStartProperty[this.keywordIndex])) {\n            writer.writeStartElement('w', 'permEnd', this.wNamespace);\n        }\n        else {\n            writer.writeStartElement('w', 'permStart', this.wNamespace);\n            if (editElement[userProperty[this.keywordIndex]] && editElement[userProperty[this.keywordIndex]] !== '') {\n                writer.writeAttributeString('w', 'ed', this.wNamespace, editElement[userProperty[this.keywordIndex]]);\n            }\n            if (editElement[groupProperty[this.keywordIndex]] && editElement[groupProperty[this.keywordIndex]] !== '') {\n                writer.writeAttributeString('w', 'edGrp', this.wNamespace, editElement[groupProperty[this.keywordIndex]].toLowerCase());\n            }\n            if (editElement[columnFirstProperty[this.keywordIndex]] && editElement[columnFirstProperty[this.keywordIndex]] !== -1) {\n                writer.writeAttributeString('w', 'colFirst', this.wNamespace, editElement[columnFirstProperty[this.keywordIndex]].toString());\n            }\n            if (editElement[columnLastProperty[this.keywordIndex]] && editElement[columnLastProperty[this.keywordIndex]] !== -1) {\n                writer.writeAttributeString('w', 'colLast', this.wNamespace, editElement[columnLastProperty[this.keywordIndex]].toString());\n            }\n        }\n        writer.writeAttributeString('w', 'id', this.wNamespace, editElement[editRangeIdProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n    };\n    // Serialize the book mark\n    WordExport.prototype.serializeBookMark = function (writer, bookmark) {\n        var bookmarkId = this.getBookmarkId(bookmark[nameProperty[this.keywordIndex]]);\n        var bookmarkName = bookmark[nameProperty[this.keywordIndex]];\n        if (bookmark[bookmarkTypeProperty[this.keywordIndex]] === 0) {\n            writer.writeStartElement('w', 'bookmarkStart', this.wNamespace);\n            writer.writeAttributeString('w', 'name', this.wNamespace, bookmarkName);\n            if (!isNullOrUndefined(bookmark[propertiesProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'colFirst', this.wNamespace, bookmark[propertiesProperty[this.keywordIndex]][columnFirstProperty[this.keywordIndex]].toString());\n                writer.writeAttributeString('w', 'colLast', this.wNamespace, bookmark[propertiesProperty[this.keywordIndex]][columnLastProperty[this.keywordIndex]].toString());\n            }\n        }\n        else if (bookmark[bookmarkTypeProperty[this.keywordIndex]] === 1) {\n            if (!isNullOrUndefined(bookmark[propertiesProperty[this.keywordIndex]]) && !this.isBookmarkAtEnd && !this.isBookmarkAtRowEnd) {\n                if (HelperMethods.parseBoolValue(bookmark[propertiesProperty[this.keywordIndex]][isAfterParagraphMarkProperty[this.keywordIndex]])) {\n                    writer.writeEndElement();\n                    this.isBookmarkAtEnd = true;\n                }\n                else if (HelperMethods.parseBoolValue(bookmark[propertiesProperty[this.keywordIndex]][isAfterRowMarkProperty[this.keywordIndex]])) {\n                    writer.writeEndElement();\n                    writer.writeEndElement();\n                    writer.writeEndElement();\n                    this.isBookmarkAtRowEnd = true;\n                }\n            }\n            writer.writeStartElement('w', 'bookmarkEnd', this.wNamespace);\n        }\n        writer.writeAttributeString('w', 'id', this.wNamespace, bookmarkId.toString());\n        writer.writeEndElement();\n    };\n    WordExport.prototype.getBookmarkId = function (name) {\n        var index = this.bookmarks.indexOf(name);\n        if (index < 0) {\n            index = this.bookmarks.length;\n            this.bookmarks.push(name);\n        }\n        return index;\n    };\n    // Serialize the picture.\n    WordExport.prototype.serializePicture = function (writer, image) {\n        if (image[widthProperty[this.keywordIndex]] >= 0 && image[heightProperty[this.keywordIndex]] >= 0) {\n            writer.writeStartElement(undefined, 'r', this.wNamespace);\n            this.serializeCharacterFormat(writer, image[characterFormatProperty[this.keywordIndex]]);\n            this.serializeDrawing(writer, image);\n            writer.writeEndElement(); //end of run element\n        }\n    };\n    WordExport.prototype.serializeShape = function (writer, item) {\n        if (item[widthProperty[this.keywordIndex]] >= 0 && item[heightProperty[this.keywordIndex]] >= 0) {\n            writer.writeStartElement(undefined, 'r', this.wNamespace);\n            this.serializeCharacterFormat(writer, item[characterFormatProperty[this.keywordIndex]]);\n            if (item[horizontalRuleProperty[this.keywordIndex]] > 0) {\n                this.serializeHorizontalRule(writer, item);\n            }\n            else {\n                this.serializeDrawing(writer, item);\n            }\n            writer.writeEndElement(); //end of run element\n        }\n    };\n    WordExport.prototype.serializeHorizontalRule = function (writer, shape) {\n        writer.writeStartElement(undefined, 'pict', this.wNamespace);\n        writer.writeStartElement('v', 'rect', undefined);\n        var cx = Math.round(shape[widthProperty[this.keywordIndex]]);\n        var cy = Math.round(shape[heightProperty[this.keywordIndex]]);\n        writer.writeAttributeString(undefined, 'style', undefined, 'width:' + cx.toString() + ';height:' + cy.toString());\n        if (shape[horizontalAlignmentProperty[this.keywordIndex]] > 0) {\n            var horAlig = this.keywordIndex == 1 ? this.getShapeHorizontalAlignment(shape[horizontalAlignmentProperty[this.keywordIndex]]) : shape[horizontalAlignmentProperty[this.keywordIndex]].toString();\n            writer.writeAttributeString('o', 'hralign', undefined, horAlig.toLowerCase());\n        }\n        writer.writeAttributeString('o', 'hrstd', undefined, 't');\n        writer.writeAttributeString('o', 'hr', undefined, 't');\n        writer.writeAttributeString(undefined, 'fillcolor', undefined, this.getColor(shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n        writer.writeAttributeString(undefined, 'stroked', undefined, 'f');\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    // Serialize the drawing element.\n    WordExport.prototype.serializeDrawing = function (writer, draw) {\n        writer.writeStartElement(undefined, 'drawing', this.wNamespace);\n        if (draw.hasOwnProperty(chartTypeProperty[this.keywordIndex])) {\n            this.serializeInlineCharts(writer, draw);\n        }\n        else {\n            if (draw[textWrappingStyleProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Inline')) {\n                this.serializeInlinePictureAndShape(writer, draw);\n            }\n            else {\n                this.serializeWrappingPictureAndShape(writer, draw);\n            }\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the Other Wrapping picture & Shape.\n    WordExport.prototype.serializeWrappingPictureAndShape = function (writer, picture) {\n        if (!isNullOrUndefined(this.document.optimizeSfdt)) {\n            this.keywordIndex = this.document.optimizeSfdt ? 1 : 0;\n        }\n        writer.writeStartElement('wp', 'anchor', this.wpNamespace);\n        this.serializePictureAndShapeDistance(writer, picture);\n        writer.writeAttributeString(undefined, 'simplePos', undefined, '0');\n        writer.writeAttributeString(undefined, 'relativeHeight', undefined, picture[zOrderPositionProperty[this.keywordIndex]] ? Math.abs(picture[zOrderPositionProperty[this.keywordIndex]]).toString() : '0');\n        var behindText = (picture[textWrappingStyleProperty[this.keywordIndex]] && picture[textWrappingStyleProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 4 : 'Behind'));\n        writer.writeAttributeString(undefined, 'behindDoc', undefined, behindText ? '1' : '0');\n        // LockAnchor & LayoutInCell & AllowOverlap in these boolean has 0 and 1 as values.If the value is null or undefined then set the default value as 0.\n        var lockAnchor = this.keywordIndex == 1 ? !isNullOrUndefined(picture[lockAnchorProperty[this.keywordIndex]]) ? picture[lockAnchorProperty[this.keywordIndex]].toString() : '0' : (picture[lockAnchorProperty[this.keywordIndex]]) ? '1' : '0';\n        writer.writeAttributeString(undefined, 'locked', undefined, lockAnchor);\n        var layoutcell = this.keywordIndex == 1 ? !isNullOrUndefined(picture[layoutInCellProperty[this.keywordIndex]]) ? picture[layoutInCellProperty[this.keywordIndex]].toString() : '0' : (picture[layoutInCellProperty[this.keywordIndex]]) ? '1' : '0';\n        writer.writeAttributeString(undefined, 'layoutInCell', undefined, layoutcell);\n        var allowOverlap = this.keywordIndex == 1 ? !isNullOrUndefined(picture[allowOverlapProperty[this.keywordIndex]]) ? picture[allowOverlapProperty[this.keywordIndex]].toString() : '0' : (picture[allowOverlapProperty[this.keywordIndex]]) ? '1' : '0';\n        writer.writeAttributeString(undefined, 'allowOverlap', undefined, allowOverlap);\n        writer.writeStartElement('wp', 'simplePos', this.wpNamespace);\n        writer.writeAttributeString(undefined, 'x', undefined, '0');\n        writer.writeAttributeString(undefined, 'y', undefined, '0');\n        writer.writeEndElement();\n        writer.writeStartElement('wp', 'positionH', this.wpNamespace);\n        var horizontalOrigin = this.keywordIndex == 1 ? this.getHorizontalOrigin(picture[horizontalOriginProperty[this.keywordIndex]]) : picture[horizontalOriginProperty[this.keywordIndex]].toString();\n        writer.writeAttributeString(undefined, 'relativeFrom', undefined, HelperMethods.formatText(\"firstlower\", horizontalOrigin));\n        if (picture[horizontalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n            writer.writeStartElement('wp', 'posOffset', this.wpNamespace);\n            var horPos = Math.round(picture[horizontalPositionProperty[this.keywordIndex]] * this.emusPerPoint);\n            writer.writeString(horPos.toString());\n            writer.writeEndElement(); //end of posOffset\n        }\n        else {\n            writer.writeStartElement('wp', 'align', this.wpNamespace);\n            var horAlig = this.keywordIndex == 1 ? this.getShapeHorizontalAlignment(picture[horizontalAlignmentProperty[this.keywordIndex]]) : picture[horizontalAlignmentProperty[this.keywordIndex]].toString();\n            writer.writeString(horAlig.toLowerCase());\n            writer.writeEndElement(); //end of align\n        }\n        writer.writeEndElement(); //end of postionH\n        writer.writeStartElement('wp', 'positionV', this.wpNamespace);\n        var verticalOrigin = this.keywordIndex == 1 ? this.getVerticalOrigin(picture[verticalOriginProperty[this.keywordIndex]]) : picture[verticalOriginProperty[this.keywordIndex]].toString();\n        writer.writeAttributeString(undefined, 'relativeFrom', undefined, HelperMethods.formatText(\"firstlower\", verticalOrigin));\n        if (picture[verticalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n            writer.writeStartElement('wp', 'posOffset', this.wpNamespace);\n            var vertPos = Math.round(picture[verticalPositionProperty[this.keywordIndex]] * this.emusPerPoint);\n            writer.writeString(vertPos.toString());\n            writer.writeEndElement(); // end of posOffset\n        }\n        else {\n            writer.writeStartElement('wp', 'align', this.wpNamespace);\n            var verAlig = this.keywordIndex == 1 ? this.getShapeVerticalAlignment(picture[verticalAlignmentProperty[this.keywordIndex]]) : picture[verticalAlignmentProperty[this.keywordIndex]];\n            writer.writeString(verAlig.toLowerCase());\n            writer.writeEndElement(); //end of align\n        }\n        writer.writeEndElement(); //end of postionV\n        writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n        var cx = Math.round(picture[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n        var cy = Math.round(picture[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n        writer.writeEndElement();\n        if (!isNullOrUndefined(picture[imageStringProperty[this.keywordIndex]])) {\n            // this.serializePicProperties(writer, draw);\n            this.serializeShapeWrapStyle(writer, picture);\n            this.serializeDrawingGraphics(writer, picture);\n        }\n        else {\n            this.serializeShapeDrawingGraphics(writer, picture);\n        }\n        writer.writeEndElement(); // end of anchor\n    };\n    // Serialize the inline picture & Shape.\n    WordExport.prototype.serializeInlinePictureAndShape = function (writer, draw) {\n        writer.writeStartElement(undefined, 'inline', this.wpNamespace);\n        this.writeDefaultDistAttribute(writer);\n        writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n        var cx = Math.round(draw[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n        var cy = Math.round(draw[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n        writer.writeEndElement();\n        // double borderWidth = (double)picture.PictureShape.PictureDescriptor.BorderLeft.LineWidth / DLSConstants.BorderLineFactor;\n        // if (borderWidth > 0 && picture.DocxProps.length === 0) {\n        //     long leftTop = 0, rightBottom = 0;\n        //     picture.PictureShape.GetEffectExtent(borderWidth, ref leftTop, ref rightBottom);\n        //     m_writer.WriteStartElement('effectExtent', WP_namespace);\n        //     m_writer.WriteAttributeString('l', leftTop.ToString(CultureInfo.InvariantCulture));\n        //     m_writer.WriteAttributeString('t', leftTop.ToString(CultureInfo.InvariantCulture));\n        //     m_writer.WriteAttributeString('r', rightBottom.ToString(CultureInfo.InvariantCulture));\n        //     m_writer.WriteAttributeString('b', rightBottom.ToString(CultureInfo.InvariantCulture));\n        //     m_writer.WriteEndElement();\n        // }\n        //this.serializePicProperties(writer, image);\n        if (!isNullOrUndefined(draw[imageStringProperty[this.keywordIndex]])) {\n            this.serializeShapeWrapStyle(writer, draw);\n            this.serializeDrawingGraphics(writer, draw);\n        }\n        else {\n            this.serializeShapeDrawingGraphics(writer, draw);\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializePictureAndShapeDistance = function (writer, draw) {\n        var top = draw[distanceTopProperty[this.keywordIndex]] ? Math.round(draw[distanceTopProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '0';\n        writer.writeAttributeString(undefined, 'distT', undefined, top);\n        var bottom = draw[distanceBottomProperty[this.keywordIndex]] ? Math.round(draw[distanceBottomProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '0';\n        writer.writeAttributeString(undefined, 'distB', undefined, bottom);\n        var left = draw[distanceLeftProperty[this.keywordIndex]] ? Math.round(draw[distanceLeftProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '114300';\n        writer.writeAttributeString(undefined, 'distL', undefined, left);\n        var right = draw[distanceRightProperty[this.keywordIndex]] ? Math.round(draw[distanceRightProperty[this.keywordIndex]] * this.emusPerPoint).toString() : '114300';\n        writer.writeAttributeString(undefined, 'distR', undefined, right);\n    };\n    WordExport.prototype.writeDefaultDistAttribute = function (writer) {\n        writer.writeAttributeString(undefined, 'distT', undefined, '0');\n        writer.writeAttributeString(undefined, 'distB', undefined, '0');\n        writer.writeAttributeString(undefined, 'distL', undefined, '0');\n        writer.writeAttributeString(undefined, 'distR', undefined, '0');\n    };\n    // serialize inline chart\n    WordExport.prototype.serializeInlineCharts = function (writer, item) {\n        writer.writeStartElement(undefined, 'inline', this.wpNamespace);\n        this.writeDefaultDistAttribute(writer);\n        writer.writeStartElement(undefined, 'extent', this.wpNamespace);\n        var cx = Math.round(item[widthProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n        var cy = Math.round(item[heightProperty[this.keywordIndex]] * this.emusPerPoint);\n        writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n        writer.writeEndElement(); // end of wp:extend\n        writer.writeStartElement(undefined, 'effectExtent', this.wpNamespace);\n        writer.writeAttributeString(undefined, 'l', undefined, '0');\n        writer.writeAttributeString(undefined, 't', undefined, '0');\n        writer.writeAttributeString(undefined, 'r', undefined, '0');\n        writer.writeAttributeString(undefined, 'b', undefined, '0');\n        writer.writeEndElement(); // end of wp: effectExtent\n        this.serializeDrawingGraphicsChart(writer, item);\n        writer.writeEndElement(); // end of inline\n    };\n    // Serialize the graphics element for chart.\n    WordExport.prototype.serializeDrawingGraphicsChart = function (writer, chart) {\n        var id = '';\n        id = this.updatechartId(chart);\n        // Processing chart\n        writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n        writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n        writer.writeAttributeString(undefined, 'name', undefined, this.getNextChartName());\n        writer.writeEndElement(); // end of wp docPr\n        writer.writeStartElement('wp', 'cNvGraphicFramePr', this.wpNamespace);\n        writer.writeEndElement(); // end of cNvGraphicFramePr\n        writer.writeStartElement('a', 'graphic', this.aNamespace);\n        writer.writeStartElement('a', 'graphicData', this.aNamespace);\n        writer.writeAttributeString(undefined, 'uri', undefined, this.chartNamespace);\n        writer.writeStartElement('c', 'chart', this.chartNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('r', 'id', undefined, id);\n        writer.writeEndElement(); // end of chart\n        writer.writeEndElement(); // end of graphic data\n        writer.writeEndElement(); // end of graphic\n    };\n    WordExport.prototype.getBase64ImageString = function (image) {\n        var base64ImageString = !isNullOrUndefined(image[metaFileImageStringProperty[this.keywordIndex]]) ? this.mImages.get(parseInt(image[metaFileImageStringProperty[this.keywordIndex]])) : this.mImages.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n        var imageString = base64ImageString[HelperMethods.parseBoolValue(image[isMetaFileProperty[this.keywordIndex]]) ? 1 : 0];\n        var index = (this.startsWith(imageString, \"https://\") || this.startsWith(imageString, \"http://\") || this.startsWith(imageString, \"file://\")) ? 1 : 0;\n        var metaFileImageString = base64ImageString[index];\n        return { imageString: imageString, metaFileImageString: metaFileImageString };\n    };\n    WordExport.prototype.getNextChartName = function () {\n        return 'Chart' + (++this.chartCount);\n    };\n    // serialize chart\n    WordExport.prototype.serializeChart = function (writer, chart) {\n        writer.writeStartElement('w', 'r', this.wNamespace);\n        this.serializeCharacterFormat(writer, chart[characterFormatProperty[this.keywordIndex]]);\n        this.serializeDrawing(writer, chart);\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeChartStructure = function () {\n        this.serializeChartXML();\n        this.serializeChartColors();\n        this.serializeChartExcelData();\n        this.serializeChartRelations();\n        this.chart = undefined;\n        this.saveExcel();\n    };\n    // serialize Chart.xml\n    WordExport.prototype.serializeChartXML = function () {\n        var chartPath = '';\n        var writer = new XmlWriter();\n        writer.writeStartElement('c', 'chartSpace', this.chartNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'c16r2', undefined, this.c15Namespace);\n        this.serializeChartData(writer, this.chart);\n        writer.writeStartElement('c', 'externalData', this.chartNamespace);\n        writer.writeAttributeString('r', 'id', undefined, 'rId1');\n        writer.writeStartElement('c', 'autoUpdate', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of autoUpdate\n        writer.writeEndElement(); // end of externalData\n        writer.writeEndElement(); // end of chartSpace\n        chartPath = this.chartPath + '/chart' + this.chartCount + '.xml';\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, chartPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    // serialize chart colors.xml\n    WordExport.prototype.serializeChartColors = function () {\n        var writer = new XmlWriter();\n        var colorPath = '';\n        writer.writeStartElement('cs', 'colorStyle', this.csNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeAttributeString(undefined, 'meth', undefined, 'cycle');\n        writer.writeAttributeString(undefined, 'id', undefined, '10');\n        this.serializeChartColor(writer);\n        colorPath = this.chartPath + '/colors' + this.chartCount + '.xml';\n        writer.writeEndElement(); // end of cs:colorStyle chart color\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, colorPath);\n        this.mArchive.addItem(zipArchiveItem);\n        colorPath = '';\n    };\n    WordExport.prototype.serializeChartColor = function (writer) {\n        for (var i = 1; i <= 6; i++) {\n            writer.writeStartElement('a', 'schemeClr', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'accent' + i);\n            writer.writeEndElement(); // end of a:schemeClr\n        }\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '60000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '80000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeStartElement('a', 'lumOff', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '20000');\n        writer.writeEndElement(); // end of lumoff\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '80000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '60000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeStartElement('a', 'lumOff', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '40000');\n        writer.writeEndElement(); // end of lumoff\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '50000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '70000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeStartElement('a', 'lumOff', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '30000');\n        writer.writeEndElement(); // end of lumoff\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '70000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeEndElement(); // end of cs:variation\n        writer.writeStartElement('cs', 'variation', this.csNamespace);\n        writer.writeStartElement('a', 'lumMod', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '50000');\n        writer.writeEndElement(); // end of lumMod\n        writer.writeStartElement('a', 'lumOff', this.aNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '50000');\n        writer.writeEndElement(); // end of lumoff\n        writer.writeEndElement(); // end of cs:variation\n    };\n    // serialize chart Excel Data\n    WordExport.prototype.serializeChartExcelData = function () {\n        if (isNullOrUndefined(this.excelFiles)) {\n            this.excelFiles = new Dictionary();\n        }\n        this.mArchiveExcel = new ZipArchive();\n        this.mArchiveExcel.compressionLevel = 'Normal';\n        var type = this.chart[chartTypeProperty[this.keywordIndex]];\n        var isScatterType = (type === 'Scatter_Markers' || type === 'Bubble');\n        this.serializeWorkBook();\n        this.serializeSharedString(isScatterType);\n        this.serializeExcelContentTypes();\n        this.serializeExcelData(isScatterType);\n        this.serializeExcelStyles();\n        this.serializeExcelRelation();\n        this.serializeExcelGeneralRelations();\n        this.chartStringCount = 0;\n    };\n    WordExport.prototype.serializeWorkBook = function () {\n        var writer = new XmlWriter();\n        var workbookPath = 'xl/workbook.xml';\n        this.resetExcelRelationShipId();\n        writer.writeStartElement(undefined, 'workbook', undefined);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n        writer.writeStartElement(undefined, 'sheets', undefined);\n        writer.writeStartElement(undefined, 'sheet', undefined);\n        writer.writeAttributeString(undefined, 'name', undefined, 'Sheet1');\n        writer.writeAttributeString(undefined, 'sheetId', undefined, '1');\n        writer.writeAttributeString('r', 'id', undefined, this.getNextExcelRelationShipID());\n        writer.writeEndElement(); // end of sheet\n        writer.writeEndElement(); // end of sheets\n        writer.writeEndElement(); // end of workbook\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, workbookPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeExcelStyles = function () {\n        var writer = new XmlWriter();\n        var stylePath = 'xl/styles.xml';\n        writer.writeStartElement(undefined, 'styleSheet', undefined);\n        writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'x14ac');\n        writer.writeAttributeString('xmlns', 'x14ac', undefined, 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac');\n        writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n        writer.writeEndElement(); // end of styleSheet\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, stylePath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeExcelData = function (isScatterType) {\n        // excel data\n        var sheetPath = '';\n        var writer = new XmlWriter();\n        writer.writeStartElement(undefined, 'worksheet', undefined);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'x14', undefined, this.spreadSheet9);\n        writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n        this.serializeExcelSheet(writer, isScatterType);\n        writer.writeEndElement(); // end of worksheet\n        sheetPath = 'xl/worksheets' + '/sheet1.xml';\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, sheetPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeSharedString = function (isScatterType) {\n        var chart = this.chart;\n        var writer = new XmlWriter();\n        var sharedStringPath = '';\n        var chartSharedString = [];\n        var type = this.chart[chartTypeProperty[this.keywordIndex]];\n        var seriesLength = chart[chartSeriesProperty[this.keywordIndex]].length;\n        for (var column = 0; column < seriesLength; column++) {\n            var series = chart[chartSeriesProperty[this.keywordIndex]][column];\n            var seriesName = series[seriesNameProperty[this.keywordIndex]];\n            var isString = seriesName.match(/[a-z]/i);\n            if (isScatterType && column === 0) {\n                chartSharedString.push('X-Values');\n            }\n            if (isString) {\n                chartSharedString.push(series[seriesNameProperty[this.keywordIndex]]);\n                this.chartStringCount++;\n            }\n        }\n        if (type === 'Bubble') {\n            chartSharedString.push('Size');\n        }\n        for (var row = 0; row < chart[chartCategoryProperty[this.keywordIndex]].length; row++) {\n            var category = chart[chartCategoryProperty[this.keywordIndex]][row];\n            var format = chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n            var categoryName = category[categoryXNameProperty[this.keywordIndex]];\n            var isString = categoryName.match(/[a-z]/i);\n            if (isString || format === 'm/d/yyyy') {\n                chartSharedString.push(category[categoryXNameProperty[this.keywordIndex]]);\n                this.chartStringCount++;\n            }\n        }\n        var uniqueCount = this.chartStringCount + 1;\n        writer.writeStartElement(undefined, 'sst', undefined);\n        writer.writeAttributeString('xmlns', undefined, undefined, this.spreadSheetNamespace);\n        writer.writeAttributeString(undefined, 'count', undefined, uniqueCount.toString());\n        writer.writeAttributeString(undefined, 'uniqueCount', undefined, uniqueCount.toString());\n        for (var i = 0; i <= chartSharedString.length; i++) {\n            writer.writeStartElement(undefined, 'si', undefined);\n            writer.writeStartElement(undefined, 't', undefined);\n            if (i !== chartSharedString.length) {\n                writer.writeString(chartSharedString[i]);\n            }\n            else if (!isScatterType) {\n                writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n                writer.writeString(' ');\n            }\n            writer.writeEndElement(); // end of t\n            writer.writeEndElement(); // end of si\n        }\n        writer.writeEndElement(); // end of sst\n        sharedStringPath = 'xl/sharedStrings' + '.xml';\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, sharedStringPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    // excel sheet data\n    WordExport.prototype.serializeExcelSheet = function (writer, isScatterType) {\n        var chart = this.chart;\n        var type = 's';\n        var isBubbleType = (chart[chartTypeProperty[this.keywordIndex]] === 'Bubble');\n        var bubbleLength;\n        var categoryLength = chart[chartCategoryProperty[this.keywordIndex]].length + 1;\n        var format = chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n        var seriesLength = chart[chartSeriesProperty[this.keywordIndex]].length + 1;\n        if (isBubbleType) {\n            bubbleLength = seriesLength;\n            seriesLength = seriesLength + 1;\n        }\n        var category = undefined;\n        var series = undefined;\n        var count = 0;\n        writer.writeStartElement(undefined, 'sheetData', undefined);\n        for (var row = 0; row < categoryLength; row++) {\n            writer.writeStartElement(undefined, 'row', undefined);\n            writer.writeAttributeString(undefined, 'r', undefined, (row + 1).toString());\n            for (var column = 0; column < seriesLength; column++) {\n                var alphaNumeric = String.fromCharCode('A'.charCodeAt(0) + column) + (row + 1).toString();\n                writer.writeStartElement(undefined, 'c', undefined);\n                writer.writeAttributeString(undefined, 'r', undefined, alphaNumeric);\n                if (row !== 0 && column === 0) {\n                    category = chart[chartCategoryProperty[this.keywordIndex]][row - 1];\n                    var categoryName = category[categoryXNameProperty[this.keywordIndex]];\n                    var isString = categoryName.match(/[a-z]/i);\n                    if (isNullOrUndefined(isString) && format === 'm/d/yyyy') {\n                        type = 's';\n                    }\n                    else if (!isString || isScatterType) {\n                        type = 'n';\n                    }\n                    else {\n                        type = 's';\n                    }\n                }\n                else if (row === 0 && column !== 0 && column !== (bubbleLength)) {\n                    series = chart[chartSeriesProperty[this.keywordIndex]][column - 1];\n                    var seriesName = series[seriesNameProperty[this.keywordIndex]];\n                    var isString = seriesName.match(/[a-z]/i);\n                    if (!isString) {\n                        type = 'n';\n                    }\n                    else {\n                        type = 's';\n                    }\n                }\n                else if (row === 0 && isBubbleType && column === (bubbleLength)) {\n                    type = 's';\n                }\n                else if (row === 0 && column === 0) {\n                    type = 's';\n                }\n                else {\n                    type = 'n';\n                }\n                writer.writeAttributeString(undefined, 't', undefined, type);\n                writer.writeStartElement(undefined, 'v', undefined);\n                if (row === 0 && column === 0 && !isScatterType) {\n                    writer.writeString(this.chartStringCount.toString());\n                }\n                else if (type === 's' && count < this.chartStringCount) {\n                    writer.writeString(count.toString());\n                    count++;\n                }\n                else if (row !== 0 && type !== 's' && column === 0 && column !== (bubbleLength)) {\n                    writer.writeString(category[categoryXNameProperty[this.keywordIndex]]);\n                }\n                else if (column !== 0 && type !== 's' && row === 0 && column !== (bubbleLength)) {\n                    writer.writeString(series[seriesNameProperty[this.keywordIndex]]);\n                }\n                else if (column !== 0 && column !== (bubbleLength)) {\n                    var data = category[chartDataProperty[this.keywordIndex]][column - 1];\n                    var yValue = data[yValueProperty[this.keywordIndex]];\n                    writer.writeString(yValue.toString());\n                }\n                else if (isBubbleType && column === (bubbleLength)) {\n                    var data = category[chartDataProperty[this.keywordIndex]][column - 2];\n                    var size = data[sizeProperty[this.keywordIndex]];\n                    writer.writeString(size.toString());\n                }\n                writer.writeEndElement(); // end of v[value]\n                writer.writeEndElement(); // end of c[column]\n                type = '';\n            }\n            writer.writeEndElement(); // end of row\n        }\n        writer.writeEndElement(); // end of sheetData\n    };\n    // excel content types\n    WordExport.prototype.serializeExcelContentTypes = function () {\n        var writer = new XmlWriter();\n        writer.writeStartElement(undefined, 'Types', 'http://schemas.openxmlformats.org/package/2006/content-types');\n        this.serializeDefaultContentType(writer, 'xml', this.xmlContentType);\n        this.serializeDefaultContentType(writer, 'rels', this.relationContentType);\n        this.serializeOverrideContentType(writer, 'xl/styles.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml');\n        this.serializeOverrideContentType(writer, 'xl/workbook.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml');\n        // this.serializeOverrideContentType(writer, '/docProps/app.xml', 'application/vnd.openxmlformats-officedocument.extended-properties+xml');\n        // this.serializeOverrideContentType(writer, '/docProps/core.xml', 'application/vnd.openxmlformats-package.core-properties+xml');\n        this.serializeOverrideContentType(writer, 'xl/sharedStrings.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml');\n        this.serializeOverrideContentType(writer, 'xl/worksheets/sheet1.xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml');\n        writer.writeEndElement(); // end of types tag\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.contentTypesPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeExcelRelation = function () {\n        var writer = new XmlWriter();\n        this.resetExcelRelationShipId();\n        var worksheetType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet';\n        var sharedStringType = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings';\n        writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), worksheetType, 'worksheets/sheet1.xml');\n        this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), this.stylesRelType, 'styles.xml');\n        this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), sharedStringType, 'sharedStrings.xml');\n        writer.writeEndElement(); // end of relationships\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.excelRelationPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeExcelGeneralRelations = function () {\n        var writer = new XmlWriter();\n        this.resetExcelRelationShipId();\n        writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        this.serializeRelationShip(writer, this.getNextExcelRelationShipID(), this.documentRelType, 'xl/workbook.xml');\n        writer.writeEndElement(); // end of relationships\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.generalRelationPath);\n        this.mArchiveExcel.addItem(zipArchiveItem);\n    };\n    // get the next Excel relationship ID\n    WordExport.prototype.getNextExcelRelationShipID = function () {\n        return 'rId' + (++this.eRelationShipId);\n    };\n    // get the next Chart relationship ID\n    WordExport.prototype.getNextChartRelationShipID = function () {\n        return 'rId' + (++this.cRelationShipId);\n    };\n    //  chart data\n    WordExport.prototype.serializeChartData = function (writer, chart) {\n        writer.writeStartElement('c', 'date1904', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement();\n        writer.writeStartElement('c', 'lang', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, 'en-US');\n        writer.writeEndElement();\n        writer.writeStartElement('c', 'roundedCorners', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement();\n        writer.writeStartElement('mc', 'AlternateContent', this.veNamespace);\n        writer.writeStartElement('mc', 'Choice', this.veNamespace);\n        writer.writeAttributeString('xmlns', 'c14', undefined, this.c7Namespace);\n        writer.writeAttributeString(undefined, 'Requires', undefined, 'c14');\n        writer.writeStartElement('c14', 'style', undefined);\n        writer.writeAttributeString(undefined, 'val', undefined, '102');\n        writer.writeEndElement(); // c14 style end\n        writer.writeEndElement(); // mc:choice ened\n        writer.writeStartElement('mc', 'Fallback', this.veNamespace);\n        writer.writeStartElement('c', 'style', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '2');\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement(); // end tag of mc alternate content\n        writer.writeStartElement('c', 'chart', this.chartNamespace);\n        if (!isNullOrUndefined(this.chart[chartTitleProperty[this.keywordIndex]])) {\n            writer.writeStartElement('c', 'title', this.chartNamespace);\n            this.serializeTextProperties(writer, this.chart[chartTitleAreaProperty[this.keywordIndex]], this.chart[chartTitleProperty[this.keywordIndex]]);\n            writer.writeEndElement(); // end tag of title\n        }\n        // serialize plot area\n        this.serializeChartPlotArea(writer, chart);\n        writer.writeEndElement(); // end tag of chart\n        this.serializeShapeProperties(writer, 'D9D9D9', true);\n        writer.writeStartElement('c', 'txPr', this.chartNamespace);\n        writer.writeAttributeString('xmlns', 'c', undefined, this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeEndElement(); // end tag of bodyPr\n        writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeEndElement(); // end of a:lstStyle\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeStartElement('a', 'pPr', this.aNamespace);\n        writer.writeStartElement('a', 'defRPr', this.aNamespace);\n        writer.writeEndElement(); // end tag of defRPr\n        writer.writeEndElement(); // end tag of pPr\n        writer.writeStartElement('a', 'endParaRPr', this.aNamespace);\n        writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n        writer.writeEndElement(); // end of a:endParaRPr\n        writer.writeEndElement(); // end tag of p\n        writer.writeEndElement(); // end tag of txPr\n    };\n    //  chart plot area\n    /* eslint-disable */\n    WordExport.prototype.serializeChartPlotArea = function (writer, chart) {\n        writer.writeStartElement('c', 'autoTitleDeleted', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of autoTitleDeleted\n        writer.writeStartElement('c', 'plotArea', this.chartNamespace);\n        writer.writeStartElement('c', 'layout', this.chartNamespace);\n        writer.writeEndElement();\n        // chart Type\n        var serializationChartType = this.chartType(chart);\n        var isPieTypeSerialization = (serializationChartType === 'pieChart' || serializationChartType === 'doughnutChart');\n        var isScatterType = (serializationChartType === 'scatterChart' || serializationChartType === 'bubbleChart');\n        writer.writeStartElement('c', serializationChartType, this.chartNamespace);\n        if (serializationChartType === 'barChart') {\n            var barDiv = '';\n            if (chart[chartTypeProperty[this.keywordIndex]] === 'Column_Clustered' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked'\n                || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked_100') {\n                barDiv = 'col';\n            }\n            else {\n                barDiv = 'bar';\n            }\n            writer.writeStartElement('c', 'barDir', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, barDiv);\n            writer.writeEndElement(); // end of barDir\n        }\n        if (!isPieTypeSerialization && !isScatterType) {\n            var grouping = this.chartGrouping(chart[chartTypeProperty[this.keywordIndex]]);\n            writer.writeStartElement('c', 'grouping', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, grouping);\n            writer.writeEndElement(); // end of grouping\n        }\n        if (serializationChartType === 'scatterChart') {\n            writer.writeStartElement('c', 'scatterStyle', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'marker');\n            writer.writeEndElement(); // end of scatterStyle\n        }\n        writer.writeStartElement('c', 'varyColors', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c:varyColors\n        var valueSheet = '';\n        for (var i = 0; i < chart[chartSeriesProperty[this.keywordIndex]].length; i++) {\n            var series = chart[chartSeriesProperty[this.keywordIndex]][i];\n            this.seriesCount = i;\n            writer.writeStartElement('c', 'ser', this.chartNamespace);\n            writer.writeStartElement('c', 'idx', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, i.toString());\n            writer.writeEndElement(); // end of c:idx\n            writer.writeStartElement('c', 'order', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, i.toString());\n            writer.writeEndElement(); // end of c:order\n            writer.writeStartElement('c', 'tx', this.chartNamespace);\n            writer.writeStartElement('c', 'strRef', this.chartNamespace);\n            writer.writeStartElement('c', 'f', this.chartNamespace);\n            var alphaNumeric = String.fromCharCode('B'.charCodeAt(0) + i);\n            valueSheet = 'Sheet1!$' + alphaNumeric;\n            writer.writeString(valueSheet + '$1');\n            valueSheet = valueSheet + '$2:$' + alphaNumeric + '$';\n            writer.writeEndElement(); // end of c:f\n            writer.writeStartElement('c', 'strCache', this.chartNamespace);\n            writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '1');\n            writer.writeEndElement(); // end of ptCount\n            writer.writeStartElement('c', 'pt', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'idx', undefined, '0');\n            writer.writeStartElement('c', 'v', this.chartNamespace);\n            writer.writeString(series[seriesNameProperty[this.keywordIndex]]);\n            writer.writeEndElement(); // end of c:v\n            writer.writeEndElement(); // end of pt\n            writer.writeEndElement(); // end of strCache\n            writer.writeEndElement(); // end of strRef\n            writer.writeEndElement(); // end of tx\n            if (chart[chartTypeProperty[this.keywordIndex]] === 'Pie' || chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut') {\n                this.parseChartDataPoint(writer, series);\n                writer.writeStartElement('c', 'explosion', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, '0');\n                writer.writeEndElement(); // end of explosion\n            }\n            else if (!isScatterType) {\n                this.parseChartSeriesColor(writer, series[dataPointsProperty[this.keywordIndex]], serializationChartType);\n            }\n            if (serializationChartType === 'scatterChart') {\n                var fillColor = series[dataPointsProperty[this.keywordIndex]][0][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n                writer.writeStartElement('c', 'marker', this.chartNamespace);\n                writer.writeStartElement('c', 'symbol', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, 'circle');\n                writer.writeEndElement(); // end of a: symbol\n                writer.writeStartElement('c', 'size', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, '5');\n                writer.writeEndElement(); // end of a: size\n                this.serializeShapeProperties(writer, fillColor, false);\n                writer.writeEndElement(); // end of a: marker\n            }\n            if (series[dataLabelProperty[this.keywordIndex]]) {\n                this.parseChartDataLabels(writer, series[dataLabelProperty[this.keywordIndex]]);\n            }\n            if (series[trendLinesProperty[this.keywordIndex]]) {\n                this.parseChartTrendLines(writer, series);\n            }\n            if (series[errorBarProperty[this.keywordIndex]]) {\n                this.serializeChartErrorBar(writer, series);\n            }\n            if (serializationChartType === 'scatterChart') {\n                this.serializeDefaultShapeProperties(writer);\n            }\n            else if (serializationChartType === 'bubbleChart') {\n                this.serializeShapeProperties(writer, series[dataPointsProperty[this.keywordIndex]][i][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]], false);\n            }\n            var categoryType = 'cat';\n            var categoryRef = 'strRef';\n            var cacheType = 'strCache';\n            if (serializationChartType === 'scatterChart') {\n                categoryType = 'xVal';\n                categoryRef = 'numRef';\n                cacheType = 'numCache';\n            }\n            writer.writeStartElement('c', categoryType, this.chartNamespace);\n            writer.writeStartElement('c', categoryRef, this.chartNamespace);\n            this.serializeChartCategory(writer, chart, cacheType); // serialize chart yvalue\n            writer.writeEndElement(); // end of categoryRef\n            writer.writeEndElement(); // end of cat\n            this.serializeChartValue(writer, valueSheet, serializationChartType);\n            writer.writeEndElement(); // end of c:ser\n        }\n        writer.writeStartElement('c', 'dLbls', this.chartNamespace);\n        if (isPieTypeSerialization) {\n            writer.writeStartElement('c', 'dLblPos', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'bestFit');\n            writer.writeEndElement(); // end of dLblPos\n        }\n        writer.writeStartElement('c', 'showLegendKey', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showLegendKey\n        writer.writeStartElement('c', 'showVal', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showVal\n        writer.writeStartElement('c', 'showCatName', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showCatName\n        writer.writeStartElement('c', 'showSerName', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showSerName\n        writer.writeStartElement('c', 'showPercent', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showPercent\n        writer.writeStartElement('c', 'showBubbleSize', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: showBubbleSize\n        writer.writeStartElement('c', 'showLeaderLines', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '1');\n        writer.writeEndElement(); // end of c: showLeaderLines\n        writer.writeEndElement(); // end of c: dLbls\n        if (isPieTypeSerialization) {\n            var series = this.chart[chartSeriesProperty[this.keywordIndex]][0];\n            var sliceAngle = 0;\n            var holeSize = 0;\n            if (series.hasOwnProperty(firstSliceAngleProperty[this.keywordIndex])) {\n                sliceAngle = series[firstSliceAngleProperty[this.keywordIndex]];\n            }\n            writer.writeStartElement('c', 'firstSliceAng', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, sliceAngle.toString());\n            writer.writeEndElement(); // end of c: firstSliceAng\n            if (chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut') {\n                holeSize = series[holeSizeProperty[this.keywordIndex]];\n                writer.writeStartElement('c', 'holeSize', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, holeSize.toString());\n                writer.writeEndElement(); // end of c: holeSize\n            }\n        }\n        if (serializationChartType !== 'lineChart' && !isScatterType) {\n            writer.writeStartElement('c', 'gapWidth', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, this.chart[gapWidthProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of gapWidth\n            writer.writeStartElement('c', 'overlap', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, this.chart[overlapProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of overlap\n        }\n        else if (serializationChartType !== 'bubbleChart') {\n            writer.writeStartElement('c', 'smooth', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '0');\n            writer.writeEndElement(); // end of smooth\n        }\n        if (serializationChartType === 'bubbleChart') {\n            writer.writeStartElement('c', 'sizeRepresents', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'area');\n            writer.writeEndElement(); // end of smooth\n        }\n        var type = this.chart[chartTypeProperty[this.keywordIndex]];\n        if (!isPieTypeSerialization) {\n            writer.writeStartElement('c', 'axId', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '335265000');\n            writer.writeEndElement(); // end of axId\n            writer.writeStartElement('c', 'axId', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '335263360');\n            writer.writeEndElement(); // end of axId\n        }\n        writer.writeEndElement(); // end of chart type\n        var isStackedPercentage = (type === 'Column_Stacked_100' || type === 'Area_Stacked_100' ||\n            type === 'Bar_Stacked_100' || type === 'Line_Stacked_100' || type === 'Line_Markers_Stacked_100');\n        var format = this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][chartTypeProperty[this.keywordIndex]];\n        if (!isPieTypeSerialization) {\n            this.serializeCategoryAxis(writer, format, isStackedPercentage);\n            this.serializeValueAxis(writer, format, isStackedPercentage);\n        }\n        if (this.chart.hasOwnProperty(chartDataTableProperty[this.keywordIndex])) {\n            var dataTable = this.chart[chartDataTableProperty[this.keywordIndex]];\n            var showHorzBorder = 0;\n            var showVertBorder = 0;\n            var showOutline = 0;\n            var showKeys = 0;\n            if (HelperMethods.parseBoolValue(dataTable[showSeriesKeysProperty[this.keywordIndex]])) {\n                showKeys = 1;\n            }\n            if (HelperMethods.parseBoolValue(dataTable[hasHorizontalBorderProperty[this.keywordIndex]])) {\n                showHorzBorder = 1;\n            }\n            if (HelperMethods.parseBoolValue(dataTable[hasVerticalBorderProperty[this.keywordIndex]])) {\n                showVertBorder = 1;\n            }\n            if (HelperMethods.parseBoolValue(dataTable[hasBordersProperty[this.keywordIndex]])) {\n                showOutline = 1;\n            }\n            writer.writeStartElement('c', 'dTable', this.chartNamespace);\n            writer.writeStartElement('c', 'showHorzBorder', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, showHorzBorder.toString());\n            writer.writeEndElement(); // end of showHorzBorder\n            writer.writeStartElement('c', 'showVertBorder', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, showVertBorder.toString());\n            writer.writeEndElement(); // end of showVertBorder\n            writer.writeStartElement('c', 'showOutline', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, showOutline.toString());\n            writer.writeEndElement(); // end of showOutline\n            writer.writeStartElement('c', 'showKeys', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, showKeys.toString());\n            writer.writeEndElement(); // end of showKeys\n            writer.writeEndElement(); // end of dTable\n        }\n        this.serializeDefaultShapeProperties(writer);\n        writer.writeEndElement(); // end of plot area\n        // legend\n        if (!isNullOrUndefined(this.chart[chartLegendProperty[this.keywordIndex]][positionProperty[this.keywordIndex]])) {\n            this.serializeChartLegend(writer);\n        }\n        writer.writeStartElement('c', 'plotVisOnly', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '1');\n        writer.writeEndElement(); // end of c: plotVisOnly\n        writer.writeStartElement('c', 'dispBlanksAs', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, 'gap');\n        writer.writeEndElement(); // end of c: dispBlanksAs\n    };\n    WordExport.prototype.serializeChartLegend = function (writer) {\n        var legendPosition = this.chartLegendPosition(this.chart[chartLegendProperty[this.keywordIndex]]);\n        var title = this.chart[chartLegendProperty[this.keywordIndex]][chartTitleAreaProperty[this.keywordIndex]];\n        var fill = title[dataFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n        writer.writeStartElement('c', 'legend', this.chartNamespace);\n        writer.writeStartElement('c', 'legendPos', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, legendPosition);\n        writer.writeEndElement();\n        writer.writeStartElement('c', 'overlay', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement();\n        this.serializeDefaultShapeProperties(writer);\n        writer.writeStartElement('c', 'txPr', this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeChartErrorBar = function (writer, series) {\n        var errorBar = series[errorBarProperty[this.keywordIndex]];\n        var errorBarValueType = this.errorBarValueType(errorBar[typeProperty[this.keywordIndex]]);\n        var endStyle = 0;\n        if (errorBar[endStyleProperty[this.keywordIndex]] !== 'Cap') {\n            endStyle = 1;\n        }\n        writer.writeStartElement('c', 'errBars', this.chartNamespace);\n        writer.writeStartElement('c', 'errBarType', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, errorBar[directionProperty[this.keywordIndex]].toLowerCase());\n        writer.writeEndElement(); // end of c: errBarType\n        writer.writeStartElement('c', 'errValType', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, errorBarValueType);\n        writer.writeEndElement(); // end of c: errValType\n        writer.writeStartElement('c', 'noEndCap', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, endStyle.toString());\n        writer.writeEndElement(); // end of c: noEndCap\n        writer.writeStartElement('c', 'val', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, errorBar[numberValueProperty[this.keywordIndex]].toString());\n        writer.writeEndElement(); // end of c: val\n        this.serializeShapeProperties(writer, '595959', true);\n        writer.writeEndElement(); // end of c: errBars\n    };\n    WordExport.prototype.errorBarValueType = function (type) {\n        var valueType = '';\n        switch (type) {\n            case 'StandardError':\n                valueType = 'stdErr';\n                break;\n            case 'StandardDeviation':\n                valueType = 'stdDev';\n                break;\n            case 'Percentage':\n                valueType = 'percentage';\n                break;\n            case 'Fixed':\n                valueType = 'fixedVal';\n                break;\n            default:\n                valueType = 'stdErr';\n                break;\n        }\n        return valueType;\n    };\n    WordExport.prototype.serializeCategoryAxis = function (writer, format, isStackedPercentage) {\n        // serialize category axis\n        var axisType = 'catAx';\n        var formatCode = this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]];\n        var type = this.chart[chartTypeProperty[this.keywordIndex]];\n        var isScatterType = (type === 'Scatter_Markers' || type === 'Bubble');\n        if (format === 'Time') {\n            axisType = 'dateAx';\n        }\n        if (isScatterType) {\n            axisType = 'valAx';\n        }\n        writer.writeStartElement('c', axisType, this.chartNamespace);\n        writer.writeStartElement('c', 'axId', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '335265000');\n        writer.writeEndElement(); // end of axId\n        this.serializeAxis(writer, '335263360', this.chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]], formatCode, isStackedPercentage);\n        if (!isScatterType) {\n            writer.writeStartElement('c', 'auto', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '1');\n            writer.writeEndElement(); // end of auto\n            writer.writeStartElement('c', 'lblAlgn', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'ctr');\n            writer.writeEndElement(); // end of lblAlgn\n            writer.writeStartElement('c', 'lblOffset', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '100');\n            writer.writeEndElement(); // end of lblOffset\n        }\n        if (format === 'Time') {\n            writer.writeStartElement('c', 'baseTimeUnit', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'days');\n            writer.writeEndElement(); // end of baseTimeUnit\n        }\n        else if (this.chart[chartTypeProperty[this.keywordIndex]] !== 'Bubble') {\n            writer.writeStartElement('c', 'noMultiLvlLbl', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '0');\n            writer.writeEndElement(); // end of noMultiLvlLbl\n        }\n        writer.writeEndElement(); // end of catAx\n    };\n    WordExport.prototype.serializeValueAxis = function (writer, format, isStackedPercentage) {\n        // serialize category axis\n        var valueAxis = this.chart[chartPrimaryValueAxisProperty[this.keywordIndex]];\n        var crossBetween = 'between';\n        if (format === 'Time') {\n            crossBetween = 'midCat';\n        }\n        writer.writeStartElement('c', 'valAx', this.chartNamespace);\n        writer.writeStartElement('c', 'axId', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '335263360');\n        writer.writeEndElement(); // end of axId\n        this.serializeAxis(writer, '335265000', valueAxis, 'General', isStackedPercentage);\n        writer.writeStartElement('c', 'crossBetween', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, crossBetween);\n        writer.writeEndElement(); // end of crossBetween\n        if (valueAxis[majorUnitProperty[this.keywordIndex]] !== 0 && !isStackedPercentage) {\n            writer.writeStartElement('c', 'majorUnit', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, valueAxis[majorUnitProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of majorUnit\n        }\n        writer.writeEndElement(); // end of valAx\n    };\n    WordExport.prototype.serializeAxis = function (writer, axisID, axis, formatCode, isStackedPercentage) {\n        var majorTickMark = 'none';\n        var minorTickMark = 'none';\n        var tickLabelPosition = 'nextTo';\n        writer.writeStartElement('c', 'scaling', this.chartNamespace);\n        writer.writeStartElement('c', 'orientation', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, 'minMax');\n        writer.writeEndElement(); // end of orientation\n        if (axis[maximumValueProperty[this.keywordIndex]] !== 0 && !isStackedPercentage) {\n            writer.writeStartElement('c', 'max', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, axis[maximumValueProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of max\n            writer.writeStartElement('c', 'min', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, axis[minimumValueProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of min\n        }\n        writer.writeEndElement(); // end of scaling\n        writer.writeStartElement('c', 'delete', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of delete\n        writer.writeStartElement('c', 'axPos', this.chartNamespace);\n        if (axisID === '335265000') {\n            writer.writeAttributeString(undefined, 'val', undefined, 'l');\n        }\n        else {\n            writer.writeAttributeString(undefined, 'val', undefined, 'b');\n        }\n        writer.writeEndElement(); // end of axPos\n        if (HelperMethods.parseBoolValue(axis[hasMajorGridLinesProperty[this.keywordIndex]])) {\n            writer.writeStartElement('c', 'majorGridlines', this.chartNamespace);\n            this.serializeShapeProperties(writer, 'D9D9D9', true);\n            writer.writeEndElement(); // end of majorGridlines\n        }\n        if (HelperMethods.parseBoolValue(axis[hasMinorGridLinesProperty[this.keywordIndex]])) {\n            writer.writeStartElement('c', 'minorGridlines', this.chartNamespace);\n            this.serializeShapeProperties(writer, 'F2F2F2', true);\n            writer.writeEndElement(); // end of minorGridlines\n        }\n        if (axis[chartTitleProperty[this.keywordIndex]]) {\n            writer.writeStartElement('c', 'title', this.chartNamespace);\n            this.serializeTextProperties(writer, axis[chartTitleAreaProperty[this.keywordIndex]], axis[chartTitleProperty[this.keywordIndex]]);\n            writer.writeEndElement(); // end tag of title\n        }\n        writer.writeStartElement('c', 'numFmt', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'formatCode', undefined, formatCode);\n        writer.writeAttributeString(undefined, 'sourceLinked', undefined, '1');\n        writer.writeEndElement(); // end of numFmt\n        writer.writeStartElement('c', 'majorTickMark', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, majorTickMark);\n        writer.writeEndElement(); // end of majorTickMark\n        writer.writeStartElement('c', 'minorTickMark', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, minorTickMark);\n        writer.writeEndElement(); // end of minorTickMark\n        writer.writeStartElement('c', 'tickLblPos', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, tickLabelPosition);\n        writer.writeEndElement(); // end of tickLblPos\n        if (this.chart[chartTypeProperty[this.keywordIndex]] === 'Bubble') {\n            this.serializeShapeProperties(writer, 'BFBFBF', true);\n        }\n        else {\n            this.serializeDefaultShapeProperties(writer);\n        }\n        writer.writeStartElement('c', 'txPr', this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeEndElement(); // end of bodyPr\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        this.serializeChartTitleFont(writer, axis[fontSizeProperty[this.keywordIndex]], '595959', axis[fontNameProperty[this.keywordIndex]]);\n        writer.writeEndElement(); // end of a: p\n        writer.writeEndElement(); // end of c: txPr\n        writer.writeStartElement('c', 'crossAx', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, axisID);\n        writer.writeEndElement(); // end of crossAx\n        writer.writeStartElement('c', 'crosses', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, 'autoZero');\n        writer.writeEndElement(); // end of crosses\n    };\n    WordExport.prototype.parseChartTrendLines = function (writer, series) {\n        for (var i = 0; i < series[trendLinesProperty[this.keywordIndex]].length; i++) {\n            var data = series[trendLinesProperty[this.keywordIndex]][i];\n            var type = this.chartTrendLineType(data[typeProperty[this.keywordIndex]]);\n            var dispRSqr = 0;\n            var dispEq = 0;\n            if (HelperMethods.parseBoolValue(data[isDisplayEquationProperty[this.keywordIndex]])) {\n                dispEq = 1;\n            }\n            else if (HelperMethods.parseBoolValue(data[isDisplayRSquaredProperty[this.keywordIndex]])) {\n                dispRSqr = 1;\n            }\n            var solidFill = series[dataPointsProperty[this.keywordIndex]][i];\n            writer.writeStartElement('c', 'trendline', this.chartNamespace);\n            writer.writeStartElement('c', 'spPr', this.chartNamespace);\n            writer.writeStartElement('a', 'ln', this.aNamespace);\n            writer.writeAttributeString(undefined, 'w', undefined, '19050');\n            this.serializeChartSolidFill(writer, solidFill[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]], false);\n            writer.writeStartElement('a', 'prstDash', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'sysDot');\n            writer.writeEndElement(); // end of a: prstDash\n            writer.writeStartElement('a', 'round', this.aNamespace);\n            writer.writeEndElement(); // end of a: round\n            writer.writeEndElement(); // end of a: ln\n            writer.writeEndElement(); // end of c: spPr\n            writer.writeStartElement('c', 'trendlineType', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, type);\n            writer.writeEndElement(); // end of c: trendlineType\n            writer.writeStartElement('c', 'forward', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, data[forwardProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of c: forward\n            writer.writeStartElement('c', 'backward', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, data[backwardProperty[this.keywordIndex]].toString());\n            writer.writeEndElement(); // end of c: backward\n            if (data[interceptProperty[this.keywordIndex]] !== 'NaN') {\n                writer.writeStartElement('c', 'intercept', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, data[interceptProperty[this.keywordIndex]].toString());\n                writer.writeEndElement(); // end of c: intercept\n            }\n            writer.writeStartElement('c', 'dispRSqr', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, dispRSqr.toString());\n            writer.writeEndElement(); // end of c: dispRSqr\n            writer.writeStartElement('c', 'dispEq', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, dispEq.toString());\n            writer.writeEndElement(); // end of c: dispEq\n            writer.writeEndElement(); // end of c: trendline\n        }\n    };\n    WordExport.prototype.chartTrendLineType = function (type) {\n        var trendlineType = '';\n        switch (type) {\n            case 'Linear':\n                trendlineType = 'linear';\n                break;\n            case 'Exponential':\n                trendlineType = 'exp';\n                break;\n        }\n        return trendlineType;\n    };\n    WordExport.prototype.parseChartDataLabels = function (writer, dataLabels) {\n        var position = '';\n        var dataLabelPosition = dataLabels[positionProperty[this.keywordIndex]];\n        var isLegendKey = 0;\n        var isBubbleSize = 0;\n        var isCategoryName = 0;\n        var isSeriesName = 0;\n        var isValue = 0;\n        var isPercentage = 0;\n        var isLeaderLines = 0;\n        switch (dataLabelPosition) {\n            case 'Center':\n                position = 'ctr';\n                break;\n            case 'Left':\n                position = 'l';\n                break;\n            case 'Right':\n                position = 'r';\n                break;\n            case 'Outside':\n                position = 'outEnd';\n                break;\n            case 'BestFit':\n                position = 'bestFit';\n                break;\n            case 'Bottom':\n            case 'OutsideBase':\n                position = 'inBase';\n                break;\n            case 'Inside':\n                position = 'inEnd';\n                break;\n            case 'Above':\n                position = 't';\n                break;\n            case 'Below':\n                position = 'b';\n                break;\n            default:\n                position = 'Automatic';\n                break;\n        }\n        writer.writeStartElement('c', 'dLbls', this.chartNamespace);\n        this.serializeDefaultShapeProperties(writer);\n        writer.writeStartElement('c', 'txPr', this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeEndElement(); //end of a:bodyPr.\n        writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n        writer.writeEndElement(); //end of a:lstStyle.\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        this.serializeChartTitleFont(writer, dataLabels[fontSizeProperty[this.keywordIndex]], dataLabels[fontColorProperty[this.keywordIndex]], dataLabels[fontNameProperty[this.keywordIndex]]);\n        writer.writeEndElement(); //end of a:p.\n        writer.writeEndElement(); //end of c:txPr.\n        if (HelperMethods.parseBoolValue(dataLabels[isLegendKeyProperty[this.keywordIndex]])) {\n            isLegendKey = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isBubbleSizeProperty[this.keywordIndex]])) {\n            isBubbleSize = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isCategoryNameProperty[this.keywordIndex]])) {\n            isCategoryName = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isSeriesNameProperty[this.keywordIndex]])) {\n            isSeriesName = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isValueProperty[this.keywordIndex]])) {\n            isValue = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isPercentageProperty[this.keywordIndex]])) {\n            isPercentage = 1;\n        }\n        else if (HelperMethods.parseBoolValue(dataLabels[isLeaderLinesProperty[this.keywordIndex]])) {\n            isLeaderLines = 1;\n        }\n        if (position !== 'Automatic') {\n            writer.writeStartElement('c', 'dLblPos', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, position);\n            writer.writeEndElement(); // end of dLblPos\n        }\n        writer.writeStartElement('c', 'showLegendKey', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isLegendKey.toString());\n        writer.writeEndElement(); // end of showLegendKey\n        writer.writeStartElement('c', 'showVal', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isValue.toString());\n        writer.writeEndElement(); // end of showVal\n        writer.writeStartElement('c', 'showCatName', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isCategoryName.toString());\n        writer.writeEndElement(); // end of showCatName\n        writer.writeStartElement('c', 'showSerName', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isSeriesName.toString());\n        writer.writeEndElement(); // end of showSerName\n        writer.writeStartElement('c', 'showPercent', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isPercentage.toString());\n        writer.writeEndElement(); // end of showPercent\n        writer.writeStartElement('c', 'showBubbleSize', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isBubbleSize.toString());\n        writer.writeEndElement(); // end of showBubbleSize\n        writer.writeStartElement('c', 'showLeaderLines', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, isLeaderLines.toString());\n        writer.writeEndElement(); // end of showBubbleSize\n        writer.writeEndElement(); // end of dLbls\n    };\n    WordExport.prototype.serializeShapeProperties = function (writer, color, isLine) {\n        var chartType = this.chart[chartTypeProperty[this.keywordIndex]];\n        var isScatterType = (chartType === 'Scatter_Markers' || chartType === 'Bubble');\n        // serialize shape\n        writer.writeStartElement('c', 'spPr', this.chartNamespace);\n        if (!isScatterType || isLine) {\n            writer.writeStartElement('a', 'ln', this.aNamespace);\n            writer.writeAttributeString(undefined, 'w', undefined, '9525');\n            this.serializeChartSolidFill(writer, color, false);\n            writer.writeStartElement('a', 'prstDash', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, 'solid');\n            writer.writeEndElement(); // end of prstDash\n            writer.writeStartElement('a', 'round', this.aNamespace);\n            writer.writeEndElement(); // end tag of round\n            writer.writeEndElement(); // end tag of ln\n        }\n        else if (chartType === 'Scatter_Markers') {\n            this.serializeChartSolidFill(writer, color, false);\n            this.serializeDefaultLineProperties(writer);\n        }\n        else if (chartType === 'Bubble') {\n            this.serializeChartSolidFill(writer, color, true);\n            this.serializeDefaultLineProperties(writer);\n        }\n        writer.writeStartElement('a', 'effectLst', this.aNamespace);\n        writer.writeEndElement(); // end of a: effectLst\n        writer.writeEndElement(); // end tag of spPr\n    };\n    WordExport.prototype.serializeDefaultShapeProperties = function (writer) {\n        writer.writeStartElement('c', 'spPr', this.chartNamespace);\n        writer.writeStartElement('a', 'noFill', this.aNamespace);\n        writer.writeEndElement(); // end of a: noFill\n        this.serializeDefaultLineProperties(writer);\n        writer.writeStartElement('a', 'effectLst', this.aNamespace);\n        writer.writeEndElement(); // end of a: effectLst\n        writer.writeEndElement(); // end of c: spPr\n    };\n    WordExport.prototype.serializeDefaultLineProperties = function (writer) {\n        writer.writeStartElement('a', 'ln', this.aNamespace);\n        writer.writeStartElement('a', 'noFill', this.aNamespace);\n        writer.writeEndElement(); // end of a: noFill\n        writer.writeStartElement('a', 'round', this.aNamespace);\n        writer.writeEndElement(); // end of a: round\n        writer.writeEndElement(); // end of a: ln\n    };\n    WordExport.prototype.serializeTextProperties = function (writer, title, chartTitleName) {\n        var fill = title[dataFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]];\n        var fontSize = title[fontSizeProperty[this.keywordIndex]] * 100;\n        writer.writeStartElement('c', 'tx', this.chartNamespace);\n        writer.writeStartElement('c', 'rich', this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeAttributeString(undefined, 'rot', undefined, '0');\n        writer.writeAttributeString(undefined, 'vert', undefined, 'horz');\n        writer.writeEndElement(); // end of a: bodyPr\n        writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n        writer.writeEndElement(); // end of a:lstStyle\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n        writer.writeStartElement('a', 'r', this.aNamespace);\n        writer.writeStartElement('a', 'rPr', this.aNamespace);\n        writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n        writer.writeAttributeString(undefined, 'b', undefined, '0');\n        writer.writeAttributeString(undefined, 'sz', undefined, fontSize.toString());\n        writer.writeAttributeString(undefined, 'baseline', undefined, '0');\n        this.serializeChartSolidFill(writer, fill, false);\n        this.serializeFont(writer, title[fontNameProperty[this.keywordIndex]]);\n        writer.writeEndElement(); // end of a: rPr\n        writer.writeStartElement('a', 't', this.aNamespace);\n        writer.writeString(chartTitleName);\n        writer.writeEndElement(); // end of a:t\n        writer.writeEndElement(); // end of a: r\n        writer.writeEndElement(); // end of a: p\n        writer.writeEndElement(); // end of c: rich\n        writer.writeEndElement(); // end of c: tx\n        writer.writeStartElement('c', 'layout', this.chartNamespace);\n        // writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: layout\n        writer.writeStartElement('c', 'overlay', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, '0');\n        writer.writeEndElement(); // end of c: overlay\n        this.serializeDefaultShapeProperties(writer);\n        writer.writeStartElement('c', 'txPr', this.chartNamespace);\n        writer.writeStartElement('a', 'bodyPr', this.aNamespace);\n        writer.writeEndElement(); // end of a: bodyPr\n        writer.writeStartElement('a', 'lstStyle', this.aNamespace);\n        writer.writeEndElement(); // end of a: lstStyle\n        writer.writeStartElement('a', 'p', this.aNamespace);\n        writer.writeEndElement(); // end of a: p\n        this.serializeChartTitleFont(writer, title[fontSizeProperty[this.keywordIndex]], fill, title[fontNameProperty[this.keywordIndex]]);\n        writer.writeEndElement(); // end of c: txPr\n    };\n    WordExport.prototype.serializeChartTitleFont = function (writer, fontSize, fill, fontName) {\n        var fontSizeCalc = fontSize * 100;\n        writer.writeStartElement('a', 'pPr', this.aNamespace);\n        writer.writeStartElement('a', 'defRPr', this.aNamespace);\n        writer.writeAttributeString(undefined, 'lang', undefined, 'en-US');\n        writer.writeAttributeString(undefined, 'b', undefined, '0');\n        writer.writeAttributeString(undefined, 'sz', undefined, fontSizeCalc.toString());\n        writer.writeAttributeString(undefined, 'baseline', undefined, '0');\n        this.serializeChartSolidFill(writer, fill, false);\n        this.serializeFont(writer, fontName);\n        writer.writeEndElement(); // end of defRPr\n        writer.writeEndElement(); // end of a: pPr\n    };\n    WordExport.prototype.serializeChartSolidFill = function (writer, fill, isSeriesFill) {\n        writer.writeStartElement('a', 'solidFill', this.aNamespace);\n        writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n        if (fill !== '000000') {\n            writer.writeAttributeString(undefined, 'val', undefined, fill);\n        }\n        else {\n            writer.writeAttributeString(undefined, 'val', undefined, '595959');\n        }\n        if (this.chart[chartTypeProperty[this.keywordIndex]] === 'Bubble' && isSeriesFill) {\n            writer.writeStartElement('a', 'alpha', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '75000');\n            writer.writeEndElement(); // end of alpha\n        }\n        writer.writeEndElement(); // end of srgbClr\n        writer.writeEndElement(); // end of solidFill\n    };\n    WordExport.prototype.serializeFont = function (writer, fontName) {\n        writer.writeStartElement('a', 'latin', this.aNamespace);\n        writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n        writer.writeEndElement(); // end of a:latin\n        writer.writeStartElement('a', 'ea', this.aNamespace);\n        writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n        writer.writeEndElement(); // end of a:ea\n        writer.writeStartElement('a', 'cs', this.aNamespace);\n        writer.writeAttributeString(undefined, 'typeface', undefined, fontName);\n        writer.writeEndElement(); // end of a:cs\n    };\n    WordExport.prototype.parseChartSeriesColor = function (writer, dataPoints, chartType) {\n        for (var i = 0; i < dataPoints.length; i++) {\n            var data = dataPoints[i];\n            writer.writeStartElement('c', 'spPr', this.chartNamespace);\n            if (chartType === 'lineChart') {\n                writer.writeStartElement('a', 'ln', this.aNamespace);\n                writer.writeAttributeString(undefined, 'w', undefined, '28575');\n                writer.writeAttributeString(undefined, 'cap', undefined, 'rnd');\n            }\n            if (chartType !== 'lineChart') {\n                this.serializeChartSolidFill(writer, this.getColor(data[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]]), true);\n            }\n            else {\n                this.serializeChartSolidFill(writer, data[lineProperty[this.keywordIndex]][colorProperty[this.keywordIndex]], true);\n            }\n            if (chartType !== 'lineChart') {\n                writer.writeStartElement('a', 'ln', this.aNamespace);\n                writer.writeStartElement('a', 'noFill', this.aNamespace);\n                writer.writeEndElement(); // end of a: noFill\n            }\n            writer.writeStartElement('a', 'round', this.aNamespace);\n            writer.writeEndElement(); // end of a: round\n            writer.writeEndElement(); // end of a: ln\n            writer.writeStartElement('a', 'effectLst', this.aNamespace);\n            writer.writeEndElement(); // end of a: effectLst\n            writer.writeEndElement(); // end of c: spPr\n            if (chartType === 'lineChart') {\n                var symbolType = 'none';\n                var size = 0;\n                if (this.chart[chartSeriesProperty[this.keywordIndex]][i].hasOwnProperty(seriesFormatProperty[this.keywordIndex])) {\n                    symbolType = this.chart[chartSeriesProperty[this.keywordIndex]][i][seriesFormatProperty[this.keywordIndex]][markerStyleProperty[this.keywordIndex]];\n                    size = this.chart[chartSeriesProperty[this.keywordIndex]][i][seriesFormatProperty[this.keywordIndex]][markerSizeProperty[this.keywordIndex]];\n                }\n                writer.writeStartElement('c', 'marker', this.chartNamespace);\n                writer.writeStartElement('c', 'symbol', this.chartNamespace);\n                writer.writeAttributeString(undefined, 'val', undefined, symbolType.toLowerCase());\n                writer.writeEndElement(); // end of a: symbol\n                if (this.chart[chartSeriesProperty[this.keywordIndex]][i].hasOwnProperty(seriesFormatProperty[this.keywordIndex])) {\n                    writer.writeStartElement('c', 'size', this.chartNamespace);\n                    writer.writeAttributeString(undefined, 'val', undefined, size.toString());\n                    writer.writeEndElement(); // end of a: size\n                }\n                writer.writeEndElement(); // end of a: marker\n            }\n        }\n    };\n    WordExport.prototype.parseChartDataPoint = function (writer, series) {\n        // data point\n        var dataPoints = series[dataPointsProperty[this.keywordIndex]];\n        var points = [];\n        for (var j = 0; j < dataPoints.length; j++) {\n            points.push(dataPoints[j]);\n            writer.writeStartElement('c', 'dPt', this.chartNamespace);\n            writer.writeStartElement('c', 'idx', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, j.toString());\n            writer.writeEndElement(); // end of c:idx\n            writer.writeStartElement('c', 'bubble3D', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '0');\n            writer.writeEndElement(); // end of c:bubble3D\n            this.parseChartSeriesColor(writer, points, this.chart[chartTypeProperty[this.keywordIndex]]);\n            writer.writeEndElement(); // end of c:dPt\n            points = [];\n        }\n    };\n    // chart data value\n    WordExport.prototype.serializeChartCategory = function (writer, chart, cacheType) {\n        var chartCategory = chart[chartCategoryProperty[this.keywordIndex]];\n        var chartCategoryCount = chartCategory.length;\n        writer.writeStartElement('c', 'f', this.chartNamespace);\n        writer.writeString('Sheet1!$A$2:$A$' + (chartCategoryCount + 1).toString());\n        writer.writeEndElement(); // end of f\n        writer.writeStartElement('c', cacheType, this.chartNamespace);\n        if (cacheType === 'numCache') {\n            writer.writeStartElement('c', 'formatCode', this.chartNamespace);\n            writer.writeString('General');\n            writer.writeEndElement(); // end of formatCode\n        }\n        writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, chartCategoryCount.toString());\n        writer.writeEndElement(); // end of ptCount\n        for (var i = 0; i < chartCategory.length; i++) {\n            var category = chartCategory[i];\n            writer.writeStartElement('c', 'pt', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'idx', undefined, i.toString());\n            writer.writeStartElement('c', 'v', this.chartNamespace);\n            if (category[categoryXNameProperty[this.keywordIndex]] !== '') {\n                writer.writeString(category[categoryXNameProperty[this.keywordIndex]]);\n            }\n            writer.writeEndElement(); // end of v\n            writer.writeEndElement(); // end of pt\n        }\n        writer.writeEndElement(); // end of cacheType\n    };\n    // chart value\n    WordExport.prototype.serializeChartValue = function (writer, valueSheet, chartType) {\n        var isScatterType = (chartType === 'scatterChart' || chartType === 'bubbleChart');\n        var valueType = 'val';\n        if (isScatterType) {\n            valueType = 'yVal';\n        }\n        this.serializeChartYValue(writer, valueType, valueSheet);\n        if (chartType === 'bubbleChart') {\n            valueType = 'bubbleSize';\n            valueSheet = 'Sheet1!$C$2:$C$';\n            this.serializeChartYValue(writer, valueType, valueSheet);\n        }\n        if (chartType === 'lineChart' || chartType === 'scatterChart') {\n            writer.writeStartElement('c', 'smooth', this.chartNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, '0');\n            writer.writeEndElement(); // end of smooth\n        }\n    };\n    WordExport.prototype.serializeChartYValue = function (writer, valueType, valueSheet) {\n        var chart = this.chart;\n        var chartCategory = chart[chartCategoryProperty[this.keywordIndex]];\n        var chartCategoryCount = chartCategory.length;\n        writer.writeStartElement('c', valueType, this.chartNamespace);\n        writer.writeStartElement('c', 'numRef', this.chartNamespace);\n        writer.writeStartElement('c', 'f', this.chartNamespace);\n        writer.writeString(valueSheet + (chartCategoryCount + 1).toString());\n        writer.writeEndElement(); // end of f\n        writer.writeStartElement('c', 'numCache', this.chartNamespace);\n        writer.writeStartElement('c', 'formatCode', this.chartNamespace);\n        writer.writeString('General');\n        writer.writeEndElement(); // end of formatCode\n        writer.writeStartElement('c', 'ptCount', this.chartNamespace);\n        writer.writeAttributeString(undefined, 'val', undefined, chartCategoryCount.toString());\n        writer.writeEndElement(); // end of ptCount\n        for (var j = 0; j < chartCategoryCount; j++) {\n            var category = chartCategory[j];\n            for (var k = 0; k < category[chartDataProperty[this.keywordIndex]].length; k++) {\n                if (k === this.seriesCount) {\n                    var chartData = category[chartDataProperty[this.keywordIndex]][this.seriesCount];\n                    writer.writeStartElement('c', 'pt', this.chartNamespace);\n                    writer.writeAttributeString(undefined, 'idx', undefined, j.toString());\n                    writer.writeStartElement('c', 'v', this.chartNamespace);\n                    if (valueType !== 'bubbleSize') {\n                        writer.writeString(chartData[yValueProperty[this.keywordIndex]].toString());\n                    }\n                    else {\n                        writer.writeString(chartData[sizeProperty[this.keywordIndex]].toString());\n                    }\n                    writer.writeEndElement(); // end of v\n                    writer.writeEndElement(); // end of pt\n                }\n            }\n        }\n        writer.writeEndElement(); // end of numCache\n        writer.writeEndElement(); // end of numRef\n        writer.writeEndElement(); // end of val\n    };\n    // chart type\n    WordExport.prototype.chartType = function (chart) {\n        var chartType = chart[chartTypeProperty[this.keywordIndex]];\n        switch (chartType) {\n            case 'Pie':\n                chartType = 'pieChart';\n                break;\n            case 'Doughnut':\n                chartType = 'doughnutChart';\n                break;\n            case 'Scatter_Markers':\n                chartType = 'scatterChart';\n                break;\n            case 'Bubble':\n                chartType = 'bubbleChart';\n                break;\n        }\n        if (chartType === 'Area' || chartType === 'Area_Stacked' || chartType === 'Area_Stacked_100') {\n            chartType = 'areaChart';\n        }\n        if (chartType === 'Bar_Stacked_100' || chartType === 'Bar_Stacked' || chartType === 'Bar_Clustered' ||\n            chartType === 'Column_Clustered' || chartType === 'Column_Stacked' || chartType === 'Column_Stacked_100') {\n            chartType = 'barChart';\n        }\n        if (chartType === 'Line' || chartType === 'Line_Markers' || chartType === 'Line_Markers_Stacked' || chartType === 'Line_Stacked'\n            || chartType === 'Line_Markers_Stacked_100' || chartType === 'Line_Stacked_100') {\n            chartType = 'lineChart';\n        }\n        return chartType;\n    };\n    // chart group\n    WordExport.prototype.chartGrouping = function (type) {\n        var grouping = 'standard';\n        if (type === 'Bar_Stacked' || type === 'Column_Stacked' || type === 'Area_Stacked'\n            || type === 'Line_Stacked' || type === 'Line_Markers_Stacked') {\n            grouping = 'stacked';\n        }\n        else if (type === 'Bar_Stacked_100' || type === 'Column_Stacked_100' ||\n            type === 'Area_Stacked_100' || type === 'Line_Stacked_100' ||\n            type === 'Line_Markers_Stacked_100') {\n            grouping = 'percentStacked';\n        }\n        else if (type === 'Bar_Clustered' || type === 'Column_Clustered') {\n            grouping = 'clustered';\n        }\n        return grouping;\n    };\n    // chart legend position\n    WordExport.prototype.chartLegendPosition = function (chart) {\n        var legendPosition = chart[positionProperty[this.keywordIndex]];\n        switch (legendPosition) {\n            case 'Top':\n                legendPosition = 't';\n                break;\n            case 'Bottom':\n                legendPosition = 'b';\n                break;\n            case 'Left':\n                legendPosition = 'l';\n                break;\n            case 'Right':\n                legendPosition = 'r';\n                break;\n            case 'Corner':\n                legendPosition = 'tr';\n                break;\n            default:\n                legendPosition = 'b';\n                break;\n        }\n        return legendPosition;\n    };\n    // update the chard id\n    WordExport.prototype.updatechartId = function (chart) {\n        var id = '';\n        if (id === '') {\n            id = this.addChartRelation(this.documentCharts, chart);\n        }\n        return id;\n    };\n    // adds the chart relation.\n    WordExport.prototype.addChartRelation = function (chartCollection, chart) {\n        var relationId = '';\n        relationId = this.getNextRelationShipID();\n        chartCollection.add(relationId, chart);\n        return relationId;\n    };\n    /**\n     * @private\n     */\n    WordExport.prototype.startsWith = function (sourceString, startString) {\n        return startString.length > 0 && sourceString.substring(0, startString.length) === startString;\n    };\n    WordExport.prototype.serializeShapeDrawingGraphics = function (writer, shape) {\n        var val = shape[autoShapeTypeProperty[this.keywordIndex]];\n        var id = shape[shapeIdProperty[this.keywordIndex]];\n        this.serializeShapeWrapStyle(writer, shape);\n        writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n        writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n        writer.writeAttributeString(undefined, 'name', undefined, shape[nameProperty[this.keywordIndex]]);\n        writer.writeAttributeString(undefined, 'title', undefined, shape[titleProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'graphic', this.aNamespace);\n        writer.writeStartElement('a', 'graphicData', this.aNamespace);\n        writer.writeAttributeString(undefined, 'uri', undefined, this.wpShapeNamespace);\n        writer.writeStartElement('wps', 'wsp', this.wpShapeNamespace);\n        writer.writeStartElement('wps', 'cNvCnPr', this.wpShapeNamespace);\n        writer.writeStartElement('a', 'cxnSpLocks', this.aNamespace);\n        writer.writeAttributeString(undefined, 'noChangeShapeType', undefined, '1');\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeStartElement('wps', 'spPr', this.wpShapeNamespace);\n        writer.writeAttributeString(undefined, 'bwMode', undefined, 'auto');\n        writer.writeStartElement('a', 'xfrm', this.aNamespace);\n        writer.writeStartElement('a', 'off', this.aNamespace);\n        writer.writeAttributeString(undefined, 'x', undefined, '0');\n        writer.writeAttributeString(undefined, 'y', undefined, '0');\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'ext', this.aNamespace);\n        var cx = Math.round((shape[widthProperty[this.keywordIndex]] * this.emusPerPoint));\n        writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n        var cy = Math.round((shape[heightProperty[this.keywordIndex]] * this.emusPerPoint));\n        writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'prstGeom', this.aNamespace);\n        if (val === (this.keywordIndex == 1 ? 3 : 'StraightConnector')) {\n            writer.writeAttributeString(undefined, 'prst', undefined, 'straightConnector1');\n        }\n        else if (val === (this.keywordIndex == 1 ? 2 : 'RoundedRectangle')) {\n            writer.writeAttributeString(undefined, 'prst', undefined, 'roundRect');\n        }\n        else {\n            writer.writeAttributeString(undefined, 'prst', undefined, 'rect');\n        }\n        writer.writeStartElement('a', 'avLst', this.aNamespace);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        if (shape[fillFormatProperty[this.keywordIndex]] && shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] && HelperMethods.parseBoolValue(shape[fillFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]])) {\n            writer.writeStartElement('a', 'solidFill', this.aNamespace);\n            writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, this.getColor(shape[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n        else {\n            writer.writeStartElement('a', 'noFill', this.aNamespace);\n            writer.writeEndElement();\n        }\n        var lineWeight = shape[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] ? shape[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] * this.emusPerPoint : this.emusPerPoint;\n        writer.writeStartElement('a', 'ln', this.aNamespace);\n        writer.writeAttributeString(undefined, 'w', undefined, Math.round(lineWeight).toString());\n        if ((!isNullOrUndefined(shape[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]]) && shape[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 3 : 'None'))\n            && HelperMethods.parseBoolValue(shape[lineFormatProperty[this.keywordIndex]][lineProperty[this.keywordIndex]])) {\n            writer.writeStartElement('a', 'solidFill', this.aNamespace);\n            writer.writeStartElement('a', 'srgbClr', this.aNamespace);\n            writer.writeAttributeString(undefined, 'val', undefined, this.getColor(shape[lineFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n            writer.writeEndElement();\n            writer.writeStartElement('a', 'round', this.aNamespace);\n            writer.writeEndElement();\n            writer.writeStartElement('a', 'headEnd', this.aNamespace);\n            writer.writeEndElement();\n            writer.writeStartElement('a', 'tailEnd', this.aNamespace);\n            writer.writeEndElement();\n        }\n        else {\n            writer.writeStartElement('a', 'noFill', this.aNamespace);\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n        writer.writeEndElement();\n        if (val === (this.keywordIndex == 1 ? 1 : 'Rectangle') || val === (this.keywordIndex == 1 ? 2 : 'RoundedRectangle')) {\n            writer.writeStartElement('wps', 'txbx', this.wpShapeNamespace);\n            writer.writeStartElement(undefined, 'txbxContent', this.wNamespace);\n            this.serializeBodyItems(writer, shape[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]], true);\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n        writer.writeStartElement('wps', 'bodyPr', this.wpShapeNamespace);\n        if (!isNullOrUndefined(shape[textFrameProperty[this.keywordIndex]])) {\n            var margin = void 0;\n            if (shape[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] >= 0) {\n                margin = Math.round(shape[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n                writer.writeAttributeString(undefined, 'lIns', undefined, margin);\n            }\n            if (shape[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] >= 0) {\n                margin = Math.round(shape[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n                writer.writeAttributeString(undefined, 'tIns', undefined, margin);\n            }\n            if (shape[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] >= 0) {\n                margin = Math.round(shape[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n                writer.writeAttributeString(undefined, 'rIns', undefined, margin);\n            }\n            if (shape[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] >= 0) {\n                margin = Math.round(shape[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] * this.emusPerPoint).toString();\n                writer.writeAttributeString(undefined, 'bIns', undefined, margin);\n            }\n            if (shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]]) {\n                var vert = void 0;\n                if (this.keywordIndex == 1) {\n                    vert = HelperMethods.getTextVerticalAlignment(shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]]).toString().toLowerCase();\n                }\n                else {\n                    vert = shape[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]].toString().toLowerCase();\n                }\n                writer.writeAttributeString(undefined, 'anchor', undefined, this.getTextVerticalAlignmentProperty(vert));\n            }\n            writer.writeAttributeString(undefined, 'anchorCtr', undefined, '0');\n        }\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    WordExport.prototype.getTextVerticalAlignmentProperty = function (vert) {\n        switch (vert) {\n            case 'top':\n                return 't';\n            case 'middle':\n            case 'center':\n                return 'ctr';\n            case 'bottom':\n                return 'b';\n            default:\n                return vert;\n        }\n    };\n    WordExport.prototype.serializeShapeWrapStyle = function (writer, shape) {\n        var wrappingStyle = this.keywordIndex == 1 ? this.getTextWrappingStyle(shape[textWrappingStyleProperty[this.keywordIndex]]) : shape[textWrappingStyleProperty[this.keywordIndex]];\n        if (wrappingStyle !== 'Inline') {\n            var textWrappingStyle = 'wrapNone';\n            if (wrappingStyle && wrappingStyle !== 'InFrontOfText' && wrappingStyle !== 'Behind') {\n                textWrappingStyle = 'wrap' + wrappingStyle;\n                if (wrappingStyle === 'Tight') {\n                    textWrappingStyle = 'wrap' + 'Square';\n                }\n            }\n            writer.writeStartElement('wp', textWrappingStyle, this.wpNamespace);\n            if (wrappingStyle && wrappingStyle !== 'InFrontOfText' && wrappingStyle !== 'Behind' &&\n                !isNullOrUndefined(shape[textWrappingTypeProperty[this.keywordIndex]])) {\n                var wrapType = this.keywordIndex == 1 ? this.getTextWrappingType(shape[textWrappingTypeProperty[this.keywordIndex]]) : shape[textWrappingTypeProperty[this.keywordIndex]] === 'Both' ? 'bothSides' : shape[textWrappingTypeProperty[this.keywordIndex]].toLowerCase();\n                writer.writeAttributeString(undefined, 'wrapText', undefined, wrapType);\n            }\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the graphics element for pictures.\n    WordExport.prototype.serializeDrawingGraphics = function (writer, picture) {\n        var id = '';\n        var format;\n        var imageStringInfo = this.getBase64ImageString(picture);\n        var imageString = imageStringInfo.imageString;\n        if (HelperMethods.parseBoolValue(picture[isMetaFileProperty[this.keywordIndex]])) {\n            format = HelperMethods.formatClippedString(imageStringInfo.metaFileImageString).extension;\n            if (format !== '.svg') {\n                imageString = imageStringInfo.metaFileImageString;\n            }\n        }\n        id = this.updateShapeId(picture, false);\n        // picture.ShapeId = this.getNextDocPrID();\n        // Processing picture\n        writer.writeStartElement('wp', 'docPr', this.wpNamespace);\n        writer.writeAttributeString(undefined, 'id', undefined, (this.mDocPrID++).toString());\n        if (!isNullOrUndefined(picture[alternativeTextProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'descr', undefined, picture[alternativeTextProperty[this.keywordIndex]]);\n        }\n        writer.writeAttributeString(undefined, 'name', undefined, !isNullOrUndefined(picture[nameProperty[this.keywordIndex]]) ? picture[nameProperty[this.keywordIndex]] : '');\n        if (!isNullOrUndefined(picture[titleProperty[this.keywordIndex]]))\n            writer.writeAttributeString(undefined, 'title', undefined, picture[titleProperty[this.keywordIndex]]);\n        // else\n        // writer.writeAttributeString(undefined, 'title', undefined, '');\n        // if (!picture.Visible)\n        //     m_writer.WriteAttributeString('hidden', '1');\n        // SerializePictureHyperlink(picture);\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'graphic', this.aNamespace);\n        writer.writeStartElement('a', 'graphicData', this.aNamespace);\n        writer.writeAttributeString(undefined, 'uri', undefined, this.pictureNamespace);\n        writer.writeStartElement('pic', 'pic', this.pictureNamespace);\n        writer.writeStartElement('pic', 'nvPicPr', this.pictureNamespace);\n        writer.writeStartElement('pic', 'cNvPr', this.pictureNamespace);\n        writer.writeAttributeString(undefined, 'id', undefined, '0');\n        writer.writeAttributeString(undefined, 'name', undefined, '');\n        writer.writeAttributeString(undefined, 'descr', undefined, '');\n        writer.writeEndElement();\n        writer.writeStartElement('pic', 'cNvPicPr', this.pictureNamespace);\n        writer.writeStartElement('a', 'picLocks', this.aNamespace);\n        writer.writeAttributeString(undefined, 'noChangeAspect', undefined, '1');\n        writer.writeAttributeString(undefined, 'noChangeArrowheads', undefined, '1');\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeStartElement('pic', 'blipFill', this.pictureNamespace);\n        writer.writeStartElement('a', 'blip', this.aNamespace);\n        if (this.startsWith(imageString, 'data:image')) {\n            writer.writeAttributeString('r', 'embed', this.rNamespace, id);\n        }\n        else {\n            if (this.documentImages.containsKey(id)) {\n                //Remove the image document images collection for this particular key\n                //If the picture image data has href means MS Word contains the image in media folder as well as \n                //it is having external relationship id\n                // if (!this.startsWith(picture.imageString, 'data:image')) {\n                this.documentImages.remove(id);\n                this.externalImages.add(id, imageString);\n                writer.writeAttributeString(undefined, 'link', this.rNamespace, id);\n                if (!isNullOrUndefined(imageStringInfo.metaFileImageString) && (this.startsWith(imageString, \"https://\") || this.startsWith(imageString, \"http://\") || this.startsWith(imageString, \"file://\"))) {\n                    var newRId = this.getNextRelationShipID();\n                    this.documentImages.add(newRId, imageStringInfo.metaFileImageString);\n                    writer.writeAttributeString('r', 'embed', this.rNamespace, newRId);\n                }\n            }\n        }\n        if (format === '.svg') {\n            this.serializeBlipExtensions(writer, picture);\n        }\n        //End Element Blip\n        writer.writeEndElement();\n        if (!isNullOrUndefined(picture[topProperty[this.keywordIndex]]) && picture[topProperty[this.keywordIndex]] !== 0 ||\n            !isNullOrUndefined(picture[bottomProperty[this.keywordIndex]]) && picture[bottomProperty[this.keywordIndex]] !== 0 ||\n            !isNullOrUndefined(picture[leftProperty[this.keywordIndex]]) && picture[leftProperty[this.keywordIndex]] !== 0 ||\n            !isNullOrUndefined(picture[rightProperty[this.keywordIndex]]) && picture[rightProperty[this.keywordIndex]] !== 0) {\n            writer.writeStartElement('a', 'srcRect', this.aNamespace);\n            var l = Math.round(picture[leftProperty[this.keywordIndex]] * 1000);\n            writer.writeAttributeString(undefined, 'l', undefined, l.toString());\n            var t = Math.round(picture[topProperty[this.keywordIndex]] * 1000);\n            writer.writeAttributeString(undefined, 't', undefined, t.toString());\n            var r = Math.round(picture[rightProperty[this.keywordIndex]] * 1000);\n            writer.writeAttributeString(undefined, 'r', undefined, r.toString());\n            var b = Math.round(picture[bottomProperty[this.keywordIndex]] * 1000);\n            writer.writeAttributeString(undefined, 'b', undefined, b.toString());\n            writer.writeEndElement();\n        }\n        writer.writeStartElement('a', 'stretch', this.aNamespace);\n        writer.writeStartElement('a', 'fillRect', this.aNamespace);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeStartElement('pic', 'spPr', this.pictureNamespace);\n        writer.writeAttributeString(undefined, 'bwMode', undefined, 'auto');\n        writer.writeStartElement('a', 'xfrm', this.aNamespace);\n        // if (picture.Rotation !== 0)\n        //     m_writer.WriteAttributeString('rot', picture.Rotation.ToString());\n        writer.writeStartElement('a', 'off', this.aNamespace);\n        writer.writeAttributeString(undefined, 'x', undefined, '0');\n        writer.writeAttributeString(undefined, 'y', undefined, '0');\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'ext', this.aNamespace);\n        var cx = Math.round((picture[widthProperty[this.keywordIndex]] * this.emusPerPoint));\n        writer.writeAttributeString(undefined, 'cx', undefined, cx.toString());\n        var cy = Math.round((picture[heightProperty[this.keywordIndex]] * this.emusPerPoint));\n        writer.writeAttributeString(undefined, 'cy', undefined, cy.toString());\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeStartElement('a', 'prstGeom', this.aNamespace);\n        writer.writeAttributeString(undefined, 'prst', undefined, 'rect');\n        writer.writeStartElement('a', 'avLst', this.aNamespace);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        //When the picture border has been added next to effect list\n        //if not, Picture border has not been preserved\n        // if (picture.HasBorder)\n        // {\n        //     if (picture.TextWrappingStyle === TextWrappingStyle.Inline && picture.IsShape)\n        //         SerializeInlineShapeLine(picture.PictureShape);\n        //     else\n        //         SerializeShapeLine(picture.PictureShape);\n        // }\n        // if (picture.DocxProps.length > 0)\n        //     SerializeDocxProps(picture.DocxProps, 'effectLst');\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeBlipExtensions = function (writer, picture) {\n        writer.writeStartElement('a', 'extLst', this.aNamespace);\n        writer.writeStartElement('a', \"ext\", this.aNamespace);\n        writer.writeAttributeString(undefined, 'uri', undefined, '{96DAC541-7B7A-43D3-8B79-37D633B846F1}');\n        writer.writeStartElement(\"asvg\", \"svgBlip\", this.svgNamespace);\n        var id = this.updateShapeId(picture, true);\n        writer.writeAttributeString(\"r\", \"embed\", undefined, id);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        writer.writeEndElement();\n    };\n    /// Update the shape id.\n    WordExport.prototype.updateShapeId = function (picture, isSvgData) {\n        var id = '';\n        var tOwner = this.paragraph;\n        // Adding picture byte data to the corresponding picture collection \n        // depending on its owner subdocument\n        if (this.headerFooter) {\n            id = this.updateHFImageRels(this.headerFooter, picture, isSvgData);\n        }\n        else {\n            if (id === '') {\n                if (tOwner.hasOwnProperty(sectionFormatProperty[this.keywordIndex]) || tOwner.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                    id = this.addImageRelation(!isSvgData ? this.documentImages : this.svgImages, picture, isSvgData);\n                    // if (owner is WFootnote)\n                    // {\n                    //     if ((owner as WFootnote).FootnoteType === FootnoteType.Footnote)\n                    //         id = AddImageRelation(FootnoteImages, picture.ImageRecord);\n                    //     else\n                    //         id = AddImageRelation(EndnoteImages, picture.ImageRecord);\n                    // }\n                    // if (owner is WComment)\n                    //     id = AddImageRelation(CommentImages, picture.ImageRecord);\n                }\n            }\n        }\n        return id;\n    };\n    // Adds the image relation.\n    WordExport.prototype.addImageRelation = function (imageCollection, image, isSvgData) {\n        var relationId = '';\n        var index = isSvgData ? this.svgImageRelationIds.keys.indexOf(parseInt(image[imageStringProperty[this.keywordIndex]])) : this.imageRelationIds.keys.indexOf(parseInt(image[imageStringProperty[this.keywordIndex]]));\n        if (index < 0 || this.isHeaderFooter) {\n            relationId = this.getNextRelationShipID();\n            isSvgData ? this.svgImageRelationIds.add(parseInt(image[imageStringProperty[this.keywordIndex]]), relationId) : this.imageRelationIds.add(parseInt(image[imageStringProperty[this.keywordIndex]]), relationId);\n        }\n        else {\n            relationId = isSvgData ? this.svgImageRelationIds.get(parseInt(image[imageStringProperty[this.keywordIndex]])) : this.imageRelationIds.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n        }\n        imageCollection.add(relationId, image);\n        return relationId;\n    };\n    // Update the HeaderFooter image relations.\n    WordExport.prototype.updateHFImageRels = function (hf, image, isSvgImage) {\n        var id = '';\n        // UpdateImages(image);\n        var headerId = '';\n        var types = this.headersFooters.keys;\n        for (var i = 0; i < types.length; i++) {\n            var hfColl = this.headersFooters.get(types[i]);\n            var hfKeys = hfColl.keys;\n            for (var j = 0; j < hfKeys.length; j++) {\n                if (hfColl.get(hfKeys[j]) === hf) {\n                    headerId = hfKeys[j];\n                    var headerImages = void 0;\n                    if (isSvgImage) {\n                        if (this.headerFooterSvgImages.containsKey(headerId)) {\n                            headerImages = this.headerFooterSvgImages.get(headerId);\n                            id = this.addImageRelation(headerImages, image, true);\n                        }\n                        else {\n                            headerImages = new Dictionary();\n                            id = this.addImageRelation(headerImages, image, true);\n                            this.headerFooterSvgImages.add(headerId, headerImages);\n                        }\n                    }\n                    else {\n                        if (this.headerFooterImages.containsKey(headerId)) {\n                            headerImages = this.headerFooterImages.get(headerId);\n                            id = this.addImageRelation(headerImages, image, false);\n                        }\n                        else {\n                            headerImages = new Dictionary();\n                            id = this.addImageRelation(headerImages, image, false);\n                            this.headerFooterImages.add(headerId, headerImages);\n                        }\n                    }\n                }\n            }\n        }\n        return id;\n    };\n    // Serialize the table\n    WordExport.prototype.serializeTable = function (writer, table) {\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = 0;\n        }\n        if (table[rowsProperty[this.keywordIndex]].length <= 0) {\n            return;\n        }\n        var owner = this.table;\n        this.table = table;\n        writer.writeStartElement(undefined, 'tbl', this.wNamespace);\n        var tableFormat = table[rowsProperty[this.keywordIndex]][0][rowFormatProperty[this.keywordIndex]];\n        this.serializeTableFormat(writer, tableFormat, table);\n        this.serializeTableGrid(writer, table);\n        var mVerticalMerge = new Dictionary();\n        var mHorizontalMerge = new Dictionary();\n        var cellFormats = new Dictionary();\n        var rows = table[rowsProperty[this.keywordIndex]];\n        if (rows.length > 0) {\n            for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                var row = rows[rowIndex];\n                if (row[cellsProperty[this.keywordIndex]].length > 0) {\n                    if (row.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                        this.serializeContentControl(writer, row[contentControlPropertiesProperty[this.keywordIndex]], row);\n                        continue;\n                    }\n                    var owner_1 = this.row;\n                    this.row = row;\n                    writer.writeStartElement(undefined, 'tr', this.wNamespace);\n                    this.serializeRowFormat(writer, row);\n                    var cells = row[cellsProperty[this.keywordIndex]];\n                    var cellLength = cells.length;\n                    var prevColIndex = 0;\n                    for (var i = 0; i < cellLength; i++) {\n                        var cell = cells[i];\n                        var columnIndex = cell[columnIndexProperty[this.keywordIndex]];\n                        if (cell.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                            this.serializeContentControl(writer, cell[contentControlPropertiesProperty[this.keywordIndex]], cell);\n                            continue;\n                        }\n                        var cellFormat = cell[cellFormatProperty[this.keywordIndex]];\n                        if ((columnIndex - prevColIndex) > 0) {\n                            var checkIndex = i === 0 ? 0 : (prevColIndex + 1);\n                            for (var k = checkIndex; k < columnIndex; k++) {\n                                if (mVerticalMerge.containsKey(k)) {\n                                    var format = this.getMergeCellFormat(cellFormat, cellFormats.get(k), k < cell[columnIndexProperty[this.keywordIndex]]);\n                                    this.serializeTableCell(writer, cell, format, false);\n                                    mVerticalMerge.set(k, mVerticalMerge.get(k) - 1);\n                                    if (mVerticalMerge.get(k) === 1) {\n                                        mVerticalMerge.remove(k);\n                                        cellFormats.remove(k);\n                                        if (mHorizontalMerge.containsKey(k)) {\n                                            mHorizontalMerge.remove(k);\n                                        }\n                                    }\n                                    if (mHorizontalMerge.containsKey(k)) {\n                                        prevColIndex += mHorizontalMerge.get(k) - 1;\n                                        k += mHorizontalMerge.get(k);\n                                        if (k > 0) {\n                                            k--;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        prevColIndex = columnIndex;\n                        if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n                            mVerticalMerge.add(columnIndex, cellFormat[rowSpanProperty[this.keywordIndex]]);\n                            cellFormats.add(columnIndex, cellFormat);\n                        }\n                        this.serializeTableCell(writer, cell, cellFormat, true);\n                        if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1 && cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n                            mHorizontalMerge.add(columnIndex, cellFormat[columnSpanProperty[this.keywordIndex]]);\n                        }\n                        for (var j = columnIndex + 1;; j++) {\n                            if (mVerticalMerge.containsKey(j)) {\n                                var mergeFormat = this.getMergeCellFormat(cellFormat, cellFormats.get(j), j < cell[columnIndexProperty[this.keywordIndex]]);\n                                this.serializeTableCell(writer, cell, mergeFormat, false);\n                                mVerticalMerge.set(j, mVerticalMerge.get(j) - 1);\n                                prevColIndex++;\n                                if (mVerticalMerge.get(j) === 1) {\n                                    mVerticalMerge.remove(j);\n                                    cellFormats.remove(j);\n                                    if (mHorizontalMerge.containsKey(j)) {\n                                        mHorizontalMerge.remove(j);\n                                    }\n                                }\n                                if (mHorizontalMerge.containsKey(j)) {\n                                    prevColIndex += mHorizontalMerge.get(j) - 1;\n                                    j += mHorizontalMerge.get(j);\n                                }\n                            }\n                            else if (!(i === (cellLength - 1) && j < table[columnCountProperty[this.keywordIndex]])) {\n                                break;\n                            }\n                        }\n                    }\n                    if (!this.isBookmarkAtRowEnd) {\n                        writer.writeEndElement(); //end od table row 'tr'\n                    }\n                    this.isBookmarkAtRowEnd = false;\n                    this.row = owner_1;\n                }\n            }\n        }\n        writer.writeEndElement();\n        this.table = owner;\n    };\n    WordExport.prototype.getMergeCellFormat = function (cellFormat, mergedCellFormat, before) {\n        var format = mergedCellFormat;\n        if (before) {\n            format[bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]] = cellFormat[bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]];\n        }\n        else {\n            format[bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]] = cellFormat[bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]];\n        }\n        return format;\n    };\n    WordExport.prototype.serializeTableCell = function (xmlWriter, cell, cellFormat, mergeStart) {\n        var owner = this.blockOwner;\n        this.blockOwner = cell;\n        xmlWriter.writeStartElement(undefined, 'tc', this.wNamespace);\n        xmlWriter.writeStartElement(undefined, 'tcPr', this.wNamespace);\n        this.serializeCellWidth(xmlWriter, cellFormat);\n        this.serializeCellMargins(xmlWriter, cellFormat);\n        xmlWriter.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n        this.serializeBorders(xmlWriter, cellFormat[bordersProperty[this.keywordIndex]], 8, false);\n        xmlWriter.writeEndElement(); // end of tcBorders\n        this.serializeShading(xmlWriter, cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n        this.serializeTableCellDirection(xmlWriter, cellFormat);\n        this.serializeCellVerticalAlign(xmlWriter, cellFormat[verticalAlignmentProperty[this.keywordIndex]]);\n        if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1) {\n            var num = cellFormat[columnSpanProperty[this.keywordIndex]];\n            xmlWriter.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n            xmlWriter.writeAttributeString('w', 'val', this.wNamespace, num.toString());\n            xmlWriter.writeEndElement();\n        }\n        if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n            xmlWriter.writeStartElement(undefined, 'vMerge', this.wNamespace);\n            xmlWriter.writeAttributeString('w', 'val', this.wNamespace, mergeStart ? 'restart' : 'continue');\n            xmlWriter.writeEndElement(); // end of vMerge\n        }\n        xmlWriter.writeEndElement(); // end of tcPr\n        if (cell && cell[blocksProperty[this.keywordIndex]].length > 0) {\n            var itemIndex = 0;\n            var item = undefined;\n            while (itemIndex < cell[blocksProperty[this.keywordIndex]].length) {\n                item = cell[blocksProperty[this.keywordIndex]][itemIndex];\n                this.serializeBodyItem(xmlWriter, item, false);\n                itemIndex += 1;\n            }\n        }\n        else {\n            xmlWriter.writeStartElement(undefined, 'p', this.wNamespace);\n            xmlWriter.writeStartElement(undefined, 'pPr', this.wNamespace);\n            xmlWriter.writeStartElement(undefined, 'pStyle', this.wNamespace);\n            xmlWriter.writeAttributeString('w', 'val', this.wNamespace, 'Normal');\n            xmlWriter.writeEndElement(); //end of pStyle\n            xmlWriter.writeEndElement(); //end of pPr\n            xmlWriter.writeEndElement(); //end of P\n        }\n        if (!this.isBookmarkAtRowEnd) {\n            xmlWriter.writeEndElement(); //end of table cell 'tc' \n        }\n        this.blockOwner = owner;\n    };\n    // Serialize the table grid\n    WordExport.prototype.serializeTableGrid = function (writer, table) {\n        writer.writeStartElement(undefined, 'tblGrid', this.wNamespace);\n        if (table[gridProperty[this.keywordIndex]].length !== 0) {\n            this.serializeGridColumns(writer, table[gridProperty[this.keywordIndex]]);\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the table rows\n    WordExport.prototype.serializeTableRows = function (writer, rows) {\n        var mVerticalMerge = new Dictionary();\n        if (rows.length > 0) {\n            for (var i = 0; i < rows.length; i++) {\n                var row = rows[i];\n                if (row[cellsProperty[this.keywordIndex]].length > 0) {\n                    if (row.hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                        this.serializeContentControl(writer, row[contentControlPropertiesProperty[this.keywordIndex]], row);\n                        continue;\n                    }\n                    this.serializeRow(writer, row, mVerticalMerge);\n                }\n            }\n        }\n    };\n    // Serialize the table row\n    WordExport.prototype.serializeRow = function (writer, row, mVerticalMerge) {\n        var owner = this.row;\n        this.row = row;\n        writer.writeStartElement(undefined, 'tr', this.wNamespace);\n        this.serializeRowFormat(writer, row);\n        this.serializeCells(writer, row[cellsProperty[this.keywordIndex]], mVerticalMerge);\n        writer.writeEndElement(); //end od table row 'tr'\n        this.row = owner;\n    };\n    // Serialize the row format\n    WordExport.prototype.serializeRowFormat = function (writer, row) {\n        this.serializeRowMargins(writer, row[rowFormatProperty[this.keywordIndex]]);\n        writer.writeStartElement(undefined, 'trPr', this.wNamespace);\n        //Serialize Row Height\n        if (row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] > 0) {\n            writer.writeStartElement(undefined, 'trHeight', this.wNamespace);\n            if (row[rowFormatProperty[this.keywordIndex]][heightTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Exactly')) {\n                writer.writeAttributeString('w', 'hRule', this.wNamespace, 'exact');\n            }\n            else if (row[rowFormatProperty[this.keywordIndex]][heightTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'AtLeast')) {\n                writer.writeAttributeString('w', 'hRule', this.wNamespace, 'atLeast');\n            }\n            var height = this.roundToTwoDecimal(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] * this.twentiethOfPoint).toString();\n            writer.writeAttributeString('w', 'val', this.wNamespace, height);\n            writer.writeEndElement();\n        }\n        var rowFormat = row[rowFormatProperty[this.keywordIndex]];\n        // //Serialize 'gridBefore' element\n        var gridBefore = rowFormat[gridBeforeProperty[this.keywordIndex]];\n        if (gridBefore > 0) {\n            writer.writeStartElement(undefined, 'gridBefore', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, gridBefore.toString());\n            writer.writeEndElement();\n        }\n        // //Serialize 'gridAfter' element\n        var gridAfter = rowFormat[gridAfterProperty[this.keywordIndex]];\n        if (gridAfter > 0) {\n            writer.writeStartElement(undefined, 'gridAfter', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, gridAfter.toString());\n            writer.writeEndElement();\n        }\n        // //Serialize 'wBefore' element \n        if (gridBefore > 0) {\n            writer.writeStartElement(undefined, 'wBefore', this.wNamespace);\n            switch (rowFormat[gridBeforeWidthTypeProperty[this.keywordIndex]]) {\n                case 'Percent':\n                case 1:\n                    var width = this.roundToTwoDecimal(rowFormat[gridBeforeWidthProperty[this.keywordIndex]] * this.percentageFactor).toString();\n                    writer.writeAttributeString('w', 'w', this.wNamespace, width);\n                    writer.writeAttributeString('w', 'type', this.wNamespace, 'pct');\n                    break;\n                case 'Point':\n                case 2:\n                    var pointWidth = this.roundToTwoDecimal(rowFormat[gridBeforeWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                    writer.writeAttributeString('w', 'w', this.wNamespace, pointWidth);\n                    writer.writeAttributeString('w', 'type', this.wNamespace, 'dxa');\n                    break;\n            }\n            writer.writeEndElement();\n        }\n        //Serialize 'wAfter' element\n        if (gridAfter > 0) {\n            writer.writeStartElement(undefined, 'wAfter', this.wNamespace);\n            switch (rowFormat[gridAfterWidthTypeProperty[this.keywordIndex]]) {\n                case 'Percent':\n                case 1:\n                    var width = this.roundToTwoDecimal(rowFormat[gridAfterWidthProperty[this.keywordIndex]] * this.percentageFactor).toString();\n                    writer.writeAttributeString('w', 'val', this.wNamespace, width);\n                    writer.writeAttributeString('w', 'type', this.wNamespace, 'pct');\n                    break;\n                case 'Point':\n                case 2:\n                    var pointWidth = this.roundToTwoDecimal(rowFormat[gridAfterWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                    writer.writeAttributeString('w', 'val', this.wNamespace, pointWidth);\n                    writer.writeAttributeString('w', 'type', this.wNamespace, 'dxa');\n                    break;\n            }\n            writer.writeEndElement();\n        }\n        //Serialize 'cantSplit' element \n        if (!HelperMethods.parseBoolValue(rowFormat[allowBreakAcrossPagesProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'cantSplit', this.wNamespace);\n            writer.writeEndElement();\n        }\n        // //Serialize 'tblHeader' element \n        if (HelperMethods.parseBoolValue(rowFormat[isHeaderProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'tblHeader', this.wNamespace);\n            writer.writeEndElement();\n        }\n        //serialize revision\n        if (!isNullOrUndefined(rowFormat[revisionIdsProperty[this.keywordIndex]]) && rowFormat[revisionIdsProperty[this.keywordIndex]].length > 0) {\n            this.serializeRevisionStart(writer, rowFormat, undefined);\n            this.serializeRevisionEnd(writer, rowFormat, undefined);\n        }\n        writer.writeEndElement();\n    };\n    // serialize the table cells\n    WordExport.prototype.serializeCells = function (writer, cells, mVerticalMerge) {\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].hasOwnProperty(contentControlPropertiesProperty[this.keywordIndex])) {\n                this.serializeContentControl(writer, cells[i][contentControlPropertiesProperty[this.keywordIndex]], cells[i]);\n                continue;\n            }\n            this.serializeCell(writer, cells[i], mVerticalMerge);\n        }\n    };\n    // Serialize the table cell\n    WordExport.prototype.serializeCell = function (writer, cell, mVerticalMerge) {\n        var owner = this.blockOwner;\n        this.blockOwner = cell;\n        writer.writeStartElement(undefined, 'tc', this.wNamespace);\n        mVerticalMerge = this.serializeCellFormat(writer, cell[cellFormatProperty[this.keywordIndex]], true, true, mVerticalMerge);\n        if (cell[blocksProperty[this.keywordIndex]].length > 0) {\n            var itemIndex = 0;\n            var item = undefined;\n            while (itemIndex < cell[blocksProperty[this.keywordIndex]].length) {\n                item = cell[blocksProperty[this.keywordIndex]][itemIndex];\n                this.serializeBodyItem(writer, item, false);\n                itemIndex += 1;\n            }\n        }\n        else {\n            writer.writeStartElement(undefined, 'p', this.wNamespace);\n            writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n            writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, 'Normal');\n            writer.writeEndElement(); //end of pStyle\n            writer.writeEndElement(); //end of pPr\n            writer.writeEndElement(); //end of P\n        }\n        writer.writeEndElement(); //end of table cell 'tc' \n        var increment = 1;\n        // let count: number = 0;\n        if (mVerticalMerge.containsKey((cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1) + increment) && this.row[cellsProperty[this.keywordIndex]].length === 1) {\n            var length_1 = mVerticalMerge.keys[mVerticalMerge.keys.length - 1];\n            while (increment <= length_1) {\n                increment = this.createCellForMerge(writer, cell, mVerticalMerge, increment);\n                increment++;\n            }\n        }\n        else {\n            this.createCellForMerge(writer, cell, mVerticalMerge, increment);\n        }\n        this.blockOwner = owner;\n    };\n    WordExport.prototype.createCellForMerge = function (writer, cell, mVerticalMerge, increment) {\n        while (mVerticalMerge.containsKey((cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1) + increment)\n            && (((this.row[cellsProperty[this.keywordIndex]].indexOf(cell) === this.row[cellsProperty[this.keywordIndex]].length - 1) || this.row[cellsProperty[this.keywordIndex]].indexOf(cell) === cell[columnIndexProperty[this.keywordIndex]]))\n            && cell.nextNode === undefined) {\n            var collKey = (cell[columnIndexProperty[this.keywordIndex]] + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] - 1) + increment;\n            writer.writeStartElement(undefined, 'tc', this.wNamespace);\n            var endProperties = true;\n            if (!isNullOrUndefined(this.spanCellFormat)) {\n                endProperties = false;\n                mVerticalMerge = this.serializeCellFormat(writer, this.spanCellFormat, false, endProperties, mVerticalMerge);\n            }\n            else {\n                writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n                endProperties = false;\n            }\n            this.serializeColumnSpan(collKey, writer);\n            writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, 'continue');\n            writer.writeEndElement();\n            if (isNullOrUndefined(this.spanCellFormat)) {\n                writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n                this.serializeBorders(writer, cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], 8, false);\n                writer.writeEndElement();\n            }\n            if (!endProperties) {\n                writer.writeEndElement();\n            }\n            mVerticalMerge = this.checkMergeCell(collKey, mVerticalMerge);\n            writer.writeStartElement('w', 'p', this.wNamespace);\n            writer.writeEndElement(); //end of P\n            writer.writeEndElement(); //end of table cell 'tc'  \n            increment++;\n            //count++;\n        }\n        return increment;\n    };\n    // Serialize the cell formatting\n    WordExport.prototype.serializeCellFormat = function (writer, cellFormat, ensureMerge, endProperties, mVerticalMerge) {\n        var cell = this.blockOwner;\n        //Get the table fomat\n        var tf = this.table[tableFormatProperty[this.keywordIndex]];\n        //Get the row format\n        var rf = this.row[rowFormatProperty[this.keywordIndex]];\n        writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n        //w:cnfStyle -   Table Cell Conditional Formatting\n        // SerializeCnfStyleElement(cell);\n        //w:tcW -    Preferred Table Cell Width\n        this.serializeCellWidth(writer, cellFormat);\n        // serialize cell margins\n        this.serializeCellMargins(writer, cellFormat);\n        if (ensureMerge) {\n            //w:hMerge -    Horizontally Merged Cell and w:vMerge -    Vertically Merged Cell\n            mVerticalMerge = this.serializeCellMerge(writer, cellFormat, mVerticalMerge);\n            //w:gridSpan -   Grid Columns Spanned by Current Table Cell\n            this.serializeGridSpan(writer, cell);\n        }\n        //w:tcBorders -    Table Cell Borders\n        writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n        this.serializeBorders(writer, cellFormat[bordersProperty[this.keywordIndex]], 8, false);\n        writer.writeEndElement();\n        //w:shd -  Table Cell Shading\n        this.serializeShading(writer, cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n        // //w:noWrap -   Don't Wrap Cell Content\n        // if (cellFormat.HasValue(CellFormat.TextWrapKey)) {\n        //     m_writer.WriteStartElement('noWrap', W_namespace);\n        //     if (cellFormat.TextWrap)\n        //         m_writer.WriteAttributeString('w', 'val', W_namespace, 'false');\n        //     m_writer.WriteEndElement();\n        // }\n        // //w:tcMar -  Single Table Cell Margins\n        // if (!cellFormat.SamePaddingsAsTable) {\n        //     m_writer.WriteStartElement('tcMar', W_namespace);\n        //     SerializePaddings(cellFormat.Paddings);\n        //     m_writer.WriteEndElement();\n        // }\n        //w:textDirection -   Table Cell Text Flow Direction\n        this.serializeTableCellDirection(writer, cellFormat);\n        // //w:tcFitText -  Fit Text Within Cell\n        // if (cellFormat.FitText) {\n        //     m_writer.WriteStartElement('tcFitText', W_namespace);\n        //     m_writer.WriteEndElement();\n        // }\n        // //w:hideMark \n        // if (cellFormat.HideMark) {\n        //     m_writer.WriteStartElement('hideMark', W_namespace);\n        //     m_writer.WriteEndElement();\n        // }\n        //w:vAlign -  Table Cell Vertical Alignment\n        // if (cellFormat.HasValue(CellFormat.VrAlignmentKey))\n        this.serializeCellVerticalAlign(writer, cellFormat[verticalAlignmentProperty[this.keywordIndex]]);\n        // //w:hideMark -   Ignore End Of Cell Marker In Row Height Calculation\n        // SerializeDocxProps(tempDocxProps, 'hideMark');\n        // //w:cellIns -    Table Cell Insertion\n        // SerializeDocxProps(tempDocxProps, 'cellIns');\n        // //w:cellDel -    Table Cell Deletion\n        // SerializeDocxProps(tempDocxProps, 'cellDel');\n        // //w:cellMerge -   Vertically Merged/Split Table Cells\n        // SerializeDocxProps(tempDocxProps, 'cellMerge');\n        // if (cellFormat.OldPropertiesHash.length > 0 && !m_isAlternativeCellFormat) {\n        //     m_isAlternativeCellFormat = true;\n        //     SerializeTrackChangeProps('tcPrChange', cellFormat.FormatChangeAuthorName, cellFormat.FormatChangeDateTime);\n        //     Dictionary < int, object > oldPropertyHash = new Dictionary<int, object>(cellFormat.OldPropertiesHash);\n        //     Dictionary < int, object > propertyHash = new Dictionary<int, object>(cellFormat.PropertiesHash);\n        //     cellFormat.PropertiesHash.Clear();\n        //     cellFormat.OldPropertiesHash.Clear();\n        //     foreach(KeyValuePair < int, object > keyValue in oldPropertyHash)\n        //     cellFormat.PropertiesHash[keyValue.Key] = keyValue.Value;\n        //     SerializeCellFormat(cellFormat);\n        //     cellFormat.PropertiesHash.Clear();\n        //     foreach(KeyValuePair < int, object > keyValue in propertyHash)\n        //     cellFormat.PropertiesHash[keyValue.Key] = keyValue.Value;\n        //     foreach(KeyValuePair < int, object > keyValue in oldPropertyHash)\n        //     cellFormat.OldPropertiesHash[keyValue.Key] = keyValue.Value;\n        //     m_writer.WriteEndElement();\n        //     m_isAlternativeCellFormat = false;\n        // }\n        if (endProperties) {\n            writer.writeEndElement();\n        }\n        return mVerticalMerge;\n    };\n    // Serialize the cell width\n    WordExport.prototype.serializeCellWidth = function (writer, cf) {\n        writer.writeStartElement(undefined, 'tcW', this.wNamespace);\n        if (cf[preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Percent')) {\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'pct');\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(cf[preferredWidthProperty[this.keywordIndex]] * this.percentageFactor).toString());\n        }\n        else if (cf[preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Auto')) {\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'auto');\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, '0');\n        }\n        else {\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal(cf[preferredWidthProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n        }\n        writer.writeEndElement();\n    };\n    // Serialize cell merge\n    WordExport.prototype.serializeCellMerge = function (writer, cellFormat, mVerticalMerge) {\n        var cell = this.blockOwner;\n        var isserialized = false;\n        var collKey;\n        var currentIndex = cell[columnIndexProperty[this.keywordIndex]];\n        var cellIndex = this.row[cellsProperty[this.keywordIndex]].indexOf(cell);\n        var prevIndex = cellIndex > 0 ? this.row[cellsProperty[this.keywordIndex]][cellIndex - 1][columnIndexProperty[this.keywordIndex]] : cell[columnIndexProperty[this.keywordIndex]];\n        if (cell[columnIndexProperty[this.keywordIndex]] === cellIndex) {\n            collKey = cell[columnIndexProperty[this.keywordIndex]];\n            isserialized = true;\n        }\n        else {\n            isserialized = false;\n        }\n        if (!isserialized) {\n            if (cellIndex === 0) {\n                currentIndex = cell[columnIndexProperty[this.keywordIndex]];\n                prevIndex = -1;\n            }\n            for (var i = prevIndex; i < currentIndex; i++) {\n                collKey = prevIndex + 1;\n                prevIndex += 1;\n                if (collKey === 0 && mVerticalMerge.containsKey(collKey)) {\n                    mVerticalMerge = this.createMerge(writer, collKey, cell, mVerticalMerge);\n                }\n            }\n        }\n        if (cellFormat[rowSpanProperty[this.keywordIndex]] > 1) {\n            writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n            this.spanCellFormat = cellFormat;\n            mVerticalMerge.add(collKey, cellFormat[rowSpanProperty[this.keywordIndex]] - 1);\n            if (cellFormat[columnSpanProperty[this.keywordIndex]] > 1) {\n                this.mGridSpans.add(collKey, cellFormat[columnSpanProperty[this.keywordIndex]]);\n            }\n            writer.writeAttributeString('w', 'val', this.wNamespace, 'restart');\n            writer.writeEndElement();\n        }\n        else if (mVerticalMerge.containsKey(collKey) && isserialized) {\n            mVerticalMerge = this.createMerge(writer, collKey, cell, mVerticalMerge);\n        }\n        return mVerticalMerge;\n    };\n    WordExport.prototype.createMerge = function (writer, collKey, cell, mVerticalMerge) {\n        this.serializeColumnSpan(collKey, writer);\n        writer.writeStartElement(undefined, 'vMerge', this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'continue');\n        writer.writeEndElement();\n        writer.writeStartElement(undefined, 'tcBorders', this.wNamespace);\n        this.serializeBorders(writer, cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], 8, false);\n        writer.writeEndElement();\n        writer.writeEndElement(); //end tcPr\n        writer.writeStartElement('w', 'p', this.wNamespace);\n        writer.writeEndElement();\n        writer.writeEndElement(); //end tc\n        writer.writeStartElement(undefined, 'tc', this.wNamespace);\n        writer.writeStartElement(undefined, 'tcPr', this.wNamespace);\n        this.serializeCellWidth(writer, cell[cellFormatProperty[this.keywordIndex]]);\n        mVerticalMerge = this.checkMergeCell(collKey, mVerticalMerge);\n        return mVerticalMerge;\n    };\n    WordExport.prototype.serializeColumnSpan = function (collKey, writer) {\n        if (this.mGridSpans.keys.length > 0 && this.mGridSpans.containsKey(collKey)) {\n            writer.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.mGridSpans.get(collKey).toString());\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.checkMergeCell = function (collKey, mVerticalMerge) {\n        if ((mVerticalMerge.get(collKey) - 1) === 0) {\n            mVerticalMerge.remove(collKey);\n            this.spanCellFormat = undefined;\n            if (this.mGridSpans.keys.length > 0 && this.mGridSpans.containsKey(collKey)) {\n                this.mGridSpans.remove(collKey);\n            }\n        }\n        else {\n            mVerticalMerge.set(collKey, mVerticalMerge.get(collKey) - 1);\n        }\n        return mVerticalMerge;\n    };\n    // Serialize the grid span element of cell.\n    WordExport.prototype.serializeGridSpan = function (writer, cell) {\n        // int gridSpan = cell.cellFormat.GridSpan;\n        if (cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] > 1) {\n            var num = cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]];\n            writer.writeStartElement(undefined, 'gridSpan', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, num.toString());\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the table cell direction\n    WordExport.prototype.serializeTableCellDirection = function (writer, cellFormat) {\n        // if (cellFormat..textDirection !== TextDirection.Horizontal)\n        // {\n        //     m_writer.WriteStartElement('textDirection', W_namespace);\n        //     switch (cellFormat.TextDirection)\n        //     {\n        //         case TextDirection.Horizontal:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'lrTb');\n        //             break;\n        //         case TextDirection.VerticalBottomToTop:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'btLr');\n        //             break;\n        //         case TextDirection.VerticalTopToBottom:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbRl');\n        //             break;\n        //         case TextDirection.HorizontalFarEast:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'lrTbV');\n        //             break;\n        //         case TextDirection.Vertical:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbLrV');\n        //             break;\n        //         case TextDirection.VerticalFarEast:\n        //             m_writer.WriteAttributeString('w', 'val', W_namespace, 'tbRlV');\n        //             break;\n        //     }\n        //     m_writer.WriteEndElement();\n        // }\n    };\n    // Serialize the cell vertical alignment\n    WordExport.prototype.serializeCellVerticalAlign = function (writer, alignment) {\n        writer.writeStartElement(undefined, 'vAlign', this.wNamespace);\n        switch (alignment) {\n            case 'Center':\n            case 1:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'center');\n                break;\n            case 'Bottom':\n            case 2:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'bottom');\n                break;\n            default:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'top');\n                break;\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the table grid columns.\n    WordExport.prototype.serializeGridColumns = function (writer, grid) {\n        for (var i = 0, count = grid.length; i < count; i++) {\n            var gridValue = Math.round(grid[i] * 20);\n            writer.writeStartElement(undefined, 'gridCol', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, gridValue.toString());\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the row formattings.\n    // Table parameter is passed for serializing table format and undefined for serializing row format.\n    WordExport.prototype.serializeTableFormat = function (writer, format, table) {\n        // if (!isNullOrUndefined(table))\n        // {\n        //     List<Stream> tempDocxProps = new List<Stream>();\n        //     for (int i = 0, cnt = table.DocxTableFormat.NodeArray.length; i < cnt; i++)\n        //         tempDocxProps.Add(table.DocxTableFormat.NodeArray[i]);\n        writer.writeStartElement(undefined, 'tblPr', this.wNamespace);\n        //     SerializeTableStlye(format);\n        //     if (format.WrapTextAround &&!((table.OwnerTextBody.Owner is WTextBox) || \n        //(table.OwnerTextBody.Owner is WComment) || (table.OwnerTextBody.Owner is WFootnote)))\n        //     {\n        //         SerializeTablePositioning(format.Positioning);\n        //         if (!format.Positioning.AllowOverlap)\n        //         {\n        //             m_writer.WriteStartElement('tblOverlap', W_namespace);\n        //             m_writer.WriteAttributeString('val', W_namespace, 'never');\n        //             m_writer.WriteEndElement();\n        //         }\n        //     }\n        //     SerializeDocxProps(tempDocxProps, 'tblStyleRowBandSize');\n        //     SerializeDocxProps(tempDocxProps, 'tblStyleColBandSize');  \n        if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, \"tblStyle\", this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, table[tableFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n        this.serializeTablePositioning(writer, table);\n        this.serializeTableWidth(writer, table);\n        this.serializeTableAlignment(writer, table[tableFormatProperty[this.keywordIndex]]);\n        this.serializeCellSpacing(writer, table[tableFormatProperty[this.keywordIndex]]);\n        this.serializeTableIndentation(writer, table[tableFormatProperty[this.keywordIndex]]);\n        this.serializeTableMargins(writer, table[tableFormatProperty[this.keywordIndex]]);\n        this.serializeTableBorders(writer, table[tableFormatProperty[this.keywordIndex]]);\n        this.serializeShading(writer, table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]);\n        if (HelperMethods.parseBoolValue(table[tableFormatProperty[this.keywordIndex]][bidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'bidiVisual', this.wNamespace);\n            writer.writeEndElement();\n        }\n        this.serializeTblLayout(writer, table[tableFormatProperty[this.keywordIndex]]);\n        // this.serializeTableCellMargin(writer, table.tableFormat);\n        //     SerializeTableLook(table);\n        //         if (!isNullOrUndefined(table.Title))\n        //             SerializeTableTitle(table);\n        //         if (!isNullOrUndefined(table.Description))\n        //             SerializeTableDescription(table);\n        // }\n        // else\n        // {\n        //     SerializeCellSpacing(format);\n        //     SerializeTableIndentation(format);\n        //     SerializeTableBorders(format);\n        //     SerializeTableShading(format);\n        //     SerializeTblLayout(format);\n        //     SerializeTableCellMargin(format);\n        // }\n        // if (!isNullOrUndefined(format.OwnerBase) && format.OwnerBase is WTable\n        //   && format.OldPropertiesHash.length > 0 && !m_isAlternativeTableFormat)\n        // {\n        //     m_isAlternativeTableFormat = true;\n        //     SerializeTrackChangeProps('tblPrChange', format.FormatChangeAuthorName, format.FormatChangeDateTime);\n        //     SerializeTableTrackChanges(format, format.OwnerBase as WTable);\n        //     m_writer.WriteEndElement();\n        //     m_isAlternativeTableFormat = false;\n        // }\n        // if (!isNullOrUndefined(format.OwnerRow) && format.OldPropertiesHash.length > 0)\n        // {\n        //     SerializeTrackChangeProps('tblPrExChange', format.FormatChangeAuthorName, format.FormatChangeDateTime);\n        //     SerializeTableTrackChanges(format, undefined);\n        //     m_writer.WriteEndElement();\n        // }\n        // SerializeTblTrackChanges(format);\n        if (!isNullOrUndefined(table)) {\n            writer.writeEndElement(); //end of tblPr\n        }\n    };\n    // Serialize the table position\n    WordExport.prototype.serializeTablePositioning = function (writer, table) {\n        if (HelperMethods.parseBoolValue(table[wrapTextAroundProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'tblpPr', this.wNamespace);\n            if (table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] > 0) {\n                var left = Math.round(table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'leftFromText', this.wNamespace, left);\n            }\n            if (table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] > 0) {\n                var right = Math.round(table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'rightFromText', this.wNamespace, right);\n            }\n            if (table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] > 0) {\n                var top_1 = Math.round(table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'topFromText', this.wNamespace, top_1);\n            }\n            if (table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] > 0) {\n                var bottom = Math.round(table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'bottomFromText', this.wNamespace, bottom);\n            }\n            if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]])) {\n                var verticalOrigin = table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Paragraph') ? 'text' : this.keywordIndex == 1 ? this.getTableVerticalRelation(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]]).toLowerCase() : this.getTableVerticalRelation(this.getTableVerticalRelationEnumValue(table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]])).toLowerCase();\n                writer.writeAttributeString('w', 'vertAnchor', this.wNamespace, verticalOrigin);\n            }\n            if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'Column')) {\n                var horizontalOrigin = this.keywordIndex == 1 ? this.getTableHorizontalRelation(table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]]).toLowerCase() : table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]].toLowerCase();\n                writer.writeAttributeString('w', 'horzAnchor', this.wNamespace, horizontalOrigin);\n            }\n            if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'Left')) {\n                var horizontalAlignment = this.keywordIndex == 1 ? this.getTableHorizontalAlignment(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) : table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]].toLowerCase();\n                writer.writeAttributeString('w', 'tblpXSpec', this.wNamespace, horizontalAlignment);\n            }\n            if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None')) {\n                var verticalAlignment = this.keywordIndex == 1 ? this.getTableVerticalAlignment(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) : table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]].toLowerCase();\n                writer.writeAttributeString('w', 'tblpYSpec', this.wNamespace, verticalAlignment);\n            }\n            if (((!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Left'))\n                || !table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]])\n                && table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] > 0) {\n                var horizontalPosition = Math.round(table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'tblpX', this.wNamespace, horizontalPosition);\n            }\n            if (!isNullOrUndefined(table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) && table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'None')) {\n                var verticalPosition = Math.round(table[positioningProperty[this.keywordIndex]][verticalPositionProperty[this.keywordIndex]] * this.twipsInOnePoint).toString();\n                writer.writeAttributeString('w', 'tblpY', this.wNamespace, verticalPosition);\n            }\n            writer.writeEndElement();\n            if (!HelperMethods.parseBoolValue(table[positioningProperty[this.keywordIndex]][allowOverlapProperty[this.keywordIndex]])) {\n                writer.writeStartElement('w', 'tblOverlap', this.wNamespace);\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'never');\n                writer.writeEndElement();\n            }\n        }\n        if (!isNullOrUndefined(table[descriptionProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'tblDescription', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, table[descriptionProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(table[titleProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'tblCaption', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, table[titleProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n    };\n    // serialize the table margin\n    WordExport.prototype.serializeTableMargins = function (writer, format) {\n        this.serializeMargins(writer, format, 'tblCellMar');\n    };\n    // serialize the row margin\n    WordExport.prototype.serializeRowMargins = function (writer, format) {\n        writer.writeStartElement(undefined, 'tblPrEx', this.wNamespace);\n        // serialize the row borders\n        writer.writeStartElement(undefined, 'tblBorders', this.wNamespace);\n        this.serializeBorders(writer, format[bordersProperty[this.keywordIndex]], 8, false);\n        writer.writeEndElement();\n        this.serializeMargins(writer, format, 'tblCellMar');\n        writer.writeEndElement();\n    };\n    // serialize the cell margins\n    WordExport.prototype.serializeCellMargins = function (writer, format) {\n        this.serializeMargins(writer, format, 'tcMar');\n    };\n    // serialize the table margins, row margins, cell margins\n    WordExport.prototype.serializeMargins = function (writer, format, tag) {\n        writer.writeStartElement(undefined, tag, this.wNamespace);\n        if (!isNullOrUndefined(format[topMarginProperty[this.keywordIndex]])) {\n            var topMargin = Math.round(format[topMarginProperty[this.keywordIndex]] * 20);\n            writer.writeStartElement(undefined, 'top', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, topMargin.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(format[leftMarginProperty[this.keywordIndex]])) {\n            var leftMargin = Math.round(format[leftMarginProperty[this.keywordIndex]] * 20);\n            writer.writeStartElement(undefined, 'left', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, leftMargin.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(format[bottomMarginProperty[this.keywordIndex]])) {\n            var bottomMargin = Math.round(format[bottomMarginProperty[this.keywordIndex]] * 20);\n            writer.writeStartElement(undefined, 'bottom', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, bottomMargin.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(format[rightMarginProperty[this.keywordIndex]])) {\n            var rightMargin = Math.round(format[rightMarginProperty[this.keywordIndex]] * 20);\n            writer.writeStartElement(undefined, 'right', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, rightMargin.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the table borders\n    WordExport.prototype.serializeShading = function (writer, format) {\n        // if (format.textureStyle !== 'TextureNone') {\n        writer.writeStartElement(undefined, 'shd', this.wNamespace);\n        if (format[backgroundColorProperty[this.keywordIndex]] && format[backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n            writer.writeAttributeString(undefined, 'fill', this.wNamespace, this.getColor(format[backgroundColorProperty[this.keywordIndex]]));\n        }\n        else {\n            writer.writeAttributeString(undefined, 'fill', this.wNamespace, 'auto');\n        }\n        if (format[foregroundColorProperty[this.keywordIndex]] === 'empty' || isNullOrUndefined(format[foregroundColorProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'color', this.wNamespace, 'auto');\n        }\n        else {\n            writer.writeAttributeString(undefined, 'color', this.wNamespace, this.getColor(format[foregroundColorProperty[this.keywordIndex]]));\n        }\n        if (!isNullOrUndefined(format[textureProperty[this.keywordIndex]])) {\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.getTextureStyle(format[textureProperty[this.keywordIndex]]));\n        }\n        writer.writeEndElement();\n        // }\n    };\n    WordExport.prototype.getTextureStyle = function (textureStyle) {\n        switch (textureStyle) {\n            case 'Texture5Percent':\n            case 'Texture2Pt5Percent':\n            case 'Texture7Pt5Percent':\n            case 1:\n            case 2:\n            case 3:\n                return 'pct5';\n            case 'Texture10Percent':\n            case 4:\n                return 'pct10';\n            case 'Texture12Pt5Percent':\n            case 5:\n                return 'pct12';\n            case 'Texture15Percent':\n            case 'Texture17Pt5Percent':\n            case 6:\n            case 7:\n                return 'pct15';\n            case 'Texture20Percent':\n            case 'Texture22Pt5Percent':\n            case 8:\n            case 9:\n                return 'pct20';\n            case 'Texture25Percent':\n            case 'Texture27Pt5Percent':\n            case 10:\n            case 11:\n                return 'pct25';\n            case 'Texture30Percent':\n            case 'Texture32Pt5Percent':\n            case 12:\n            case 13:\n                return 'pct30';\n            case 'Texture35Percent':\n            case 14:\n                return 'pct35';\n            case 'Texture37Pt5Percent':\n            case 15:\n                return 'pct37';\n            case 'Texture40Percent':\n            case 'Texture42Pt5Percent':\n            case 16:\n            case 17:\n                return 'pct40';\n            case 'Texture45Percent':\n            case 'Texture47Pt5Percent':\n            case 18:\n            case 19:\n                return 'pct45';\n            case 'Texture50Percent':\n            case 'Texture52Pt5Percent':\n            case 20:\n            case 21:\n                return 'pct50';\n            case 'Texture55Percent':\n            case 'Texture57Pt5Percent':\n            case 22:\n            case 23:\n                return 'pct55';\n            case 'Texture60Percent':\n            case 24:\n                return 'pct60';\n            case 'Texture62Pt5Percent':\n            case 25:\n                return 'pct62';\n            case 'Texture65Percent':\n            case 'Texture67Pt5Percent':\n            case 26:\n            case 27:\n                return 'pct65';\n            case 'Texture70Percent':\n            case 'Texture72Pt5Percent':\n            case 28:\n            case 29:\n                return 'pct70';\n            case 'Texture75Percent':\n            case 'Texture77Pt5Percent':\n            case 30:\n            case 31:\n                return 'pct75';\n            case 'Texture80Percent':\n            case 'Texture82Pt5Percent':\n            case 32:\n            case 33:\n                return 'pct80';\n            case 'Texture85Percent':\n            case 34:\n                return 'pct85';\n            case 'Texture87Pt5Percent':\n            case 35:\n                return 'pct87';\n            case 'Texture90Percent':\n            case 'Texture92Pt5Percent':\n            case 36:\n            case 37:\n                return 'pct90';\n            case 'Texture95Percent':\n            case 'Texture97Pt5Percent':\n            case 38:\n            case 39:\n                return 'pct95';\n            case 40:\n                return 'solid';\n            case 'TextureCross':\n                return 'thinHorzCross';\n            case 'TextureDarkCross':\n                return 'horzCross';\n            case 'TextureDarkDiagonalCross':\n                return 'diagCross';\n            case 'TextureDarkDiagonalDown':\n                return 'reverseDiagStripe';\n            case 'TextureDarkDiagonalUp':\n                return 'diagStripe';\n            case 'TextureDarkHorizontal':\n            case 41:\n                return 'horzStripe';\n            case 'TextureDarkVertical':\n            case 42:\n                return 'vertStripe';\n            case 43:\n                return 'reverseDiagStripe';\n            case 44:\n                return 'diagStripe';\n            case 45:\n                return 'horzCross';\n            case 46:\n                return 'diagCross';\n            case 'TextureDiagonalCross':\n                return 'thinDiagCross';\n            case 'TextureDiagonalDown':\n                return 'thinReverseDiagStripe';\n            case 'TextureDiagonalUp':\n                return 'thinDiagStripe';\n            case 'TextureHorizontal':\n            case 47:\n                return 'thinHorzStripe';\n            case 'TextureSolid':\n                return 'solid';\n            case 'TextureVertical':\n            case 48:\n                return 'thinVertStripe';\n            case 49:\n                return 'thinReverseDiagStripe';\n            case 50:\n                return 'thinDiagStripe';\n            case 51:\n                return 'thinHorzCross';\n            case 52:\n                return 'thinDiagCross';\n            default:\n                return 'clear';\n        }\n    };\n    //serialize the paragraph border\n    WordExport.prototype.serializeParagraphBorders = function (writer, formatPara) {\n        var borders = formatPara[bordersProperty[this.keywordIndex]];\n        if (isNullOrUndefined(borders)) {\n            return;\n        }\n        writer.writeStartElement(undefined, 'pBdr', this.wNamespace);\n        this.serializeBorders(writer, formatPara[bordersProperty[this.keywordIndex]], 8, true);\n        writer.writeEndElement();\n    };\n    // Serialize the table borders\n    WordExport.prototype.serializeTableBorders = function (writer, format) {\n        var borders = format[bordersProperty[this.keywordIndex]];\n        if (isNullOrUndefined(borders)) {\n            return;\n        }\n        writer.writeStartElement(undefined, 'tblBorders', this.wNamespace);\n        this.serializeBorders(writer, format[bordersProperty[this.keywordIndex]], 8, false);\n        writer.writeEndElement();\n    };\n    // Serialize the borders.\n    WordExport.prototype.serializeBorders = function (writer, borders, multipler, isParagraphBorder) {\n        this.serializeBorder(writer, borders[topProperty[this.keywordIndex]], 'top', multipler);\n        this.serializeBorder(writer, borders[leftProperty[this.keywordIndex]], 'left', multipler);\n        this.serializeBorder(writer, borders[bottomProperty[this.keywordIndex]], 'bottom', multipler);\n        this.serializeBorder(writer, borders[rightProperty[this.keywordIndex]], 'right', multipler);\n        if (isParagraphBorder) {\n            this.serializeBorder(writer, borders[horizontalProperty[this.keywordIndex]], 'between', multipler);\n            this.serializeBorder(writer, borders[verticalProperty[this.keywordIndex]], 'bar', multipler);\n        }\n        else {\n            this.serializeBorder(writer, borders[horizontalProperty[this.keywordIndex]], 'insideH', multipler);\n            this.serializeBorder(writer, borders[verticalProperty[this.keywordIndex]], 'insideV', multipler);\n            this.serializeBorder(writer, borders[diagonalDownProperty[this.keywordIndex]], 'tl2br', multipler);\n            this.serializeBorder(writer, borders[diagonalUpProperty[this.keywordIndex]], 'tr2bl', multipler);\n        }\n    };\n    // Serialize the table layout element\n    WordExport.prototype.serializeTblLayout = function (writer, format) {\n        if (!HelperMethods.parseBoolValue(format[allowAutoFitProperty[this.keywordIndex]]) || format[preferredWidthProperty[this.keywordIndex]] > this.containerWidth) {\n            writer.writeStartElement(undefined, 'tblLayout', this.wNamespace);\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'fixed');\n            writer.writeEndElement();\n        }\n    };\n    // Serializes the Border\n    WordExport.prototype.serializeBorder = function (writer, border, tagName, multiplier) {\n        var borderStyle = border[lineStyleProperty[this.keywordIndex]];\n        var sz = ((border[lineWidthProperty[this.keywordIndex]] ? border[lineWidthProperty[this.keywordIndex]] : 0) * multiplier);\n        var space = border[spaceProperty[this.keywordIndex]] ? border[spaceProperty[this.keywordIndex]] : 0;\n        if (borderStyle === (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            writer.writeStartElement(undefined, tagName, this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, 'nil');\n            writer.writeEndElement();\n            return;\n        }\n        else if (((borderStyle === (this.keywordIndex == 1 ? 1 : 'None') || isNullOrUndefined(borderStyle)) && !HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) || (sz < 0 && !HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]]))) {\n            return;\n        }\n        writer.writeStartElement(undefined, tagName, this.wNamespace);\n        writer.writeAttributeString('w', 'val', this.wNamespace, this.getBorderStyle(borderStyle));\n        // if (border.color === '#000000')\n        // {\n        //     writer.writeAttributeString(undefined, 'color', this.wNamespace, 'auto');\n        // }\n        // else\n        // {\n        if (border[colorProperty[this.keywordIndex]]) {\n            writer.writeAttributeString(undefined, 'color', this.wNamespace, this.getColor(border[colorProperty[this.keywordIndex]]));\n        }\n        // }\n        writer.writeAttributeString(undefined, 'sz', this.wNamespace, this.roundToTwoDecimal(sz).toString());\n        writer.writeAttributeString(undefined, 'space', this.wNamespace, space.toString());\n        if (HelperMethods.parseBoolValue(border[shadowProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'shadow', this.wNamespace, 'on');\n        }\n        writer.writeEndElement();\n    };\n    // Get the border style as string\n    WordExport.prototype.getBorderStyle = function (borderStyle) {\n        switch (borderStyle) {\n            case 'Cleared':\n                return 'cleared';\n            case 'None':\n            case 1:\n                return 'None';\n            case 'DashSmallGap':\n                return 'dashSmallGap';\n            case 'Triple':\n                return 'triple';\n            case 'Dot':\n            case 2:\n                return 'dotted';\n            case 3:\n                return 'dashSmallGap';\n            case 'DashDot':\n                return 'dotDash';\n            case 'DashLargeGap':\n            case 4:\n                return 'dashed';\n            case 5:\n                return 'dotDash';\n            case 'DashDotDot':\n            case 6:\n                return 'dotDotDash';\n            case 'Double':\n            case 7:\n                return 'double';\n            case 8:\n                return 'triple';\n            case 'ThinThickSmallGap':\n            case 9:\n                return 'thinThickSmallGap';\n            case 'ThickThinSmallGap':\n            case 10:\n                return 'thickThinSmallGap';\n            case 'ThinThickThinSmallGap':\n            case 11:\n                return 'thinThickThinSmallGap';\n            case 'ThickThinMediumGap':\n            case 12:\n                return 'thickThinMediumGap';\n            case 'ThinThickMediumGap':\n            case 13:\n                return 'thinThickMediumGap';\n            case 'ThinThickThinMediumGap':\n            case 14:\n                return 'thinThickThinMediumGap';\n            case 'ThickThinLargeGap':\n                return 'thickThinLargeGap';\n            case 'ThinThickLargeGap':\n            case 15:\n                return 'thinThickLargeGap';\n            case 16:\n                return 'thickThinLargeGap';\n            case 'ThinThickThinLargeGap':\n            case 17:\n                return 'thinThickThinLargeGap';\n            case 'Thick':\n                return 'thick';\n            case 'SingleWavy':\n            case 18:\n                return 'wave';\n            case 'DoubleWavy':\n            case 19:\n                return 'doubleWave';\n            case 'DashDotStroked':\n            case 20:\n                return 'dashDotStroked';\n            case 'Engrave3D':\n                return 'threeDEngrave';\n            case 'Emboss3D':\n            case 21:\n                return 'threeDEmboss';\n            case 22:\n                return 'threeDEngrave';\n            case 'Outset':\n            case 23:\n                return 'outset';\n            case 'Inset':\n            case 24:\n                return 'inset';\n            case 25:\n                return 'thick';\n            case 26:\n                return 'cleared';\n            // case 'None':\n            //     return 'none';\n            default:\n                return 'single';\n        }\n    };\n    // Serialize the table indentation.\n    WordExport.prototype.serializeTableIndentation = function (writer, format) {\n        if (!isNullOrUndefined(format[leftIndentProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'tblInd', this.wNamespace);\n            var tableIndent = Math.round(format[leftIndentProperty[this.keywordIndex]] * this.twipsInOnePoint);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, tableIndent.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the cell spacing.\n    WordExport.prototype.serializeCellSpacing = function (writer, format) {\n        if (!isNullOrUndefined(format[cellSpacingProperty[this.keywordIndex]]) && format[cellSpacingProperty[this.keywordIndex]] > 0) {\n            writer.writeStartElement(undefined, 'tblCellSpacing', this.wNamespace);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, this.roundToTwoDecimal((format[cellSpacingProperty[this.keywordIndex]] / 2) * this.twentiethOfPoint).toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the table width\n    WordExport.prototype.serializeTableWidth = function (writer, table) {\n        writer.writeStartElement(undefined, 'tblW', this.wNamespace);\n        if (table[tableFormatProperty[this.keywordIndex]][preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Percent')) {\n            var tableWidth = Math.round(table[tableFormatProperty[this.keywordIndex]][preferredWidthProperty[this.keywordIndex]] * this.percentageFactor);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, tableWidth.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'pct');\n        }\n        else if (table[tableFormatProperty[this.keywordIndex]][preferredWidthTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Point')) {\n            var tableWidth = Math.round(table[tableFormatProperty[this.keywordIndex]][preferredWidthProperty[this.keywordIndex]] * this.twipsInOnePoint);\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, tableWidth.toString());\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'dxa');\n        }\n        else {\n            writer.writeAttributeString(undefined, 'w', this.wNamespace, '0');\n            writer.writeAttributeString(undefined, 'type', this.wNamespace, 'auto');\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the table alignment\n    WordExport.prototype.serializeTableAlignment = function (writer, format) {\n        writer.writeStartElement(undefined, 'jc', this.wNamespace);\n        switch (format[tableAlignmentProperty[this.keywordIndex]]) {\n            case 'Right':\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'right');\n                break;\n            case 'Center':\n            case 1:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'center');\n                break;\n            case 2:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'right');\n                break;\n            default:\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'left');\n                break;\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the field\n    WordExport.prototype.serializeFieldCharacter = function (writer, field) {\n        writer.writeStartElement(undefined, 'r', this.wNamespace);\n        this.serializeCharacterFormat(writer, field[characterFormatProperty[this.keywordIndex]]);\n        writer.writeStartElement(undefined, 'fldChar', this.wNamespace);\n        var type = field[fieldTypeProperty[this.keywordIndex]] === 0 ? 'begin'\n            : field[fieldTypeProperty[this.keywordIndex]] === 1 ? 'end' : 'separate';\n        writer.writeAttributeString(undefined, 'fldCharType', this.wNamespace, type);\n        if (type === 'begin' && !isNullOrUndefined(field[formFieldDataProperty[this.keywordIndex]])) {\n            var formFieldData = field[formFieldDataProperty[this.keywordIndex]];\n            writer.writeStartElement(undefined, 'ffData', this.wNamespace);\n            writer.writeStartElement(undefined, 'name', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[nameProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'enabled', this.wNamespace);\n            writer.writeEndElement();\n            if (formFieldData.hasOwnProperty(textInputProperty[this.keywordIndex])) {\n                writer.writeStartElement(undefined, 'textInput', this.wNamespace);\n                var type_1 = this.keywordIndex == 1 ? this.getTextFormFieldType(formFieldData[textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]]) : formFieldData[textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]].toString();\n                if (type_1 === 'Number' || 'Date') {\n                    writer.writeStartElement(undefined, 'type', this.wNamespace);\n                    writer.writeAttributeString(undefined, 'val', this.wNamespace, type_1 == 'Calculation' ? 'calculated' : type_1.toLowerCase());\n                    writer.writeEndElement();\n                }\n                writer.writeStartElement(undefined, 'default', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[textInputProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n                writer.writeStartElement(undefined, 'format', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, this.keywordIndex == 1 && type_1 === 'Text' ? this.getTextFormFieldFormat(formFieldData[textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]]) : formFieldData[textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n                writer.writeEndElement();\n            }\n            else if (formFieldData.hasOwnProperty(checkBoxProperty[this.keywordIndex])) {\n                writer.writeStartElement(undefined, 'checkBox', this.wNamespace);\n                if (formFieldData[checkBoxProperty[this.keywordIndex]][sizeTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Auto')) {\n                    writer.writeStartElement(undefined, 'sizeAuto', this.wNamespace);\n                    writer.writeEndElement();\n                }\n                else {\n                    writer.writeStartElement(undefined, 'size', this.wNamespace);\n                    writer.writeAttributeString(undefined, 'val', this.wNamespace, this.roundToTwoDecimal(formFieldData[checkBoxProperty[this.keywordIndex]][sizeProperty[this.keywordIndex]] * 2).toString());\n                    writer.writeEndElement();\n                }\n                writer.writeStartElement(undefined, 'defalut', this.wNamespace);\n                writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[checkBoxProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] ? '1' : '0');\n                writer.writeEndElement();\n                if (formFieldData[checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]]) {\n                    writer.writeStartElement(undefined, 'checked', this.wNamespace);\n                    writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]] ? '1' : '0');\n                    writer.writeEndElement();\n                }\n                writer.writeEndElement();\n            }\n            else {\n                writer.writeStartElement(undefined, 'ddList', this.wNamespace);\n                if (formFieldData[dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]] !== 0) {\n                    writer.writeStartElement(undefined, 'result', this.wNamespace);\n                    writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]].toString());\n                    writer.writeEndElement();\n                }\n                for (var i = 0; i < formFieldData[dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]].length; i++) {\n                    writer.writeStartElement(undefined, 'listEntry', this.wNamespace);\n                    writer.writeAttributeString(undefined, 'val', this.wNamespace, formFieldData[dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]][i].toString());\n                    writer.writeEndElement();\n                }\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n        writer.writeEndElement();\n        if (field[fieldTypeProperty[this.keywordIndex]] === 0 && field[fieldTypeProperty[this.keywordIndex]] === 'FieldFormTextInput') {\n            writer.writeStartElement('w', 'r', this.wNamespace);\n            writer.writeStartElement(undefined, 'instrText', this.wNamespace);\n            writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n            writer.writeString('FORMTEXT');\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n    };\n    // Serialize the text range.\n    WordExport.prototype.serializeTextRange = function (writer, span, previousNode, efType) {\n        writer.writeStartElement('w', 'r', this.wNamespace);\n        if (!isNullOrUndefined(span[characterFormatProperty[this.keywordIndex]])) {\n            this.serializeCharacterFormat(writer, span[characterFormatProperty[this.keywordIndex]]);\n        }\n        if (span[textProperty[this.keywordIndex]] === '\\t') {\n            writer.writeElementString(undefined, 'tab', this.wNamespace, undefined);\n        }\n        else if (span[textProperty[this.keywordIndex]] === '\\v') {\n            writer.writeElementString(undefined, 'br', this.wNamespace, undefined);\n        }\n        else if (!isNullOrUndefined(span[breakClearTypeProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'br', this.wNamespace);\n            writer.writeAttributeString('w', 'type', this.wNamespace, \"textWrapping\");\n            writer.writeAttributeString('w', 'clear', this.wNamespace, this.getBreakClearType(span[breakClearTypeProperty[this.keywordIndex]]).toString().toLowerCase());\n            writer.writeEndElement();\n        }\n        else if (span[textProperty[this.keywordIndex]] === '\\f') {\n            writer.writeStartElement(undefined, 'br', this.wNamespace);\n            writer.writeAttributeString('w', 'type', this.wNamespace, 'page');\n            writer.writeEndElement();\n        }\n        else if (span[textProperty[this.keywordIndex]] === '\\r') {\n            writer.writeStartElement('w', 'cr', this.wNamespace);\n            writer.writeEndElement();\n        }\n        else if (span[textProperty[this.keywordIndex]] === String.fromCharCode(14)) {\n            writer.writeStartElement(undefined, 'br', this.wNamespace);\n            writer.writeAttributeString('w', 'type', this.wNamespace, 'column');\n            writer.writeEndElement();\n        }\n        else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%02') {\n            writer.writeStartElement(undefined, 'footnoteRef', this.wNamespace);\n            writer.writeEndElement();\n        }\n        else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%02' && efType === 'endnote') {\n            writer.writeStartElement(undefined, 'endnoteRef', this.wNamespace);\n            writer.writeEndElement();\n        }\n        else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%03') {\n            writer.writeStartElement(undefined, 'separator', this.wNamespace);\n            writer.writeEndElement();\n        }\n        else if (encodeURI(span[textProperty[this.keywordIndex]]) === '%04') {\n            writer.writeStartElement(undefined, 'continuationSeparator', this.wNamespace);\n            writer.writeEndElement();\n        }\n        else {\n            var isDeleteText = this.retrieveDeleteRevision(span);\n            var isField = !isNullOrUndefined(previousNode)\n                && previousNode.hasOwnProperty(fieldTypeProperty[this.keywordIndex]) && previousNode[fieldTypeProperty[this.keywordIndex]] !== 2;\n            var localName = isField ? isDeleteText ? 'delInstrText' : 'instrText' : isDeleteText ? 'delText' : 't';\n            writer.writeStartElement(undefined, localName, this.wNamespace);\n            writer.writeAttributeString('xml', 'space', this.xmlNamespace, 'preserve');\n            writer.writeString(span[textProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.retrieveDeleteRevision = function (span) {\n        if (span.hasOwnProperty(revisionIdsProperty[this.keywordIndex])) {\n            if (span[revisionIdsProperty[this.keywordIndex]].length > 0) {\n                for (var i = 0; i < span[revisionIdsProperty[this.keywordIndex]].length; i++) {\n                    if (this.retrieveRevision(span[revisionIdsProperty[this.keywordIndex]][i]).revisionType === 'Deletion') {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    // Serializes the paragraph format\n    WordExport.prototype.serializeParagraphFormat = function (writer, paragraphFormat, paragraph, keyindex) {\n        if (isNullOrUndefined(paragraphFormat)) {\n            return;\n        }\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = keyindex;\n        }\n        this.serializeParagraphBorders(writer, paragraphFormat);\n        if (!isNullOrUndefined(paragraphFormat[styleNameProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, paragraphFormat[styleNameProperty[this.keywordIndex]]);\n            writer.writeEndElement(); //end of pStyle\n        }\n        if (!isNullOrUndefined(paragraph)) {\n            this.serializeListFormat(writer, paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]]);\n        }\n        else {\n            this.serializeListFormat(writer, paragraphFormat[listFormatProperty[this.keywordIndex]]);\n        }\n        if (HelperMethods.parseBoolValue(paragraphFormat[bidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'bidi', this.wNamespace);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(paragraphFormat[keepWithNextProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'keepNext', this.wNamespace);\n            if (!HelperMethods.parseBoolValue(paragraphFormat[keepWithNextProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n            }\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(paragraphFormat[keepLinesTogetherProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'keepLines', this.wNamespace);\n            if (!HelperMethods.parseBoolValue(paragraphFormat[keepLinesTogetherProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n            }\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(paragraphFormat[outlineLevelProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'outlineLvl', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.getOutlineLevelValue(paragraphFormat[outlineLevelProperty[this.keywordIndex]]).toString());\n            writer.writeEndElement();\n        }\n        this.serializeParagraphSpacing(writer, paragraphFormat);\n        if (!isNullOrUndefined(paragraphFormat[contextualSpacingProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'contextualSpacing', this.wNamespace);\n            if (!HelperMethods.parseBoolValue(paragraphFormat[contextualSpacingProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n            }\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(paragraphFormat[widowControlProperty[this.keywordIndex]])) {\n            writer.writeStartElement('w', 'widowControl', this.wNamespace);\n            if (HelperMethods.parseBoolValue(paragraphFormat[widowControlProperty[this.keywordIndex]])) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, '1');\n            }\n            else {\n                writer.writeAttributeString('w', 'val', this.wNamespace, '0');\n            }\n            writer.writeEndElement();\n        }\n        this.serializeIndentation(writer, paragraphFormat);\n        this.serializeParagraphAlignment(writer, paragraphFormat[textAlignmentProperty[this.keywordIndex]], HelperMethods.parseBoolValue(paragraphFormat[bidiProperty[this.keywordIndex]]));\n        if (!isNullOrUndefined(paragraphFormat[tabsProperty[this.keywordIndex]]) && paragraphFormat[tabsProperty[this.keywordIndex]].length > 0) {\n            this.serializeTabs(writer, paragraphFormat[tabsProperty[this.keywordIndex]]);\n        }\n    };\n    WordExport.prototype.getOutlineLevelValue = function (outlineLvl) {\n        if (this.keywordIndex == 1) {\n            if (outlineLvl > 0) {\n                return outlineLvl - 1;\n            }\n        }\n        else {\n            if (outlineLvl.toString().indexOf('Level') !== -1) {\n                var lvlNumber = parseInt(outlineLvl.toString().substring(5), 10);\n                if (lvlNumber > 0) {\n                    return lvlNumber - 1;\n                }\n            }\n        }\n        return 9;\n    };\n    // Serialize Tabs\n    WordExport.prototype.serializeTabs = function (writer, tabStops) {\n        writer.writeStartElement('w', 'tabs', this.wNamespace);\n        for (var i = 0; i < tabStops.length; i++) {\n            this.serializeTab(writer, tabStops[i]);\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeTab = function (writer, tabStop) {\n        var position = 0;\n        writer.writeStartElement('w', 'tab', this.wNamespace);\n        if (tabStop[positionProperty[this.keywordIndex]] === 0 && tabStop[deletePositionProperty[this.keywordIndex]] !== 0) {\n            position = tabStop[deletePositionProperty[this.keywordIndex]] * this.twentiethOfPoint;\n            writer.writeAttributeString('w', 'val', this.wNamespace, 'clear');\n        }\n        else {\n            position = tabStop[positionProperty[this.keywordIndex]] * this.twentiethOfPoint;\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.getTabJustification(tabStop[tabJustificationProperty[this.keywordIndex]]));\n        }\n        if (!isNullOrUndefined(tabStop[tabLeaderProperty[this.keywordIndex]]) && (tabStop[tabLeaderProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None'))) {\n            writer.writeAttributeString('w', 'leader', this.wNamespace, this.getTabLeader(tabStop[tabLeaderProperty[this.keywordIndex]]));\n        }\n        if (!isNaN(position)) {\n            writer.writeAttributeString('w', 'pos', this.wNamespace, position.toString() + '');\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.getTextWrappingType = function (textWrappingType) {\n        switch (textWrappingType) {\n            case 0:\n                return 'bothSides';\n            case 1:\n                return 'left';\n            case 2:\n                return 'right';\n            case 3:\n                return 'largest';\n            default:\n                return 'bothSides';\n        }\n    };\n    WordExport.prototype.getTextWrappingStyle = function (textWrappingStyle) {\n        switch (textWrappingStyle) {\n            case 1:\n                return 'InFrontOfText';\n            case 2:\n                return 'Square';\n            case 3:\n                return 'TopAndBottom';\n            case 4:\n                return 'Behind';\n            default:\n                return 'Inline';\n        }\n    };\n    WordExport.prototype.getDateStorageFormat = function (dateStorageFormat) {\n        switch (dateStorageFormat) {\n            case 2:\n                return 'DateStorageDateTime';\n            case 3:\n                return 'DateStorageText';\n            default:\n                return 'DateStorageDate';\n        }\n    };\n    WordExport.prototype.getDateCalendarType = function (dateCalendarType) {\n        switch (dateCalendarType) {\n            case 1:\n                return 'GregorianArabic';\n            case 2:\n                return 'GregorianEnglish';\n            case 3:\n                return 'GregorianMiddleEastFrench';\n            case 4:\n                return 'GregorianTransliteratedEnglish';\n            case 5:\n                return 'GregorianTransliteratedFrench';\n            case 6:\n                return 'Hebrew';\n            case 7:\n                return 'Hijri';\n            case 8:\n                return 'Japan';\n            case 9:\n                return 'Korean';\n            case 10:\n                return 'Saka';\n            case 11:\n                return 'Taiwan';\n            case 12:\n                return 'Thai';\n            default:\n                return 'Gregorian';\n        }\n    };\n    WordExport.prototype.getContentControlAppearance = function (contentControlAppearance) {\n        switch (contentControlAppearance) {\n            case 2:\n                return 'Hidden';\n            case 3:\n                return 'Tags';\n            default:\n                return 'BoundingBox';\n        }\n    };\n    WordExport.prototype.getTextFormFieldFormat = function (textFormFieldFormat) {\n        switch (textFormFieldFormat) {\n            case 1:\n                return 'FirstCapital';\n            case 2:\n                return 'Lowercase';\n            case 3:\n                return 'Uppercase';\n            case 4:\n                return 'Titlecase';\n            default:\n                return 'None';\n        }\n    };\n    WordExport.prototype.getTextFormFieldType = function (textFormFieldType) {\n        switch (textFormFieldType) {\n            case 1:\n                return 'Number';\n            case 2:\n                return 'Date';\n            case 3:\n                return 'Calculation';\n            default:\n                return 'Text';\n        }\n    };\n    WordExport.prototype.getTabLeader = function (tabLeader) {\n        switch (tabLeader) {\n            case 'Dot':\n            case 2:\n                return 'dot';\n            case 'Hyphen':\n            case 3:\n                return 'hyphen';\n            case 'Underscore':\n            case 4:\n                return 'underscore';\n            default:\n                return 'none';\n        }\n    };\n    WordExport.prototype.getTabJustification = function (tabJustification) {\n        switch (tabJustification) {\n            case 'Bar':\n            case 0:\n                return 'left';\n            case 1:\n                return 'bar';\n            case 'Center':\n            case 2:\n                return 'center';\n            case 'Decimal':\n            case 3:\n                return 'decimal';\n            case 'Left':\n                return 'left';\n            case 'List':\n            case 4:\n                return 'num';\n            case 'Right':\n            case 5:\n                return 'right';\n            default:\n                return 'clear';\n        }\n    };\n    WordExport.prototype.getTableVerticalAlignment = function (tableVerticalPosition) {\n        switch (tableVerticalPosition) {\n            case 1:\n                return 'top';\n            case 2:\n                return 'center';\n            case 3:\n                return 'bottom';\n            case 4:\n                return 'inside';\n            case 5:\n                return 'outside';\n            default:\n                return 'none';\n        }\n    };\n    WordExport.prototype.getTableHorizontalAlignment = function (tableHorizontalPosition) {\n        switch (tableHorizontalPosition) {\n            case 1:\n                return 'center';\n            case 2:\n                return 'inside';\n            case 3:\n                return 'outside';\n            case 4:\n                return 'right';\n            default:\n                return 'left';\n        }\n    };\n    WordExport.prototype.getTableVerticalRelationEnumValue = function (tableRelation) {\n        switch (tableRelation) {\n            case 'Paragraph':\n                return 0;\n            case 'Margin':\n                return 1;\n            case 'Page':\n                return 2;\n            default:\n                return 0;\n        }\n    };\n    WordExport.prototype.getTableVerticalRelation = function (tableRelation) {\n        switch (tableRelation) {\n            case 1:\n                return 'Margin';\n            case 2:\n                return 'Page';\n            default:\n                return 'Paragraph';\n        }\n    };\n    WordExport.prototype.getTableHorizontalRelation = function (tableRelation) {\n        switch (tableRelation) {\n            case 1:\n                return 'Margin';\n            case 2:\n                return 'Page';\n            default:\n                return 'Column';\n        }\n    };\n    WordExport.prototype.getVerticalOrigin = function (verticalOrigin) {\n        switch (verticalOrigin) {\n            case 1:\n                return 'BottomMargin';\n            case 2:\n                return 'InsideMargin';\n            case 3:\n                return 'Line';\n            case 4:\n                return 'Margin';\n            case 5:\n                return 'OutsideMargin';\n            case 6:\n                return 'Page';\n            case 7:\n                return 'TopMargin';\n            default:\n                return 'Paragraph';\n        }\n    };\n    WordExport.prototype.getHorizontalOrigin = function (horizontalOrigin) {\n        switch (horizontalOrigin) {\n            case 1:\n                return 'Character';\n            case 2:\n                return 'InsideMargin';\n            case 3:\n                return 'LeftMargin';\n            case 4:\n                return 'Margin';\n            case 5:\n                return 'OutsideMargin';\n            case 6:\n                return 'Page';\n            case 7:\n                return 'RightMargin';\n            default:\n                return 'Column';\n        }\n    };\n    WordExport.prototype.getShapeVerticalAlignment = function (shapeVerticalAlignment) {\n        switch (shapeVerticalAlignment) {\n            case 1:\n                return 'Top';\n            case 2:\n                return 'Center';\n            case 3:\n                return 'Bottom';\n            case 4:\n                return 'Inline';\n            case 5:\n                return 'Inside';\n            case 6:\n                return 'Outside';\n            default:\n                return 'None';\n        }\n    };\n    WordExport.prototype.getShapeHorizontalAlignment = function (shapeHorizontalAlignment) {\n        switch (shapeHorizontalAlignment) {\n            case 1:\n                return 'Center';\n            case 2:\n                return 'Inside';\n            case 3:\n                return 'Left';\n            case 4:\n                return 'Outside';\n            case 5:\n                return 'Right';\n            default:\n                return 'None';\n        }\n    };\n    WordExport.prototype.getBiDirectionalOverride = function (biDirectionalOverride) {\n        switch (biDirectionalOverride) {\n            case 1:\n                return 'LTR';\n            case 2:\n                return 'RTL';\n            default:\n                return 'None';\n        }\n    };\n    WordExport.prototype.getBreakClearType = function (breakClearType) {\n        switch (breakClearType) {\n            case 0:\n                return 'None';\n            case 1:\n                return 'Left';\n            case 2:\n                return 'Right';\n            case 3:\n                return 'All';\n            default:\n                return breakClearType;\n        }\n    };\n    // // Seraializes the pargraph list format\n    // private serializeListParagraph(writer: XmlWriter, paragraph: any): void {\n    //     if (!isNullOrUndefined(paragraph.paragraphFormat.listFormat)) {\n    //         this.serializeListFormat(writer, paragraph.paragraphFormat.listFormat);\n    //     }\n    // }\n    // Serialize the list format\n    WordExport.prototype.serializeListFormat = function (writer, lf) {\n        // let pStyleName = undefined;\n        // if (lf.CurrentListStyle.IsBuiltInStyle && !isNullOrUndefined(lf.OwnerParagraph))\n        // {\n        //     pStyleName = lf.OwnerParagraph.StyleName;\n        // }\n        // int listId = GetListId(lf);\n        // if (!isNullOrUndefined(pStyleName) && string.IsNullOrEmpty(lf.LFOStyleName)) \n        // {\n        //     WordDocument doc = lf.OwnerParagraph.Document;\n        //     WParagraphStyle style = doc.Styles.FindByName(pStyleName, StyleType.ParagraphStyle) as WParagraphStyle;\n        //     if (style.ListIndex === -1)\n        //     {\n        //         ListStyle lstStyle = lf.OwnerParagraph.Document.ListStyles.FindByName(lf.CustomStyleName);\n        //         style.ListIndex = listId;\n        //         if (lstStyle.Levels.length > 1)\n        //         {\n        //             style.ListLevel = lf.ListLevelNumber;\n        //         }\n        //         pStyleName = pStyleName.Replace(' ', '');\n        //         lstStyle.Levels[lf.ListLevelNumber].ParaStyleName = pStyleName;\n        //     }\n        // }\n        // else\n        // {\n        // if (!isNullOrUndefined(lf.listId) && !isNullOrUndefined(lf.listLevelNumber)) {\n        //     this.serializeNumPr(writer, lf.listId, lf.listLevelNumber);\n        // }\n        // }\n        if (!isNullOrUndefined(lf[listIdProperty[this.keywordIndex]]) || !isNullOrUndefined(lf[listLevelNumberProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'numPr', this.wNamespace);\n            if (!isNullOrUndefined(lf[listLevelNumberProperty[this.keywordIndex]]) && lf[listLevelNumberProperty[this.keywordIndex]] !== -1) {\n                writer.writeStartElement(undefined, 'ilvl', this.wNamespace);\n                writer.writeAttributeString('w', 'val', this.wNamespace, lf[listLevelNumberProperty[this.keywordIndex]].toString());\n                writer.writeEndElement();\n            }\n            if (!isNullOrUndefined(lf[listIdProperty[this.keywordIndex]])) {\n                writer.writeStartElement(undefined, 'numId', this.wNamespace);\n                var listId = (lf[listIdProperty[this.keywordIndex]] + 1).toString();\n                // When attempting to open the exported document in tika server, the empty listId value is having trouble.So commented this below lines\n                // if (lf[listIdProperty[this.keywordIndex]] === -1) {\n                //     listId = '';\n                // }\n                writer.writeAttributeString('w', 'val', this.wNamespace, listId);\n                writer.writeEndElement();\n            }\n            writer.writeEndElement();\n        }\n    };\n    // // Serializes the numbering properties to the paragraph\n    // private serializeNumPr(writer: XmlWriter, listId: number, listLevel: number): void {\n    //     writer.writeStartElement(undefined, 'numPr', this.wNamespace);\n    //     if (listLevel !== -1) {\n    //         writer.writeStartElement(undefined, 'ilvl', this.wNamespace);\n    //         writer.writeAttributeString('w', 'val', this.wNamespace, listLevel.toString());\n    //         writer.writeEndElement();\n    //     }\n    //     if (listId !== -1) {\n    //         writer.writeStartElement(undefined, 'numId', this.wNamespace);\n    //         writer.writeAttributeString('w', 'val', this.wNamespace, listId.toString());\n    //         writer.writeEndElement();\n    //     }\n    //     writer.writeEndElement();\n    // }\n    WordExport.prototype.serializeParagraphAlignment = function (writer, txtAlignment, isBidi) {\n        if (!isNullOrUndefined(txtAlignment)) {\n            writer.writeStartElement(undefined, 'jc', this.wNamespace);\n            var alignment = void 0;\n            switch (txtAlignment) {\n                case 'Center':\n                case 1:\n                    alignment = 'center';\n                    break;\n                case 'Right':\n                case 2:\n                    alignment = 'right';\n                    break;\n                case 'Justify':\n                case 3:\n                    alignment = 'both';\n                    break;\n                default:\n                    alignment = 'left';\n                    break;\n            }\n            writer.writeAttributeString('w', 'val', this.wNamespace, alignment);\n            writer.writeEndElement();\n        }\n    };\n    // Serializes the paragraph spacings\n    WordExport.prototype.serializeParagraphSpacing = function (writer, paragraphFormat) {\n        writer.writeStartElement(undefined, 'spacing', this.wNamespace);\n        // if (paragraphFormat.HasValue(WParagraphFormat.BeforeLinesKey))\n        // {\n        //     short beforeLines = (short)Math.Round(paragraphFormat.BeforeLines * DLSConstants.HundredthsUnit);\n        //     writer.WriteAttributeString('beforeLines', this.wNamespace, ToString((float)beforeLines));               \n        // }\n        // if (paragraphFormat.HasValue(WParagraphFormat.AfterLinesKey))\n        // {\n        //     short afterLines = (short)Math.Round(paragraphFormat.AfterLines * DLSConstants.HundredthsUnit);\n        //     writer.WriteAttributeString('afterLines', this.wNamespace, ToString((float)afterLines));                 \n        // }\n        if (!isNullOrUndefined(paragraphFormat[beforeSpacingProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'before', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[beforeSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        }\n        if (!isNullOrUndefined(paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]])) {\n            var value = this.keywordIndex == 1 ? paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]].toString() : (paragraphFormat[spaceBeforeAutoProperty[this.keywordIndex]]) ? \"1\" : \"0\";\n            writer.writeAttributeString(undefined, 'beforeAutospacing', this.wNamespace, value);\n        }\n        //TODO:ISSUEFIX(paragraphFormat.beforeSpacing * this.twentiethOfPoint).toString());\n        // if (paragraphFormat.HasValue(WParagraphFormat.SpacingBeforeAutoKey))\n        // {\n        //     if (paragraphFormat.SpaceBeforeAuto)\n        //     {\n        //         writer.WriteAttributeString('beforeAutospacing', this.wNamespace, '1');\n        //     }\n        //     else\n        //     {\n        //         writer.WriteAttributeString('beforeAutospacing', this.wNamespace, '0');\n        //     }\n        // }\n        if (!isNullOrUndefined(paragraphFormat[afterSpacingProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'after', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[afterSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint).toString());\n        }\n        if (!isNullOrUndefined(paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]])) {\n            var value = this.keywordIndex == 1 ? paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]].toString() : (paragraphFormat[spaceAfterAutoProperty[this.keywordIndex]]) ? \"1\" : \"0\";\n            writer.writeAttributeString(undefined, 'afterAutospacing', this.wNamespace, value);\n        }\n        //TODO:ISSUEFIX(paragraphFormat.afterSpacing * this.twentiethOfPoint).toString());\n        // if (paragraphFormat.HasValue(WParagraphFormat.SpacingAfterAutoKey))\n        // {\n        //     if (paragraphFormat.SpaceAfterAuto)\n        //     {\n        //         writer.WriteAttributeString('afterAutospacing', this.wNamespace, '1');\n        //     }\n        //     else\n        //     {\n        //         writer.WriteAttributeString('afterAutospacing', this.wNamespace, '0');\n        //     }\n        // }\n        //TODO:ISSUEFIX((paragraphFormat.lineSpacing) * this.twentiethOfPoint).toString());\n        // lineSpacingType has enum values 0,1,2 for AtLeast, Exactly and Multiple respectively\n        if (!isNullOrUndefined(paragraphFormat[lineSpacingProperty[this.keywordIndex]])) {\n            var lineSpacingValue = (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'AtLeast') || paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Exactly')) ? this.roundToTwoDecimal(paragraphFormat[lineSpacingProperty[this.keywordIndex]] * this.twentiethOfPoint) : this.roundToTwoDecimal(paragraphFormat[lineSpacingProperty[this.keywordIndex]] * 240);\n            writer.writeAttributeString(undefined, 'line', this.wNamespace, lineSpacingValue.toString());\n        }\n        if (!isNullOrUndefined(paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]])) {\n            var lineSpacingType = 'auto';\n            if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'AtLeast')) {\n                lineSpacingType = 'atLeast';\n            }\n            else if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Exactly')) {\n                lineSpacingType = 'exact';\n            }\n            writer.writeAttributeString(undefined, 'lineRule', this.wNamespace, lineSpacingType);\n        }\n        writer.writeEndElement();\n    };\n    // Serializes the paragraph indentation\n    WordExport.prototype.serializeIndentation = function (writer, paragraphFormat) {\n        writer.writeStartElement(undefined, 'ind', this.wNamespace);\n        if (!isNullOrUndefined(paragraphFormat[leftIndentProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'left', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[leftIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n        }\n        if (!isNullOrUndefined(paragraphFormat[rightIndentProperty[this.keywordIndex]])) {\n            writer.writeAttributeString(undefined, 'right', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[rightIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n        }\n        if (!isNullOrUndefined(paragraphFormat[firstLineIndentProperty[this.keywordIndex]])) {\n            if (paragraphFormat[firstLineIndentProperty[this.keywordIndex]] < 0) {\n                writer.writeAttributeString(undefined, 'hanging', this.wNamespace, this.roundToTwoDecimal(-1 * paragraphFormat[firstLineIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n            }\n            else {\n                writer.writeAttributeString(undefined, 'firstLine', this.wNamespace, this.roundToTwoDecimal(paragraphFormat[firstLineIndentProperty[this.keywordIndex]] * this.twipsInOnePoint).toString());\n            }\n        }\n        writer.writeEndElement();\n    };\n    //creates custom xml mapping\n    WordExport.prototype.serializeCustomXMLMapping = function (customXML, writer) {\n        if (customXML.length > 0) {\n            var keys = customXML.keys;\n            for (var i = 0; i < keys.length; i++) {\n                var customXmlWriter = new XmlWriter();\n                customXmlWriter.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n                var xmlData = this.mCustomXML.get(keys[i]);\n                var itemID = keys[i];\n                var id = this.getNextRelationShipID();\n                var fileIndex = i + 1;\n                var itemPath = this.createXMLItem(xmlData, id, fileIndex);\n                var itemPropsPath = this.createXMLItemProps(itemID, fileIndex);\n                this.serializeRelationShip(writer, id, this.customXmlRelType, '../' + itemPath);\n                this.customXMLRelation(customXmlWriter, fileIndex, itemPropsPath);\n                customXmlWriter.writeEndElement();\n                var zipArchiveItem = new ZipArchiveItem(customXmlWriter.buffer, this.customXMLRelPath + fileIndex + '.xml.rels');\n                this.mArchive.addItem(zipArchiveItem);\n            }\n        }\n    };\n    WordExport.prototype.customXMLRelation = function (writer, fileIndex, itemPropsPath) {\n        this.serializeRelationShip(writer, 'rId1', this.wordMLCustomXmlPropsRelType, itemPropsPath);\n    };\n    WordExport.prototype.createXMLItem = function (xmlData, id, fileIndex) {\n        var xmlBlob = new Blob([xmlData], { type: 'text/plain' });\n        var itemPath = this.customXMLItemsPath + fileIndex + '.xml';\n        var zipArchiveItem = new ZipArchiveItem(xmlBlob, itemPath);\n        this.mArchive.addItem(zipArchiveItem);\n        return itemPath;\n    };\n    WordExport.prototype.createXMLItemProps = function (itemID, fileIndex) {\n        var writer = new XmlWriter();\n        var customitemPropsPath = this.customXMLItemsPropspath + fileIndex + '.xml';\n        var itemPropsPath = this.itemPropsPath + fileIndex + '.xml';\n        writer.writeStartElement('ds', 'datastoreItem', this.wNamespace);\n        writer.writeAttributeString('ds', 'itemID', undefined, itemID);\n        writer.writeAttributeString('xmlns', 'ds', undefined, this.dsNamespace);\n        writer.writeEndElement();\n        this.customXMLProps.push(customitemPropsPath);\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, customitemPropsPath);\n        this.mArchive.addItem(zipArchiveItem);\n        return itemPropsPath;\n    };\n    // Serialize the styles (styles.xml)\n    WordExport.prototype.serializeStyles = function () {\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'styles', this.wNamespace);\n        writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'w', undefined, this.wNamespace);\n        writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n        writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n        //writes the document defaults, latent styles and default styles.\n        this.serializeDefaultStyles(writer);\n        //writes the document styles\n        this.serializeDocumentStyles(writer);\n        writer.writeEndElement(); //end of styles tag\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.stylePath);\n        this.mArchive.addItem(zipArchiveItem); //this.stylePath, styleStream, false, FileAttributes.Archive);\n    };\n    // Serializes the default styles (document default paragraph and character format)\n    WordExport.prototype.serializeDefaultStyles = function (writer) {\n        writer.writeStartElement(undefined, 'docDefaults', this.wNamespace);\n        //if (HasDefaultCharFormat())\n        //{\n        writer.writeStartElement(undefined, 'rPrDefault', this.wNamespace);\n        // if (!isNullOrUndefined(this.mDocument.characterFormat)) {\n        this.serializeCharacterFormat(writer, this.defCharacterFormat);\n        writer.writeEndElement(); // end of rPrDefault\n        // }\n        // else {\n        //     writer.writeStartElement(undefined, 'rPr', this.wNamespace);\n        //     writer.writeStartElement(undefined, 'rFonts', this.wNamespace);\n        //     if (!string.IsNullOrEmpty(m_document.StandardAsciiFont))\n        //         writer.WriteAttributeString('ascii', this.wNamespace, m_document.StandardAsciiFont);\n        //     if (!string.IsNullOrEmpty(m_document.StandardFarEastFont))\n        //         writer.WriteAttributeString('eastAsia', this.wNamespace, m_document.StandardFarEastFont);\n        //     if (!string.IsNullOrEmpty(m_document.StandardNonFarEastFont))\n        //         writer.WriteAttributeString('hAnsi', this.wNamespace, m_document.StandardNonFarEastFont);\n        //     if (!string.IsNullOrEmpty(m_document.StandardBidiFont))\n        //         writer.WriteAttributeString('cs', this.wNamespace, m_document.StandardBidiFont);\n        //     writer.WriteEndElement();\n        //     float fontSize = GetDefFontSize(m_document, WCharacterFormat.FontSizeKey);\n        //     if (fontSize !== 0f)\n        //     {\n        //         writer.WriteStartElement('sz', this.wNamespace);\n        //         writer.WriteAttributeString('val', this.wNamespace, (fontSize * 2).ToString(CultureInfo.InvariantCulture));\n        //         writer.WriteEndElement();\n        //     }\n        //     fontSize = GetDefFontSize(m_document, WCharacterFormat.FontSizeBidiKey);\n        //     if (fontSize !== 0f)\n        //     {\n        //         writer.WriteStartElement('szCs', this.wNamespace);\n        //         writer.WriteAttributeString('val', this.wNamespace, (fontSize * 2).ToString(CultureInfo.InvariantCulture));\n        //         writer.WriteEndElement();\n        //     }\n        //     writer.WriteEndElement();\n        // }\n        // writer.WriteEndElement();\n        // //}\n        writer.writeStartElement(undefined, 'pPrDefault', this.wNamespace);\n        if (!isNullOrUndefined(this.defParagraphFormat)) {\n            writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n            this.serializeParagraphFormat(writer, this.defParagraphFormat, undefined);\n            writer.writeEndElement(); //end of pPr\n        }\n        writer.writeEndElement(); //end of pPrDefault\n        // writer.WriteEndElement();\n        // SerializeLatentStyles();\n        // //Default styles\n        // if (m_document.Styles.length === 0 || isNullOrUndefined(m_document.Styles.FindByName('Normal')))\n        // {\n        //     SerializeDefaultParagraphStyle();\n        // }\n        // if (!IsDocumentContainsDefaultTableStyle())\n        // {\n        //     SerializeTableNormalStyle();\n        // }\n        // if (isNullOrUndefined(m_document.Styles.FindByName('No List')) && isNullOrUndefined(m_document.Styles.FindByName('NoList')))\n        //     SerializeNoListStyle();\n        // if (isNullOrUndefined(m_document.Styles.FindByName('Table Grid')) && isNullOrUndefined(m_document.Styles.FindByName('TableGrid')))\n        // {\n        //     SerializeTableGridStyle();\n        // }\n        // }        \n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeDocumentStyles = function (writer) {\n        for (var i = 0; i < this.mStyles.length; i++) {\n            var style = this.mStyles[i];\n            writer.writeStartElement(undefined, 'style', this.wNamespace);\n            var type = this.getStyleType(style[typeProperty[this.keywordIndex]]);\n            writer.writeAttributeString('w', 'type', this.wNamespace, type);\n            writer.writeAttributeString('w', 'styleId', this.wNamespace, style[nameProperty[this.keywordIndex]]);\n            //name\n            writer.writeStartElement(undefined, 'name', this.wNamespace);\n            var list = [\"TOC 1\", \"TOC 2\", \"TOC 3\", \"TOC 4\", \"TOC 5\", \"TOC 6\", \"TOC 7\", \"TOC 8\", \"TOC 9\"];\n            if (list.indexOf(style[nameProperty[this.keywordIndex]]) != -1) {\n                writer.writeAttributeString('w', 'val', this.wNamespace, style[nameProperty[this.keywordIndex]].toLowerCase());\n            }\n            else {\n                writer.writeAttributeString('w', 'val', this.wNamespace, style[nameProperty[this.keywordIndex]]);\n            }\n            writer.writeEndElement();\n            //basedOn\n            if (!isNullOrUndefined(style[basedOnProperty[this.keywordIndex]])) {\n                writer.writeStartElement(undefined, 'basedOn', this.wNamespace);\n                writer.writeAttributeString('w', 'val', this.wNamespace, style[basedOnProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            //next\n            if (!isNullOrUndefined(style[nextProperty[this.keywordIndex]])) {\n                writer.writeStartElement(undefined, 'next', this.wNamespace);\n                writer.writeAttributeString('w', 'val', this.wNamespace, style[nextProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            //link\n            if (!isNullOrUndefined(style[linkProperty[this.keywordIndex]])) {\n                writer.writeStartElement(undefined, 'link', this.wNamespace);\n                writer.writeAttributeString('w', 'val', this.wNamespace, style[linkProperty[this.keywordIndex]]);\n                writer.writeEndElement();\n            }\n            if (style[typeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Paragraph')) {\n                writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n                this.serializeParagraphFormat(writer, style[paragraphFormatProperty[this.keywordIndex]], undefined);\n                writer.writeEndElement();\n            }\n            // let value = (style.characterFormat as WCharacterFormat).newgetCharacterFormat();\n            if (style[typeProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 2 : 'Table')) {\n                this.serializeCharacterFormat(writer, style[characterFormatProperty[this.keywordIndex]]);\n            }\n            writer.writeEndElement(); //end of Style\n        }\n    };\n    // Serializes the Character format\n    WordExport.prototype.serializeCharacterFormat = function (writer, characterFormat) {\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = 0;\n        }\n        writer.writeStartElement(undefined, 'rPr', this.wNamespace);\n        if (!isNullOrUndefined(characterFormat[styleNameProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'rStyle', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, characterFormat[styleNameProperty[this.keywordIndex]]);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[fontFamilyProperty[this.keywordIndex]]) || !isNullOrUndefined(characterFormat[fontFamilyBidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'rFonts', this.wNamespace);\n            if (!isNullOrUndefined(characterFormat[fontFamilyAsciiProperty[this.keywordIndex]])) {\n                var key = HelperMethods.isThemeFont(characterFormat[fontFamilyAsciiProperty[this.keywordIndex]]) ? 'asciiTheme' : 'ascii';\n                writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyAsciiProperty[this.keywordIndex]]);\n            }\n            if (!isNullOrUndefined(characterFormat[fontFamilyFarEastProperty[this.keywordIndex]])) {\n                var key = HelperMethods.isThemeFont(characterFormat[fontFamilyFarEastProperty[this.keywordIndex]]) ? 'eastAsiaTheme' : 'eastAsia';\n                writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyFarEastProperty[this.keywordIndex]]);\n            }\n            if (!isNullOrUndefined(characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]])) {\n                var key = HelperMethods.isThemeFont(characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]]) ? 'hAnsiTheme' : 'hAnsi';\n                writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyNonFarEastProperty[this.keywordIndex]]);\n            }\n            if (!isNullOrUndefined(characterFormat[fontFamilyBidiProperty[this.keywordIndex]])) {\n                var key = HelperMethods.isThemeFont(characterFormat[fontFamilyBidiProperty[this.keywordIndex]]) ? 'cstheme' : 'cs';\n                writer.writeAttributeString(undefined, key, this.wNamespace, characterFormat[fontFamilyBidiProperty[this.keywordIndex]]);\n            }\n            writer.writeEndElement(); //end         \n        }\n        if (!isNullOrUndefined(characterFormat[boldProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'b', HelperMethods.parseBoolValue(characterFormat[boldProperty[this.keywordIndex]]));\n        }\n        if (HelperMethods.parseBoolValue(characterFormat[boldBidiProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'bCs', HelperMethods.parseBoolValue(characterFormat[boldBidiProperty[this.keywordIndex]]));\n        }\n        if (!isNullOrUndefined(characterFormat[italicProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'i', HelperMethods.parseBoolValue(characterFormat[italicProperty[this.keywordIndex]]));\n        }\n        if (!isNullOrUndefined(characterFormat[italicBidiProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'iCs', HelperMethods.parseBoolValue(characterFormat[italicBidiProperty[this.keywordIndex]]));\n        }\n        if (HelperMethods.parseBoolValue(characterFormat[bidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'rtl', this.wNamespace);\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[allCapsProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'caps', HelperMethods.parseBoolValue(characterFormat[allCapsProperty[this.keywordIndex]]));\n        }\n        if (HelperMethods.parseBoolValue(characterFormat[complexScriptProperty[this.keywordIndex]])) {\n            this.serializeBoolProperty(writer, 'cs', HelperMethods.parseBoolValue(characterFormat[complexScriptProperty[this.keywordIndex]]));\n        }\n        if (!isNullOrUndefined(characterFormat[strikethroughProperty[this.keywordIndex]])) {\n            switch (characterFormat[strikethroughProperty[this.keywordIndex]]) {\n                case 'SingleStrike':\n                case 1:\n                    this.serializeBoolProperty(writer, 'strike', true);\n                    break;\n                case 'DoubleStrike':\n                case 2:\n                    this.serializeBoolProperty(writer, 'dstrike', true);\n                    break;\n                default:\n                    this.serializeBoolProperty(writer, 'strike', false);\n                    this.serializeBoolProperty(writer, 'dstrike', false);\n                    break;\n            }\n        }\n        if (!isNullOrUndefined(characterFormat[fontColorProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'color', this.wNamespace);\n            // \"empty\" is old value used for auto color till v19.2.49. It is maintained for backward compatibility.\n            if (characterFormat[fontColorProperty[this.keywordIndex]] === 'empty' || characterFormat[fontColorProperty[this.keywordIndex]] === '#00000000') {\n                writer.writeAttributeString('w', 'val', this.wNamespace, 'auto');\n            }\n            else {\n                writer.writeAttributeString('w', 'val', this.wNamespace, this.getColor(characterFormat[fontColorProperty[this.keywordIndex]]));\n            }\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[fontSizeProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'sz', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.roundToTwoDecimal(characterFormat[fontSizeProperty[this.keywordIndex]] * 2).toString());\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[characterSpacingProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'spacing', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, (characterFormat[characterSpacingProperty[this.keywordIndex]] * 20).toString());\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[scalingProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'w', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, (characterFormat[scalingProperty[this.keywordIndex]]).toString());\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[fontSizeBidiProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'szCs', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.roundToTwoDecimal(characterFormat[fontSizeBidiProperty[this.keywordIndex]] * 2).toString());\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[highlightColorProperty[this.keywordIndex]]) && characterFormat[highlightColorProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'NoColor')) {\n            writer.writeStartElement(undefined, 'highlight', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.getHighlightColor(characterFormat[highlightColorProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[revisionIdsProperty[this.keywordIndex]]) && characterFormat[revisionIdsProperty[this.keywordIndex]].length > 0) {\n            this.serializeRevisionStart(writer, characterFormat, undefined);\n            this.serializeRevisionEnd(writer, characterFormat, undefined);\n        }\n        if (!isNullOrUndefined(characterFormat[underlineProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'u', this.wNamespace);\n            writer.writeAttributeString('w', 'val', this.wNamespace, this.getUnderlineStyle(characterFormat[underlineProperty[this.keywordIndex]]));\n            writer.writeEndElement();\n        }\n        if (!isNullOrUndefined(characterFormat[baselineAlignmentProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'vertAlign', this.wNamespace);\n            switch (characterFormat[baselineAlignmentProperty[this.keywordIndex]]) {\n                case 'Superscript':\n                case 1:\n                    writer.writeAttributeString('w', 'val', this.wNamespace, 'superscript');\n                    break;\n                case 'Subscript':\n                case 2:\n                    writer.writeAttributeString('w', 'val', this.wNamespace, 'subscript');\n                    break;\n                default:\n                    writer.writeAttributeString('w', 'val', this.wNamespace, 'baseline');\n                    break;\n            }\n            writer.writeEndElement();\n        }\n        writer.writeEndElement(); //end of rPrChange\n    };\n    WordExport.prototype.getColor = function (color) {\n        if (color.length > 0) {\n            if (color[0] === '#') {\n                color = color.substr(1);\n            }\n            if (color.length > 6) {\n                color = color.substr(0, 6);\n            }\n        }\n        return color;\n    };\n    WordExport.prototype.getStyleType = function (styleType) {\n        switch (styleType) {\n            case 'Character':\n            case 1:\n                return 'character';\n            case 'Table':\n            case 2:\n                return 'table';\n            default:\n                return 'paragraph';\n        }\n    };\n    // Get the underline style as string\n    WordExport.prototype.getUnderlineStyle = function (underlineStyle) {\n        switch (underlineStyle) {\n            case 'None':\n            case 0:\n                return 'none';\n            case 'Single':\n            case 1:\n                return 'single';\n            case 'Words':\n            case 2:\n                return 'words';\n            case 'Double':\n            case 3:\n                return 'double';\n            case 'Dotted':\n            case 4:\n                return 'dotted';\n            case 'Thick':\n            case 5:\n                return 'thick';\n            case 6:\n                return 'dash';\n            case 'DashLong':\n            case 7:\n                return 'dashLong';\n            case 'DotDash':\n            case 8:\n                return 'dotDash';\n            case 'DotDotDash':\n            case 9:\n                return 'dotDotDash';\n            case 'Wavy':\n            case 10:\n                return 'wave';\n            case 'DottedHeavy':\n            case 11:\n                return 'dottedHeavy';\n            case 'DashHeavy':\n            case 12:\n                return 'dashedHeavy';\n            case 'DashLongHeavy':\n            case 13:\n                return 'dashLongHeavy';\n            case 'DotDashHeavy':\n            case 14:\n                return 'dashDotHeavy';\n            case 'DotDotDashHeavy':\n            case 15:\n                return 'dashDotDotHeavy';\n            case 'WavyHeavy':\n            case 16:\n                return 'wavyHeavy';\n            case 'WavyDouble':\n            case 17:\n                return 'wavyDouble';\n            default:\n                return 'dash';\n        }\n    };\n    WordExport.prototype.getHighlightColor = function (highlight) {\n        switch (highlight) {\n            // Highlights the content with bright green (#ff00ff00) color.\n            case 'BrightGreen':\n            case 2:\n                return 'green';\n            // Highlights the content with turquoise (#ff00ffff) color.\n            case 'Turquoise':\n            case 3:\n                return 'cyan';\n            // Highlights the content with pink (#ffff00ff) color.\n            case 'Pink':\n            case 4:\n                return 'magenta';\n            // Highlights the content with blue (#ff0000ff) color.\n            case 'Blue':\n            case 5:\n                return 'blue';\n            // Highlights the content with red (#ffff0000) color.\n            case 'Red':\n            case 6:\n                return 'red';\n            // Highlights the content with dark blue (#ff000080) color.\n            case 'DarkBlue':\n            case 7:\n                return 'darkBlue';\n            // Highlights the content with teal (#ff008080) color.\n            case 'Teal':\n            case 8:\n                return 'darkCyan';\n            // Highlights the content with green (#ff008000) color.\n            case 'Green':\n            case 9:\n                return 'darkGreen';\n            // Highlights the content with violet (#ff800080) color.\n            case 'Violet':\n            case 10:\n                return 'darkMagenta';\n            // Highlights the content with dark red (#ff800000) color.\n            case 'DarkRed':\n            case 11:\n                return 'darkRed';\n            // Highlights the content with dark yellow (#ff808000)  color.\n            case 'DarkYellow':\n            case 12:\n                return 'darkYellow';\n            // Highlights the content with gray 50 (#ff808080) color.\n            case 'Gray50':\n            case 13:\n                return 'darkGray';\n            // Highlights the content with gray 25 (#ffc0c0c0) color.\n            case 'Gray25':\n            case 14:\n                return 'lightGray';\n            // Highlights the content with black (#ff000000) color.\n            case 'Black':\n            case 15:\n                return 'black';\n            // Highlights the content with yellow (#ffffff00) color.\n            default:\n                return 'yellow';\n        }\n    };\n    /*private toggleFirstCahar(text: string) {\n        return text.charAt(0).toLowerCase() + text.slice(1);\n    }*/\n    // Serializes the bool character format property\n    WordExport.prototype.serializeBoolProperty = function (writer, tag, value) {\n        writer.writeStartElement(undefined, tag, this.wNamespace);\n        if (!value) {\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, '0');\n        }\n        writer.writeEndElement();\n    };\n    // Serialize the list styles and numberings (numberings.xml)\n    WordExport.prototype.serializeNumberings = function () {\n        if (this.document[listsProperty[this.keywordIndex]].length === 0) {\n            return;\n        }\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'numbering', this.wNamespace);\n        this.writeCommonAttributeStrings(writer);\n        // this.serializePictureBullets(writer, this.mDocument.lists);\n        this.serializeAbstractListStyles(writer, this.document[abstractListsProperty[this.keywordIndex]]);\n        this.serializeListInstances(writer, this.document[listsProperty[this.keywordIndex]]);\n        // SerializeListOverrides(writer, this.mDocument.ridesm_document.ListOverrides);\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.numberingPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    // Serializes the abstract list styles\n    WordExport.prototype.serializeAbstractListStyles = function (writer, listStyles) {\n        for (var i = 0; i < listStyles.length; i++) {\n            var abstractList = listStyles[i];\n            writer.writeStartElement(undefined, 'abstractNum', this.wNamespace);\n            writer.writeAttributeString(undefined, 'abstractNumId', this.wNamespace, abstractList[abstractListIdProperty[this.keywordIndex]].toString());\n            writer.writeStartElement(undefined, 'nsid', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, this.generateHex());\n            writer.writeEndElement();\n            for (var ilvl = 0, cnt = abstractList[levelsProperty[this.keywordIndex]].length; ilvl < cnt; ilvl++) {\n                this.serializeListLevel(writer, abstractList[levelsProperty[this.keywordIndex]][ilvl], ilvl);\n            }\n            writer.writeEndElement(); //end of abstractNum\n        }\n    };\n    // Serializes the list styles\n    WordExport.prototype.serializeListInstances = function (writer, listStyles) {\n        for (var i = 0; i < listStyles.length; i++) {\n            var list = listStyles[i];\n            writer.writeStartElement(undefined, 'num', this.wNamespace);\n            writer.writeAttributeString(undefined, 'numId', this.wNamespace, (list[listIdProperty[this.keywordIndex]] + 1).toString());\n            writer.writeStartElement(undefined, 'abstractNumId', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, list[abstractListIdProperty[this.keywordIndex]].toString());\n            writer.writeEndElement();\n            for (var lvl = 0, cnt = list[levelOverridesProperty[this.keywordIndex]].length; lvl < cnt; lvl++) {\n                this.serializeLevelOverrides(writer, list[levelOverridesProperty[this.keywordIndex]][lvl], list[levelOverridesProperty[this.keywordIndex]][lvl][levelNumberProperty[this.keywordIndex]]);\n            }\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.generateHex = function () {\n        return (Math.floor(Math.random() * (4000000000 - 270000000)) + 270000000).toString(16).toUpperCase();\n    };\n    WordExport.prototype.roundToTwoDecimal = function (num) {\n        return Math.round(num); // * 100) / 100;\n    };\n    // Serialize the list level\n    WordExport.prototype.serializeListLevel = function (writer, listLevel, levelIndex) {\n        writer.writeStartElement(undefined, 'lvl', this.wNamespace);\n        writer.writeAttributeString(undefined, 'ilvl', this.wNamespace, levelIndex.toString());\n        if (!isNullOrUndefined(listLevel[isLegalStyleNumberingProperty[this.keywordIndex]]) && listLevel[isLegalStyleNumberingProperty[this.keywordIndex]]) {\n            writer.writeElementString(undefined, 'isLgl', this.wNamespace, undefined);\n        }\n        writer.writeStartElement(undefined, 'start', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[startAtProperty[this.keywordIndex]].toString());\n        writer.writeEndElement();\n        writer.writeStartElement(undefined, 'numFmt', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, this.getLevelPattern(listLevel[listLevelPatternProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n        if (!isNullOrUndefined(listLevel[paraStyleNameProperty[this.keywordIndex]]) && listLevel[paraStyleNameProperty[this.keywordIndex]].toString() !== '') {\n            writer.writeStartElement(undefined, 'pStyle', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[paraStyleNameProperty[this.keywordIndex]].toString());\n            writer.writeEndElement();\n        }\n        // if (listLevel.restartLevel > 0) {\n        //     writer.writeStartElement(undefined, 'lvlRestart', this.wNamespace);\n        //     writer.writeAttributeString(undefined, 'val', this.wNamespace, '0');\n        //     writer.writeEndElement();\n        // }\n        // if (!isNullOrUndefined(listLevel.paragraphFormat)) {\n        //     string name = listLevel.ParaStyleName.Substring(0, 1).ToUpper() + listLevel.ParaStyleName.Remove(0, 1);\n        //     writer.WriteStartElement('pStyle', this.wNamespace);\n        //     writer.WriteAttributeString('val', this.wNamespace, name);\n        //     writer.WriteEndElement();\n        // }\n        // if (listLevel.IsLegalStyleNumbering) {\n        //     writer.WriteStartElement('isLgl', this.wNamespace);\n        //     writer.WriteEndElement();\n        // }\n        this.serializeLevelFollow(writer, listLevel);\n        this.serializeLevelText(writer, listLevel, levelIndex + 1);\n        // SerializeLegacyProperties(listLevel);\n        // if (listLevel.PicBulletId > 0) {\n        //     writer.WriteStartElement('lvlPicBulletId', this.wNamespace);\n        //     writer.WriteAttributeString('val', this.wNamespace, listLevel.PicBulletId.ToString());\n        //     writer.WriteEndElement();\n        // }\n        // //lvlJc\n        // if (listLevel.NumberAlignment !== ListNumberAlignment.Left) {\n        //     writer.WriteStartElement('lvlJc', this.wNamespace);\n        //     string alignment = string.Empty;\n        //     if (listLevel.NumberAlignment === ListNumberAlignment.Right) {\n        //         alignment = 'right';\n        //     }\n        //     else {\n        //         alignment = 'center';\n        //     }\n        //     writer.WriteAttributeString('val', this.wNamespace, alignment);\n        //     writer.WriteEndElement();\n        // }\n        writer.writeStartElement(undefined, 'pPr', this.wNamespace);\n        this.serializeParagraphFormat(writer, listLevel[paragraphFormatProperty[this.keywordIndex]], undefined);\n        writer.writeEndElement(); //end of pPr\n        this.serializeCharacterFormat(writer, listLevel[characterFormatProperty[this.keywordIndex]]);\n        writer.writeEndElement();\n    };\n    //Serialize the levelOverrides\n    WordExport.prototype.serializeLevelOverrides = function (writer, listLevel, levelIndex) {\n        writer.writeStartElement(undefined, 'lvlOverride', this.wNamespace);\n        writer.writeAttributeString(undefined, 'ilvl', this.wNamespace, levelIndex.toString());\n        if (!isNullOrUndefined(listLevel[overrideListLevelProperty[this.keywordIndex]]))\n            this.serializeListLevel(writer, listLevel[overrideListLevelProperty[this.keywordIndex]], levelIndex);\n        if (!isNullOrUndefined(listLevel[startAtProperty[this.keywordIndex]])) {\n            writer.writeStartElement(undefined, 'startOverride', this.wNamespace);\n            writer.writeAttributeString(undefined, 'val', this.wNamespace, listLevel[startAtProperty[this.keywordIndex]].toString());\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.getLevelPattern = function (levelPattern) {\n        var patternType;\n        switch (levelPattern) {\n            case 'None':\n            case 0:\n                patternType = 'none';\n                break;\n            case 'Arabic':\n            case 1:\n                patternType = 'decimal';\n                break;\n            case 'UpRoman':\n            case 2:\n                patternType = 'upperRoman';\n                break;\n            case 'LowRoman':\n            case 3:\n                patternType = 'lowerRoman';\n                break;\n            case 'UpLetter':\n            case 4:\n                patternType = 'upperLetter';\n                break;\n            case 'LowLetter':\n            case 5:\n                patternType = 'lowerLetter';\n                break;\n            case 'Ordinal':\n            case 6:\n                patternType = 'ordinal';\n                break;\n            case 'Number':\n            case 7:\n                patternType = 'cardinalText';\n                break;\n            case 'OrdinalText':\n            case 8:\n                patternType = 'ordinalText';\n                break;\n            case 'LeadingZero':\n            case 9:\n                patternType = 'decimalZero';\n                break;\n            case 'FarEast':\n            case 11:\n                patternType = 'aiueoFullWidth';\n                break;\n            case 'Special':\n            case 12:\n                patternType = 'russianLower';\n                break;\n            // case 'Bullet':\n            default:\n                patternType = 'bullet';\n                break;\n        }\n        return patternType;\n    };\n    // Serializes the level text\n    WordExport.prototype.serializeLevelText = function (writer, listLevel, lvlIndex) {\n        writer.writeStartElement(undefined, 'lvlText', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, (listLevel[numberFormatProperty[this.keywordIndex]]));\n        writer.writeEndElement();\n    };\n    // Serialize the level follow character\n    WordExport.prototype.serializeLevelFollow = function (writer, listLevel) {\n        var fc;\n        //TODO:Type issue returns number instead of string\n        if (listLevel[followCharacterProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Tab')) {\n            fc = 'tab';\n        }\n        else if (listLevel[followCharacterProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Space')) {\n            fc = 'space';\n        }\n        else {\n            fc = 'nothing';\n        }\n        writer.writeStartElement(undefined, 'suff', this.wNamespace);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, fc);\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeThemeFontLang = function (writer) {\n        var isLanguageIdBi = this.themeFontLang[localeIdBidiProperty[this.keywordIndex]] > 0;\n        var isLanguageId = this.themeFontLang[localeIdProperty[this.keywordIndex]] > 0;\n        var isLanguageIdFarEast = this.themeFontLang[localeIdFarEastProperty[this.keywordIndex]] > 0;\n        if (isLanguageId || isLanguageIdFarEast || isLanguageIdBi) {\n            writer.writeStartElement('w', 'themeFontLang', undefined);\n            if (isLanguageId) {\n                var ascii = LocaleId[this.themeFontLang[localeIdProperty[this.keywordIndex]]];\n                writer.writeAttributeString('w', 'val', undefined, ascii.replace('_', '-')); //Ascii key\n            }\n            if (isLanguageIdBi) {\n                var bidi = LocaleId[this.themeFontLang[localeIdBidiProperty[this.keywordIndex]]];\n                writer.writeAttributeString('w', 'bidi', undefined, bidi.replace('_', '-')); //Bidi key\n            }\n            if (isLanguageIdFarEast) {\n                var farEast = LocaleId[this.themeFontLang[localeIdFarEastProperty[this.keywordIndex]]];\n                writer.writeAttributeString('w', 'eastAsia', undefined, farEast.replace('_', '-')); //EastAsia key\n            }\n            writer.writeEndElement();\n        }\n    };\n    WordExport.prototype.serializeDocumentProtectionSettings = function (writer) {\n        writer.writeStartElement('w', 'documentProtection', this.wNamespace);\n        if (this.formatting) {\n            writer.writeAttributeString('w', 'formatting', this.wNamespace, '1');\n        }\n        if (this.protectionType && this.protectionType !== 0) {\n            var editMode = void 0;\n            switch (this.protectionType) {\n                case 'ReadOnly':\n                case 1:\n                    editMode = 'readOnly';\n                    break;\n                case 'FormFieldsOnly':\n                case 2:\n                    editMode = 'forms';\n                    break;\n                case 'CommentsOnly':\n                case 3:\n                    editMode = 'comments';\n                    break;\n                case 'RevisionsOnly':\n                case 4:\n                    editMode = 'trackedChanges';\n                    break;\n            }\n            writer.writeAttributeString('w', 'edit', this.wNamespace, editMode);\n        }\n        writer.writeAttributeString('w', 'cryptProviderType', this.wNamespace, 'rsaAES');\n        writer.writeAttributeString('w', 'cryptAlgorithmClass', this.wNamespace, 'hash');\n        writer.writeAttributeString('w', 'cryptAlgorithmType', this.wNamespace, 'typeAny');\n        writer.writeAttributeString('w', 'cryptAlgorithmSid', this.wNamespace, '14');\n        writer.writeAttributeString('w', 'cryptSpinCount', this.wNamespace, '100000');\n        if (this.enforcement) {\n            writer.writeAttributeString('w', 'enforcement', this.wNamespace, '1');\n        }\n        if (this.hashValue) {\n            writer.writeAttributeString('w', 'hash', this.wNamespace, this.hashValue);\n        }\n        if (this.saltValue) {\n            writer.writeAttributeString('w', 'salt', this.wNamespace, this.saltValue);\n        }\n        writer.writeEndElement();\n    };\n    WordExport.prototype.serializeSettings = function () {\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'settings', this.wNamespace);\n        this.writeCustom(writer);\n        // writer.writeAttributeString('xmlns', 'mc', undefined, this.veNamespace);\n        // writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n        // writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        // writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n        // writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n        writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n        writer.writeAttributeString('xmlns', 'w14', undefined, this.w14Namespace);\n        writer.writeAttributeString('xmlns', 'w15', undefined, this.w15Namespace);\n        writer.writeAttributeString('xmlns', 'sl', undefined, this.slNamespace);\n        writer.writeAttributeString('mc', 'Ignorable', undefined, 'w14 w15');\n        // //w:writeProtection - Write Protection\n        this.serializeDocumentProtectionSettings(writer);\n        //w:view - Document View Setting\n        // if (this.mDocument.ViewSetup.DocumentViewType !== DocumentViewType.PrintLayout &&\n        //   m_document.ViewSetup.DocumentViewType !== DocumentViewType.NormalLayout)\n        // {\n        //     writer.writeStartElement('view', this.wNamespace);\n        //     string viewTypeStr = string.Empty;\n        //     if (m_document.ViewSetup.DocumentViewType === DocumentViewType.OutlineLayout)\n        //     {\n        //         viewTypeStr = 'outline';\n        //     }\n        //     else if (m_document.ViewSetup.DocumentViewType === DocumentViewType.WebLayout)\n        //     {\n        //         viewTypeStr = 'web';\n        //     }\n        //     writer.writeAttributeString('val', this.wNamespace, viewTypeStr);\n        //     writer.writeEndElement();\n        // }\n        //w:zoom - Magnification Setting\n        writer.writeStartElement('w', 'zoom', this.wNamespace);\n        // switch (m_document.ViewSetup.ZoomType)\n        // {\n        //     case ZoomType.FullPage:\n        //         writer.writeAttributeString('w', 'val', this.wNamespace, 'fullPage');\n        //         break;\n        //     case ZoomType.PageWidth:\n        //         writer.writeAttributeString('w', 'val', this.wNamespace, 'bestFit');\n        //         break;\n        //     case ZoomType.TextFit:\n        //         writer.writeAttributeString('w', 'val', this.wNamespace, 'textFit');\n        //         break;\n        // default:\n        writer.writeAttributeString('w', 'val', this.wNamespace, 'none');\n        // break;\n        // }\n        writer.writeAttributeString('w', 'percent', this.wNamespace, '100');\n        writer.writeEndElement();\n        //<w:themeFontLang>\n        this.serializeThemeFontLang(writer);\n        //w:displayBackgroundShape - Display Background Objects When Displaying Document\n        // if (m_document.Background.Type !== BackgroundType.NoBackground)\n        // {\n        writer.writeStartElement(undefined, 'displayBackgroundShape', this.wNamespace);\n        writer.writeEndElement();\n        // }\n        //w:defaultTabStop - Distance Between Automatic Tab Stops\n        writer.writeStartElement(undefined, 'defaultTabStop', this.wNamespace);\n        var tabWidth = Math.round(this.defaultTabWidthValue * this.twipsInOnePoint);\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, tabWidth.toString());\n        writer.writeEndElement();\n        if (this.trackChanges) {\n            writer.writeStartElement(undefined, 'trackRevisions', this.wNamespace);\n            writer.writeEndElement();\n        }\n        //w:evenAndOddHeaders - Different Even/Odd Page Headers and Footers        \n        if (this.mDifferentFirstPage) {\n            writer.writeStartElement(undefined, 'evenAndOddHeaders', this.wNamespace);\n            writer.writeEndElement();\n        }\n        //w:footnotePr - Document-Wide Footnote Properties and w:endnotePr - Document-Wide Endnote Properties\n        // SerializeFootnoteSettings();\n        //w:compat - Compatibility Settings\n        if (!this.formFieldShading) {\n            writer.writeStartElement(undefined, 'doNotShadeFormData', this.wNamespace);\n            writer.writeEndElement();\n        }\n        writer.writeStartElement(undefined, 'compat', this.wNamespace);\n        if (this.dontUseHtmlParagraphAutoSpacing) {\n            this.serializeBoolProperty(writer, 'doNotUseHTMLParagraphAutoSpacing', this.dontUseHtmlParagraphAutoSpacing);\n        }\n        if (this.allowSpaceOfSameStyleInTable) {\n            this.serializeBoolProperty(writer, 'allowSpaceOfSameStyleInTable', this.allowSpaceOfSameStyleInTable);\n        }\n        writer.writeStartElement(undefined, 'compatSetting', this.wNamespace);\n        writer.writeAttributeString(undefined, 'name', this.wNamespace, 'compatibilityMode');\n        writer.writeAttributeString(undefined, 'uri', this.wNamespace, 'http://schemas.microsoft.com/office/word');\n        var compatValue = this.keywordIndex === 1 ? HelperMethods.getCompatibilityModeValue(this.compatibilityMode) : HelperMethods.getCompatibilityModeValue(this.getCompatibilityModeEnumValue(this.compatibilityMode.toString()));\n        writer.writeAttributeString(undefined, 'val', this.wNamespace, compatValue);\n        writer.writeEndElement();\n        writer.writeEndElement();\n        if (this.document[footnotesProperty[this.keywordIndex]]) {\n            //this.serializeFootNotesPr(writer, this.document.section.sectionFormat);\n            writer.writeStartElement(undefined, 'footnotePr', this.wNamespace);\n            writer.writeStartElement(undefined, 'footnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'footnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n        if (this.document[endnotesProperty[this.keywordIndex]]) {\n            // this.serializeEndNotesPr(writer, this.document.section.sectionFormat);\n            writer.writeStartElement(undefined, 'endnotePr', this.wNamespace);\n            writer.writeStartElement(undefined, 'endnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '-1');\n            writer.writeEndElement();\n            writer.writeStartElement(undefined, 'endnote', this.wNamespace);\n            writer.writeAttributeString(undefined, 'id', this.wNamespace, '0');\n            writer.writeEndElement();\n            writer.writeEndElement();\n        }\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.settingsPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeCoreProperties = function () {\n        //implementation\n    };\n    WordExport.prototype.serializeAppProperties = function () {\n        //implementation\n    };\n    WordExport.prototype.serializeFontTable = function (contentType) {\n        //implementation\n    };\n    WordExport.prototype.serializeSettingsRelation = function () {\n        //implementation\n    };\n    WordExport.prototype.getCompatibilityModeEnumValue = function (compatibilityMode) {\n        switch (compatibilityMode) {\n            case 'Word2013':\n                return 0;\n            case 'Word2003':\n                return 1;\n            case 'Word2007':\n                return 2;\n            case 'Word2010':\n                return 3;\n        }\n    };\n    WordExport.prototype.serializeHeaderFooters = function () {\n        this.isHeaderFooter = true;\n        this.serializeHeaderFooter('EvenFooter');\n        this.serializeHeaderFooter('EvenHeader');\n        this.serializeHeaderFooter('FirstPageFooter');\n        this.serializeHeaderFooter('FirstPageHeader');\n        this.serializeHeaderFooter('OddFooter');\n        this.serializeHeaderFooter('OddHeader');\n        this.isHeaderFooter = false;\n    };\n    // Serializes the Header/Footer\n    WordExport.prototype.serializeHeaderFooter = function (hfType) {\n        if (this.headersFooters.length === 0) {\n            return;\n        }\n        var headerFooterPath;\n        var headerFooterRelsPath;\n        if (!this.headersFooters.containsKey(hfType)) {\n            return;\n        }\n        var hfColl = this.headersFooters.get(hfType);\n        var hf = undefined;\n        for (var i = 0; i < hfColl.keys.length; i++) {\n            var id = hfColl.keys[i];\n            hf = hfColl.get(id);\n            if (hfType === 'EvenHeader' || hfType === 'FirstPageHeader' ||\n                hfType === 'OddHeader') {\n                headerFooterPath = this.headerPath + id.replace('rId', '') + '.xml';\n                headerFooterRelsPath = this.headerRelationPath + id.replace('rId', '') + '.xml.rels';\n                this.serializeHeader(hf, id, headerFooterPath, headerFooterRelsPath);\n            }\n            else {\n                headerFooterPath = this.footerPath + id.replace('rId', '') + '.xml';\n                headerFooterRelsPath = this.footerRelationPath + id.replace('rId', '') + '.xml.rels';\n                this.serializeFooter(hf, id, headerFooterPath, headerFooterRelsPath);\n            }\n        }\n    };\n    // Serialize the header part\n    WordExport.prototype.serializeHeader = function (header, id, headerFooterPath, headerFooterRelsPath) {\n        this.headerFooter = header;\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'hdr', this.wNamespace);\n        this.writeHFCommonAttributes(writer);\n        var owner = this.blockOwner;\n        this.blockOwner = header;\n        this.serializeBodyItems(writer, header[blocksProperty[this.keywordIndex]], true);\n        this.blockOwner = owner;\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterPath);\n        this.mArchive.addItem(zipArchiveItem);\n        this.serializeHFRelations(id, headerFooterRelsPath);\n        this.headerFooter = undefined;\n    };\n    // Serializes the HeaderFooter relations\n    WordExport.prototype.serializeHFRelations = function (hfId, headerFooterRelsPath) {\n        var hasHFImage = this.headerFooterImages.containsKey(hfId);\n        // let hasHFHyperlinks = HeaderFooterHyperlinks.ContainsKey(hfId);\n        // let hasHFInclPics = HeaderFooterInclPicUrls.ContainsKey(hfId);\n        // let hasHFAlternateChunks = HeaderFooterAlternateChunks.ContainsKey(hfId);\n        if (hasHFImage) { // || hasHFHyperlinks ||hasHFAlternateChunks\n            var writer = new XmlWriter();\n            writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n            this.serializeImagesRelations(this.headerFooterImages.get(hfId), writer, false);\n            if (this.headerFooterSvgImages.containsKey(hfId)) {\n                this.serializeSvgImageRelation(this.headerFooterSvgImages.get(hfId), writer);\n            }\n            // if (hasHFHyperlinks)\n            //     SerializeHyperlinkRelations(stream, HeaderFooterHyperlinks[hfId]);\n            // if (hasHFAlternateChunks)\n            //     SerializeAltChunkRelations(stream, HeaderFooterAlternateChunks[hfId]);\n            // if (hasHFInclPics)\n            //     SerializeIncludePictureUrlRelations(stream, HeaderFooterInclPicUrls[hfId]);\n            // if (HFOleContainers.ContainsKey(hfId))\n            // {\n            //     AddOLEToZip(HFOleContainers[hfId]);\n            // }\n            // if (HFRelations.ContainsKey(hfId))\n            //     SerializeHFCommonRelations(stream, HFRelations[hfId]);\n            writer.writeEndElement();\n            var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterRelsPath);\n            this.mArchive.addItem(zipArchiveItem);\n        }\n        else {\n            return;\n        }\n    };\n    WordExport.prototype.writeHFCommonAttributes = function (writer) {\n        writer.writeAttributeString('xmlns', 'v', undefined, this.vNamespace);\n        writer.writeAttributeString('xmlns', 'w10', undefined, this.w10Namespace);\n        writer.writeAttributeString('xmlns', 'o', undefined, this.oNamespace);\n        writer.writeAttributeString('xmlns', 've', undefined, this.veNamespace);\n        writer.writeAttributeString('xmlns', 'r', undefined, this.rNamespace);\n        writer.writeAttributeString('xmlns', 'm', undefined, this.mNamespace);\n        writer.writeAttributeString('xmlns', 'wne', undefined, this.wneNamespace);\n        writer.writeAttributeString('xmlns', 'a', undefined, this.aNamespace);\n        writer.writeAttributeString('xmlns', 'pic', undefined, this.pictureNamespace);\n        writer.writeAttributeString('xmlns', 'wp', undefined, this.wpNamespace);\n        writer.writeAttributeString('xmlns', 'wpc', undefined, this.wpCanvasNamespace);\n        writer.writeAttributeString('xmlns', 'wp14', undefined, this.wpDrawingNamespace);\n        this.writeDup(writer);\n        writer.writeAttributeString('xmlns', 'wps', undefined, this.wpShapeNamespace);\n        writer.writeAttributeString('ve', 'Ignorable', undefined, 'w14 w15 wp14');\n    };\n    // Serailize the footer and its relations\n    WordExport.prototype.serializeFooter = function (footer, id, headerFooterPath, headerFooterRelsPath) {\n        this.headerFooter = footer;\n        var writer = new XmlWriter();\n        writer.writeStartElement('w', 'ftr', this.wNamespace);\n        this.writeHFCommonAttributes(writer);\n        this.serializeBodyItems(writer, footer[blocksProperty[this.keywordIndex]], true);\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, headerFooterPath);\n        this.mArchive.addItem(zipArchiveItem);\n        this.serializeHFRelations(id, headerFooterRelsPath);\n    };\n    WordExport.prototype.serializeDocumentRelations = function () {\n        var writer = new XmlWriter();\n        writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        this.serializeRelationShip(writer, this.getNextRelationShipID(), this.stylesRelType, 'styles.xml');\n        this.serializeRelationShip(writer, this.getNextRelationShipID(), this.settingsRelType, 'settings.xml');\n        if (this.document[endnotesProperty[this.keywordIndex]]) {\n            this.serializeRelationShip(writer, this.getNextRelationShipID(), this.endnoteRelType, 'endnotes.xml');\n        }\n        if (this.document[footnotesProperty[this.keywordIndex]]) {\n            this.serializeRelationShip(writer, this.getNextRelationShipID(), this.footnoteRelType, 'footnotes.xml');\n        }\n        if (this.mComments.length > 0) {\n            if (!(this.mComments.length === 1 && this.mComments[0].text === '')) {\n                this.serializeRelationShip(writer, this.getNextRelationShipID(), this.commentsRelType, 'comments.xml');\n                this.serializeRelationShip(writer, this.getNextRelationShipID(), this.commentsExRelType, 'commentsExtended.xml');\n            }\n        }\n        if (!isNullOrUndefined(this.mThemes)) {\n            this.serializeRelationShip(writer, this.getNextRelationShipID(), this.ThemeRelType, 'theme/theme1.xml');\n        }\n        if (this.document[listsProperty[this.keywordIndex]].length > 0) {\n            this.serializeRelationShip(writer, this.getNextRelationShipID(), this.numberingRelType, 'numbering.xml');\n        }\n        //this.serializeFootnoteEndnoteRelations(writer);\n        this.serializeHeaderFooterRelations(writer);\n        //this.serializeFootnoteXMLMapping(writer);\n        // if (HasFontTable) {\n        //     SerializeRelationShip(docRelstream, GetNextRelationShipID(), this.FontTableRelType, 'fontTable.xml');\n        // }\n        // SerializeIncludePictureUrlRelations(docRelstream, InclPicFieldUrl);\n        // //// Creating relationships for every hyperlink and image containing in the document\n        this.serializeImagesRelations(this.documentImages, writer, false);\n        this.serializeSvgImageRelation(this.svgImages, writer);\n        // serialize custom xml\n        this.serializeCustomXMLMapping(this.mCustomXML, writer);\n        // serialize chart relations\n        this.serializeChartDocumentRelations(this.documentCharts, writer);\n        this.serializeExternalLinkImages(writer);\n        // if (HasHyperlink && HyperlinkTargets.length > 0) {\n        //     SerializeHyperlinkRelations(docRelstream, HyperlinkTargets);\n        // }\n        // if (m_document.HasMacros\n        //     && IsMacroEnabled)\n        //     SerializeRelationShip(docRelstream, GetNextRelationShipID(), this.VbaProjectRelType, this.VbaProject);\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.wordRelationPath);\n        this.mArchive.addItem(zipArchiveItem);\n        this.headerFooter = undefined;\n    };\n    // serialize chart relations\n    WordExport.prototype.serializeChartDocumentRelations = function (charts, writer) {\n        if (charts.length > 0) {\n            var keys = charts.keys;\n            for (var i = 1; i <= keys.length; i++) {\n                this.serializeRelationShip(writer, keys[i - 1], this.chartRelType, 'charts/chart' + i + '.xml');\n            }\n        }\n    };\n    WordExport.prototype.serializeChartRelations = function () {\n        var writer = new XmlWriter();\n        this.resetChartRelationShipId();\n        writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        var chartColorPath = 'colors' + this.chartCount + '.xml';\n        var chartRelationPath = this.chartPath + '/_rels/chart' + this.chartCount + '.xml.rels';\n        var chartExcelPath = '../embeddings/Microsoft_Excel_Worksheet' + this.chartCount + '.xlsx';\n        this.serializeRelationShip(writer, this.getNextChartRelationShipID(), this.packageRelType, chartExcelPath);\n        this.serializeRelationShip(writer, this.getNextChartRelationShipID(), this.chartColorStyleRelType, chartColorPath);\n        writer.writeEndElement(); // end of relationships\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, chartRelationPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    // Serializes the image relations\n    WordExport.prototype.serializeImagesRelations = function (images, writer, isSvg) {\n        if (images.length > 0) {\n            var imagePath = '';\n            var base64ImageString = void 0;\n            var keys = images.keys;\n            for (var i = 0; i < keys.length; i++) {\n                var mImage = images.get(keys[i]);\n                var imageStringInfo = void 0;\n                if (typeof mImage === 'string' && this.startsWith(mImage, 'data')) {\n                    base64ImageString = mImage;\n                }\n                else {\n                    imageStringInfo = this.getBase64ImageString(mImage);\n                    base64ImageString = imageStringInfo.imageString;\n                    if (HelperMethods.parseBoolValue(mImage[isMetaFileProperty[this.keywordIndex]])) {\n                        var format = HelperMethods.formatClippedString(imageStringInfo.metaFileImageString).extension;\n                        if (format !== '.svg' || isSvg) {\n                            base64ImageString = imageStringInfo.metaFileImageString;\n                        }\n                    }\n                }\n                if (isNullOrUndefined(base64ImageString)) {\n                    imagePath = this.imagePath + '/0.jpeg';\n                    this.serializeRelationShip(writer, keys[i], this.imageRelType, imagePath.replace('word/', ''));\n                }\n                else {\n                    var imageInfo = HelperMethods.formatClippedString(base64ImageString);\n                    var extension = imageInfo.extension;\n                    var formatClippedString = imageInfo.formatClippedString;\n                    imagePath = this.imagePath + keys[i] + extension;\n                    this.serializeRelationShip(writer, keys[i], this.imageRelType, imagePath.replace('word/', ''));\n                    //if (m_archive.Find(imagePath.Replace('\\\\', '/')) === -1)\n                    // {\n                    var imageBlob = void 0;\n                    if (this.startsWith(base64ImageString, 'data:image/svg+xml;utf8,')) {\n                        imageBlob = new Blob([formatClippedString]);\n                    }\n                    else {\n                        imageBlob = new Blob([this.encodedString(formatClippedString)]);\n                    }\n                    var zipArchiveItem = new ZipArchiveItem(imageBlob, imagePath);\n                    // let TestArchive = new ZipArchive();\n                    this.mArchive.addItem(zipArchiveItem);\n                    // TestArchive.save('image.zip').then(function (): void {\n                    //     TestArchive.destroy();\n                    // });\n                    // }\n                }\n            }\n        }\n    };\n    WordExport.prototype.serializeSvgImageRelation = function (svgImages, writer) {\n        this.serializeImagesRelations(svgImages, writer, true);\n    };\n    /**\n     * @private\n     */\n    WordExport.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var encode1;\n        var encode2;\n        var encode3;\n        var encode4;\n        var count = 0;\n        var resultIndex = 0;\n        /*let dataUrlPrefix: string = 'data:';*/\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (totalLength % 1 !== 0) {\n            // totalLength is not an integer, the length does not match a valid\n            // base64 content. That can happen if:\n            // - the input is not a base64 content\n            // - the input is *almost* a base64 content, with a extra chars at the\n            // beginning or at the end\n            // - the input uses a base64 variant (base64url for example)\n            throw new Error('Invalid base64 input, bad content length.');\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (count < input.length) {\n            encode1 = keyStr.indexOf(input.charAt(count++));\n            encode2 = keyStr.indexOf(input.charAt(count++));\n            encode3 = keyStr.indexOf(input.charAt(count++));\n            encode4 = keyStr.indexOf(input.charAt(count++));\n            chr1 = (encode1 << 2) | (encode2 >> 4);\n            chr2 = ((encode2 & 15) << 4) | (encode3 >> 2);\n            chr3 = ((encode3 & 3) << 6) | encode4;\n            output[resultIndex++] = chr1;\n            if (encode3 !== 64) {\n                output[resultIndex++] = chr2;\n            }\n            if (encode4 !== 64) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return output;\n    };\n    WordExport.prototype.serializeExternalLinkImages = function (writer) {\n        var imagePath = '';\n        var keys = this.externalImages.keys;\n        for (var i = 0; i < this.externalImages.keys.length; i++) {\n            this.serializeRelationShip(writer, keys[i], this.imageRelType, this.externalImages.get(keys[i]));\n        }\n    };\n    // Serializes the HeaderFooters relations to the document relations stream\n    WordExport.prototype.serializeHeaderFooterRelations = function (writer) {\n        this.serializeHFRelation(writer, 'EvenFooter');\n        this.serializeHFRelation(writer, 'EvenHeader');\n        this.serializeHFRelation(writer, 'FirstPageFooter');\n        this.serializeHFRelation(writer, 'FirstPageHeader');\n        this.serializeHFRelation(writer, 'OddFooter');\n        this.serializeHFRelation(writer, 'OddHeader');\n    };\n    // Serializes the headers footers relations.\n    WordExport.prototype.serializeHFRelation = function (writer, hfType) {\n        var headerFooterPath = '';\n        var relType;\n        if (!this.headersFooters.containsKey(hfType)) {\n            return;\n        }\n        var hfColl = this.headersFooters.get(hfType);\n        for (var i = 0; i < hfColl.keys.length; i++) {\n            var id = hfColl.keys[i];\n            if (hfType === 'EvenHeader' || hfType === 'FirstPageHeader' ||\n                hfType === 'OddHeader') {\n                headerFooterPath = 'header' + id.replace('rId', '') + '.xml';\n                relType = this.headerRelType;\n            }\n            else {\n                headerFooterPath = 'footer' + id.replace('rId', '') + '.xml';\n                relType = this.footerRelType;\n            }\n            this.serializeRelationShip(writer, id, relType, headerFooterPath);\n        }\n    };\n    // Serializes the relationship\n    WordExport.prototype.serializeRelationShip = function (writer, relationshipID, relationshipType, targetPath) {\n        writer.writeStartElement(undefined, 'Relationship', undefined);\n        writer.writeAttributeString(undefined, 'Id', undefined, relationshipID);\n        writer.writeAttributeString(undefined, 'Type', undefined, relationshipType);\n        writer.writeAttributeString(undefined, 'Target', undefined, targetPath.replace('\\\\', '/').replace('\\v', ''));\n        if (relationshipType === this.hyperlinkRelType || this.startsWith(targetPath, 'http://') || this.startsWith(targetPath, 'https://') || this.startsWith(targetPath, 'file:///')) {\n            // Uri targetUri;\n            // if ((!targetPath.StartsWith('file:///')) && Uri.TryCreate(targetPath, UriKind.Absolute, out targetUri))\n            // {\n            //     //Handled using Try catch to avoid exception if the Host name type is None because in \n            //Silverlight 'HostNameType' property is not available.\n            //     try\n            //     {\n            //         m_writer.WriteAttributeString('Target', targetUri.AbsoluteUri);\n            //     }\n            //     catch\n            //     {\n            //         m_writer.WriteAttributeString('Target', targetPath.Replace('\\\\', '/').Replace(ControlChar.LineBreak, string.Empty));\n            //     }\n            // }\n            // else\n            // {\n            //     m_writer.WriteAttributeString('Target', targetPath.Replace('\\\\', '/').Replace(ControlChar.LineBreak, string.Empty));\n            // }\n            writer.writeAttributeString(undefined, 'TargetMode', undefined, 'External');\n        }\n        writer.writeEndElement();\n    };\n    // Get the next relationship ID\n    WordExport.prototype.getNextRelationShipID = function () {\n        return 'rId' + (++this.mRelationShipID);\n    };\n    WordExport.prototype.getEFNextRelationShipID = function () {\n        return (++this.efRelationShipId).toString();\n    };\n    WordExport.prototype.serializeGeneralRelations = function () {\n        var writer = new XmlWriter();\n        this.resetRelationShipID();\n        writer.writeStartElement(undefined, 'Relationships', this.rpNamespace);\n        this.serializeRelationShip(writer, this.getNextRelationShipID(), this.documentRelType, this.documentPath);\n        // this.serializeRelationShip(writer, this.getNextRelationShipID(), this.AppRelType, this.appPath);\n        // this.serializeRelationShip(writer, this.getNextRelationShipID(), this.CoreRelType, this.corePath);\n        //End of Relationships tag\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.generalRelationPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    WordExport.prototype.serializeContentTypes = function (contentType, formatType) {\n        var writer = new XmlWriter();\n        writer.writeStartElement(undefined, 'Types', 'http://schemas.openxmlformats.org/package/2006/content-types');\n        //if (m_hasOleObject)\n        //{\n        //    //<Default Extension='bin' ContentType='application/vnd.openxmlformats-officedocument.oleObject'/>\n        //    SerializeDefaultContentType(contentStream, 'bin', 'application/vnd.openxmlformats-officedocument.oleObject');\n        //}\n        this.serializeDefaultContentType(writer, 'rels', this.relationContentType);\n        this.serializeDefaultContentType(writer, 'xml', this.xmlContentType);\n        // if (m_hasEmbedFonts && !string.IsNullOrEmpty(type))\n        // {\n        //     SerializeDefaultContentType(contentStream,type, this.fontContentType);\n        // }\n        if (this.documentImages.length > 0 || this.externalImages.length > 0 || this.headerFooterImages.length > 0) {\n            this.serializeDefaultContentType(writer, 'png', 'image/png');\n            this.serializeDefaultContentType(writer, 'bmp', 'image/bmp');\n            this.serializeDefaultContentType(writer, 'emf', 'image/x-emf');\n            this.serializeDefaultContentType(writer, 'wmf', 'image/x-wmf');\n            this.serializeDefaultContentType(writer, 'gif', 'image/gif');\n            this.serializeDefaultContentType(writer, 'ico', 'image/x-icon');\n            this.serializeDefaultContentType(writer, 'tif', 'image/tiff');\n            this.serializeDefaultContentType(writer, 'tiff', 'image/tiff');\n            this.serializeDefaultContentType(writer, 'jpeg', 'image/jpeg');\n            this.serializeDefaultContentType(writer, 'jpg', 'image/jpeg');\n            this.serializeDefaultContentType(writer, 'svg', 'image/svg+xml');\n        }\n        // if (m_document.HasMacros\n        //     && IsMacroEnabled && !m_isSkipBinExtension)\n        // {\n        //     SerializeDefaultContentType(contentStream, 'bin', this.VbaProjectContentType);\n        //     m_isSkipBinExtension = true;\n        // }\n        // if (m_hasOleObject)\n        // {\n        //     SerializeOleContentType(contentStream);\n        // }\n        //document.xml\n        if (formatType == 'Docx') {\n            this.serializeOverrideContentType(writer, this.documentPath, this.documentContentType);\n        }\n        else if (formatType == 'Dotx') {\n            this.serializeOverrideContentType(writer, this.documentPath, this.TemplateContentType);\n        }\n        //<Override PartName='/word/numbering.xml' ContentType='application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml'/>\n        // if (HasNumbering) {\n        this.serializeOverrideContentType(writer, this.numberingPath, this.numberingContentType);\n        // }\n        //Add the header/footer Alternate chunks\n        // if (HeaderFooterAlternateChunks.length > 0) {\n        //     foreach(Dictionary < string, string > item in m_headerFooterAlternateChunks.Values)\n        //     AddAlternateChunkItem(item);\n        // }\n        //styles.xml\n        this.serializeOverrideContentType(writer, this.stylePath, this.stylesContentType);\n        //settings.xml\n        this.serializeOverrideContentType(writer, this.settingsPath, this.settingsContentType);\n        this.serializeOverrideContentType(writer, this.commentsPath, this.commentsContentType);\n        this.serializeOverrideContentType(writer, this.themePath, this.themeContentType);\n        //comments.xml\n        this.serializeOverrideContentType(writer, this.commentsExtendedPath, this.commentsExContentType);\n        //charts.xml\n        if (this.chartCount > 0) {\n            var count = 1;\n            this.serializeDefaultContentType(writer, 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n            while (count <= this.chartCount) {\n                this.serializeOverrideContentType(writer, 'word/charts/chart' + count + '.xml', this.chartsContentType);\n                this.serializeOverrideContentType(writer, 'word/charts/colors' + count + '.xml', this.chartColorStyleContentType);\n                count++;\n            }\n        }\n        // Custom XML mapping\n        if (this.customXMLProps.length > 0) {\n            for (var i = 0; i < this.customXMLProps.length; i++) {\n                this.serializeOverrideContentType(writer, this.customXMLProps[i], this.customXmlContentType);\n            }\n        }\n        //             //core.xml\n        //             SerializeOverrideContentType(contentStream, this.corePath, this.CoreContentType);\n        //             //app.xml\n        //             SerializeOverrideContentType(contentStream, this.appPath, this.AppContentType);\n        //             //custom.xml\n        //             if (!isNullOrUndefined(m_document.CustomDocumentProperties) && m_document.CustomDocumentProperties.length > 0)\n        //                 SerializeOverrideContentType(contentStream, this.CustomPath, this.CustomContentType);\n        // #if Chart\n        //             if (m_hasChart)\n        //                 SerializeChartContentType(contentStream);\n        // #endif\n        this.serializeHFContentTypes(writer);\n        this.SerializeEFContentTypes(writer);\n        // WriteXmlItemsContentTypes(contentStream);\n        //End of Types tag\n        writer.writeEndElement();\n        var zipArchiveItem = new ZipArchiveItem(writer.buffer, this.contentTypesPath);\n        this.mArchive.addItem(zipArchiveItem);\n    };\n    // Serializes the HeaderFooter content types\n    WordExport.prototype.serializeHFContentTypes = function (writer) {\n        this.serializeHeaderFootersContentType(writer, 'EvenFooter');\n        this.serializeHeaderFootersContentType(writer, 'EvenHeader');\n        this.serializeHeaderFootersContentType(writer, 'FirstPageFooter');\n        this.serializeHeaderFootersContentType(writer, 'FirstPageHeader');\n        this.serializeHeaderFootersContentType(writer, 'OddFooter');\n        this.serializeHeaderFootersContentType(writer, 'OddHeader');\n    };\n    // Serializes the HeaderFooter content types.\n    WordExport.prototype.serializeHeaderFootersContentType = function (writer, headerFooterType) {\n        var contentType;\n        var partName;\n        if (!this.headersFooters.containsKey(headerFooterType)) {\n            return;\n        }\n        var hfColl = this.headersFooters.get(headerFooterType);\n        for (var i = 0; i < hfColl.keys.length; i++) {\n            var id = hfColl.keys[i];\n            if (headerFooterType === 'EvenHeader' || headerFooterType === 'FirstPageHeader' ||\n                headerFooterType === 'OddHeader') {\n                partName = this.headerPath + id.replace('rId', '') + '.xml';\n                contentType = this.headerContentType;\n            }\n            else {\n                partName = this.footerPath + id.replace('rId', '') + '.xml';\n                contentType = this.footerContentType;\n            }\n            this.serializeOverrideContentType(writer, partName, contentType);\n        }\n    };\n    WordExport.prototype.SerializeEFContentTypes = function (writer) {\n        this.serializeEFContentType(writer);\n    };\n    // Serializes the HeaderFooter content types.\n    WordExport.prototype.serializeEFContentType = function (writer) {\n        var contentType;\n        var partName;\n        partName = this.endnotesPath;\n        contentType = this.endnoteContentType;\n        this.serializeOverrideContentType(writer, partName, contentType);\n        partName = this.footnotesPath;\n        contentType = this.footnoteContentType;\n        this.serializeOverrideContentType(writer, partName, contentType);\n    };\n    // Serializes the Override content type.\n    WordExport.prototype.serializeOverrideContentType = function (writer, partName, contentType) {\n        writer.writeStartElement(undefined, 'Override', undefined);\n        writer.writeAttributeString(undefined, 'PartName', undefined, '/' + partName.replace('\\\\', '/'));\n        writer.writeAttributeString(undefined, 'ContentType', undefined, contentType);\n        writer.writeEndElement();\n    };\n    // Serializes the default content type\n    WordExport.prototype.serializeDefaultContentType = function (writer, extension, contentType) {\n        writer.writeStartElement(undefined, 'Default', undefined);\n        writer.writeAttributeString(undefined, 'Extension', undefined, extension);\n        writer.writeAttributeString(undefined, 'ContentType', undefined, contentType);\n        writer.writeEndElement();\n    };\n    // Reset the relationship id counter\n    WordExport.prototype.resetRelationShipID = function () {\n        this.mRelationShipID = 0;\n    };\n    WordExport.prototype.resetExcelRelationShipId = function () {\n        this.eRelationShipId = 0;\n    };\n    WordExport.prototype.resetChartRelationShipId = function () {\n        this.cRelationShipId = 0;\n    };\n    WordExport.prototype.close = function () {\n        //Implement\n    };\n    return WordExport;\n}());\nexport { WordExport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}