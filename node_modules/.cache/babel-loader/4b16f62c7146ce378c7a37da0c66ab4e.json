{"ast":null,"code":"import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation, withInBounds, rotateTextSize } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */function () {\n  /** @private */\n  function CartesianAxisLayoutPanel(chartModule) {\n    this.chart = chartModule;\n    this.padding = 5;\n  }\n  /**\n   * Measure the axis size.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\n    this.crossAt(chart);\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n    this.initialClipRect = rect;\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with initial Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (!this.chart.delayRedraw) {\n      this.calculateAxisSize(this.initialClipRect);\n    }\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with series Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (chartAreaWidth) {\n      this.calculateFixedChartArea(chart, chartAreaWidth);\n    }\n    if (!this.chart.delayRedraw) {\n      chart.refreshAxis();\n      this.calculateAxisSize(this.seriesClipRect);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\n    this.seriesClipRect.width = chartAreaWidth;\n    this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth - (chart.legendSettings.position === 'Right' ? chart.legendModule.legendBounds.width : 0);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.seriesClipRect.x -= sum(item.farSizes);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n    var row;\n    this.calculateRowSize(rect);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      row = item;\n      row.nearSizes = [];\n      row.farSizes = [];\n      row.insideNearSizes = [];\n      row.insideFarSizes = [];\n      this.arrangeAxis(row);\n      this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n      if (this.leftSize < sum(row.nearSizes)) {\n        this.leftSize = sum(row.nearSizes);\n      }\n      if (this.rightSize < sum(row.farSizes)) {\n        this.rightSize = sum(row.farSizes);\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n    var column;\n    this.calculateColumnSize(rect);\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var item = _a[_i];\n      column = item;\n      column.farSizes = [];\n      column.nearSizes = [];\n      column.insideNearSizes = [];\n      column.insideFarSizes = [];\n      this.arrangeAxis(column);\n      this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n      if (this.bottomSize < sum(column.nearSizes)) {\n        this.bottomSize = sum(column.nearSizes);\n      }\n      if (this.topSize < sum(column.farSizes)) {\n        this.topSize = sum(column.farSizes);\n      }\n    }\n  };\n  /**\n   * Measure the column and row in chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\n    var ele;\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      ele = axis.scrollbarSettings.height;\n      axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n      axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable) ? ele : 0;\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n      definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\n    }\n    if (definition.farSizes.length > 0) {\n      definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n    }\n    if (definition.nearSizes.length > 0) {\n      definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var axis;\n    var nearCount = 0;\n    var farCount = 0;\n    var size = 0;\n    var x;\n    var y;\n    var axisOffset;\n    this.calculateRowSize(rect);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n        axis = row.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.height === 0) {\n          axis.rect.height = row.computedHeight;\n          size = 0;\n          for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n            definition = chart.rows[k];\n            size += definition.computedHeight;\n          }\n          axis.rect.y = row.computedTop - size + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n          axis.rect.height = axis.rect.height + size - this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset);\n          axis.rect.width = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n            x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\n          } else {\n            x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n          }\n          axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n            x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\n          } else {\n            x = rect.x - sum(subArray(row.nearSizes, nearCount));\n          }\n          axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n          nearCount++;\n        }\n      }\n    }\n    this.calculateColumnSize(rect);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n        axis = column.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.width === 0) {\n          for (var k = i, len_4 = i + axis.span; k < len_4; k++) {\n            definition = chart.columns[k];\n            axis.rect.width += definition.computedWidth;\n          }\n          axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n          axis.rect.width -= this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset);\n          axis.rect.height = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n            y = rect.y + sum(subArray(column.insideFarSizes, farCount));\n          } else {\n            y = rect.y - sum(subArray(column.farSizes, farCount));\n          }\n          axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n            y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\n          } else {\n            y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n          }\n          axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n          nearCount++;\n        }\n      }\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var actualIndex;\n    var span;\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      //definition.Axes = axis;\n      if (axis.orientation === 'Vertical') {\n        chart.verticalAxes.push(axis);\n        actualIndex = this.getActualRow(axis);\n        row = chart.rows[actualIndex];\n        this.pushAxis(row, axis);\n        span = actualIndex + axis.span > chart.rows.length ? chart.rows.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.rows[j];\n          definition.axes[row.axes.length - 1] = axis;\n          chart.rows[j] = definition;\n        }\n        chart.rows[actualIndex] = row;\n      } else {\n        chart.horizontalAxes.push(axis);\n        actualIndex = this.getActualColumn(axis);\n        column = chart.columns[actualIndex];\n        this.pushAxis(column, axis);\n        span = actualIndex + axis.span > chart.columns.length ? chart.columns.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.columns[j];\n          definition.axes[column.axes.length - 1] = axis;\n          chart.columns[j] = definition;\n        }\n        chart.columns[actualIndex] = column;\n      }\n      axis.isRTLEnabled = chart.enableRtl;\n      axis.setIsInversedAndOpposedPosition();\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n    var rangeOffset = position1 ? position1 + (position2 ? position2 : plotOffset) : position2 ? position2 + plotOffset : 2 * plotOffset;\n    return rangeOffset;\n  };\n  CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      if (axis.crossesAt === null) {\n        continue;\n      }\n      if (!axis.crossesInAxis) {\n        if (chart.requireInvertedAxis) {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryXAxis : chart.primaryYAxis;\n        } else {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryYAxis : chart.primaryXAxis;\n        }\n        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n        continue;\n      } else {\n        for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n          if (axis.crossesInAxis === chart.axisCollections[i].name) {\n            axis.crossInAxis = chart.axisCollections[i];\n            axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n            continue;\n          }\n        }\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n    switch (axis.valueType) {\n      case 'DateTime':\n        var option = {\n          skeleton: 'full',\n          type: 'dateTime'\n        };\n        var dateParser = this.chart.intl.getDateParser(option);\n        var dateFormatter = this.chart.intl.getDateFormat(option);\n        return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({\n          val: crossAt\n        }).val))));\n      case 'Category':\n        return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n      case 'Logarithmic':\n        return logBase(crossAt, axis.logBase);\n      default:\n        return crossAt;\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (!definition.axes[i]) {\n        definition.axes[i] = axis;\n        break;\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n    var axisCollection = [];\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (definition.axes[i]) {\n        axisCollection.push(definition.axes[i]);\n      }\n    }\n    definition.axes = axisCollection;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n    var actualLength = this.chart.columns.length;\n    var pos = axis.columnIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n    var actualLength = this.chart.rows.length;\n    var pos = axis.rowIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row;\n    var rowTop = rect.y + rect.height;\n    var height = 0;\n    var remainingHeight = Math.max(0, rect.height);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      if (row.height.indexOf('%') !== -1) {\n        height = Math.min(remainingHeight, rect.height * parseInt(row.height, 10) / 100);\n      } else {\n        height = Math.min(remainingHeight, parseInt(row.height, 10));\n      }\n      height = i !== len - 1 ? height : remainingHeight;\n      row.computedHeight = height;\n      rowTop -= height;\n      row.computedTop = rowTop;\n      remainingHeight -= height;\n    }\n  };\n  /**\n   * Measure the row size.\n   *\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column;\n    var columnLeft = rect.x;\n    var width = 0;\n    var remainingWidth = Math.max(0, rect.width);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      if (column.width.indexOf('%') !== -1) {\n        width = Math.min(remainingWidth, rect.width * parseInt(column.width, 10) / 100);\n      } else {\n        width = Math.min(remainingWidth, parseInt(column.width, 10));\n      }\n      width = i !== len - 1 ? width : remainingWidth;\n      column.computedWidth = width;\n      column.computedLeft = columnLeft;\n      columnLeft += width;\n      remainingWidth -= width;\n    }\n  };\n  /**\n   * To render the axis element.\n   *\n   * @returns {void}\n   * @private\n   */\n  // tslint:disable-next-line:max-func-body-length\n  CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n    var chart = this.chart;\n    var axis;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisInsideCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n    if (axisLineElement) {\n      axisLineElement.setAttribute('aria-hidden', 'true');\n    }\n    var outsideElement;\n    var isInside;\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      var axisVisibility = true;\n      axis = chart.axisCollections[i];\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Inside'\n      });\n      if (this.element) {\n        this.element.setAttribute('aria-hidden', 'true');\n      }\n      outsideElement = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Outside'\n      });\n      if (outsideElement) {\n        outsideElement.setAttribute('aria-hidden', 'true');\n      }\n      for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\n        var series = _a[_i];\n        if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\n          axisVisibility = series.visible;\n          if (series.category === 'Pareto' && !series.paretoOptions.showAxis && series.type === 'Line') {\n            axisVisibility = false;\n          }\n          if (!axisVisibility) {\n            continue;\n          } else {\n            break;\n          }\n        }\n      }\n      if (!axisVisibility) {\n        continue;\n      }\n      isInside = this.findAxisPosition(axis);\n      if (axis.orientation === 'Horizontal') {\n        axis.updateCrossValue();\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 || axis.minorGridLines.width > 0) {\n          this.drawXAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      } else {\n        axis.updateCrossValue();\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 || axis.minorGridLines.width > 0) {\n          this.drawYAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      }\n      if (!this.chart.enableCanvas) {\n        axisElement.appendChild(this.element);\n        if (outsideElement && outsideElement.childNodes.length > 0) {\n          axisLineElement.appendChild(outsideElement);\n        }\n      }\n      if (chart.scrollBarModule && (chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming || axis.scrollbarSettings.enable)) {\n        this.renderScrollbar(chart, axis);\n      }\n    }\n    this.element = chart.renderer.createGroup({\n      id: chart.element.id + 'DefinitionLine'\n    });\n    for (var j = 0, len = chart.rows.length; j < len; j++) {\n      var row = chart.rows[j];\n      if (row.border.color) {\n        this.drawBottomLine(row, j, true);\n      }\n    }\n    for (var j = 0, len = chart.columns.length; j < len; j++) {\n      var column = chart.columns[j];\n      if (column.border.color) {\n        this.drawBottomLine(column, j, false);\n      }\n    }\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n    }\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n  /**\n   * To render the axis scrollbar\n   *\n   * @param {Chart} chart chart\n   * @param {Axis} axis axis\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n    var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n    if ((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable && (axis.zoomFactor <= 1 || axis.zoomPosition >= 0)) && !axis.zoomingScrollBar.isScrollUI) {\n      if (!chart.scrollElement) {\n        chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', {\n          id: chart.element.id + '_scrollElement'\n        });\n      }\n      appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n    } else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n      axis.zoomingScrollBar.destroy();\n    } else if (axis.zoomingScrollBar.svgObject) {\n      axis.zoomingScrollBar.svgObject.style.top = (axis.isAxisOpposedPosition && axis.orientation === 'Horizontal' ? -16 : 0) + axis.rect.y + Math.max(0.5, axis.lineStyle.width / 2) + 'px';\n      axis.zoomingScrollBar.svgObject.style.left = (axis.isAxisOpposedPosition && axis.orientation !== 'Horizontal' ? 16 : 0) + axis.rect.x - (axis.orientation === 'Vertical' ? axis.scrollbarSettings.height : 0) + 'px';\n    }\n    if (axis.zoomingScrollBar.isScrollUI) {\n      axis.zoomingScrollBar.isScrollUI = false;\n    }\n  };\n  /**\n   * To find the axis position\n   *\n   * @param {Axis} axis axis\n   * @returns {boolean} axis position\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n    return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n  };\n  /**\n   * To render the bootom line of the columns and rows\n   *\n   * @param {Row | Column} definition definition\n   * @param {number} index index\n   * @param {boolean} isRow isRow\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var definitionName;\n    if (isRow) {\n      definition = definition;\n      y1 = y2 = definition.computedTop + definition.computedHeight;\n      x1 = this.seriesClipRect.x;\n      x2 = x1 + this.seriesClipRect.width;\n      definitionName = 'Row';\n    } else {\n      definition = definition;\n      x1 = x2 = definition.computedLeft;\n      y1 = this.seriesClipRect.y;\n      y2 = y1 + this.seriesClipRect.height;\n      definitionName = 'Column';\n    }\n    optionsLine = {\n      'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      'stroke-width': definition.border.width,\n      'stroke': definition.border.color\n    };\n    this.htmlObject = chart.renderer.drawLine(optionsLine);\n    this.element.appendChild(this.htmlObject);\n  };\n  /**\n   * To render the axis line\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {number} plotX plotX\n   * @param {number} plotY plotY\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var element = getElement(chart.element.id + 'AxisLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    element = null;\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) + ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    this.htmlObject = chart.renderer.drawPath(optionsLine);\n    appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n  };\n  /**\n   * To render the yAxis grid line\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointY = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGridDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight : -axis.scrollBarHeight : 0;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.x - tickSize - axisLineSize : rect.x + tickSize + axisLineSize + scrollBarHeight;\n    var length = axis.visibleLabels.length;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0 && !this.chart.stockChart) {\n      length += 1;\n    }\n    var minorGridLines = axis.minorGridLines;\n    var minorTickLines = axis.minorTickLines;\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      tempInterval = !axis.visibleLabels[i] ? axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel : axis.visibleLabels[i].value - ticksbwtLabel;\n      pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n      pointY = pointY * -1 + (rect.y + rect.height);\n      if (pointY >= rect.y && rect.y + rect.height >= pointY) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointY)) {\n          majorGrid = 'M ' + this.seriesClipRect.x + ' ' + pointY + ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n        majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY + ' L ' + ticks + ' ' + pointY;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n        if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To check the border of the axis\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {number} value value\n   * @returns {boolean} check the border of the axis\n   */\n  CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n    var border = this.chart.chartArea.border;\n    var rect = this.seriesClipRect;\n    var orientation = axis.orientation;\n    var start = orientation === 'Horizontal' ? rect.x : rect.y;\n    var size = orientation === 'Horizontal' ? rect.width : rect.height;\n    var startIndex = orientation === 'Horizontal' ? 0 : axis.visibleLabels.length - 1;\n    var endIndex = orientation === 'Horizontal' ? axis.visibleLabels.length - 1 : 0;\n    if (axis.plotOffset > 0) {\n      return true;\n    } else if ((value === start || value === start + size) && (border.width <= 0 || border.color === 'transparent')) {\n      return true;\n    } else if (value !== start && index === startIndex || value !== start + size && index === endIndex) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * To render the yAxis label\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var label;\n    var pointX = 0;\n    var pointY = 0;\n    var elementSize;\n    var labelSpace = axis.labelPadding;\n    var options;\n    var isAxisBreakLabel;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var RotatedWidth;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isVerticalAngle = angle === -90 || angle === 90 || angle === 270 || angle === -270;\n    padding += isVerticalAngle ? isLabelInside ? 5 : -5 : 0;\n    padding = isOpposed ? padding : -padding;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n    var textHeight;\n    var textPadding;\n    var maxLineWidth;\n    var pixel = 10;\n    var isInverse = axis.isAxisInverse;\n    var previousEnd = isInverse ? rect.y : rect.y + rect.height;\n    var labelPadding;\n    var intervalLength;\n    var labelHeight;\n    var yAxisLabelX;\n    var isLabelOnAxisLineLeft = !isOpposed && !isLabelInside || isOpposed && isLabelInside;\n    if (isLabelInside) {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\n    } else {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight) : padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight);\n    }\n    var sizeWidth = [];\n    var breakLabelSizeWidth = [];\n    axis.visibleLabels.map(function (item) {\n      sizeWidth.push(item.size['width']);\n      breakLabelSizeWidth.push(item.breakLabelSize['width']);\n    });\n    var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\n    var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\n    RotatedWidth = LabelMaxWidth;\n    if (angle >= -45 && angle <= 45 && angle !== 0) {\n      RotatedWidth = LabelMaxWidth * Math.cos(angle * Math.PI / 180);\n      if (RotatedWidth < 0) {\n        RotatedWidth = -RotatedWidth;\n      }\n    }\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n      elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n      pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height + (chart.stockChart ? 7 : 0);\n      pointY = Math.floor(pointY * -1 + (rect.y + rect.height));\n      textHeight = elementSize.height / 8 * axis.visibleLabels[i].text.length / 2;\n      textPadding = chart.requireInvertedAxis && axis.labelPosition === 'Inside' ? 0 : elementSize.height / 4 * 3 + 3;\n      intervalLength = rect.height / axis.visibleLabels.length;\n      labelHeight = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 && elementSize.width > intervalLength ? intervalLength : elementSize.width;\n      pointY = isAxisBreakLabel ? axis.labelPosition === 'Inside' ? pointY - elementSize.height / 2 - textHeight + textPadding : pointY - textHeight : axis.labelPosition === 'Inside' ? pointY + textPadding : pointY;\n      if (axis.labelPosition === 'Inside' && (i === 0 && !axis.isInversed || i === len - 1 && axis.isInversed)) {\n        if (chart.stockChart) {\n          pointY -= textPadding;\n        } else {\n          pointY -= textPadding - (chart.requireInvertedAxis && axis.labelPosition === 'Inside' ? 0 : axis.opposedPosition ? -padding : padding);\n        }\n      }\n      if (axis.majorGridLines.width > axis.majorTickLines.width) {\n        maxLineWidth = axis.majorGridLines.width;\n      } else {\n        maxLineWidth = axis.majorTickLines.width;\n      }\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointY = pointY - maxLineWidth - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointY = pointY + maxLineWidth + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        // eslint-disable-next-line no-self-assign\n        pointY = pointY;\n      }\n      // label X value adjustment (Start)\n      if (isLabelInside) {\n        yAxisLabelX = labelPadding + (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth) / 2;\n      } else {\n        yAxisLabelX = labelPadding - (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : RotatedWidth) / 2;\n      }\n      pointX = isOpposed ? rect.x - yAxisLabelX : rect.x + yAxisLabelX;\n      if (isVerticalAngle) {\n        pointX += isOpposed ? -10 : 10;\n      }\n      yAxisLabelX = labelPadding;\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle', angle);\n      switch (axis.edgeLabelPlacement) {\n        case 'None':\n          break;\n        case 'Hide':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y || (i === len - 1 || isInverse && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n            options.text = '';\n          }\n          break;\n        case 'Shift':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y + rect.height) {\n            options.y = pointY = rect.y + rect.height;\n          } else if ((i === len - 1 || isInverse && i === 0) && (options.y < rect.y || options.y - elementSize.height / 2 < -1)) {\n            options.y = pointY = rect.y + elementSize.height * 0.5;\n          }\n          break;\n      }\n      // ------- Hide Calculation (Start) -------------\n      var previousYValue = options.y;\n      var currentYValue = options.y - labelHeight;\n      if (isAxisBreakLabel) {\n        previousYValue = options.y - labelHeight / 2;\n        currentYValue = options.y + labelHeight / 2;\n      }\n      if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\n        continue;\n      }\n      previousEnd = isInverse ? previousYValue : currentYValue;\n      // ------- Hide Calculation (End) -------------\n      options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\n   * To get X value based on lineBreakAlignment for Y axis line break labels only.\n   *\n   * @param {number} x text x position\n   * @param {Axis} axis y axis values\n   * @param {number} textWidth axis label width\n   * @returns {number} returns suitable axis label x position\n   */\n  CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n    var anchor = axis.lineBreakAlignment;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    if (isOpposed && isLabelInside || !isOpposed && !isLabelInside) {\n      return anchor === 'Right' ? x : anchor === 'Center' ? x - textWidth / 2 : x - textWidth;\n    } else {\n      return anchor === 'Left' ? x : anchor === 'Center' ? x + textWidth / 2 : x + textWidth;\n    }\n  };\n  /**\n   * To render the yAxis label border.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n    if (axis.border.width > 0) {\n      var startY = void 0;\n      var pointY = void 0;\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\n      var gap = rect.height / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endY = void 0;\n      var length_1 = axis.maxLabelSize.width + 10 + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endX = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointY = (axis.isAxisInverse ? 1 - pointY : pointY) * rect.height;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startY = pointY * -1 + (rect.y + rect.height);\n          endY = pointY * -1 - gap + (rect.y + rect.height);\n        } else {\n          startY = pointY * -1 + gap / 2 + (rect.y + rect.height);\n          endY = pointY * -1 - gap / 2 + (rect.y + rect.height);\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startY > rect.y + rect.height) {\n              labelBorder += 'M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(rect.y) > endY) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + rect.y + ' ';\n            } else {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startY > rect.y + rect.height) && !(endY < Math.floor(rect.y))) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ' : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n      if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule && this.chart.visibleSeries[i].visible) {\n        this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        break;\n      }\n    }\n  };\n  /**\n   * To render the yAxis title\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var isRotated = false;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var labelRotation = (axis.titleRotation == null ? isOpposed ? 90 : -90 : axis.titleRotation) % 360;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding);\n      padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n      if (labelRotation !== -90 && !isOpposed || labelRotation !== 90 && isOpposed) {\n        padding += axis.isAxisOpposedPosition ? axis.titleSize.width / 2 + axis.labelPadding : -axis.titleSize.width / 2 - axis.labelPadding;\n        isRotated = true;\n      }\n      var x = rect.x + padding;\n      var y = void 0;\n      var anchor = void 0;\n      if (axis.titleStyle.textAlignment === 'Center') {\n        anchor = 'middle';\n        y = rect.y + rect.height * 0.5;\n      } else if (axis.titleStyle.textAlignment === 'Near') {\n        anchor = axis.opposedPosition ? 'end' : 'start';\n        y = rect.height + rect.y;\n      } else {\n        anchor = axis.opposedPosition ? 'start' : 'end';\n        y = rect.y;\n      }\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y + (isRotated ? -titleSize : -axis.labelPadding - titleSize), anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont);\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\n   * xAxis grid line calculation performed here\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointX = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? -axis.majorTickLines.height : axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight : axis.scrollBarHeight : 0;\n    var ticksbwtLabel = axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart ? 0.5 : 0;\n    var length = axis.visibleLabels.length;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.y - tickSize - axisLineSize : rect.y + tickSize + axisLineSize + scrollBarHeight;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) {\n      length += 1;\n    }\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      if (axis.valueType !== 'DateTimeCategory') {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n      } else {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n      }\n      pointX = valueToCoefficient(tempInterval, axis) * rect.width + rect.x;\n      if (pointX >= rect.x && rect.x + rect.width >= pointX) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n          majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) + ' L ' + pointX + ' ' + this.seriesClipRect.y;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n        majorTick = 'M ' + pointX + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' L ' + pointX + ' ' + ticks;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n        if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To render missing minor grid lines while zooming\n   *\n   * @param {Axis} axis axis\n   * @param {number} tempInterval tempInterval\n   * @param {Rect} rect rect\n   * @param {number} i i\n   * @param {number} index index\n   * @param {IThemeStyle} chartThemeStyle chartThemeStyle\n   * @param {Element} parent parent\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n    var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n  };\n  /**\n   * To calcualte the axis minor line\n   *\n   * @param {Axis} axis axis\n   * @param {number} tempInterval tempInterval\n   * @param {Rect} rect rect\n   * @param {number} labelIndex labelIndex\n   * @param {boolean} isFirstLabel isFirstLabel\n   * @returns {string[]} axis minor line path\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n    var value = tempInterval;\n    var coor = 0;\n    var position = 0;\n    var range = axis.visibleRange;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var direction = [];\n    var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n    var logStart;\n    var logEnd;\n    var logInterval = 1;\n    var logPosition = 1;\n    var ticksX = isTickInside ? rect.y - tickSize : rect.y + tickSize;\n    var ticksY = isTickInside ? rect.x + tickSize : rect.x - tickSize;\n    var minorGird = '';\n    var minorTick = '';\n    var isInverse = axis.isAxisInverse;\n    if (axis.valueType === 'Logarithmic') {\n      logStart = Math.pow(axis.logBase, value - range.interval);\n      logEnd = Math.pow(axis.logBase, value);\n      logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n      logPosition = logStart + logInterval;\n    }\n    if (axis.orientation === 'Horizontal') {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        logPosition += logInterval;\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.width);\n          coor = Math.floor(position + rect.x);\n          minorGird = minorGird.concat('M' + ' ' + coor + ' ' + this.seriesClipRect.y + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n          coor = Math.floor(position + rect.x);\n          minorTick = minorTick.concat('M' + ' ' + coor + ' ' + rect.y + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n        }\n      }\n    } else {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.height) * -1; // For inversed axis\n          coor = Math.floor(position + rect.y + rect.height);\n          minorGird = minorGird.concat('M' + ' ' + this.seriesClipRect.x + ' ' + coor + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n          coor = Math.floor(position + rect.y + rect.height);\n          minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) + ' ' + coor + ' ');\n        }\n        logPosition += logInterval;\n      }\n    }\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To find the numeric value of the log\n   *\n   * @param {Axis} axis axis\n   * @param {number} logPosition logPosition\n   * @param {number} value value\n   * @param {number} labelIndex labelIndex\n   * @param {boolean} isFirstLabel isFirstLabel\n   * @returns {number} value\n   */\n  CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n    var range = axis.visibleRange;\n    var tempValue;\n    if (axis.valueType === 'Logarithmic') {\n      value = logBase(logPosition, axis.logBase);\n    } else if (axis.valueType === 'DateTime') {\n      tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    } else if (axis.valueType === 'DateTimeCategory') {\n      var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n      value += ((axis.visibleLabels[labelIndex + 1] ? axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) - (axis.visibleLabels[labelIndex] ? axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) / (axis.minorTicksPerInterval + 1);\n    } else {\n      tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    }\n    return value;\n  };\n  /**\n   * To render the xAxis Labels\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelSpace = axis.labelPadding;\n    var labelHeight;\n    var elementSize;\n    var labelPadding;\n    var anchor;\n    var pixel = 10;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var islabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isHorizontalAngle = angle === 0 || angle === -180 || angle === 180;\n    var options;\n    var labelWidth;\n    var isInverse = axis.isAxisInverse;\n    var isLeft;\n    var previousEnd = isInverse ? rect.x + rect.width : rect.x;\n    var width = 0;\n    var length = axis.visibleLabels.length;\n    var intervalLength;\n    var label;\n    var isAxisBreakLabel;\n    var scrollBarHeight = axis.scrollbarSettings.enable || !islabelInside && isNullOrUndefined(axis.crossesAt) && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? axis.scrollBarHeight : 0;\n    var newPoints = [];\n    var isRotatedLabelIntersect = false;\n    var textPoints = [];\n    var rotatedLabelSize = new Size(0, 0);\n    padding += angle === 90 || angle === 270 || angle === -90 || angle === -270 ? islabelInside ? 5 : -5 : 0;\n    var isLabelUnderAxisLine = !isOpposed && !islabelInside || isOpposed && islabelInside;\n    var isEndAnchor = isLabelUnderAxisLine ? 360 >= angle && angle >= 180 || -1 >= angle && angle >= -180 : 1 <= angle && angle <= 180 || -181 >= angle && angle >= -360;\n    for (var i = 0, len = length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(label.originalText) || axis.labelIntersectAction === 'Wrap' && label.text.length > 1;\n      pointX = valueToCoefficient(label.value, axis) * rect.width + rect.x;\n      elementSize = label.size;\n      intervalLength = rect.width / length;\n      labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n      width = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 && labelWidth > intervalLength ? intervalLength : labelWidth;\n      labelHeight = elementSize.height / 4;\n      pointX -= isAxisBreakLabel || angle !== 0 ? 0 : width / 2;\n      // label X value adjustment for label rotation (Start)\n      if (angle !== 0) {\n        if (isAxisBreakLabel) {\n          pointX -= axis.lineBreakAlignment === 'Left' ? label.breakLabelSize.width / 2 : axis.lineBreakAlignment === 'Right' ? -(label.breakLabelSize.width / 2) : 0;\n        } else {\n          pointX -= angle === -90 || angle === 270 ? -labelHeight : angle === 90 || angle === -270 ? labelHeight : 0;\n        }\n      }\n      // label X value adjustment for label rotation (End)\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointX = pointX + width - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointX = pointX - width + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        // eslint-disable-next-line no-self-assign\n        pointX = pointX;\n      }\n      // For line break label alignment like left, right & center in angle 0\n      if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n        pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : width / 2;\n      }\n      var paddingForBreakLabel = isAxisBreakLabel ? isHorizontalAngle ? axis.opposedPosition || islabelInside ? 0 : elementSize.height : label.breakLabelSize.width / 2 : 0;\n      padding = isAxisBreakLabel ? tickSpace + labelSpace + axis.lineStyle.width * 0.5 : padding;\n      // label Y value adjustment (Start)\n      if (islabelInside && angle) {\n        if (isAxisBreakLabel) {\n          pointY = isOpposed ? rect.y + padding + paddingForBreakLabel : rect.y - padding - paddingForBreakLabel;\n        } else {\n          pointY = isOpposed ? rect.y + padding + labelHeight : rect.y - padding - labelHeight;\n        }\n      } else {\n        if (isAxisBreakLabel) {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + paddingForBreakLabel) : padding + scrollBarHeight + (angle ? paddingForBreakLabel : 3 * labelHeight);\n        } else {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (angle ? labelHeight : label.index > 1 ? 2 * labelHeight : 0)) : padding + scrollBarHeight + (angle ? 1 : 3) * labelHeight;\n        }\n        pointY = rect.y + labelPadding * label.index;\n      }\n      // label Y value adjustment (End)\n      if (isAxisBreakLabel) {\n        anchor = this.getAnchor(axis); // for break label self alignment\n      } else {\n        anchor = chart.enableRtl ? isEndAnchor ? '' : 'end' : chart.isRtlEnabled || isEndAnchor ? 'end' : '';\n      }\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n      if (angle !== 0) {\n        rotatedLabelSize = rotateTextSize(label.labelStyle, label.originalText, angle, chart);\n        isLeft = angle < 0 && angle > -90 || angle < -180 && angle > -270 || angle > 90 && angle < 180 || angle > 270 && angle < 360;\n      }\n      if (axis.edgeLabelPlacement) {\n        switch (axis.edgeLabelPlacement) {\n          case 'None':\n            break;\n          case 'Hide':\n            if ((i === 0 || isInverse && i === len - 1) && options.x < rect.x || (i === len - 1 || isInverse && i === 0) && options.x + (angle === 0 ? width : rotatedLabelSize.width) > rect.x + rect.width) {\n              continue;\n            }\n            break;\n          case 'Shift':\n            if ((i === 0 || isInverse && i === len - 1) && (options.x < rect.x || angle !== 0 && isLeft && options.x - rotatedLabelSize.width <= rect.x || axis.lineBreakAlignment === 'Center' && options.x - label.size.width / label.text.length / 2 < rect.x && angle === 0)) {\n              intervalLength -= rect.x - options.x;\n              if (anchor === '' && !isInverse && angle === 0) {\n                if (options.x <= 0) {\n                  pointX = options.x = 0;\n                } else {\n                  pointX = options.x;\n                }\n                intervalLength = rect.width / length;\n              } else if (isLeft && angle !== 0) {\n                intervalLength = rect.width / length;\n                if (rect.x + intervalLength > options.x + rotatedLabelSize.width) {\n                  options.x = pointX = rect.x + padding;\n                } else {\n                  options.x = pointX = rect.x + intervalLength - padding;\n                }\n              } else if (isAxisBreakLabel && axis.lineBreakAlignment === 'Center' && axis.labelPlacement === 'OnTicks' && angle === 0) {\n                var maxWidth = 0;\n                for (var i_1 = 0; i_1 < label.text.length; i_1++) {\n                  var breakLabelWidth = measureText(label.text[i_1], axis.labelStyle, chart.themeStyle.axisLabelFont).width;\n                  if (breakLabelWidth > maxWidth) {\n                    maxWidth = breakLabelWidth;\n                  }\n                }\n                options.x = pointX = rect.x + maxWidth / 2;\n              } else if (!(anchor === 'start' && options.x > 0)) {\n                options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\n              }\n            } else if ((i === len - 1 || isInverse && i === 0) && (options.x + width > rect.x + rect.width && anchor !== 'end' && angle === 0 || angle !== 0 && !isLeft && options.x + rotatedLabelSize.width > rect.x + rect.width || anchor === 'end' && options.x > rect.x + rect.width)) {\n              if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim' && angle === 0) {\n                intervalLength -= options.x + width - (rect.x + rect.width);\n              } else if (angle !== 0) {\n                if (rotatedLabelSize.width < intervalLength) {\n                  intervalLength = rotatedLabelSize.width;\n                }\n              } else {\n                intervalLength = width;\n              }\n              if (angle !== 0) {\n                options.x = pointX = rect.x + rect.width - intervalLength + padding;\n              } else {\n                options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 : rect.x + rect.width - intervalLength;\n              }\n            }\n            break;\n        }\n      }\n      options.text = this.getLabelText(label, axis, intervalLength);\n      options.labelRotation = angle;\n      // ------- Hide Calculation (Start) -------------\n      // Currect label actual start value (Start)\n      var xValue = void 0;\n      var xValue2 = void 0;\n      if (isAxisBreakLabel && angle === 0) {\n        if (axis.lineBreakAlignment === 'Right') {\n          xValue = options.x - width;\n          xValue2 = options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          xValue = options.x - width / 2;\n          xValue2 = options.x + width / 2;\n        } else {\n          xValue = options.x;\n          xValue2 = options.x + width;\n        }\n      } else {\n        xValue = options.x;\n        xValue2 = options.x + width;\n      }\n      // Currect label actual start value (End)\n      if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n        continue;\n      }\n      // Previous label actual end value (Start)\n      if (isAxisBreakLabel) {\n        if (axis.lineBreakAlignment === 'Right') {\n          previousEnd = isInverse ? options.x - width : options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          previousEnd = isInverse ? options.x - width / 2 : options.x + width / 2;\n        } else {\n          previousEnd = isInverse ? options.x : options.x + width;\n        }\n      } else {\n        previousEnd = isInverse ? options.x : options.x + width;\n      }\n      // Previous label actual end value (End)\n      // ------- Hide Calculation (End) -------------\n      // label Rotataion calculation (Start)\n      if (angle !== 0) {\n        var height = void 0;\n        var rect_1 = void 0;\n        if (isAxisBreakLabel) {\n          var xAdjustment = 0;\n          var yAdjustment = 0;\n          height = label.breakLabelSize.height;\n          yAdjustment = label.breakLabelSize.height - 4; // 4 for label bound correction\n          // xAdjustment (Start)\n          if (axis.lineBreakAlignment === 'Center') {\n            xAdjustment = -(label.breakLabelSize.width / 2);\n          } else if (axis.lineBreakAlignment === 'Right') {\n            xAdjustment = -label.breakLabelSize.width;\n          }\n          // xAdjustment (End)\n          if (isLabelUnderAxisLine) {\n            yAdjustment = label.breakLabelSize.height / (options.text.length + 1);\n          }\n          rect_1 = new Rect(options.x + xAdjustment, options.y - yAdjustment, label.breakLabelSize.width, height);\n        } else {\n          height = pointY - (options.y - label.size.height / 2);\n          rect_1 = new Rect(options.x, options.y - (label.size.height / 2 - 5), label.size.width, height);\n        }\n        var rectCoordinates = this.getRectanglePoints(rect_1);\n        var rectCenterX = isAxisBreakLabel ? rect_1.x + rect_1.width / 2 : pointX;\n        var rectCenterY = isAxisBreakLabel ? rect_1.y + rect_1.height / 2 : pointY - height / 2;\n        if (isAxisBreakLabel) {\n          options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n        } else {\n          options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n        }\n        newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n        isRotatedLabelIntersect = false;\n        if (axis.labelIntersectAction !== 'None') {\n          for (var index_1 = i; index_1 > 0; index_1--) {\n            if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n              isRotatedLabelIntersect = true;\n              newPoints[i] = null;\n              break;\n            }\n          }\n        }\n        var rotateAngle = angle > 0 && angle < 90 || angle > 180 && angle < 270 || angle < -90 && angle > -180 || angle < -270 && angle > -360;\n        var textRect = new Rect(options.x, options.y - (elementSize.height / 2 + padding / 2), label.size.width, height);\n        var textRectCoordinates = this.getRectanglePoints(textRect);\n        var rectPoints = [];\n        rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y));\n        rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y + axis.maxLabelSize.height));\n        textPoints.push(getRotatedRectangleCoordinates(textRectCoordinates, rectCenterX, rectCenterY, angle));\n        var newRect = new Rect(0, axis.rect.y, this.chart.availableSize.width, axis.maxLabelSize.height * 2);\n        for (var k = 0; k < textPoints[i].length; k++) {\n          if (!axis.opposedPosition && !withInBounds(textPoints[i][k].x, textPoints[i][k].y, newRect) && typeof options.text === 'string') {\n            var interSectPoint = this.calculateIntersection(textPoints[i][0], textPoints[i][1], rectPoints[0], rectPoints[1]);\n            var rectPoint1 = rotateAngle ? this.chart.availableSize.width - pointX : pointX;\n            var rectPoint2 = interSectPoint.y - axis.rect.y;\n            var trimValue = Math.sqrt(rectPoint1 * rectPoint1 + rectPoint2 * rectPoint2);\n            options.text = textTrim(trimValue, label.text, label.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont);\n          }\n        }\n      }\n      // label Rotataion calculation (End)\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside'), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        parent.appendChild(labelElement);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.calculateIntersection = function (p1, p2, p3, p4) {\n    var c2x = p3.x - p4.x;\n    var c3x = p1.x - p2.x;\n    var c2y = p3.y - p4.y;\n    var c3y = p1.y - p2.y;\n    var d = c3x * c2y - c3y * c2x;\n    var u1 = p1.x * p2.y - p1.y * p2.x;\n    var u4 = p3.x * p4.y - p3.y * p4.x;\n    var px = (u1 * c2x - c3x * u4) / d;\n    var py = (u1 * c2y - c3y * u4) / d;\n    var p = {\n      x: px,\n      y: py\n    };\n    return p;\n  };\n  /**\n   * To get text anchor value for line break labels.\n   *\n   * @param {Axis} axis axis model\n   * @returns {string} returns text anchor\n   */\n  CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n    return axis.lineBreakAlignment === 'Center' ? 'middle' : this.chart.enableRtl ? axis.lineBreakAlignment === 'Left' ? 'end' : 'start' : axis.lineBreakAlignment === 'Left' ? 'start' : 'end';\n  };\n  /**\n   * Get rect coordinates\n   *\n   * @param {Rect} rect rect\n   * @returns {ChartLocation[]} rectangle points\n   */\n  CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n    var point1 = new ChartLocation(rect.x, rect.y);\n    var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [point1, point2, point3, point4];\n  };\n  /**\n   * To get axis label text\n   *\n   * @param {VisibleLabels} label label\n   * @param {Axis} axis axis\n   * @param {number} intervalLength intervalLength\n   * @returns {string | string[]} label or label collection\n   */\n  CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n    if (isBreakLabel(label.originalText)) {\n      var result = [];\n      var str = void 0;\n      for (var index = 0; index < label.text.length; index++) {\n        str = this.findAxisLabel(axis, label.text[index], intervalLength);\n        result.push(str);\n      }\n      return result;\n    } else {\n      return this.findAxisLabel(axis, label.text, intervalLength);\n    }\n  };\n  /**\n   * To render the x-axis label border.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} axisRect axisRect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n    if (axis.border.width > 0) {\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var startX = void 0;\n      var startY = axisRect.y + (isOpposed ? -1 : 1) * scrollBarHeight;\n      var padding = 10;\n      var pointX = void 0;\n      var gap = axisRect.width / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endX = void 0;\n      var length_2 = axis.maxLabelSize.height + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endY = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? axisRect.y + length_2 + padding + scrollBarHeight : axisRect.y - length_2 - padding - scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointX = (axis.isAxisInverse ? 1 - pointX : pointX) * axisRect.width;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startX = pointX + axisRect.x;\n          endX = pointX + gap + axisRect.x;\n        } else {\n          startX = pointX - gap * 0.5 + axisRect.x;\n          endX = pointX + gap * 0.5 + axisRect.x;\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startX < axisRect.x && axis.labelPlacement !== 'OnTicks') {\n              labelBorder += 'M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) && !(i === axis.visibleLabels.length - 1)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ';\n            } else {\n              startX = i === 0 && axis.labelPlacement === 'OnTicks' ? axisRect.x : startX;\n              endX = i === axis.visibleLabels.length - 1 && axis.labelPlacement === 'OnTicks' ? endX - gap * 0.5 : endX;\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === 0) {\n                labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + startX + ' ' + endY + ' L ' + axisRect.x + ' ' + endY;\n              }\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' + 'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY;\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' + (axisRect.x + axisRect.width) + ' ' + startY : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n      if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0 && this.chart.visibleSeries[i].visible) {\n        this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        break;\n      }\n    }\n  };\n  /**\n   * To create border element of the axis\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {string} labelBorder labelBorder\n   * @param {Element} parent parent\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n    var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n    borderElement.style.pointerEvents = 'none';\n    appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true);\n  };\n  /**\n   * To find the axis label of the intersect action\n   *\n   * @param {Axis} axis axis\n   * @param {string} label label\n   * @param {number} width width\n   * @returns {string} label\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n    return axis.labelIntersectAction === 'Trim' ? axis.angle % 360 === 0 && !axis.enableTrim ? textTrim(width, label, axis.labelStyle, this.chart.enableRtl, this.chart.themeStyle.axisLabelFont) : label : label;\n  };\n  /**\n   * X-Axis Title function performed\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var elementSize = measureText(axis.title, axis.titleStyle, this.chart.themeStyle.axisTitleFont);\n      var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : padding + 3 * elementSize.height / 4 + scrollBarHeight;\n      var labelRotation = axis.titleRotation ? axis.titleRotation : 0;\n      var x = void 0;\n      var y = rect.y + padding;\n      var anchor = void 0;\n      if (axis.titleStyle.textAlignment === 'Center') {\n        anchor = 'middle';\n        x = rect.x + rect.width * 0.5;\n      } else if (axis.titleStyle.textAlignment === 'Near') {\n        anchor = 'start';\n        x = rect.x;\n      } else {\n        anchor = 'end';\n        x = rect.x + rect.width;\n      }\n      if (labelRotation !== 0) {\n        y += axis.opposedPosition ? -(axis.titleSize.height / 2 + elementSize.height / 4) : axis.titleSize.height / 2 - elementSize.height / 4;\n      }\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y, anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont);\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\n   * To render the axis grid and tick lines(Both Major and Minor)\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {string} gridDirection gridDirection\n   * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\n   * @param {string} gridId gridId\n   * @param {number} gridIndex gridIndex\n   * @param {Element} parent parent\n   * @param {string} themeColor themeColor\n   * @param {string} dashArray dashArray\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n    if (dashArray === void 0) {\n      dashArray = null;\n    }\n    var chart = this.chart;\n    var direction;\n    var element;\n    if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n      element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      element = null;\n      this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n      appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n    }\n  };\n  /**\n   * To Find the parent node of the axis\n   *\n   * @param {string} elementId elementId\n   * @param {Element} label label\n   * @param {number} index index\n   * @returns {Element} parent node of the axis\n   */\n  CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\n    if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n    } else {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n    }\n  };\n  /**\n   * Create Zooming Labels Function Called here\n   *\n   * @param {Chart} chart chart\n   * @param {Element} labelElement labelElement\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n    var parentNode = this.findParentNode(chart.element.id, labelElement, index);\n    labelElement.setAttribute('opacity', '0.3');\n    var zoomElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels_Zoom' + index\n    });\n    zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n    parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n    if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n      parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n    } else {\n      parentNode.appendChild(zoomElement);\n    }\n  };\n  return CartesianAxisLayoutPanel;\n}();\nexport { CartesianAxisLayoutPanel };","map":{"version":3,"names":["createElement","isNullOrUndefined","DataUtil","subtractThickness","valueToCoefficient","sum","redrawElement","isBreakLabel","ChartLocation","withInBounds","rotateTextSize","subArray","inside","appendChildElement","stringToNumber","Thickness","logBase","createZoomingLabels","getElement","Size","Rect","measureText","TextOption","PathOption","textElement","textTrim","getRotatedRectangleCoordinates","isRotatedRectIntersect","isZoomSet","axisPadding","CartesianAxisLayoutPanel","chartModule","chart","padding","prototype","measureAxis","rect","chartAreaWidth","chartArea","width","availableSize","crossAt","seriesClipRect","x","y","height","initialClipRect","leftSize","rightSize","topSize","bottomSize","measureRowAxis","measureColumnAxis","delayRedraw","calculateAxisSize","calculateFixedChartArea","refreshAxis","margin","right","legendSettings","position","legendModule","legendBounds","_i","_a","rows","length","item","farSizes","row","calculateRowSize","nearSizes","insideNearSizes","insideFarSizes","arrangeAxis","measureDefinition","computedHeight","column","calculateColumnSize","columns","computedWidth","definition","size","ele","axes","axis","scrollbarSettings","scrollBarHeight","scrollBarModule","zoomModule","zoomSettings","enableScrollbar","enableScrollbarOnZooming","isZoomed","zoomFactor","zoomPosition","enable","getModule","baseModule","calculateRangeAndInterval","computeSize","nearCount","farCount","axisOffset","i","len","j","len_1","plotOffset","k","len_2","span","computedTop","plotOffsetTop","getAxisOffsetValue","plotOffsetBottom","isAxisOpposedPosition","labelPosition","orientation","len_3","len_4","computedLeft","plotOffsetLeft","plotOffsetRight","measure","actualIndex","axisCollections","verticalAxes","push","getActualRow","pushAxis","horizontalAxes","getActualColumn","isRTLEnabled","enableRtl","setIsInversedAndOpposedPosition","position1","position2","rangeOffset","crossesAt","crossesInAxis","requireInvertedAxis","crossInAxis","primaryXAxis","primaryYAxis","updateCrossAt","name","valueType","option","skeleton","type","dateParser","intl","getDateParser","dateFormatter","getDateFormat","Date","parse","parseJson","val","parseFloat","labels","indexOf","axisCollection","actualLength","pos","columnIndex","result","rowIndex","rowTop","remainingHeight","Math","max","min","parseInt","columnLeft","remainingWidth","renderAxes","axisElement","renderer","createGroup","id","element","axisLineElement","setAttribute","outsideElement","isInside","axisVisibility","series","yAxisName","xAxisName","visible","category","paretoOptions","showAxis","findAxisPosition","updateCrossValue","internalVisibility","lineStyle","drawAxisLine","updatedRect","majorGridLines","majorTickLines","minorTickLines","minorGridLines","drawXAxisGridLine","tickPosition","drawXAxisLabels","placeNextToAxisLine","drawXAxisBorder","drawXAxisTitle","drawYAxisGridLine","drawYAxisLabels","drawYAxisBorder","drawYAxisTitle","enableCanvas","appendChild","childNodes","renderScrollbar","border","color","drawBottomLine","svgObject","redraw","zoomingScrollBar","isScrollUI","scrollElement","render","destroy","style","top","left","visibleRange","index","isRow","optionsLine","x1","x2","y1","y2","definitionName","htmlObject","drawLine","plotX","plotY","plotBottom","plotTop","plotLeft","plotRight","parent","direction","getAttribute","dashArray","themeStyle","axisLine","drawPath","isLogAxis","isCategoryAxis","tempInterval","pointY","majorGrid","majorTick","minorGridDirection","isOpposed","tickSize","axisLineSize","ticksbwtLabel","labelPlacement","isTickInside","ticks","visibleLabels","chartThemeStyle","stockChart","value","interval","isBorder","renderGridLine","majorGridLine","majorTickLine","minorTicksPerInterval","renderMinorGridOnZooming","drawAxisMinorLine","minorGridLine","minorTickLine","start","startIndex","endIndex","label","pointX","elementSize","labelSpace","labelPadding","options","isAxisBreakLabel","isLabelInside","RotatedWidth","tickSpace","angle","isVerticalAngle","labelElement","textHeight","textPadding","maxLineWidth","pixel","isInverse","isAxisInverse","previousEnd","intervalLength","labelHeight","yAxisLabelX","isLabelOnAxisLineLeft","sizeWidth","breakLabelSizeWidth","map","breakLabelSize","LabelMaxWidth","apply","breakLabelMaxWidth","cos","PI","originalText","floor","text","labelIntersectAction","isInversed","opposedPosition","labelStyle","textAlignment","edgeLabelPlacement","previousYValue","currentYValue","transform","axisLabelFont","createZoomingLabel","getAxisLabelXvalue","textWidth","anchor","lineBreakAlignment","startY","gap","delta","dateTimeInterval","endY","length_1","maxLabelSize","labelBorder","endX","createAxisBorderElement","visibleSeries","multiLevelLabels","multiLevelLabelModule","renderYAxisMultiLevelLabels","title","isRotated","labelRotation","titleRotation","titlePadding","multiLevelLabelHeight","titleSize","titleStyle","titleCollection","axisTitleFont","minorDirection","labelIndex","isFirstLabel","coor","range","logStart","logEnd","logInterval","logPosition","ticksX","ticksY","minorGird","minorTick","pow","findLogNumeric","ceil","concat","tempValue","islabelInside","isHorizontalAngle","labelWidth","isLeft","newPoints","isRotatedLabelIntersect","textPoints","rotatedLabelSize","isLabelUnderAxisLine","isEndAnchor","paddingForBreakLabel","getAnchor","isRtlEnabled","maxWidth","i_1","breakLabelWidth","getLabelText","xValue","xValue2","rect_1","xAdjustment","yAdjustment","rectCoordinates","getRectanglePoints","rectCenterX","rectCenterY","index_1","rotateAngle","textRect","textRectCoordinates","rectPoints","newRect","interSectPoint","calculateIntersection","rectPoint1","rectPoint2","trimValue","sqrt","p1","p2","p3","p4","c2x","c3x","c2y","c3y","d","u1","u4","px","py","p","point1","point2","point3","point4","str","findAxisLabel","axisRect","startX","length_2","renderXAxisMultiLevelLabels","borderElement","pointerEvents","enableTrim","gridDirection","gridModel","gridId","gridIndex","themeColor","findParentNode","elementId","document","getElementById","contains","parentNode","zoomElement","replaceChild"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-charts/src/chart/axis/cartesian-panel.js"],"sourcesContent":["import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation, withInBounds, rotateTextSize } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */ (function () {\n    /** @private */\n    function CartesianAxisLayoutPanel(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * Measure the axis size.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\n        this.crossAt(chart);\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        this.initialClipRect = rect;\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with initial Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            this.calculateAxisSize(this.initialClipRect);\n        }\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with series Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (chartAreaWidth) {\n            this.calculateFixedChartArea(chart, chartAreaWidth);\n        }\n        if (!this.chart.delayRedraw) {\n            chart.refreshAxis();\n            this.calculateAxisSize(this.seriesClipRect);\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\n        this.seriesClipRect.width = chartAreaWidth;\n        this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth -\n            (chart.legendSettings.position === 'Right' ? chart.legendModule.legendBounds.width : 0);\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.seriesClipRect.x -= sum(item.farSizes);\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n        var row;\n        this.calculateRowSize(rect);\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n            var item = _a[_i];\n            row = item;\n            row.nearSizes = [];\n            row.farSizes = [];\n            row.insideNearSizes = [];\n            row.insideFarSizes = [];\n            this.arrangeAxis(row);\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n            if (this.leftSize < sum(row.nearSizes)) {\n                this.leftSize = sum(row.nearSizes);\n            }\n            if (this.rightSize < sum(row.farSizes)) {\n                this.rightSize = sum(row.farSizes);\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n        var column;\n        this.calculateColumnSize(rect);\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var item = _a[_i];\n            column = item;\n            column.farSizes = [];\n            column.nearSizes = [];\n            column.insideNearSizes = [];\n            column.insideFarSizes = [];\n            this.arrangeAxis(column);\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n            if (this.bottomSize < sum(column.nearSizes)) {\n                this.bottomSize = sum(column.nearSizes);\n            }\n            if (this.topSize < sum(column.farSizes)) {\n                this.topSize = sum(column.farSizes);\n            }\n        }\n    };\n    /**\n     * Measure the column and row in chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\n        var ele;\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            ele = axis.scrollbarSettings.height;\n            axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n            axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)\n                || axis.scrollbarSettings.enable) ? ele : 0;\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n            definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\n        }\n        if (definition.farSizes.length > 0) {\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n        }\n        if (definition.nearSizes.length > 0) {\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var axis;\n        var nearCount = 0;\n        var farCount = 0;\n        var size = 0;\n        var x;\n        var y;\n        var axisOffset;\n        this.calculateRowSize(rect);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n                axis = row.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.height === 0) {\n                    axis.rect.height = row.computedHeight;\n                    size = 0;\n                    for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n                        definition = chart.rows[k];\n                        size += definition.computedHeight;\n                    }\n                    axis.rect.y = (row.computedTop - size) + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n                    axis.rect.height = (axis.rect.height + size) -\n                        (this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset));\n                    axis.rect.width = 0;\n                }\n                if (axis.isAxisOpposedPosition) {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n                        x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\n                    }\n                    else {\n                        x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n                    }\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n                    farCount++;\n                }\n                else {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n                        x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\n                    }\n                    else {\n                        x = rect.x - sum(subArray(row.nearSizes, nearCount));\n                    }\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n                    nearCount++;\n                }\n            }\n        }\n        this.calculateColumnSize(rect);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n                axis = column.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.width === 0) {\n                    for (var k = i, len_4 = (i + axis.span); k < len_4; k++) {\n                        definition = chart.columns[k];\n                        axis.rect.width += definition.computedWidth;\n                    }\n                    axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n                    axis.rect.width -= (this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset));\n                    axis.rect.height = 0;\n                }\n                if (axis.isAxisOpposedPosition) {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n                        y = rect.y + sum(subArray(column.insideFarSizes, farCount));\n                    }\n                    else {\n                        y = rect.y - sum(subArray(column.farSizes, farCount));\n                    }\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n                    farCount++;\n                }\n                else {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n                        y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\n                    }\n                    else {\n                        y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n                    }\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n                    nearCount++;\n                }\n            }\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measure = function () {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var actualIndex;\n        var span;\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            //definition.Axes = axis;\n            if (axis.orientation === 'Vertical') {\n                chart.verticalAxes.push(axis);\n                actualIndex = this.getActualRow(axis);\n                row = chart.rows[actualIndex];\n                this.pushAxis(row, axis);\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.rows[j];\n                    definition.axes[row.axes.length - 1] = axis;\n                    chart.rows[j] = definition;\n                }\n                chart.rows[actualIndex] = row;\n            }\n            else {\n                chart.horizontalAxes.push(axis);\n                actualIndex = this.getActualColumn(axis);\n                column = chart.columns[actualIndex];\n                this.pushAxis(column, axis);\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.columns[j];\n                    definition.axes[column.axes.length - 1] = axis;\n                    chart.columns[j] = definition;\n                }\n                chart.columns[actualIndex] = column;\n            }\n            axis.isRTLEnabled = chart.enableRtl;\n            axis.setIsInversedAndOpposedPosition();\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n        var rangeOffset = position1 ? (position1 + (position2 ? position2 :\n            plotOffset)) : (position2 ? position2 + plotOffset : 2 * plotOffset);\n        return rangeOffset;\n    };\n    CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            if (axis.crossesAt === null) {\n                continue;\n            }\n            if (!axis.crossesInAxis) {\n                if (chart.requireInvertedAxis) {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\n                }\n                else {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\n                }\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                continue;\n            }\n            else {\n                for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\n                        axis.crossInAxis = chart.axisCollections[i];\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                        continue;\n                    }\n                }\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n        switch (axis.valueType) {\n            case 'DateTime':\n                var option = {\n                    skeleton: 'full',\n                    type: 'dateTime'\n                };\n                var dateParser = this.chart.intl.getDateParser(option);\n                var dateFormatter = this.chart.intl.getDateFormat(option);\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\n            case 'Category':\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n            case 'Logarithmic':\n                return logBase(crossAt, axis.logBase);\n            default:\n                return crossAt;\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (!definition.axes[i]) {\n                definition.axes[i] = axis;\n                break;\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n        var axisCollection = [];\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (definition.axes[i]) {\n                axisCollection.push(definition.axes[i]);\n            }\n        }\n        definition.axes = axisCollection;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n        var actualLength = this.chart.columns.length;\n        var pos = axis.columnIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n        var actualLength = this.chart.rows.length;\n        var pos = axis.rowIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row;\n        var rowTop = rect.y + rect.height;\n        var height = 0;\n        var remainingHeight = Math.max(0, rect.height);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            if (row.height.indexOf('%') !== -1) {\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\n            }\n            else {\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\n            }\n            height = (i !== (len - 1)) ? height : remainingHeight;\n            row.computedHeight = height;\n            rowTop -= height;\n            row.computedTop = rowTop;\n            remainingHeight -= height;\n        }\n    };\n    /**\n     * Measure the row size.\n     *\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column;\n        var columnLeft = rect.x;\n        var width = 0;\n        var remainingWidth = Math.max(0, rect.width);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            if (column.width.indexOf('%') !== -1) {\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\n            }\n            else {\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\n            }\n            width = (i !== (len - 1)) ? width : remainingWidth;\n            column.computedWidth = width;\n            column.computedLeft = columnLeft;\n            columnLeft += width;\n            remainingWidth -= width;\n        }\n    };\n    /**\n     * To render the axis element.\n     *\n     * @returns {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n        var chart = this.chart;\n        var axis;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        if (axisLineElement) {\n            axisLineElement.setAttribute('aria-hidden', 'true');\n        }\n        var outsideElement;\n        var isInside;\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            var axisVisibility = true;\n            axis = chart.axisCollections[i];\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\n            if (this.element) {\n                this.element.setAttribute('aria-hidden', 'true');\n            }\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\n            if (outsideElement) {\n                outsideElement.setAttribute('aria-hidden', 'true');\n            }\n            for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\n                var series = _a[_i];\n                if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\n                    axisVisibility = series.visible;\n                    if (series.category === 'Pareto' && !series.paretoOptions.showAxis && series.type === 'Line') {\n                        axisVisibility = false;\n                    }\n                    if (!axisVisibility) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (!axisVisibility) {\n                continue;\n            }\n            isInside = this.findAxisPosition(axis);\n            if (axis.orientation === 'Horizontal') {\n                axis.updateCrossValue();\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 || axis.minorGridLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            else {\n                axis.updateCrossValue();\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 || axis.minorGridLines.width > 0) {\n                    this.drawYAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            if (!this.chart.enableCanvas) {\n                axisElement.appendChild(this.element);\n                if (outsideElement && outsideElement.childNodes.length > 0) {\n                    axisLineElement.appendChild(outsideElement);\n                }\n            }\n            if (chart.scrollBarModule && ((chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming) ||\n                axis.scrollbarSettings.enable)) {\n                this.renderScrollbar(chart, axis);\n            }\n        }\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\n        for (var j = 0, len = chart.rows.length; j < len; j++) {\n            var row = chart.rows[j];\n            if (row.border.color) {\n                this.drawBottomLine(row, j, true);\n            }\n        }\n        for (var j = 0, len = chart.columns.length; j < len; j++) {\n            var column = chart.columns[j];\n            if (column.border.color) {\n                this.drawBottomLine(column, j, false);\n            }\n        }\n        if (!this.chart.enableCanvas) {\n            axisElement.appendChild(this.element);\n        }\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    /**\n     * To render the axis scrollbar\n     *\n     * @param {Chart} chart chart\n     * @param {Axis} axis axis\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n        var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n        if (((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) || (axis.scrollbarSettings.enable &&\n            (axis.zoomFactor <= 1 || axis.zoomPosition >= 0))) &&\n            (!axis.zoomingScrollBar.isScrollUI)) {\n            if (!chart.scrollElement) {\n                chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', { id: chart.element.id + '_scrollElement' });\n            }\n            appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n        }\n        else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n            axis.zoomingScrollBar.destroy();\n        }\n        else if (axis.zoomingScrollBar.svgObject) {\n            axis.zoomingScrollBar.svgObject.style.top = (axis.isAxisOpposedPosition && axis.orientation === 'Horizontal' ? -16 : 0)\n                + axis.rect.y + Math.max(0.5, axis.lineStyle.width / 2) + 'px';\n            axis.zoomingScrollBar.svgObject.style.left = (axis.isAxisOpposedPosition && axis.orientation !== 'Horizontal' ? 16 : 0)\n                + axis.rect.x - (axis.orientation === 'Vertical' ? axis.scrollbarSettings.height : 0) + 'px';\n        }\n        if (axis.zoomingScrollBar.isScrollUI) {\n            axis.zoomingScrollBar.isScrollUI = false;\n        }\n    };\n    /**\n     * To find the axis position\n     *\n     * @param {Axis} axis axis\n     * @returns {boolean} axis position\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n    };\n    /**\n     * To render the bootom line of the columns and rows\n     *\n     * @param {Row | Column} definition definition\n     * @param {number} index index\n     * @param {boolean} isRow isRow\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var x1;\n        var x2;\n        var y1;\n        var y2;\n        var definitionName;\n        if (isRow) {\n            definition = definition;\n            y1 = y2 = definition.computedTop + definition.computedHeight;\n            x1 = this.seriesClipRect.x;\n            x2 = x1 + this.seriesClipRect.width;\n            definitionName = 'Row';\n        }\n        else {\n            definition = definition;\n            x1 = x2 = definition.computedLeft;\n            y1 = this.seriesClipRect.y;\n            y2 = y1 + this.seriesClipRect.height;\n            definitionName = 'Column';\n        }\n        optionsLine = {\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            'stroke-width': definition.border.width,\n            'stroke': definition.border.color\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        this.element.appendChild(this.htmlObject);\n    };\n    /**\n     * To render the axis line\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {number} plotX plotX\n     * @param {number} plotY plotY\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var element = getElement(chart.element.id + 'AxisLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        element = null;\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) +\n                ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        this.htmlObject = chart.renderer.drawPath(optionsLine);\n        appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n    };\n    /**\n     * To render the yAxis grid line\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointY = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGridDirection;\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\n        var axisLineSize = (isOpposed) ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight :\n            -axis.scrollBarHeight : 0;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize + scrollBarHeight);\n        var length = axis.visibleLabels.length;\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0 && !this.chart.stockChart) {\n            length += 1;\n        }\n        var minorGridLines = axis.minorGridLines;\n        var minorTickLines = axis.minorTickLines;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\n                : axis.visibleLabels[i].value - ticksbwtLabel;\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n            pointY = (pointY * -1) + (rect.y + rect.height);\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\n                    majorGrid = 'M ' + this.seriesClipRect.x + ' ' + (pointY) +\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY +\n                    ' L ' + (ticks) + ' ' + pointY;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To check the border of the axis\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {number} value value\n     * @returns {boolean} check the border of the axis\n     */\n    CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n        var border = this.chart.chartArea.border;\n        var rect = this.seriesClipRect;\n        var orientation = axis.orientation;\n        var start = (orientation === 'Horizontal') ? rect.x : rect.y;\n        var size = (orientation === 'Horizontal') ? rect.width : rect.height;\n        var startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\n        var endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\n        if (axis.plotOffset > 0) {\n            return true;\n        }\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\n            return true;\n        }\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * To render the yAxis label\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var label;\n        var pointX = 0;\n        var pointY = 0;\n        var elementSize;\n        var labelSpace = axis.labelPadding;\n        var options;\n        var isAxisBreakLabel;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        var RotatedWidth;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        var angle = axis.angle % 360;\n        var isVerticalAngle = (angle === -90 || angle === 90 || angle === 270 || angle === -270);\n        padding += (isVerticalAngle) ? (isLabelInside ? 5 : -5) : 0;\n        padding = (isOpposed) ? padding : -padding;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n        var textHeight;\n        var textPadding;\n        var maxLineWidth;\n        var pixel = 10;\n        var isInverse = axis.isAxisInverse;\n        var previousEnd = isInverse ? rect.y : (rect.y + rect.height);\n        var labelPadding;\n        var intervalLength;\n        var labelHeight;\n        var yAxisLabelX;\n        var isLabelOnAxisLineLeft = ((!isOpposed && !isLabelInside) || (isOpposed && isLabelInside));\n        if (isLabelInside) {\n            labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\n        }\n        else {\n            labelPadding = !isLabelOnAxisLineLeft ? -padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight) : padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight);\n        }\n        var sizeWidth = [];\n        var breakLabelSizeWidth = [];\n        axis.visibleLabels.map(function (item) {\n            sizeWidth.push(item.size['width']);\n            breakLabelSizeWidth.push(item.breakLabelSize['width']);\n        });\n        var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\n        var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\n        RotatedWidth = LabelMaxWidth;\n        if (angle >= -45 && angle <= 45 && angle !== 0) {\n            RotatedWidth = LabelMaxWidth * Math.cos(angle * Math.PI / 180);\n            if (RotatedWidth < 0) {\n                RotatedWidth = -RotatedWidth;\n            }\n        }\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n            elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n            pointY = (valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height) + (chart.stockChart ? 7 : 0);\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\n            textHeight = ((elementSize.height / 8) * axis.visibleLabels[i].text.length / 2);\n            textPadding = (chart.requireInvertedAxis && axis.labelPosition === 'Inside') ? 0 : ((elementSize.height / 4) * 3) + 3;\n            intervalLength = rect.height / axis.visibleLabels.length;\n            labelHeight = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 &&\n                elementSize.width > intervalLength) ? intervalLength : elementSize.width;\n            pointY = (isAxisBreakLabel ? (axis.labelPosition === 'Inside' ? (pointY - (elementSize.height / 2) - textHeight + textPadding)\n                : (pointY - textHeight)) : (axis.labelPosition === 'Inside' ? pointY + textPadding : pointY));\n            if (axis.labelPosition === 'Inside' && ((i === 0 && !axis.isInversed) || (i === len - 1 && axis.isInversed))) {\n                if (chart.stockChart) {\n                    pointY -= (textPadding);\n                }\n                else {\n                    pointY -= (textPadding - ((chart.requireInvertedAxis && axis.labelPosition === 'Inside') ? 0 : (axis.opposedPosition ? -padding : padding)));\n                }\n            }\n            if (axis.majorGridLines.width > axis.majorTickLines.width) {\n                maxLineWidth = axis.majorGridLines.width;\n            }\n            else {\n                maxLineWidth = axis.majorTickLines.width;\n            }\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointY = pointY - maxLineWidth - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointY = pointY + maxLineWidth + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                // eslint-disable-next-line no-self-assign\n                pointY = pointY;\n            }\n            // label X value adjustment (Start)\n            if (isLabelInside) {\n                yAxisLabelX = labelPadding + ((angle === 0 ? elementSize.width : (isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth)) / 2);\n            }\n            else {\n                yAxisLabelX = labelPadding - ((angle === 0 ? elementSize.width : (isAxisBreakLabel ? breakLabelMaxWidth : RotatedWidth)) / 2);\n            }\n            pointX = isOpposed ? (rect.x - yAxisLabelX) : (rect.x + yAxisLabelX);\n            if (isVerticalAngle) {\n                pointX += (isOpposed) ? -10 : 10;\n            }\n            yAxisLabelX = labelPadding;\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle', angle);\n            switch (axis.edgeLabelPlacement) {\n                case 'None':\n                    break;\n                case 'Hide':\n                    if (((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y) ||\n                        (((i === len - 1) || (isInverse && i === 0)) && options.y - elementSize.height * 0.5 < rect.y)) {\n                        options.text = '';\n                    }\n                    break;\n                case 'Shift':\n                    if ((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y + rect.height) {\n                        options.y = pointY = rect.y + rect.height;\n                    }\n                    else if (((i === len - 1) || (isInverse && i === 0)) && ((options.y < rect.y) || (options.y - elementSize.height / 2 < -1))) {\n                        options.y = pointY = rect.y + elementSize.height * 0.5;\n                    }\n                    break;\n            }\n            // ------- Hide Calculation (Start) -------------\n            var previousYValue = options.y;\n            var currentYValue = options.y - labelHeight;\n            if (isAxisBreakLabel) {\n                previousYValue = (options.y - (labelHeight / 2));\n                currentYValue = options.y + (labelHeight / 2);\n            }\n            if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\n                continue;\n            }\n            previousEnd = isInverse ? previousYValue : currentYValue;\n            // ------- Hide Calculation (End) -------------\n            options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    /**\n     * To get X value based on lineBreakAlignment for Y axis line break labels only.\n     *\n     * @param {number} x text x position\n     * @param {Axis} axis y axis values\n     * @param {number} textWidth axis label width\n     * @returns {number} returns suitable axis label x position\n     */\n    CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n        var anchor = axis.lineBreakAlignment;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        if ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) {\n            return (anchor === 'Right' ? x : (anchor === 'Center' ? (x - textWidth / 2) : (x - textWidth)));\n        }\n        else {\n            return (anchor === 'Left' ? x : (anchor === 'Center' ? (x + textWidth / 2) : (x + textWidth)));\n        }\n    };\n    /**\n     * To render the yAxis label border.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n        if (axis.border.width > 0) {\n            var startY = void 0;\n            var pointY = void 0;\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            var isOpposed = axis.isAxisOpposedPosition;\n            scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\n            var gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endY = void 0;\n            var length_1 = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\n                axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endX = ((isOpposed && axis.labelPosition === 'Inside') || (!isOpposed\n                && axis.labelPosition === 'Outside')) ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointY = (axis.isAxisInverse ? (1 - pointY) : pointY) * rect.height;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startY = (pointY * -1) + (rect.y + rect.height);\n                    endY = (pointY * -1) - (gap) + (rect.y + rect.height);\n                }\n                else {\n                    startY = (pointY * -1) + gap / 2 + (rect.y + rect.height);\n                    endY = (pointY * -1) - gap / 2 + (rect.y + rect.height);\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startY > (rect.y + rect.height)) {\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(rect.y) > (endY)) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' +\n                                    endX + ' ' + endY + ' ');\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\n                                'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' +\n                (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ') : '';\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n            if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule && this.chart.visibleSeries[i].visible) {\n                this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n                break;\n            }\n        }\n    };\n    /**\n     * To render the yAxis title\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var isRotated = false;\n            var isOpposed = axis.isAxisOpposedPosition;\n            var labelRotation = (axis.titleRotation == null ? (isOpposed ? 90 : -90) : axis.titleRotation) % 360;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\n            padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n            if ((labelRotation !== -90 && !isOpposed) || (labelRotation !== 90 && isOpposed)) {\n                padding += axis.isAxisOpposedPosition ? axis.titleSize.width / 2 + axis.labelPadding : -axis.titleSize.width / 2 - axis.labelPadding;\n                isRotated = true;\n            }\n            var x = rect.x + padding;\n            var y = void 0;\n            var anchor = void 0;\n            if (axis.titleStyle.textAlignment === 'Center') {\n                anchor = 'middle';\n                y = rect.y + rect.height * 0.5;\n            }\n            else if (axis.titleStyle.textAlignment === 'Near') {\n                anchor = axis.opposedPosition ? 'end' : 'start';\n                y = rect.height + rect.y;\n            }\n            else {\n                anchor = axis.opposedPosition ? 'start' : 'end';\n                y = rect.y;\n            }\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y + (isRotated ? -titleSize : -axis.labelPadding - titleSize), anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont);\n            element.setAttribute('aria-hidden', 'true');\n        }\n    };\n    /**\n     * xAxis grid line calculation performed here\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointX = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorDirection;\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSize = (isOpposed) ? -axis.majorTickLines.height : axis.majorTickLines.height;\n        var axisLineSize = (isOpposed) ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight :\n            axis.scrollBarHeight : 0;\n        var ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) ?\n            0.5 : 0;\n        var length = axis.visibleLabels.length;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize + scrollBarHeight);\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) {\n            length += 1;\n        }\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                tempInterval = axis.visibleLabels[i] ?\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n            }\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n                    majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (pointX) + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0))\n                    + ' L ' + (pointX) + ' ' + ticks;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To render missing minor grid lines while zooming\n     *\n     * @param {Axis} axis axis\n     * @param {number} tempInterval tempInterval\n     * @param {Rect} rect rect\n     * @param {number} i i\n     * @param {number} index index\n     * @param {IThemeStyle} chartThemeStyle chartThemeStyle\n     * @param {Element} parent parent\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n        var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n        this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n        this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n    };\n    /**\n     * To calcualte the axis minor line\n     *\n     * @param {Axis} axis axis\n     * @param {number} tempInterval tempInterval\n     * @param {Rect} rect rect\n     * @param {number} labelIndex labelIndex\n     * @param {boolean} isFirstLabel isFirstLabel\n     * @returns {string[]} axis minor line path\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n        var value = tempInterval;\n        var coor = 0;\n        var position = 0;\n        var range = axis.visibleRange;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var direction = [];\n        var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n        var logStart;\n        var logEnd;\n        var logInterval = 1;\n        var logPosition = 1;\n        var ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\n        var ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\n        var minorGird = '';\n        var minorTick = '';\n        var isInverse = axis.isAxisInverse;\n        if (axis.valueType === 'Logarithmic') {\n            logStart = Math.pow(axis.logBase, value - range.interval);\n            logEnd = Math.pow(axis.logBase, value);\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n            logPosition = logStart + logInterval;\n        }\n        if (axis.orientation === 'Horizontal') {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                logPosition += logInterval;\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil((isInverse ? (1 - position) : position) * rect.width);\n                    coor = (Math.floor(position + rect.x));\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n                    coor = (Math.floor(position + rect.x));\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\n                        + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil(((isInverse ? (1 - position) : position)) * rect.height) * -1; // For inversed axis\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) +\n                        ' ' + coor + ' ');\n                }\n                logPosition += logInterval;\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To find the numeric value of the log\n     *\n     * @param {Axis} axis axis\n     * @param {number} logPosition logPosition\n     * @param {number} value value\n     * @param {number} labelIndex labelIndex\n     * @param {boolean} isFirstLabel isFirstLabel\n     * @returns {number} value\n     */\n    CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n        var range = axis.visibleRange;\n        var tempValue;\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(logPosition, axis.logBase);\n        }\n        else if (axis.valueType === 'DateTime') {\n            tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        else if (axis.valueType === 'DateTimeCategory') {\n            var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n            value += ((axis.visibleLabels[labelIndex + 1] ?\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\n                (axis.visibleLabels[labelIndex] ?\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\n                (axis.minorTicksPerInterval + 1);\n        }\n        else {\n            tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        return value;\n    };\n    /**\n     * To render the xAxis Labels\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelSpace = axis.labelPadding;\n        var labelHeight;\n        var elementSize;\n        var labelPadding;\n        var anchor;\n        var pixel = 10;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var islabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        var angle = axis.angle % 360;\n        var isHorizontalAngle = (angle === 0 || angle === -180 || angle === 180);\n        var options;\n        var labelWidth;\n        var isInverse = axis.isAxisInverse;\n        var isLeft;\n        var previousEnd = isInverse ? (rect.x + rect.width) : rect.x;\n        var width = 0;\n        var length = axis.visibleLabels.length;\n        var intervalLength;\n        var label;\n        var isAxisBreakLabel;\n        var scrollBarHeight = axis.scrollbarSettings.enable || (!islabelInside && isNullOrUndefined(axis.crossesAt)\n            && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) ? axis.scrollBarHeight : 0;\n        var newPoints = [];\n        var isRotatedLabelIntersect = false;\n        var textPoints = [];\n        var rotatedLabelSize = new Size(0, 0);\n        padding += (angle === 90 || angle === 270 || angle === -90 || angle === -270) ? (islabelInside ? 5 : -5) : 0;\n        var isLabelUnderAxisLine = ((!isOpposed && !islabelInside) || (isOpposed && islabelInside));\n        var isEndAnchor = isLabelUnderAxisLine ?\n            ((360 >= angle && angle >= 180) || (-1 >= angle && angle >= -180)) :\n            ((1 <= angle && angle <= 180) || (-181 >= angle && angle >= -360));\n        for (var i = 0, len = length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            isAxisBreakLabel = isBreakLabel(label.originalText) || (axis.labelIntersectAction === 'Wrap' && label.text.length > 1);\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\n            elementSize = label.size;\n            intervalLength = rect.width / length;\n            labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 &&\n                labelWidth > intervalLength) ? intervalLength : labelWidth;\n            labelHeight = elementSize.height / 4;\n            pointX -= (isAxisBreakLabel || angle !== 0) ? 0 : (width / 2);\n            // label X value adjustment for label rotation (Start)\n            if (angle !== 0) {\n                if (isAxisBreakLabel) {\n                    pointX -= axis.lineBreakAlignment === 'Left' ? (label.breakLabelSize.width / 2) : axis.lineBreakAlignment === 'Right' ?\n                        -(label.breakLabelSize.width / 2) : 0;\n                }\n                else {\n                    pointX -= (angle === -90 || angle === 270 ? -labelHeight : (angle === 90 || angle === -270) ? labelHeight : 0);\n                }\n            }\n            // label X value adjustment for label rotation (End)\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointX = pointX + width - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointX = pointX - width + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                // eslint-disable-next-line no-self-assign\n                pointX = pointX;\n            }\n            // For line break label alignment like left, right & center in angle 0\n            if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n                pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : (width / 2);\n            }\n            var paddingForBreakLabel = isAxisBreakLabel ?\n                (isHorizontalAngle ? (axis.opposedPosition || islabelInside ? 0 : elementSize.height) : (label.breakLabelSize.width / 2)) : 0;\n            padding = isAxisBreakLabel ? (tickSpace + labelSpace + axis.lineStyle.width * 0.5) : padding;\n            // label Y value adjustment (Start)\n            if (islabelInside && angle) {\n                if (isAxisBreakLabel) {\n                    pointY = isOpposed ? (rect.y + padding + (paddingForBreakLabel)) : (rect.y - padding - (paddingForBreakLabel));\n                }\n                else {\n                    pointY = isOpposed ? (rect.y + padding + labelHeight) : (rect.y - padding - labelHeight);\n                }\n            }\n            else {\n                if (isAxisBreakLabel) {\n                    labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (paddingForBreakLabel)) :\n                        padding + scrollBarHeight + (angle ? paddingForBreakLabel : (3 * labelHeight));\n                }\n                else {\n                    labelPadding = !isLabelUnderAxisLine ?\n                        -(padding + scrollBarHeight + (angle ? labelHeight : (label.index > 1 ? (2 * labelHeight) : 0))) :\n                        padding + scrollBarHeight + ((angle ? 1 : 3) * labelHeight);\n                }\n                pointY = (rect.y + (labelPadding * label.index));\n            }\n            // label Y value adjustment (End)\n            if (isAxisBreakLabel) {\n                anchor = this.getAnchor(axis); // for break label self alignment\n            }\n            else {\n                anchor = (chart.enableRtl) ? ((isEndAnchor) ? '' : 'end') : (chart.isRtlEnabled || isEndAnchor) ? 'end' : '';\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n            if (angle !== 0) {\n                rotatedLabelSize = rotateTextSize(label.labelStyle, label.originalText, angle, chart);\n                isLeft = ((angle < 0 && angle > -90) || (angle < -180 && angle > -270) || (angle > 90 && angle < 180) || (angle > 270 && angle < 360));\n            }\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (isInverse && i === len - 1)) && options.x < rect.x) ||\n                            ((i === len - 1 || (isInverse && i === 0)) && (options.x + (angle === 0 ? width : rotatedLabelSize.width) > rect.x + rect.width))) {\n                            continue;\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (isInverse && i === len - 1)) && (options.x < rect.x || (angle !== 0 && isLeft && options.x - rotatedLabelSize.width <= rect.x) || (axis.lineBreakAlignment === 'Center' && options.x - (label.size.width / label.text.length) / 2 < rect.x && angle === 0))) {\n                            intervalLength -= (rect.x - options.x);\n                            if (anchor === '' && !isInverse && angle === 0) {\n                                if (options.x <= 0) {\n                                    pointX = options.x = 0;\n                                }\n                                else {\n                                    pointX = options.x;\n                                }\n                                intervalLength = rect.width / length;\n                            }\n                            else if (isLeft && angle !== 0) {\n                                intervalLength = rect.width / length;\n                                if (rect.x + intervalLength > options.x + rotatedLabelSize.width) {\n                                    options.x = pointX = rect.x + padding;\n                                }\n                                else {\n                                    options.x = pointX = rect.x + intervalLength - padding;\n                                }\n                            }\n                            else if (isAxisBreakLabel && axis.lineBreakAlignment === 'Center' && axis.labelPlacement === 'OnTicks' && angle === 0) {\n                                var maxWidth = 0;\n                                for (var i_1 = 0; i_1 < label.text.length; i_1++) {\n                                    var breakLabelWidth = measureText(label.text[i_1], axis.labelStyle, chart.themeStyle.axisLabelFont).width;\n                                    if (breakLabelWidth > maxWidth) {\n                                        maxWidth = breakLabelWidth;\n                                    }\n                                }\n                                options.x = pointX = rect.x + maxWidth / 2;\n                            }\n                            else if (!(anchor === 'start' && options.x > 0)) {\n                                options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\n                            }\n                        }\n                        else if ((i === len - 1 || (isInverse && i === 0)) && (((options.x + width) > rect.x + rect.width && anchor !== 'end' && angle === 0) || (angle !== 0 && !isLeft && (options.x + rotatedLabelSize.width) > rect.x + rect.width) || (anchor === 'end' && options.x > rect.x + rect.width))) {\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim' && angle === 0) {\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\n                            }\n                            else if (angle !== 0) {\n                                if (rotatedLabelSize.width < intervalLength) {\n                                    intervalLength = rotatedLabelSize.width;\n                                }\n                            }\n                            else {\n                                intervalLength = width;\n                            }\n                            if (angle !== 0) {\n                                options.x = pointX = rect.x + rect.width - intervalLength + padding;\n                            }\n                            else {\n                                options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 : rect.x + rect.width - intervalLength;\n                            }\n                        }\n                        break;\n                }\n            }\n            options.text = this.getLabelText(label, axis, intervalLength);\n            options.labelRotation = angle;\n            // ------- Hide Calculation (Start) -------------\n            // Currect label actual start value (Start)\n            var xValue = void 0;\n            var xValue2 = void 0;\n            if (isAxisBreakLabel && angle === 0) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    xValue = (options.x - width);\n                    xValue2 = options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    xValue = (options.x - (width / 2));\n                    xValue2 = options.x + (width / 2);\n                }\n                else {\n                    xValue = options.x;\n                    xValue2 = options.x + width;\n                }\n            }\n            else {\n                xValue = options.x;\n                xValue2 = options.x + width;\n            }\n            // Currect label actual start value (End)\n            if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n                continue;\n            }\n            // Previous label actual end value (Start)\n            if (isAxisBreakLabel) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    previousEnd = isInverse ? (options.x - width) : options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    previousEnd = isInverse ? (options.x - (width / 2)) : options.x + (width / 2);\n                }\n                else {\n                    previousEnd = isInverse ? options.x : options.x + width;\n                }\n            }\n            else {\n                previousEnd = isInverse ? options.x : options.x + width;\n            }\n            // Previous label actual end value (End)\n            // ------- Hide Calculation (End) -------------\n            // label Rotataion calculation (Start)\n            if (angle !== 0) {\n                var height = void 0;\n                var rect_1 = void 0;\n                if (isAxisBreakLabel) {\n                    var xAdjustment = 0;\n                    var yAdjustment = 0;\n                    height = (label.breakLabelSize.height);\n                    yAdjustment = (label.breakLabelSize.height) - 4; // 4 for label bound correction\n                    // xAdjustment (Start)\n                    if (axis.lineBreakAlignment === 'Center') {\n                        xAdjustment = -(label.breakLabelSize.width / 2);\n                    }\n                    else if (axis.lineBreakAlignment === 'Right') {\n                        xAdjustment = -label.breakLabelSize.width;\n                    }\n                    // xAdjustment (End)\n                    if (isLabelUnderAxisLine) {\n                        yAdjustment = (label.breakLabelSize.height) / (options.text.length + 1);\n                    }\n                    rect_1 = new Rect(options.x + xAdjustment, options.y - (yAdjustment), label.breakLabelSize.width, height);\n                }\n                else {\n                    height = (pointY) - (options.y - ((label.size.height / 2)));\n                    rect_1 = new Rect(options.x, options.y - ((label.size.height / 2) - 5), label.size.width, height);\n                }\n                var rectCoordinates = this.getRectanglePoints(rect_1);\n                var rectCenterX = isAxisBreakLabel ? rect_1.x + (rect_1.width / 2) : pointX;\n                var rectCenterY = isAxisBreakLabel ? rect_1.y + (rect_1.height / 2) : (pointY - (height / 2));\n                if (isAxisBreakLabel) {\n                    options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n                }\n                else {\n                    options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n                }\n                newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n                isRotatedLabelIntersect = false;\n                if (axis.labelIntersectAction !== 'None') {\n                    for (var index_1 = i; index_1 > 0; index_1--) {\n                        if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n                            isRotatedLabelIntersect = true;\n                            newPoints[i] = null;\n                            break;\n                        }\n                    }\n                }\n                var rotateAngle = ((angle > 0 && angle < 90) || (angle > 180 && angle < 270) || (angle < -90 && angle > -180) || (angle < -270 && angle > -360));\n                var textRect = new Rect(options.x, options.y - (elementSize.height / 2 + padding / 2), label.size.width, height);\n                var textRectCoordinates = this.getRectanglePoints(textRect);\n                var rectPoints = [];\n                rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y));\n                rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y + axis.maxLabelSize.height));\n                textPoints.push(getRotatedRectangleCoordinates(textRectCoordinates, rectCenterX, rectCenterY, angle));\n                var newRect = new Rect(0, axis.rect.y, this.chart.availableSize.width, axis.maxLabelSize.height * 2);\n                for (var k = 0; k < textPoints[i].length; k++) {\n                    if (!axis.opposedPosition && !withInBounds(textPoints[i][k].x, textPoints[i][k].y, newRect) && typeof options.text === 'string') {\n                        var interSectPoint = this.calculateIntersection(textPoints[i][0], textPoints[i][1], rectPoints[0], rectPoints[1]);\n                        var rectPoint1 = rotateAngle ? this.chart.availableSize.width - pointX : pointX;\n                        var rectPoint2 = interSectPoint.y - axis.rect.y;\n                        var trimValue = Math.sqrt((rectPoint1 * rectPoint1) + (rectPoint2 * rectPoint2));\n                        options.text = textTrim(trimValue, label.text, label.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont);\n                    }\n                }\n            }\n            // label Rotataion calculation (End)\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, (axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside')), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                parent.appendChild(labelElement);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.calculateIntersection = function (p1, p2, p3, p4) {\n        var c2x = p3.x - p4.x;\n        var c3x = p1.x - p2.x;\n        var c2y = p3.y - p4.y;\n        var c3y = p1.y - p2.y;\n        var d = c3x * c2y - c3y * c2x;\n        var u1 = p1.x * p2.y - p1.y * p2.x;\n        var u4 = p3.x * p4.y - p3.y * p4.x;\n        var px = (u1 * c2x - c3x * u4) / d;\n        var py = (u1 * c2y - c3y * u4) / d;\n        var p = { x: px, y: py };\n        return p;\n    };\n    /**\n     * To get text anchor value for line break labels.\n     *\n     * @param {Axis} axis axis model\n     * @returns {string} returns text anchor\n     */\n    CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n        return (axis.lineBreakAlignment === 'Center' ? 'middle' : (this.chart.enableRtl) ? (axis.lineBreakAlignment === 'Left' ? 'end' : 'start') : (axis.lineBreakAlignment === 'Left' ? 'start' : 'end'));\n    };\n    /**\n     * Get rect coordinates\n     *\n     * @param {Rect} rect rect\n     * @returns {ChartLocation[]} rectangle points\n     */\n    CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n        var point1 = new ChartLocation(rect.x, rect.y);\n        var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n        var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n        var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n        return [point1, point2, point3, point4];\n    };\n    /**\n     * To get axis label text\n     *\n     * @param {VisibleLabels} label label\n     * @param {Axis} axis axis\n     * @param {number} intervalLength intervalLength\n     * @returns {string | string[]} label or label collection\n     */\n    CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n        if (isBreakLabel(label.originalText)) {\n            var result = [];\n            var str = void 0;\n            for (var index = 0; index < label.text.length; index++) {\n                str = this.findAxisLabel(axis, label.text[index], intervalLength);\n                result.push(str);\n            }\n            return result;\n        }\n        else {\n            return this.findAxisLabel(axis, label.text, intervalLength);\n        }\n    };\n    /**\n     * To render the x-axis label border.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} axisRect axisRect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n        if (axis.border.width > 0) {\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            var isOpposed = axis.isAxisOpposedPosition;\n            var startX = void 0;\n            var startY = axisRect.y + ((isOpposed ? -1 : 1) * scrollBarHeight);\n            var padding = 10;\n            var pointX = void 0;\n            var gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endX = void 0;\n            var length_2 = axis.maxLabelSize.height +\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endY = ((isOpposed && axis.labelPosition === 'Inside') ||\n                (!isOpposed && axis.labelPosition === 'Outside')) ?\n                (axisRect.y + length_2 + padding + scrollBarHeight) : (axisRect.y - length_2 - padding - scrollBarHeight);\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointX = (axis.isAxisInverse ? (1 - pointX) : pointX) * axisRect.width;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startX = pointX + axisRect.x;\n                    endX = pointX + (gap) + axisRect.x;\n                }\n                else {\n                    startX = pointX - gap * 0.5 + axisRect.x;\n                    endX = pointX + gap * 0.5 + axisRect.x;\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startX < axisRect.x && axis.labelPlacement !== 'OnTicks') {\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) && !(i === axis.visibleLabels.length - 1)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\n                        }\n                        else {\n                            startX = (i === 0 && axis.labelPlacement === 'OnTicks') ? axisRect.x : startX;\n                            endX = ((i === axis.visibleLabels.length - 1) && axis.labelPlacement === 'OnTicks') ? endX - gap * 0.5 : endX;\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === 0) {\n                                labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                    'M ' + startX + ' ' + endY + ' L ' + (axisRect.x) + ' ' + endY);\n                            }\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n            if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0 && this.chart.visibleSeries[i].visible) {\n                this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n                break;\n            }\n        }\n    };\n    /**\n     * To create border element of the axis\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {string} labelBorder labelBorder\n     * @param {Element} parent parent\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n        var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n        borderElement.style.pointerEvents = 'none';\n        appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true);\n    };\n    /**\n     * To find the axis label of the intersect action\n     *\n     * @param {Axis} axis axis\n     * @param {string} label label\n     * @param {number} width width\n     * @returns {string} label\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n        return (axis.labelIntersectAction === 'Trim' ?\n            ((axis.angle % 360 === 0 && !axis.enableTrim) ? textTrim(width, label, axis.labelStyle, this.chart.enableRtl, this.chart.themeStyle.axisLabelFont) : label) : label);\n    };\n    /**\n     * X-Axis Title function performed\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var elementSize = measureText(axis.title, axis.titleStyle, this.chart.themeStyle.axisTitleFont);\n            var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : (padding + (3 *\n                elementSize.height / 4) + scrollBarHeight);\n            var labelRotation = axis.titleRotation ? axis.titleRotation : 0;\n            var x = void 0;\n            var y = rect.y + padding;\n            var anchor = void 0;\n            if (axis.titleStyle.textAlignment === 'Center') {\n                anchor = 'middle';\n                x = rect.x + rect.width * 0.5;\n            }\n            else if (axis.titleStyle.textAlignment === 'Near') {\n                anchor = 'start';\n                x = rect.x;\n            }\n            else {\n                anchor = 'end';\n                x = rect.x + rect.width;\n            }\n            if (labelRotation !== 0) {\n                y += axis.opposedPosition ? -(axis.titleSize.height / 2 + elementSize.height / 4) :\n                    axis.titleSize.height / 2 - elementSize.height / 4;\n            }\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y, anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont);\n            element.setAttribute('aria-hidden', 'true');\n        }\n    };\n    /**\n     * To render the axis grid and tick lines(Both Major and Minor)\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {string} gridDirection gridDirection\n     * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\n     * @param {string} gridId gridId\n     * @param {number} gridIndex gridIndex\n     * @param {Element} parent parent\n     * @param {string} themeColor themeColor\n     * @param {string} dashArray dashArray\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n        if (dashArray === void 0) { dashArray = null; }\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n            element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            element = null;\n            this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n            appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n        }\n    };\n    /**\n     * To Find the parent node of the axis\n     *\n     * @param {string} elementId elementId\n     * @param {Element} label label\n     * @param {number} index index\n     * @returns {Element} parent node of the axis\n     */\n    CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\n        if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n        }\n        else {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n        }\n    };\n    /**\n     * Create Zooming Labels Function Called here\n     *\n     * @param {Chart} chart chart\n     * @param {Element} labelElement labelElement\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n        var parentNode = this.findParentNode(chart.element.id, labelElement, index);\n        labelElement.setAttribute('opacity', '0.3');\n        var zoomElement = chart.renderer.createGroup({\n            id: chart.element.id + 'AxisLabels_Zoom' + index\n        });\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n        }\n        else {\n            parentNode.appendChild(zoomElement);\n        }\n    };\n    return CartesianAxisLayoutPanel;\n}());\nexport { CartesianAxisLayoutPanel };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}