{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable curly */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart legend\n */\nimport { extend, Browser, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\nimport { pointByIndex } from '../model/acc-base';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textTrim, getElement, blazorTemplatesReset } from '../../common/utils/helper';\nimport { textWrap } from '../../common/utils/helper';\nimport { legendClick } from '../../common/model/constants';\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nvar AccumulationLegend = /** @class */function (_super) {\n  __extends(AccumulationLegend, _super);\n  /**\n   * Constructor for Accumulation Legend.\n   *\n   * @param {AccumulationChart} chart Get a chart as a parameter.\n   */\n  function AccumulationLegend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   */\n  AccumulationLegend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    this.chart.on('click', this.click, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   */\n  AccumulationLegend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module\n   */\n  AccumulationLegend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      if (this.chart.accumulationHighlightModule && this.chart.highlightMode !== 'None') {\n        this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module\n   */\n  AccumulationLegend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @returns {void} Legend options.\n   * @private\n   */\n  AccumulationLegend.prototype.getLegendOptions = function (chart, series) {\n    this.legendCollections = [];\n    this.isRtlEnable = chart.enableRtl;\n    this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n    for (var i = 0; i < 1; i++) {\n      var seriesType = series[i].type;\n      if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n        seriesType = series[i].innerRadius !== '0' && series[i].innerRadius !== '0%' ? 'Doughnut' : 'Pie';\n      }\n      for (var _i = 0, _a = series[i].points; _i < _a.length; _i++) {\n        var point = _a[_i];\n        if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n          this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, point.legendImageUrl, null, null, point.index, series[i].index));\n        }\n      }\n      if (this.isReverse) {\n        this.legendCollections.reverse();\n      }\n    }\n  };\n  /**\n   * To find legend bounds for accumulation chart.\n   *\n   * @private\n   */\n  AccumulationLegend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    var extraWidth = 0;\n    var extraHeight = 0;\n    var legendOption;\n    this.chartRowCount = 1;\n    this.rowHeights = [];\n    this.columnHeights = [];\n    this.pageHeights = [];\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var titlePlusArrowSpace = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = legend.enablePages ? 0 : this.arrowHeight;\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n    legendBounds.width += extraWidth;\n    legendBounds.height += extraHeight;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = legend.maximumLabelWidth ? legend.maximumLabelWidth : 0;\n    var shapeWidth = legend.shapeWidth;\n    var rowWidth = 0;\n    var columnCount = 0;\n    var rowCount = 0;\n    var columnWidth = [];\n    var pageWidth = [];\n    var pageRowWidth = 0;\n    var previousRowCount = 0;\n    var columnHeight = 0;\n    var legendWidth = 0;\n    var titleHeight = 0;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n    var legendEventArgs;\n    var render = false;\n    for (var i = 0; i < this.legendCollections.length; i++) {\n      legendOption = this.legendCollections[i];\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        name: 'legendRender',\n        cancel: false\n      };\n      this.chart.trigger('legendRender', legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text.indexOf('&') > -1 ? this.convertHtmlEntities(legendEventArgs.text) : legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n      if (legendOption.render && legendOption.text !== '') {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + (legend.maximumLabelWidth ? legend.maximumLabelWidth : legendOption.textSize.width) + (!this.isVertical ? i === 0 ? padding : this.itemPadding : padding);\n        this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n        if (this.isVertical) {\n          columnHeight += legendOption.textSize.height + (i === 0 ? padding : this.itemPadding);\n          if (columnHeight + this.itemPadding + arrowHeight / this.pageButtonSize > legendBounds.height) {\n            //columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding + arrowHeight);\n            rowWidth = rowWidth + maximumWidth;\n            pageRowWidth = this.getPageWidth(pageWidth);\n            this.totalPages = Math.max(rowCount, this.totalPages || 1);\n            if (rowWidth - pageRowWidth + legendWidth > legendBounds.width) {\n              pageWidth.push(rowWidth - pageRowWidth);\n              rowCount = this.rowHeights.length;\n              previousRowCount = rowCount;\n            } else {\n              rowCount = previousRowCount;\n            }\n            columnWidth.push(maximumWidth);\n            maximumWidth = 0;\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            columnHeight = legendOption.textSize.height + padding;\n            legendOption.textSize.height + padding;\n            columnCount++;\n          }\n          this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) + legendOption.textSize.height + (i === 0 ? padding : this.itemPadding);\n          maximumWidth = Math.max(legendWidth, maximumWidth);\n          this.rowHeights[rowCount] = Math.max(this.rowHeights[rowCount] ? this.rowHeights[rowCount] : 0, legendOption.textSize.height);\n          rowCount++;\n        } else {\n          if (!legend.enablePages) {\n            // For new legend navigation support\n            titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n            titlePlusArrowSpace += arrowWidth;\n          }\n          rowWidth = rowWidth + legendWidth;\n          if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace) {\n            maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - legendWidth);\n            if (rowCount === 0 && legendWidth !== rowWidth) {\n              rowCount = 1;\n            }\n            rowWidth = legendWidth;\n            rowCount++;\n            columnCount = 0;\n            //  columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + this.legendTitleSize.height;\n          }\n          var len = rowCount ? rowCount - 1 : rowCount;\n          this.rowHeights[len] = Math.max(this.rowHeights[len] ? this.rowHeights[len] : 0, legendOption.textSize.height);\n          this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) + legendOption.textSize.height + padding;\n          columnCount++;\n        }\n      }\n    }\n    titleHeight = titlePosition === 'Top' ? this.legendTitleSize.height : 0;\n    if (this.isVertical) {\n      rowWidth = rowWidth + maximumWidth;\n      this.isPaging = legendBounds.width < rowWidth + padding;\n      columnHeight = Math.max.apply(null, this.columnHeights) + padding + arrowHeight + titleHeight;\n      columnHeight = Math.max(columnHeight, (this.totalPages || 1) * (this.maxItemHeight + padding) + padding + arrowHeight);\n      this.isPaging = this.isPaging && this.totalPages > 1;\n      columnWidth.push(maximumWidth);\n    } else {\n      this.totalPages = this.totalRowCount = rowCount;\n      columnHeight = Math.max.apply(null, this.columnHeights) + padding + arrowHeight + titleHeight;\n      this.isPaging = legendBounds.height < columnHeight;\n      columnHeight = !legend.enablePages && this.isPaging ? this.maxItemHeight + padding + padding + titleHeight : columnHeight;\n      columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleHeight);\n      if (!this.isPaging) {\n        // For title left and right position\n        rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n      }\n    }\n    this.maxColumns = 0; // initialization for max columns\n    var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) : Math.max(rowWidth + padding, maximumWidth);\n    if (render) {\n      // if any legends not skipped in event check\n      this.setBounds(width, columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  AccumulationLegend.prototype.getPageWidth = function (pageWidth) {\n    var sum = 0;\n    for (var i = 0; i < pageWidth.length; i++) {\n      sum += pageWidth[i];\n    }\n    return sum;\n  };\n  /** @private */\n  AccumulationLegend.prototype.getLegendHeight = function (option, legend, bounds, rowWidth, legendHeight, padding) {\n    var legendWidth = option.textSize.width;\n    var textPadding = legend.shapePadding + padding * 2 + legend.shapeWidth;\n    switch (legend.textWrap) {\n      case 'Wrap':\n      case 'AnyWhere':\n        if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > bounds.width) {\n          option.textCollection = textWrap(option.text, legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, bounds.width - textPadding) : bounds.width - textPadding, legend.textStyle, this.chart.enableRtl, legend.textWrap === 'AnyWhere', null, this.chart.themeStyle.legendLabelFont);\n        } else {\n          option.textCollection.push(option.text);\n        }\n        option.textSize.height = legendHeight * option.textCollection.length;\n        break;\n    }\n  };\n  /**\n   * To find html entities value for legend.\n   *\n   * @returns {string} converts the entities to normal string.\n   */\n  AccumulationLegend.prototype.convertHtmlEntities = function (legendText) {\n    var text = legendText.replace('&amp;', '&').replace('&lt;', '<').replace('&gt;', '>').replace('&quot;', '\"').replace('&nbsp;', ' ').replace('&cent;', '¢').replace('&pound;', '£').replace('&yen;', '¥').replace('&euro;', '€').replace('&copy;', '©').replace('&reg;', '®');\n    text = text.replace('&#38;', '&').replace('&#60;', '<').replace('&#62;', '>').replace('&#34;', '\"').replace('&#160;', ' ').replace('&#162;', '¢').replace('&#163;', '£').replace('&#165;', '¥').replace('&#8364;', '€').replace('&#169;', '©').replace('&#174;', '®');\n    return text;\n  };\n  /**\n   * To find maximum column size for legend\n   *\n   * @returns {number} Get a maximum columns.\n   */\n  AccumulationLegend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n    var maxPageColumn = padding;\n    this.maxColumnWidth = Math.max.apply(null, columns);\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      maxPageColumn += this.maxColumnWidth;\n      this.maxColumns++;\n      if (maxPageColumn + padding > width) {\n        maxPageColumn -= this.maxColumnWidth;\n        this.maxColumns--;\n        break;\n      }\n    }\n    this.isPaging = maxPageColumn < rowWidth && this.totalPages > 1;\n    if (maxPageColumn === padding) {\n      maxPageColumn = width;\n    }\n    this.maxColumns = Math.max(1, this.maxColumns);\n    this.maxWidth = maxPageColumn;\n    var columnWidth = this.maxColumnWidth + padding;\n    var prevPage = 0;\n    var columnCount = this.columnHeights.length;\n    if (this.isPaging && this.isVertical) {\n      for (var i = 1; i < columnCount; i++) {\n        columnWidth += this.maxColumnWidth + padding;\n        if (columnWidth > width) {\n          this.pageHeights.push(prevPage !== i - 1 ? Math.max.apply(null, this.columnHeights.slice(prevPage, i - 1)) : this.columnHeights[prevPage]);\n          columnWidth = this.maxColumnWidth + padding;\n          prevPage = i;\n        }\n      }\n      this.pageHeights.push(prevPage !== columnCount - 1 ? Math.max.apply(null, this.columnHeights.slice(prevPage, columnCount - 1)) : this.columnHeights[prevPage]);\n      this.totalPages = this.pageHeights.length;\n    }\n    return maxPageColumn;\n  };\n  /**\n   * To find available width from legend x position.\n   *\n   * @returns {number} Get a available width.\n   */\n  AccumulationLegend.prototype.getAvailWidth = function (tx, width) {\n    if (this.isVertical) {\n      width = this.maxWidth;\n    } else if (!this.isVertical && this.isPaging && !this.legend.enablePages) {\n      return width - tx - this.fivePixel;\n    }\n    return width - (this.legend.padding * 2 + this.legend.shapeWidth + this.legend.shapePadding);\n  };\n  /**\n   * To find legend rendering locations from legend items.\n   *\n   * @private\n   */\n  AccumulationLegend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    var previousLocation = prevLegend.location.y + this.maxItemHeight / 4 + (prevLegend.textCollection.length > 0 ? (prevLegend.textCollection.length - 1) * this.maxItemHeight : 0);\n    if (this.isVertical) {\n      if (count === firstLegend || previousLocation + legendOption.textSize.height + padding > rect.y + rect.height) {\n        legendOption.location.x = prevLegend.location.x + (count === firstLegend ? 0 : !this.isRtlEnable ? this.maxColumnWidth : -this.maxColumnWidth);\n        legendOption.location.y = start.y;\n        var textStartLoc = this.legend.shapeWidth / 2 + padding;\n        this.pageXCollections.push(legendOption.location.x + (!this.isRtlEnable ? -textStartLoc : textStartLoc));\n      } else {\n        legendOption.location.x = prevLegend.location.x;\n        legendOption.location.y = prevLegend.location.y + prevLegend.textSize.height + this.itemPadding;\n      }\n    } else {\n      var textWidth = textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : prevLegend.textSize.width);\n      var previousBound = prevLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n      if (this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : legendOption.textSize.width) + textPadding - this.itemPadding, rect, this.legend.shapeWidth / 2)) {\n        if (count !== firstLegend) this.chartRowCount++;\n        legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.rowHeights[this.chartRowCount - 2] + padding;\n        legendOption.location.x = start.x;\n      } else {\n        legendOption.location.y = prevLegend.location.y;\n        legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      }\n    }\n    var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n    availablewidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availablewidth) : availablewidth;\n    if (this.legend.textOverflow === 'Ellipsis' && this.legend.textWrap === 'Normal') {\n      legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendTitleFont);\n    }\n  };\n  // eslint-disable-next-line jsdoc/require-returns\n  /**\n   * check whether legend group within legend bounds or not.\n   *\n   */\n  AccumulationLegend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n    if (!this.isRtlEnable) {\n      return previousBound + textWidth > legendBounds.x + legendBounds.width + shapeWidth;\n    } else {\n      return previousBound - textWidth < legendBounds.x - shapeWidth;\n    }\n  };\n  /**\n   * finding the smart legend place according to positions.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationLegend.prototype.getSmartLegendLocation = function (labelBound, legendBound, margin) {\n    var space;\n    switch (this.position) {\n      case 'Left':\n        space = (labelBound.x - legendBound.width - margin.left) / 2;\n        legendBound.x = labelBound.x - legendBound.width < margin.left ? legendBound.x : labelBound.x - legendBound.width - space;\n        break;\n      case 'Right':\n        space = (this.chart.availableSize.width - margin.right - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n        legendBound.x = labelBound.x + labelBound.width + legendBound.width > this.chart.availableSize.width - margin.right ? legendBound.x : labelBound.x + labelBound.width + space;\n        break;\n      case 'Top':\n        this.getTitleRect(this.chart);\n        space = (labelBound.y - legendBound.height - (this.titleRect.y + this.titleRect.height)) / 2;\n        legendBound.y = labelBound.y - legendBound.height < margin.top ? legendBound.y : labelBound.y - legendBound.height - space;\n        break;\n      case 'Bottom':\n        space = (this.chart.availableSize.height - margin.bottom - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n        legendBound.y = labelBound.y + labelBound.height + legendBound.height > this.chart.availableSize.height - margin.bottom ? legendBound.y : labelBound.y + labelBound.height + space;\n        break;\n    }\n  };\n  /**\n   * To get title rect.\n   *\n   * @returns {void} Get a title rect.\n   */\n  AccumulationLegend.prototype.getTitleRect = function (accumulation) {\n    if (!accumulation.title) {\n      return null;\n    }\n    var titleSize = measureText(accumulation.title, accumulation.titleStyle, this.chart.themeStyle.legendTitleFont);\n    this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n  };\n  /**\n   * To get legend by index\n   *\n   * @returns {LegendOptions} Return legend index.\n   */\n  AccumulationLegend.prototype.legendByIndex = function (index, legendCollections) {\n    for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n      var legend = legendCollections_1[_i];\n      if (legend.pointIndex === index) {\n        return legend;\n      }\n    }\n    return null;\n  };\n  /**\n   * To show or hide the legend on clicking the legend.\n   *\n   * @returns {void}\n   */\n  AccumulationLegend.prototype.click = function (event) {\n    var targetId = event.target.id.indexOf('_chart_legend_g_') > -1 ? event.target.firstChild['id'] : event.target.id;\n    var chart = this.chart;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_', this.legendID + '_shape_marker_'];\n    if (this.chart.accumulationSelectionModule) {\n      var selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n    }\n    this.chart.animateSeries = false;\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n      if (targetId.indexOf(id) > -1) {\n        var pointIndex = parseInt(targetId.split(id)[1], 10);\n        if (this.chart.legendSettings.toggleVisibility && !isNaN(pointIndex)) {\n          var currentSeries = this.chart.visibleSeries[0];\n          var point = pointByIndex(pointIndex, currentSeries.points);\n          var legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n          var legendClickArgs = {\n            legendText: legendOption.text,\n            legendShape: legendOption.shape,\n            chart: chart.isBlazor ? {} : chart,\n            series: currentSeries,\n            point: point,\n            name: legendClick,\n            cancel: false\n          };\n          this.chart.trigger(legendClick, legendClickArgs);\n          if (!legendClickArgs.cancel) {\n            point.visible = !point.visible;\n            legendOption.visible = point.visible;\n            currentSeries.sumOfPoints += point.visible ? point.y : -point.y;\n            chart.redraw = chart.enableAnimation;\n            this.sliceVisibility(pointIndex, point.visible);\n            chart.removeSvg();\n            //To remove the blazor templates\n            blazorTemplatesReset(chart);\n            this.chart.refreshPoints(currentSeries.points);\n            this.chart.calculateBounds();\n            this.chart.renderElements();\n          }\n        } else if (this.chart.accumulationSelectionModule && !isNaN(pointIndex)) {\n          this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex, event.target, event.type);\n        } else if (this.chart.accumulationHighlightModule && !isNaN(pointIndex)) {\n          this.chart.accumulationHighlightModule.legendSelection(this.chart, 0, pointIndex, event.target, event.type);\n        }\n      }\n    }\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n    chart.redraw = false;\n  };\n  /**\n   * To translate the point elements by index and position\n   */\n  AccumulationLegend.prototype.sliceVisibility = function (index, isVisible) {\n    var sliceId = this.chart.element.id + '_Series_0_Point_';\n    if (this.chart.visibleSeries[0].dataLabel.visible) {\n      sliceId = this.chart.element.id + '_datalabel_Series_0_';\n      this.sliceAnimate(getElement(sliceId + 'g_' + index), isVisible);\n    }\n  };\n  /**\n   * Slice animation\n   *\n   * @param {Element} element slice element.\n   * @param {boolean} isVisible boolean value of slice.\n   * @returns {void} slice animation method.\n   */\n  AccumulationLegend.prototype.sliceAnimate = function (element, isVisible) {\n    if (!element) {\n      return null;\n    }\n    new Animation({}).animate(element, {\n      duration: 300,\n      delay: 0,\n      name: isVisible ? 'FadeIn' : 'FadeOut',\n      end: function (args) {\n        args.element.style.visibility = isVisible ? 'visible' : 'hidden';\n      }\n    });\n  };\n  /**\n   * Get module name\n   *\n   * @returns {string} Return module name.\n   */\n  AccumulationLegend.prototype.getModuleName = function () {\n    return 'AccumulationLegend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationLegend.prototype.destroy = function () {\n    /**\n     * Destroy method calling here\n     */\n    this.removeEventListener();\n  };\n  return AccumulationLegend;\n}(BaseLegend);\nexport { AccumulationLegend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","extend","Browser","isNullOrUndefined","Animation","pointByIndex","BaseLegend","LegendOptions","Rect","measureText","textTrim","getElement","blazorTemplatesReset","textWrap","legendClick","AccumulationLegend","_super","chart","_this","call","library","titleRect","margin","top","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","touchEndEvent","mouseEnd","click","removeEventListener","off","e","legendSettings","visible","isTouch","accumulationHighlightModule","highlightMode","move","getLegendOptions","series","legendCollections","isRtlEnable","enableRtl","isReverse","reverse","i","seriesType","type","innerRadius","_i","_a","points","length","point","x","y","push","toString","color","legendShape","legendImageUrl","index","getLegendBounds","availableSize","legendBounds","legend","calculateLegendTitle","isTitle","title","extraWidth","extraHeight","legendOption","chartRowCount","rowHeights","columnHeights","pageHeights","padding","titlePosition","titlePlusArrowSpace","arrowWidth","arrowHeight","enablePages","isVertical","height","width","shapePadding","maximumWidth","maximumLabelWidth","shapeWidth","rowWidth","columnCount","rowCount","columnWidth","pageWidth","pageRowWidth","previousRowCount","columnHeight","legendWidth","titleHeight","maxItemHeight","Math","max","textStyle","themeStyle","legendLabelFont","shapeHeight","legendEventArgs","render","fill","text","shape","name","cancel","trigger","indexOf","convertHtmlEntities","textSize","itemPadding","getLegendHeight","pageButtonSize","getPageWidth","totalPages","legendTitleSize","fivePixel","len","isPaging","apply","totalRowCount","maxColumns","getMaxColumn","setBounds","sum","option","bounds","legendHeight","textPadding","textCollection","min","legendText","replace","columns","maxPageColumn","maxColumnWidth","columns_1","column","maxWidth","prevPage","slice","getAvailWidth","tx","getRenderPoint","start","prevLegend","rect","count","firstLegend","previousLocation","location","textStartLoc","pageXCollections","textWidth","previousBound","isWithinBounds","availablewidth","textOverflow","toFixed","legendTitleFont","getSmartLegendLocation","labelBound","legendBound","space","position","left","right","getTitleRect","bottom","accumulation","titleSize","titleStyle","legendByIndex","legendCollections_1","pointIndex","event","targetId","target","id","firstChild","legendItemsId","legendID","accumulationSelectionModule","selectedDataIndexes","animateSeries","legendItemsId_1","parseInt","split","toggleVisibility","isNaN","currentSeries","visibleSeries","legendClickArgs","isBlazor","sumOfPoints","redraw","enableAnimation","sliceVisibility","removeSvg","refreshPoints","calculateBounds","renderElements","legendSelection","changePage","isVisible","sliceId","element","dataLabel","sliceAnimate","animate","duration","delay","end","args","style","visibility","getModuleName","destroy"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable curly */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart legend\n */\nimport { extend, Browser, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\nimport { pointByIndex } from '../model/acc-base';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textTrim, getElement, blazorTemplatesReset } from '../../common/utils/helper';\nimport { textWrap } from '../../common/utils/helper';\nimport { legendClick } from '../../common/model/constants';\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nvar AccumulationLegend = /** @class */ (function (_super) {\n    __extends(AccumulationLegend, _super);\n    /**\n     * Constructor for Accumulation Legend.\n     *\n     * @param {AccumulationChart} chart Get a chart as a parameter.\n     */\n    function AccumulationLegend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     */\n    AccumulationLegend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n        this.chart.on('click', this.click, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    AccumulationLegend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module\n     */\n    AccumulationLegend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            if (this.chart.accumulationHighlightModule && this.chart.highlightMode !== 'None') {\n                this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module\n     */\n    AccumulationLegend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @returns {void} Legend options.\n     * @private\n     */\n    AccumulationLegend.prototype.getLegendOptions = function (chart, series) {\n        this.legendCollections = [];\n        this.isRtlEnable = chart.enableRtl;\n        this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n        for (var i = 0; i < 1; i++) {\n            var seriesType = series[i].type;\n            if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n                seriesType = (series[i].innerRadius !== '0' && series[i].innerRadius !== '0%') ?\n                    'Doughnut' : 'Pie';\n            }\n            for (var _i = 0, _a = series[i].points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n                    this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, point.legendImageUrl, null, null, point.index, series[i].index));\n                }\n            }\n            if (this.isReverse) {\n                this.legendCollections.reverse();\n            }\n        }\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @private\n     */\n    AccumulationLegend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var legendOption;\n        this.chartRowCount = 1;\n        this.rowHeights = [];\n        this.columnHeights = [];\n        this.pageHeights = [];\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var titlePlusArrowSpace = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = legend.enablePages ? 0 : this.arrowHeight;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = legend.maximumLabelWidth ? legend.maximumLabelWidth : 0;\n        var shapeWidth = legend.shapeWidth;\n        var rowWidth = 0;\n        var columnCount = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var pageWidth = [];\n        var pageRowWidth = 0;\n        var previousRowCount = 0;\n        var columnHeight = 0;\n        var legendWidth = 0;\n        var titleHeight = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var i = 0; i < this.legendCollections.length; i++) {\n            legendOption = this.legendCollections[i];\n            legendEventArgs = { fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false };\n            this.chart.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = ((legendEventArgs.text.indexOf('&') > -1) ?\n                this.convertHtmlEntities(legendEventArgs.text) : legendEventArgs.text);\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + (legend.maximumLabelWidth ? legend.maximumLabelWidth :\n                    legendOption.textSize.width) + (!this.isVertical ? (i === 0) ? padding : this.itemPadding : padding);\n                this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n                if (this.isVertical) {\n                    columnHeight += legendOption.textSize.height + ((i === 0) ? padding : this.itemPadding);\n                    if (columnHeight + this.itemPadding + (arrowHeight / this.pageButtonSize) > (legendBounds.height)) {\n                        //columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding + arrowHeight);\n                        rowWidth = rowWidth + maximumWidth;\n                        pageRowWidth = this.getPageWidth(pageWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        if ((rowWidth - pageRowWidth + legendWidth) > legendBounds.width) {\n                            pageWidth.push(rowWidth - pageRowWidth);\n                            rowCount = this.rowHeights.length;\n                            previousRowCount = rowCount;\n                        }\n                        else {\n                            rowCount = previousRowCount;\n                        }\n                        columnWidth.push(maximumWidth);\n                        maximumWidth = 0;\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        columnHeight = legendOption.textSize.height + padding;\n                        legendOption.textSize.height + padding;\n                        columnCount++;\n                    }\n                    this.columnHeights[columnCount] = (this.columnHeights[columnCount] ?\n                        this.columnHeights[columnCount] : 0) + legendOption.textSize.height + ((i === 0) ? padding : this.itemPadding);\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                    this.rowHeights[rowCount] = Math.max((this.rowHeights[rowCount] ? this.rowHeights[rowCount] : 0), legendOption.textSize.height);\n                    rowCount++;\n                }\n                else {\n                    if (!legend.enablePages) { // For new legend navigation support\n                        titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                        titlePlusArrowSpace += arrowWidth;\n                    }\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnCount = 0;\n                        //  columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + this.legendTitleSize.height;\n                    }\n                    var len = rowCount ? (rowCount - 1) : rowCount;\n                    this.rowHeights[len] = Math.max((this.rowHeights[len] ? this.rowHeights[len] : 0), legendOption.textSize.height);\n                    this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) +\n                        legendOption.textSize.height + padding;\n                    columnCount++;\n                }\n            }\n        }\n        titleHeight = titlePosition === 'Top' ? this.legendTitleSize.height : 0;\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max.apply(null, this.columnHeights) + padding + arrowHeight + titleHeight;\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding + arrowHeight);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            columnWidth.push(maximumWidth);\n        }\n        else {\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max.apply(null, this.columnHeights) + padding + arrowHeight + titleHeight;\n            this.isPaging = legendBounds.height < columnHeight;\n            columnHeight = !legend.enablePages && this.isPaging ? (this.maxItemHeight + padding) + padding + titleHeight : columnHeight;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleHeight);\n            if (!this.isPaging) { // For title left and right position\n                rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n            }\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    AccumulationLegend.prototype.getPageWidth = function (pageWidth) {\n        var sum = 0;\n        for (var i = 0; i < pageWidth.length; i++) {\n            sum += pageWidth[i];\n        }\n        return sum;\n    };\n    /** @private */\n    AccumulationLegend.prototype.getLegendHeight = function (option, legend, bounds, rowWidth, legendHeight, padding) {\n        var legendWidth = option.textSize.width;\n        var textPadding = legend.shapePadding + (padding * 2) + legend.shapeWidth;\n        switch (legend.textWrap) {\n            case 'Wrap':\n            case 'AnyWhere':\n                if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > bounds.width) {\n                    option.textCollection = textWrap(option.text, (legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, (bounds.width - textPadding)) :\n                        (bounds.width - textPadding)), legend.textStyle, this.chart.enableRtl, legend.textWrap === 'AnyWhere', null, this.chart.themeStyle.legendLabelFont);\n                }\n                else {\n                    option.textCollection.push(option.text);\n                }\n                option.textSize.height = (legendHeight * option.textCollection.length);\n                break;\n        }\n    };\n    /**\n     * To find html entities value for legend.\n     *\n     * @returns {string} converts the entities to normal string.\n     */\n    AccumulationLegend.prototype.convertHtmlEntities = function (legendText) {\n        var text = (legendText).replace('&amp;', '&').replace('&lt;', '<').replace('&gt;', '>').replace('&quot;', '\"').replace('&nbsp;', ' ').replace('&cent;', '¢').replace('&pound;', '£').replace('&yen;', '¥').replace('&euro;', '€').replace('&copy;', '©').replace('&reg;', '®');\n        text = (text).replace('&#38;', '&').replace('&#60;', '<').replace('&#62;', '>').replace('&#34;', '\"').replace('&#160;', ' ').\n            replace('&#162;', '¢').replace('&#163;', '£').replace('&#165;', '¥').replace('&#8364;', '€').replace('&#169;', '©').replace('&#174;', '®');\n        return text;\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @returns {number} Get a maximum columns.\n     */\n    AccumulationLegend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        var columnWidth = this.maxColumnWidth + padding;\n        var prevPage = 0;\n        var columnCount = this.columnHeights.length;\n        if (this.isPaging && this.isVertical) {\n            for (var i = 1; i < columnCount; i++) {\n                columnWidth += (this.maxColumnWidth + padding);\n                if (columnWidth > width) {\n                    this.pageHeights.push(((prevPage !== i - 1) ? Math.max.apply(null, this.columnHeights.slice(prevPage, i - 1)) :\n                        this.columnHeights[prevPage]));\n                    columnWidth = this.maxColumnWidth + padding;\n                    prevPage = i;\n                }\n            }\n            this.pageHeights.push(((prevPage !== columnCount - 1) ? Math.max.apply(null, this.columnHeights.slice(prevPage, columnCount - 1)) : this.columnHeights[prevPage]));\n            this.totalPages = this.pageHeights.length;\n        }\n        return maxPageColumn;\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @returns {number} Get a available width.\n     */\n    AccumulationLegend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        else if (!this.isVertical && this.isPaging && !this.legend.enablePages) {\n            return width - tx - this.fivePixel;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To find legend rendering locations from legend items.\n     *\n     * @private\n     */\n    AccumulationLegend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var previousLocation = prevLegend.location.y + this.maxItemHeight / 4 + (prevLegend.textCollection.length > 0 ?\n            ((prevLegend.textCollection.length - 1) * this.maxItemHeight) : 0);\n        if (this.isVertical) {\n            if (count === firstLegend || (previousLocation + legendOption.textSize.height + padding > (rect.y + rect.height))) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.isRtlEnable) ?\n                    this.maxColumnWidth : -this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.isRtlEnable) ? -textStartLoc : textStartLoc));\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + prevLegend.textSize.height + this.itemPadding;\n            }\n        }\n        else {\n            var textWidth = textPadding + (this.legend.maximumLabelWidth ?\n                this.legend.maximumLabelWidth : prevLegend.textSize.width);\n            var previousBound = prevLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n            if (this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth :\n                legendOption.textSize.width) + textPadding - this.itemPadding, rect, this.legend.shapeWidth / 2)) {\n                if (count !== firstLegend)\n                    this.chartRowCount++;\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.rowHeights[(this.chartRowCount - 2)] + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        availablewidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availablewidth) : availablewidth;\n        if (this.legend.textOverflow === 'Ellipsis' && this.legend.textWrap === 'Normal') {\n            legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendTitleFont);\n        }\n    };\n    // eslint-disable-next-line jsdoc/require-returns\n    /**\n     * check whether legend group within legend bounds or not.\n     *\n     */\n    AccumulationLegend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.isRtlEnable) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * finding the smart legend place according to positions.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationLegend.prototype.getSmartLegendLocation = function (labelBound, legendBound, margin) {\n        var space;\n        switch (this.position) {\n            case 'Left':\n                space = ((labelBound.x - legendBound.width) - margin.left) / 2;\n                legendBound.x = (labelBound.x - legendBound.width) < margin.left ? legendBound.x :\n                    (labelBound.x - legendBound.width) - space;\n                break;\n            case 'Right':\n                space = ((this.chart.availableSize.width - margin.right) - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n                legendBound.x = (labelBound.x + labelBound.width + legendBound.width) > (this.chart.availableSize.width - margin.right) ?\n                    legendBound.x : (labelBound.x + labelBound.width + space);\n                break;\n            case 'Top':\n                this.getTitleRect(this.chart);\n                space = ((labelBound.y - legendBound.height) - (this.titleRect.y + this.titleRect.height)) / 2;\n                legendBound.y = (labelBound.y - legendBound.height) < margin.top ? legendBound.y :\n                    (labelBound.y - legendBound.height) - space;\n                break;\n            case 'Bottom':\n                space = ((this.chart.availableSize.height - margin.bottom) - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n                legendBound.y = labelBound.y + labelBound.height + legendBound.height > (this.chart.availableSize.height - margin.bottom) ?\n                    legendBound.y : (labelBound.y + labelBound.height) + space;\n                break;\n        }\n    };\n    /**\n     * To get title rect.\n     *\n     * @returns {void} Get a title rect.\n     */\n    AccumulationLegend.prototype.getTitleRect = function (accumulation) {\n        if (!accumulation.title) {\n            return null;\n        }\n        var titleSize = measureText(accumulation.title, accumulation.titleStyle, this.chart.themeStyle.legendTitleFont);\n        this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n    };\n    /**\n     * To get legend by index\n     *\n     * @returns {LegendOptions} Return legend index.\n     */\n    AccumulationLegend.prototype.legendByIndex = function (index, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.pointIndex === index) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    AccumulationLegend.prototype.click = function (event) {\n        var targetId = event.target.id.indexOf('_chart_legend_g_') > -1 ?\n            event.target.firstChild['id'] : event.target.id;\n        var chart = this.chart;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_', this.legendID + '_shape_marker_'];\n        if (this.chart.accumulationSelectionModule) {\n            var selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n        }\n        this.chart.animateSeries = false;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n            var id = legendItemsId_1[_i];\n            if (targetId.indexOf(id) > -1) {\n                var pointIndex = parseInt(targetId.split(id)[1], 10);\n                if (this.chart.legendSettings.toggleVisibility && !isNaN(pointIndex)) {\n                    var currentSeries = this.chart.visibleSeries[0];\n                    var point = pointByIndex(pointIndex, currentSeries.points);\n                    var legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n                    var legendClickArgs = {\n                        legendText: legendOption.text, legendShape: legendOption.shape,\n                        chart: chart.isBlazor ? {} : chart, series: currentSeries, point: point,\n                        name: legendClick, cancel: false\n                    };\n                    this.chart.trigger(legendClick, legendClickArgs);\n                    if (!legendClickArgs.cancel) {\n                        point.visible = !point.visible;\n                        legendOption.visible = point.visible;\n                        currentSeries.sumOfPoints += point.visible ? point.y : -point.y;\n                        chart.redraw = chart.enableAnimation;\n                        this.sliceVisibility(pointIndex, point.visible);\n                        chart.removeSvg();\n                        //To remove the blazor templates\n                        blazorTemplatesReset(chart);\n                        this.chart.refreshPoints(currentSeries.points);\n                        this.chart.calculateBounds();\n                        this.chart.renderElements();\n                    }\n                }\n                else if (this.chart.accumulationSelectionModule && !isNaN(pointIndex)) {\n                    this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex, event.target, event.type);\n                }\n                else if (this.chart.accumulationHighlightModule && !isNaN(pointIndex)) {\n                    this.chart.accumulationHighlightModule.legendSelection(this.chart, 0, pointIndex, event.target, event.type);\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        chart.redraw = false;\n    };\n    /**\n     * To translate the point elements by index and position\n     */\n    AccumulationLegend.prototype.sliceVisibility = function (index, isVisible) {\n        var sliceId = this.chart.element.id + '_Series_0_Point_';\n        if (this.chart.visibleSeries[0].dataLabel.visible) {\n            sliceId = this.chart.element.id + '_datalabel_Series_0_';\n            this.sliceAnimate(getElement(sliceId + 'g_' + index), isVisible);\n        }\n    };\n    /**\n     * Slice animation\n     *\n     * @param {Element} element slice element.\n     * @param {boolean} isVisible boolean value of slice.\n     * @returns {void} slice animation method.\n     */\n    AccumulationLegend.prototype.sliceAnimate = function (element, isVisible) {\n        if (!element) {\n            return null;\n        }\n        new Animation({}).animate(element, {\n            duration: 300,\n            delay: 0,\n            name: isVisible ? 'FadeIn' : 'FadeOut',\n            end: function (args) {\n                args.element.style.visibility = isVisible ? 'visible' : 'hidden';\n            }\n        });\n    };\n    /**\n     * Get module name\n     *\n     * @returns {string} Return module name.\n     */\n    AccumulationLegend.prototype.getModuleName = function () {\n        return 'AccumulationLegend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationLegend.prototype.destroy = function () {\n        /**\n         * Destroy method calling here\n         */\n        this.removeEventListener();\n    };\n    return AccumulationLegend;\n}(BaseLegend));\nexport { AccumulationLegend };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}