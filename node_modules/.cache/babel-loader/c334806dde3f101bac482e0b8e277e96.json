{"ast":null,"code":"'use strict';\n\nvar fromParse5 = require('hast-util-from-parse5');\nvar Parser5 = require('parse5/lib/parser');\nvar xtend = require('xtend');\nvar errors = require('./errors.json');\nvar base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-';\nvar fatalities = {\n  2: true,\n  1: false,\n  0: null\n};\nmodule.exports = parse;\nfunction parse(options) {\n  var settings = xtend(options, this.data('settings'));\n  var position = settings.position;\n  position = typeof position === 'boolean' ? position : true;\n  this.Parser = parser;\n  function parser(doc, file) {\n    var fn = settings.fragment ? 'parseFragment' : 'parse';\n    var onParseError = settings.emitParseErrors ? onerror : null;\n    var parse5 = new Parser5({\n      sourceCodeLocationInfo: position,\n      onParseError: onParseError,\n      scriptingEnabled: false\n    });\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file: file,\n      verbose: settings.verbose\n    });\n    function onerror(err) {\n      var code = err.code;\n      var name = camelcase(code);\n      var setting = settings[name];\n      var config = setting === undefined || setting === null ? true : setting;\n      var level = typeof config === 'number' ? config : config ? 1 : 0;\n      var start = {\n        line: err.startLine,\n        column: err.startCol,\n        offset: err.startOffset\n      };\n      var end = {\n        line: err.endLine,\n        column: err.endCol,\n        offset: err.endOffset\n      };\n      var info;\n      var message;\n      if (level) {\n        info = errors[name] || /* istanbul ignore next */{\n          reason: '',\n          description: ''\n        };\n        message = file.message(format(info.reason), {\n          start: start,\n          end: end\n        });\n        message.source = 'parse-error';\n        message.ruleId = code;\n        message.fatal = fatalities[level];\n        message.note = format(info.description);\n        message.url = info.url === false ? null : base + code;\n      }\n      function format(value) {\n        return value.replace(/%c(?:-(\\d+))?/g, char).replace(/%x/g, encodedChar);\n      }\n      function char($0, $1) {\n        var offset = $1 ? -parseInt($1, 10) : 0;\n        var char = doc.charAt(err.startOffset + offset);\n        return char === '`' ? '` ` `' : char;\n      }\n      function encodedChar() {\n        var char = doc.charCodeAt(err.startOffset).toString(16).toUpperCase();\n        return '0x' + char;\n      }\n    }\n  }\n}\nfunction camelcase(value) {\n  return value.replace(/-[a-z]/g, replacer);\n}\nfunction replacer($0) {\n  return $0.charAt(1).toUpperCase();\n}","map":{"version":3,"names":["fromParse5","require","Parser5","xtend","errors","base","fatalities","module","exports","parse","options","settings","data","position","Parser","parser","doc","file","fn","fragment","onParseError","emitParseErrors","onerror","parse5","sourceCodeLocationInfo","scriptingEnabled","space","verbose","err","code","name","camelcase","setting","config","undefined","level","start","line","startLine","column","startCol","offset","startOffset","end","endLine","endCol","endOffset","info","message","reason","description","format","source","ruleId","fatal","note","url","value","replace","char","encodedChar","$0","$1","parseInt","charAt","charCodeAt","toString","toUpperCase","replacer"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/rehype-parse/index.js"],"sourcesContent":["'use strict'\n\nvar fromParse5 = require('hast-util-from-parse5')\nvar Parser5 = require('parse5/lib/parser')\nvar xtend = require('xtend')\nvar errors = require('./errors.json')\n\nvar base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nvar fatalities = {2: true, 1: false, 0: null}\n\nmodule.exports = parse\n\nfunction parse(options) {\n  var settings = xtend(options, this.data('settings'))\n  var position = settings.position\n\n  position = typeof position === 'boolean' ? position : true\n\n  this.Parser = parser\n\n  function parser(doc, file) {\n    var fn = settings.fragment ? 'parseFragment' : 'parse'\n    var onParseError = settings.emitParseErrors ? onerror : null\n    var parse5 = new Parser5({\n      sourceCodeLocationInfo: position,\n      onParseError: onParseError,\n      scriptingEnabled: false\n    })\n\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file: file,\n      verbose: settings.verbose\n    })\n\n    function onerror(err) {\n      var code = err.code\n      var name = camelcase(code)\n      var setting = settings[name]\n      var config = setting === undefined || setting === null ? true : setting\n      var level = typeof config === 'number' ? config : config ? 1 : 0\n      var start = {\n        line: err.startLine,\n        column: err.startCol,\n        offset: err.startOffset\n      }\n      var end = {line: err.endLine, column: err.endCol, offset: err.endOffset}\n      var info\n      var message\n\n      if (level) {\n        info = errors[name] || /* istanbul ignore next */ {\n          reason: '',\n          description: ''\n        }\n\n        message = file.message(format(info.reason), {start: start, end: end})\n        message.source = 'parse-error'\n        message.ruleId = code\n        message.fatal = fatalities[level]\n        message.note = format(info.description)\n        message.url = info.url === false ? null : base + code\n      }\n\n      function format(value) {\n        return value.replace(/%c(?:-(\\d+))?/g, char).replace(/%x/g, encodedChar)\n      }\n\n      function char($0, $1) {\n        var offset = $1 ? -parseInt($1, 10) : 0\n        var char = doc.charAt(err.startOffset + offset)\n        return char === '`' ? '` ` `' : char\n      }\n\n      function encodedChar() {\n        var char = doc\n          .charCodeAt(err.startOffset)\n          .toString(16)\n          .toUpperCase()\n\n        return '0x' + char\n      }\n    }\n  }\n}\n\nfunction camelcase(value) {\n  return value.replace(/-[a-z]/g, replacer)\n}\n\nfunction replacer($0) {\n  return $0.charAt(1).toUpperCase()\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}