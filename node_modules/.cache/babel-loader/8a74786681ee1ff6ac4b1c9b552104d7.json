{"ast":null,"code":"const getBoundingRect = clientRects => {\n  const rects = Array.from(clientRects).map(rect => {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = rect;\n    const X0 = left;\n    const X1 = left + width;\n    const Y0 = top;\n    const Y1 = top + height;\n    return {\n      X0,\n      X1,\n      Y0,\n      Y1\n    };\n  });\n  const optimal = rects.reduce((res, rect) => {\n    return {\n      X0: Math.min(res.X0, rect.X0),\n      X1: Math.max(res.X1, rect.X1),\n      Y0: Math.min(res.Y0, rect.Y0),\n      Y1: Math.max(res.Y1, rect.Y1)\n    };\n  }, rects[0]);\n  const {\n    X0,\n    X1,\n    Y0,\n    Y1\n  } = optimal;\n  return {\n    left: X0,\n    top: Y0,\n    width: X1 - X0,\n    height: Y1 - Y0\n  };\n};\n\nexport default getBoundingRect;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONT/gptversion/CASEFRONT/node_modules/react-pdf-highlighter/build/lib/get-bounding-rect.js"],"names":["getBoundingRect","clientRects","rects","Array","from","map","rect","left","top","width","height","X0","X1","Y0","Y1","optimal","reduce","res","Math","min","max"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,WAAW,IAAI;AACrC,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,WAAX,EAAwBI,GAAxB,CAA4BC,IAAI,IAAI;AAChD,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,GAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA;AAJI,QAKFJ,IALJ;AAMA,UAAMK,EAAE,GAAGJ,IAAX;AACA,UAAMK,EAAE,GAAGL,IAAI,GAAGE,KAAlB;AACA,UAAMI,EAAE,GAAGL,GAAX;AACA,UAAMM,EAAE,GAAGN,GAAG,GAAGE,MAAjB;AACA,WAAO;AACLC,MAAAA,EADK;AAELC,MAAAA,EAFK;AAGLC,MAAAA,EAHK;AAILC,MAAAA;AAJK,KAAP;AAMD,GAjBa,CAAd;AAkBA,QAAMC,OAAO,GAAGb,KAAK,CAACc,MAAN,CAAa,CAACC,GAAD,EAAMX,IAAN,KAAe;AAC1C,WAAO;AACLK,MAAAA,EAAE,EAAEO,IAAI,CAACC,GAAL,CAASF,GAAG,CAACN,EAAb,EAAiBL,IAAI,CAACK,EAAtB,CADC;AAELC,MAAAA,EAAE,EAAEM,IAAI,CAACE,GAAL,CAASH,GAAG,CAACL,EAAb,EAAiBN,IAAI,CAACM,EAAtB,CAFC;AAGLC,MAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAASF,GAAG,CAACJ,EAAb,EAAiBP,IAAI,CAACO,EAAtB,CAHC;AAILC,MAAAA,EAAE,EAAEI,IAAI,CAACE,GAAL,CAASH,GAAG,CAACH,EAAb,EAAiBR,IAAI,CAACQ,EAAtB;AAJC,KAAP;AAMD,GAPe,EAObZ,KAAK,CAAC,CAAD,CAPQ,CAAhB;AAQA,QAAM;AACJS,IAAAA,EADI;AAEJC,IAAAA,EAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA;AAJI,MAKFC,OALJ;AAMA,SAAO;AACLR,IAAAA,IAAI,EAAEI,EADD;AAELH,IAAAA,GAAG,EAAEK,EAFA;AAGLJ,IAAAA,KAAK,EAAEG,EAAE,GAAGD,EAHP;AAILD,IAAAA,MAAM,EAAEI,EAAE,GAAGD;AAJR,GAAP;AAMD,CAvCD;;AAyCA,eAAeb,eAAf","sourcesContent":["const getBoundingRect = clientRects => {\n  const rects = Array.from(clientRects).map(rect => {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = rect;\n    const X0 = left;\n    const X1 = left + width;\n    const Y0 = top;\n    const Y1 = top + height;\n    return {\n      X0,\n      X1,\n      Y0,\n      Y1\n    };\n  });\n  const optimal = rects.reduce((res, rect) => {\n    return {\n      X0: Math.min(res.X0, rect.X0),\n      X1: Math.max(res.X1, rect.X1),\n      Y0: Math.min(res.Y0, rect.Y0),\n      Y1: Math.max(res.Y1, rect.Y1)\n    };\n  }, rects[0]);\n  const {\n    X0,\n    X1,\n    Y0,\n    Y1\n  } = optimal;\n  return {\n    left: X0,\n    top: Y0,\n    width: X1 - X0,\n    height: Y1 - Y0\n  };\n};\n\nexport default getBoundingRect;"]},"metadata":{},"sourceType":"module"}