{"ast":null,"code":"import { WParagraphFormat } from '../format/paragraph-format';\nimport { WCharacterFormat } from '../format/index';\nimport { LineWidget, ParagraphWidget, BodyWidget, TextElementBox, FieldElementBox, TableWidget, TableRowWidget, TableCellWidget, ImageElementBox, ContentControl, ListTextElementBox, BookmarkElementBox, EditRangeStartElementBox, EditRangeEndElementBox, ChartElementBox, CommentCharacterElementBox, TextFormField, CheckBoxFormField, ShapeElementBox, FootnoteElementBox, BreakElementBox, FootnoteEndnoteMarkerElementBox } from '../viewer/page';\nimport { BlockWidget } from '../viewer/page';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { sectionsProperty, imagesProperty, fontSubstitutionTableProperty, paraStyleNameProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, backgroundProperty, stylesProperty, commentsProperty, revisionsProperty, customXmlProperty, defaultTabWidthProperty, formattingProperty, trackChangesProperty, protectionTypeProperty, enforcementProperty, hashValueProperty, saltValueProperty, doNotUseHTMLParagraphAutoSpacingProperty, formFieldShadingProperty, footnotesProperty, endnotesProperty, compatibilityModeProperty, themeFontLanguagesProperty, themesProperty, nameProperty, basedOnProperty, nextProperty, linkProperty, fontSizeProperty, fontColorProperty, styleNameProperty, bidiProperty, fontSizeBidiProperty, boldBidiProperty, italicBidiProperty, revisionIdsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, listFormatProperty, bordersProperty, tabsProperty, headerDistanceProperty, footerDistanceProperty, differentFirstPageProperty, differentOddAndEvenPagesProperty, pageWidthProperty, pageHeightProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, restartPageNumberingProperty, pageStartingNumberProperty, endnoteNumberFormatProperty, footNoteNumberFormatProperty, restartIndexForFootnotesProperty, restartIndexForEndnotesProperty, initialFootNoteNumberProperty, initialEndNoteNumberProperty, pageNumberStyleProperty, columnsProperty, numberOfColumnsProperty, equalWidthProperty, lineBetweenColumnsProperty, breakCodeProperty, cellWidthProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, allowBreakAcrossPagesProperty, isHeaderProperty, heightTypeProperty, gridBeforeProperty, gridBeforeWidthProperty, gridBeforeWidthTypeProperty, gridAfterProperty, gridAfterWidthProperty, gridAfterWidthTypeProperty, allowAutoFitProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, textureProperty, backgroundColorProperty, foregroundColorProperty, verticalProperty, horizontalProperty, diagonalUpProperty, diagonalDownProperty, lineStyleProperty, layoutProperty, dataFormatProperty, yValueProperty, chartDataProperty, categoryXNameProperty, lineProperty, foreColorProperty, layoutXProperty, layoutYProperty, directionProperty, endStyleProperty, numberValueProperty, markerStyleProperty, markerColorProperty, markerSizeProperty, forwardProperty, backwardProperty, interceptProperty, isDisplayRSquaredProperty, isDisplayEquationProperty, seriesNameProperty, dataLabelProperty, errorBarProperty, seriesFormatProperty, trendLinesProperty, dataPointsProperty, firstSliceAngleProperty, holeSizeProperty, isLegendKeyProperty, isBubbleSizeProperty, isCategoryNameProperty, isSeriesNameProperty, isValueProperty, isPercentageProperty, isLeaderLinesProperty, showSeriesKeysProperty, hasHorizontalBorderProperty, hasVerticalBorderProperty, hasBordersProperty, categoryTypeProperty, chartCategoryProperty, chartSeriesProperty, chartAreaProperty, chartTitleAreaProperty, plotAreaProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartPrimaryValueAxisProperty, chartTitleProperty, chartTypeProperty, gapWidthProperty, overlapProperty, chartDataTableProperty, textProperty, shapeIdProperty, alternativeTextProperty, visibleProperty, widthProperty, heightProperty, widthScaleProperty, heightScaleProperty, lineFormatProperty, fillFormatProperty, textWrappingStyleProperty, textWrappingTypeProperty, verticalRelativePercentProperty, horizontalRelativePercentProperty, heightRelativePercentProperty, widthRelativePercentProperty, zOrderPositionProperty, layoutInCellProperty, lockAnchorProperty, autoShapeTypeProperty, textFrameProperty, colorProperty, fillProperty, textVerticalAlignmentProperty, imageStringProperty, metaFileImageStringProperty, isMetaFileProperty, topProperty, bottomProperty, rightProperty, leftProperty, getImageHeightProperty, getImageWidthProperty, hasFieldEndProperty, formFieldDataProperty, fieldTypeProperty, enabledProperty, helpTextProperty, statusTextProperty, textInputProperty, checkBoxProperty, dropDownListProperty, maxLengthProperty, defaultValueProperty, formatProperty, sizeTypeProperty, sizeProperty, checkedProperty, dropDownItemsProperty, selectedIndexProperty, commentIdProperty, commentCharacterTypeProperty, authorProperty, dateProperty, doneProperty, replyCommentsProperty, revisionTypeProperty, revisionIdProperty, itemIDProperty, xmlProperty, footnoteTypeProperty, symbolCodeProperty, symbolFontNameProperty, customMarkerProperty, inlinesProperty, contentControlPropertiesProperty, lockContentControlProperty, lockContentsProperty, tagProperty, titleProperty, hasPlaceHolderTextProperty, multiLineProperty, isTemporaryProperty, dateCalendarTypeProperty, dateStorageFormatProperty, dateDisplayLocaleProperty, dateDisplayFormatProperty, isCheckedProperty, uncheckedStateProperty, checkedStateProperty, contentControlListItemsProperty, xmlMappingProperty, fontProperty, valueProperty, displayTextProperty, isMappedProperty, isWordMlProperty, prefixMappingProperty, xPathProperty, storeItemIdProperty, customXmlPartProperty, idProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, descriptionProperty, wrapTextAroundProperty, positioningProperty, tableFormatProperty, allowOverlapProperty, distanceTopProperty, distanceRightProperty, distanceLeftProperty, distanceBottomProperty, verticalOriginProperty, verticalPositionProperty, horizontalOriginProperty, horizontalAlignmentProperty, horizontalPositionProperty, blocksProperty, headerProperty, footerProperty, evenHeaderProperty, evenFooterProperty, firstPageHeaderProperty, firstPageFooterProperty, headersFootersProperty, sectionFormatProperty, listLevelPatternProperty, followCharacterProperty, startAtProperty, restartLevelProperty, levelNumberProperty, numberFormatProperty, abstractListIdProperty, levelsProperty, overrideListLevelProperty, levelOverridesProperty, separatorProperty, continuationSeparatorProperty, continuationNoticeProperty, bookmarkTypeProperty, propertiesProperty, tabJustificationProperty, positionProperty, deletePositionProperty, tabLeaderProperty, editRangeIdProperty, columnFirstProperty, columnLastProperty, userProperty, groupProperty, editableRangeStartProperty, spaceProperty, fontSchemeProperty, fontSchemeNameProperty, majorFontSchemeProperty, minorFontSchemeProperty, fontSchemeListProperty, fontTypefaceProperty, typefaceProperty, panoseProperty, typeProperty, majorUnitProperty, maximumValueProperty, minimumValueProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, majorTickMarkProperty, minorTickMarkProperty, tickLabelPositionProperty, rgbProperty, appearanceProperty, lineFormatTypeProperty, allowSpaceOfSameStyleInTableProperty, weightProperty, inlineFormatProperty, fontNameProperty, isCompressedProperty, columnIndexProperty, columnCountProperty, gridProperty, isAfterParagraphMarkProperty, isAfterCellMarkProperty, isAfterRowMarkProperty, isAfterTableMarkProperty, belowTextProperty, breakClearTypeProperty, nsidProperty, isLegalStyleNumberingProperty, horizontalRuleProperty, isCreatedUsingHtmlSpanTagProperty, isAutoMajorProperty } from '../../index';\n/**\n * Exports the document to Sfdt format.\n */\nvar SfdtExport = /** @class */function () {\n  function SfdtExport(documentHelper) {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    this.startLine = undefined;\n    this.endLine = undefined;\n    this.endOffset = undefined;\n    this.endCell = undefined;\n    this.startColumnIndex = undefined;\n    this.endColumnIndex = undefined;\n    this.lists = undefined;\n    this.images = undefined;\n    this.document = undefined;\n    this.writeInlineStyles = undefined;\n    this.blockContent = false;\n    this.startContent = false;\n    this.multipleLineContent = false;\n    this.nestedContent = false;\n    this.editRangeId = -1;\n    this.selectedCommentsId = [];\n    this.selectedRevisionId = [];\n    this.nestedBlockContent = false;\n    this.nestedBlockEnabled = false;\n    this.blocks = [];\n    this.contentInline = [];\n    this.isContentControl = false;\n    this.isBlockClosed = true;\n    this.isWriteInlinesFootNote = false;\n    this.isWriteEndFootNote = false;\n    /**\n     * @private\n     */\n    this.iscontentInsert = true;\n    /**\n     * @private\n     */\n    this.keywordIndex = undefined;\n    /**\n     * @private\n     */\n    this.isExport = true;\n    /**\n     * @private\n     */\n    this.isWordExport = false;\n    /**\n     * @private\n     */\n    this.isPartialExport = false;\n    this.checkboxOrDropdown = false;\n    /**\n     * @private\n     */\n    this.copyWithTrackChange = false;\n    this.documentHelper = documentHelper;\n  }\n  Object.defineProperty(SfdtExport.prototype, \"viewer\", {\n    get: function () {\n      return this.documentHelper.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SfdtExport.prototype, \"owner\", {\n    get: function () {\n      return this.documentHelper.owner;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  SfdtExport.prototype.getModuleName = function () {\n    return 'SfdtExport';\n  };\n  SfdtExport.prototype.clear = function () {\n    this.writeInlineStyles = undefined;\n    this.startLine = undefined;\n    this.endLine = undefined;\n    this.lists = undefined;\n    this.images = undefined;\n    this.document = undefined;\n    this.endCell = undefined;\n    this.startColumnIndex = undefined;\n    this.endColumnIndex = undefined;\n    this.selectedCommentsId = [];\n    this.selectedRevisionId = [];\n    this.startBlock = undefined;\n    this.endBlock = undefined;\n    this.isPartialExport = false;\n    this.keywordIndex = undefined;\n  };\n  /**\n   * Serialize the data as Syncfusion document text.\n   *\n   * @private\n   */\n  SfdtExport.prototype.serialize = function () {\n    return this.seralizeInternal(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0);\n  };\n  /**\n   * Serialize the data as Syncfusion document text.\n   *\n   * @private\n   */\n  SfdtExport.prototype.seralizeInternal = function (index) {\n    return JSON.stringify(this.write(index));\n  };\n  /**\n   * @private\n   * @param documentHelper - Specifies document helper instance.\n   * @returns {Promise<Blob>}\n   */\n  SfdtExport.prototype.saveAsBlobNonOptimized = function (documentHelper) {\n    var sfdt = new Blob([this.serialize()], {\n      type: 'text/plain'\n    });\n    return new Promise(function (resolve, reject) {\n      resolve(sfdt);\n    });\n  };\n  /**\n   * @private\n   * @param documentHelper - Specifies document helper instance.\n   * @returns {Promise<Blob>}\n   */\n  SfdtExport.prototype.saveAsBlob = function (documentHelper) {\n    var jsonString = this.serialize();\n    var blob = new Blob([jsonString], {\n      type: 'application/json'\n    });\n    var archiveItem = new ZipArchiveItem(blob, \"sfdt\");\n    var mArchive = new ZipArchive();\n    mArchive.addItem(archiveItem);\n    return mArchive.saveAsBlob();\n  };\n  SfdtExport.prototype.updateEditRangeId = function () {\n    var index = -1;\n    for (var i = 0; i < this.documentHelper.editRanges.keys.length; i++) {\n      var keys = this.documentHelper.editRanges.keys;\n      for (var j = 0; j < keys[i].length; j++) {\n        var editRangeStart = this.documentHelper.editRanges.get(keys[i]);\n        for (var z = 0; z < editRangeStart.length; z++) {\n          index++;\n          editRangeStart[z].editRangeId = index;\n          editRangeStart[z].editRangeEnd.editRangeId = index;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  /* eslint-disable  */\n  SfdtExport.prototype.write = function (index, line, startOffset, endLine, endOffset, writeInlineStyles, isExport) {\n    var _a;\n    if (writeInlineStyles) {\n      this.writeInlineStyles = true;\n    }\n    if (!isNullOrUndefined(index)) {\n      this.keywordIndex = index;\n    } else {\n      this.keywordIndex = this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0;\n    }\n    this.Initialize();\n    this.updateEditRangeId();\n    if (line instanceof LineWidget && endLine instanceof LineWidget) {\n      this.isExport = false;\n      if (!isNullOrUndefined(isExport)) {\n        this.isExport = isExport;\n      }\n      // For selection\n      var startPara = line.paragraph;\n      var endPara = endLine.paragraph;\n      if (this.isPartialExport) {\n        this.startBlock = this.getParentBlock(startPara);\n        this.endBlock = this.getParentBlock(endPara);\n      }\n      var startCell = startPara.associatedCell;\n      var endCell = endPara.associatedCell;\n      // Creates section\n      var bodyWidget = startPara.bodyWidget;\n      var section = this.createSection(line.paragraph.bodyWidget);\n      this.document[sectionsProperty[this.keywordIndex]].push(section);\n      var selectionStartCell = startCell;\n      var selectionEndCell = endCell;\n      if (startCell instanceof TableCellWidget) {\n        selectionStartCell = this.getParentCell(selectionStartCell);\n      }\n      if (endCell instanceof TableCellWidget) {\n        selectionEndCell = this.getParentCell(selectionEndCell);\n      }\n      var isSameCell = selectionStartCell instanceof TableCellWidget && selectionEndCell instanceof TableCellWidget && selectionStartCell.equals(selectionEndCell);\n      if (isSameCell || isNullOrUndefined(endCell)) {\n        this.startLine = line;\n        this.endLine = endLine;\n        this.endOffset = endOffset;\n      } else {\n        // Todo: Handle nested table cases\n        if (startCell instanceof TableCellWidget) {\n          var startTable = startCell.getContainerTable();\n          var endTable = endCell.getContainerTable();\n          if (startTable.tableFormat === endTable.tableFormat) {\n            this.endCell = endCell;\n            if (this.endCell.ownerTable !== startCell.ownerTable && startCell.ownerTable.associatedCell && startCell.ownerTable.associatedCell.ownerTable === this.endCell.ownerTable && startCell.ownerTable.associatedCell.childWidgets.indexOf(startCell.ownerTable) === 0) {\n              startCell = startCell.ownerTable.associatedCell;\n            }\n            this.endColumnIndex = this.endCell.columnIndex + this.endCell.cellFormat.columnSpan;\n            this.startColumnIndex = startCell.columnIndex;\n          }\n        } else {\n          this.endCell = endCell;\n        }\n      }\n      var nextBlock = void 0;\n      if (isSameCell && !this.isPartialExport || isNullOrUndefined(startCell)) {\n        var paragraph = this.createParagraph(line.paragraph);\n        section[blocksProperty[this.keywordIndex]].push(paragraph);\n        var lastBlock = line.paragraph;\n        nextBlock = this.writeParagraph(line.paragraph, paragraph, section[blocksProperty[this.keywordIndex]], line.indexInOwner, startOffset);\n        if (this.isPartialExport) {\n          nextBlock = this.getNextBlock(nextBlock, lastBlock);\n          section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n        }\n        while (nextBlock) {\n          lastBlock = nextBlock;\n          nextBlock = this.writeBlock(nextBlock, 0, section[blocksProperty[this.keywordIndex]]);\n          if (this.isPartialExport && isNullOrUndefined(nextBlock)) {\n            nextBlock = this.getNextBlock(nextBlock, lastBlock);\n            section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n          }\n        }\n        // Todo:continue in next section\n      } else {\n        // Specially handled for nested table cases\n        // selection start inside table and end in paragraph outside table\n        if (isNullOrUndefined(endCell) && startCell.ownerTable.associatedCell) {\n          var startTable = startCell.getContainerTable();\n          var lastRow = startTable.childWidgets[startTable.childWidgets.length - 1];\n          var endCell_1 = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n          if (endCell_1.ownerTable !== startCell.ownerTable && startCell.ownerTable.associatedCell && startCell.ownerTable.associatedCell.childWidgets.indexOf(startCell.ownerTable) === 0) {\n            while (startCell.ownerTable !== endCell_1.ownerTable) {\n              startCell = startCell.ownerTable.associatedCell;\n            }\n          }\n          this.endColumnIndex = endCell_1.columnIndex + endCell_1.cellFormat.columnSpan;\n          this.startColumnIndex = startCell.columnIndex;\n        }\n        var table = this.createTable(startCell.ownerTable);\n        section[blocksProperty[this.keywordIndex]].push(table);\n        var lastBlock = startCell.ownerTable;\n        nextBlock = this.writeTable(startCell.ownerTable, table, startCell.ownerRow.indexInOwner, section[blocksProperty[this.keywordIndex]]);\n        if (this.isPartialExport) {\n          nextBlock = this.getNextBlock(nextBlock, lastBlock);\n          section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n        }\n        while (nextBlock) {\n          lastBlock = nextBlock;\n          nextBlock = this.writeBlock(nextBlock, 0, section[blocksProperty[this.keywordIndex]]);\n          if (this.isPartialExport) {\n            nextBlock = this.getNextBlock(nextBlock, lastBlock);\n            section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n          }\n        }\n      }\n    } else {\n      this.isExport = true;\n      if (this.documentHelper.pages.length > 0) {\n        var page = this.documentHelper.pages[0];\n        this.writePage(page);\n      }\n    }\n    this.document[backgroundProperty[this.keywordIndex]] = (_a = {}, _a[colorProperty[this.keywordIndex]] = this.documentHelper.backgroundColor, _a);\n    this.writeStyles(this.documentHelper);\n    this.writeLists(this.documentHelper);\n    this.writeComments(this.documentHelper);\n    this.writeRevisions(this.documentHelper);\n    this.writeCustomXml(this.documentHelper);\n    this.writeImages(this.documentHelper);\n    this.footnotes(this.documentHelper);\n    this.endnotes(this.documentHelper);\n    var doc = this.document;\n    this.clear();\n    return doc;\n  };\n  SfdtExport.prototype.getNextBlock = function (nextBlock, lastBlock) {\n    if (isNullOrUndefined(nextBlock) && this.isPartialExport && this.endBlock && !this.endBlock.equals(lastBlock)) {\n      nextBlock = lastBlock.getSplitWidgets().pop().nextRenderedWidget;\n      if (nextBlock && lastBlock.bodyWidget.index !== nextBlock.bodyWidget.index) {\n        var section = this.createSection(nextBlock.bodyWidget);\n        this.document[sectionsProperty[this.keywordIndex]].push(section);\n      } else {\n        nextBlock = undefined;\n      }\n    }\n    return nextBlock;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.Initialize = function () {\n    this.lists = [];\n    this.images = [];\n    this.document = {};\n    this.document.optimizeSfdt = this.owner.documentEditorSettings.optimizeSfdt;\n    this.document[sectionsProperty[this.keywordIndex]] = [];\n    this.document[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(this.documentHelper.characterFormat, this.keywordIndex);\n    this.document[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(this.documentHelper.paragraphFormat, this.keywordIndex);\n    if (!isNullOrUndefined(this.documentHelper.fontSubstitutionTable)) {\n      this.document[fontSubstitutionTableProperty[this.keywordIndex]] = this.writeFontSubsitutionTable(this.documentHelper);\n    }\n    this.document[themeFontLanguagesProperty[this.keywordIndex]] = this.writeCharacterFormat(this.documentHelper.themeFontLanguage, this.keywordIndex);\n    this.document[defaultTabWidthProperty[this.keywordIndex]] = this.documentHelper.defaultTabWidth;\n    this.document[trackChangesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.owner.enableTrackChanges, this.keywordIndex);\n    this.document[enforcementProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.isDocumentProtected, this.keywordIndex);\n    this.document[hashValueProperty[this.keywordIndex]] = this.documentHelper.hashValue;\n    this.document[saltValueProperty[this.keywordIndex]] = this.documentHelper.saltValue;\n    this.document[formattingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.restrictFormatting, this.keywordIndex);\n    this.document[protectionTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getProtectionTypeEnumValue(this.documentHelper.protectionType) : this.documentHelper.protectionType;\n    this.document[doNotUseHTMLParagraphAutoSpacingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.dontUseHtmlParagraphAutoSpacing, this.keywordIndex);\n    this.document[formFieldShadingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.owner.documentEditorSettings.formFieldSettings.applyShading, this.keywordIndex);\n    this.document[compatibilityModeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getCompatibilityModeEnumValue(this.documentHelper.compatibilityMode) : this.documentHelper.compatibilityMode;\n    this.document[allowSpaceOfSameStyleInTableProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.allowSpaceOfSameStyleInTable, this.keywordIndex);\n    if (this.documentHelper.hasThemes) {\n      this.document[themesProperty[this.keywordIndex]] = this.writeThemes(this.documentHelper.themes);\n    }\n  };\n  SfdtExport.prototype.writeFontSubsitutionTable = function (documentHelper) {\n    var fontSubstitutionTable = {};\n    for (var i = 0; i < documentHelper.fontSubstitutionTable.length; i++) {\n      var key = documentHelper.fontSubstitutionTable.keys[i];\n      fontSubstitutionTable[key] = this.documentHelper.fontSubstitutionTable.get(key);\n    }\n    return fontSubstitutionTable;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writePage = function (page) {\n    if (page.bodyWidgets.length > 0) {\n      var nextBlock = page.bodyWidgets[0];\n      do {\n        nextBlock = this.writeBodyWidget(nextBlock, 0);\n      } while (!isNullOrUndefined(nextBlock));\n    }\n    return this.document;\n  };\n  SfdtExport.prototype.writeBodyWidget = function (bodyWidget, index) {\n    if (!(bodyWidget instanceof BodyWidget)) {\n      return undefined;\n    }\n    var section = this.createSection(bodyWidget);\n    this.document[sectionsProperty[this.keywordIndex]].push(section);\n    this.writeHeaderFooters(this.documentHelper.headersFooters[bodyWidget.index], section);\n    var firstBlock = bodyWidget.childWidgets[index];\n    if (isNullOrUndefined(firstBlock) && bodyWidget.nextRenderedWidget) {\n      firstBlock = bodyWidget.nextRenderedWidget.childWidgets[index];\n    }\n    do {\n      firstBlock = this.writeBlock(firstBlock, 0, section[blocksProperty[this.keywordIndex]]);\n    } while (firstBlock);\n    var next = bodyWidget;\n    do {\n      bodyWidget = next;\n      next = next.nextRenderedWidget;\n      if (isNullOrUndefined(next) && !isNullOrUndefined(bodyWidget.page.nextPage) && !isNullOrUndefined(bodyWidget.page.nextPage)) {\n        next = bodyWidget.page.nextPage.bodyWidgets[0];\n      }\n    } while (next instanceof BodyWidget && next.index === bodyWidget.index);\n    // While importing, If the last paragraph is empty and the section break is present, then the empty paragraph is removed. So, added the empty paragraph at the end of the section while exporting.\n    var islastEmptyParagraph;\n    if (!isNullOrUndefined(bodyWidget.lastChild) && bodyWidget.lastChild instanceof ParagraphWidget) {\n      islastEmptyParagraph = bodyWidget.lastChild.isEmpty();\n      if (bodyWidget.lastChild.isSectionBreak && !isNullOrUndefined(bodyWidget.lastChild.previousRenderedWidget) && bodyWidget.lastChild.previousRenderedWidget instanceof TableWidget) {\n        islastEmptyParagraph = false;\n      }\n    }\n    if (!isNullOrUndefined(next) && next instanceof BodyWidget && bodyWidget.sectionIndex !== next.sectionIndex && islastEmptyParagraph && !this.isWordExport) {\n      var paragraph = {};\n      paragraph[inlinesProperty[this.keywordIndex]] = [];\n      section[blocksProperty[this.keywordIndex]].push(paragraph);\n    }\n    return next;\n  };\n  SfdtExport.prototype.writeHeaderFooters = function (hfs, section) {\n    if (isNullOrUndefined(hfs)) {\n      return;\n    }\n    var headersFooters = section[headersFootersProperty[this.keywordIndex]];\n    if (!(isNullOrUndefined(hfs[0]) || hfs[0].isEmpty)) {\n      headersFooters[headerProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[0]);\n      if (JSON.stringify(headersFooters[headerProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[headerProperty[this.keywordIndex]];\n      }\n    }\n    if (!(isNullOrUndefined(hfs[1]) || hfs[1].isEmpty)) {\n      headersFooters[footerProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[1]);\n      if (JSON.stringify(headersFooters[footerProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[footerProperty[this.keywordIndex]];\n      }\n    }\n    if (!(isNullOrUndefined(hfs[2]) || hfs[2].isEmpty)) {\n      headersFooters[evenHeaderProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[2]);\n      if (JSON.stringify(headersFooters[evenHeaderProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[evenHeaderProperty[this.keywordIndex]];\n      }\n    }\n    if (!(isNullOrUndefined(hfs[3]) || hfs[3].isEmpty)) {\n      headersFooters[evenFooterProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[3]);\n      if (JSON.stringify(headersFooters[evenFooterProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[evenFooterProperty[this.keywordIndex]];\n      }\n    }\n    if (!(isNullOrUndefined(hfs[4]) || hfs[4].isEmpty)) {\n      headersFooters[firstPageHeaderProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[4]);\n      if (JSON.stringify(headersFooters[firstPageHeaderProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[firstPageHeaderProperty[this.keywordIndex]];\n      }\n    }\n    if (!(isNullOrUndefined(hfs[5]) || hfs[5].isEmpty)) {\n      headersFooters[firstPageFooterProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[5]);\n      if (JSON.stringify(headersFooters[firstPageFooterProperty[this.keywordIndex]]) == \"{}\") {\n        delete headersFooters[firstPageFooterProperty[this.keywordIndex]];\n      }\n    }\n  };\n  SfdtExport.prototype.writeHeaderFooter = function (widget) {\n    if (isNullOrUndefined(widget) || widget.isEmpty) {\n      return undefined;\n    }\n    var headerFooter = {};\n    if (widget && widget.childWidgets && widget.childWidgets.length > 0) {\n      headerFooter[blocksProperty[this.keywordIndex]] = [];\n      var firstBlock = widget.firstChild;\n      do {\n        firstBlock = this.writeBlock(firstBlock, 0, headerFooter[blocksProperty[this.keywordIndex]]);\n      } while (firstBlock);\n    }\n    return headerFooter;\n  };\n  SfdtExport.prototype.createSection = function (bodyWidget) {\n    var section = {};\n    section[sectionFormatProperty[this.keywordIndex]] = {};\n    section[sectionFormatProperty[this.keywordIndex]] = this.writeSectionFormat(bodyWidget.sectionFormat, section[sectionFormatProperty[this.keywordIndex]], this.keywordIndex);\n    section[blocksProperty[this.keywordIndex]] = [];\n    section[headersFootersProperty[this.keywordIndex]] = {};\n    return section;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeSectionFormat = function (sectionFormat, section, keywordIndex) {\n    section[pageWidthProperty[keywordIndex]] = sectionFormat.pageWidth;\n    section[pageHeightProperty[keywordIndex]] = sectionFormat.pageHeight;\n    section[leftMarginProperty[keywordIndex]] = sectionFormat.leftMargin;\n    section[rightMarginProperty[keywordIndex]] = sectionFormat.rightMargin;\n    section[topMarginProperty[keywordIndex]] = sectionFormat.topMargin;\n    section[bottomMarginProperty[keywordIndex]] = sectionFormat.bottomMargin;\n    section[headerDistanceProperty[keywordIndex]] = sectionFormat.headerDistance;\n    section[footerDistanceProperty[keywordIndex]] = sectionFormat.footerDistance;\n    section[differentFirstPageProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.differentFirstPage, keywordIndex);\n    section[differentOddAndEvenPagesProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.differentOddAndEvenPages, keywordIndex);\n    section[bidiProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.bidi, keywordIndex);\n    if (!isNullOrUndefined(sectionFormat.breakCode)) {\n      section[breakCodeProperty[keywordIndex]] = sectionFormat.breakCode;\n    }\n    if (sectionFormat.restartPageNumbering) {\n      section[restartPageNumberingProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.restartPageNumbering, keywordIndex);\n      section[pageStartingNumberProperty[keywordIndex]] = sectionFormat.pageStartingNumber;\n    }\n    section[endnoteNumberFormatProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootEndNoteNumberFormatEnumValue(sectionFormat.endnoteNumberFormat) : sectionFormat.endnoteNumberFormat;\n    section[footNoteNumberFormatProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootEndNoteNumberFormatEnumValue(sectionFormat.footNoteNumberFormat) : sectionFormat.footNoteNumberFormat;\n    section[restartIndexForFootnotesProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootnoteRestartIndexEnumValue(sectionFormat.restartIndexForFootnotes) : sectionFormat.restartIndexForFootnotes;\n    section[restartIndexForEndnotesProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootnoteRestartIndexEnumValue(sectionFormat.restartIndexForEndnotes) : sectionFormat.restartIndexForEndnotes;\n    section[initialFootNoteNumberProperty[keywordIndex]] = sectionFormat.initialFootNoteNumber;\n    section[initialEndNoteNumberProperty[keywordIndex]] = sectionFormat.initialEndNoteNumber;\n    if (!isNullOrUndefined(sectionFormat.pageNumberStyle)) {\n      section[pageNumberStyleProperty[keywordIndex]] = sectionFormat.pageNumberStyle;\n    }\n    if (!isNullOrUndefined(sectionFormat.columns) && !isNullOrUndefined(sectionFormat.numberOfColumns && sectionFormat.numberOfColumns > 1)) {\n      var cols = sectionFormat.columns;\n      section[numberOfColumnsProperty[keywordIndex]] = sectionFormat.numberOfColumns;\n      section[equalWidthProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.equalWidth, keywordIndex);\n      section[lineBetweenColumnsProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.lineBetweenColumns, keywordIndex);\n      section[columnsProperty[keywordIndex]] = [];\n      for (var i = 0; i < cols.length; i++) {\n        var newCol = {};\n        newCol[widthProperty[keywordIndex]] = HelperMethods.convertPixelToPoint(cols[i].width);\n        newCol[spaceProperty[keywordIndex]] = HelperMethods.convertPixelToPoint(cols[i].space);\n        section[columnsProperty[keywordIndex]].push(newCol);\n      }\n    }\n    return section;\n  };\n  SfdtExport.prototype.writeBlock = function (widget, index, blocks) {\n    if (!(widget instanceof BlockWidget)) {\n      return undefined;\n    }\n    if (widget instanceof ParagraphWidget) {\n      if (widget.hasOwnProperty('contentControlProperties') && widget.contentControlProperties.type !== 'BuildingBlockGallery') {\n        var block = this.blockContentControl(widget);\n        this.blockContent = false;\n        if (!isNullOrUndefined(block) && (this.isBlockClosed || !this.nestedBlockContent)) {\n          this.nestedBlockEnabled = false;\n          blocks.push(block);\n          this.blocks = [];\n        }\n        return this.nextBlock;\n      } else {\n        var paragraph = this.createParagraph(widget);\n        blocks.push(paragraph);\n        return this.writeParagraph(widget, paragraph, blocks);\n      }\n    } else {\n      var tableWidget = widget;\n      if (tableWidget.hasOwnProperty('contentControlProperties') && tableWidget.contentControlProperties.type !== 'BuildingBlockGallery') {\n        var block = this.tableContentControl(tableWidget);\n        if (!isNullOrUndefined(block) && this.isBlockClosed) {\n          blocks.push(block);\n        }\n        return this.nextBlock;\n      }\n      var table = this.createTable(tableWidget);\n      blocks.push(table);\n      return this.writeTable(tableWidget, table, 0, blocks);\n    }\n  };\n  SfdtExport.prototype.writeParagraphs = function (widget) {\n    var blocks = this.blocks;\n    var child = widget.childWidgets[0];\n    var firstElement = child.children[0];\n    var secondElement = child.children[1];\n    if (firstElement instanceof ListTextElementBox || secondElement instanceof ListTextElementBox) {\n      firstElement = child.children[2];\n      secondElement = child.children[3];\n    }\n    if (!isNullOrUndefined(widget.contentControlProperties) && widget.containerWidget instanceof TableCellWidget && !isNullOrUndefined(widget.containerWidget.containerWidget) && !isNullOrUndefined(widget.containerWidget.containerWidget.containerWidget.contentControlProperties)) {\n      blocks = [];\n    }\n    if (this.nestedBlockEnabled) {\n      blocks = [];\n    }\n    if (firstElement instanceof ContentControl && secondElement instanceof ContentControl && !this.nestedBlockContent || this.blockContent && firstElement instanceof ContentControl && !this.nestedBlockContent) {\n      var nestedBlocks = false;\n      if (secondElement instanceof ContentControl) {\n        if (secondElement.contentControlWidgetType === 'Block') {\n          nestedBlocks = true;\n        }\n      }\n      if (nestedBlocks || this.blockContent && firstElement instanceof ContentControl && !this.nestedBlockContent && firstElement.type === 0 && secondElement instanceof ContentControl && firstElement.contentControlWidgetType === 'Block') {\n        this.nestedBlockContent = true;\n        this.nestedBlockEnabled = true;\n        var block = this.blockContentControl(widget);\n        if (!isNullOrUndefined(block)) {\n          this.blocks.push(block);\n        }\n      } else {\n        var paragraph = this.createParagraph(widget);\n        blocks.push(paragraph);\n        this.nextBlock = this.writeParagraph(widget, paragraph, blocks);\n      }\n    } else {\n      var paragraph = this.createParagraph(widget);\n      blocks.push(paragraph);\n      this.nextBlock = this.writeParagraph(widget, paragraph, blocks);\n    }\n    if (!this.nestedBlockContent && this.nestedBlockEnabled) {\n      this.nestedBlockEnabled = false;\n    }\n    return blocks;\n  };\n  SfdtExport.prototype.contentControlProperty = function (contentControlPropertie) {\n    var contentControlProperties = {};\n    var contentControlListItems = [];\n    contentControlProperties[lockContentControlProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.lockContentControl, this.keywordIndex);\n    contentControlProperties[lockContentsProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.lockContents, this.keywordIndex);\n    contentControlProperties[tagProperty[this.keywordIndex]] = contentControlPropertie.tag;\n    contentControlProperties[colorProperty[this.keywordIndex]] = contentControlPropertie.color;\n    contentControlProperties[titleProperty[this.keywordIndex]] = contentControlPropertie.title;\n    if (!isNullOrUndefined(contentControlPropertie.appearance)) {\n      contentControlProperties[appearanceProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getContentControlAppearanceEnumValue(contentControlPropertie.appearance) : contentControlPropertie.appearance;\n    }\n    contentControlProperties[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getContentControlTypeEnumValue(contentControlPropertie.type) : contentControlPropertie.type;\n    contentControlProperties[hasPlaceHolderTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.hasPlaceHolderText, this.keywordIndex);\n    contentControlProperties[multiLineProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.multiline, this.keywordIndex);\n    contentControlProperties[isTemporaryProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.isTemporary, this.keywordIndex);\n    if (!isNullOrUndefined(contentControlPropertie.isChecked)) {\n      contentControlProperties[isCheckedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.isChecked, this.keywordIndex);\n    }\n    if (!isNullOrUndefined(contentControlPropertie.uncheckedState)) {\n      contentControlProperties[uncheckedStateProperty[this.keywordIndex]] = this.tounCheckedState(contentControlPropertie.uncheckedState);\n    }\n    if (!isNullOrUndefined(contentControlPropertie.checkedState)) {\n      contentControlProperties[checkedStateProperty[this.keywordIndex]] = this.toCheckedState(contentControlPropertie.checkedState);\n    }\n    if (!isNullOrUndefined(contentControlPropertie.dateCalendarType)) {\n      contentControlProperties[dateCalendarTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getDateCalendarTypeEnumValue(contentControlPropertie.dateCalendarType) : contentControlPropertie.dateCalendarType;\n    }\n    if (!isNullOrUndefined(contentControlPropertie.dateStorageFormat)) {\n      contentControlProperties[dateStorageFormatProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getDateStorageFormatEnumValue(contentControlPropertie.dateStorageFormat) : contentControlPropertie.dateStorageFormat;\n    }\n    if (!isNullOrUndefined(contentControlPropertie.dateDisplayLocale)) {\n      contentControlProperties[dateDisplayLocaleProperty[this.keywordIndex]] = contentControlPropertie.dateDisplayLocale;\n    }\n    if (!isNullOrUndefined(contentControlPropertie.dateDisplayFormat)) {\n      contentControlProperties[dateDisplayFormatProperty[this.keywordIndex]] = contentControlPropertie.dateDisplayFormat;\n    }\n    if (!isNullOrUndefined(contentControlPropertie.xmlMapping)) {\n      var xmlMapping = {};\n      var customXmlPart = {};\n      xmlMapping[isMappedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.xmlMapping.isMapped, this.keywordIndex);\n      xmlMapping[isWordMlProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.xmlMapping.isWordMl, this.keywordIndex);\n      if (!isNullOrUndefined(contentControlPropertie.xmlMapping.prefixMapping)) {\n        xmlMapping[prefixMappingProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.prefixMapping;\n      }\n      xmlMapping[xPathProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.xPath;\n      xmlMapping[storeItemIdProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.storeItemId;\n      if (!isNullOrUndefined(contentControlPropertie.xmlMapping.customXmlPart)) {\n        customXmlPart[idProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.customXmlPart.id;\n        customXmlPart[xmlProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.customXmlPart.xml;\n        xmlMapping[customXmlPartProperty[this.keywordIndex]] = customXmlPart;\n      }\n      contentControlProperties[xmlMappingProperty[this.keywordIndex]] = xmlMapping;\n    }\n    if (!isNullOrUndefined(contentControlPropertie.characterFormat)) {\n      contentControlProperties[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(contentControlPropertie.characterFormat, this.keywordIndex);\n    }\n    if (!isNullOrUndefined(contentControlPropertie.contentControlListItems)) {\n      for (var i = 0; i < contentControlPropertie.contentControlListItems.length; i++) {\n        var listItems = {};\n        listItems[displayTextProperty[this.keywordIndex]] = contentControlPropertie.contentControlListItems[i].displayText;\n        listItems[valueProperty[this.keywordIndex]] = contentControlPropertie.contentControlListItems[i].value;\n        contentControlListItems.push(listItems);\n      }\n    }\n    contentControlProperties[contentControlListItemsProperty[this.keywordIndex]] = contentControlListItems;\n    return contentControlProperties;\n  };\n  SfdtExport.prototype.tounCheckedState = function (state) {\n    var unCheckedState = {};\n    unCheckedState[fontProperty[this.keywordIndex]] = state.font;\n    unCheckedState[valueProperty[this.keywordIndex]] = state.value;\n    return unCheckedState;\n  };\n  SfdtExport.prototype.toCheckedState = function (state) {\n    var checkedState = {};\n    checkedState[fontProperty[this.keywordIndex]] = state.font;\n    checkedState[valueProperty[this.keywordIndex]] = state.value;\n    return checkedState;\n  };\n  SfdtExport.prototype.blockContentControl = function (widget) {\n    var block = {};\n    if (widget.childWidgets.length === 0) {\n      this.nextBlock = widget.nextWidget;\n      return undefined;\n    }\n    block[blocksProperty[this.keywordIndex]] = this.writeParagraphs(widget);\n    if (!isNullOrUndefined(this.nextBlock)) {\n      if (widget.contentControlProperties === this.nextBlock.contentControlProperties) {\n        this.isBlockClosed = false;\n        this.nestedBlockContent = true;\n        return this.blocks = block[blocksProperty[this.keywordIndex]];\n      } else {\n        this.isBlockClosed = true;\n      }\n    } else {\n      this.isBlockClosed = true;\n    }\n    if (!isNullOrUndefined(block[blocksProperty[this.keywordIndex]])) {\n      var child = widget.childWidgets[0];\n      var firstChild = child.children[0];\n      var secondChild = child.children[1];\n      if (firstChild instanceof ListTextElementBox || secondChild instanceof ListTextElementBox) {\n        firstChild = child.children[2];\n        secondChild = child.children[3];\n      }\n      if (firstChild instanceof ContentControl && secondChild instanceof ContentControl && !this.nestedBlockContent || this.blockContent && firstChild instanceof ContentControl && !this.nestedBlockContent) {\n        if (!(secondChild instanceof ContentControl)) {\n          block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(firstChild.contentControlProperties);\n          return block;\n        } else if (secondChild.contentControlWidgetType === 'Block') {\n          block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(secondChild.contentControlProperties);\n        } else {\n          block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(widget.contentControlProperties);\n        }\n      } else {\n        block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(widget.contentControlProperties);\n      }\n      return block;\n    }\n  };\n  SfdtExport.prototype.tableContentControl = function (tableWidget) {\n    var block = {};\n    block[blocksProperty[this.keywordIndex]] = this.tableContentControls(tableWidget);\n    if (!isNullOrUndefined(this.nextBlock)) {\n      if (tableWidget.contentControlProperties === this.nextBlock.contentControlProperties) {\n        this.isBlockClosed = false;\n        return this.blocks = block[blocksProperty[this.keywordIndex]];\n      } else {\n        this.isBlockClosed = true;\n      }\n    }\n    block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(tableWidget.contentControlProperties);\n    return block;\n  };\n  SfdtExport.prototype.tableContentControls = function (tableWidget) {\n    var blocks = [];\n    if (!this.isBlockClosed) {\n      blocks = this.blocks;\n    }\n    var table = this.createTable(tableWidget);\n    blocks.push(table);\n    this.nextBlock = this.writeTable(tableWidget, table, 0, blocks);\n    return blocks;\n  };\n  SfdtExport.prototype.writeParagraph = function (paragraphWidget, paragraph, blocks, lineIndex, start) {\n    if (isNullOrUndefined(lineIndex)) {\n      lineIndex = 0;\n    }\n    if (isNullOrUndefined(start)) {\n      start = 0;\n    }\n    var next = paragraphWidget;\n    while (next instanceof ParagraphWidget) {\n      var selection = this.owner.selection;\n      var selectedParas = void 0;\n      var elementInfo = void 0;\n      var selectionLength = void 0;\n      if (!isNullOrUndefined(selection)) {\n        elementInfo = selection.getElementInfo(selection.end.currentWidget, selection.end.offset);\n        selectionLength = selection.getParagraphLength(paragraphWidget, !selection.isForward ? selection.start.currentWidget : selection.end.currentWidget, elementInfo);\n      }\n      if (!isNullOrUndefined(this.owner.editor) && this.owner.editor.isCopying && selection.getParagraphLength(paragraphWidget) + 1 === Math.abs(selectionLength) && selection.start.paragraph === selection.end.paragraph) {\n        selectedParas = selection.getParagraphsInSelection();\n      }\n      if (this.writeLines(next, lineIndex, start, paragraph[inlinesProperty[this.keywordIndex]])) {\n        if (!isNullOrUndefined(selectedParas) && selectedParas.length === 1 && selectedParas[0] === paragraphWidget) {\n          // To preserve the <P> tag while copying\n          paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]] = true;\n        }\n        return undefined;\n      }\n      lineIndex = 0;\n      start = 0;\n      if (!isNullOrUndefined(selectedParas) && selectedParas.length === 1 && selectedParas[0] === paragraphWidget) {\n        // To preserve the <P> tag while copying\n        paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]] = true;\n      }\n      paragraphWidget = next;\n      next = paragraphWidget.nextSplitWidget;\n    }\n    next = paragraphWidget.nextRenderedWidget;\n    if (this.documentHelper.owner.layoutType !== 'Continuous' && isNullOrUndefined(next) && paragraphWidget.containerWidget instanceof BodyWidget && !isNullOrUndefined(paragraphWidget.containerWidget.page.nextPage) && !isNullOrUndefined(paragraphWidget.containerWidget.page.nextPage.bodyWidgets)) {\n      next = paragraphWidget.containerWidget.page.nextPage.bodyWidgets[0].childWidgets[0];\n    }\n    if (this.isExport) {\n      return next instanceof BlockWidget && paragraphWidget.containerWidget.index === next.containerWidget.index ? next : undefined;\n    } else {\n      return next;\n    }\n  };\n  SfdtExport.prototype.writeInlines = function (paragraph, line, inlines) {\n    this.contentInline = [];\n    var lineWidget = line;\n    var isformField = false;\n    for (var i = 0; i < lineWidget.children.length; i++) {\n      var element = lineWidget.children[i];\n      if (this.isExport && this.checkboxOrDropdown) {\n        if (isformField && element instanceof TextElementBox) {\n          continue;\n        }\n        if (element instanceof FieldElementBox && element.fieldType === 2) {\n          isformField = true;\n        }\n      }\n      if (element instanceof ListTextElementBox) {\n        continue;\n      }\n      if (element instanceof FootnoteElementBox) {\n        inlines.push(this.writeInlinesFootNote(element));\n        continue;\n      }\n      if (element instanceof ContentControl || this.startContent || this.blockContent) {\n        this.writeInlinesContentControl(element, line, inlines, i);\n      } else {\n        var inline = this.writeInline(element);\n        if (!isNullOrUndefined(inline)) {\n          inlines.push(inline);\n        }\n      }\n      if (this.isExport && element instanceof FieldElementBox && element.fieldType === 1) {\n        isformField = false;\n        this.checkboxOrDropdown = false;\n      }\n    }\n  };\n  SfdtExport.prototype.inlineContentControl = function (element, nextElement, inlines) {\n    var inline = {};\n    var nestedContentInline = [];\n    if (!isNullOrUndefined(inlines)) {\n      if (this.nestedContent) {\n        inlines = inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]];\n        if (inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]] == undefined) {\n          inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]] = [];\n        }\n        // if (isNullOrUndefined(inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]])) {\n        //     let nestInlines:any =[];\n        //     // nestInlines.inlines=[];\n        //     let inlineObject:{}={[inlinesProperty[this.keywordIndex]]:nestInlines}\n        //     inlines.push(inlineObject);\n        // }\n        inline = this.inlineContentControls(element, inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]]);\n        var nestedContentinline = this.nestedContentProperty(nextElement, inlines[inlines.length - 1]);\n        if (!isNullOrUndefined(nestedContentinline)) {\n          this.contentInline.push(inline);\n          nestedContentInline = [];\n        }\n      } else {\n        this.inlineContentControls(element, inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]]);\n      }\n    } else {\n      if (this.nestedContent) {\n        inline[inlinesProperty[this.keywordIndex]] = this.inlineContentControls(element, undefined, nestedContentInline);\n        var nestedContentinline = this.nestedContentProperty(nextElement, inline);\n        if (!isNullOrUndefined(nestedContentinline) || this.multipleLineContent) {\n          this.contentInline.push(inline);\n          nestedContentInline = [];\n        }\n      } else {\n        inline[inlinesProperty[this.keywordIndex]] = this.inlineContentControls(element, this.contentInline);\n      }\n    }\n    if (nextElement instanceof ContentControl && nextElement.type === 1 && !this.nestedContent) {\n      if (this.multipleLineContent && !isNullOrUndefined(inlines)) {\n        inlines[inlines.length - 1][contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n        this.multipleLineContent = false;\n        return;\n      } else {\n        inline[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n      }\n      return inline;\n    } else if (this.startContent) {\n      this.multipleLineContent = true;\n      return inline;\n    }\n  };\n  SfdtExport.prototype.nestedContentProperty = function (nextElement, inline, inlines) {\n    if (!isNullOrUndefined(nextElement)) {\n      if (nextElement.type === 1) {\n        inline[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n        return inline;\n      } else if (this.startContent) {\n        this.multipleLineContent = true;\n        return inline;\n      }\n    } else if (this.startContent) {\n      this.multipleLineContent = true;\n      return inline;\n    }\n  };\n  SfdtExport.prototype.inlineContentControls = function (element, contentInline, nestedContentInline) {\n    var inline = this.writeInline(element);\n    if (!isNullOrUndefined(nestedContentInline)) {\n      nestedContentInline.push(inline);\n      return nestedContentInline;\n    }\n    contentInline.push(inline);\n    return contentInline;\n  };\n  /* eslint-disable  */\n  SfdtExport.prototype.writeInline = function (element) {\n    var inline = {};\n    if (element.removedIds.length > 0) {\n      for (var i = 0; i < element.removedIds.length; i++) {\n        element.revisions[i] = this.documentHelper.revisionsInternal.get(element.removedIds[i]);\n      }\n    }\n    inline[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(element.characterFormat, this.keywordIndex);\n    if (element instanceof FieldElementBox) {\n      inline[fieldTypeProperty[this.keywordIndex]] = element.fieldType;\n      if (element.fieldType === 0) {\n        inline[hasFieldEndProperty[this.keywordIndex]] = element.hasFieldEnd;\n        if (element.formFieldData) {\n          inline[formFieldDataProperty[this.keywordIndex]] = {};\n          inline[formFieldDataProperty[this.keywordIndex]][nameProperty[this.keywordIndex]] = element.formFieldData.name;\n          inline[formFieldDataProperty[this.keywordIndex]][enabledProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.enabled, this.keywordIndex);\n          inline[formFieldDataProperty[this.keywordIndex]][helpTextProperty[this.keywordIndex]] = element.formFieldData.helpText;\n          inline[formFieldDataProperty[this.keywordIndex]][statusTextProperty[this.keywordIndex]] = element.formFieldData.statusText;\n          if (element.formFieldData instanceof TextFormField) {\n            inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]] = {};\n            inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextFormFieldTypeEnumValue(element.formFieldData.type) : element.formFieldData.type;\n            inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][maxLengthProperty[this.keywordIndex]] = element.formFieldData.maxLength;\n            inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] = element.formFieldData.defaultValue;\n            inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]] = this.keywordIndex == 1 && element.formFieldData.type === 'Text' ? this.getTextFormFieldFormatEnumValue(element.formFieldData.format) : element.formFieldData.format;\n          } else if (element.formFieldData instanceof CheckBoxFormField) {\n            inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]] = {};\n            this.checkboxOrDropdown = true;\n            inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][sizeTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getCheckBoxSizeTypeEnumValue(element.formFieldData.sizeType) : element.formFieldData.sizeType;\n            inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][sizeProperty[this.keywordIndex]] = element.formFieldData.size;\n            inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.defaultValue, this.keywordIndex);\n            inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.checked, this.keywordIndex);\n          } else {\n            inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]] = {};\n            this.checkboxOrDropdown = true;\n            inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]] = element.formFieldData.dropdownItems;\n            inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]] = element.formFieldData.selectedIndex;\n          }\n        }\n      }\n      if (element.fieldCodeType && element.fieldCodeType !== '') {\n        inline.fieldCodeType = element.fieldCodeType;\n      }\n    } else if (element instanceof ChartElementBox) {\n      this.writeChart(element, inline);\n    } else if (element instanceof ImageElementBox) {\n      inline[imageStringProperty[this.keywordIndex]] = element.imageString;\n      this.images.push(parseInt(element.imageString, 10));\n      inline[metaFileImageStringProperty[this.keywordIndex]] = element.metaFileImageString;\n      inline[isMetaFileProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isMetaFile, this.keywordIndex);\n      inline[isCompressedProperty[this.keywordIndex]] = element.isCompressed;\n      inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n      inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n      //inline.iscrop = element.isCrop;\n      if (element.isCrop) {\n        inline[bottomProperty[this.keywordIndex]] = element.bottom;\n        inline[rightProperty[this.keywordIndex]] = element.right;\n        inline[leftProperty[this.keywordIndex]] = element.left;\n        inline[topProperty[this.keywordIndex]] = element.top;\n        inline[getImageWidthProperty[this.keywordIndex]] = element.cropWidthScale;\n        inline[getImageHeightProperty[this.keywordIndex]] = element.cropHeightScale;\n      }\n      inline[nameProperty[this.keywordIndex]] = element.name;\n      inline[alternativeTextProperty[this.keywordIndex]] = element.alternateText;\n      inline[titleProperty[this.keywordIndex]] = element.title;\n      inline[visibleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.visible, this.keywordIndex);\n      inline[widthScaleProperty[this.keywordIndex]] = element.widthScale;\n      inline[heightScaleProperty[this.keywordIndex]] = element.heightScale;\n      inline[verticalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.verticalPosition);\n      inline[verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getVerticalOriginEnumValue(element.verticalOrigin) : element.verticalOrigin;\n      inline[verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeVerticalAlignmentEnumValue(element.verticalAlignment) : element.verticalAlignment;\n      inline[horizontalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.horizontalPosition);\n      inline[horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getHorizontalOriginEnumValue(element.horizontalOrigin) : element.horizontalOrigin;\n      inline[horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeHorizontalAlignmentEnumValue(element.horizontalAlignment) : element.horizontalAlignment;\n      inline[allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.allowOverlap, this.keywordIndex);\n      inline[textWrappingStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingStyleEnumValue(element.textWrappingStyle) : element.textWrappingStyle;\n      inline[textWrappingTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingTypeEnumValue(element.textWrappingType) : element.textWrappingType;\n      inline[belowTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isBelowText, this.keywordIndex);\n      if (!isNullOrUndefined(element.distanceBottom)) {\n        inline[distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceBottom);\n      }\n      if (!isNullOrUndefined(element.distanceLeft)) {\n        inline[distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceLeft);\n      }\n      if (!isNullOrUndefined(element.distanceRight)) {\n        inline[distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceRight);\n      }\n      if (!isNullOrUndefined(element.distanceTop)) {\n        inline[distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceTop);\n      }\n      inline[layoutInCellProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.layoutInCell, this.keywordIndex);\n      inline[zOrderPositionProperty[this.keywordIndex]] = element.zOrderPosition;\n    } else if (element instanceof BookmarkElementBox) {\n      inline[bookmarkTypeProperty[this.keywordIndex]] = element.bookmarkType;\n      inline[nameProperty[this.keywordIndex]] = element.name;\n      if (!isNullOrUndefined(element.properties)) {\n        var properties = {};\n        if (!isNullOrUndefined(element.properties['isAfterParagraphMark'])) {\n          properties[isAfterParagraphMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterParagraphMark'], this.keywordIndex);\n        }\n        if (!isNullOrUndefined(element.properties['isAfterTableMark'])) {\n          properties[isAfterTableMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterTableMark'], this.keywordIndex);\n        }\n        if (!isNullOrUndefined(element.properties['isAfterRowMark'])) {\n          properties[isAfterRowMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterRowMark'], this.keywordIndex);\n        }\n        if (!isNullOrUndefined(element.properties['isAfterCellMark'])) {\n          properties[isAfterCellMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterCellMark'], this.keywordIndex);\n        }\n        if (!isNullOrUndefined(element.properties['columnFirst'])) {\n          properties[columnFirstProperty[this.keywordIndex]] = element.properties['columnFirst'];\n        }\n        if (!isNullOrUndefined(element.properties['columnLast'])) {\n          properties[columnLastProperty[this.keywordIndex]] = element.properties['columnLast'];\n        }\n        inline[propertiesProperty[this.keywordIndex]] = properties;\n      }\n    } else if (element instanceof BreakElementBox) {\n      inline[breakClearTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? HelperMethods.getBreakClearType(element.breakClearType) : element.breakClearType;\n    } else if (element instanceof FootnoteElementBox) {\n      inline = this.writeInlinesFootNote(element);\n    } else if (element instanceof TextElementBox) {\n      var elementText = element.text;\n      if (!this.isWriteEndFootNote && (isNullOrUndefined(this.owner.editorModule) || !this.owner.editorModule.isPaste)) {\n        elementText = HelperMethods.removeInvalidXmlChars(elementText);\n      }\n      if (this.isWriteInlinesFootNote && element.indexInOwner === 0 && element.line.indexInOwner === 0 && element.paragraph.indexInOwner == 0 && HelperMethods.checkTextFormat(elementText)) {\n        elementText = \"\\u0002\";\n      }\n      // replacing the no break hyphen character by '-'\n      if (elementText.indexOf(String.fromCharCode(30)) !== -1) {\n        inline[textProperty[this.keywordIndex]] = elementText.replace(/\\u001e/g, '-');\n      } else if (elementText.indexOf(String.fromCharCode(31)) !== -1) {\n        inline[textProperty[this.keywordIndex]] = elementText.replace(/\\u001f/g, '');\n      } else if (element instanceof FootnoteEndnoteMarkerElementBox) {\n        inline[textProperty[this.keywordIndex]] = '\\u0002';\n      } else if (element.revisions.length !== 0) {\n        if (!this.isExport && this.owner.enableTrackChanges && !this.isPartialExport) {\n          this.copyWithTrackChange = true;\n          for (var x = 0; x < element.revisions.length; x++) {\n            var revision = element.revisions[x];\n            if (this.selectedRevisionId.indexOf(revision.revisionID) === -1) {\n              this.selectedRevisionId.push(revision.revisionID);\n            }\n            if (element.revisions[x].revisionType !== 'Deletion') {\n              inline[textProperty[this.keywordIndex]] = elementText;\n            }\n          }\n        } else {\n          inline[textProperty[this.keywordIndex]] = elementText;\n        }\n      } else {\n        inline[textProperty[this.keywordIndex]] = elementText;\n      }\n    } else if (element instanceof EditRangeStartElementBox) {\n      if (element.user !== '') {\n        inline[userProperty[this.keywordIndex]] = element.user;\n      }\n      inline[groupProperty[this.keywordIndex]] = element.group;\n      inline[columnFirstProperty[this.keywordIndex]] = element.columnFirst;\n      inline[columnLastProperty[this.keywordIndex]] = element.columnLast;\n      inline[editRangeIdProperty[this.keywordIndex]] = element.editRangeId.toString();\n    } else if (element instanceof EditRangeEndElementBox) {\n      inline[editableRangeStartProperty[this.keywordIndex]] = {};\n      inline[editableRangeStartProperty[this.keywordIndex]][userProperty[this.keywordIndex]] = element.editRangeStart.user;\n      inline[editableRangeStartProperty[this.keywordIndex]][groupProperty[this.keywordIndex]] = element.editRangeStart.group;\n      inline[editableRangeStartProperty[this.keywordIndex]][columnFirstProperty[this.keywordIndex]] = element.editRangeStart.columnFirst;\n      inline[editableRangeStartProperty[this.keywordIndex]][columnLastProperty[this.keywordIndex]] = element.editRangeStart.columnLast;\n      inline[editRangeIdProperty[this.keywordIndex]] = element.editRangeId.toString();\n    } else if (element instanceof CommentCharacterElementBox) {\n      if (this.iscontentInsert) {\n        if (!this.isExport && element.commentType === 0) {\n          this.selectedCommentsId.push(element.commentId);\n        }\n        inline[commentCharacterTypeProperty[this.keywordIndex]] = element.commentType;\n        inline[commentIdProperty[this.keywordIndex]] = element.commentId;\n      } else {\n        return undefined;\n      }\n    } else if (element instanceof ShapeElementBox) {\n      this.writeShape(element, inline);\n    } else {\n      inline = undefined;\n    }\n    this.writeInlineRevisions(inline, element);\n    /*if(element.removedIds.length > 0){\n        inline.revisionIds = [];\n        for(let x:number = 0;x < element.removedIds.length; x++){\n        inline.revisionIds.push(element.removedIds);\n        }\n    }*/\n    return inline;\n  };\n  SfdtExport.prototype.writeInlineRevisions = function (inline, element) {\n    if (element.revisions.length > 0 && (this.isExport || !this.isExport && !this.owner.enableTrackChanges)) {\n      inline[revisionIdsProperty[this.keywordIndex]] = [];\n      for (var x = 0; x < element.revisions.length; x++) {\n        //revisionIdes[x] = element.revisions[x];\n        if (this.selectedRevisionId.indexOf(element.revisions[x].revisionID) === -1) {\n          this.selectedRevisionId.push(element.revisions[x].revisionID);\n        }\n        inline[revisionIdsProperty[this.keywordIndex]].push(element.revisions[x].revisionID);\n        //this.document.revisionIdes.push(inline.revisionIds)\n      }\n    }\n  };\n  SfdtExport.prototype.writeShape = function (element, inline) {\n    inline[shapeIdProperty[this.keywordIndex]] = element.shapeId;\n    inline[nameProperty[this.keywordIndex]] = element.name;\n    inline[alternativeTextProperty[this.keywordIndex]] = element.alternateText;\n    inline[titleProperty[this.keywordIndex]] = element.title;\n    inline[visibleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.visible, this.keywordIndex);\n    inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n    inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n    if (element.isZeroHeight) {\n      inline[heightProperty[this.keywordIndex]] = 0;\n    } else {\n      inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n    }\n    inline[widthScaleProperty[this.keywordIndex]] = element.widthScale;\n    inline[heightScaleProperty[this.keywordIndex]] = element.heightScale;\n    inline[verticalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.verticalPosition);\n    inline[verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getVerticalOriginEnumValue(element.verticalOrigin) : element.verticalOrigin;\n    inline[verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeVerticalAlignmentEnumValue(element.verticalAlignment) : element.verticalAlignment;\n    inline[verticalRelativePercentProperty[this.keywordIndex]] = element.verticalRelativePercent;\n    inline[horizontalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.horizontalPosition);\n    inline[horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getHorizontalOriginEnumValue(element.horizontalOrigin) : element.horizontalOrigin;\n    inline[horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeHorizontalAlignmentEnumValue(element.horizontalAlignment) : element.horizontalAlignment;\n    inline[horizontalRelativePercentProperty[this.keywordIndex]] = element.horizontalRelativePercent;\n    inline[heightRelativePercentProperty[this.keywordIndex]] = element.heightRelativePercent;\n    inline[widthRelativePercentProperty[this.keywordIndex]] = element.widthRelativePercent;\n    inline[zOrderPositionProperty[this.keywordIndex]] = element.zOrderPosition;\n    inline[allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.allowOverlap, this.keywordIndex);\n    inline[textWrappingStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingStyleEnumValue(element.textWrappingStyle) : element.textWrappingStyle;\n    inline[textWrappingTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingTypeEnumValue(element.textWrappingType) : element.textWrappingType;\n    inline[belowTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isBelowText, this.keywordIndex);\n    inline[horizontalRuleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isHorizontalRule, this.keywordIndex);\n    if (!isNullOrUndefined(element.distanceBottom)) {\n      inline[distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceBottom);\n    }\n    if (!isNullOrUndefined(element.distanceLeft)) {\n      inline[distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceLeft);\n    }\n    if (!isNullOrUndefined(element.distanceRight)) {\n      inline[distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceRight);\n    }\n    if (!isNullOrUndefined(element.distanceTop)) {\n      inline[distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceTop);\n    }\n    inline[layoutInCellProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.layoutInCell, this.keywordIndex);\n    inline[lockAnchorProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.lockAnchor, this.keywordIndex);\n    inline[autoShapeTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getAutoShapeTypeEnumValue(element.autoShapeType) : element.autoShapeType;\n    if (element.fillFormat) {\n      inline[fillFormatProperty[this.keywordIndex]] = {};\n      inline[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = element.fillFormat.color;\n      inline[fillFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.fillFormat.fill, this.keywordIndex);\n    }\n    if (element.lineFormat) {\n      inline[lineFormatProperty[this.keywordIndex]] = {};\n      inline[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getLineFormatTypeEnumValue(element.lineFormat.lineFormatType) : element.lineFormat.lineFormatType;\n      inline[lineFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = element.lineFormat.color;\n      inline[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] = element.lineFormat.weight;\n      inline[lineFormatProperty[this.keywordIndex]][lineStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getLineDashStyleEnumValue(element.lineFormat.dashStyle) : element.lineFormat.dashStyle;\n      inline[lineFormatProperty[this.keywordIndex]][lineProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.lineFormat.line, this.keywordIndex);\n    }\n    if (element.textFrame) {\n      inline[textFrameProperty[this.keywordIndex]] = {};\n      inline[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextVerticalAlignmentEnumValue(element.textFrame.textVerticalAlignment) : element.textFrame.textVerticalAlignment;\n      inline[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginLeft);\n      inline[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginRight);\n      inline[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginTop);\n      inline[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginBottom);\n      inline[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]] = [];\n      for (var j = 0; j < element.textFrame.childWidgets.length; j++) {\n        var textFrameBlock = element.textFrame.childWidgets[j];\n        if (textFrameBlock.hasOwnProperty('contentControlProperties') && !isNullOrUndefined(element.paragraph) && element.paragraph.hasOwnProperty('contentControlProperties')) {\n          this.blocks = [];\n        }\n        this.writeBlock(textFrameBlock, 0, inline[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]]);\n      }\n    }\n  };\n  SfdtExport.prototype.writeChart = function (element, inline) {\n    inline[chartLegendProperty[this.keywordIndex]] = {};\n    inline[chartTitleAreaProperty[this.keywordIndex]] = {};\n    inline[chartAreaProperty[this.keywordIndex]] = {};\n    inline[plotAreaProperty[this.keywordIndex]] = {};\n    inline[chartCategoryProperty[this.keywordIndex]] = [];\n    inline[chartSeriesProperty[this.keywordIndex]] = [];\n    inline[chartPrimaryCategoryAxisProperty[this.keywordIndex]] = {};\n    inline[chartPrimaryValueAxisProperty[this.keywordIndex]] = {};\n    this.writeChartTitleArea(element.chartTitleArea, inline[chartTitleAreaProperty[this.keywordIndex]]);\n    this.writeChartArea(element.chartArea, inline[chartAreaProperty[this.keywordIndex]]);\n    this.writeChartArea(element.chartPlotArea, inline[plotAreaProperty[this.keywordIndex]]);\n    this.writeChartCategory(element, inline[chartCategoryProperty[this.keywordIndex]]);\n    this.createChartSeries(element, inline[chartSeriesProperty[this.keywordIndex]]);\n    this.writeChartLegend(element.chartLegend, inline[chartLegendProperty[this.keywordIndex]]);\n    this.writeChartCategoryAxis(element.chartPrimaryCategoryAxis, inline[chartPrimaryCategoryAxisProperty[this.keywordIndex]]);\n    this.writeChartCategoryAxis(element.chartPrimaryValueAxis, inline[chartPrimaryValueAxisProperty[this.keywordIndex]]);\n    if (element.chartDataTable.showSeriesKeys !== undefined) {\n      inline[chartDataTableProperty[this.keywordIndex]] = {};\n      this.writeChartDataTable(element.chartDataTable, inline[chartDataTableProperty[this.keywordIndex]]);\n    }\n    inline[chartTitleProperty[this.keywordIndex]] = element.title;\n    inline[chartTypeProperty[this.keywordIndex]] = element.type;\n    inline[gapWidthProperty[this.keywordIndex]] = element.chartGapWidth;\n    inline[overlapProperty[this.keywordIndex]] = element.chartOverlap;\n    inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n    inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n  };\n  SfdtExport.prototype.writeChartTitleArea = function (titleArea, chartTitleArea) {\n    chartTitleArea[fontNameProperty[this.keywordIndex]] = titleArea.chartfontName;\n    chartTitleArea[fontSizeProperty[this.keywordIndex]] = titleArea.chartFontSize;\n    chartTitleArea[layoutProperty[this.keywordIndex]] = {};\n    chartTitleArea[dataFormatProperty[this.keywordIndex]] = this.writeChartDataFormat(titleArea.dataFormat);\n    this.writeChartLayout(titleArea.layout, chartTitleArea[layoutProperty[this.keywordIndex]]);\n  };\n  SfdtExport.prototype.writeChartDataFormat = function (format) {\n    var chartDataFormat = {};\n    chartDataFormat[fillProperty[this.keywordIndex]] = {};\n    chartDataFormat[lineProperty[this.keywordIndex]] = {};\n    if (!isNullOrUndefined(format.fill.color)) {\n      if (format.fill.color.length > 6) {\n        chartDataFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]] = format.fill.color.substring(2);\n      } else {\n        chartDataFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]] = format.fill.color;\n      }\n    }\n    chartDataFormat[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]] = format.fill.rgb;\n    chartDataFormat[lineProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = format.line.color;\n    chartDataFormat[lineProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]] = format.line.rgb;\n    return chartDataFormat;\n  };\n  SfdtExport.prototype.writeChartLayout = function (layout, chartLayout) {\n    chartLayout[layoutXProperty[this.keywordIndex]] = layout.chartLayoutLeft;\n    chartLayout[layoutYProperty[this.keywordIndex]] = layout.chartLayoutTop;\n  };\n  SfdtExport.prototype.writeChartArea = function (area, chartArea) {\n    chartArea[foreColorProperty[this.keywordIndex]] = area.chartForeColor;\n  };\n  SfdtExport.prototype.writeChartLegend = function (legend, chartLegend) {\n    chartLegend[positionProperty[this.keywordIndex]] = legend.chartLegendPostion;\n    chartLegend[chartTitleAreaProperty[this.keywordIndex]] = {};\n    this.writeChartTitleArea(legend.chartTitleArea, chartLegend[chartTitleAreaProperty[this.keywordIndex]]);\n  };\n  SfdtExport.prototype.writeChartCategoryAxis = function (categoryAxis, primaryCategoryAxis) {\n    primaryCategoryAxis[chartTitleProperty[this.keywordIndex]] = categoryAxis.categoryAxisTitle;\n    primaryCategoryAxis[chartTitleAreaProperty[this.keywordIndex]] = {};\n    this.writeChartTitleArea(categoryAxis.chartTitleArea, primaryCategoryAxis[chartTitleAreaProperty[this.keywordIndex]]);\n    primaryCategoryAxis[categoryTypeProperty[this.keywordIndex]] = categoryAxis.categoryAxisType;\n    primaryCategoryAxis[fontSizeProperty[this.keywordIndex]] = categoryAxis.axisFontSize;\n    primaryCategoryAxis[fontNameProperty[this.keywordIndex]] = categoryAxis.axisFontName;\n    primaryCategoryAxis[numberFormatProperty[this.keywordIndex]] = categoryAxis.categoryNumberFormat;\n    primaryCategoryAxis[maximumValueProperty[this.keywordIndex]] = categoryAxis.max;\n    primaryCategoryAxis[minimumValueProperty[this.keywordIndex]] = categoryAxis.min;\n    primaryCategoryAxis[isAutoMajorProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.isAutoInternal, this.keywordIndex);\n    primaryCategoryAxis[majorUnitProperty[this.keywordIndex]] = categoryAxis.interval;\n    primaryCategoryAxis[hasMajorGridLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.majorGridLines, this.keywordIndex);\n    primaryCategoryAxis[hasMinorGridLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.minorGridLines, this.keywordIndex);\n    primaryCategoryAxis[majorTickMarkProperty[this.keywordIndex]] = categoryAxis.majorTick;\n    primaryCategoryAxis[minorTickMarkProperty[this.keywordIndex]] = categoryAxis.minorTick;\n    primaryCategoryAxis[tickLabelPositionProperty[this.keywordIndex]] = categoryAxis.tickPosition;\n  };\n  SfdtExport.prototype.writeChartDataTable = function (chartDataTable, dataTable) {\n    dataTable[showSeriesKeysProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.showSeriesKeys, this.keywordIndex);\n    dataTable[hasHorizontalBorderProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasHorzBorder, this.keywordIndex);\n    dataTable[hasVerticalBorderProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasVertBorder, this.keywordIndex);\n    dataTable[hasBordersProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasBorders, this.keywordIndex);\n  };\n  SfdtExport.prototype.writeChartCategory = function (element, chartCategory) {\n    var data = element.chartCategory;\n    chartCategory[chartDataProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < data.length; i++) {\n      var xData = data[i];\n      var categories = this.createChartCategory(xData, element.chartType);\n      chartCategory.push(categories);\n    }\n  };\n  SfdtExport.prototype.createChartCategory = function (data, type) {\n    var chartCategory = {};\n    chartCategory[chartDataProperty[this.keywordIndex]] = [];\n    this.writeChartData(data, chartCategory[chartDataProperty[this.keywordIndex]], type);\n    chartCategory[categoryXNameProperty[this.keywordIndex]] = data.categoryXName;\n    return chartCategory;\n  };\n  SfdtExport.prototype.writeChartData = function (element, chartData, type) {\n    var data = element.chartData;\n    for (var i = 0; i < data.length; i++) {\n      var yData = data[i];\n      var yCategory = this.createChartData(yData, type);\n      chartData.push(yCategory);\n    }\n  };\n  SfdtExport.prototype.createChartData = function (data, type) {\n    var chartData = {};\n    chartData[yValueProperty[this.keywordIndex]] = data.yValue;\n    if (type === 'Bubble') {\n      chartData[sizeProperty[this.keywordIndex]] = data.size;\n    }\n    return chartData;\n  };\n  SfdtExport.prototype.createChartSeries = function (element, chartSeries) {\n    var data = element.chartSeries;\n    var type = element.chartType;\n    for (var i = 0; i < data.length; i++) {\n      var yData = data[i];\n      var series = this.writeChartSeries(yData, type);\n      chartSeries.push(series);\n    }\n  };\n  SfdtExport.prototype.writeChartSeries = function (series, type) {\n    var isPieType = type === 'Pie' || type === 'Doughnut';\n    var chartSeries = {};\n    var errorBar = {};\n    var errorBarData = series.errorBar;\n    chartSeries[dataPointsProperty[this.keywordIndex]] = [];\n    chartSeries[seriesNameProperty[this.keywordIndex]] = series.seriesName;\n    if (isPieType) {\n      if (!isNullOrUndefined(series.firstSliceAngle)) {\n        chartSeries[firstSliceAngleProperty[this.keywordIndex]] = series.firstSliceAngle;\n      }\n      if (type === 'Doughnut') {\n        chartSeries[holeSizeProperty[this.keywordIndex]] = series.doughnutHoleSize;\n      }\n    }\n    if (!isNullOrUndefined(series.dataLabels.labelPosition)) {\n      var dataLabel = this.writeChartDataLabels(series.dataLabels);\n      chartSeries[dataLabelProperty[this.keywordIndex]] = dataLabel;\n    }\n    if (!isNullOrUndefined(series.seriesFormat.markerStyle)) {\n      var seriesFormat = {};\n      var format = series.seriesFormat;\n      seriesFormat[markerStyleProperty[this.keywordIndex]] = format.markerStyle;\n      seriesFormat[markerSizeProperty[this.keywordIndex]] = format.numberValue;\n      seriesFormat[markerColorProperty[this.keywordIndex]] = format.markerColor;\n      chartSeries[seriesFormatProperty[this.keywordIndex]] = seriesFormat;\n    }\n    if (!isNullOrUndefined(errorBarData.type)) {\n      errorBar[typeProperty[this.keywordIndex]] = errorBarData.type;\n      errorBar[directionProperty[this.keywordIndex]] = errorBarData.direction;\n      errorBar[endStyleProperty[this.keywordIndex]] = errorBarData.endStyle;\n      errorBar[numberValueProperty[this.keywordIndex]] = errorBarData.numberValue;\n      chartSeries[errorBarProperty[this.keywordIndex]] = errorBar;\n    }\n    if (series.trendLines.length > 0) {\n      chartSeries[trendLinesProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < series.trendLines.length; i++) {\n        var trendLine = this.writeChartTrendLines(series.trendLines[i]);\n        chartSeries[trendLinesProperty[this.keywordIndex]].push(trendLine);\n      }\n    }\n    for (var i = 0; i < series.chartDataFormat.length; i++) {\n      var format = this.writeChartDataFormat(series.chartDataFormat[i]);\n      chartSeries[dataPointsProperty[this.keywordIndex]].push(format);\n    }\n    return chartSeries;\n  };\n  SfdtExport.prototype.writeChartDataLabels = function (dataLabels) {\n    var dataLabel = {};\n    dataLabel[positionProperty[this.keywordIndex]] = dataLabels.position;\n    dataLabel[fontNameProperty[this.keywordIndex]] = dataLabels.fontName;\n    dataLabel[fontColorProperty[this.keywordIndex]] = HelperMethods.convertArgbToRgb(dataLabels.fontColor);\n    dataLabel[fontSizeProperty[this.keywordIndex]] = dataLabels.fontSize;\n    dataLabel[isLegendKeyProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isLegendKey, this.keywordIndex);\n    dataLabel[isBubbleSizeProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isBubbleSize, this.keywordIndex);\n    dataLabel[isCategoryNameProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isCategoryName, this.keywordIndex);\n    dataLabel[isSeriesNameProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isSeriesName, this.keywordIndex);\n    dataLabel[isValueProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isValue, this.keywordIndex);\n    dataLabel[isPercentageProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isPercentage, this.keywordIndex);\n    dataLabel[isLeaderLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isLeaderLines, this.keywordIndex);\n    return dataLabel;\n  };\n  SfdtExport.prototype.writeChartTrendLines = function (trendLines) {\n    var trendLine = {};\n    trendLine[nameProperty[this.keywordIndex]] = trendLines.trendLineName;\n    trendLine[typeProperty[this.keywordIndex]] = trendLines.trendLineType;\n    trendLine[forwardProperty[this.keywordIndex]] = trendLines.forwardValue;\n    trendLine[backwardProperty[this.keywordIndex]] = trendLines.backwardValue;\n    trendLine[interceptProperty[this.keywordIndex]] = trendLines.interceptValue;\n    trendLine[isDisplayEquationProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(trendLines.isDisplayEquation, this.keywordIndex);\n    trendLine[isDisplayRSquaredProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(trendLines.isDisplayRSquared, this.keywordIndex);\n    return trendLine;\n  };\n  SfdtExport.prototype.writeLines = function (paragraph, lineIndex, offset, inlines) {\n    var startIndex = lineIndex;\n    var endParagraph = this.endLine instanceof LineWidget && this.endLine.paragraph === paragraph;\n    var endIndex = endParagraph ? this.endLine.indexInOwner : paragraph.childWidgets.length - 1;\n    for (var i = startIndex; i <= endIndex; i++) {\n      var child = paragraph.childWidgets[i];\n      if (this.endLine === child || lineIndex === i && offset !== 0) {\n        if (this.endLine === child && paragraph.paragraphFormat.bidi && this.startLine !== this.endLine) {\n          this.endOffset = child.getEndOffset();\n        }\n        this.writeLine(child, this.startLine !== this.endLine && child !== this.startLine ? 0 : offset, inlines);\n      } else {\n        this.writeInlines(paragraph, child, inlines);\n      }\n    }\n    return endParagraph;\n  };\n  SfdtExport.prototype.writeLine = function (line, offset, inlines) {\n    this.contentInline = [];\n    var isContentStarted = false;\n    var contentControl = false;\n    var isEnd = line === this.endLine;\n    var lineWidget = line;\n    var started = false;\n    var ended = false;\n    var length = 0;\n    for (var j = 0; j < lineWidget.children.length; j++) {\n      var element = lineWidget.children[j];\n      if (element instanceof ListTextElementBox) {\n        continue;\n      }\n      var inline = undefined;\n      length += element.length;\n      started = length > offset;\n      if (element instanceof ContentControl) {\n        if (!started) {\n          isContentStarted = element.type === 0 ? true : false;\n        }\n        contentControl = true;\n      }\n      if (element instanceof TextElementBox && element.hasOwnProperty('contentControlProperties') && started && !contentControl) {\n        isContentStarted = true;\n      }\n      if (element instanceof ContentControl) {\n        if (isContentStarted) {\n          if (element.type === 1) {\n            isContentStarted = false;\n          }\n        }\n        if (contentControl) {\n          if (element.type === 1) {\n            contentControl = false;\n          }\n        }\n      }\n      ended = isEnd && length >= this.endOffset;\n      if (!started || isContentStarted) {\n        continue;\n      }\n      if (element instanceof ContentControl || this.startContent || this.blockContent) {\n        if (ended) {\n          this.startContent = false;\n          break;\n        }\n        this.writeInlinesContentControl(element, line, inlines, j);\n        continue;\n      }\n      inline = this.writeInline(element);\n      if (!isNullOrUndefined(inline)) {\n        inlines[inlines.length] = inline;\n        if (length > offset || ended) {\n          if (inline.hasOwnProperty(textProperty[this.keywordIndex])) {\n            var startIndex = length - element.length;\n            var indexInInline = offset - startIndex;\n            var endIndex = ended ? this.endOffset - startIndex : element.length;\n            inline[textProperty[this.keywordIndex]] = inline[textProperty[this.keywordIndex]].substring(indexInInline, endIndex);\n          }\n          offset = -1;\n        }\n      }\n      if (ended) {\n        break;\n      }\n    }\n  };\n  SfdtExport.prototype.writeInlinesFootNote = function (element) {\n    this.isWriteInlinesFootNote = true;\n    var inline = {};\n    inline[footnoteTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getFootnoteTypeEnumValue(element.footnoteType) : element.footnoteType;\n    inline[characterFormatProperty[this.keywordIndex]] = {};\n    inline[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(element.characterFormat, this.keywordIndex);\n    inline[blocksProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < element.bodyWidget.childWidgets.length; i++) {\n      this.writeBlock(element.bodyWidget.childWidgets[i], 0, inline[blocksProperty[this.keywordIndex]]);\n    }\n    inline[symbolCodeProperty[this.keywordIndex]] = element.symbolCode;\n    inline[symbolFontNameProperty[this.keywordIndex]] = element.symbolFontName;\n    inline[customMarkerProperty[this.keywordIndex]] = element.customMarker;\n    this.writeInlineRevisions(inline, element);\n    this.isWriteInlinesFootNote = false;\n    return inline;\n  };\n  SfdtExport.prototype.writeInlinesContentControl = function (element, lineWidget, inlines, i) {\n    if (element instanceof ContentControl) {\n      if (element.contentControlWidgetType === 'Block') {\n        this.isBlockClosed = false;\n        if (this.blockContent && element.type === 0) {\n          this.nestedBlockContent = true;\n          return true;\n        } else if (this.nestedBlockContent && element.type === 1) {\n          this.nestedBlockContent = false;\n          return true;\n        }\n        this.blockContent = element.type === 0 ? true : false;\n        if (lineWidget.children[i - 1] instanceof ContentControl) {\n          if (lineWidget.children[i - 1].contentControlWidgetType === 'Block') {\n            this.blockContent = true;\n          }\n        }\n        if (!this.blockContent) {\n          this.isBlockClosed = true;\n        }\n        return true;\n      }\n    }\n    if (element instanceof ContentControl) {\n      if (this.startContent && element.type === 0) {\n        this.nestedContent = true;\n        return true;\n      } else if (this.startContent && this.nestedContent) {\n        var inline = {};\n        inline[inlinesProperty[this.keywordIndex]] = this.contentInline;\n        if (this.contentInline.length > 0) {\n          var nestedContent = this.nestedContentProperty(lineWidget.children[i + 1], inline);\n          inlines.push(nestedContent);\n          this.contentInline = [];\n        }\n        if (this.multipleLineContent) {\n          inline = inlines[inlines.length - 1];\n          this.nestedContentProperty(lineWidget.children[i + 1], inline);\n          this.multipleLineContent = false;\n        }\n        this.nestedContent = false;\n        return true;\n      }\n      this.contentType = element.contentControlWidgetType;\n      this.startContent = element.type === 0 ? true : false;\n      return true;\n    }\n    if (this.startContent && this.contentType === 'Inline') {\n      if (this.multipleLineContent) {\n        this.inlineContentControl(element, lineWidget.children[i + 1], inlines);\n        this.contentInline = [];\n      } else {\n        var contentinline = this.inlineContentControl(element, lineWidget.children[i + 1]);\n        if (!isNullOrUndefined(contentinline)) {\n          if (this.nestedContent && this.multipleLineContent) {\n            var inline = {};\n            inline[inlinesProperty[this.keywordIndex]] = this.contentInline;\n            inlines.push(inline);\n            this.contentInline = [];\n          } else {\n            inlines.push(contentinline);\n            this.contentInline = [];\n            return false;\n          }\n        }\n      }\n    } else {\n      var inline = this.writeInline(element);\n      if (!isNullOrUndefined(inline)) {\n        inlines.push(inline);\n      }\n    }\n  };\n  SfdtExport.prototype.createParagraph = function (paragraphWidget) {\n    var paragraph = {};\n    var isParaSelected = false;\n    var isListPara = false;\n    if (this.documentHelper.selection && !this.documentHelper.selection.isEmpty && !this.isExport) {\n      var endPos = this.documentHelper.selection.end;\n      if (!this.documentHelper.selection.isForward) {\n        endPos = this.documentHelper.selection.start;\n      }\n      var lastLine = endPos.paragraph.childWidgets[endPos.paragraph.childWidgets.length - 1];\n      isListPara = !isNullOrUndefined(paragraphWidget.paragraphFormat.listFormat.list);\n      isParaSelected = this.documentHelper.selection.isParagraphLastLine(lastLine) && endPos.currentWidget === lastLine && (endPos.offset === this.documentHelper.selection.getLineLength(lastLine) + 1 || !(paragraphWidget.indexInOwner == endPos.paragraph.indexInOwner) && isListPara);\n    } else {\n      isParaSelected = true;\n    }\n    paragraph[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(isParaSelected ? paragraphWidget.paragraphFormat : new WParagraphFormat(paragraphWidget), this.keywordIndex);\n    paragraph[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(isParaSelected ? paragraphWidget.characterFormat : new WCharacterFormat(paragraphWidget), this.keywordIndex);\n    paragraph[inlinesProperty[this.keywordIndex]] = [];\n    return paragraph;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeCharacterFormat = function (format, keywordIndex, isInline) {\n    var characterFormat = {};\n    HelperMethods.writeCharacterFormat(characterFormat, isInline, format, keywordIndex);\n    characterFormat[boldBidiProperty[keywordIndex]] = isInline ? HelperMethods.getBoolInfo(format.boldBidi, keywordIndex) : format.getValue('boldBidi');\n    characterFormat[italicBidiProperty[keywordIndex]] = isInline ? HelperMethods.getBoolInfo(format.italicBidi, keywordIndex) : format.getValue('italicBidi');\n    characterFormat[fontSizeBidiProperty[keywordIndex]] = isInline ? format.fontSizeBidi : format.getValue('fontSizeBidi');\n    if (format.revisions.length > 0) {\n      characterFormat[revisionIdsProperty[keywordIndex]] = [];\n      for (var x = 0; x < format.revisions.length; x++) {\n        characterFormat[revisionIdsProperty[keywordIndex]].push(format.revisions[x].revisionID);\n      }\n    }\n    if (this.writeInlineStyles && !isInline) {\n      characterFormat[inlineFormatProperty[keywordIndex]] = this.writeCharacterFormat(format, keywordIndex, true);\n    }\n    return characterFormat;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeParagraphFormat = function (format, keywordIndex, isInline) {\n    var paragraphFormat = {};\n    // this.keywordIndex = isNullOrUndefined(this.keywordIndex) ? 0 : this.keywordIndex;\n    HelperMethods.writeParagraphFormat(paragraphFormat, isInline, format, keywordIndex);\n    paragraphFormat[listFormatProperty[keywordIndex]] = this.writeListFormat(format.listFormat, isInline);\n    paragraphFormat[tabsProperty[keywordIndex]] = this.writeTabs(format.tabs);\n    if (this.writeInlineStyles && !isInline) {\n      paragraphFormat[inlineFormatProperty[keywordIndex]] = this.writeParagraphFormat(format, keywordIndex, true);\n    }\n    return paragraphFormat;\n  };\n  SfdtExport.prototype.writeThemes = function (source) {\n    var themes = {};\n    themes[fontSchemeProperty[this.keywordIndex]] = {};\n    themes[fontSchemeProperty[this.keywordIndex]][fontSchemeNameProperty[this.keywordIndex]] = source.fontScheme.fontSchemeName;\n    themes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]] = this.writeMajorMinorFontScheme(source.fontScheme.majorFontScheme);\n    themes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]] = this.writeMajorMinorFontScheme(source.fontScheme.minorFontScheme);\n    return themes;\n  };\n  SfdtExport.prototype.writeMajorMinorFontScheme = function (source) {\n    var majorMinorFontScheme = {};\n    majorMinorFontScheme[fontSchemeListProperty[this.keywordIndex]] = this.writeFontSchemeList(source.fontSchemeList);\n    var keys = source.fontTypeface.keys;\n    var fontTypeface = {};\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      fontTypeface[key] = source.fontTypeface.get(key);\n    }\n    majorMinorFontScheme[fontTypefaceProperty[this.keywordIndex]] = fontTypeface;\n    return majorMinorFontScheme;\n  };\n  SfdtExport.prototype.writeFontSchemeList = function (source) {\n    var _this = this;\n    var fontSchemeStructs = [];\n    source.forEach(function (val) {\n      var schemeStruct = {};\n      schemeStruct[nameProperty[_this.keywordIndex]] = val.name;\n      schemeStruct[typefaceProperty[_this.keywordIndex]] = val.typeface;\n      schemeStruct[panoseProperty[_this.keywordIndex]] = val.panose;\n      fontSchemeStructs.push(schemeStruct);\n    });\n    return fontSchemeStructs;\n  };\n  SfdtExport.prototype.writeTabs = function (tabStops) {\n    if (isNullOrUndefined(tabStops) || tabStops.length < 1) {\n      return undefined;\n    }\n    var tabs = [];\n    for (var i = 0; i < tabStops.length; i++) {\n      var tabStop = tabStops[i];\n      var tab = {};\n      tab[positionProperty[this.keywordIndex]] = tabStop.position;\n      tab[deletePositionProperty[this.keywordIndex]] = tabStop.deletePosition;\n      tab[tabJustificationProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTabJustificationEnumValue(tabStop.tabJustification) : tabStop.tabJustification;\n      tab[tabLeaderProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTabLeaderEnumValue(tabStop.tabLeader) : tabStop.tabLeader;\n      tabs.push(tab);\n    }\n    return tabs;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeListFormat = function (format, isInline) {\n    var listFormat = {};\n    var listIdValue = format.getValue('listId');\n    if (!isNullOrUndefined(listIdValue)) {\n      listFormat[listIdProperty[this.keywordIndex]] = listIdValue;\n      if (isNullOrUndefined(this.lists)) {\n        this.lists = [];\n      }\n      if (this.lists.indexOf(format.listId) < 0) {\n        this.lists.push(format.listId);\n      }\n    }\n    var listLevelNumber = format.getValue('listLevelNumber');\n    if (!isNullOrUndefined(listLevelNumber)) {\n      listFormat[listLevelNumberProperty[this.keywordIndex]] = listLevelNumber;\n    }\n    var nsid = format.getValue('nsid');\n    if (!isNullOrUndefined(nsid)) {\n      listFormat[nsidProperty] = nsid;\n    }\n    return listFormat;\n  };\n  SfdtExport.prototype.writeTable = function (tableWidget, table, index, blocks) {\n    var widget = tableWidget.childWidgets[index];\n    if (widget instanceof TableRowWidget) {\n      if (this.writeRow(widget, table[rowsProperty[this.keywordIndex]])) {\n        return undefined;\n      }\n    }\n    var next = tableWidget;\n    do {\n      tableWidget = next;\n      next = tableWidget.nextSplitWidget;\n    } while (next instanceof BlockWidget);\n    next = tableWidget.nextRenderedWidget;\n    return next instanceof BlockWidget && next.containerWidget.index === tableWidget.containerWidget.index ? next : undefined;\n  };\n  SfdtExport.prototype.writeRow = function (rowWidget, rows) {\n    var next = rowWidget;\n    do {\n      rowWidget = next;\n      next = this.writeRowInternal(next, rows);\n      if (rowWidget === next) {\n        return true;\n      }\n    } while (next instanceof TableRowWidget);\n    return false;\n  };\n  SfdtExport.prototype.writeRowInternal = function (rowWidget, rows) {\n    if (!(rowWidget instanceof TableRowWidget)) {\n      return rowWidget;\n    }\n    if (!rowWidget.isCellsHaveSameWidthUnit()) {\n      rowWidget.updateUniformWidthUnitForCells();\n    }\n    var row = this.createRow(rowWidget);\n    rows.push(row);\n    for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n      var widget = rowWidget.childWidgets[i];\n      if (widget instanceof TableCellWidget) {\n        if (rowWidget.index === widget.rowIndex && (isNullOrUndefined(this.startColumnIndex) || widget.columnIndex >= this.startColumnIndex) && (isNullOrUndefined(this.endColumnIndex) || widget.columnIndex < this.endColumnIndex)) {\n          if (this.writeCell(widget, row[cellsProperty[this.keywordIndex]])) {\n            return rowWidget;\n          }\n        }\n      }\n    }\n    var next = rowWidget;\n    var skip = false;\n    do {\n      rowWidget = next;\n      next = rowWidget.nextRenderedWidget;\n      if (!isNullOrUndefined(rowWidget.ownerTable.bodyWidget) && next && (rowWidget.ownerTable.index !== next.ownerTable.index && rowWidget.ownerTable.bodyWidget.sectionIndex === next.ownerTable.bodyWidget.sectionIndex || rowWidget.ownerTable.bodyWidget.sectionIndex !== next.ownerTable.bodyWidget.sectionIndex)) {\n        next = undefined;\n      }\n      skip = !isNullOrUndefined(rowWidget.nextSplitWidget) && rowWidget.childWidgets.length !== next.childWidgets.length;\n    } while (next instanceof TableRowWidget && next.index === rowWidget.index && !skip);\n    return next;\n  };\n  SfdtExport.prototype.writeCell = function (cellWidget, cells) {\n    var cell = this.createCell(cellWidget);\n    cells.push(cell);\n    var firstBlock = cellWidget.firstChild;\n    do {\n      firstBlock = this.writeBlock(firstBlock, 0, cell[blocksProperty[this.keywordIndex]]);\n    } while (firstBlock);\n    return this.endCell instanceof TableCellWidget ? this.endCell.cellFormat === cellWidget.cellFormat : false;\n  };\n  SfdtExport.prototype.createTable = function (tableWidget) {\n    var table = {};\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = 0;\n    }\n    table[rowsProperty[this.keywordIndex]] = [];\n    table[gridProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < tableWidget.tableHolder.columns.length; i++) {\n      table[gridProperty[this.keywordIndex]][i] = tableWidget.tableHolder.columns[i].preferredWidth;\n    }\n    table[tableFormatProperty[this.keywordIndex]] = this.writeTableFormat(tableWidget.tableFormat, this.keywordIndex);\n    table[descriptionProperty[this.keywordIndex]] = tableWidget.tableFormat.description;\n    table[titleProperty[this.keywordIndex]] = tableWidget.tableFormat.title;\n    table[columnCountProperty[this.keywordIndex]] = tableWidget.tableHolder.columns.length;\n    this.writeTablePositioning(table, tableWidget);\n    return table;\n  };\n  SfdtExport.prototype.writeTablePositioning = function (table, tableWidget) {\n    if (tableWidget.wrapTextAround) {\n      table[wrapTextAroundProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(tableWidget.wrapTextAround, this.keywordIndex);\n      table[positioningProperty[this.keywordIndex]] = {};\n      table[positioningProperty[this.keywordIndex]][allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(tableWidget.positioning.allowOverlap, this.keywordIndex);\n      if (!isNullOrUndefined(tableWidget.positioning.distanceBottom)) {\n        table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceBottom);\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.distanceLeft)) {\n        table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceLeft);\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.distanceRight)) {\n        table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceRight);\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.distanceTop)) {\n        table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceTop);\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.verticalAlignment)) {\n        table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableVerticalPositionEnumValue(tableWidget.positioning.verticalAlignment) : tableWidget.positioning.verticalAlignment;\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.verticalOrigin)) {\n        table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableVerticalRelationEnumValue(tableWidget.positioning.verticalOrigin) : tableWidget.positioning.verticalOrigin;\n      }\n      table[positioningProperty[this.keywordIndex]][verticalPositionProperty[this.keywordIndex]] = tableWidget.positioning.verticalPosition;\n      if (!isNullOrUndefined(tableWidget.positioning.horizontalAlignment)) {\n        table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableHorizontalPositionEnumValue(tableWidget.positioning.horizontalAlignment) : tableWidget.positioning.horizontalAlignment;\n      }\n      if (!isNullOrUndefined(tableWidget.positioning.horizontalOrigin)) {\n        table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableHorizontalRelationEnumValue(tableWidget.positioning.horizontalOrigin) : tableWidget.positioning.horizontalOrigin;\n      }\n      table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] = tableWidget.positioning.horizontalPosition;\n    }\n  };\n  SfdtExport.prototype.createRow = function (rowWidget) {\n    var row = {};\n    row[cellsProperty[this.keywordIndex]] = [];\n    row[rowFormatProperty[this.keywordIndex]] = this.writeRowFormat(rowWidget.rowFormat, this.keywordIndex);\n    if (rowWidget.hasOwnProperty('contentControlProperties')) {\n      row[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(rowWidget.contentControlProperties);\n    }\n    return row;\n  };\n  SfdtExport.prototype.createCell = function (cellWidget) {\n    var cell = {};\n    cell[blocksProperty[this.keywordIndex]] = [];\n    cell[cellFormatProperty[this.keywordIndex]] = this.writeCellFormat(cellWidget.cellFormat, this.keywordIndex);\n    cell[columnIndexProperty[this.keywordIndex]] = cellWidget.columnIndex;\n    if (cellWidget.hasOwnProperty('contentControlProperties')) {\n      cell[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(cellWidget.contentControlProperties);\n    }\n    return cell;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeShading = function (wShading, keyIndex) {\n    var shading = {};\n    shading[backgroundColorProperty[keyIndex]] = wShading.hasValue('backgroundColor') ? wShading.backgroundColor : undefined;\n    shading[foregroundColorProperty[keyIndex]] = wShading.hasValue('foregroundColor') ? wShading.foregroundColor : undefined;\n    shading[textureProperty[keyIndex]] = wShading.hasValue('textureStyle') ? keyIndex == 1 ? this.getTextureStyleEnumValue(wShading.textureStyle) : wShading.textureStyle : undefined;\n    return shading;\n  };\n  SfdtExport.prototype.writeBorders = function (wBorders, keyIndex) {\n    var borders = {};\n    borders[topProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.top, keyIndex);\n    borders[leftProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.left, keyIndex);\n    borders[rightProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.right, keyIndex);\n    borders[bottomProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.bottom, keyIndex);\n    borders[diagonalDownProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.diagonalDown, keyIndex);\n    borders[diagonalUpProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.diagonalUp, keyIndex);\n    borders[horizontalProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.horizontal, keyIndex);\n    borders[verticalProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.vertical, keyIndex);\n    return borders;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeCellFormat = function (wCellFormat, keyIndex) {\n    var cellFormat = {};\n    cellFormat[bordersProperty[keyIndex]] = this.writeBorders(wCellFormat.borders, keyIndex);\n    cellFormat[shadingProperty[keyIndex]] = this.writeShading(wCellFormat.shading, keyIndex);\n    cellFormat[topMarginProperty[keyIndex]] = wCellFormat.hasValue('topMargin') ? wCellFormat.topMargin : undefined;\n    cellFormat[rightMarginProperty[keyIndex]] = wCellFormat.hasValue('rightMargin') ? wCellFormat.rightMargin : undefined;\n    cellFormat[leftMarginProperty[keyIndex]] = wCellFormat.hasValue('leftMargin') ? wCellFormat.leftMargin : undefined;\n    cellFormat[bottomMarginProperty[keyIndex]] = wCellFormat.hasValue('bottomMargin') ? wCellFormat.bottomMargin : undefined;\n    cellFormat[preferredWidthProperty[keyIndex]] = wCellFormat.hasValue('preferredWidth') ? wCellFormat.preferredWidth : undefined;\n    cellFormat[preferredWidthTypeProperty[keyIndex]] = wCellFormat.hasValue('preferredWidthType') ? keyIndex == 1 ? this.getWidthTypeEnumValue(wCellFormat.preferredWidthType) : wCellFormat.preferredWidthType : undefined;\n    cellFormat[cellWidthProperty[keyIndex]] = wCellFormat.hasValue('cellWidth') ? wCellFormat.cellWidth : undefined;\n    cellFormat[columnSpanProperty[keyIndex]] = wCellFormat.columnSpan;\n    cellFormat[rowSpanProperty[keyIndex]] = wCellFormat.rowSpan;\n    cellFormat[verticalAlignmentProperty[keyIndex]] = wCellFormat.hasValue('verticalAlignment') ? keyIndex == 1 ? this.getCellVerticalAlignmentEnumValue(wCellFormat.verticalAlignment) : wCellFormat.verticalAlignment : undefined;\n    return cellFormat;\n  };\n  SfdtExport.prototype.writeRowFormat = function (wRowFormat, keyIndex) {\n    var rowFormat = {};\n    var revisionIds = [];\n    this.assignRowFormat(rowFormat, wRowFormat, keyIndex);\n    for (var j = 0; j < wRowFormat.revisions.length; j++) {\n      rowFormat[revisionIdsProperty[keyIndex]] = this.writeRowRevisions(wRowFormat.revisions[j], revisionIds);\n    }\n    return rowFormat;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.assignRowFormat = function (rowFormat, wRowFormat, keyIndex) {\n    rowFormat[heightProperty[keyIndex]] = wRowFormat.hasValue('height') ? wRowFormat.height : undefined;\n    rowFormat[allowBreakAcrossPagesProperty[keyIndex]] = wRowFormat.hasValue('allowBreakAcrossPages') ? HelperMethods.getBoolInfo(wRowFormat.allowBreakAcrossPages, this.keywordIndex) : undefined;\n    rowFormat[heightTypeProperty[keyIndex]] = wRowFormat.hasValue('heightType') ? this.keywordIndex == 1 ? this.getHeighTypeEnumValue(wRowFormat.heightType) : wRowFormat.heightType : undefined;\n    rowFormat[isHeaderProperty[keyIndex]] = wRowFormat.hasValue('isHeader') ? HelperMethods.getBoolInfo(wRowFormat.isHeader, this.keywordIndex) : undefined;\n    rowFormat[bordersProperty[keyIndex]] = this.writeBorders(wRowFormat.borders, keyIndex);\n    rowFormat[gridBeforeProperty[keyIndex]] = wRowFormat.gridBefore;\n    rowFormat[gridBeforeWidthProperty[keyIndex]] = wRowFormat.hasValue('gridBeforeWidth') ? wRowFormat.gridBeforeWidth : undefined;\n    rowFormat[gridBeforeWidthTypeProperty[keyIndex]] = wRowFormat.hasValue('gridBeforeWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wRowFormat.gridBeforeWidthType) : wRowFormat.gridBeforeWidthType : undefined;\n    rowFormat[gridAfterProperty[keyIndex]] = wRowFormat.gridAfter;\n    rowFormat[gridAfterWidthProperty[keyIndex]] = wRowFormat.hasValue('gridAfterWidth') ? wRowFormat.gridAfterWidth : undefined;\n    rowFormat[gridAfterWidthTypeProperty[keyIndex]] = wRowFormat.hasValue('gridAfterWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wRowFormat.gridAfterWidthType) : wRowFormat.gridAfterWidthType : undefined;\n    rowFormat[leftMarginProperty[keyIndex]] = wRowFormat.hasValue('leftMargin') ? wRowFormat.leftMargin : undefined;\n    rowFormat[topMarginProperty[keyIndex]] = wRowFormat.hasValue('topMargin') ? wRowFormat.topMargin : undefined;\n    rowFormat[rightMarginProperty[keyIndex]] = wRowFormat.hasValue('rightMargin') ? wRowFormat.rightMargin : undefined;\n    rowFormat[bottomMarginProperty[keyIndex]] = wRowFormat.hasValue('bottomMargin') ? wRowFormat.bottomMargin : undefined;\n    rowFormat[leftIndentProperty[keyIndex]] = wRowFormat.hasValue('leftIndent') ? wRowFormat.leftIndent : undefined;\n  };\n  SfdtExport.prototype.writeRowRevisions = function (wrevisions, revisionIds) {\n    if (this.selectedRevisionId.indexOf(wrevisions.revisionID) === -1) {\n      this.selectedRevisionId.push(wrevisions.revisionID);\n    }\n    revisionIds.push(wrevisions.revisionID);\n    return revisionIds;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeTableFormat = function (wTableFormat, keyIndex) {\n    var tableFormat = {};\n    tableFormat[bordersProperty[keyIndex]] = this.writeBorders(wTableFormat.borders, keyIndex);\n    tableFormat[shadingProperty[keyIndex]] = this.writeShading(wTableFormat.shading, keyIndex);\n    tableFormat[cellSpacingProperty[keyIndex]] = wTableFormat.hasValue('cellSpacing') ? wTableFormat.cellSpacing : undefined;\n    tableFormat[leftIndentProperty[keyIndex]] = wTableFormat.hasValue('leftIndent') ? wTableFormat.leftIndent : undefined;\n    tableFormat[tableAlignmentProperty[keyIndex]] = wTableFormat.hasValue('tableAlignment') ? this.keywordIndex == 1 ? this.getTableAlignmentEnumValue(wTableFormat.tableAlignment) : wTableFormat.tableAlignment : undefined;\n    tableFormat[topMarginProperty[keyIndex]] = wTableFormat.hasValue('topMargin') ? wTableFormat.topMargin : undefined;\n    tableFormat[rightMarginProperty[keyIndex]] = wTableFormat.hasValue('rightMargin') ? wTableFormat.rightMargin : undefined;\n    tableFormat[leftMarginProperty[keyIndex]] = wTableFormat.hasValue('leftMargin') ? wTableFormat.leftMargin : undefined;\n    tableFormat[bottomMarginProperty[keyIndex]] = wTableFormat.hasValue('bottomMargin') ? wTableFormat.bottomMargin : undefined;\n    tableFormat[preferredWidthProperty[keyIndex]] = wTableFormat.hasValue('preferredWidth') ? wTableFormat.preferredWidth : undefined;\n    tableFormat[preferredWidthTypeProperty[keyIndex]] = wTableFormat.hasValue('preferredWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wTableFormat.preferredWidthType) : wTableFormat.preferredWidthType : undefined;\n    tableFormat[bidiProperty[keyIndex]] = wTableFormat.hasValue('bidi') ? HelperMethods.getBoolInfo(wTableFormat.bidi, this.keywordIndex) : undefined;\n    tableFormat[allowAutoFitProperty[keyIndex]] = wTableFormat.hasValue('allowAutoFit') ? HelperMethods.getBoolInfo(wTableFormat.allowAutoFit, this.keywordIndex) : undefined;\n    tableFormat[styleNameProperty[keyIndex]] = !isNullOrUndefined(wTableFormat.styleName) ? wTableFormat.styleName : undefined;\n    return tableFormat;\n  };\n  SfdtExport.prototype.footnotes = function (documentHelper) {\n    this.isWriteEndFootNote = true;\n    for (var i = 0; i < documentHelper.footnotes.separator.length; i++) {\n      this.seprators(documentHelper);\n    }\n    this.isWriteEndFootNote = false;\n  };\n  SfdtExport.prototype.seprators = function (documentHelper) {\n    if (documentHelper.footnotes.separator.length > 0) {\n      this.document[footnotesProperty[this.keywordIndex]] = {};\n      this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.footnotes.separator.length; i++) {\n        this.writeBlock(documentHelper.footnotes.separator[i], 0, this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]]);\n      }\n    }\n    if (documentHelper.footnotes.continuationSeparator.length > 0) {\n      this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.footnotes.continuationSeparator.length; i++) {\n        this.writeBlock(documentHelper.footnotes.continuationSeparator[i], 0, this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]]);\n      }\n    }\n    if (documentHelper.footnotes.continuationNotice.length > 0) {\n      this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.footnotes.continuationNotice.length; i++) {\n        this.writeBlock(documentHelper.footnotes.continuationNotice[i], 0, this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]);\n      }\n    }\n  };\n  SfdtExport.prototype.endnotes = function (documentHelper) {\n    this.isWriteEndFootNote = true;\n    for (var i = 0; i < this.documentHelper.endnotes.separator.length; i++) {\n      this.endnoteSeparator(documentHelper);\n    }\n    this.isWriteEndFootNote = false;\n  };\n  SfdtExport.prototype.endnoteSeparator = function (documentHelper) {\n    if (documentHelper.endnotes.separator.length > 0) {\n      this.document[endnotesProperty[this.keywordIndex]] = {};\n      this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.endnotes.separator.length; i++) {\n        this.writeBlock(documentHelper.endnotes.separator[i], 0, this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]]);\n      }\n    }\n    if (documentHelper.endnotes.continuationSeparator.length > 0) {\n      this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.endnotes.continuationSeparator.length; i++) {\n        this.writeBlock(documentHelper.endnotes.continuationSeparator[i], 0, this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]]);\n      }\n    }\n    if (documentHelper.endnotes.continuationNotice.length > 0) {\n      this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < documentHelper.endnotes.continuationNotice.length; i++) {\n        this.writeBlock(documentHelper.endnotes.continuationNotice[i], 0, this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]);\n      }\n    }\n  };\n  SfdtExport.prototype.writeStyles = function (documentHelper) {\n    var styles = [];\n    this.document[stylesProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.styles.length; i++) {\n      this.document[stylesProperty[this.keywordIndex]].push(this.writeStyle(documentHelper.styles.getItem(i)));\n    }\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeStyle = function (style) {\n    var wStyle = {};\n    wStyle[nameProperty[this.keywordIndex]] = style.name;\n    if (style.type === 'Paragraph') {\n      wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n      wStyle[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(style.paragraphFormat, this.keywordIndex);\n      wStyle[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(style.characterFormat, this.keywordIndex);\n    }\n    if (style.type === 'Character') {\n      wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n      wStyle[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(style.characterFormat, this.keywordIndex);\n    }\n    if (style.type === 'Table') {\n      wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n    }\n    if (!isNullOrUndefined(style.basedOn)) {\n      wStyle[basedOnProperty[this.keywordIndex]] = style.basedOn.name;\n    }\n    if (!isNullOrUndefined(style.link)) {\n      wStyle[linkProperty[this.keywordIndex]] = style.link.name;\n    }\n    if (!isNullOrUndefined(style.next)) {\n      wStyle[nextProperty[this.keywordIndex]] = style.next.name;\n    }\n    return wStyle;\n  };\n  SfdtExport.prototype.writeRevisions = function (documentHelper) {\n    this.document[revisionsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.owner.revisions.changes.length; i++) {\n      if (this.isExport || !this.isExport && !this.owner.enableTrackChanges && this.selectedRevisionId.indexOf(documentHelper.owner.revisions.changes[i].revisionID) !== -1) {\n        this.document[revisionsProperty[this.keywordIndex]].push(this.writeRevision(documentHelper.owner.revisions.changes[i]));\n      }\n    }\n  };\n  SfdtExport.prototype.writeRevision = function (revisions) {\n    var revision = {};\n    revision[authorProperty[this.keywordIndex]] = revisions.author;\n    revision[dateProperty[this.keywordIndex]] = revisions.date;\n    revision[revisionTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getRevisionTypeEnumValue(revisions.revisionType) : revisions.revisionType;\n    revision[revisionIdProperty[this.keywordIndex]] = revisions.revisionID;\n    return revision;\n  };\n  SfdtExport.prototype.writeComments = function (documentHelper) {\n    this.document[commentsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.comments.length; i++) {\n      if (this.isExport || !this.isExport && this.selectedCommentsId.indexOf(this.documentHelper.comments[i].commentId) !== -1) {\n        this.document[commentsProperty[this.keywordIndex]].push(this.writeComment(this.documentHelper.comments[i]));\n      }\n    }\n  };\n  SfdtExport.prototype.writeCustomXml = function (documentHelper) {\n    this.document[customXmlProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.customXmlData.length; i++) {\n      var customXml = {};\n      var key = documentHelper.customXmlData.keys[i];\n      customXml[itemIDProperty[this.keywordIndex]] = key;\n      var xmlValue = this.documentHelper.customXmlData.get(key);\n      customXml[xmlProperty[this.keywordIndex]] = xmlValue;\n      this.document[customXmlProperty[this.keywordIndex]].push(customXml);\n    }\n  };\n  SfdtExport.prototype.writeImages = function (documentHelper) {\n    this.document[imagesProperty[this.keywordIndex]] = {};\n    for (var i = 0; i < this.images.length; i++) {\n      var key = this.images[i];\n      var base64ImageString = documentHelper.images.get(key);\n      this.document[imagesProperty[this.keywordIndex]][key] = base64ImageString;\n    }\n  };\n  SfdtExport.prototype.writeComment = function (comments) {\n    var comment = {};\n    comment[commentIdProperty[this.keywordIndex]] = comments.commentId;\n    comment[authorProperty[this.keywordIndex]] = comments.author;\n    comment[dateProperty[this.keywordIndex]] = comments.date;\n    comment[blocksProperty[this.keywordIndex]] = [];\n    comment[blocksProperty[this.keywordIndex]].push(this.commentInlines(comments.text, comments.mentions));\n    comment[doneProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(comments.isResolved, this.keywordIndex);\n    comment[replyCommentsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < comments.replyComments.length; i++) {\n      comment[replyCommentsProperty[this.keywordIndex]].push(this.writeComment(comments.replyComments[i]));\n    }\n    return comment;\n  };\n  SfdtExport.prototype.commentInlines = function (ctext, mentions) {\n    var blocks = {};\n    blocks[inlinesProperty[this.keywordIndex]] = [];\n    var inlines = {};\n    var dataName = \"\";\n    var text = \"\";\n    var url = \"\";\n    if (mentions && mentions.length > 0) {\n      for (var i = 0; i < mentions.length; i++) {\n        dataName = mentions[i].Name;\n        if (ctext.indexOf(dataName) !== -1 && mentions[i].Name) {\n          var temp = ctext.split(\"&nbsp;\");\n          text = temp.length > 1 ? temp[1] : temp[0];\n          dataName = mentions[i].Name;\n          url = mentions[i].EmailId;\n        }\n      }\n      blocks = this.serializeMentions(dataName, url, blocks);\n    }\n    if (ctext.indexOf('span') !== -1) {\n      var email = ctext.match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/);\n      var matchText = ctext.match(/&nbsp;(.+)/);\n      var text_1 = matchText ? matchText[1] : '';\n      ctext = email + \" \" + text_1;\n    }\n    inlines[textProperty[this.keywordIndex]] = mentions.length > 0 ? text : ctext;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n    return blocks;\n  };\n  SfdtExport.prototype.serializeMentions = function (dataName, url, blocks) {\n    var inlines = {};\n    inlines[characterFormatProperty[this.keywordIndex]] = {};\n    inlines[\"fieldType\"] = 0;\n    inlines[\"hasFieldEnd\"] = true;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n    var inlines2 = {};\n    inlines2[characterFormatProperty[this.keywordIndex]] = {};\n    inlines2[textProperty[this.keywordIndex]] = ' HYPERLINK \\\"' + url + '\\\" ';\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines2);\n    var inlines3 = {};\n    inlines3[characterFormatProperty[this.keywordIndex]] = {};\n    inlines3[\"fieldType\"] = 2;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines3);\n    var inlines4 = {};\n    inlines4[characterFormatProperty[this.keywordIndex]] = {\n      \"underline\": \"Single\",\n      \"fontColor\": \"#0563c1\",\n      \"bidi\": false\n    };\n    inlines4[textProperty[this.keywordIndex]] = dataName;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines4);\n    var inlines5 = {};\n    inlines5[characterFormatProperty[this.keywordIndex]] = {};\n    inlines5[\"fieldType\"] = 1;\n    blocks[inlinesProperty[this.keywordIndex]].push(inlines5);\n    return blocks;\n  };\n  SfdtExport.prototype.writeLists = function (documentHelper) {\n    var abstractLists = [];\n    this.document[listsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.lists.length; i++) {\n      var list = documentHelper.lists[i];\n      if (this.lists.indexOf(list.listId) > -1) {\n        this.document[listsProperty[this.keywordIndex]].push(this.writeList(list));\n        if (abstractLists.indexOf(list.abstractListId) < 0) {\n          abstractLists.push(list.abstractListId);\n        }\n      }\n    }\n    this.document[abstractListsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < documentHelper.abstractLists.length; i++) {\n      var abstractList = documentHelper.abstractLists[i];\n      if (abstractLists.indexOf(abstractList.abstractListId) > -1) {\n        this.document[abstractListsProperty[this.keywordIndex]].push(this.writeAbstractList(abstractList));\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeAbstractList = function (wAbstractList) {\n    var abstractList = {};\n    abstractList[abstractListIdProperty[this.keywordIndex]] = wAbstractList.abstractListId;\n    abstractList[nsidProperty] = wAbstractList.nsid;\n    abstractList[levelsProperty[this.keywordIndex]] = [];\n    for (var i = 0; i < wAbstractList.levels.length; i++) {\n      abstractList[levelsProperty[this.keywordIndex]][i] = this.writeListLevel(wAbstractList.levels[i]);\n    }\n    return abstractList;\n  };\n  /**\n   * @private\n   */\n  SfdtExport.prototype.writeList = function (wList) {\n    var list = {};\n    if (!isNullOrUndefined(wList)) {\n      list[abstractListIdProperty[this.keywordIndex]] = wList.abstractListId;\n      list[levelOverridesProperty[this.keywordIndex]] = [];\n      for (var i = 0; i < wList.levelOverrides.length; i++) {\n        list[levelOverridesProperty[this.keywordIndex]].push(this.writeLevelOverrides(wList.levelOverrides[i]));\n      }\n      list[listIdProperty[this.keywordIndex]] = wList.listId;\n      list[nsidProperty] = wList.nsid;\n    }\n    return list;\n  };\n  SfdtExport.prototype.writeLevelOverrides = function (wlevel) {\n    var levelOverrides = {};\n    levelOverrides[levelNumberProperty[this.keywordIndex]] = wlevel.levelNumber;\n    if (wlevel.overrideListLevel) {\n      levelOverrides[overrideListLevelProperty[this.keywordIndex]] = this.writeListLevel(wlevel.overrideListLevel);\n    }\n    levelOverrides[startAtProperty[this.keywordIndex]] = wlevel.startAt;\n    return levelOverrides;\n  };\n  SfdtExport.prototype.writeListLevel = function (wListLevel) {\n    var listLevel = {};\n    listLevel[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(wListLevel.characterFormat, this.keywordIndex);\n    listLevel[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(wListLevel.paragraphFormat, this.keywordIndex);\n    listLevel[isLegalStyleNumberingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(wListLevel.isLegalStyleNumbering, this.keywordIndex);\n    listLevel[followCharacterProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getFollowCharacterType(wListLevel.followCharacter) : wListLevel.followCharacter;\n    listLevel[listLevelPatternProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getListLevelPatternEnumValue(wListLevel.listLevelPattern) : wListLevel.listLevelPattern;\n    listLevel[numberFormatProperty[this.keywordIndex]] = wListLevel.numberFormat;\n    listLevel[paraStyleNameProperty[this.keywordIndex]] = wListLevel.paraStyleName;\n    listLevel[restartLevelProperty[this.keywordIndex]] = wListLevel.restartLevel;\n    listLevel[startAtProperty[this.keywordIndex]] = wListLevel.startAt;\n    return listLevel;\n  };\n  SfdtExport.prototype.getParentBlock = function (widget) {\n    if (widget.isInsideTable) {\n      widget = this.owner.documentHelper.layout.getParentTable(widget);\n    }\n    return widget;\n  };\n  SfdtExport.prototype.getParentCell = function (cell) {\n    while (cell.ownerTable.isInsideTable) {\n      cell = cell.ownerTable.associatedCell;\n    }\n    return cell;\n  };\n  SfdtExport.prototype.getWidthTypeEnumValue = function (widthType) {\n    switch (widthType) {\n      case 'Auto':\n        return 0;\n      case 'Percent':\n        return 1;\n      case 'Point':\n        return 2;\n    }\n  };\n  SfdtExport.prototype.getTableAlignmentEnumValue = function (tableAlignment) {\n    switch (tableAlignment) {\n      case 'Left':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Right':\n        return 2;\n    }\n  };\n  SfdtExport.prototype.getTextureStyleEnumValue = function (textureStyle) {\n    switch (textureStyle) {\n      case 'TextureNone':\n        return 0;\n      case 'Texture2Pt5Percent':\n        return 1;\n      case 'Texture5Percent':\n        return 2;\n      case 'Texture7Pt5Percent':\n        return 3;\n      case 'Texture10Percent':\n        return 4;\n      case 'Texture12Pt5Percent':\n        return 5;\n      case 'Texture15Percent':\n        return 6;\n      case 'Texture17Pt5Percent':\n        return 7;\n      case 'Texture20Percent':\n        return 8;\n      case 'Texture22Pt5Percent':\n        return 9;\n      case 'Texture25Percent':\n        return 10;\n      case 'Texture27Pt5Percent':\n        return 11;\n      case 'Texture30Percent':\n        return 12;\n      case 'Texture32Pt5Percent':\n        return 13;\n      case 'Texture35Percent':\n        return 14;\n      case 'Texture37Pt5Percent':\n        return 15;\n      case 'Texture40Percent':\n        return 16;\n      case 'Texture42Pt5Percent':\n        return 17;\n      case 'Texture45Percent':\n        return 18;\n      case 'Texture47Pt5Percent':\n        return 19;\n      case 'Texture50Percent':\n        return 20;\n      case 'Texture52Pt5Percent':\n        return 21;\n      case 'Texture55Percent':\n        return 22;\n      case 'Texture57Pt5Percent':\n        return 23;\n      case 'Texture60Percent':\n        return 24;\n      case 'Texture62Pt5Percent':\n        return 25;\n      case 'Texture65Percent':\n        return 26;\n      case 'Texture67Pt5Percent':\n        return 27;\n      case 'Texture70Percent':\n        return 28;\n      case 'Texture72Pt5Percent':\n        return 29;\n      case 'Texture75Percent':\n        return 30;\n      case 'Texture77Pt5Percent':\n        return 31;\n      case 'Texture80Percent':\n        return 32;\n      case 'Texture82Pt5Percent':\n        return 33;\n      case 'Texture85Percent':\n        return 34;\n      case 'Texture87Pt5Percent':\n        return 35;\n      case 'Texture90Percent':\n        return 36;\n      case 'Texture92Pt5Percent':\n        return 37;\n      case 'Texture95Percent':\n        return 38;\n      case 'Texture97Pt5Percent':\n        return 39;\n      case 'TextureSolid':\n        return 40;\n      case 'TextureDarkHorizontal':\n        return 41;\n      case 'TextureDarkVertical':\n        return 42;\n      case 'TextureDarkDiagonalDown':\n        return 43;\n      case 'TextureDarkDiagonalUp':\n        return 44;\n      case 'TextureDarkCross':\n        return 45;\n      case 'TextureDarkDiagonalCross':\n        return 46;\n      case 'TextureHorizontal':\n        return 47;\n      case 'TextureVertical':\n        return 48;\n      case 'TextureDiagonalDown':\n        return 49;\n      case 'TextureDiagonalUp':\n        return 50;\n      case 'TextureCross':\n        return 51;\n      case 'TextureDiagonalCross':\n        return 52;\n    }\n  };\n  SfdtExport.prototype.getHeighTypeEnumValue = function (heightType) {\n    switch (heightType) {\n      case 'AtLeast':\n        return 0;\n      case 'Exactly':\n        return 1;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getCellVerticalAlignmentEnumValue = function (cellVerticalAlignment) {\n    switch (cellVerticalAlignment) {\n      case 'Top':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Bottom':\n        return 2;\n    }\n  };\n  SfdtExport.prototype.getListLevelPatternEnumValue = function (listLevelPattern) {\n    switch (listLevelPattern) {\n      case 'None':\n        return 0;\n      case 'KanjiDigit':\n      case 'Arabic':\n        return 1;\n      case 'UpRoman':\n        return 2;\n      case 'LowRoman':\n        return 3;\n      case 'UpLetter':\n        return 4;\n      case 'LowLetter':\n        return 5;\n      case 'Ordinal':\n        return 6;\n      case 'Number':\n        return 7;\n      case 'OrdinalText':\n        return 8;\n      case 'LeadingZero':\n        return 9;\n      case 'Bullet':\n        return 10;\n      case 'FarEast':\n        return 11;\n      case 'Special':\n        return 12;\n    }\n  };\n  SfdtExport.prototype.getStyleTypeEnumValue = function (styleType) {\n    switch (styleType) {\n      case 'Paragraph':\n        return 0;\n      case 'Character':\n        return 1;\n      case 'Table':\n        return 2;\n    }\n  };\n  SfdtExport.prototype.getProtectionTypeEnumValue = function (protectionType) {\n    switch (protectionType) {\n      case 'NoProtection':\n        return 0;\n      case 'ReadOnly':\n        return 1;\n      case 'FormFieldsOnly':\n        return 2;\n      case 'CommentsOnly':\n        return 3;\n      case 'RevisionsOnly':\n        return 4;\n    }\n  };\n  SfdtExport.prototype.getRevisionTypeEnumValue = function (revisionType) {\n    switch (revisionType) {\n      case 'Insertion':\n        return 1;\n      case 'Deletion':\n        return 2;\n      case 'MoveTo':\n        return 3;\n      case 'MoveFrom':\n        return 4;\n    }\n  };\n  SfdtExport.prototype.getFootnoteTypeEnumValue = function (footnoteType) {\n    switch (footnoteType) {\n      case 'Footnote':\n        return 0;\n      case 'Endnote':\n        return 1;\n    }\n  };\n  SfdtExport.prototype.getFootnoteRestartIndexEnumValue = function (footnoteRestartIndex) {\n    switch (footnoteRestartIndex) {\n      case 'DoNotRestart':\n        return 0;\n      case 'RestartForEachSection':\n        return 1;\n      case 'RestartForEachPage':\n        return 2;\n    }\n  };\n  SfdtExport.prototype.getFootEndNoteNumberFormatEnumValue = function (footEndNoteNumberFormat) {\n    switch (footEndNoteNumberFormat) {\n      case 'Arabic':\n        return 0;\n      case 'UpperCaseRoman':\n        return 1;\n      case 'LowerCaseRoman':\n        return 2;\n      case 'UpperCaseLetter':\n        return 3;\n      case 'LowerCaseLetter':\n        return 4;\n    }\n  };\n  SfdtExport.prototype.getTextVerticalAlignmentEnumValue = function (textVerticalAlignment) {\n    switch (textVerticalAlignment) {\n      case 'Top':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Bottom':\n        return 2;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getShapeVerticalAlignmentEnumValue = function (shapeVerticalAlignment) {\n    switch (shapeVerticalAlignment) {\n      case 'None':\n        return 0;\n      case 'Top':\n        return 1;\n      case 'Center':\n        return 2;\n      case 'Bottom':\n        return 3;\n      case 'Inline':\n        return 4;\n      case 'Inside':\n        return 5;\n      case 'Outside':\n        return 6;\n    }\n  };\n  SfdtExport.prototype.getShapeHorizontalAlignmentEnumValue = function (shapeHorizontalAlignment) {\n    switch (shapeHorizontalAlignment) {\n      case 'None':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Inside':\n        return 2;\n      case 'Left':\n        return 3;\n      case 'Outside':\n        return 4;\n      case 'Right':\n        return 5;\n    }\n  };\n  SfdtExport.prototype.getVerticalOriginEnumValue = function (verticalOrigin) {\n    switch (verticalOrigin) {\n      case 'Paragraph':\n        return 0;\n      case 'BottomMargin':\n        return 1;\n      case 'InsideMargin':\n        return 2;\n      case 'Line':\n        return 3;\n      case 'Margin':\n        return 4;\n      case 'OutsideMargin':\n        return 5;\n      case 'Page':\n        return 6;\n      case 'TopMargin':\n        return 7;\n    }\n  };\n  SfdtExport.prototype.getHorizontalOriginEnumValue = function (horizontalOrigin) {\n    switch (horizontalOrigin) {\n      case 'Column':\n        return 0;\n      case 'Character':\n        return 1;\n      case 'InsideMargin':\n        return 2;\n      case 'LeftMargin':\n        return 3;\n      case 'Margin':\n        return 4;\n      case 'OutsideMargin':\n        return 5;\n      case 'Page':\n        return 6;\n      case 'RightMargin':\n        return 7;\n    }\n  };\n  SfdtExport.prototype.getTableVerticalRelationEnumValue = function (tableRelation) {\n    switch (tableRelation) {\n      case 'Paragraph':\n        return 0;\n      case 'Margin':\n        return 1;\n      case 'Page':\n        return 2;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTableHorizontalRelationEnumValue = function (tableRelation) {\n    switch (tableRelation) {\n      case 'Column':\n        return 0;\n      case 'Margin':\n        return 1;\n      case 'Page':\n        return 2;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTableVerticalPositionEnumValue = function (tableVerticalPosition) {\n    switch (tableVerticalPosition) {\n      case 'None':\n        return 0;\n      case 'Top':\n        return 1;\n      case 'Center':\n        return 2;\n      case 'Bottom':\n        return 3;\n      case 'Inside':\n        return 4;\n      case 'Outside':\n        return 5;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTableHorizontalPositionEnumValue = function (tableHorizontalPosition) {\n    switch (tableHorizontalPosition) {\n      case 'Left':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Inside':\n        return 2;\n      case 'Outside':\n        return 3;\n      case 'Right':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getLineDashStyleEnumValue = function (lineDashStyle) {\n    switch (lineDashStyle) {\n      case 'Solid':\n        return 0;\n      case 'Dash':\n        return 1;\n      case 'DashDot':\n        return 2;\n      case 'DashDotDot':\n        return 3;\n      case 'DashDotGEL':\n        return 4;\n      case 'DashGEL':\n        return 5;\n      case 'Dot':\n        return 6;\n      case 'DotGEL':\n        return 7;\n      case 'LongDashDotDotGEL':\n        return 8;\n      case 'LongDashDotGEL':\n        return 9;\n      case 'LongDashGEL':\n        return 10;\n    }\n  };\n  SfdtExport.prototype.getHorizontalPositionAbsEnumValue = function (horizontalPositionAbs) {\n    switch (horizontalPositionAbs) {\n      case 'Left':\n        return 0;\n      case 'Center':\n        return 1;\n      case 'Right':\n        return 2;\n      case 'Inside':\n        return 3;\n      case 'Outside':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTabJustificationEnumValue = function (tabJustification) {\n    switch (tabJustification) {\n      case 'Left':\n        return 0;\n      case 'Bar':\n        return 1;\n      case 'Center':\n        return 2;\n      case 'Decimal':\n        return 3;\n      case 'List':\n        return 4;\n      case 'Right':\n        return 5;\n    }\n  };\n  SfdtExport.prototype.getTabLeaderEnumValue = function (tabLeader) {\n    switch (tabLeader) {\n      case 'None':\n        return 0;\n      case 'Single':\n        return 1;\n      case 'Dot':\n        return 2;\n      case 'Hyphen':\n        return 3;\n      case 'Underscore':\n        return 4;\n    }\n  };\n  SfdtExport.prototype.getTextFormFieldTypeEnumValue = function (textFormFieldType) {\n    switch (textFormFieldType) {\n      case 'Text':\n        return 0;\n      case 'Number':\n        return 1;\n      case 'Date':\n        return 2;\n      case 'Calculation':\n        return 3;\n    }\n  };\n  SfdtExport.prototype.getTextFormFieldFormatEnumValue = function (textFormFieldFormat) {\n    switch (textFormFieldFormat) {\n      case 'None':\n        return 0;\n      case 'FirstCapital':\n        return 1;\n      case 'Lowercase':\n        return 2;\n      case 'Uppercase':\n        return 3;\n      case 'Titlecase':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getCheckBoxSizeTypeEnumValue = function (checkBoxSizeType) {\n    switch (checkBoxSizeType) {\n      case 'Auto':\n        return 0;\n      case 'Exactly':\n        return 1;\n    }\n  };\n  SfdtExport.prototype.getContentControlAppearanceEnumValue = function (contentControlAppearance) {\n    switch (contentControlAppearance) {\n      case 'BoundingBox':\n        return 1;\n      case 'Hidden':\n        return 2;\n      case 'Tags':\n        return 3;\n      default:\n        return 1;\n    }\n  };\n  SfdtExport.prototype.getContentControlTypeEnumValue = function (contentControlType) {\n    switch (contentControlType) {\n      case 'RichText':\n        return 0;\n      case 'BuildingBlockGallery':\n        return 1;\n      case 'CheckBox':\n        return 2;\n      case 'ComboBox':\n        return 3;\n      case 'Date':\n        return 4;\n      case 'DropDownList':\n        return 5;\n      case 'Group':\n        return 6;\n      case 'Picture':\n        return 7;\n      case 'RepeatingSection':\n        return 8;\n      case 'Text':\n        return 9;\n    }\n  };\n  SfdtExport.prototype.getDateCalendarTypeEnumValue = function (dateCalendarType) {\n    switch (dateCalendarType) {\n      case 'Gregorian':\n        return 0;\n      case 'GregorianArabic':\n        return 1;\n      case 'GregorianEnglish':\n        return 2;\n      case 'GregorianMiddleEastFrench':\n        return 3;\n      case 'GregorianTransliteratedEnglish':\n        return 4;\n      case 'GregorianTransliteratedFrench':\n        return 5;\n      case 'Hebrew':\n        return 6;\n      case 'Hijri':\n        return 7;\n      case 'Japan':\n        return 8;\n      case 'Korean':\n        return 9;\n      case 'Saka':\n        return 10;\n      case 'Taiwan':\n        return 11;\n      case 'Thai':\n        return 12;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getDateStorageFormatEnumValue = function (dateStorageFormat) {\n    switch (dateStorageFormat) {\n      case 'DateStorageDate':\n        return 1;\n      case 'DateStorageDateTime':\n        return 2;\n      case 'DateStorageText':\n        return 3;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTextWrappingStyleEnumValue = function (textWrappingStyle) {\n    switch (textWrappingStyle) {\n      case 'Inline':\n        return 0;\n      case 'InFrontOfText':\n        return 1;\n      case 'Square':\n        return 2;\n      case 'TopAndBottom':\n        return 3;\n      case 'Behind':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  SfdtExport.prototype.getTextWrappingTypeEnumValue = function (textWrappingType) {\n    switch (textWrappingType) {\n      case 'Both':\n        return 0;\n      case 'Left':\n        return 1;\n      case 'Right':\n        return 2;\n      case 'Largest':\n        return 3;\n    }\n  };\n  SfdtExport.prototype.getCompatibilityModeEnumValue = function (compatibilityMode) {\n    switch (compatibilityMode) {\n      case 'Word2013':\n        return 0;\n      case 'Word2003':\n        return 1;\n      case 'Word2007':\n        return 2;\n      case 'Word2010':\n        return 3;\n    }\n  };\n  SfdtExport.prototype.getLineFormatTypeEnumValue = function (lineFormatType) {\n    switch (lineFormatType) {\n      case 'Solid':\n        return 0;\n      case 'Patterned':\n        return 1;\n      case 'Gradient':\n        return 2;\n      case 'None':\n        return 3;\n    }\n  };\n  SfdtExport.prototype.getAutoShapeTypeEnumValue = function (autoShapeType) {\n    switch (autoShapeType) {\n      case 'Rectangle':\n        return 1;\n      case 'RoundedRectangle':\n        return 2;\n      case 'StraightConnector':\n        return 3;\n      default:\n        return 1;\n    }\n  };\n  SfdtExport.prototype.getFollowCharacterType = function (followCharacterType) {\n    switch (followCharacterType) {\n      case 'Tab':\n        return 0;\n      case 'Space':\n        return 1;\n      case 'None':\n        return 2;\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  SfdtExport.prototype.destroy = function () {\n    this.lists = undefined;\n    this.images = undefined;\n    this.endLine = undefined;\n    this.startLine = undefined;\n    this.endOffset = undefined;\n    this.documentHelper = undefined;\n  };\n  return SfdtExport;\n}();\nexport { SfdtExport };","map":{"version":3,"names":["WParagraphFormat","WCharacterFormat","LineWidget","ParagraphWidget","BodyWidget","TextElementBox","FieldElementBox","TableWidget","TableRowWidget","TableCellWidget","ImageElementBox","ContentControl","ListTextElementBox","BookmarkElementBox","EditRangeStartElementBox","EditRangeEndElementBox","ChartElementBox","CommentCharacterElementBox","TextFormField","CheckBoxFormField","ShapeElementBox","FootnoteElementBox","BreakElementBox","FootnoteEndnoteMarkerElementBox","BlockWidget","isNullOrUndefined","HelperMethods","ZipArchive","ZipArchiveItem","sectionsProperty","imagesProperty","fontSubstitutionTableProperty","paraStyleNameProperty","characterFormatProperty","paragraphFormatProperty","listsProperty","abstractListsProperty","backgroundProperty","stylesProperty","commentsProperty","revisionsProperty","customXmlProperty","defaultTabWidthProperty","formattingProperty","trackChangesProperty","protectionTypeProperty","enforcementProperty","hashValueProperty","saltValueProperty","doNotUseHTMLParagraphAutoSpacingProperty","formFieldShadingProperty","footnotesProperty","endnotesProperty","compatibilityModeProperty","themeFontLanguagesProperty","themesProperty","nameProperty","basedOnProperty","nextProperty","linkProperty","fontSizeProperty","fontColorProperty","styleNameProperty","bidiProperty","fontSizeBidiProperty","boldBidiProperty","italicBidiProperty","revisionIdsProperty","listIdProperty","listLevelNumberProperty","leftIndentProperty","listFormatProperty","bordersProperty","tabsProperty","headerDistanceProperty","footerDistanceProperty","differentFirstPageProperty","differentOddAndEvenPagesProperty","pageWidthProperty","pageHeightProperty","leftMarginProperty","rightMarginProperty","topMarginProperty","bottomMarginProperty","restartPageNumberingProperty","pageStartingNumberProperty","endnoteNumberFormatProperty","footNoteNumberFormatProperty","restartIndexForFootnotesProperty","restartIndexForEndnotesProperty","initialFootNoteNumberProperty","initialEndNoteNumberProperty","pageNumberStyleProperty","columnsProperty","numberOfColumnsProperty","equalWidthProperty","lineBetweenColumnsProperty","breakCodeProperty","cellWidthProperty","columnSpanProperty","rowSpanProperty","verticalAlignmentProperty","allowBreakAcrossPagesProperty","isHeaderProperty","heightTypeProperty","gridBeforeProperty","gridBeforeWidthProperty","gridBeforeWidthTypeProperty","gridAfterProperty","gridAfterWidthProperty","gridAfterWidthTypeProperty","allowAutoFitProperty","cellSpacingProperty","shadingProperty","tableAlignmentProperty","preferredWidthProperty","preferredWidthTypeProperty","textureProperty","backgroundColorProperty","foregroundColorProperty","verticalProperty","horizontalProperty","diagonalUpProperty","diagonalDownProperty","lineStyleProperty","layoutProperty","dataFormatProperty","yValueProperty","chartDataProperty","categoryXNameProperty","lineProperty","foreColorProperty","layoutXProperty","layoutYProperty","directionProperty","endStyleProperty","numberValueProperty","markerStyleProperty","markerColorProperty","markerSizeProperty","forwardProperty","backwardProperty","interceptProperty","isDisplayRSquaredProperty","isDisplayEquationProperty","seriesNameProperty","dataLabelProperty","errorBarProperty","seriesFormatProperty","trendLinesProperty","dataPointsProperty","firstSliceAngleProperty","holeSizeProperty","isLegendKeyProperty","isBubbleSizeProperty","isCategoryNameProperty","isSeriesNameProperty","isValueProperty","isPercentageProperty","isLeaderLinesProperty","showSeriesKeysProperty","hasHorizontalBorderProperty","hasVerticalBorderProperty","hasBordersProperty","categoryTypeProperty","chartCategoryProperty","chartSeriesProperty","chartAreaProperty","chartTitleAreaProperty","plotAreaProperty","chartLegendProperty","chartPrimaryCategoryAxisProperty","chartPrimaryValueAxisProperty","chartTitleProperty","chartTypeProperty","gapWidthProperty","overlapProperty","chartDataTableProperty","textProperty","shapeIdProperty","alternativeTextProperty","visibleProperty","widthProperty","heightProperty","widthScaleProperty","heightScaleProperty","lineFormatProperty","fillFormatProperty","textWrappingStyleProperty","textWrappingTypeProperty","verticalRelativePercentProperty","horizontalRelativePercentProperty","heightRelativePercentProperty","widthRelativePercentProperty","zOrderPositionProperty","layoutInCellProperty","lockAnchorProperty","autoShapeTypeProperty","textFrameProperty","colorProperty","fillProperty","textVerticalAlignmentProperty","imageStringProperty","metaFileImageStringProperty","isMetaFileProperty","topProperty","bottomProperty","rightProperty","leftProperty","getImageHeightProperty","getImageWidthProperty","hasFieldEndProperty","formFieldDataProperty","fieldTypeProperty","enabledProperty","helpTextProperty","statusTextProperty","textInputProperty","checkBoxProperty","dropDownListProperty","maxLengthProperty","defaultValueProperty","formatProperty","sizeTypeProperty","sizeProperty","checkedProperty","dropDownItemsProperty","selectedIndexProperty","commentIdProperty","commentCharacterTypeProperty","authorProperty","dateProperty","doneProperty","replyCommentsProperty","revisionTypeProperty","revisionIdProperty","itemIDProperty","xmlProperty","footnoteTypeProperty","symbolCodeProperty","symbolFontNameProperty","customMarkerProperty","inlinesProperty","contentControlPropertiesProperty","lockContentControlProperty","lockContentsProperty","tagProperty","titleProperty","hasPlaceHolderTextProperty","multiLineProperty","isTemporaryProperty","dateCalendarTypeProperty","dateStorageFormatProperty","dateDisplayLocaleProperty","dateDisplayFormatProperty","isCheckedProperty","uncheckedStateProperty","checkedStateProperty","contentControlListItemsProperty","xmlMappingProperty","fontProperty","valueProperty","displayTextProperty","isMappedProperty","isWordMlProperty","prefixMappingProperty","xPathProperty","storeItemIdProperty","customXmlPartProperty","idProperty","cellFormatProperty","rowFormatProperty","cellsProperty","rowsProperty","descriptionProperty","wrapTextAroundProperty","positioningProperty","tableFormatProperty","allowOverlapProperty","distanceTopProperty","distanceRightProperty","distanceLeftProperty","distanceBottomProperty","verticalOriginProperty","verticalPositionProperty","horizontalOriginProperty","horizontalAlignmentProperty","horizontalPositionProperty","blocksProperty","headerProperty","footerProperty","evenHeaderProperty","evenFooterProperty","firstPageHeaderProperty","firstPageFooterProperty","headersFootersProperty","sectionFormatProperty","listLevelPatternProperty","followCharacterProperty","startAtProperty","restartLevelProperty","levelNumberProperty","numberFormatProperty","abstractListIdProperty","levelsProperty","overrideListLevelProperty","levelOverridesProperty","separatorProperty","continuationSeparatorProperty","continuationNoticeProperty","bookmarkTypeProperty","propertiesProperty","tabJustificationProperty","positionProperty","deletePositionProperty","tabLeaderProperty","editRangeIdProperty","columnFirstProperty","columnLastProperty","userProperty","groupProperty","editableRangeStartProperty","spaceProperty","fontSchemeProperty","fontSchemeNameProperty","majorFontSchemeProperty","minorFontSchemeProperty","fontSchemeListProperty","fontTypefaceProperty","typefaceProperty","panoseProperty","typeProperty","majorUnitProperty","maximumValueProperty","minimumValueProperty","hasMajorGridLinesProperty","hasMinorGridLinesProperty","majorTickMarkProperty","minorTickMarkProperty","tickLabelPositionProperty","rgbProperty","appearanceProperty","lineFormatTypeProperty","allowSpaceOfSameStyleInTableProperty","weightProperty","inlineFormatProperty","fontNameProperty","isCompressedProperty","columnIndexProperty","columnCountProperty","gridProperty","isAfterParagraphMarkProperty","isAfterCellMarkProperty","isAfterRowMarkProperty","isAfterTableMarkProperty","belowTextProperty","breakClearTypeProperty","nsidProperty","isLegalStyleNumberingProperty","horizontalRuleProperty","isCreatedUsingHtmlSpanTagProperty","isAutoMajorProperty","SfdtExport","documentHelper","startLine","undefined","endLine","endOffset","endCell","startColumnIndex","endColumnIndex","lists","images","document","writeInlineStyles","blockContent","startContent","multipleLineContent","nestedContent","editRangeId","selectedCommentsId","selectedRevisionId","nestedBlockContent","nestedBlockEnabled","blocks","contentInline","isContentControl","isBlockClosed","isWriteInlinesFootNote","isWriteEndFootNote","iscontentInsert","keywordIndex","isExport","isWordExport","isPartialExport","checkboxOrDropdown","copyWithTrackChange","Object","defineProperty","prototype","get","owner","viewer","enumerable","configurable","getModuleName","clear","startBlock","endBlock","serialize","seralizeInternal","documentEditorSettings","optimizeSfdt","index","JSON","stringify","write","saveAsBlobNonOptimized","sfdt","Blob","type","Promise","resolve","reject","saveAsBlob","jsonString","blob","archiveItem","mArchive","addItem","updateEditRangeId","i","editRanges","keys","length","j","editRangeStart","z","editRangeEnd","line","startOffset","_a","Initialize","startPara","paragraph","endPara","getParentBlock","startCell","associatedCell","bodyWidget","section","createSection","push","selectionStartCell","selectionEndCell","getParentCell","isSameCell","equals","startTable","getContainerTable","endTable","tableFormat","ownerTable","childWidgets","indexOf","columnIndex","cellFormat","columnSpan","nextBlock","createParagraph","lastBlock","writeParagraph","indexInOwner","getNextBlock","writeBlock","lastRow","endCell_1","table","createTable","writeTable","ownerRow","pages","page","writePage","backgroundColor","writeStyles","writeLists","writeComments","writeRevisions","writeCustomXml","writeImages","footnotes","endnotes","doc","getSplitWidgets","pop","nextRenderedWidget","writeCharacterFormat","characterFormat","writeParagraphFormat","paragraphFormat","fontSubstitutionTable","writeFontSubsitutionTable","themeFontLanguage","defaultTabWidth","getBoolInfo","enableTrackChanges","isDocumentProtected","hashValue","saltValue","restrictFormatting","getProtectionTypeEnumValue","protectionType","dontUseHtmlParagraphAutoSpacing","formFieldSettings","applyShading","getCompatibilityModeEnumValue","compatibilityMode","allowSpaceOfSameStyleInTable","hasThemes","writeThemes","themes","key","bodyWidgets","writeBodyWidget","writeHeaderFooters","headersFooters","firstBlock","next","nextPage","islastEmptyParagraph","lastChild","isEmpty","isSectionBreak","previousRenderedWidget","sectionIndex","hfs","writeHeaderFooter","widget","headerFooter","firstChild","writeSectionFormat","sectionFormat","pageWidth","pageHeight","leftMargin","rightMargin","topMargin","bottomMargin","headerDistance","footerDistance","differentFirstPage","differentOddAndEvenPages","bidi","breakCode","restartPageNumbering","pageStartingNumber","getFootEndNoteNumberFormatEnumValue","endnoteNumberFormat","footNoteNumberFormat","getFootnoteRestartIndexEnumValue","restartIndexForFootnotes","restartIndexForEndnotes","initialFootNoteNumber","initialEndNoteNumber","pageNumberStyle","columns","numberOfColumns","cols","equalWidth","lineBetweenColumns","newCol","convertPixelToPoint","width","space","hasOwnProperty","contentControlProperties","block","blockContentControl","tableWidget","tableContentControl","writeParagraphs","child","firstElement","children","secondElement","containerWidget","nestedBlocks","contentControlWidgetType","contentControlProperty","contentControlPropertie","contentControlListItems","lockContentControl","lockContents","tag","color","title","appearance","getContentControlAppearanceEnumValue","getContentControlTypeEnumValue","hasPlaceHolderText","multiline","isTemporary","isChecked","uncheckedState","tounCheckedState","checkedState","toCheckedState","dateCalendarType","getDateCalendarTypeEnumValue","dateStorageFormat","getDateStorageFormatEnumValue","dateDisplayLocale","dateDisplayFormat","xmlMapping","customXmlPart","isMapped","isWordMl","prefixMapping","xPath","storeItemId","id","xml","listItems","displayText","value","state","unCheckedState","font","nextWidget","secondChild","tableContentControls","paragraphWidget","lineIndex","start","selection","selectedParas","elementInfo","selectionLength","getElementInfo","end","currentWidget","offset","getParagraphLength","isForward","editor","isCopying","Math","abs","getParagraphsInSelection","writeLines","nextSplitWidget","layoutType","writeInlines","inlines","lineWidget","isformField","element","fieldType","writeInlinesFootNote","writeInlinesContentControl","inline","writeInline","inlineContentControl","nextElement","nestedContentInline","inlineContentControls","nestedContentinline","nestedContentProperty","removedIds","revisions","revisionsInternal","hasFieldEnd","formFieldData","name","enabled","helpText","statusText","getTextFormFieldTypeEnumValue","maxLength","defaultValue","getTextFormFieldFormatEnumValue","format","getCheckBoxSizeTypeEnumValue","sizeType","size","checked","dropdownItems","selectedIndex","fieldCodeType","writeChart","imageString","parseInt","metaFileImageString","isMetaFile","isCompressed","height","isCrop","bottom","right","left","top","cropWidthScale","cropHeightScale","alternateText","visible","widthScale","heightScale","verticalPosition","getVerticalOriginEnumValue","verticalOrigin","getShapeVerticalAlignmentEnumValue","verticalAlignment","horizontalPosition","getHorizontalOriginEnumValue","horizontalOrigin","getShapeHorizontalAlignmentEnumValue","horizontalAlignment","allowOverlap","getTextWrappingStyleEnumValue","textWrappingStyle","getTextWrappingTypeEnumValue","textWrappingType","isBelowText","distanceBottom","distanceLeft","distanceRight","distanceTop","layoutInCell","zOrderPosition","bookmarkType","properties","getBreakClearType","breakClearType","elementText","text","editorModule","isPaste","removeInvalidXmlChars","checkTextFormat","String","fromCharCode","replace","x","revision","revisionID","revisionType","user","group","columnFirst","columnLast","toString","commentType","commentId","writeShape","writeInlineRevisions","shapeId","isZeroHeight","verticalRelativePercent","horizontalRelativePercent","heightRelativePercent","widthRelativePercent","isHorizontalRule","lockAnchor","getAutoShapeTypeEnumValue","autoShapeType","fillFormat","fill","lineFormat","getLineFormatTypeEnumValue","lineFormatType","weight","getLineDashStyleEnumValue","dashStyle","textFrame","getTextVerticalAlignmentEnumValue","textVerticalAlignment","marginLeft","marginRight","marginTop","marginBottom","textFrameBlock","writeChartTitleArea","chartTitleArea","writeChartArea","chartArea","chartPlotArea","writeChartCategory","createChartSeries","writeChartLegend","chartLegend","writeChartCategoryAxis","chartPrimaryCategoryAxis","chartPrimaryValueAxis","chartDataTable","showSeriesKeys","writeChartDataTable","chartGapWidth","chartOverlap","titleArea","chartfontName","chartFontSize","writeChartDataFormat","dataFormat","writeChartLayout","layout","chartDataFormat","substring","rgb","chartLayout","chartLayoutLeft","chartLayoutTop","area","chartForeColor","legend","chartLegendPostion","categoryAxis","primaryCategoryAxis","categoryAxisTitle","categoryAxisType","axisFontSize","axisFontName","categoryNumberFormat","max","min","isAutoInternal","interval","majorGridLines","minorGridLines","majorTick","minorTick","tickPosition","dataTable","hasHorzBorder","hasVertBorder","hasBorders","chartCategory","data","xData","categories","createChartCategory","chartType","writeChartData","categoryXName","chartData","yData","yCategory","createChartData","yValue","chartSeries","series","writeChartSeries","isPieType","errorBar","errorBarData","seriesName","firstSliceAngle","doughnutHoleSize","dataLabels","labelPosition","dataLabel","writeChartDataLabels","seriesFormat","markerStyle","numberValue","markerColor","direction","endStyle","trendLines","trendLine","writeChartTrendLines","position","fontName","convertArgbToRgb","fontColor","fontSize","isLegendKey","isBubbleSize","isCategoryName","isSeriesName","isValue","isPercentage","isLeaderLines","trendLineName","trendLineType","forwardValue","backwardValue","interceptValue","isDisplayEquation","isDisplayRSquared","startIndex","endParagraph","endIndex","getEndOffset","writeLine","isContentStarted","contentControl","isEnd","started","ended","indexInInline","getFootnoteTypeEnumValue","footnoteType","symbolCode","symbolFontName","customMarker","contentType","contentinline","isParaSelected","isListPara","endPos","lastLine","listFormat","list","isParagraphLastLine","getLineLength","isInline","boldBidi","getValue","italicBidi","fontSizeBidi","writeListFormat","writeTabs","tabs","source","fontScheme","fontSchemeName","writeMajorMinorFontScheme","majorFontScheme","minorFontScheme","majorMinorFontScheme","writeFontSchemeList","fontSchemeList","fontTypeface","_i","keys_1","_this","fontSchemeStructs","forEach","val","schemeStruct","typeface","panose","tabStops","tabStop","tab","deletePosition","getTabJustificationEnumValue","tabJustification","getTabLeaderEnumValue","tabLeader","listIdValue","listId","listLevelNumber","nsid","writeRow","rowWidget","rows","writeRowInternal","isCellsHaveSameWidthUnit","updateUniformWidthUnitForCells","row","createRow","rowIndex","writeCell","skip","cellWidget","cells","cell","createCell","tableHolder","preferredWidth","writeTableFormat","description","writeTablePositioning","wrapTextAround","positioning","getTableVerticalPositionEnumValue","getTableVerticalRelationEnumValue","getTableHorizontalPositionEnumValue","getTableHorizontalRelationEnumValue","writeRowFormat","rowFormat","writeCellFormat","writeShading","wShading","keyIndex","shading","hasValue","foregroundColor","getTextureStyleEnumValue","textureStyle","writeBorders","wBorders","borders","writeBorder","diagonalDown","diagonalUp","horizontal","vertical","wCellFormat","getWidthTypeEnumValue","preferredWidthType","cellWidth","rowSpan","getCellVerticalAlignmentEnumValue","wRowFormat","revisionIds","assignRowFormat","writeRowRevisions","allowBreakAcrossPages","getHeighTypeEnumValue","heightType","isHeader","gridBefore","gridBeforeWidth","gridBeforeWidthType","gridAfter","gridAfterWidth","gridAfterWidthType","leftIndent","wrevisions","wTableFormat","cellSpacing","getTableAlignmentEnumValue","tableAlignment","allowAutoFit","styleName","separator","seprators","continuationSeparator","continuationNotice","endnoteSeparator","styles","writeStyle","getItem","style","wStyle","getStyleTypeEnumValue","basedOn","link","changes","writeRevision","author","date","getRevisionTypeEnumValue","comments","writeComment","customXmlData","customXml","xmlValue","base64ImageString","comment","commentInlines","mentions","isResolved","replyComments","ctext","dataName","url","Name","temp","split","EmailId","serializeMentions","email","match","matchText","text_1","inlines2","inlines3","inlines4","inlines5","abstractLists","writeList","abstractListId","abstractList","writeAbstractList","wAbstractList","levels","writeListLevel","wList","levelOverrides","writeLevelOverrides","wlevel","levelNumber","overrideListLevel","startAt","wListLevel","listLevel","isLegalStyleNumbering","getFollowCharacterType","followCharacter","getListLevelPatternEnumValue","listLevelPattern","numberFormat","paraStyleName","restartLevel","isInsideTable","getParentTable","widthType","cellVerticalAlignment","styleType","footnoteRestartIndex","footEndNoteNumberFormat","shapeVerticalAlignment","shapeHorizontalAlignment","tableRelation","tableVerticalPosition","tableHorizontalPosition","lineDashStyle","getHorizontalPositionAbsEnumValue","horizontalPositionAbs","textFormFieldType","textFormFieldFormat","checkBoxSizeType","contentControlAppearance","contentControlType","followCharacterType","destroy"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/writer/sfdt-export.js"],"sourcesContent":["import { WParagraphFormat } from '../format/paragraph-format';\nimport { WCharacterFormat } from '../format/index';\nimport { LineWidget, ParagraphWidget, BodyWidget, TextElementBox, FieldElementBox, TableWidget, TableRowWidget, TableCellWidget, ImageElementBox, ContentControl, ListTextElementBox, BookmarkElementBox, EditRangeStartElementBox, EditRangeEndElementBox, ChartElementBox, CommentCharacterElementBox, TextFormField, CheckBoxFormField, ShapeElementBox, FootnoteElementBox, BreakElementBox, FootnoteEndnoteMarkerElementBox } from '../viewer/page';\nimport { BlockWidget } from '../viewer/page';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { sectionsProperty, imagesProperty, fontSubstitutionTableProperty, paraStyleNameProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, backgroundProperty, stylesProperty, commentsProperty, revisionsProperty, customXmlProperty, defaultTabWidthProperty, formattingProperty, trackChangesProperty, protectionTypeProperty, enforcementProperty, hashValueProperty, saltValueProperty, doNotUseHTMLParagraphAutoSpacingProperty, formFieldShadingProperty, footnotesProperty, endnotesProperty, compatibilityModeProperty, themeFontLanguagesProperty, themesProperty, nameProperty, basedOnProperty, nextProperty, linkProperty, fontSizeProperty, fontColorProperty, styleNameProperty, bidiProperty, fontSizeBidiProperty, boldBidiProperty, italicBidiProperty, revisionIdsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, listFormatProperty, bordersProperty, tabsProperty, headerDistanceProperty, footerDistanceProperty, differentFirstPageProperty, differentOddAndEvenPagesProperty, pageWidthProperty, pageHeightProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, restartPageNumberingProperty, pageStartingNumberProperty, endnoteNumberFormatProperty, footNoteNumberFormatProperty, restartIndexForFootnotesProperty, restartIndexForEndnotesProperty, initialFootNoteNumberProperty, initialEndNoteNumberProperty, pageNumberStyleProperty, columnsProperty, numberOfColumnsProperty, equalWidthProperty, lineBetweenColumnsProperty, breakCodeProperty, cellWidthProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, allowBreakAcrossPagesProperty, isHeaderProperty, heightTypeProperty, gridBeforeProperty, gridBeforeWidthProperty, gridBeforeWidthTypeProperty, gridAfterProperty, gridAfterWidthProperty, gridAfterWidthTypeProperty, allowAutoFitProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, textureProperty, backgroundColorProperty, foregroundColorProperty, verticalProperty, horizontalProperty, diagonalUpProperty, diagonalDownProperty, lineStyleProperty, layoutProperty, dataFormatProperty, yValueProperty, chartDataProperty, categoryXNameProperty, lineProperty, foreColorProperty, layoutXProperty, layoutYProperty, directionProperty, endStyleProperty, numberValueProperty, markerStyleProperty, markerColorProperty, markerSizeProperty, forwardProperty, backwardProperty, interceptProperty, isDisplayRSquaredProperty, isDisplayEquationProperty, seriesNameProperty, dataLabelProperty, errorBarProperty, seriesFormatProperty, trendLinesProperty, dataPointsProperty, firstSliceAngleProperty, holeSizeProperty, isLegendKeyProperty, isBubbleSizeProperty, isCategoryNameProperty, isSeriesNameProperty, isValueProperty, isPercentageProperty, isLeaderLinesProperty, showSeriesKeysProperty, hasHorizontalBorderProperty, hasVerticalBorderProperty, hasBordersProperty, categoryTypeProperty, chartCategoryProperty, chartSeriesProperty, chartAreaProperty, chartTitleAreaProperty, plotAreaProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartPrimaryValueAxisProperty, chartTitleProperty, chartTypeProperty, gapWidthProperty, overlapProperty, chartDataTableProperty, textProperty, shapeIdProperty, alternativeTextProperty, visibleProperty, widthProperty, heightProperty, widthScaleProperty, heightScaleProperty, lineFormatProperty, fillFormatProperty, textWrappingStyleProperty, textWrappingTypeProperty, verticalRelativePercentProperty, horizontalRelativePercentProperty, heightRelativePercentProperty, widthRelativePercentProperty, zOrderPositionProperty, layoutInCellProperty, lockAnchorProperty, autoShapeTypeProperty, textFrameProperty, colorProperty, fillProperty, textVerticalAlignmentProperty, imageStringProperty, metaFileImageStringProperty, isMetaFileProperty, topProperty, bottomProperty, rightProperty, leftProperty, getImageHeightProperty, getImageWidthProperty, hasFieldEndProperty, formFieldDataProperty, fieldTypeProperty, enabledProperty, helpTextProperty, statusTextProperty, textInputProperty, checkBoxProperty, dropDownListProperty, maxLengthProperty, defaultValueProperty, formatProperty, sizeTypeProperty, sizeProperty, checkedProperty, dropDownItemsProperty, selectedIndexProperty, commentIdProperty, commentCharacterTypeProperty, authorProperty, dateProperty, doneProperty, replyCommentsProperty, revisionTypeProperty, revisionIdProperty, itemIDProperty, xmlProperty, footnoteTypeProperty, symbolCodeProperty, symbolFontNameProperty, customMarkerProperty, inlinesProperty, contentControlPropertiesProperty, lockContentControlProperty, lockContentsProperty, tagProperty, titleProperty, hasPlaceHolderTextProperty, multiLineProperty, isTemporaryProperty, dateCalendarTypeProperty, dateStorageFormatProperty, dateDisplayLocaleProperty, dateDisplayFormatProperty, isCheckedProperty, uncheckedStateProperty, checkedStateProperty, contentControlListItemsProperty, xmlMappingProperty, fontProperty, valueProperty, displayTextProperty, isMappedProperty, isWordMlProperty, prefixMappingProperty, xPathProperty, storeItemIdProperty, customXmlPartProperty, idProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, descriptionProperty, wrapTextAroundProperty, positioningProperty, tableFormatProperty, allowOverlapProperty, distanceTopProperty, distanceRightProperty, distanceLeftProperty, distanceBottomProperty, verticalOriginProperty, verticalPositionProperty, horizontalOriginProperty, horizontalAlignmentProperty, horizontalPositionProperty, blocksProperty, headerProperty, footerProperty, evenHeaderProperty, evenFooterProperty, firstPageHeaderProperty, firstPageFooterProperty, headersFootersProperty, sectionFormatProperty, listLevelPatternProperty, followCharacterProperty, startAtProperty, restartLevelProperty, levelNumberProperty, numberFormatProperty, abstractListIdProperty, levelsProperty, overrideListLevelProperty, levelOverridesProperty, separatorProperty, continuationSeparatorProperty, continuationNoticeProperty, bookmarkTypeProperty, propertiesProperty, tabJustificationProperty, positionProperty, deletePositionProperty, tabLeaderProperty, editRangeIdProperty, columnFirstProperty, columnLastProperty, userProperty, groupProperty, editableRangeStartProperty, spaceProperty, fontSchemeProperty, fontSchemeNameProperty, majorFontSchemeProperty, minorFontSchemeProperty, fontSchemeListProperty, fontTypefaceProperty, typefaceProperty, panoseProperty, typeProperty, majorUnitProperty, maximumValueProperty, minimumValueProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, majorTickMarkProperty, minorTickMarkProperty, tickLabelPositionProperty, rgbProperty, appearanceProperty, lineFormatTypeProperty, allowSpaceOfSameStyleInTableProperty, weightProperty, inlineFormatProperty, fontNameProperty, isCompressedProperty, columnIndexProperty, columnCountProperty, gridProperty, isAfterParagraphMarkProperty, isAfterCellMarkProperty, isAfterRowMarkProperty, isAfterTableMarkProperty, belowTextProperty, breakClearTypeProperty, nsidProperty, isLegalStyleNumberingProperty, horizontalRuleProperty, isCreatedUsingHtmlSpanTagProperty, isAutoMajorProperty } from '../../index';\n/**\n * Exports the document to Sfdt format.\n */\nvar SfdtExport = /** @class */ (function () {\n    function SfdtExport(documentHelper) {\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        this.startLine = undefined;\n        this.endLine = undefined;\n        this.endOffset = undefined;\n        this.endCell = undefined;\n        this.startColumnIndex = undefined;\n        this.endColumnIndex = undefined;\n        this.lists = undefined;\n        this.images = undefined;\n        this.document = undefined;\n        this.writeInlineStyles = undefined;\n        this.blockContent = false;\n        this.startContent = false;\n        this.multipleLineContent = false;\n        this.nestedContent = false;\n        this.editRangeId = -1;\n        this.selectedCommentsId = [];\n        this.selectedRevisionId = [];\n        this.nestedBlockContent = false;\n        this.nestedBlockEnabled = false;\n        this.blocks = [];\n        this.contentInline = [];\n        this.isContentControl = false;\n        this.isBlockClosed = true;\n        this.isWriteInlinesFootNote = false;\n        this.isWriteEndFootNote = false;\n        /**\n         * @private\n         */\n        this.iscontentInsert = true;\n        /**\n         * @private\n         */\n        this.keywordIndex = undefined;\n        /**\n         * @private\n         */\n        this.isExport = true;\n        /**\n         * @private\n         */\n        this.isWordExport = false;\n        /**\n         * @private\n         */\n        this.isPartialExport = false;\n        this.checkboxOrDropdown = false;\n        /**\n         * @private\n         */\n        this.copyWithTrackChange = false;\n        this.documentHelper = documentHelper;\n    }\n    Object.defineProperty(SfdtExport.prototype, \"viewer\", {\n        get: function () {\n            return this.documentHelper.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SfdtExport.prototype, \"owner\", {\n        get: function () {\n            return this.documentHelper.owner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SfdtExport.prototype.getModuleName = function () {\n        return 'SfdtExport';\n    };\n    SfdtExport.prototype.clear = function () {\n        this.writeInlineStyles = undefined;\n        this.startLine = undefined;\n        this.endLine = undefined;\n        this.lists = undefined;\n        this.images = undefined;\n        this.document = undefined;\n        this.endCell = undefined;\n        this.startColumnIndex = undefined;\n        this.endColumnIndex = undefined;\n        this.selectedCommentsId = [];\n        this.selectedRevisionId = [];\n        this.startBlock = undefined;\n        this.endBlock = undefined;\n        this.isPartialExport = false;\n        this.keywordIndex = undefined;\n    };\n    /**\n     * Serialize the data as Syncfusion document text.\n     *\n     * @private\n     */\n    SfdtExport.prototype.serialize = function () {\n        return this.seralizeInternal(this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0);\n    };\n    /**\n     * Serialize the data as Syncfusion document text.\n     *\n     * @private\n     */\n    SfdtExport.prototype.seralizeInternal = function (index) {\n        return JSON.stringify(this.write(index));\n    };\n    /**\n     * @private\n     * @param documentHelper - Specifies document helper instance.\n     * @returns {Promise<Blob>}\n     */\n    SfdtExport.prototype.saveAsBlobNonOptimized = function (documentHelper) {\n        var sfdt = new Blob([this.serialize()], { type: 'text/plain' });\n        return new Promise(function (resolve, reject) {\n            resolve(sfdt);\n        });\n    };\n    /**\n     * @private\n     * @param documentHelper - Specifies document helper instance.\n     * @returns {Promise<Blob>}\n     */\n    SfdtExport.prototype.saveAsBlob = function (documentHelper) {\n        var jsonString = this.serialize();\n        var blob = new Blob([jsonString], {\n            type: 'application/json'\n        });\n        var archiveItem = new ZipArchiveItem(blob, \"sfdt\");\n        var mArchive = new ZipArchive();\n        mArchive.addItem(archiveItem);\n        return mArchive.saveAsBlob();\n    };\n    SfdtExport.prototype.updateEditRangeId = function () {\n        var index = -1;\n        for (var i = 0; i < this.documentHelper.editRanges.keys.length; i++) {\n            var keys = this.documentHelper.editRanges.keys;\n            for (var j = 0; j < keys[i].length; j++) {\n                var editRangeStart = this.documentHelper.editRanges.get(keys[i]);\n                for (var z = 0; z < editRangeStart.length; z++) {\n                    index++;\n                    editRangeStart[z].editRangeId = index;\n                    editRangeStart[z].editRangeEnd.editRangeId = index;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    /* eslint-disable  */\n    SfdtExport.prototype.write = function (index, line, startOffset, endLine, endOffset, writeInlineStyles, isExport) {\n        var _a;\n        if (writeInlineStyles) {\n            this.writeInlineStyles = true;\n        }\n        if (!isNullOrUndefined(index)) {\n            this.keywordIndex = index;\n        }\n        else {\n            this.keywordIndex = this.owner.documentEditorSettings.optimizeSfdt ? 1 : 0;\n        }\n        this.Initialize();\n        this.updateEditRangeId();\n        if (line instanceof LineWidget && endLine instanceof LineWidget) {\n            this.isExport = false;\n            if (!isNullOrUndefined(isExport)) {\n                this.isExport = isExport;\n            }\n            // For selection\n            var startPara = line.paragraph;\n            var endPara = endLine.paragraph;\n            if (this.isPartialExport) {\n                this.startBlock = this.getParentBlock(startPara);\n                this.endBlock = this.getParentBlock(endPara);\n            }\n            var startCell = startPara.associatedCell;\n            var endCell = endPara.associatedCell;\n            // Creates section\n            var bodyWidget = startPara.bodyWidget;\n            var section = this.createSection(line.paragraph.bodyWidget);\n            this.document[sectionsProperty[this.keywordIndex]].push(section);\n            var selectionStartCell = startCell;\n            var selectionEndCell = endCell;\n            if (startCell instanceof TableCellWidget) {\n                selectionStartCell = this.getParentCell(selectionStartCell);\n            }\n            if (endCell instanceof TableCellWidget) {\n                selectionEndCell = this.getParentCell(selectionEndCell);\n            }\n            var isSameCell = selectionStartCell instanceof TableCellWidget && selectionEndCell instanceof TableCellWidget\n                && selectionStartCell.equals(selectionEndCell);\n            if (isSameCell || isNullOrUndefined(endCell)) {\n                this.startLine = line;\n                this.endLine = endLine;\n                this.endOffset = endOffset;\n            }\n            else {\n                // Todo: Handle nested table cases\n                if (startCell instanceof TableCellWidget) {\n                    var startTable = startCell.getContainerTable();\n                    var endTable = endCell.getContainerTable();\n                    if (startTable.tableFormat === endTable.tableFormat) {\n                        this.endCell = endCell;\n                        if (this.endCell.ownerTable !== startCell.ownerTable && startCell.ownerTable.associatedCell\n                            && startCell.ownerTable.associatedCell.ownerTable === this.endCell.ownerTable &&\n                            (startCell.ownerTable.associatedCell.childWidgets.indexOf(startCell.ownerTable) === 0)) {\n                            startCell = startCell.ownerTable.associatedCell;\n                        }\n                        this.endColumnIndex = this.endCell.columnIndex + this.endCell.cellFormat.columnSpan;\n                        this.startColumnIndex = startCell.columnIndex;\n                    }\n                }\n                else {\n                    this.endCell = endCell;\n                }\n            }\n            var nextBlock = void 0;\n            if ((isSameCell && !this.isPartialExport) || isNullOrUndefined(startCell)) {\n                var paragraph = this.createParagraph(line.paragraph);\n                section[blocksProperty[this.keywordIndex]].push(paragraph);\n                var lastBlock = line.paragraph;\n                nextBlock = this.writeParagraph(line.paragraph, paragraph, section[blocksProperty[this.keywordIndex]], line.indexInOwner, startOffset);\n                if (this.isPartialExport) {\n                    nextBlock = this.getNextBlock(nextBlock, lastBlock);\n                    section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n                }\n                while (nextBlock) {\n                    lastBlock = nextBlock;\n                    nextBlock = this.writeBlock(nextBlock, 0, section[blocksProperty[this.keywordIndex]]);\n                    if (this.isPartialExport && isNullOrUndefined(nextBlock)) {\n                        nextBlock = this.getNextBlock(nextBlock, lastBlock);\n                        section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n                    }\n                }\n                // Todo:continue in next section\n            }\n            else {\n                // Specially handled for nested table cases\n                // selection start inside table and end in paragraph outside table\n                if (isNullOrUndefined(endCell) && startCell.ownerTable.associatedCell) {\n                    var startTable = startCell.getContainerTable();\n                    var lastRow = startTable.childWidgets[startTable.childWidgets.length - 1];\n                    var endCell_1 = lastRow.childWidgets[lastRow.childWidgets.length - 1];\n                    if (endCell_1.ownerTable !== startCell.ownerTable && startCell.ownerTable.associatedCell\n                        && (startCell.ownerTable.associatedCell.childWidgets.indexOf(startCell.ownerTable) === 0)) {\n                        while (startCell.ownerTable !== endCell_1.ownerTable) {\n                            startCell = startCell.ownerTable.associatedCell;\n                        }\n                    }\n                    this.endColumnIndex = endCell_1.columnIndex + endCell_1.cellFormat.columnSpan;\n                    this.startColumnIndex = startCell.columnIndex;\n                }\n                var table = this.createTable(startCell.ownerTable);\n                section[blocksProperty[this.keywordIndex]].push(table);\n                var lastBlock = startCell.ownerTable;\n                nextBlock = this.writeTable(startCell.ownerTable, table, startCell.ownerRow.indexInOwner, section[blocksProperty[this.keywordIndex]]);\n                if (this.isPartialExport) {\n                    nextBlock = this.getNextBlock(nextBlock, lastBlock);\n                    section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n                }\n                while (nextBlock) {\n                    lastBlock = nextBlock;\n                    nextBlock = this.writeBlock(nextBlock, 0, section[blocksProperty[this.keywordIndex]]);\n                    if (this.isPartialExport) {\n                        nextBlock = this.getNextBlock(nextBlock, lastBlock);\n                        section = this.document[sectionsProperty[this.keywordIndex]][this.document[sectionsProperty[this.keywordIndex]].length - 1];\n                    }\n                }\n            }\n        }\n        else {\n            this.isExport = true;\n            if (this.documentHelper.pages.length > 0) {\n                var page = this.documentHelper.pages[0];\n                this.writePage(page);\n            }\n        }\n        this.document[backgroundProperty[this.keywordIndex]] = (_a = {}, _a[colorProperty[this.keywordIndex]] = this.documentHelper.backgroundColor, _a);\n        this.writeStyles(this.documentHelper);\n        this.writeLists(this.documentHelper);\n        this.writeComments(this.documentHelper);\n        this.writeRevisions(this.documentHelper);\n        this.writeCustomXml(this.documentHelper);\n        this.writeImages(this.documentHelper);\n        this.footnotes(this.documentHelper);\n        this.endnotes(this.documentHelper);\n        var doc = this.document;\n        this.clear();\n        return doc;\n    };\n    SfdtExport.prototype.getNextBlock = function (nextBlock, lastBlock) {\n        if (isNullOrUndefined(nextBlock) && this.isPartialExport && this.endBlock\n            && !this.endBlock.equals(lastBlock)) {\n            nextBlock = lastBlock.getSplitWidgets().pop().nextRenderedWidget;\n            if (nextBlock && lastBlock.bodyWidget.index !== nextBlock.bodyWidget.index) {\n                var section = this.createSection(nextBlock.bodyWidget);\n                this.document[sectionsProperty[this.keywordIndex]].push(section);\n            }\n            else {\n                nextBlock = undefined;\n            }\n        }\n        return nextBlock;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.Initialize = function () {\n        this.lists = [];\n        this.images = [];\n        this.document = {};\n        this.document.optimizeSfdt = this.owner.documentEditorSettings.optimizeSfdt;\n        this.document[sectionsProperty[this.keywordIndex]] = [];\n        this.document[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(this.documentHelper.characterFormat, this.keywordIndex);\n        this.document[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(this.documentHelper.paragraphFormat, this.keywordIndex);\n        if (!isNullOrUndefined(this.documentHelper.fontSubstitutionTable)) {\n            this.document[fontSubstitutionTableProperty[this.keywordIndex]] = this.writeFontSubsitutionTable(this.documentHelper);\n        }\n        this.document[themeFontLanguagesProperty[this.keywordIndex]] = this.writeCharacterFormat(this.documentHelper.themeFontLanguage, this.keywordIndex);\n        this.document[defaultTabWidthProperty[this.keywordIndex]] = this.documentHelper.defaultTabWidth;\n        this.document[trackChangesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.owner.enableTrackChanges, this.keywordIndex);\n        this.document[enforcementProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.isDocumentProtected, this.keywordIndex);\n        this.document[hashValueProperty[this.keywordIndex]] = this.documentHelper.hashValue;\n        this.document[saltValueProperty[this.keywordIndex]] = this.documentHelper.saltValue;\n        this.document[formattingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.restrictFormatting, this.keywordIndex);\n        this.document[protectionTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getProtectionTypeEnumValue(this.documentHelper.protectionType) : this.documentHelper.protectionType;\n        this.document[doNotUseHTMLParagraphAutoSpacingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.dontUseHtmlParagraphAutoSpacing, this.keywordIndex);\n        this.document[formFieldShadingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.owner.documentEditorSettings.formFieldSettings.applyShading, this.keywordIndex);\n        this.document[compatibilityModeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getCompatibilityModeEnumValue(this.documentHelper.compatibilityMode) : this.documentHelper.compatibilityMode;\n        this.document[allowSpaceOfSameStyleInTableProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(this.documentHelper.allowSpaceOfSameStyleInTable, this.keywordIndex);\n        if (this.documentHelper.hasThemes) {\n            this.document[themesProperty[this.keywordIndex]] = this.writeThemes(this.documentHelper.themes);\n        }\n    };\n    SfdtExport.prototype.writeFontSubsitutionTable = function (documentHelper) {\n        var fontSubstitutionTable = {};\n        for (var i = 0; i < documentHelper.fontSubstitutionTable.length; i++) {\n            var key = documentHelper.fontSubstitutionTable.keys[i];\n            fontSubstitutionTable[key] = this.documentHelper.fontSubstitutionTable.get(key);\n        }\n        return fontSubstitutionTable;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writePage = function (page) {\n        if (page.bodyWidgets.length > 0) {\n            var nextBlock = page.bodyWidgets[0];\n            do {\n                nextBlock = this.writeBodyWidget(nextBlock, 0);\n            } while (!isNullOrUndefined(nextBlock));\n        }\n        return this.document;\n    };\n    SfdtExport.prototype.writeBodyWidget = function (bodyWidget, index) {\n        if (!(bodyWidget instanceof BodyWidget)) {\n            return undefined;\n        }\n        var section = this.createSection(bodyWidget);\n        this.document[sectionsProperty[this.keywordIndex]].push(section);\n        this.writeHeaderFooters(this.documentHelper.headersFooters[bodyWidget.index], section);\n        var firstBlock = bodyWidget.childWidgets[index];\n        if (isNullOrUndefined(firstBlock) && bodyWidget.nextRenderedWidget) {\n            firstBlock = bodyWidget.nextRenderedWidget.childWidgets[index];\n        }\n        do {\n            firstBlock = this.writeBlock(firstBlock, 0, section[blocksProperty[this.keywordIndex]]);\n        } while (firstBlock);\n        var next = bodyWidget;\n        do {\n            bodyWidget = next;\n            next = next.nextRenderedWidget;\n            if (isNullOrUndefined(next) && !isNullOrUndefined(bodyWidget.page.nextPage) && !isNullOrUndefined(bodyWidget.page.nextPage)) {\n                next = bodyWidget.page.nextPage.bodyWidgets[0];\n            }\n        } while (next instanceof BodyWidget && next.index === bodyWidget.index);\n        // While importing, If the last paragraph is empty and the section break is present, then the empty paragraph is removed. So, added the empty paragraph at the end of the section while exporting.\n        var islastEmptyParagraph;\n        if (!isNullOrUndefined(bodyWidget.lastChild) && bodyWidget.lastChild instanceof ParagraphWidget) {\n            islastEmptyParagraph = bodyWidget.lastChild.isEmpty();\n            if (bodyWidget.lastChild.isSectionBreak && !isNullOrUndefined(bodyWidget.lastChild.previousRenderedWidget) && bodyWidget.lastChild.previousRenderedWidget instanceof TableWidget) {\n                islastEmptyParagraph = false;\n            }\n        }\n        if (!isNullOrUndefined(next) && next instanceof BodyWidget && bodyWidget.sectionIndex !== next.sectionIndex && islastEmptyParagraph && !this.isWordExport) {\n            var paragraph = {};\n            paragraph[inlinesProperty[this.keywordIndex]] = [];\n            section[blocksProperty[this.keywordIndex]].push(paragraph);\n        }\n        return next;\n    };\n    SfdtExport.prototype.writeHeaderFooters = function (hfs, section) {\n        if (isNullOrUndefined(hfs)) {\n            return;\n        }\n        var headersFooters = section[headersFootersProperty[this.keywordIndex]];\n        if (!(isNullOrUndefined(hfs[0]) || hfs[0].isEmpty)) {\n            headersFooters[headerProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[0]);\n            if (JSON.stringify(headersFooters[headerProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[headerProperty[this.keywordIndex]];\n            }\n        }\n        if (!(isNullOrUndefined(hfs[1]) || hfs[1].isEmpty)) {\n            headersFooters[footerProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[1]);\n            if (JSON.stringify(headersFooters[footerProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[footerProperty[this.keywordIndex]];\n            }\n        }\n        if (!(isNullOrUndefined(hfs[2]) || hfs[2].isEmpty)) {\n            headersFooters[evenHeaderProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[2]);\n            if (JSON.stringify(headersFooters[evenHeaderProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[evenHeaderProperty[this.keywordIndex]];\n            }\n        }\n        if (!(isNullOrUndefined(hfs[3]) || hfs[3].isEmpty)) {\n            headersFooters[evenFooterProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[3]);\n            if (JSON.stringify(headersFooters[evenFooterProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[evenFooterProperty[this.keywordIndex]];\n            }\n        }\n        if (!(isNullOrUndefined(hfs[4]) || hfs[4].isEmpty)) {\n            headersFooters[firstPageHeaderProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[4]);\n            if (JSON.stringify(headersFooters[firstPageHeaderProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[firstPageHeaderProperty[this.keywordIndex]];\n            }\n        }\n        if (!(isNullOrUndefined(hfs[5]) || hfs[5].isEmpty)) {\n            headersFooters[firstPageFooterProperty[this.keywordIndex]] = this.writeHeaderFooter(hfs[5]);\n            if (JSON.stringify(headersFooters[firstPageFooterProperty[this.keywordIndex]]) == \"{}\") {\n                delete headersFooters[firstPageFooterProperty[this.keywordIndex]];\n            }\n        }\n    };\n    SfdtExport.prototype.writeHeaderFooter = function (widget) {\n        if (isNullOrUndefined(widget) || widget.isEmpty) {\n            return undefined;\n        }\n        var headerFooter = {};\n        if (widget && widget.childWidgets && widget.childWidgets.length > 0) {\n            headerFooter[blocksProperty[this.keywordIndex]] = [];\n            var firstBlock = widget.firstChild;\n            do {\n                firstBlock = this.writeBlock(firstBlock, 0, headerFooter[blocksProperty[this.keywordIndex]]);\n            } while (firstBlock);\n        }\n        return headerFooter;\n    };\n    SfdtExport.prototype.createSection = function (bodyWidget) {\n        var section = {};\n        section[sectionFormatProperty[this.keywordIndex]] = {};\n        section[sectionFormatProperty[this.keywordIndex]] = this.writeSectionFormat(bodyWidget.sectionFormat, section[sectionFormatProperty[this.keywordIndex]], this.keywordIndex);\n        section[blocksProperty[this.keywordIndex]] = [];\n        section[headersFootersProperty[this.keywordIndex]] = {};\n        return section;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeSectionFormat = function (sectionFormat, section, keywordIndex) {\n        section[pageWidthProperty[keywordIndex]] = sectionFormat.pageWidth;\n        section[pageHeightProperty[keywordIndex]] = sectionFormat.pageHeight;\n        section[leftMarginProperty[keywordIndex]] = sectionFormat.leftMargin;\n        section[rightMarginProperty[keywordIndex]] = sectionFormat.rightMargin;\n        section[topMarginProperty[keywordIndex]] = sectionFormat.topMargin;\n        section[bottomMarginProperty[keywordIndex]] = sectionFormat.bottomMargin;\n        section[headerDistanceProperty[keywordIndex]] = sectionFormat.headerDistance;\n        section[footerDistanceProperty[keywordIndex]] = sectionFormat.footerDistance;\n        section[differentFirstPageProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.differentFirstPage, keywordIndex);\n        section[differentOddAndEvenPagesProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.differentOddAndEvenPages, keywordIndex);\n        section[bidiProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.bidi, keywordIndex);\n        if (!isNullOrUndefined(sectionFormat.breakCode)) {\n            section[breakCodeProperty[keywordIndex]] = sectionFormat.breakCode;\n        }\n        if (sectionFormat.restartPageNumbering) {\n            section[restartPageNumberingProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.restartPageNumbering, keywordIndex);\n            section[pageStartingNumberProperty[keywordIndex]] = sectionFormat.pageStartingNumber;\n        }\n        section[endnoteNumberFormatProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootEndNoteNumberFormatEnumValue(sectionFormat.endnoteNumberFormat) : sectionFormat.endnoteNumberFormat;\n        section[footNoteNumberFormatProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootEndNoteNumberFormatEnumValue(sectionFormat.footNoteNumberFormat) : sectionFormat.footNoteNumberFormat;\n        section[restartIndexForFootnotesProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootnoteRestartIndexEnumValue(sectionFormat.restartIndexForFootnotes) : sectionFormat.restartIndexForFootnotes;\n        section[restartIndexForEndnotesProperty[keywordIndex]] = keywordIndex == 1 ? this.getFootnoteRestartIndexEnumValue(sectionFormat.restartIndexForEndnotes) : sectionFormat.restartIndexForEndnotes;\n        section[initialFootNoteNumberProperty[keywordIndex]] = sectionFormat.initialFootNoteNumber;\n        section[initialEndNoteNumberProperty[keywordIndex]] = sectionFormat.initialEndNoteNumber;\n        if (!isNullOrUndefined(sectionFormat.pageNumberStyle)) {\n            section[pageNumberStyleProperty[keywordIndex]] = sectionFormat.pageNumberStyle;\n        }\n        if (!isNullOrUndefined(sectionFormat.columns) && !isNullOrUndefined(sectionFormat.numberOfColumns && sectionFormat.numberOfColumns > 1)) {\n            var cols = sectionFormat.columns;\n            section[numberOfColumnsProperty[keywordIndex]] = sectionFormat.numberOfColumns;\n            section[equalWidthProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.equalWidth, keywordIndex);\n            section[lineBetweenColumnsProperty[keywordIndex]] = HelperMethods.getBoolInfo(sectionFormat.lineBetweenColumns, keywordIndex);\n            section[columnsProperty[keywordIndex]] = [];\n            for (var i = 0; i < cols.length; i++) {\n                var newCol = {};\n                newCol[widthProperty[keywordIndex]] = HelperMethods.convertPixelToPoint(cols[i].width);\n                newCol[spaceProperty[keywordIndex]] = HelperMethods.convertPixelToPoint(cols[i].space);\n                section[columnsProperty[keywordIndex]].push(newCol);\n            }\n        }\n        return section;\n    };\n    SfdtExport.prototype.writeBlock = function (widget, index, blocks) {\n        if (!(widget instanceof BlockWidget)) {\n            return undefined;\n        }\n        if (widget instanceof ParagraphWidget) {\n            if (widget.hasOwnProperty('contentControlProperties') && widget.contentControlProperties.type !== 'BuildingBlockGallery') {\n                var block = this.blockContentControl(widget);\n                this.blockContent = false;\n                if (!isNullOrUndefined(block) && (this.isBlockClosed || !this.nestedBlockContent)) {\n                    this.nestedBlockEnabled = false;\n                    blocks.push(block);\n                    this.blocks = [];\n                }\n                return this.nextBlock;\n            }\n            else {\n                var paragraph = this.createParagraph(widget);\n                blocks.push(paragraph);\n                return this.writeParagraph(widget, paragraph, blocks);\n            }\n        }\n        else {\n            var tableWidget = widget;\n            if (tableWidget.hasOwnProperty('contentControlProperties') && tableWidget.contentControlProperties.type !== 'BuildingBlockGallery') {\n                var block = this.tableContentControl(tableWidget);\n                if (!isNullOrUndefined(block) && this.isBlockClosed) {\n                    blocks.push(block);\n                }\n                return this.nextBlock;\n            }\n            var table = this.createTable(tableWidget);\n            blocks.push(table);\n            return this.writeTable(tableWidget, table, 0, blocks);\n        }\n    };\n    SfdtExport.prototype.writeParagraphs = function (widget) {\n        var blocks = this.blocks;\n        var child = widget.childWidgets[0];\n        var firstElement = child.children[0];\n        var secondElement = child.children[1];\n        if (firstElement instanceof ListTextElementBox || secondElement instanceof ListTextElementBox) {\n            firstElement = child.children[2];\n            secondElement = child.children[3];\n        }\n        if (!isNullOrUndefined(widget.contentControlProperties)\n            && widget.containerWidget instanceof TableCellWidget\n            && !isNullOrUndefined(widget.containerWidget.containerWidget)\n            && !isNullOrUndefined(widget.containerWidget.containerWidget.containerWidget.contentControlProperties)) {\n            blocks = [];\n        }\n        if (this.nestedBlockEnabled) {\n            blocks = [];\n        }\n        if ((firstElement instanceof ContentControl && secondElement instanceof ContentControl && !this.nestedBlockContent) || (this.blockContent && firstElement instanceof ContentControl && !this.nestedBlockContent)) {\n            var nestedBlocks = false;\n            if (secondElement instanceof ContentControl) {\n                if (secondElement.contentControlWidgetType === 'Block') {\n                    nestedBlocks = true;\n                }\n            }\n            if ((nestedBlocks || (this.blockContent && firstElement instanceof ContentControl && !this.nestedBlockContent && firstElement.type === 0 && secondElement instanceof ContentControl && firstElement.contentControlWidgetType === 'Block'))) {\n                this.nestedBlockContent = true;\n                this.nestedBlockEnabled = true;\n                var block = this.blockContentControl(widget);\n                if (!isNullOrUndefined(block)) {\n                    this.blocks.push(block);\n                }\n            }\n            else {\n                var paragraph = this.createParagraph(widget);\n                blocks.push(paragraph);\n                this.nextBlock = this.writeParagraph(widget, paragraph, blocks);\n            }\n        }\n        else {\n            var paragraph = this.createParagraph(widget);\n            blocks.push(paragraph);\n            this.nextBlock = this.writeParagraph(widget, paragraph, blocks);\n        }\n        if (!this.nestedBlockContent && this.nestedBlockEnabled) {\n            this.nestedBlockEnabled = false;\n        }\n        return blocks;\n    };\n    SfdtExport.prototype.contentControlProperty = function (contentControlPropertie) {\n        var contentControlProperties = {};\n        var contentControlListItems = [];\n        contentControlProperties[lockContentControlProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.lockContentControl, this.keywordIndex);\n        contentControlProperties[lockContentsProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.lockContents, this.keywordIndex);\n        contentControlProperties[tagProperty[this.keywordIndex]] = contentControlPropertie.tag;\n        contentControlProperties[colorProperty[this.keywordIndex]] = contentControlPropertie.color;\n        contentControlProperties[titleProperty[this.keywordIndex]] = contentControlPropertie.title;\n        if (!isNullOrUndefined(contentControlPropertie.appearance)) {\n            contentControlProperties[appearanceProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getContentControlAppearanceEnumValue(contentControlPropertie.appearance) : contentControlPropertie.appearance;\n        }\n        contentControlProperties[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getContentControlTypeEnumValue(contentControlPropertie.type) : contentControlPropertie.type;\n        contentControlProperties[hasPlaceHolderTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.hasPlaceHolderText, this.keywordIndex);\n        contentControlProperties[multiLineProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.multiline, this.keywordIndex);\n        contentControlProperties[isTemporaryProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.isTemporary, this.keywordIndex);\n        if (!isNullOrUndefined(contentControlPropertie.isChecked)) {\n            contentControlProperties[isCheckedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.isChecked, this.keywordIndex);\n        }\n        if (!isNullOrUndefined(contentControlPropertie.uncheckedState)) {\n            contentControlProperties[uncheckedStateProperty[this.keywordIndex]] = this.tounCheckedState(contentControlPropertie.uncheckedState);\n        }\n        if (!isNullOrUndefined(contentControlPropertie.checkedState)) {\n            contentControlProperties[checkedStateProperty[this.keywordIndex]] = this.toCheckedState(contentControlPropertie.checkedState);\n        }\n        if (!isNullOrUndefined(contentControlPropertie.dateCalendarType)) {\n            contentControlProperties[dateCalendarTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getDateCalendarTypeEnumValue(contentControlPropertie.dateCalendarType) : contentControlPropertie.dateCalendarType;\n        }\n        if (!isNullOrUndefined(contentControlPropertie.dateStorageFormat)) {\n            contentControlProperties[dateStorageFormatProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getDateStorageFormatEnumValue(contentControlPropertie.dateStorageFormat) : contentControlPropertie.dateStorageFormat;\n        }\n        if (!isNullOrUndefined(contentControlPropertie.dateDisplayLocale)) {\n            contentControlProperties[dateDisplayLocaleProperty[this.keywordIndex]] = contentControlPropertie.dateDisplayLocale;\n        }\n        if (!isNullOrUndefined(contentControlPropertie.dateDisplayFormat)) {\n            contentControlProperties[dateDisplayFormatProperty[this.keywordIndex]] = contentControlPropertie.dateDisplayFormat;\n        }\n        if (!isNullOrUndefined(contentControlPropertie.xmlMapping)) {\n            var xmlMapping = {};\n            var customXmlPart = {};\n            xmlMapping[isMappedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.xmlMapping.isMapped, this.keywordIndex);\n            xmlMapping[isWordMlProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(contentControlPropertie.xmlMapping.isWordMl, this.keywordIndex);\n            if (!isNullOrUndefined(contentControlPropertie.xmlMapping.prefixMapping)) {\n                xmlMapping[prefixMappingProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.prefixMapping;\n            }\n            xmlMapping[xPathProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.xPath;\n            xmlMapping[storeItemIdProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.storeItemId;\n            if (!isNullOrUndefined(contentControlPropertie.xmlMapping.customXmlPart)) {\n                customXmlPart[idProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.customXmlPart.id;\n                customXmlPart[xmlProperty[this.keywordIndex]] = contentControlPropertie.xmlMapping.customXmlPart.xml;\n                xmlMapping[customXmlPartProperty[this.keywordIndex]] = customXmlPart;\n            }\n            contentControlProperties[xmlMappingProperty[this.keywordIndex]] = xmlMapping;\n        }\n        if (!isNullOrUndefined(contentControlPropertie.characterFormat)) {\n            contentControlProperties[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(contentControlPropertie.characterFormat, this.keywordIndex);\n        }\n        if (!isNullOrUndefined(contentControlPropertie.contentControlListItems)) {\n            for (var i = 0; i < contentControlPropertie.contentControlListItems.length; i++) {\n                var listItems = {};\n                listItems[displayTextProperty[this.keywordIndex]] = contentControlPropertie.contentControlListItems[i].displayText;\n                listItems[valueProperty[this.keywordIndex]] = contentControlPropertie.contentControlListItems[i].value;\n                contentControlListItems.push(listItems);\n            }\n        }\n        contentControlProperties[contentControlListItemsProperty[this.keywordIndex]] = contentControlListItems;\n        return contentControlProperties;\n    };\n    SfdtExport.prototype.tounCheckedState = function (state) {\n        var unCheckedState = {};\n        unCheckedState[fontProperty[this.keywordIndex]] = state.font;\n        unCheckedState[valueProperty[this.keywordIndex]] = state.value;\n        return unCheckedState;\n    };\n    SfdtExport.prototype.toCheckedState = function (state) {\n        var checkedState = {};\n        checkedState[fontProperty[this.keywordIndex]] = state.font;\n        checkedState[valueProperty[this.keywordIndex]] = state.value;\n        return checkedState;\n    };\n    SfdtExport.prototype.blockContentControl = function (widget) {\n        var block = {};\n        if (widget.childWidgets.length === 0) {\n            this.nextBlock = widget.nextWidget;\n            return undefined;\n        }\n        block[blocksProperty[this.keywordIndex]] = this.writeParagraphs(widget);\n        if (!isNullOrUndefined(this.nextBlock)) {\n            if (widget.contentControlProperties === this.nextBlock.contentControlProperties) {\n                this.isBlockClosed = false;\n                this.nestedBlockContent = true;\n                return this.blocks = block[blocksProperty[this.keywordIndex]];\n            }\n            else {\n                this.isBlockClosed = true;\n            }\n        }\n        else {\n            this.isBlockClosed = true;\n        }\n        if (!isNullOrUndefined(block[blocksProperty[this.keywordIndex]])) {\n            var child = widget.childWidgets[0];\n            var firstChild = child.children[0];\n            var secondChild = child.children[1];\n            if (firstChild instanceof ListTextElementBox || secondChild instanceof ListTextElementBox) {\n                firstChild = child.children[2];\n                secondChild = child.children[3];\n            }\n            if ((firstChild instanceof ContentControl && secondChild instanceof ContentControl && !this.nestedBlockContent) || (this.blockContent && firstChild instanceof ContentControl && !this.nestedBlockContent)) {\n                if (!(secondChild instanceof ContentControl)) {\n                    block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(firstChild.contentControlProperties);\n                    return block;\n                }\n                else if (secondChild.contentControlWidgetType === 'Block') {\n                    block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(secondChild.contentControlProperties);\n                }\n                else {\n                    block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(widget.contentControlProperties);\n                }\n            }\n            else {\n                block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(widget.contentControlProperties);\n            }\n            return block;\n        }\n    };\n    SfdtExport.prototype.tableContentControl = function (tableWidget) {\n        var block = {};\n        block[blocksProperty[this.keywordIndex]] = this.tableContentControls(tableWidget);\n        if (!isNullOrUndefined(this.nextBlock)) {\n            if (tableWidget.contentControlProperties === this.nextBlock.contentControlProperties) {\n                this.isBlockClosed = false;\n                return this.blocks = block[blocksProperty[this.keywordIndex]];\n            }\n            else {\n                this.isBlockClosed = true;\n            }\n        }\n        block[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(tableWidget.contentControlProperties);\n        return block;\n    };\n    SfdtExport.prototype.tableContentControls = function (tableWidget) {\n        var blocks = [];\n        if (!this.isBlockClosed) {\n            blocks = this.blocks;\n        }\n        var table = this.createTable(tableWidget);\n        blocks.push(table);\n        this.nextBlock = this.writeTable(tableWidget, table, 0, blocks);\n        return blocks;\n    };\n    SfdtExport.prototype.writeParagraph = function (paragraphWidget, paragraph, blocks, lineIndex, start) {\n        if (isNullOrUndefined(lineIndex)) {\n            lineIndex = 0;\n        }\n        if (isNullOrUndefined(start)) {\n            start = 0;\n        }\n        var next = paragraphWidget;\n        while (next instanceof ParagraphWidget) {\n            var selection = this.owner.selection;\n            var selectedParas = void 0;\n            var elementInfo = void 0;\n            var selectionLength = void 0;\n            if (!isNullOrUndefined(selection)) {\n                elementInfo = selection.getElementInfo(selection.end.currentWidget, selection.end.offset);\n                selectionLength = selection.getParagraphLength(paragraphWidget, !selection.isForward ? selection.start.currentWidget : selection.end.currentWidget, elementInfo);\n            }\n            if (!isNullOrUndefined(this.owner.editor) && this.owner.editor.isCopying && selection.getParagraphLength(paragraphWidget) + 1 === Math.abs(selectionLength) && selection.start.paragraph === selection.end.paragraph) {\n                selectedParas = selection.getParagraphsInSelection();\n            }\n            if (this.writeLines(next, lineIndex, start, paragraph[inlinesProperty[this.keywordIndex]])) {\n                if (!isNullOrUndefined(selectedParas) && selectedParas.length === 1 && selectedParas[0] === paragraphWidget) {\n                    // To preserve the <P> tag while copying\n                    paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]] = true;\n                }\n                return undefined;\n            }\n            lineIndex = 0;\n            start = 0;\n            if (!isNullOrUndefined(selectedParas) && selectedParas.length === 1 && selectedParas[0] === paragraphWidget) {\n                // To preserve the <P> tag while copying\n                paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]] = true;\n            }\n            paragraphWidget = next;\n            next = paragraphWidget.nextSplitWidget;\n        }\n        next = paragraphWidget.nextRenderedWidget;\n        if (this.documentHelper.owner.layoutType !== 'Continuous' && isNullOrUndefined(next) && paragraphWidget.containerWidget instanceof BodyWidget &&\n            !isNullOrUndefined(paragraphWidget.containerWidget.page.nextPage) &&\n            !isNullOrUndefined(paragraphWidget.containerWidget.page.nextPage.bodyWidgets)) {\n            next = paragraphWidget.containerWidget.page.nextPage.bodyWidgets[0].childWidgets[0];\n        }\n        if (this.isExport) {\n            return (next instanceof BlockWidget && paragraphWidget.containerWidget.index === next.containerWidget.index) ? next : undefined;\n        }\n        else {\n            return next;\n        }\n    };\n    SfdtExport.prototype.writeInlines = function (paragraph, line, inlines) {\n        this.contentInline = [];\n        var lineWidget = line;\n        var isformField = false;\n        for (var i = 0; i < lineWidget.children.length; i++) {\n            var element = lineWidget.children[i];\n            if (this.isExport && this.checkboxOrDropdown) {\n                if (isformField && element instanceof TextElementBox) {\n                    continue;\n                }\n                if (element instanceof FieldElementBox && element.fieldType === 2) {\n                    isformField = true;\n                }\n            }\n            if (element instanceof ListTextElementBox) {\n                continue;\n            }\n            if (element instanceof FootnoteElementBox) {\n                inlines.push(this.writeInlinesFootNote(element));\n                continue;\n            }\n            if (element instanceof ContentControl || this.startContent || this.blockContent) {\n                this.writeInlinesContentControl(element, line, inlines, i);\n            }\n            else {\n                var inline = this.writeInline(element);\n                if (!isNullOrUndefined(inline)) {\n                    inlines.push(inline);\n                }\n            }\n            if (this.isExport && element instanceof FieldElementBox && element.fieldType === 1) {\n                isformField = false;\n                this.checkboxOrDropdown = false;\n            }\n        }\n    };\n    SfdtExport.prototype.inlineContentControl = function (element, nextElement, inlines) {\n        var inline = {};\n        var nestedContentInline = [];\n        if (!isNullOrUndefined(inlines)) {\n            if (this.nestedContent) {\n                inlines = inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]];\n                if (inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]] == undefined) {\n                    inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]] = [];\n                }\n                // if (isNullOrUndefined(inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]])) {\n                //     let nestInlines:any =[];\n                //     // nestInlines.inlines=[];\n                //     let inlineObject:{}={[inlinesProperty[this.keywordIndex]]:nestInlines}\n                //     inlines.push(inlineObject);\n                // }\n                inline = this.inlineContentControls(element, inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]]);\n                var nestedContentinline = this.nestedContentProperty(nextElement, inlines[inlines.length - 1]);\n                if (!isNullOrUndefined(nestedContentinline)) {\n                    this.contentInline.push(inline);\n                    nestedContentInline = [];\n                }\n            }\n            else {\n                this.inlineContentControls(element, inlines[inlines.length - 1][inlinesProperty[this.keywordIndex]]);\n            }\n        }\n        else {\n            if (this.nestedContent) {\n                inline[inlinesProperty[this.keywordIndex]] = this.inlineContentControls(element, undefined, nestedContentInline);\n                var nestedContentinline = this.nestedContentProperty(nextElement, inline);\n                if (!isNullOrUndefined(nestedContentinline) || this.multipleLineContent) {\n                    this.contentInline.push(inline);\n                    nestedContentInline = [];\n                }\n            }\n            else {\n                inline[inlinesProperty[this.keywordIndex]] = this.inlineContentControls(element, this.contentInline);\n            }\n        }\n        if (nextElement instanceof ContentControl && nextElement.type === 1 && !this.nestedContent) {\n            if (this.multipleLineContent && !isNullOrUndefined(inlines)) {\n                inlines[inlines.length - 1][contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n                this.multipleLineContent = false;\n                return;\n            }\n            else {\n                inline[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n            }\n            return inline;\n        }\n        else if (this.startContent) {\n            this.multipleLineContent = true;\n            return inline;\n        }\n    };\n    SfdtExport.prototype.nestedContentProperty = function (nextElement, inline, inlines) {\n        if (!isNullOrUndefined(nextElement)) {\n            if (nextElement.type === 1) {\n                inline[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(nextElement.contentControlProperties);\n                return inline;\n            }\n            else if (this.startContent) {\n                this.multipleLineContent = true;\n                return inline;\n            }\n        }\n        else if (this.startContent) {\n            this.multipleLineContent = true;\n            return inline;\n        }\n    };\n    SfdtExport.prototype.inlineContentControls = function (element, contentInline, nestedContentInline) {\n        var inline = this.writeInline(element);\n        if (!isNullOrUndefined(nestedContentInline)) {\n            nestedContentInline.push(inline);\n            return nestedContentInline;\n        }\n        contentInline.push(inline);\n        return contentInline;\n    };\n    /* eslint-disable  */\n    SfdtExport.prototype.writeInline = function (element) {\n        var inline = {};\n        if (element.removedIds.length > 0) {\n            for (var i = 0; i < element.removedIds.length; i++) {\n                element.revisions[i] = this.documentHelper.revisionsInternal.get(element.removedIds[i]);\n            }\n        }\n        inline[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(element.characterFormat, this.keywordIndex);\n        if (element instanceof FieldElementBox) {\n            inline[fieldTypeProperty[this.keywordIndex]] = element.fieldType;\n            if (element.fieldType === 0) {\n                inline[hasFieldEndProperty[this.keywordIndex]] = element.hasFieldEnd;\n                if (element.formFieldData) {\n                    inline[formFieldDataProperty[this.keywordIndex]] = {};\n                    inline[formFieldDataProperty[this.keywordIndex]][nameProperty[this.keywordIndex]] = element.formFieldData.name;\n                    inline[formFieldDataProperty[this.keywordIndex]][enabledProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.enabled, this.keywordIndex);\n                    inline[formFieldDataProperty[this.keywordIndex]][helpTextProperty[this.keywordIndex]] = element.formFieldData.helpText;\n                    inline[formFieldDataProperty[this.keywordIndex]][statusTextProperty[this.keywordIndex]] = element.formFieldData.statusText;\n                    if (element.formFieldData instanceof TextFormField) {\n                        inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]] = {};\n                        inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextFormFieldTypeEnumValue(element.formFieldData.type) : element.formFieldData.type;\n                        inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][maxLengthProperty[this.keywordIndex]] = element.formFieldData.maxLength;\n                        inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] = element.formFieldData.defaultValue;\n                        inline[formFieldDataProperty[this.keywordIndex]][textInputProperty[this.keywordIndex]][formatProperty[this.keywordIndex]] = this.keywordIndex == 1 && element.formFieldData.type === 'Text' ? this.getTextFormFieldFormatEnumValue(element.formFieldData.format) : element.formFieldData.format;\n                    }\n                    else if (element.formFieldData instanceof CheckBoxFormField) {\n                        inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]] = {};\n                        this.checkboxOrDropdown = true;\n                        inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][sizeTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getCheckBoxSizeTypeEnumValue(element.formFieldData.sizeType) : element.formFieldData.sizeType;\n                        inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][sizeProperty[this.keywordIndex]] = element.formFieldData.size;\n                        inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][defaultValueProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.defaultValue, this.keywordIndex);\n                        inline[formFieldDataProperty[this.keywordIndex]][checkBoxProperty[this.keywordIndex]][checkedProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.formFieldData.checked, this.keywordIndex);\n                    }\n                    else {\n                        inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]] = {};\n                        this.checkboxOrDropdown = true;\n                        inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]][dropDownItemsProperty[this.keywordIndex]] = element.formFieldData.dropdownItems;\n                        inline[formFieldDataProperty[this.keywordIndex]][dropDownListProperty[this.keywordIndex]][selectedIndexProperty[this.keywordIndex]] = element.formFieldData.selectedIndex;\n                    }\n                }\n            }\n            if (element.fieldCodeType && element.fieldCodeType !== '') {\n                inline.fieldCodeType = element.fieldCodeType;\n            }\n        }\n        else if (element instanceof ChartElementBox) {\n            this.writeChart(element, inline);\n        }\n        else if (element instanceof ImageElementBox) {\n            inline[imageStringProperty[this.keywordIndex]] = element.imageString;\n            this.images.push(parseInt(element.imageString, 10));\n            inline[metaFileImageStringProperty[this.keywordIndex]] = element.metaFileImageString;\n            inline[isMetaFileProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isMetaFile, this.keywordIndex);\n            inline[isCompressedProperty[this.keywordIndex]] = element.isCompressed;\n            inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n            inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n            //inline.iscrop = element.isCrop;\n            if (element.isCrop) {\n                inline[bottomProperty[this.keywordIndex]] = element.bottom;\n                inline[rightProperty[this.keywordIndex]] = element.right;\n                inline[leftProperty[this.keywordIndex]] = element.left;\n                inline[topProperty[this.keywordIndex]] = element.top;\n                inline[getImageWidthProperty[this.keywordIndex]] = element.cropWidthScale;\n                inline[getImageHeightProperty[this.keywordIndex]] = element.cropHeightScale;\n            }\n            inline[nameProperty[this.keywordIndex]] = element.name;\n            inline[alternativeTextProperty[this.keywordIndex]] = element.alternateText;\n            inline[titleProperty[this.keywordIndex]] = element.title;\n            inline[visibleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.visible, this.keywordIndex);\n            inline[widthScaleProperty[this.keywordIndex]] = element.widthScale;\n            inline[heightScaleProperty[this.keywordIndex]] = element.heightScale;\n            inline[verticalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.verticalPosition);\n            inline[verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getVerticalOriginEnumValue(element.verticalOrigin) : element.verticalOrigin;\n            inline[verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeVerticalAlignmentEnumValue(element.verticalAlignment) : element.verticalAlignment;\n            inline[horizontalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.horizontalPosition);\n            inline[horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getHorizontalOriginEnumValue(element.horizontalOrigin) : element.horizontalOrigin;\n            inline[horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeHorizontalAlignmentEnumValue(element.horizontalAlignment) : element.horizontalAlignment;\n            inline[allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.allowOverlap, this.keywordIndex);\n            inline[textWrappingStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingStyleEnumValue(element.textWrappingStyle) : element.textWrappingStyle;\n            inline[textWrappingTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingTypeEnumValue(element.textWrappingType) : element.textWrappingType;\n            inline[belowTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isBelowText, this.keywordIndex);\n            if (!isNullOrUndefined(element.distanceBottom)) {\n                inline[distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceBottom);\n            }\n            if (!isNullOrUndefined(element.distanceLeft)) {\n                inline[distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceLeft);\n            }\n            if (!isNullOrUndefined(element.distanceRight)) {\n                inline[distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceRight);\n            }\n            if (!isNullOrUndefined(element.distanceTop)) {\n                inline[distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceTop);\n            }\n            inline[layoutInCellProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.layoutInCell, this.keywordIndex);\n            inline[zOrderPositionProperty[this.keywordIndex]] = element.zOrderPosition;\n        }\n        else if (element instanceof BookmarkElementBox) {\n            inline[bookmarkTypeProperty[this.keywordIndex]] = element.bookmarkType;\n            inline[nameProperty[this.keywordIndex]] = element.name;\n            if (!isNullOrUndefined(element.properties)) {\n                var properties = {};\n                if (!isNullOrUndefined(element.properties['isAfterParagraphMark'])) {\n                    properties[isAfterParagraphMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterParagraphMark'], this.keywordIndex);\n                }\n                if (!isNullOrUndefined(element.properties['isAfterTableMark'])) {\n                    properties[isAfterTableMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterTableMark'], this.keywordIndex);\n                }\n                if (!isNullOrUndefined(element.properties['isAfterRowMark'])) {\n                    properties[isAfterRowMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterRowMark'], this.keywordIndex);\n                }\n                if (!isNullOrUndefined(element.properties['isAfterCellMark'])) {\n                    properties[isAfterCellMarkProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.properties['isAfterCellMark'], this.keywordIndex);\n                }\n                if (!isNullOrUndefined(element.properties['columnFirst'])) {\n                    properties[columnFirstProperty[this.keywordIndex]] = element.properties['columnFirst'];\n                }\n                if (!isNullOrUndefined(element.properties['columnLast'])) {\n                    properties[columnLastProperty[this.keywordIndex]] = element.properties['columnLast'];\n                }\n                inline[propertiesProperty[this.keywordIndex]] = properties;\n            }\n        }\n        else if (element instanceof BreakElementBox) {\n            inline[breakClearTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? HelperMethods.getBreakClearType(element.breakClearType) : element.breakClearType;\n        }\n        else if (element instanceof FootnoteElementBox) {\n            inline = this.writeInlinesFootNote(element);\n        }\n        else if (element instanceof TextElementBox) {\n            var elementText = element.text;\n            if (!this.isWriteEndFootNote && (isNullOrUndefined(this.owner.editorModule) || !this.owner.editorModule.isPaste)) {\n                elementText = HelperMethods.removeInvalidXmlChars(elementText);\n            }\n            if (this.isWriteInlinesFootNote\n                && element.indexInOwner === 0\n                && element.line.indexInOwner === 0\n                && element.paragraph.indexInOwner == 0\n                && HelperMethods.checkTextFormat(elementText)) {\n                elementText = \"\\u0002\";\n            }\n            // replacing the no break hyphen character by '-'\n            if (elementText.indexOf(String.fromCharCode(30)) !== -1) {\n                inline[textProperty[this.keywordIndex]] = elementText.replace(/\\u001e/g, '-');\n            }\n            else if (elementText.indexOf(String.fromCharCode(31)) !== -1) {\n                inline[textProperty[this.keywordIndex]] = elementText.replace(/\\u001f/g, '');\n            }\n            else if (element instanceof FootnoteEndnoteMarkerElementBox) {\n                inline[textProperty[this.keywordIndex]] = '\\u0002';\n            }\n            else if (element.revisions.length !== 0) {\n                if (!this.isExport && this.owner.enableTrackChanges && !this.isPartialExport) {\n                    this.copyWithTrackChange = true;\n                    for (var x = 0; x < element.revisions.length; x++) {\n                        var revision = element.revisions[x];\n                        if (this.selectedRevisionId.indexOf(revision.revisionID) === -1) {\n                            this.selectedRevisionId.push(revision.revisionID);\n                        }\n                        if (element.revisions[x].revisionType !== 'Deletion') {\n                            inline[textProperty[this.keywordIndex]] = elementText;\n                        }\n                    }\n                }\n                else {\n                    inline[textProperty[this.keywordIndex]] = elementText;\n                }\n            }\n            else {\n                inline[textProperty[this.keywordIndex]] = elementText;\n            }\n        }\n        else if (element instanceof EditRangeStartElementBox) {\n            if (element.user !== '') {\n                inline[userProperty[this.keywordIndex]] = element.user;\n            }\n            inline[groupProperty[this.keywordIndex]] = element.group;\n            inline[columnFirstProperty[this.keywordIndex]] = element.columnFirst;\n            inline[columnLastProperty[this.keywordIndex]] = element.columnLast;\n            inline[editRangeIdProperty[this.keywordIndex]] = element.editRangeId.toString();\n        }\n        else if (element instanceof EditRangeEndElementBox) {\n            inline[editableRangeStartProperty[this.keywordIndex]] = {};\n            inline[editableRangeStartProperty[this.keywordIndex]][userProperty[this.keywordIndex]] = element.editRangeStart.user;\n            inline[editableRangeStartProperty[this.keywordIndex]][groupProperty[this.keywordIndex]] = element.editRangeStart.group;\n            inline[editableRangeStartProperty[this.keywordIndex]][columnFirstProperty[this.keywordIndex]] = element.editRangeStart.columnFirst;\n            inline[editableRangeStartProperty[this.keywordIndex]][columnLastProperty[this.keywordIndex]] = element.editRangeStart.columnLast;\n            inline[editRangeIdProperty[this.keywordIndex]] = element.editRangeId.toString();\n        }\n        else if (element instanceof CommentCharacterElementBox) {\n            if (this.iscontentInsert) {\n                if (!this.isExport && element.commentType === 0) {\n                    this.selectedCommentsId.push(element.commentId);\n                }\n                inline[commentCharacterTypeProperty[this.keywordIndex]] = element.commentType;\n                inline[commentIdProperty[this.keywordIndex]] = element.commentId;\n            }\n            else {\n                return undefined;\n            }\n        }\n        else if (element instanceof ShapeElementBox) {\n            this.writeShape(element, inline);\n        }\n        else {\n            inline = undefined;\n        }\n        this.writeInlineRevisions(inline, element);\n        /*if(element.removedIds.length > 0){\n            inline.revisionIds = [];\n            for(let x:number = 0;x < element.removedIds.length; x++){\n            inline.revisionIds.push(element.removedIds);\n            }\n        }*/\n        return inline;\n    };\n    SfdtExport.prototype.writeInlineRevisions = function (inline, element) {\n        if ((element.revisions.length > 0) && (this.isExport || !this.isExport && !this.owner.enableTrackChanges)) {\n            inline[revisionIdsProperty[this.keywordIndex]] = [];\n            for (var x = 0; x < element.revisions.length; x++) {\n                //revisionIdes[x] = element.revisions[x];\n                if (this.selectedRevisionId.indexOf(element.revisions[x].revisionID) === -1) {\n                    this.selectedRevisionId.push(element.revisions[x].revisionID);\n                }\n                inline[revisionIdsProperty[this.keywordIndex]].push(element.revisions[x].revisionID);\n                //this.document.revisionIdes.push(inline.revisionIds)\n            }\n        }\n    };\n    SfdtExport.prototype.writeShape = function (element, inline) {\n        inline[shapeIdProperty[this.keywordIndex]] = element.shapeId;\n        inline[nameProperty[this.keywordIndex]] = element.name;\n        inline[alternativeTextProperty[this.keywordIndex]] = element.alternateText;\n        inline[titleProperty[this.keywordIndex]] = element.title;\n        inline[visibleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.visible, this.keywordIndex);\n        inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n        inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n        if (element.isZeroHeight) {\n            inline[heightProperty[this.keywordIndex]] = 0;\n        }\n        else {\n            inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n        }\n        inline[widthScaleProperty[this.keywordIndex]] = element.widthScale;\n        inline[heightScaleProperty[this.keywordIndex]] = element.heightScale;\n        inline[verticalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.verticalPosition);\n        inline[verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getVerticalOriginEnumValue(element.verticalOrigin) : element.verticalOrigin;\n        inline[verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeVerticalAlignmentEnumValue(element.verticalAlignment) : element.verticalAlignment;\n        inline[verticalRelativePercentProperty[this.keywordIndex]] = element.verticalRelativePercent;\n        inline[horizontalPositionProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.horizontalPosition);\n        inline[horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getHorizontalOriginEnumValue(element.horizontalOrigin) : element.horizontalOrigin;\n        inline[horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getShapeHorizontalAlignmentEnumValue(element.horizontalAlignment) : element.horizontalAlignment;\n        inline[horizontalRelativePercentProperty[this.keywordIndex]] = element.horizontalRelativePercent;\n        inline[heightRelativePercentProperty[this.keywordIndex]] = element.heightRelativePercent;\n        inline[widthRelativePercentProperty[this.keywordIndex]] = element.widthRelativePercent;\n        inline[zOrderPositionProperty[this.keywordIndex]] = element.zOrderPosition;\n        inline[allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.allowOverlap, this.keywordIndex);\n        inline[textWrappingStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingStyleEnumValue(element.textWrappingStyle) : element.textWrappingStyle;\n        inline[textWrappingTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextWrappingTypeEnumValue(element.textWrappingType) : element.textWrappingType;\n        inline[belowTextProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isBelowText, this.keywordIndex);\n        inline[horizontalRuleProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.isHorizontalRule, this.keywordIndex);\n        if (!isNullOrUndefined(element.distanceBottom)) {\n            inline[distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceBottom);\n        }\n        if (!isNullOrUndefined(element.distanceLeft)) {\n            inline[distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceLeft);\n        }\n        if (!isNullOrUndefined(element.distanceRight)) {\n            inline[distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceRight);\n        }\n        if (!isNullOrUndefined(element.distanceTop)) {\n            inline[distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.distanceTop);\n        }\n        inline[layoutInCellProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.layoutInCell, this.keywordIndex);\n        inline[lockAnchorProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.lockAnchor, this.keywordIndex);\n        inline[autoShapeTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getAutoShapeTypeEnumValue(element.autoShapeType) : element.autoShapeType;\n        if (element.fillFormat) {\n            inline[fillFormatProperty[this.keywordIndex]] = {};\n            inline[fillFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = element.fillFormat.color;\n            inline[fillFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.fillFormat.fill, this.keywordIndex);\n        }\n        if (element.lineFormat) {\n            inline[lineFormatProperty[this.keywordIndex]] = {};\n            inline[lineFormatProperty[this.keywordIndex]][lineFormatTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getLineFormatTypeEnumValue(element.lineFormat.lineFormatType) : element.lineFormat.lineFormatType;\n            inline[lineFormatProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = element.lineFormat.color;\n            inline[lineFormatProperty[this.keywordIndex]][weightProperty[this.keywordIndex]] = element.lineFormat.weight;\n            inline[lineFormatProperty[this.keywordIndex]][lineStyleProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getLineDashStyleEnumValue(element.lineFormat.dashStyle) : element.lineFormat.dashStyle;\n            inline[lineFormatProperty[this.keywordIndex]][lineProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(element.lineFormat.line, this.keywordIndex);\n        }\n        if (element.textFrame) {\n            inline[textFrameProperty[this.keywordIndex]] = {};\n            inline[textFrameProperty[this.keywordIndex]][textVerticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTextVerticalAlignmentEnumValue(element.textFrame.textVerticalAlignment) : element.textFrame.textVerticalAlignment;\n            inline[textFrameProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginLeft);\n            inline[textFrameProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginRight);\n            inline[textFrameProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginTop);\n            inline[textFrameProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.textFrame.marginBottom);\n            inline[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]] = [];\n            for (var j = 0; j < element.textFrame.childWidgets.length; j++) {\n                var textFrameBlock = element.textFrame.childWidgets[j];\n                if (textFrameBlock.hasOwnProperty('contentControlProperties') && !isNullOrUndefined(element.paragraph) && (element.paragraph.hasOwnProperty('contentControlProperties'))) {\n                    this.blocks = [];\n                }\n                this.writeBlock(textFrameBlock, 0, inline[textFrameProperty[this.keywordIndex]][blocksProperty[this.keywordIndex]]);\n            }\n        }\n    };\n    SfdtExport.prototype.writeChart = function (element, inline) {\n        inline[chartLegendProperty[this.keywordIndex]] = {};\n        inline[chartTitleAreaProperty[this.keywordIndex]] = {};\n        inline[chartAreaProperty[this.keywordIndex]] = {};\n        inline[plotAreaProperty[this.keywordIndex]] = {};\n        inline[chartCategoryProperty[this.keywordIndex]] = [];\n        inline[chartSeriesProperty[this.keywordIndex]] = [];\n        inline[chartPrimaryCategoryAxisProperty[this.keywordIndex]] = {};\n        inline[chartPrimaryValueAxisProperty[this.keywordIndex]] = {};\n        this.writeChartTitleArea(element.chartTitleArea, inline[chartTitleAreaProperty[this.keywordIndex]]);\n        this.writeChartArea(element.chartArea, inline[chartAreaProperty[this.keywordIndex]]);\n        this.writeChartArea(element.chartPlotArea, inline[plotAreaProperty[this.keywordIndex]]);\n        this.writeChartCategory(element, inline[chartCategoryProperty[this.keywordIndex]]);\n        this.createChartSeries(element, inline[chartSeriesProperty[this.keywordIndex]]);\n        this.writeChartLegend(element.chartLegend, inline[chartLegendProperty[this.keywordIndex]]);\n        this.writeChartCategoryAxis(element.chartPrimaryCategoryAxis, inline[chartPrimaryCategoryAxisProperty[this.keywordIndex]]);\n        this.writeChartCategoryAxis(element.chartPrimaryValueAxis, inline[chartPrimaryValueAxisProperty[this.keywordIndex]]);\n        if (element.chartDataTable.showSeriesKeys !== undefined) {\n            inline[chartDataTableProperty[this.keywordIndex]] = {};\n            this.writeChartDataTable(element.chartDataTable, inline[chartDataTableProperty[this.keywordIndex]]);\n        }\n        inline[chartTitleProperty[this.keywordIndex]] = element.title;\n        inline[chartTypeProperty[this.keywordIndex]] = element.type;\n        inline[gapWidthProperty[this.keywordIndex]] = element.chartGapWidth;\n        inline[overlapProperty[this.keywordIndex]] = element.chartOverlap;\n        inline[heightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.height);\n        inline[widthProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(element.width);\n    };\n    SfdtExport.prototype.writeChartTitleArea = function (titleArea, chartTitleArea) {\n        chartTitleArea[fontNameProperty[this.keywordIndex]] = titleArea.chartfontName;\n        chartTitleArea[fontSizeProperty[this.keywordIndex]] = titleArea.chartFontSize;\n        chartTitleArea[layoutProperty[this.keywordIndex]] = {};\n        chartTitleArea[dataFormatProperty[this.keywordIndex]] = this.writeChartDataFormat(titleArea.dataFormat);\n        this.writeChartLayout(titleArea.layout, chartTitleArea[layoutProperty[this.keywordIndex]]);\n    };\n    SfdtExport.prototype.writeChartDataFormat = function (format) {\n        var chartDataFormat = {};\n        chartDataFormat[fillProperty[this.keywordIndex]] = {};\n        chartDataFormat[lineProperty[this.keywordIndex]] = {};\n        if (!isNullOrUndefined(format.fill.color)) {\n            if (format.fill.color.length > 6) {\n                chartDataFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]] = format.fill.color.substring(2);\n            }\n            else {\n                chartDataFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]] = format.fill.color;\n            }\n        }\n        chartDataFormat[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]] = format.fill.rgb;\n        chartDataFormat[lineProperty[this.keywordIndex]][colorProperty[this.keywordIndex]] = format.line.color;\n        chartDataFormat[lineProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]] = format.line.rgb;\n        return chartDataFormat;\n    };\n    SfdtExport.prototype.writeChartLayout = function (layout, chartLayout) {\n        chartLayout[layoutXProperty[this.keywordIndex]] = layout.chartLayoutLeft;\n        chartLayout[layoutYProperty[this.keywordIndex]] = layout.chartLayoutTop;\n    };\n    SfdtExport.prototype.writeChartArea = function (area, chartArea) {\n        chartArea[foreColorProperty[this.keywordIndex]] = area.chartForeColor;\n    };\n    SfdtExport.prototype.writeChartLegend = function (legend, chartLegend) {\n        chartLegend[positionProperty[this.keywordIndex]] = legend.chartLegendPostion;\n        chartLegend[chartTitleAreaProperty[this.keywordIndex]] = {};\n        this.writeChartTitleArea(legend.chartTitleArea, chartLegend[chartTitleAreaProperty[this.keywordIndex]]);\n    };\n    SfdtExport.prototype.writeChartCategoryAxis = function (categoryAxis, primaryCategoryAxis) {\n        primaryCategoryAxis[chartTitleProperty[this.keywordIndex]] = categoryAxis.categoryAxisTitle;\n        primaryCategoryAxis[chartTitleAreaProperty[this.keywordIndex]] = {};\n        this.writeChartTitleArea(categoryAxis.chartTitleArea, primaryCategoryAxis[chartTitleAreaProperty[this.keywordIndex]]);\n        primaryCategoryAxis[categoryTypeProperty[this.keywordIndex]] = categoryAxis.categoryAxisType;\n        primaryCategoryAxis[fontSizeProperty[this.keywordIndex]] = categoryAxis.axisFontSize;\n        primaryCategoryAxis[fontNameProperty[this.keywordIndex]] = categoryAxis.axisFontName;\n        primaryCategoryAxis[numberFormatProperty[this.keywordIndex]] = categoryAxis.categoryNumberFormat;\n        primaryCategoryAxis[maximumValueProperty[this.keywordIndex]] = categoryAxis.max;\n        primaryCategoryAxis[minimumValueProperty[this.keywordIndex]] = categoryAxis.min;\n        primaryCategoryAxis[isAutoMajorProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.isAutoInternal, this.keywordIndex);\n        primaryCategoryAxis[majorUnitProperty[this.keywordIndex]] = categoryAxis.interval;\n        primaryCategoryAxis[hasMajorGridLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.majorGridLines, this.keywordIndex);\n        primaryCategoryAxis[hasMinorGridLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(categoryAxis.minorGridLines, this.keywordIndex);\n        primaryCategoryAxis[majorTickMarkProperty[this.keywordIndex]] = categoryAxis.majorTick;\n        primaryCategoryAxis[minorTickMarkProperty[this.keywordIndex]] = categoryAxis.minorTick;\n        primaryCategoryAxis[tickLabelPositionProperty[this.keywordIndex]] = categoryAxis.tickPosition;\n    };\n    SfdtExport.prototype.writeChartDataTable = function (chartDataTable, dataTable) {\n        dataTable[showSeriesKeysProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.showSeriesKeys, this.keywordIndex);\n        dataTable[hasHorizontalBorderProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasHorzBorder, this.keywordIndex);\n        dataTable[hasVerticalBorderProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasVertBorder, this.keywordIndex);\n        dataTable[hasBordersProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(chartDataTable.hasBorders, this.keywordIndex);\n    };\n    SfdtExport.prototype.writeChartCategory = function (element, chartCategory) {\n        var data = element.chartCategory;\n        chartCategory[chartDataProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < data.length; i++) {\n            var xData = data[i];\n            var categories = this.createChartCategory(xData, element.chartType);\n            chartCategory.push(categories);\n        }\n    };\n    SfdtExport.prototype.createChartCategory = function (data, type) {\n        var chartCategory = {};\n        chartCategory[chartDataProperty[this.keywordIndex]] = [];\n        this.writeChartData(data, chartCategory[chartDataProperty[this.keywordIndex]], type);\n        chartCategory[categoryXNameProperty[this.keywordIndex]] = data.categoryXName;\n        return chartCategory;\n    };\n    SfdtExport.prototype.writeChartData = function (element, chartData, type) {\n        var data = element.chartData;\n        for (var i = 0; i < data.length; i++) {\n            var yData = data[i];\n            var yCategory = this.createChartData(yData, type);\n            chartData.push(yCategory);\n        }\n    };\n    SfdtExport.prototype.createChartData = function (data, type) {\n        var chartData = {};\n        chartData[yValueProperty[this.keywordIndex]] = data.yValue;\n        if (type === 'Bubble') {\n            chartData[sizeProperty[this.keywordIndex]] = data.size;\n        }\n        return chartData;\n    };\n    SfdtExport.prototype.createChartSeries = function (element, chartSeries) {\n        var data = element.chartSeries;\n        var type = element.chartType;\n        for (var i = 0; i < data.length; i++) {\n            var yData = data[i];\n            var series = this.writeChartSeries(yData, type);\n            chartSeries.push(series);\n        }\n    };\n    SfdtExport.prototype.writeChartSeries = function (series, type) {\n        var isPieType = (type === 'Pie' || type === 'Doughnut');\n        var chartSeries = {};\n        var errorBar = {};\n        var errorBarData = series.errorBar;\n        chartSeries[dataPointsProperty[this.keywordIndex]] = [];\n        chartSeries[seriesNameProperty[this.keywordIndex]] = series.seriesName;\n        if (isPieType) {\n            if (!isNullOrUndefined(series.firstSliceAngle)) {\n                chartSeries[firstSliceAngleProperty[this.keywordIndex]] = series.firstSliceAngle;\n            }\n            if (type === 'Doughnut') {\n                chartSeries[holeSizeProperty[this.keywordIndex]] = series.doughnutHoleSize;\n            }\n        }\n        if (!isNullOrUndefined(series.dataLabels.labelPosition)) {\n            var dataLabel = this.writeChartDataLabels(series.dataLabels);\n            chartSeries[dataLabelProperty[this.keywordIndex]] = dataLabel;\n        }\n        if (!isNullOrUndefined(series.seriesFormat.markerStyle)) {\n            var seriesFormat = {};\n            var format = series.seriesFormat;\n            seriesFormat[markerStyleProperty[this.keywordIndex]] = format.markerStyle;\n            seriesFormat[markerSizeProperty[this.keywordIndex]] = format.numberValue;\n            seriesFormat[markerColorProperty[this.keywordIndex]] = format.markerColor;\n            chartSeries[seriesFormatProperty[this.keywordIndex]] = seriesFormat;\n        }\n        if (!isNullOrUndefined(errorBarData.type)) {\n            errorBar[typeProperty[this.keywordIndex]] = errorBarData.type;\n            errorBar[directionProperty[this.keywordIndex]] = errorBarData.direction;\n            errorBar[endStyleProperty[this.keywordIndex]] = errorBarData.endStyle;\n            errorBar[numberValueProperty[this.keywordIndex]] = errorBarData.numberValue;\n            chartSeries[errorBarProperty[this.keywordIndex]] = errorBar;\n        }\n        if (series.trendLines.length > 0) {\n            chartSeries[trendLinesProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < series.trendLines.length; i++) {\n                var trendLine = this.writeChartTrendLines(series.trendLines[i]);\n                chartSeries[trendLinesProperty[this.keywordIndex]].push(trendLine);\n            }\n        }\n        for (var i = 0; i < series.chartDataFormat.length; i++) {\n            var format = this.writeChartDataFormat(series.chartDataFormat[i]);\n            chartSeries[dataPointsProperty[this.keywordIndex]].push(format);\n        }\n        return chartSeries;\n    };\n    SfdtExport.prototype.writeChartDataLabels = function (dataLabels) {\n        var dataLabel = {};\n        dataLabel[positionProperty[this.keywordIndex]] = dataLabels.position;\n        dataLabel[fontNameProperty[this.keywordIndex]] = dataLabels.fontName;\n        dataLabel[fontColorProperty[this.keywordIndex]] = HelperMethods.convertArgbToRgb(dataLabels.fontColor);\n        dataLabel[fontSizeProperty[this.keywordIndex]] = dataLabels.fontSize;\n        dataLabel[isLegendKeyProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isLegendKey, this.keywordIndex);\n        dataLabel[isBubbleSizeProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isBubbleSize, this.keywordIndex);\n        dataLabel[isCategoryNameProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isCategoryName, this.keywordIndex);\n        dataLabel[isSeriesNameProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isSeriesName, this.keywordIndex);\n        dataLabel[isValueProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isValue, this.keywordIndex);\n        dataLabel[isPercentageProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isPercentage, this.keywordIndex);\n        dataLabel[isLeaderLinesProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(dataLabels.isLeaderLines, this.keywordIndex);\n        return dataLabel;\n    };\n    SfdtExport.prototype.writeChartTrendLines = function (trendLines) {\n        var trendLine = {};\n        trendLine[nameProperty[this.keywordIndex]] = trendLines.trendLineName;\n        trendLine[typeProperty[this.keywordIndex]] = trendLines.trendLineType;\n        trendLine[forwardProperty[this.keywordIndex]] = trendLines.forwardValue;\n        trendLine[backwardProperty[this.keywordIndex]] = trendLines.backwardValue;\n        trendLine[interceptProperty[this.keywordIndex]] = trendLines.interceptValue;\n        trendLine[isDisplayEquationProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(trendLines.isDisplayEquation, this.keywordIndex);\n        trendLine[isDisplayRSquaredProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(trendLines.isDisplayRSquared, this.keywordIndex);\n        return trendLine;\n    };\n    SfdtExport.prototype.writeLines = function (paragraph, lineIndex, offset, inlines) {\n        var startIndex = lineIndex;\n        var endParagraph = this.endLine instanceof LineWidget && this.endLine.paragraph === paragraph;\n        var endIndex = endParagraph ? this.endLine.indexInOwner : paragraph.childWidgets.length - 1;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var child = paragraph.childWidgets[i];\n            if (this.endLine === child || (lineIndex === i && offset !== 0)) {\n                if (this.endLine === child && paragraph.paragraphFormat.bidi && this.startLine !== this.endLine) {\n                    this.endOffset = child.getEndOffset();\n                }\n                this.writeLine(child, (this.startLine !== this.endLine && child !== this.startLine) ? 0 : offset, inlines);\n            }\n            else {\n                this.writeInlines(paragraph, child, inlines);\n            }\n        }\n        return endParagraph;\n    };\n    SfdtExport.prototype.writeLine = function (line, offset, inlines) {\n        this.contentInline = [];\n        var isContentStarted = false;\n        var contentControl = false;\n        var isEnd = line === this.endLine;\n        var lineWidget = line;\n        var started = false;\n        var ended = false;\n        var length = 0;\n        for (var j = 0; j < lineWidget.children.length; j++) {\n            var element = lineWidget.children[j];\n            if (element instanceof ListTextElementBox) {\n                continue;\n            }\n            var inline = undefined;\n            length += element.length;\n            started = length > offset;\n            if (element instanceof ContentControl) {\n                if (!started) {\n                    isContentStarted = element.type === 0 ? true : false;\n                }\n                contentControl = true;\n            }\n            if (element instanceof TextElementBox && element.hasOwnProperty('contentControlProperties') && started && !contentControl) {\n                isContentStarted = true;\n            }\n            if (element instanceof ContentControl) {\n                if (isContentStarted) {\n                    if (element.type === 1) {\n                        isContentStarted = false;\n                    }\n                }\n                if (contentControl) {\n                    if (element.type === 1) {\n                        contentControl = false;\n                    }\n                }\n            }\n            ended = isEnd && length >= this.endOffset;\n            if (!started || isContentStarted) {\n                continue;\n            }\n            if (element instanceof ContentControl || this.startContent || this.blockContent) {\n                if (ended) {\n                    this.startContent = false;\n                    break;\n                }\n                this.writeInlinesContentControl(element, line, inlines, j);\n                continue;\n            }\n            inline = this.writeInline(element);\n            if (!isNullOrUndefined(inline)) {\n                inlines[inlines.length] = inline;\n                if (length > offset || ended) {\n                    if (inline.hasOwnProperty(textProperty[this.keywordIndex])) {\n                        var startIndex = length - element.length;\n                        var indexInInline = offset - startIndex;\n                        var endIndex = ended ? this.endOffset - startIndex : element.length;\n                        inline[textProperty[this.keywordIndex]] = inline[textProperty[this.keywordIndex]].substring(indexInInline, endIndex);\n                    }\n                    offset = -1;\n                }\n            }\n            if (ended) {\n                break;\n            }\n        }\n    };\n    SfdtExport.prototype.writeInlinesFootNote = function (element) {\n        this.isWriteInlinesFootNote = true;\n        var inline = {};\n        inline[footnoteTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getFootnoteTypeEnumValue(element.footnoteType) : element.footnoteType;\n        inline[characterFormatProperty[this.keywordIndex]] = {};\n        inline[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(element.characterFormat, this.keywordIndex);\n        inline[blocksProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < element.bodyWidget.childWidgets.length; i++) {\n            this.writeBlock(element.bodyWidget.childWidgets[i], 0, inline[blocksProperty[this.keywordIndex]]);\n        }\n        inline[symbolCodeProperty[this.keywordIndex]] = element.symbolCode;\n        inline[symbolFontNameProperty[this.keywordIndex]] = element.symbolFontName;\n        inline[customMarkerProperty[this.keywordIndex]] = element.customMarker;\n        this.writeInlineRevisions(inline, element);\n        this.isWriteInlinesFootNote = false;\n        return inline;\n    };\n    SfdtExport.prototype.writeInlinesContentControl = function (element, lineWidget, inlines, i) {\n        if (element instanceof ContentControl) {\n            if (element.contentControlWidgetType === 'Block') {\n                this.isBlockClosed = false;\n                if (this.blockContent && element.type === 0) {\n                    this.nestedBlockContent = true;\n                    return true;\n                }\n                else if (this.nestedBlockContent && element.type === 1) {\n                    this.nestedBlockContent = false;\n                    return true;\n                }\n                this.blockContent = (element.type === 0) ? true : false;\n                if (lineWidget.children[i - 1] instanceof ContentControl) {\n                    if (lineWidget.children[i - 1].contentControlWidgetType === 'Block') {\n                        this.blockContent = true;\n                    }\n                }\n                if (!this.blockContent) {\n                    this.isBlockClosed = true;\n                }\n                return true;\n            }\n        }\n        if (element instanceof ContentControl) {\n            if (this.startContent && element.type === 0) {\n                this.nestedContent = true;\n                return true;\n            }\n            else if (this.startContent && this.nestedContent) {\n                var inline = {};\n                inline[inlinesProperty[this.keywordIndex]] = this.contentInline;\n                if (this.contentInline.length > 0) {\n                    var nestedContent = this.nestedContentProperty(lineWidget.children[i + 1], inline);\n                    inlines.push(nestedContent);\n                    this.contentInline = [];\n                }\n                if (this.multipleLineContent) {\n                    inline = inlines[inlines.length - 1];\n                    this.nestedContentProperty(lineWidget.children[i + 1], inline);\n                    this.multipleLineContent = false;\n                }\n                this.nestedContent = false;\n                return true;\n            }\n            this.contentType = element.contentControlWidgetType;\n            this.startContent = (element.type === 0) ? true : false;\n            return true;\n        }\n        if (this.startContent && ((this.contentType === 'Inline'))) {\n            if (this.multipleLineContent) {\n                this.inlineContentControl(element, lineWidget.children[i + 1], inlines);\n                this.contentInline = [];\n            }\n            else {\n                var contentinline = this.inlineContentControl(element, lineWidget.children[i + 1]);\n                if (!isNullOrUndefined(contentinline)) {\n                    if (this.nestedContent && this.multipleLineContent) {\n                        var inline = {};\n                        inline[inlinesProperty[this.keywordIndex]] = this.contentInline;\n                        inlines.push(inline);\n                        this.contentInline = [];\n                    }\n                    else {\n                        inlines.push(contentinline);\n                        this.contentInline = [];\n                        return false;\n                    }\n                }\n            }\n        }\n        else {\n            var inline = this.writeInline(element);\n            if (!isNullOrUndefined(inline)) {\n                inlines.push(inline);\n            }\n        }\n    };\n    SfdtExport.prototype.createParagraph = function (paragraphWidget) {\n        var paragraph = {};\n        var isParaSelected = false;\n        var isListPara = false;\n        if (this.documentHelper.selection && !this.documentHelper.selection.isEmpty && !this.isExport) {\n            var endPos = this.documentHelper.selection.end;\n            if (!this.documentHelper.selection.isForward) {\n                endPos = this.documentHelper.selection.start;\n            }\n            var lastLine = endPos.paragraph.childWidgets[endPos.paragraph.childWidgets.length - 1];\n            isListPara = !isNullOrUndefined(paragraphWidget.paragraphFormat.listFormat.list);\n            isParaSelected = this.documentHelper.selection.isParagraphLastLine(lastLine) && endPos.currentWidget === lastLine\n                && (endPos.offset === this.documentHelper.selection.getLineLength(lastLine) + 1 || (!(paragraphWidget.indexInOwner == endPos.paragraph.indexInOwner) && isListPara));\n        }\n        else {\n            isParaSelected = true;\n        }\n        paragraph[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(isParaSelected ? paragraphWidget.paragraphFormat : new WParagraphFormat(paragraphWidget), this.keywordIndex);\n        paragraph[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(isParaSelected ? paragraphWidget.characterFormat : new WCharacterFormat(paragraphWidget), this.keywordIndex);\n        paragraph[inlinesProperty[this.keywordIndex]] = [];\n        return paragraph;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeCharacterFormat = function (format, keywordIndex, isInline) {\n        var characterFormat = {};\n        HelperMethods.writeCharacterFormat(characterFormat, isInline, format, keywordIndex);\n        characterFormat[boldBidiProperty[keywordIndex]] = isInline ? HelperMethods.getBoolInfo(format.boldBidi, keywordIndex) : format.getValue('boldBidi');\n        characterFormat[italicBidiProperty[keywordIndex]] = isInline ? HelperMethods.getBoolInfo(format.italicBidi, keywordIndex) : format.getValue('italicBidi');\n        characterFormat[fontSizeBidiProperty[keywordIndex]] = isInline ? format.fontSizeBidi : format.getValue('fontSizeBidi');\n        if (format.revisions.length > 0) {\n            characterFormat[revisionIdsProperty[keywordIndex]] = [];\n            for (var x = 0; x < format.revisions.length; x++) {\n                characterFormat[revisionIdsProperty[keywordIndex]].push(format.revisions[x].revisionID);\n            }\n        }\n        if (this.writeInlineStyles && !isInline) {\n            characterFormat[inlineFormatProperty[keywordIndex]] = this.writeCharacterFormat(format, keywordIndex, true);\n        }\n        return characterFormat;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeParagraphFormat = function (format, keywordIndex, isInline) {\n        var paragraphFormat = {};\n        // this.keywordIndex = isNullOrUndefined(this.keywordIndex) ? 0 : this.keywordIndex;\n        HelperMethods.writeParagraphFormat(paragraphFormat, isInline, format, keywordIndex);\n        paragraphFormat[listFormatProperty[keywordIndex]] = this.writeListFormat(format.listFormat, isInline);\n        paragraphFormat[tabsProperty[keywordIndex]] = this.writeTabs(format.tabs);\n        if (this.writeInlineStyles && !isInline) {\n            paragraphFormat[inlineFormatProperty[keywordIndex]] = this.writeParagraphFormat(format, keywordIndex, true);\n        }\n        return paragraphFormat;\n    };\n    SfdtExport.prototype.writeThemes = function (source) {\n        var themes = {};\n        themes[fontSchemeProperty[this.keywordIndex]] = {};\n        themes[fontSchemeProperty[this.keywordIndex]][fontSchemeNameProperty[this.keywordIndex]] = source.fontScheme.fontSchemeName;\n        themes[fontSchemeProperty[this.keywordIndex]][majorFontSchemeProperty[this.keywordIndex]] = this.writeMajorMinorFontScheme(source.fontScheme.majorFontScheme);\n        themes[fontSchemeProperty[this.keywordIndex]][minorFontSchemeProperty[this.keywordIndex]] = this.writeMajorMinorFontScheme(source.fontScheme.minorFontScheme);\n        return themes;\n    };\n    SfdtExport.prototype.writeMajorMinorFontScheme = function (source) {\n        var majorMinorFontScheme = {};\n        majorMinorFontScheme[fontSchemeListProperty[this.keywordIndex]] = this.writeFontSchemeList(source.fontSchemeList);\n        var keys = source.fontTypeface.keys;\n        var fontTypeface = {};\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            fontTypeface[key] = source.fontTypeface.get(key);\n        }\n        majorMinorFontScheme[fontTypefaceProperty[this.keywordIndex]] = fontTypeface;\n        return majorMinorFontScheme;\n    };\n    SfdtExport.prototype.writeFontSchemeList = function (source) {\n        var _this = this;\n        var fontSchemeStructs = [];\n        source.forEach(function (val) {\n            var schemeStruct = {};\n            schemeStruct[nameProperty[_this.keywordIndex]] = val.name;\n            schemeStruct[typefaceProperty[_this.keywordIndex]] = val.typeface;\n            schemeStruct[panoseProperty[_this.keywordIndex]] = val.panose;\n            fontSchemeStructs.push(schemeStruct);\n        });\n        return fontSchemeStructs;\n    };\n    SfdtExport.prototype.writeTabs = function (tabStops) {\n        if (isNullOrUndefined(tabStops) || tabStops.length < 1) {\n            return undefined;\n        }\n        var tabs = [];\n        for (var i = 0; i < tabStops.length; i++) {\n            var tabStop = tabStops[i];\n            var tab = {};\n            tab[positionProperty[this.keywordIndex]] = tabStop.position;\n            tab[deletePositionProperty[this.keywordIndex]] = tabStop.deletePosition;\n            tab[tabJustificationProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTabJustificationEnumValue(tabStop.tabJustification) : tabStop.tabJustification;\n            tab[tabLeaderProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTabLeaderEnumValue(tabStop.tabLeader) : tabStop.tabLeader;\n            tabs.push(tab);\n        }\n        return tabs;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeListFormat = function (format, isInline) {\n        var listFormat = {};\n        var listIdValue = format.getValue('listId');\n        if (!isNullOrUndefined(listIdValue)) {\n            listFormat[listIdProperty[this.keywordIndex]] = listIdValue;\n            if (isNullOrUndefined(this.lists)) {\n                this.lists = [];\n            }\n            if (this.lists.indexOf(format.listId) < 0) {\n                this.lists.push(format.listId);\n            }\n        }\n        var listLevelNumber = format.getValue('listLevelNumber');\n        if (!isNullOrUndefined(listLevelNumber)) {\n            listFormat[listLevelNumberProperty[this.keywordIndex]] = listLevelNumber;\n        }\n        var nsid = format.getValue('nsid');\n        if (!isNullOrUndefined(nsid)) {\n            listFormat[nsidProperty] = nsid;\n        }\n        return listFormat;\n    };\n    SfdtExport.prototype.writeTable = function (tableWidget, table, index, blocks) {\n        var widget = tableWidget.childWidgets[index];\n        if (widget instanceof TableRowWidget) {\n            if (this.writeRow(widget, table[rowsProperty[this.keywordIndex]])) {\n                return undefined;\n            }\n        }\n        var next = tableWidget;\n        do {\n            tableWidget = next;\n            next = tableWidget.nextSplitWidget;\n        } while (next instanceof BlockWidget);\n        next = tableWidget.nextRenderedWidget;\n        return (next instanceof BlockWidget && next.containerWidget.index === tableWidget.containerWidget.index) ? next : undefined;\n    };\n    SfdtExport.prototype.writeRow = function (rowWidget, rows) {\n        var next = rowWidget;\n        do {\n            rowWidget = next;\n            next = this.writeRowInternal(next, rows);\n            if (rowWidget === next) {\n                return true;\n            }\n        } while (next instanceof TableRowWidget);\n        return false;\n    };\n    SfdtExport.prototype.writeRowInternal = function (rowWidget, rows) {\n        if (!(rowWidget instanceof TableRowWidget)) {\n            return rowWidget;\n        }\n        if (!rowWidget.isCellsHaveSameWidthUnit()) {\n            rowWidget.updateUniformWidthUnitForCells();\n        }\n        var row = this.createRow(rowWidget);\n        rows.push(row);\n        for (var i = 0; i < rowWidget.childWidgets.length; i++) {\n            var widget = rowWidget.childWidgets[i];\n            if (widget instanceof TableCellWidget) {\n                if (rowWidget.index === widget.rowIndex\n                    && (isNullOrUndefined(this.startColumnIndex) || widget.columnIndex >= this.startColumnIndex)\n                    && (isNullOrUndefined(this.endColumnIndex) || widget.columnIndex < this.endColumnIndex)) {\n                    if (this.writeCell(widget, row[cellsProperty[this.keywordIndex]])) {\n                        return rowWidget;\n                    }\n                }\n            }\n        }\n        var next = rowWidget;\n        var skip = false;\n        do {\n            rowWidget = next;\n            next = rowWidget.nextRenderedWidget;\n            if (!isNullOrUndefined(rowWidget.ownerTable.bodyWidget) && next && ((rowWidget.ownerTable.index !== next.ownerTable.index &&\n                rowWidget.ownerTable.bodyWidget.sectionIndex === next.ownerTable.bodyWidget.sectionIndex)\n                || rowWidget.ownerTable.bodyWidget.sectionIndex !== next.ownerTable.bodyWidget.sectionIndex)) {\n                next = undefined;\n            }\n            skip = !isNullOrUndefined(rowWidget.nextSplitWidget) && rowWidget.childWidgets.length !== next.childWidgets.length;\n        } while (next instanceof TableRowWidget && next.index === rowWidget.index && !skip);\n        return next;\n    };\n    SfdtExport.prototype.writeCell = function (cellWidget, cells) {\n        var cell = this.createCell(cellWidget);\n        cells.push(cell);\n        var firstBlock = cellWidget.firstChild;\n        do {\n            firstBlock = this.writeBlock(firstBlock, 0, cell[blocksProperty[this.keywordIndex]]);\n        } while (firstBlock);\n        return this.endCell instanceof TableCellWidget ? this.endCell.cellFormat === cellWidget.cellFormat : false;\n    };\n    SfdtExport.prototype.createTable = function (tableWidget) {\n        var table = {};\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = 0;\n        }\n        table[rowsProperty[this.keywordIndex]] = [];\n        table[gridProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < tableWidget.tableHolder.columns.length; i++) {\n            table[gridProperty[this.keywordIndex]][i] = tableWidget.tableHolder.columns[i].preferredWidth;\n        }\n        table[tableFormatProperty[this.keywordIndex]] = this.writeTableFormat(tableWidget.tableFormat, this.keywordIndex);\n        table[descriptionProperty[this.keywordIndex]] = tableWidget.tableFormat.description;\n        table[titleProperty[this.keywordIndex]] = tableWidget.tableFormat.title;\n        table[columnCountProperty[this.keywordIndex]] = tableWidget.tableHolder.columns.length;\n        this.writeTablePositioning(table, tableWidget);\n        return table;\n    };\n    SfdtExport.prototype.writeTablePositioning = function (table, tableWidget) {\n        if (tableWidget.wrapTextAround) {\n            table[wrapTextAroundProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(tableWidget.wrapTextAround, this.keywordIndex);\n            table[positioningProperty[this.keywordIndex]] = {};\n            table[positioningProperty[this.keywordIndex]][allowOverlapProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(tableWidget.positioning.allowOverlap, this.keywordIndex);\n            if (!isNullOrUndefined(tableWidget.positioning.distanceBottom)) {\n                table[positioningProperty[this.keywordIndex]][distanceBottomProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceBottom);\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.distanceLeft)) {\n                table[positioningProperty[this.keywordIndex]][distanceLeftProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceLeft);\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.distanceRight)) {\n                table[positioningProperty[this.keywordIndex]][distanceRightProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceRight);\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.distanceTop)) {\n                table[positioningProperty[this.keywordIndex]][distanceTopProperty[this.keywordIndex]] = HelperMethods.convertPixelToPoint(tableWidget.positioning.distanceTop);\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.verticalAlignment)) {\n                table[positioningProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableVerticalPositionEnumValue(tableWidget.positioning.verticalAlignment) : tableWidget.positioning.verticalAlignment;\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.verticalOrigin)) {\n                table[positioningProperty[this.keywordIndex]][verticalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableVerticalRelationEnumValue(tableWidget.positioning.verticalOrigin) : tableWidget.positioning.verticalOrigin;\n            }\n            table[positioningProperty[this.keywordIndex]][verticalPositionProperty[this.keywordIndex]] = tableWidget.positioning.verticalPosition;\n            if (!isNullOrUndefined(tableWidget.positioning.horizontalAlignment)) {\n                table[positioningProperty[this.keywordIndex]][horizontalAlignmentProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableHorizontalPositionEnumValue(tableWidget.positioning.horizontalAlignment) : tableWidget.positioning.horizontalAlignment;\n            }\n            if (!isNullOrUndefined(tableWidget.positioning.horizontalOrigin)) {\n                table[positioningProperty[this.keywordIndex]][horizontalOriginProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getTableHorizontalRelationEnumValue(tableWidget.positioning.horizontalOrigin) : tableWidget.positioning.horizontalOrigin;\n            }\n            table[positioningProperty[this.keywordIndex]][horizontalPositionProperty[this.keywordIndex]] = tableWidget.positioning.horizontalPosition;\n        }\n    };\n    SfdtExport.prototype.createRow = function (rowWidget) {\n        var row = {};\n        row[cellsProperty[this.keywordIndex]] = [];\n        row[rowFormatProperty[this.keywordIndex]] = this.writeRowFormat(rowWidget.rowFormat, this.keywordIndex);\n        if (rowWidget.hasOwnProperty('contentControlProperties')) {\n            row[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(rowWidget.contentControlProperties);\n        }\n        return row;\n    };\n    SfdtExport.prototype.createCell = function (cellWidget) {\n        var cell = {};\n        cell[blocksProperty[this.keywordIndex]] = [];\n        cell[cellFormatProperty[this.keywordIndex]] = this.writeCellFormat(cellWidget.cellFormat, this.keywordIndex);\n        cell[columnIndexProperty[this.keywordIndex]] = cellWidget.columnIndex;\n        if (cellWidget.hasOwnProperty('contentControlProperties')) {\n            cell[contentControlPropertiesProperty[this.keywordIndex]] = this.contentControlProperty(cellWidget.contentControlProperties);\n        }\n        return cell;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeShading = function (wShading, keyIndex) {\n        var shading = {};\n        shading[backgroundColorProperty[keyIndex]] = wShading.hasValue('backgroundColor') ? wShading.backgroundColor : undefined;\n        shading[foregroundColorProperty[keyIndex]] = wShading.hasValue('foregroundColor') ? wShading.foregroundColor : undefined;\n        shading[textureProperty[keyIndex]] = wShading.hasValue('textureStyle') ?\n            keyIndex == 1 ? this.getTextureStyleEnumValue(wShading.textureStyle) : wShading.textureStyle : undefined;\n        return shading;\n    };\n    SfdtExport.prototype.writeBorders = function (wBorders, keyIndex) {\n        var borders = {};\n        borders[topProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.top, keyIndex);\n        borders[leftProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.left, keyIndex);\n        borders[rightProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.right, keyIndex);\n        borders[bottomProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.bottom, keyIndex);\n        borders[diagonalDownProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.diagonalDown, keyIndex);\n        borders[diagonalUpProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.diagonalUp, keyIndex);\n        borders[horizontalProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.horizontal, keyIndex);\n        borders[verticalProperty[keyIndex]] = HelperMethods.writeBorder(wBorders.vertical, keyIndex);\n        return borders;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeCellFormat = function (wCellFormat, keyIndex) {\n        var cellFormat = {};\n        cellFormat[bordersProperty[keyIndex]] = this.writeBorders(wCellFormat.borders, keyIndex);\n        cellFormat[shadingProperty[keyIndex]] = this.writeShading(wCellFormat.shading, keyIndex);\n        cellFormat[topMarginProperty[keyIndex]] = wCellFormat.hasValue('topMargin') ? wCellFormat.topMargin : undefined;\n        cellFormat[rightMarginProperty[keyIndex]] = wCellFormat.hasValue('rightMargin') ? wCellFormat.rightMargin : undefined;\n        cellFormat[leftMarginProperty[keyIndex]] = wCellFormat.hasValue('leftMargin') ? wCellFormat.leftMargin : undefined;\n        cellFormat[bottomMarginProperty[keyIndex]] = wCellFormat.hasValue('bottomMargin') ? wCellFormat.bottomMargin : undefined;\n        cellFormat[preferredWidthProperty[keyIndex]] = wCellFormat.hasValue('preferredWidth') ? wCellFormat.preferredWidth : undefined;\n        cellFormat[preferredWidthTypeProperty[keyIndex]] = wCellFormat.hasValue('preferredWidthType') ? keyIndex == 1 ? this.getWidthTypeEnumValue(wCellFormat.preferredWidthType) : wCellFormat.preferredWidthType : undefined;\n        cellFormat[cellWidthProperty[keyIndex]] = wCellFormat.hasValue('cellWidth') ? wCellFormat.cellWidth : undefined;\n        cellFormat[columnSpanProperty[keyIndex]] = wCellFormat.columnSpan;\n        cellFormat[rowSpanProperty[keyIndex]] = wCellFormat.rowSpan;\n        cellFormat[verticalAlignmentProperty[keyIndex]] = wCellFormat.hasValue('verticalAlignment') ? keyIndex == 1 ? this.getCellVerticalAlignmentEnumValue(wCellFormat.verticalAlignment) : wCellFormat.verticalAlignment : undefined;\n        return cellFormat;\n    };\n    SfdtExport.prototype.writeRowFormat = function (wRowFormat, keyIndex) {\n        var rowFormat = {};\n        var revisionIds = [];\n        this.assignRowFormat(rowFormat, wRowFormat, keyIndex);\n        for (var j = 0; j < wRowFormat.revisions.length; j++) {\n            rowFormat[revisionIdsProperty[keyIndex]] = this.writeRowRevisions(wRowFormat.revisions[j], revisionIds);\n        }\n        return rowFormat;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.assignRowFormat = function (rowFormat, wRowFormat, keyIndex) {\n        rowFormat[heightProperty[keyIndex]] = wRowFormat.hasValue('height') ? wRowFormat.height : undefined;\n        rowFormat[allowBreakAcrossPagesProperty[keyIndex]] = wRowFormat.hasValue('allowBreakAcrossPages') ? HelperMethods.getBoolInfo(wRowFormat.allowBreakAcrossPages, this.keywordIndex) : undefined;\n        rowFormat[heightTypeProperty[keyIndex]] = wRowFormat.hasValue('heightType') ? this.keywordIndex == 1 ? this.getHeighTypeEnumValue(wRowFormat.heightType) : wRowFormat.heightType : undefined;\n        rowFormat[isHeaderProperty[keyIndex]] = wRowFormat.hasValue('isHeader') ? HelperMethods.getBoolInfo(wRowFormat.isHeader, this.keywordIndex) : undefined;\n        rowFormat[bordersProperty[keyIndex]] = this.writeBorders(wRowFormat.borders, keyIndex);\n        rowFormat[gridBeforeProperty[keyIndex]] = wRowFormat.gridBefore;\n        rowFormat[gridBeforeWidthProperty[keyIndex]] = wRowFormat.hasValue('gridBeforeWidth') ? wRowFormat.gridBeforeWidth : undefined;\n        rowFormat[gridBeforeWidthTypeProperty[keyIndex]] = wRowFormat.hasValue('gridBeforeWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wRowFormat.gridBeforeWidthType) : wRowFormat.gridBeforeWidthType : undefined;\n        rowFormat[gridAfterProperty[keyIndex]] = wRowFormat.gridAfter;\n        rowFormat[gridAfterWidthProperty[keyIndex]] = wRowFormat.hasValue('gridAfterWidth') ? wRowFormat.gridAfterWidth : undefined;\n        rowFormat[gridAfterWidthTypeProperty[keyIndex]] = wRowFormat.hasValue('gridAfterWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wRowFormat.gridAfterWidthType) : wRowFormat.gridAfterWidthType : undefined;\n        rowFormat[leftMarginProperty[keyIndex]] = wRowFormat.hasValue('leftMargin') ? wRowFormat.leftMargin : undefined;\n        rowFormat[topMarginProperty[keyIndex]] = wRowFormat.hasValue('topMargin') ? wRowFormat.topMargin : undefined;\n        rowFormat[rightMarginProperty[keyIndex]] = wRowFormat.hasValue('rightMargin') ? wRowFormat.rightMargin : undefined;\n        rowFormat[bottomMarginProperty[keyIndex]] = wRowFormat.hasValue('bottomMargin') ? wRowFormat.bottomMargin : undefined;\n        rowFormat[leftIndentProperty[keyIndex]] = wRowFormat.hasValue('leftIndent') ? wRowFormat.leftIndent : undefined;\n    };\n    SfdtExport.prototype.writeRowRevisions = function (wrevisions, revisionIds) {\n        if (this.selectedRevisionId.indexOf(wrevisions.revisionID) === -1) {\n            this.selectedRevisionId.push(wrevisions.revisionID);\n        }\n        revisionIds.push(wrevisions.revisionID);\n        return revisionIds;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeTableFormat = function (wTableFormat, keyIndex) {\n        var tableFormat = {};\n        tableFormat[bordersProperty[keyIndex]] = this.writeBorders(wTableFormat.borders, keyIndex);\n        tableFormat[shadingProperty[keyIndex]] = this.writeShading(wTableFormat.shading, keyIndex);\n        tableFormat[cellSpacingProperty[keyIndex]] = wTableFormat.hasValue('cellSpacing') ? wTableFormat.cellSpacing : undefined;\n        tableFormat[leftIndentProperty[keyIndex]] = wTableFormat.hasValue('leftIndent') ? wTableFormat.leftIndent : undefined;\n        tableFormat[tableAlignmentProperty[keyIndex]] = wTableFormat.hasValue('tableAlignment') ? this.keywordIndex == 1 ? this.getTableAlignmentEnumValue(wTableFormat.tableAlignment) : wTableFormat.tableAlignment : undefined;\n        tableFormat[topMarginProperty[keyIndex]] = wTableFormat.hasValue('topMargin') ? wTableFormat.topMargin : undefined;\n        tableFormat[rightMarginProperty[keyIndex]] = wTableFormat.hasValue('rightMargin') ? wTableFormat.rightMargin : undefined;\n        tableFormat[leftMarginProperty[keyIndex]] = wTableFormat.hasValue('leftMargin') ? wTableFormat.leftMargin : undefined;\n        tableFormat[bottomMarginProperty[keyIndex]] = wTableFormat.hasValue('bottomMargin') ? wTableFormat.bottomMargin : undefined;\n        tableFormat[preferredWidthProperty[keyIndex]] = wTableFormat.hasValue('preferredWidth') ? wTableFormat.preferredWidth : undefined;\n        tableFormat[preferredWidthTypeProperty[keyIndex]] = wTableFormat.hasValue('preferredWidthType') ? this.keywordIndex == 1 ? this.getWidthTypeEnumValue(wTableFormat.preferredWidthType) : wTableFormat.preferredWidthType : undefined;\n        tableFormat[bidiProperty[keyIndex]] = wTableFormat.hasValue('bidi') ? HelperMethods.getBoolInfo(wTableFormat.bidi, this.keywordIndex) : undefined;\n        tableFormat[allowAutoFitProperty[keyIndex]] = wTableFormat.hasValue('allowAutoFit') ? HelperMethods.getBoolInfo(wTableFormat.allowAutoFit, this.keywordIndex) : undefined;\n        tableFormat[styleNameProperty[keyIndex]] = !isNullOrUndefined(wTableFormat.styleName) ? wTableFormat.styleName : undefined;\n        return tableFormat;\n    };\n    SfdtExport.prototype.footnotes = function (documentHelper) {\n        this.isWriteEndFootNote = true;\n        for (var i = 0; i < documentHelper.footnotes.separator.length; i++) {\n            this.seprators(documentHelper);\n        }\n        this.isWriteEndFootNote = false;\n    };\n    SfdtExport.prototype.seprators = function (documentHelper) {\n        if (documentHelper.footnotes.separator.length > 0) {\n            this.document[footnotesProperty[this.keywordIndex]] = {};\n            this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.footnotes.separator.length; i++) {\n                this.writeBlock(documentHelper.footnotes.separator[i], 0, this.document[footnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]]);\n            }\n        }\n        if (documentHelper.footnotes.continuationSeparator.length > 0) {\n            this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.footnotes.continuationSeparator.length; i++) {\n                this.writeBlock(documentHelper.footnotes.continuationSeparator[i], 0, this.document[footnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]]);\n            }\n        }\n        if (documentHelper.footnotes.continuationNotice.length > 0) {\n            this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.footnotes.continuationNotice.length; i++) {\n                this.writeBlock(documentHelper.footnotes.continuationNotice[i], 0, this.document[footnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]);\n            }\n        }\n    };\n    SfdtExport.prototype.endnotes = function (documentHelper) {\n        this.isWriteEndFootNote = true;\n        for (var i = 0; i < this.documentHelper.endnotes.separator.length; i++) {\n            this.endnoteSeparator(documentHelper);\n        }\n        this.isWriteEndFootNote = false;\n    };\n    SfdtExport.prototype.endnoteSeparator = function (documentHelper) {\n        if (documentHelper.endnotes.separator.length > 0) {\n            this.document[endnotesProperty[this.keywordIndex]] = {};\n            this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.endnotes.separator.length; i++) {\n                this.writeBlock(documentHelper.endnotes.separator[i], 0, this.document[endnotesProperty[this.keywordIndex]][separatorProperty[this.keywordIndex]]);\n            }\n        }\n        if (documentHelper.endnotes.continuationSeparator.length > 0) {\n            this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.endnotes.continuationSeparator.length; i++) {\n                this.writeBlock(documentHelper.endnotes.continuationSeparator[i], 0, this.document[endnotesProperty[this.keywordIndex]][continuationSeparatorProperty[this.keywordIndex]]);\n            }\n        }\n        if (documentHelper.endnotes.continuationNotice.length > 0) {\n            this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < documentHelper.endnotes.continuationNotice.length; i++) {\n                this.writeBlock(documentHelper.endnotes.continuationNotice[i], 0, this.document[endnotesProperty[this.keywordIndex]][continuationNoticeProperty[this.keywordIndex]]);\n            }\n        }\n    };\n    SfdtExport.prototype.writeStyles = function (documentHelper) {\n        var styles = [];\n        this.document[stylesProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.styles.length; i++) {\n            this.document[stylesProperty[this.keywordIndex]].push(this.writeStyle(documentHelper.styles.getItem(i)));\n        }\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeStyle = function (style) {\n        var wStyle = {};\n        wStyle[nameProperty[this.keywordIndex]] = style.name;\n        if (style.type === 'Paragraph') {\n            wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n            wStyle[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(style.paragraphFormat, this.keywordIndex);\n            wStyle[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(style.characterFormat, this.keywordIndex);\n        }\n        if (style.type === 'Character') {\n            wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n            wStyle[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(style.characterFormat, this.keywordIndex);\n        }\n        if (style.type === 'Table') {\n            wStyle[typeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getStyleTypeEnumValue(style.type) : style.type;\n        }\n        if (!isNullOrUndefined(style.basedOn)) {\n            wStyle[basedOnProperty[this.keywordIndex]] = style.basedOn.name;\n        }\n        if (!isNullOrUndefined(style.link)) {\n            wStyle[linkProperty[this.keywordIndex]] = style.link.name;\n        }\n        if (!isNullOrUndefined(style.next)) {\n            wStyle[nextProperty[this.keywordIndex]] = style.next.name;\n        }\n        return wStyle;\n    };\n    SfdtExport.prototype.writeRevisions = function (documentHelper) {\n        this.document[revisionsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.owner.revisions.changes.length; i++) {\n            if (this.isExport ||\n                (!this.isExport && !this.owner.enableTrackChanges && this.selectedRevisionId.indexOf(documentHelper.owner.revisions.changes[i].revisionID) !== -1)) {\n                this.document[revisionsProperty[this.keywordIndex]].push(this.writeRevision(documentHelper.owner.revisions.changes[i]));\n            }\n        }\n    };\n    SfdtExport.prototype.writeRevision = function (revisions) {\n        var revision = {};\n        revision[authorProperty[this.keywordIndex]] = revisions.author;\n        revision[dateProperty[this.keywordIndex]] = revisions.date;\n        revision[revisionTypeProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getRevisionTypeEnumValue(revisions.revisionType) : revisions.revisionType;\n        revision[revisionIdProperty[this.keywordIndex]] = revisions.revisionID;\n        return revision;\n    };\n    SfdtExport.prototype.writeComments = function (documentHelper) {\n        this.document[commentsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.comments.length; i++) {\n            if (this.isExport ||\n                (!this.isExport && this.selectedCommentsId.indexOf(this.documentHelper.comments[i].commentId) !== -1)) {\n                this.document[commentsProperty[this.keywordIndex]].push(this.writeComment(this.documentHelper.comments[i]));\n            }\n        }\n    };\n    SfdtExport.prototype.writeCustomXml = function (documentHelper) {\n        this.document[customXmlProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.customXmlData.length; i++) {\n            var customXml = {};\n            var key = documentHelper.customXmlData.keys[i];\n            customXml[itemIDProperty[this.keywordIndex]] = key;\n            var xmlValue = this.documentHelper.customXmlData.get(key);\n            customXml[xmlProperty[this.keywordIndex]] = xmlValue;\n            this.document[customXmlProperty[this.keywordIndex]].push(customXml);\n        }\n    };\n    SfdtExport.prototype.writeImages = function (documentHelper) {\n        this.document[imagesProperty[this.keywordIndex]] = {};\n        for (var i = 0; i < this.images.length; i++) {\n            var key = this.images[i];\n            var base64ImageString = documentHelper.images.get(key);\n            this.document[imagesProperty[this.keywordIndex]][key] = base64ImageString;\n        }\n    };\n    SfdtExport.prototype.writeComment = function (comments) {\n        var comment = {};\n        comment[commentIdProperty[this.keywordIndex]] = comments.commentId;\n        comment[authorProperty[this.keywordIndex]] = comments.author;\n        comment[dateProperty[this.keywordIndex]] = comments.date;\n        comment[blocksProperty[this.keywordIndex]] = [];\n        comment[blocksProperty[this.keywordIndex]].push(this.commentInlines(comments.text, comments.mentions));\n        comment[doneProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(comments.isResolved, this.keywordIndex);\n        comment[replyCommentsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < comments.replyComments.length; i++) {\n            comment[replyCommentsProperty[this.keywordIndex]].push(this.writeComment(comments.replyComments[i]));\n        }\n        return comment;\n    };\n    SfdtExport.prototype.commentInlines = function (ctext, mentions) {\n        var blocks = {};\n        blocks[inlinesProperty[this.keywordIndex]] = [];\n        var inlines = {};\n        var dataName = \"\";\n        var text = \"\";\n        var url = \"\";\n        if (mentions && mentions.length > 0) {\n            for (var i = 0; i < mentions.length; i++) {\n                dataName = mentions[i].Name;\n                if (ctext.indexOf(dataName) !== -1 && mentions[i].Name) {\n                    var temp = ctext.split(\"&nbsp;\");\n                    text = temp.length > 1 ? temp[1] : temp[0];\n                    dataName = mentions[i].Name;\n                    url = mentions[i].EmailId;\n                }\n            }\n            blocks = this.serializeMentions(dataName, url, blocks);\n        }\n        if (ctext.indexOf('span') !== -1) {\n            var email = ctext.match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/);\n            var matchText = ctext.match(/&nbsp;(.+)/);\n            var text_1 = matchText ? matchText[1] : '';\n            ctext = email + \" \" + text_1;\n        }\n        inlines[textProperty[this.keywordIndex]] = mentions.length > 0 ? text : ctext;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n        return blocks;\n    };\n    SfdtExport.prototype.serializeMentions = function (dataName, url, blocks) {\n        var inlines = {};\n        inlines[characterFormatProperty[this.keywordIndex]] = {};\n        inlines[\"fieldType\"] = 0;\n        inlines[\"hasFieldEnd\"] = true;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines);\n        var inlines2 = {};\n        inlines2[characterFormatProperty[this.keywordIndex]] = {};\n        inlines2[textProperty[this.keywordIndex]] = ' HYPERLINK \\\"' + url + '\\\" ';\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines2);\n        var inlines3 = {};\n        inlines3[characterFormatProperty[this.keywordIndex]] = {};\n        inlines3[\"fieldType\"] = 2;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines3);\n        var inlines4 = {};\n        inlines4[characterFormatProperty[this.keywordIndex]] = {\n            \"underline\": \"Single\",\n            \"fontColor\": \"#0563c1\",\n            \"bidi\": false\n        };\n        inlines4[textProperty[this.keywordIndex]] = dataName;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines4);\n        var inlines5 = {};\n        inlines5[characterFormatProperty[this.keywordIndex]] = {};\n        inlines5[\"fieldType\"] = 1;\n        blocks[inlinesProperty[this.keywordIndex]].push(inlines5);\n        return blocks;\n    };\n    SfdtExport.prototype.writeLists = function (documentHelper) {\n        var abstractLists = [];\n        this.document[listsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.lists.length; i++) {\n            var list = documentHelper.lists[i];\n            if (this.lists.indexOf(list.listId) > -1) {\n                this.document[listsProperty[this.keywordIndex]].push(this.writeList(list));\n                if (abstractLists.indexOf(list.abstractListId) < 0) {\n                    abstractLists.push(list.abstractListId);\n                }\n            }\n        }\n        this.document[abstractListsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < documentHelper.abstractLists.length; i++) {\n            var abstractList = documentHelper.abstractLists[i];\n            if (abstractLists.indexOf(abstractList.abstractListId) > -1) {\n                this.document[abstractListsProperty[this.keywordIndex]].push(this.writeAbstractList(abstractList));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeAbstractList = function (wAbstractList) {\n        var abstractList = {};\n        abstractList[abstractListIdProperty[this.keywordIndex]] = wAbstractList.abstractListId;\n        abstractList[nsidProperty] = wAbstractList.nsid;\n        abstractList[levelsProperty[this.keywordIndex]] = [];\n        for (var i = 0; i < wAbstractList.levels.length; i++) {\n            abstractList[levelsProperty[this.keywordIndex]][i] = this.writeListLevel(wAbstractList.levels[i]);\n        }\n        return abstractList;\n    };\n    /**\n     * @private\n     */\n    SfdtExport.prototype.writeList = function (wList) {\n        var list = {};\n        if (!isNullOrUndefined(wList)) {\n            list[abstractListIdProperty[this.keywordIndex]] = wList.abstractListId;\n            list[levelOverridesProperty[this.keywordIndex]] = [];\n            for (var i = 0; i < wList.levelOverrides.length; i++) {\n                list[levelOverridesProperty[this.keywordIndex]].push(this.writeLevelOverrides(wList.levelOverrides[i]));\n            }\n            list[listIdProperty[this.keywordIndex]] = wList.listId;\n            list[nsidProperty] = wList.nsid;\n        }\n        return list;\n    };\n    SfdtExport.prototype.writeLevelOverrides = function (wlevel) {\n        var levelOverrides = {};\n        levelOverrides[levelNumberProperty[this.keywordIndex]] = wlevel.levelNumber;\n        if (wlevel.overrideListLevel) {\n            levelOverrides[overrideListLevelProperty[this.keywordIndex]] = this.writeListLevel(wlevel.overrideListLevel);\n        }\n        levelOverrides[startAtProperty[this.keywordIndex]] = wlevel.startAt;\n        return levelOverrides;\n    };\n    SfdtExport.prototype.writeListLevel = function (wListLevel) {\n        var listLevel = {};\n        listLevel[characterFormatProperty[this.keywordIndex]] = this.writeCharacterFormat(wListLevel.characterFormat, this.keywordIndex);\n        listLevel[paragraphFormatProperty[this.keywordIndex]] = this.writeParagraphFormat(wListLevel.paragraphFormat, this.keywordIndex);\n        listLevel[isLegalStyleNumberingProperty[this.keywordIndex]] = HelperMethods.getBoolInfo(wListLevel.isLegalStyleNumbering, this.keywordIndex);\n        listLevel[followCharacterProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getFollowCharacterType(wListLevel.followCharacter) : wListLevel.followCharacter;\n        listLevel[listLevelPatternProperty[this.keywordIndex]] = this.keywordIndex == 1 ? this.getListLevelPatternEnumValue(wListLevel.listLevelPattern) : wListLevel.listLevelPattern;\n        listLevel[numberFormatProperty[this.keywordIndex]] = wListLevel.numberFormat;\n        listLevel[paraStyleNameProperty[this.keywordIndex]] = wListLevel.paraStyleName;\n        listLevel[restartLevelProperty[this.keywordIndex]] = wListLevel.restartLevel;\n        listLevel[startAtProperty[this.keywordIndex]] = wListLevel.startAt;\n        return listLevel;\n    };\n    SfdtExport.prototype.getParentBlock = function (widget) {\n        if (widget.isInsideTable) {\n            widget = this.owner.documentHelper.layout.getParentTable(widget);\n        }\n        return widget;\n    };\n    SfdtExport.prototype.getParentCell = function (cell) {\n        while (cell.ownerTable.isInsideTable) {\n            cell = cell.ownerTable.associatedCell;\n        }\n        return cell;\n    };\n    SfdtExport.prototype.getWidthTypeEnumValue = function (widthType) {\n        switch (widthType) {\n            case 'Auto':\n                return 0;\n            case 'Percent':\n                return 1;\n            case 'Point':\n                return 2;\n        }\n    };\n    SfdtExport.prototype.getTableAlignmentEnumValue = function (tableAlignment) {\n        switch (tableAlignment) {\n            case 'Left':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Right':\n                return 2;\n        }\n    };\n    SfdtExport.prototype.getTextureStyleEnumValue = function (textureStyle) {\n        switch (textureStyle) {\n            case 'TextureNone':\n                return 0;\n            case 'Texture2Pt5Percent':\n                return 1;\n            case 'Texture5Percent':\n                return 2;\n            case 'Texture7Pt5Percent':\n                return 3;\n            case 'Texture10Percent':\n                return 4;\n            case 'Texture12Pt5Percent':\n                return 5;\n            case 'Texture15Percent':\n                return 6;\n            case 'Texture17Pt5Percent':\n                return 7;\n            case 'Texture20Percent':\n                return 8;\n            case 'Texture22Pt5Percent':\n                return 9;\n            case 'Texture25Percent':\n                return 10;\n            case 'Texture27Pt5Percent':\n                return 11;\n            case 'Texture30Percent':\n                return 12;\n            case 'Texture32Pt5Percent':\n                return 13;\n            case 'Texture35Percent':\n                return 14;\n            case 'Texture37Pt5Percent':\n                return 15;\n            case 'Texture40Percent':\n                return 16;\n            case 'Texture42Pt5Percent':\n                return 17;\n            case 'Texture45Percent':\n                return 18;\n            case 'Texture47Pt5Percent':\n                return 19;\n            case 'Texture50Percent':\n                return 20;\n            case 'Texture52Pt5Percent':\n                return 21;\n            case 'Texture55Percent':\n                return 22;\n            case 'Texture57Pt5Percent':\n                return 23;\n            case 'Texture60Percent':\n                return 24;\n            case 'Texture62Pt5Percent':\n                return 25;\n            case 'Texture65Percent':\n                return 26;\n            case 'Texture67Pt5Percent':\n                return 27;\n            case 'Texture70Percent':\n                return 28;\n            case 'Texture72Pt5Percent':\n                return 29;\n            case 'Texture75Percent':\n                return 30;\n            case 'Texture77Pt5Percent':\n                return 31;\n            case 'Texture80Percent':\n                return 32;\n            case 'Texture82Pt5Percent':\n                return 33;\n            case 'Texture85Percent':\n                return 34;\n            case 'Texture87Pt5Percent':\n                return 35;\n            case 'Texture90Percent':\n                return 36;\n            case 'Texture92Pt5Percent':\n                return 37;\n            case 'Texture95Percent':\n                return 38;\n            case 'Texture97Pt5Percent':\n                return 39;\n            case 'TextureSolid':\n                return 40;\n            case 'TextureDarkHorizontal':\n                return 41;\n            case 'TextureDarkVertical':\n                return 42;\n            case 'TextureDarkDiagonalDown':\n                return 43;\n            case 'TextureDarkDiagonalUp':\n                return 44;\n            case 'TextureDarkCross':\n                return 45;\n            case 'TextureDarkDiagonalCross':\n                return 46;\n            case 'TextureHorizontal':\n                return 47;\n            case 'TextureVertical':\n                return 48;\n            case 'TextureDiagonalDown':\n                return 49;\n            case 'TextureDiagonalUp':\n                return 50;\n            case 'TextureCross':\n                return 51;\n            case 'TextureDiagonalCross':\n                return 52;\n        }\n    };\n    SfdtExport.prototype.getHeighTypeEnumValue = function (heightType) {\n        switch (heightType) {\n            case 'AtLeast':\n                return 0;\n            case 'Exactly':\n                return 1;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getCellVerticalAlignmentEnumValue = function (cellVerticalAlignment) {\n        switch (cellVerticalAlignment) {\n            case 'Top':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Bottom':\n                return 2;\n        }\n    };\n    SfdtExport.prototype.getListLevelPatternEnumValue = function (listLevelPattern) {\n        switch (listLevelPattern) {\n            case 'None':\n                return 0;\n            case 'KanjiDigit':\n            case 'Arabic':\n                return 1;\n            case 'UpRoman':\n                return 2;\n            case 'LowRoman':\n                return 3;\n            case 'UpLetter':\n                return 4;\n            case 'LowLetter':\n                return 5;\n            case 'Ordinal':\n                return 6;\n            case 'Number':\n                return 7;\n            case 'OrdinalText':\n                return 8;\n            case 'LeadingZero':\n                return 9;\n            case 'Bullet':\n                return 10;\n            case 'FarEast':\n                return 11;\n            case 'Special':\n                return 12;\n        }\n    };\n    SfdtExport.prototype.getStyleTypeEnumValue = function (styleType) {\n        switch (styleType) {\n            case 'Paragraph':\n                return 0;\n            case 'Character':\n                return 1;\n            case 'Table':\n                return 2;\n        }\n    };\n    SfdtExport.prototype.getProtectionTypeEnumValue = function (protectionType) {\n        switch (protectionType) {\n            case 'NoProtection':\n                return 0;\n            case 'ReadOnly':\n                return 1;\n            case 'FormFieldsOnly':\n                return 2;\n            case 'CommentsOnly':\n                return 3;\n            case 'RevisionsOnly':\n                return 4;\n        }\n    };\n    SfdtExport.prototype.getRevisionTypeEnumValue = function (revisionType) {\n        switch (revisionType) {\n            case 'Insertion':\n                return 1;\n            case 'Deletion':\n                return 2;\n            case 'MoveTo':\n                return 3;\n            case 'MoveFrom':\n                return 4;\n        }\n    };\n    SfdtExport.prototype.getFootnoteTypeEnumValue = function (footnoteType) {\n        switch (footnoteType) {\n            case 'Footnote':\n                return 0;\n            case 'Endnote':\n                return 1;\n        }\n    };\n    SfdtExport.prototype.getFootnoteRestartIndexEnumValue = function (footnoteRestartIndex) {\n        switch (footnoteRestartIndex) {\n            case 'DoNotRestart':\n                return 0;\n            case 'RestartForEachSection':\n                return 1;\n            case 'RestartForEachPage':\n                return 2;\n        }\n    };\n    SfdtExport.prototype.getFootEndNoteNumberFormatEnumValue = function (footEndNoteNumberFormat) {\n        switch (footEndNoteNumberFormat) {\n            case 'Arabic':\n                return 0;\n            case 'UpperCaseRoman':\n                return 1;\n            case 'LowerCaseRoman':\n                return 2;\n            case 'UpperCaseLetter':\n                return 3;\n            case 'LowerCaseLetter':\n                return 4;\n        }\n    };\n    SfdtExport.prototype.getTextVerticalAlignmentEnumValue = function (textVerticalAlignment) {\n        switch (textVerticalAlignment) {\n            case 'Top':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Bottom':\n                return 2;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getShapeVerticalAlignmentEnumValue = function (shapeVerticalAlignment) {\n        switch (shapeVerticalAlignment) {\n            case 'None':\n                return 0;\n            case 'Top':\n                return 1;\n            case 'Center':\n                return 2;\n            case 'Bottom':\n                return 3;\n            case 'Inline':\n                return 4;\n            case 'Inside':\n                return 5;\n            case 'Outside':\n                return 6;\n        }\n    };\n    SfdtExport.prototype.getShapeHorizontalAlignmentEnumValue = function (shapeHorizontalAlignment) {\n        switch (shapeHorizontalAlignment) {\n            case 'None':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Inside':\n                return 2;\n            case 'Left':\n                return 3;\n            case 'Outside':\n                return 4;\n            case 'Right':\n                return 5;\n        }\n    };\n    SfdtExport.prototype.getVerticalOriginEnumValue = function (verticalOrigin) {\n        switch (verticalOrigin) {\n            case 'Paragraph':\n                return 0;\n            case 'BottomMargin':\n                return 1;\n            case 'InsideMargin':\n                return 2;\n            case 'Line':\n                return 3;\n            case 'Margin':\n                return 4;\n            case 'OutsideMargin':\n                return 5;\n            case 'Page':\n                return 6;\n            case 'TopMargin':\n                return 7;\n        }\n    };\n    SfdtExport.prototype.getHorizontalOriginEnumValue = function (horizontalOrigin) {\n        switch (horizontalOrigin) {\n            case 'Column':\n                return 0;\n            case 'Character':\n                return 1;\n            case 'InsideMargin':\n                return 2;\n            case 'LeftMargin':\n                return 3;\n            case 'Margin':\n                return 4;\n            case 'OutsideMargin':\n                return 5;\n            case 'Page':\n                return 6;\n            case 'RightMargin':\n                return 7;\n        }\n    };\n    SfdtExport.prototype.getTableVerticalRelationEnumValue = function (tableRelation) {\n        switch (tableRelation) {\n            case 'Paragraph':\n                return 0;\n            case 'Margin':\n                return 1;\n            case 'Page':\n                return 2;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTableHorizontalRelationEnumValue = function (tableRelation) {\n        switch (tableRelation) {\n            case 'Column':\n                return 0;\n            case 'Margin':\n                return 1;\n            case 'Page':\n                return 2;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTableVerticalPositionEnumValue = function (tableVerticalPosition) {\n        switch (tableVerticalPosition) {\n            case 'None':\n                return 0;\n            case 'Top':\n                return 1;\n            case 'Center':\n                return 2;\n            case 'Bottom':\n                return 3;\n            case 'Inside':\n                return 4;\n            case 'Outside':\n                return 5;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTableHorizontalPositionEnumValue = function (tableHorizontalPosition) {\n        switch (tableHorizontalPosition) {\n            case 'Left':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Inside':\n                return 2;\n            case 'Outside':\n                return 3;\n            case 'Right':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getLineDashStyleEnumValue = function (lineDashStyle) {\n        switch (lineDashStyle) {\n            case 'Solid':\n                return 0;\n            case 'Dash':\n                return 1;\n            case 'DashDot':\n                return 2;\n            case 'DashDotDot':\n                return 3;\n            case 'DashDotGEL':\n                return 4;\n            case 'DashGEL':\n                return 5;\n            case 'Dot':\n                return 6;\n            case 'DotGEL':\n                return 7;\n            case 'LongDashDotDotGEL':\n                return 8;\n            case 'LongDashDotGEL':\n                return 9;\n            case 'LongDashGEL':\n                return 10;\n        }\n    };\n    SfdtExport.prototype.getHorizontalPositionAbsEnumValue = function (horizontalPositionAbs) {\n        switch (horizontalPositionAbs) {\n            case 'Left':\n                return 0;\n            case 'Center':\n                return 1;\n            case 'Right':\n                return 2;\n            case 'Inside':\n                return 3;\n            case 'Outside':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTabJustificationEnumValue = function (tabJustification) {\n        switch (tabJustification) {\n            case 'Left':\n                return 0;\n            case 'Bar':\n                return 1;\n            case 'Center':\n                return 2;\n            case 'Decimal':\n                return 3;\n            case 'List':\n                return 4;\n            case 'Right':\n                return 5;\n        }\n    };\n    SfdtExport.prototype.getTabLeaderEnumValue = function (tabLeader) {\n        switch (tabLeader) {\n            case 'None':\n                return 0;\n            case 'Single':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'Hyphen':\n                return 3;\n            case 'Underscore':\n                return 4;\n        }\n    };\n    SfdtExport.prototype.getTextFormFieldTypeEnumValue = function (textFormFieldType) {\n        switch (textFormFieldType) {\n            case 'Text':\n                return 0;\n            case 'Number':\n                return 1;\n            case 'Date':\n                return 2;\n            case 'Calculation':\n                return 3;\n        }\n    };\n    SfdtExport.prototype.getTextFormFieldFormatEnumValue = function (textFormFieldFormat) {\n        switch (textFormFieldFormat) {\n            case 'None':\n                return 0;\n            case 'FirstCapital':\n                return 1;\n            case 'Lowercase':\n                return 2;\n            case 'Uppercase':\n                return 3;\n            case 'Titlecase':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getCheckBoxSizeTypeEnumValue = function (checkBoxSizeType) {\n        switch (checkBoxSizeType) {\n            case 'Auto':\n                return 0;\n            case 'Exactly':\n                return 1;\n        }\n    };\n    SfdtExport.prototype.getContentControlAppearanceEnumValue = function (contentControlAppearance) {\n        switch (contentControlAppearance) {\n            case 'BoundingBox':\n                return 1;\n            case 'Hidden':\n                return 2;\n            case 'Tags':\n                return 3;\n            default:\n                return 1;\n        }\n    };\n    SfdtExport.prototype.getContentControlTypeEnumValue = function (contentControlType) {\n        switch (contentControlType) {\n            case 'RichText':\n                return 0;\n            case 'BuildingBlockGallery':\n                return 1;\n            case 'CheckBox':\n                return 2;\n            case 'ComboBox':\n                return 3;\n            case 'Date':\n                return 4;\n            case 'DropDownList':\n                return 5;\n            case 'Group':\n                return 6;\n            case 'Picture':\n                return 7;\n            case 'RepeatingSection':\n                return 8;\n            case 'Text':\n                return 9;\n        }\n    };\n    SfdtExport.prototype.getDateCalendarTypeEnumValue = function (dateCalendarType) {\n        switch (dateCalendarType) {\n            case 'Gregorian':\n                return 0;\n            case 'GregorianArabic':\n                return 1;\n            case 'GregorianEnglish':\n                return 2;\n            case 'GregorianMiddleEastFrench':\n                return 3;\n            case 'GregorianTransliteratedEnglish':\n                return 4;\n            case 'GregorianTransliteratedFrench':\n                return 5;\n            case 'Hebrew':\n                return 6;\n            case 'Hijri':\n                return 7;\n            case 'Japan':\n                return 8;\n            case 'Korean':\n                return 9;\n            case 'Saka':\n                return 10;\n            case 'Taiwan':\n                return 11;\n            case 'Thai':\n                return 12;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getDateStorageFormatEnumValue = function (dateStorageFormat) {\n        switch (dateStorageFormat) {\n            case 'DateStorageDate':\n                return 1;\n            case 'DateStorageDateTime':\n                return 2;\n            case 'DateStorageText':\n                return 3;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTextWrappingStyleEnumValue = function (textWrappingStyle) {\n        switch (textWrappingStyle) {\n            case 'Inline':\n                return 0;\n            case 'InFrontOfText':\n                return 1;\n            case 'Square':\n                return 2;\n            case 'TopAndBottom':\n                return 3;\n            case 'Behind':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    SfdtExport.prototype.getTextWrappingTypeEnumValue = function (textWrappingType) {\n        switch (textWrappingType) {\n            case 'Both':\n                return 0;\n            case 'Left':\n                return 1;\n            case 'Right':\n                return 2;\n            case 'Largest':\n                return 3;\n        }\n    };\n    SfdtExport.prototype.getCompatibilityModeEnumValue = function (compatibilityMode) {\n        switch (compatibilityMode) {\n            case 'Word2013':\n                return 0;\n            case 'Word2003':\n                return 1;\n            case 'Word2007':\n                return 2;\n            case 'Word2010':\n                return 3;\n        }\n    };\n    SfdtExport.prototype.getLineFormatTypeEnumValue = function (lineFormatType) {\n        switch (lineFormatType) {\n            case 'Solid':\n                return 0;\n            case 'Patterned':\n                return 1;\n            case 'Gradient':\n                return 2;\n            case 'None':\n                return 3;\n        }\n    };\n    SfdtExport.prototype.getAutoShapeTypeEnumValue = function (autoShapeType) {\n        switch (autoShapeType) {\n            case 'Rectangle':\n                return 1;\n            case 'RoundedRectangle':\n                return 2;\n            case 'StraightConnector':\n                return 3;\n            default:\n                return 1;\n        }\n    };\n    SfdtExport.prototype.getFollowCharacterType = function (followCharacterType) {\n        switch (followCharacterType) {\n            case 'Tab':\n                return 0;\n            case 'Space':\n                return 1;\n            case 'None':\n                return 2;\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    SfdtExport.prototype.destroy = function () {\n        this.lists = undefined;\n        this.images = undefined;\n        this.endLine = undefined;\n        this.startLine = undefined;\n        this.endOffset = undefined;\n        this.documentHelper = undefined;\n    };\n    return SfdtExport;\n}());\nexport { SfdtExport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}