{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\n\nclass MouseMonitor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"container\", void 0);\n\n    _defineProperty(this, \"onMouseMove\", event => {\n      if (!this.container) {\n        return;\n      }\n\n      const {\n        onMoveAway,\n        paddingX,\n        paddingY\n      } = this.props;\n      const {\n        clientX,\n        clientY\n      } = event; // TODO: see if possible to optimize\n\n      const {\n        left,\n        top,\n        width,\n        height\n      } = this.container.getBoundingClientRect();\n      const inBoundsX = clientX > left - paddingX && clientX < left + width + paddingX;\n      const inBoundsY = clientY > top - paddingY && clientY < top + height + paddingY;\n      const isNear = inBoundsX && inBoundsY;\n\n      if (!isNear) {\n        onMoveAway();\n      }\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const {\n      onMoveAway,\n      paddingX,\n      paddingY,\n      children,\n      ...restProps\n    } = this.props;\n    return React.createElement(\"div\", {\n      ref: node => this.container = node\n    }, React.cloneElement(children, restProps));\n  }\n\n}\n\nexport default MouseMonitor;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/react-pdf-highlighter/build/components/MouseMonitor.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","MouseMonitor","constructor","args","event","container","onMoveAway","paddingX","paddingY","props","clientX","clientY","left","top","width","height","getBoundingClientRect","inBoundsX","inBoundsY","isNear","componentDidMount","document","addEventListener","onMouseMove","componentWillUnmount","removeEventListener","render","children","restProps","createElement","ref","node","cloneElement"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAOQ,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACnCE,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AAEAb,IAAAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,KAAK,CAAzB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsBc,KAAK,IAAI;AAC5C,UAAI,CAAC,KAAKC,SAAV,EAAqB;AACnB;AACD;;AAED,YAAM;AACJC,QAAAA,UADI;AAEJC,QAAAA,QAFI;AAGJC,QAAAA;AAHI,UAIF,KAAKC,KAJT;AAKA,YAAM;AACJC,QAAAA,OADI;AAEJC,QAAAA;AAFI,UAGFP,KAHJ,CAV4C,CAajC;;AAEX,YAAM;AACJQ,QAAAA,IADI;AAEJC,QAAAA,GAFI;AAGJC,QAAAA,KAHI;AAIJC,QAAAA;AAJI,UAKF,KAAKV,SAAL,CAAeW,qBAAf,EALJ;AAMA,YAAMC,SAAS,GAAGP,OAAO,GAAGE,IAAI,GAAGL,QAAjB,IAA6BG,OAAO,GAAGE,IAAI,GAAGE,KAAP,GAAeP,QAAxE;AACA,YAAMW,SAAS,GAAGP,OAAO,GAAGE,GAAG,GAAGL,QAAhB,IAA4BG,OAAO,GAAGE,GAAG,GAAGE,MAAN,GAAeP,QAAvE;AACA,YAAMW,MAAM,GAAGF,SAAS,IAAIC,SAA5B;;AAEA,UAAI,CAACC,MAAL,EAAa;AACXb,QAAAA,UAAU;AACX;AACF,KA5Bc,CAAf;AA6BD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,WAA5C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKF,WAA/C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AACJpB,MAAAA,UADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,QAHI;AAIJmB,MAAAA,QAJI;AAKJ,SAAGC;AALC,QAMF,KAAKnB,KANT;AAOA,WAAOV,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2B;AAChCC,MAAAA,GAAG,EAAEC,IAAI,IAAI,KAAK1B,SAAL,GAAiB0B;AADE,KAA3B,EAEJhC,KAAK,CAACiC,YAAN,CAAmBL,QAAnB,EAA6BC,SAA7B,CAFI,CAAP;AAGD;;AAzDkC;;AA6DrC,eAAe3B,YAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\n\nclass MouseMonitor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"container\", void 0);\n\n    _defineProperty(this, \"onMouseMove\", event => {\n      if (!this.container) {\n        return;\n      }\n\n      const {\n        onMoveAway,\n        paddingX,\n        paddingY\n      } = this.props;\n      const {\n        clientX,\n        clientY\n      } = event; // TODO: see if possible to optimize\n\n      const {\n        left,\n        top,\n        width,\n        height\n      } = this.container.getBoundingClientRect();\n      const inBoundsX = clientX > left - paddingX && clientX < left + width + paddingX;\n      const inBoundsY = clientY > top - paddingY && clientY < top + height + paddingY;\n      const isNear = inBoundsX && inBoundsY;\n\n      if (!isNear) {\n        onMoveAway();\n      }\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const {\n      onMoveAway,\n      paddingX,\n      paddingY,\n      children,\n      ...restProps\n    } = this.props;\n    return React.createElement(\"div\", {\n      ref: node => this.container = node\n    }, React.cloneElement(children, restProps));\n  }\n\n}\n\nexport default MouseMonitor;"]},"metadata":{},"sourceType":"module"}