{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/MultiFileUpload.js\";\nimport React, { useContext, useState, useCallback, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Button, Table } from \"reactstrap\";\nimport { useDropzone } from 'react-dropzone';\nimport { IoArrowBackCircle } from \"react-icons/io5\";\nimport folderDocs from '../images/cloud-drag.png';\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\nimport FileMetadataViewer from './FileMetadataViewer';\nimport TriggerFileViewer from './TriggerFileViewer';\nconst async = require('async');\nfunction MultiFileUpload({\n  onBackClick\n}) {\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [showMetadataViewer, setShowMetadataViewer] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles([...files, ...acceptedFiles]);\n  }, [files]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  const handleSelectFile = fileName => {\n    setSelectedFiles(prevSelected => prevSelected.includes(fileName) ? prevSelected.filter(name => name !== fileName) : [...prevSelected, fileName]);\n  };\n  const handleSelectAll = () => {\n    setSelectedFiles(selectedFiles.length === files.length ? [] : files.map(file => file.name));\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    const filesToUpload = files.filter(file => selectedFiles.includes(file.name));\n    if (filesToUpload.length === 0) return;\n    const data = new FormData();\n    filesToUpload.forEach(file => data.append('files', file));\n    setIsLoading(true);\n    try {\n      const response = await axios.post(`${BASE_URL_DEV}/upload/multiple-files`, data, {\n        headers: {\n          'x-access-token': state.auth && state.auth.authToken\n        }\n      });\n      console.log(\"Upload response:\", response.data);\n      setUploadedFiles(response.data.files);\n      setFiles([]);\n      setSelectedFiles([]);\n      setIsLoading(false);\n      setShowMetadataViewer(true);\n\n      // // Fetch highlights and set current file\n      // async.eachSeries(response.data.files, function (uploadedFile, cbBatch) {\n      //     axios.get(`${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${uploadedFile.name}`, {\n      //         headers: {\n      //             'x-access-token': state.auth && state.auth.authToken,\n      //         }\n      //     }).then(function (result) {\n      //         const fileHighlights = result.data;\n      //         if (fileHighlights && fileHighlights.highlights) {\n      //             dispatch({ type: \"SET_FILE_HIGHLIGHTS\", payload: fileHighlights.highlights });\n      //         }\n      //         cbBatch(null);\n      //     }).catch(error => {\n      //         console.error(\"Error fetching highlights:\", error);\n      //         cbBatch(error);\n      //     });\n      // }, async (loopErrBatch) => {\n      //     if (!loopErrBatch) {\n      //         try {\n      //             const result = await axios(`${BASE_URL_DEV}/get/files`, {\n      //                 headers: {\n      //                     \"x-access-token\": state.auth && state.auth.authToken,\n      //                 },\n      //             });\n      //             const files = result.data && result.data.files;\n      //             console.log(\"Fetched files response:\", files);\n      //             if (result && files && files.length > 0) {\n      //                 const results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n      //                     headers: {\n      //                         \"x-access-token\": state.auth && state.auth.authToken,\n      //                     },\n      //                 });\n      //                 const allgraphs = results.data;\n      //                 console.log(\"Graph data response:\", allgraphs);\n      //                 let Obj = {};\n      //                 results && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\n      //                     Obj[x.fileName] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n      //                 });\n      //                 const fileNew = files.map(element => ({\n      //                     ...element,\n      //                     CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n      //                     PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n      //                 }));\n      //                 console.log(\"New files with citation and provision:\", fileNew);\n      //                 dispatch({ type: \"ADD_FILE\", payload: fileNew });\n      //                 dispatch({ type: \"SET_MODAL\", payload: true });\n\n      //                 // Set the first uploaded file as the current file\n      //                 if (fileNew.length > 0) {\n      //                     const firstUploadedFile = filesToUpload[0];\n      //                     const firstFileResponse = response.data.files[0];\n      //                     const fileToSet = new File([firstUploadedFile], firstFileResponse.name, {\n      //                         type: firstUploadedFile.type,\n      //                         lastModified: firstUploadedFile.lastModified\n      //                     });\n      //                     dispatch({ type: \"SET_CURR_FILE\", payload: fileToSet });\n      //                     console.log(\"New SET_CURR_FILE:\", fileToSet);\n      //                 }\n      //             }\n      //         } catch (error) {\n      //             console.error(\"Error fetching files and graph data:\", error);\n      //         }\n      //     } else {\n      //         console.error(\"Error in loopErrBatch:\", loopErrBatch);\n      //     }\n      // });\n      dispatch({\n        type: \"SET_VIEW\",\n        payload: {\n          showFileViewer: true\n        }\n      });\n    } catch (error) {\n      var _error$response;\n      console.error(\"Upload error:\", error);\n      dispatch({\n        type: \"ERROR\",\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusText) || 'File Upload Failed!!'\n      });\n      setIsLoading(false);\n    }\n  };\n  const handleViewPDF = async file => {\n    try {\n      console.log(\"Fetching PDF for file:\", file);\n      const response = await axios.get(`${BASE_URL_DEV}/uploads/${state.auth.userPublicId}/${file.name}`, {\n        responseType: 'blob',\n        headers: {\n          'x-access-token': state.auth && state.auth.authToken\n        }\n      });\n      const fileBlob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      const fileToSet = new File([fileBlob], file.name, {\n        type: fileBlob.type,\n        lastModified: file.lastModified || new Date().getTime()\n      });\n      console.log(\"Setting current file:\", fileToSet);\n      // dispatch({ type: 'SET_CURR_FILE', payload: fileToSet });\n\n      async.eachSeries([file], function (element, cbBatch) {\n        axios.get(`${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${element.name}`, {\n          headers: {\n            'x-access-token': state.auth && state.auth.authToken\n          }\n        }).then(function (result) {\n          const fileHighlights = result.data;\n          console.log(\"File highlights received:\", fileHighlights);\n          if (fileHighlights && fileHighlights.highlights) {\n            dispatch({\n              type: \"SET_FILE_HIGHLIGHTS\",\n              payload: fileHighlights.highlights\n            });\n          }\n          cbBatch(null);\n        }).catch(error => {\n          console.error(\"Error fetching highlights:\", error);\n          cbBatch(error);\n        });\n      }, loopErrBatch => {\n        if (!loopErrBatch) {\n          (async () => {\n            try {\n              const result = await axios(`${BASE_URL_DEV}/get/files`, {\n                headers: {\n                  \"x-access-token\": state.auth && state.auth.authToken\n                }\n              });\n              const files = result.data && result.data.files;\n              console.log(\"Fetched files response:\", files);\n              if (result && files && files.length > 0) {\n                const results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n                  headers: {\n                    \"x-access-token\": state.auth && state.auth.authToken\n                  }\n                });\n                const allgraphs = results.data;\n                console.log(\"Graph data response:\", allgraphs);\n                let Obj = {};\n                results && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\n                  Obj[x.fileName] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n                });\n                const fileNew = files.map(element => ({\n                  ...element,\n                  CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n                  PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n                }));\n                console.log(\"New files with citation and provision:\", fileNew);\n                dispatch({\n                  type: \"ADD_FILE\",\n                  payload: fileNew\n                });\n                dispatch({\n                  type: \"SET_MODAL\",\n                  payload: true\n                });\n                // Trigger the file viewer\n                dispatch({\n                  type: \"SET_VIEW\",\n                  payload: {\n                    showFileViewer: true\n                  }\n                });\n              }\n            } catch (error) {\n              console.error(\"Error fetching files and graph data:\", error);\n            }\n          })();\n        } else {\n          console.error(\"Error in loopErrBatch:\", loopErrBatch);\n        }\n      });\n      dispatch({\n        type: \"SET_VIEW\",\n        payload: {\n          showFileViewer: true\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"back-button\",\n    onClick: onBackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IoArrowBackCircle, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  })), !showMetadataViewer && files.length === 0 && /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    className: \"drag-drop__area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drag-drop__file-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: folderDocs,\n    alt: \"Dropping File ...\",\n    className: \"drag-drop-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"drag-drop-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"Drag & Drop case files here\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"browse-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 87\n    }\n  })))), !showMetadataViewer && files.length > 0 && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    className: \"custom-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: selectedFiles.length === files.length,\n    onChange: handleSelectAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 41\n    }\n  }, \"File Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, files.map((file, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    onClick: () => handleSelectFile(file.name),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: selectedFiles.includes(file.name),\n    onChange: e => {\n      e.stopPropagation();\n      handleSelectFile(file.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, file.name)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-lg submitButton\",\n    color: \"success\",\n    onClick: handleUpload,\n    disabled: selectedFiles.length === 0 || isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, \"Upload\"))), showMetadataViewer && /*#__PURE__*/React.createElement(FileMetadataViewer, {\n    files: uploadedFiles,\n    onFileClick: handleViewPDF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 40\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(TriggerFileViewer, {\n    onBackClick: onBackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  })));\n}\nexport default MultiFileUpload;","map":{"version":3,"names":["React","useContext","useState","useCallback","Fragment","axios","Button","Table","useDropzone","IoArrowBackCircle","folderDocs","UserContext","BASE_URL_DEV","FileMetadataViewer","TriggerFileViewer","async","require","MultiFileUpload","onBackClick","state","dispatch","isLoading","setIsLoading","files","setFiles","selectedFiles","setSelectedFiles","uploadedFiles","setUploadedFiles","showMetadataViewer","setShowMetadataViewer","onDrop","acceptedFiles","getRootProps","getInputProps","handleSelectFile","fileName","prevSelected","includes","filter","name","handleSelectAll","length","map","file","handleUpload","e","preventDefault","filesToUpload","data","FormData","forEach","append","response","post","headers","auth","authToken","console","log","type","payload","showFileViewer","error","_error$response","statusText","handleViewPDF","get","userPublicId","responseType","fileBlob","Blob","fileToSet","File","lastModified","Date","getTime","eachSeries","element","cbBatch","then","result","fileHighlights","highlights","catch","loopErrBatch","results","allgraphs","Obj","graphdata","x","links","source","fileNew","CITATION","PROVISION","createElement","__self","__source","_jsxFileName","lineNumber","columnNumber","className","onClick","size","Object","assign","src","alt","responsive","bordered","checked","onChange","index","key","style","cursor","stopPropagation","color","disabled","onFileClick"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/MultiFileUpload.js"],"sourcesContent":["import React, { useContext, useState, useCallback, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Button, Table } from \"reactstrap\";\nimport { useDropzone } from 'react-dropzone';\nimport { IoArrowBackCircle } from \"react-icons/io5\";\nimport folderDocs from '../images/cloud-drag.png';\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\nimport FileMetadataViewer from './FileMetadataViewer';\nimport TriggerFileViewer from './TriggerFileViewer';\n\nconst async = require('async');\n\nfunction MultiFileUpload({ onBackClick }) {\n    const { state, dispatch } = useContext(UserContext);\n    const [isLoading, setIsLoading] = useState(false);\n    const [files, setFiles] = useState([]);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    const [showMetadataViewer, setShowMetadataViewer] = useState(false);\n\n    const onDrop = useCallback((acceptedFiles) => {\n        setFiles([...files, ...acceptedFiles]);\n    }, [files]);\n\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n    const handleSelectFile = (fileName) => {\n        setSelectedFiles(prevSelected =>\n            prevSelected.includes(fileName)\n                ? prevSelected.filter(name => name !== fileName)\n                : [...prevSelected, fileName]\n        );\n    };\n\n    const handleSelectAll = () => {\n        setSelectedFiles(selectedFiles.length === files.length ? [] : files.map(file => file.name));\n    };\n\n    const handleUpload = async (e) => {\n        e.preventDefault();\n        const filesToUpload = files.filter(file => selectedFiles.includes(file.name));\n        if (filesToUpload.length === 0) return;\n\n        const data = new FormData();\n        filesToUpload.forEach(file => data.append('files', file));\n        setIsLoading(true);\n        try {\n            const response = await axios.post(`${BASE_URL_DEV}/upload/multiple-files`, data, {\n                headers: {\n                    'x-access-token': state.auth && state.auth.authToken,\n                }\n            });\n            console.log(\"Upload response:\", response.data);\n            setUploadedFiles(response.data.files);\n            setFiles([]);\n            setSelectedFiles([]);\n            setIsLoading(false);\n            setShowMetadataViewer(true);\n\n            // // Fetch highlights and set current file\n            // async.eachSeries(response.data.files, function (uploadedFile, cbBatch) {\n            //     axios.get(`${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${uploadedFile.name}`, {\n            //         headers: {\n            //             'x-access-token': state.auth && state.auth.authToken,\n            //         }\n            //     }).then(function (result) {\n            //         const fileHighlights = result.data;\n            //         if (fileHighlights && fileHighlights.highlights) {\n            //             dispatch({ type: \"SET_FILE_HIGHLIGHTS\", payload: fileHighlights.highlights });\n            //         }\n            //         cbBatch(null);\n            //     }).catch(error => {\n            //         console.error(\"Error fetching highlights:\", error);\n            //         cbBatch(error);\n            //     });\n            // }, async (loopErrBatch) => {\n            //     if (!loopErrBatch) {\n            //         try {\n            //             const result = await axios(`${BASE_URL_DEV}/get/files`, {\n            //                 headers: {\n            //                     \"x-access-token\": state.auth && state.auth.authToken,\n            //                 },\n            //             });\n            //             const files = result.data && result.data.files;\n            //             console.log(\"Fetched files response:\", files);\n            //             if (result && files && files.length > 0) {\n            //                 const results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n            //                     headers: {\n            //                         \"x-access-token\": state.auth && state.auth.authToken,\n            //                     },\n            //                 });\n            //                 const allgraphs = results.data;\n            //                 console.log(\"Graph data response:\", allgraphs);\n            //                 let Obj = {};\n            //                 results && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\n            //                     Obj[x.fileName] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n            //                 });\n            //                 const fileNew = files.map(element => ({\n            //                     ...element,\n            //                     CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n            //                     PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n            //                 }));\n            //                 console.log(\"New files with citation and provision:\", fileNew);\n            //                 dispatch({ type: \"ADD_FILE\", payload: fileNew });\n            //                 dispatch({ type: \"SET_MODAL\", payload: true });\n\n            //                 // Set the first uploaded file as the current file\n            //                 if (fileNew.length > 0) {\n            //                     const firstUploadedFile = filesToUpload[0];\n            //                     const firstFileResponse = response.data.files[0];\n            //                     const fileToSet = new File([firstUploadedFile], firstFileResponse.name, {\n            //                         type: firstUploadedFile.type,\n            //                         lastModified: firstUploadedFile.lastModified\n            //                     });\n            //                     dispatch({ type: \"SET_CURR_FILE\", payload: fileToSet });\n            //                     console.log(\"New SET_CURR_FILE:\", fileToSet);\n            //                 }\n            //             }\n            //         } catch (error) {\n            //             console.error(\"Error fetching files and graph data:\", error);\n            //         }\n            //     } else {\n            //         console.error(\"Error in loopErrBatch:\", loopErrBatch);\n            //     }\n            // });\n            dispatch({ type: \"SET_VIEW\", payload: { showFileViewer: true } });\n        } catch (error) {\n            console.error(\"Upload error:\", error);\n            dispatch({ type: \"ERROR\", payload: error.response?.statusText || 'File Upload Failed!!' });\n            setIsLoading(false);\n        }\n    };\n\n    const handleViewPDF = async (file) => {\n        try {\n            console.log(\"Fetching PDF for file:\", file);\n            const response = await axios.get(`${BASE_URL_DEV}/uploads/${state.auth.userPublicId}/${file.name}`, {\n                responseType: 'blob',\n                headers: {\n                    'x-access-token': state.auth && state.auth.authToken,\n                }\n            });\n            const fileBlob = new Blob([response.data], { type: response.headers['content-type'] });\n            const fileToSet = new File([fileBlob], file.name, {\n                type: fileBlob.type,\n                lastModified: file.lastModified || new Date().getTime()\n            });\n            console.log(\"Setting current file:\", fileToSet);\n            // dispatch({ type: 'SET_CURR_FILE', payload: fileToSet });\n\n            async.eachSeries([file], function (element, cbBatch) {\n                axios.get(`${BASE_URL_DEV}/highlights-json/${state.auth.userPublicId}/${element.name}`, {\n                    headers: {\n                        'x-access-token': state.auth && state.auth.authToken,\n                    }\n                }).then(function (result) {\n                    const fileHighlights = result.data;\n                    console.log(\"File highlights received:\", fileHighlights);\n                    if (fileHighlights && fileHighlights.highlights) {\n                        dispatch({\n                            type: \"SET_FILE_HIGHLIGHTS\",\n                            payload: fileHighlights.highlights,\n                        });\n                    }\n                    cbBatch(null);\n                }).catch(error => {\n                    console.error(\"Error fetching highlights:\", error);\n                    cbBatch(error);\n                });\n            }, (loopErrBatch) => {\n                if (!loopErrBatch) {\n                    (async () => {\n                        try {\n                            const result = await axios(`${BASE_URL_DEV}/get/files`, {\n                                headers: {\n                                    \"x-access-token\": state.auth && state.auth.authToken,\n                                },\n                            });\n                            const files = result.data && result.data.files;\n                            console.log(\"Fetched files response:\", files);\n                            if (result && files && files.length > 0) {\n                                const results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n                                    headers: {\n                                        \"x-access-token\": state.auth && state.auth.authToken,\n                                    },\n                                });\n                                const allgraphs = results.data;\n                                console.log(\"Graph data response:\", allgraphs);\n                                let Obj = {};\n                                results && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\n                                    Obj[x.fileName] = x.links.filter(e => e.source === \"CITATION\" || e.source === \"PROVISION\");\n                                });\n                                const fileNew = files.map(element => ({\n                                    ...element,\n                                    CITATION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"CITATION\") : [\"N/A\"],\n                                    PROVISION: Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source === \"PROVISION\") : [\"N/A\"]\n                                }));\n                                console.log(\"New files with citation and provision:\", fileNew);\n                                dispatch({ type: \"ADD_FILE\", payload: fileNew });\n                                dispatch({ type: \"SET_MODAL\", payload: true });\n                                // Trigger the file viewer\n                                dispatch({ type: \"SET_VIEW\", payload: { showFileViewer: true } });\n                            }\n                        } catch (error) {\n                            console.error(\"Error fetching files and graph data:\", error);\n                        }\n                    })();\n                } else {\n                    console.error(\"Error in loopErrBatch:\", loopErrBatch);\n                }\n            });\n            dispatch({ type: \"SET_VIEW\", payload: { showFileViewer: true } });\n        } catch (error) {\n            console.error(\"Error fetching PDF:\", error);\n        }\n    };\n\n    return (\n        <Fragment>\n            <div className=\"previewComponent\">\n                <button className=\"back-button\" onClick={onBackClick}>\n                    <IoArrowBackCircle size={40} />\n                </button>\n                {!showMetadataViewer && files.length === 0 && (\n                    <div {...getRootProps()} className=\"drag-drop__area\">\n                        <input {...getInputProps()} />\n                        <div className=\"drag-drop__file-icon\">\n                            <img src={folderDocs} alt=\"Dropping File ...\" className=\"drag-drop-image\" />\n                            <h5 className=\"drag-drop-text\">Drag & Drop case files here<button className=\"browse-button\"></button></h5>\n                        </div>\n                    </div>\n                )}\n                {!showMetadataViewer && files.length > 0 && (\n                    <Fragment>\n                        <div className=\"file-preview\">\n                            <Table responsive bordered className=\"custom-table\">\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedFiles.length === files.length}\n                                                onChange={handleSelectAll}\n                                            />\n                                        </th>\n                                        <th>File Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {files.map((file, index) => (\n                                        <tr key={index} onClick={() => handleSelectFile(file.name)} style={{ cursor: 'pointer' }}>\n                                            <td>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={selectedFiles.includes(file.name)}\n                                                    onChange={(e) => { e.stopPropagation(); handleSelectFile(file.name); }}\n                                                />\n                                            </td>\n                                            <td>{file.name}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        </div>\n                        <div className=\"upload-button-container\">\n                            <Button\n                                className=\"btn btn-lg submitButton\"\n                                color=\"success\"\n                                onClick={handleUpload}\n                                disabled={selectedFiles.length === 0 || isLoading}\n                            >\n                                Upload\n                            </Button>\n                        </div>\n                    </Fragment>\n                )}\n                {showMetadataViewer && <FileMetadataViewer files={uploadedFiles} onFileClick={handleViewPDF} />}\n                {isLoading && <div className=\"loading\"></div>}\n                <TriggerFileViewer onBackClick={onBackClick} />\n            </div>\n        </Fragment>\n    );\n}\n\nexport default MultiFileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}