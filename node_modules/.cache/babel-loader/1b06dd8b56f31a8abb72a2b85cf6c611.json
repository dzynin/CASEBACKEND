{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\nimport { Component, Complex, NotifyPropertyChanges, Property } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { createElement, remove, Event, EventHandler } from '@syncfusion/ej2-base';\nimport { createSvg, RectOption, measureText, TextOption, renderTextElement } from '../smithchart/utils/helper';\nimport { removeElement, textTrim } from '../smithchart/utils/helper';\nimport { ClosestPoint, SmithchartRect } from '../smithchart/utils/utils';\nimport { SmithchartMargin, SmithchartBorder, SmithchartFont } from '../smithchart/utils/utils';\nimport { getThemeColor } from '../smithchart/model/theme';\nimport { SmithchartLegendSettings } from '../smithchart/legend/legend';\nimport { SmithchartAxis } from '../smithchart/axis/axis';\nimport { Title } from '../smithchart/title/title';\nimport { SmithchartSeries } from '../smithchart/series/series';\nimport { AreaBounds } from '../smithchart/utils/area';\nimport { AxisRender } from '../smithchart/axis/axisrender';\nimport { SeriesRender } from '../smithchart/series/seriesrender';\nimport { Collection } from '@syncfusion/ej2-base';\nimport { getSeriesColor } from '../smithchart/model/theme';\nimport { ExportUtils } from '../smithchart/utils/export';\nimport { titleRender, subtitleRender, load, loaded } from '../smithchart/model/constant';\nimport { getElement } from '../common/utils/helper';\n/**\n * Represents the Smithchart control.\n * ```html\n * <div id=\"smithchart\"/>\n * <script>\n *   var chartObj = new Smithchart({ isResponsive : true });\n *   chartObj.appendTo(\"#smithchart\");\n * </script>\n * ```\n */\nvar Smithchart = /** @class */function (_super) {\n  __extends(Smithchart, _super);\n  /**\n   * Constructor for creating the Smithchart widget\n   */\n  function Smithchart(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    /** @private */\n    _this.isLegendClicked = false;\n    _this.previousTargetId = '';\n    _this.currentPointIndex = 0;\n    _this.currentSeriesIndex = 0;\n    _this.currentLegendIndex = 0;\n    return _this;\n  }\n  /**\n   * Get component name\n   */\n  Smithchart.prototype.getModuleName = function () {\n    return 'smithchart';\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @private\n   */\n  Smithchart.prototype.getPersistData = function () {\n    return '';\n  };\n  /**\n   * Method to create SVG element.\n   */\n  Smithchart.prototype.createChartSvg = function () {\n    this.removeSvg();\n    createSvg(this);\n  };\n  Smithchart.prototype.renderTitle = function (title, type, groupEle) {\n    var _this = this;\n    var font = title.textStyle;\n    var textSize = measureText(title.text, font, this.themeStyle.smithchartTitleFont);\n    var x;\n    var textAlignment = title.textAlignment;\n    var titleText = title.text;\n    var maxTitleWidth = isNullOrUndefined(title.maximumWidth) ? Math.abs(this.margin.left + this.margin.right - this.availableSize.width) : title.maximumWidth;\n    var titleWidthEnable = textSize.width > maxTitleWidth ? true : false;\n    if (textSize.width > this.availableSize.width) {\n      x = this.margin.left + this.border.width;\n    } else {\n      x = textAlignment === 'Center' ? this.availableSize.width / 2 - textSize['width'] / 2 : textAlignment === 'Near' ? this.margin.left + this.elementSpacing + this.border.width : this.availableSize.width - textSize['width'] - (this.margin.right + this.elementSpacing + this.border.width);\n    }\n    var y = this.margin.top + textSize['height'] / 2 + this.elementSpacing;\n    if (title.enableTrim && titleWidthEnable) {\n      titleText = textTrim(maxTitleWidth, title.text, font, this.themeStyle.smithchartTitleFont);\n      textSize = measureText(titleText, font, this.themeStyle.smithchartTitleFont);\n    }\n    groupEle = this.renderer.createGroup({\n      id: this.element.id + '_Title_Group'\n    });\n    var titleEventArgs = {\n      text: titleText,\n      x: x,\n      y: y,\n      name: titleRender,\n      cancel: false\n    };\n    var options;\n    var titleRenderSuccess = function (args) {\n      if (!args.cancel) {\n        options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, 'start', args.text);\n        var element = renderTextElement(options, font, font.color || _this.themeStyle.smithchartTitleFont.color, groupEle, _this.themeStyle.smithchartTitleFont);\n        element.setAttribute('tabindex', '0');\n        var titleLocation = {\n          x: args.x,\n          y: args.y,\n          textSize: textSize\n        };\n        _this.svgObject.appendChild(groupEle);\n        if (title.subtitle.text !== '' && title.subtitle.visible) {\n          _this.renderSubtitle(title, type, textSize, _this.availableSize, titleLocation, groupEle);\n        }\n      }\n    };\n    titleRenderSuccess.bind(this);\n    this.trigger(titleRender, titleEventArgs, titleRenderSuccess);\n  };\n  Smithchart.prototype.renderSubtitle = function (title, type, textSize, size, titleLocation, groupEle) {\n    var _this = this;\n    var font = title.subtitle.textStyle;\n    var subTitle = title.subtitle;\n    var subTitleSize = measureText(subTitle.text, font, this.themeStyle.smithchartSubtitleFont);\n    var subTitleText = subTitle.text;\n    var maxSubTitleWidth = isNullOrUndefined(subTitle.maximumWidth) ? this.bounds.width * 0.75 : subTitle.maximumWidth;\n    if (subTitle.enableTrim && subTitleSize.width > maxSubTitleWidth) {\n      subTitleText = textTrim(maxSubTitleWidth, subTitle.text, font, this.themeStyle.smithchartSubtitleFont);\n    }\n    var x = title['subtitle'].textAlignment === 'Far' ? titleLocation.x + titleLocation.textSize.width : title['subtitle'].textAlignment === 'Near' ? titleLocation.x : titleLocation.x + titleLocation.textSize.width / 2;\n    var y = titleLocation.y + 2 * this.elementSpacing;\n    var textAnchor = title['subtitle'].textAlignment === 'Far' ? 'end' : title['subtitle'].textAlignment === 'Near' ? 'start' : 'middle';\n    var subtitleEventArgs = {\n      text: subTitleText,\n      x: x,\n      y: y,\n      name: subtitleRender,\n      cancel: false\n    };\n    var subtitleRenderSuccess = function (args) {\n      if (!args.cancel) {\n        var options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, textAnchor, args.text);\n        var element = renderTextElement(options, font, font.color || _this.themeStyle.smithchartSubtitleFont.color, groupEle, _this.themeStyle.smithchartSubtitleFont);\n        element.setAttribute('aria-label', subTitle.description || args.text);\n        groupEle.appendChild(element);\n      }\n    };\n    subtitleRenderSuccess.bind(this);\n    this.trigger(subtitleRender, subtitleEventArgs, subtitleRenderSuccess);\n  };\n  /**\n   * Render the smithchart border\n   *\n   * @private\n   */\n  Smithchart.prototype.renderBorder = function () {\n    var border = this.border;\n    this.background = this.background ? this.background : this.themeStyle.background;\n    var borderRect = new RectOption(this.element.id + '_SmithchartBorder', this.background, border, 1, new SmithchartRect(border.width / 2, border.width / 2, this.availableSize.width - border.width, this.availableSize.height - border.width));\n    var element = this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n    element.setAttribute('aria-hidden', 'true');\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Smithchart.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var renderer = false;\n    if (!this.delayRedraw) {\n      for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        switch (prop) {\n          case 'background':\n          case 'border':\n          case 'series':\n          case 'legendSettings':\n          case 'radius':\n          case 'enableRtl':\n            renderer = true;\n            break;\n          case 'size':\n            this.createChartSvg();\n            renderer = true;\n            break;\n          case 'theme':\n          case 'renderType':\n            this.animateSeries = true;\n            renderer = true;\n            break;\n        }\n      }\n      if (renderer) {\n        this.render();\n      }\n    }\n  };\n  /**\n   * Initialize the event handler.\n   */\n  Smithchart.prototype.preRender = function () {\n    this.allowServerDataBinding = false;\n    this.trigger(load, {\n      smithchart: this\n    });\n    this.unWireEVents();\n    this.initPrivateVariable();\n    this.wireEVents();\n  };\n  Smithchart.prototype.initPrivateVariable = function () {\n    this.animateSeries = true;\n    this.delayRedraw = false;\n    this.element.setAttribute('role', 'region');\n    this.element.setAttribute('aria-label', this.title.description || this.title.text + '. Syncfusion interactive chart.');\n    this.element.setAttribute('tabindex', '0');\n  };\n  /**\n   * To Initialize the control rendering.\n   */\n  Smithchart.prototype.setTheme = function () {\n    /*! Set theme */\n    this.themeStyle = getThemeColor(this.theme);\n    this.seriesColors = getSeriesColor(this.theme);\n    if (!document.getElementById(this.element.id + 'Keyboard_smith_chart_focus')) {\n      var style = document.createElement('style');\n      style.setAttribute('id', this.element.id + 'Keyboard_smith_chart_focus');\n      style.innerText = '.e-smith-chart-focused:focus,' + 'div[id*=container]:focus, text[id*=_Smithchart_title]:focus, path[id*=_Points]:focus, g[id*=_svg_seriesCollection]:focus, g[id*=_svg_Legend]:focus {outline: none } .e-smith-chart-focused:focus-visible,' + 'div[id*=container]:focus-visible, text[id*=_Smithchart_title]:focus-visible, path[id*=_Points]:focus-visible, g[id*=_svg_seriesCollection]:focus-visible, g[id*=_svg_Legend]:focus-visible {outline: 1.5px ' + this.themeStyle.tabColor + ' solid}';\n      document.body.appendChild(style);\n    }\n    // let count: number = colors.length;\n    // for (let i: number = 0; i < this.series.length; i++) {\n    //     this.series[i].fill = this.series[i].fill ? this.series[i].fill : colors[i % count];\n    // }\n  };\n  Smithchart.prototype.render = function () {\n    this.createChartSvg();\n    this.element.appendChild(this.svgObject);\n    this.setTheme();\n    this.createSecondaryElement();\n    this.renderBorder();\n    if (this.smithchartLegendModule && this.legendSettings.visible) {\n      this.legendBounds = this.smithchartLegendModule.calculateLegendBounds(this);\n    }\n    var areaBounds = new AreaBounds();\n    this.bounds = areaBounds.calculateAreaBounds(this, this.title, this.legendBounds);\n    if (this.title.text !== '' && this.title.visible) {\n      this.renderTitle(this.title, 'title', null);\n    }\n    var axisRender = new AxisRender();\n    axisRender.renderArea(this, this.bounds);\n    this.seriesrender = new SeriesRender();\n    this.seriesrender.draw(this, axisRender, this.bounds);\n    if (this.smithchartLegendModule && this.legendSettings.visible) {\n      this.smithchartLegendModule.renderLegend(this);\n    }\n    this.renderComplete();\n    this.allowServerDataBinding = true;\n    this.trigger(loaded, {\n      smithchart: this\n    });\n  };\n  Smithchart.prototype.createSecondaryElement = function () {\n    if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n      var secondaryElement = createElement('div', {\n        id: this.element.id + '_Secondary_Element',\n        styles: 'z-index:1;'\n      });\n      this.element.appendChild(secondaryElement);\n      var rect = this.element.getBoundingClientRect();\n      var svgRect = document.getElementById(this.element.id + '_svg');\n      if (svgRect) {\n        var svgClientRect = svgRect.getBoundingClientRect();\n        secondaryElement.style.left = Math.max(svgClientRect.left - rect.left, 0) + 'px';\n        secondaryElement.style.top = Math.max(svgClientRect.top - rect.top, 0) + 'px';\n      }\n    } else {\n      removeElement(this.element.id + '_Secondary_Element');\n    }\n  };\n  /**\n   * To destroy the widget\n   *\n   * @returns {void}.\n   */\n  Smithchart.prototype.destroy = function () {\n    if (this.element) {\n      this.unWireEVents();\n      _super.prototype.destroy.call(this);\n      this.element.classList.remove('e-smithchart');\n      this.removeSvg();\n      this.svgObject = null;\n      var element = document.getElementById(this.element.id + 'Keyboard_smith_chart_focus');\n      if (element) {\n        element.remove();\n      }\n      removeElement('smithchartmeasuretext');\n    }\n  };\n  /**\n   * To bind event handlers for smithchart.\n   */\n  Smithchart.prototype.wireEVents = function () {\n    EventHandler.add(this.element, 'click', this.smithchartOnClick, this);\n    EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n    EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n    EventHandler.add(this.element, 'keyup', this.chartKeyUp, this);\n    EventHandler.add(this.element, 'keydown', this.chartKeyDown, this);\n    window.addEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.smithchartOnResize.bind(this));\n  };\n  Smithchart.prototype.mouseMove = function (e) {\n    if (e.type === 'touchmove') {\n      this.isTouch = true;\n    } else {\n      this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n    }\n    if (this.tooltipRenderModule && !this.isTouch) {\n      this.tooltipRenderModule.smithchartMouseMove(this, e);\n    }\n  };\n  Smithchart.prototype.mouseEnd = function (e) {\n    if (e.type === 'touchend') {\n      this.isTouch = true;\n    } else {\n      this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n    }\n    if (this.tooltipRenderModule && this.isTouch) {\n      var tooltipElement_1 = this.tooltipRenderModule.smithchartMouseMove(this, e);\n      if (tooltipElement_1) {\n        this.fadeoutTo = +setTimeout(function () {\n          tooltipElement_1.fadeOut();\n        }, 2000);\n      }\n    }\n  };\n  /**\n   * To handle the click event for the smithchart.\n   */\n  Smithchart.prototype.smithchartOnClick = function (e) {\n    var targetEle = e.target;\n    var targetId = this.isLegendClicked ? targetEle.children[1].id : targetEle.id;\n    var parentElement = document.getElementById(targetId).parentElement;\n    var grpElement = document.getElementById(parentElement.id).parentElement;\n    if (grpElement.id === 'containerlegendItem_Group' && this.legendSettings.toggleVisibility) {\n      var childElement = parentElement.childNodes[1];\n      var circleElement = parentElement.childNodes[0];\n      var legendText = childElement.textContent;\n      var seriesIndex = void 0;\n      var fill = void 0;\n      for (var i = 0; i < this.smithchartLegendModule.legendSeries.length; i++) {\n        if (legendText === this.smithchartLegendModule.legendSeries[i]['text']) {\n          seriesIndex = this.smithchartLegendModule.legendSeries[i].seriesIndex;\n          fill = this.smithchartLegendModule.legendSeries[i].fill;\n        }\n      }\n      var seriesElement = document.getElementById(this.element.id + '_svg' + '_seriesCollection' + seriesIndex);\n      if (seriesElement.getAttribute('visibility') === 'visible') {\n        circleElement.setAttribute('fill', 'gray');\n        seriesElement.setAttribute('visibility', 'hidden');\n        this.series[seriesIndex].visibility = 'hidden';\n      } else {\n        circleElement.setAttribute('fill', fill);\n        seriesElement.setAttribute('visibility', 'visible');\n        this.series[seriesIndex].visibility = 'visible';\n      }\n    }\n  };\n  /**\n   * To unbind event handlers from smithchart.\n   */\n  Smithchart.prototype.unWireEVents = function () {\n    EventHandler.remove(this.element, 'click', this.smithchartOnClick);\n    EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n    EventHandler.remove(this.element, 'keyup', this.chartKeyUp);\n    EventHandler.remove(this.element, 'keydown', this.chartKeyDown);\n    window.removeEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.smithchartOnResize);\n  };\n  Smithchart.prototype.print = function (id) {\n    var exportChart = new ExportUtils(this);\n    exportChart.print(id);\n  };\n  /**\n   * Handles the export method for chart control.\n   */\n  Smithchart.prototype.export = function (type, fileName, orientation) {\n    var exportMap = new ExportUtils(this);\n    exportMap.export(type, fileName, orientation);\n  };\n  /**\n   * Handles the keyboard onkeydown on smith chart.\n   *\n   * @returns {boolean} false\n   * @private\n   */\n  Smithchart.prototype.chartKeyDown = function (e) {\n    var actionKey = '';\n    if (this.series[this.currentSeriesIndex].tooltip.visible && (e.code === 'Tab' && this.previousTargetId.indexOf('_Series') > -1 || e.code === 'Escape')) {\n      actionKey = 'ESC';\n    }\n    if (actionKey !== '') {\n      this.smithchartKeyboardNavigations(e, e.target.id, actionKey);\n    }\n    return false;\n  };\n  /**\n   * Handles the keyboard onkeydown on  smith chart.\n   *\n   * @returns {boolean} false\n   * @private\n   */\n  Smithchart.prototype.chartKeyUp = function (e) {\n    var actionKey = '';\n    var targetId = e.target['id'];\n    var groupElement;\n    var targetElement = e.target;\n    var titleElement = getElement(this.element.id + '_Smithchart_title');\n    var seriesElement = getElement(this.element.id + '_svg' + '_seriesCollections');\n    var legendElement = getElement(this.element.id + 'legendItem_Group');\n    if (titleElement) {\n      titleElement.setAttribute('class', 'e-smith-chart-focused');\n    }\n    if (seriesElement && seriesElement.firstElementChild && seriesElement.firstElementChild.children[1].lastElementChild) {\n      var firstChild = seriesElement.firstElementChild.children[1].lastElementChild;\n      var className = firstChild.getAttribute('class');\n      if (className && className.indexOf('e-smith-chart-focused') === -1) {\n        className = className + ' e-smith-chart-focused';\n      } else if (!className) {\n        className = 'e-smith-chart-focused';\n      }\n      firstChild.setAttribute('class', className);\n    }\n    if (legendElement) {\n      var firstChild = legendElement.firstElementChild;\n      var className = firstChild.getAttribute('class');\n      if (className && className.indexOf('e-smith-chart-focused') === -1) {\n        className = className + ' e-smith-chart-focused';\n      } else if (!className) {\n        className = 'e-smith-chart-focused';\n      }\n      firstChild.setAttribute('class', className);\n    }\n    if (e.code === 'Tab') {\n      if (this.previousTargetId !== '') {\n        if (this.previousTargetId.indexOf('_Series') > -1 && targetId.indexOf('_Series') === -1) {\n          groupElement = getElement(this.element.id + '_svg_seriesCollections');\n          var previousElement = this.previousTargetId.indexOf('_Marker') > -1 ? getElement(this.element.id + '_svg_series' + this.currentSeriesIndex + '_Marker').children[this.currentPointIndex] : groupElement.children[this.currentSeriesIndex];\n          this.setTabIndex(previousElement, document.getElementById(this.element.id + '_Series0_Points0_Marker0'));\n          this.currentPointIndex = 0;\n          this.currentSeriesIndex = 0;\n        } else if (this.previousTargetId.indexOf('_svg_Legend') > -1 && targetId.indexOf('_svg_Legend') === -1) {\n          groupElement = getElement(this.element.id + 'legendItem_Group');\n          this.setTabIndex(groupElement.children[this.currentLegendIndex], groupElement.firstElementChild);\n        }\n      }\n      this.previousTargetId = targetId;\n      actionKey = this.series[0].tooltip.visible ? 'Tab' : '';\n    } else if (e.code.indexOf('Arrow') > -1) {\n      e.preventDefault();\n      this.previousTargetId = targetId;\n      if (targetId.indexOf('_svg_Legend') > -1) {\n        var legendElement_1 = targetElement.parentElement.children;\n        legendElement_1[this.currentLegendIndex].removeAttribute('tabindex');\n        this.currentLegendIndex += e.code === 'ArrowUp' || e.code === 'ArrowRight' ? +1 : -1;\n        this.currentLegendIndex = this.getActualIndex(this.currentLegendIndex, legendElement_1.length);\n        var currentLegend = legendElement_1[this.currentLegendIndex];\n        this.focusChild(currentLegend);\n        targetId = currentLegend.children[1].id;\n      } else if (targetId.indexOf('_Series') > -1) {\n        groupElement = targetElement.parentElement.parentElement.parentElement;\n        var currentPoint = e.target;\n        targetElement.removeAttribute('tabindex');\n        targetElement.blur();\n        if (e.code === 'ArrowRight' || e.code === 'ArrowLeft') {\n          var seriesIndexes = [];\n          for (var i = 0; i < groupElement.children.length; i++) {\n            if (groupElement.children[i].id.indexOf('_svg_seriesCollection') > -1) {\n              seriesIndexes.push(+groupElement.children[i].id.split('_svg_seriesCollection')[1]);\n            }\n          }\n          this.currentSeriesIndex = seriesIndexes.indexOf(this.currentSeriesIndex) + (e.code === 'ArrowRight' ? 1 : -1);\n          this.currentSeriesIndex = seriesIndexes[this.getActualIndex(this.currentSeriesIndex, seriesIndexes.length)];\n        } else {\n          this.currentPointIndex += e.code === 'ArrowUp' ? 1 : -1;\n        }\n        if (targetId.indexOf('_Marker') > -1) {\n          this.currentPointIndex = this.getActualIndex(this.currentPointIndex, getElement(this.element.id + '_svg_series' + this.currentSeriesIndex + '_Marker').childElementCount);\n          currentPoint = getElement(this.element.id + '_Series' + this.currentSeriesIndex + '_Points' + this.currentPointIndex + '_Marker' + this.currentPointIndex);\n        }\n        targetId = this.focusChild(currentPoint);\n        actionKey = this.series[this.currentSeriesIndex].tooltip.visible ? 'ArrowMove' : '';\n      }\n    } else if ((e.code === 'Enter' || e.code === 'Space') && targetId.indexOf('_svg_Legend') > -1) {\n      targetId = targetId.indexOf('_svg_Legend') > -1 ? targetElement.children[1].id : targetId;\n      actionKey = 'Enter';\n    }\n    if (actionKey !== '') {\n      this.smithchartKeyboardNavigations(e, targetId, actionKey);\n    }\n    return false;\n  };\n  Smithchart.prototype.smithchartKeyboardNavigations = function (e, targetId, actionKey) {\n    this.isLegendClicked = false;\n    switch (actionKey) {\n      case 'Tab':\n      case 'ArrowMove':\n        if (targetId.indexOf('_Points') > -1) {\n          var seriesIndex = +targetId.split('_Series')[1].split('_Points')[0];\n          var pointIndex = +targetId.split('_Series')[1].split('_Marker')[0].split('_Points')[1];\n          var pointRegion = this.seriesrender.location[seriesIndex][pointIndex];\n          if (this.tooltipRenderModule && this.series[seriesIndex].tooltip.visible) {\n            var closestPoint = new ClosestPoint();\n            closestPoint = this.tooltipRenderModule.closestPointXY(this, pointRegion.x, pointRegion.y, this.series[seriesIndex], seriesIndex);\n            this.tooltipRenderModule.createTooltip(this, e, pointIndex, seriesIndex, this.series[seriesIndex]);\n          }\n        }\n        break;\n      case 'Enter':\n      case 'Space':\n        if (targetId.indexOf('_LegendItemText') > -1) {\n          this.isLegendClicked = true;\n          this.delayRedraw = true;\n          this.smithchartOnClick(e);\n          this.focusChild(document.getElementById(targetId).parentElement);\n        }\n        break;\n      case 'ESC':\n        this.tooltipRenderModule.tooltipElement.fadeOut();\n        break;\n    }\n  };\n  Smithchart.prototype.setTabIndex = function (previousElement, currentElement) {\n    if (previousElement) {\n      previousElement.removeAttribute('tabindex');\n    }\n    if (currentElement) {\n      currentElement.setAttribute('tabindex', '0');\n    }\n  };\n  Smithchart.prototype.getActualIndex = function (index, totalLength) {\n    return index > totalLength - 1 ? 0 : index < 0 ? totalLength - 1 : index;\n  };\n  Smithchart.prototype.focusChild = function (element) {\n    element.setAttribute('tabindex', '0');\n    var className = element.getAttribute('class');\n    element.setAttribute('tabindex', '0');\n    if (className && className.indexOf('e-smith-chart-focused') === -1) {\n      className = 'e-smith-chart-focused ' + className;\n    } else if (!className) {\n      className = 'e-smith-chart-focused';\n    }\n    element.setAttribute('class', className);\n    element.focus();\n    return element.id;\n  };\n  /**\n   * To handle the window resize event on smithchart.\n   */\n  Smithchart.prototype.smithchartOnResize = function () {\n    var _this = this;\n    this.animateSeries = false;\n    if (this.resizeTo) {\n      clearTimeout(this.resizeTo);\n    }\n    this.resizeTo = +setTimeout(function () {\n      _this.render();\n    }, 500);\n    return false;\n  };\n  /**\n   * To provide the array of modules needed for smithchart rendering\n   *\n   * @private\n   */\n  Smithchart.prototype.requiredModules = function () {\n    var modules = [];\n    if (this.legendSettings.visible) {\n      modules.push({\n        member: 'SmithchartLegend',\n        args: [this]\n      });\n    }\n    for (var i = 0; i < this.series.length; i++) {\n      if (this.series[i].tooltip.visible) {\n        modules.push({\n          member: 'TooltipRender',\n          args: [this]\n        });\n        break;\n      }\n    }\n    return modules;\n  };\n  /**\n   * To Remove the SVG.\n   *\n   * @private\n   */\n  Smithchart.prototype.removeSvg = function () {\n    removeElement(this.element.id + '_Secondary_Element');\n    var removeLength = 0;\n    if (this.svgObject) {\n      while (this.svgObject.childNodes.length > removeLength) {\n        this.svgObject.removeChild(this.svgObject.firstChild);\n      }\n      if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n        remove(this.svgObject);\n      }\n    }\n  };\n  __decorate([Property('Impedance')], Smithchart.prototype, \"renderType\", void 0);\n  __decorate([Property('')], Smithchart.prototype, \"width\", void 0);\n  __decorate([Property('')], Smithchart.prototype, \"height\", void 0);\n  __decorate([Property('Material')], Smithchart.prototype, \"theme\", void 0);\n  __decorate([Complex({}, SmithchartMargin)], Smithchart.prototype, \"margin\", void 0);\n  __decorate([Complex({}, SmithchartFont)], Smithchart.prototype, \"font\", void 0);\n  __decorate([Complex({}, SmithchartBorder)], Smithchart.prototype, \"border\", void 0);\n  __decorate([Complex({}, Title)], Smithchart.prototype, \"title\", void 0);\n  __decorate([Collection([{}], SmithchartSeries)], Smithchart.prototype, \"series\", void 0);\n  __decorate([Complex({}, SmithchartLegendSettings)], Smithchart.prototype, \"legendSettings\", void 0);\n  __decorate([Complex({}, SmithchartAxis)], Smithchart.prototype, \"horizontalAxis\", void 0);\n  __decorate([Complex({}, SmithchartAxis)], Smithchart.prototype, \"radialAxis\", void 0);\n  __decorate([Property(null)], Smithchart.prototype, \"background\", void 0);\n  __decorate([Property(10)], Smithchart.prototype, \"elementSpacing\", void 0);\n  __decorate([Property(1)], Smithchart.prototype, \"radius\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"animationComplete\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"load\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"loaded\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"legendRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"titleRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"subtitleRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"textRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"axisLabelRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"seriesRender\", void 0);\n  __decorate([Event()], Smithchart.prototype, \"tooltipRender\", void 0);\n  Smithchart = __decorate([NotifyPropertyChanges], Smithchart);\n  return Smithchart;\n}(Component);\nexport { Smithchart };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Complex","NotifyPropertyChanges","Property","isNullOrUndefined","Browser","createElement","remove","Event","EventHandler","createSvg","RectOption","measureText","TextOption","renderTextElement","removeElement","textTrim","ClosestPoint","SmithchartRect","SmithchartMargin","SmithchartBorder","SmithchartFont","getThemeColor","SmithchartLegendSettings","SmithchartAxis","Title","SmithchartSeries","AreaBounds","AxisRender","SeriesRender","Collection","getSeriesColor","ExportUtils","titleRender","subtitleRender","load","loaded","getElement","Smithchart","_super","options","element","_this","call","isLegendClicked","previousTargetId","currentPointIndex","currentSeriesIndex","currentLegendIndex","getModuleName","getPersistData","createChartSvg","removeSvg","renderTitle","title","type","groupEle","font","textStyle","textSize","text","themeStyle","smithchartTitleFont","x","textAlignment","titleText","maxTitleWidth","maximumWidth","Math","abs","margin","left","right","availableSize","width","titleWidthEnable","border","elementSpacing","y","top","enableTrim","renderer","createGroup","id","titleEventArgs","name","cancel","titleRenderSuccess","args","color","setAttribute","titleLocation","svgObject","appendChild","subtitle","visible","renderSubtitle","bind","trigger","size","subTitle","subTitleSize","smithchartSubtitleFont","subTitleText","maxSubTitleWidth","bounds","textAnchor","subtitleEventArgs","subtitleRenderSuccess","description","renderBorder","background","borderRect","height","drawRectangle","onPropertyChanged","newProp","oldProp","delayRedraw","_i","_a","keys","prop","animateSeries","render","preRender","allowServerDataBinding","smithchart","unWireEVents","initPrivateVariable","wireEVents","setTheme","theme","seriesColors","document","getElementById","style","innerText","tabColor","body","createSecondaryElement","smithchartLegendModule","legendSettings","legendBounds","calculateLegendBounds","areaBounds","calculateAreaBounds","axisRender","renderArea","seriesrender","draw","renderLegend","renderComplete","secondaryElement","styles","rect","getBoundingClientRect","svgRect","svgClientRect","max","destroy","classList","add","smithchartOnClick","touchMoveEvent","mouseMove","touchEndEvent","mouseEnd","chartKeyUp","chartKeyDown","window","addEventListener","isTouch","smithchartOnResize","e","pointerType","tooltipRenderModule","smithchartMouseMove","tooltipElement_1","fadeoutTo","setTimeout","fadeOut","targetEle","targetId","children","parentElement","grpElement","toggleVisibility","childElement","childNodes","circleElement","legendText","textContent","seriesIndex","fill","legendSeries","seriesElement","getAttribute","series","visibility","removeEventListener","print","exportChart","export","fileName","orientation","exportMap","actionKey","tooltip","code","indexOf","smithchartKeyboardNavigations","groupElement","targetElement","titleElement","legendElement","firstElementChild","lastElementChild","firstChild","className","previousElement","setTabIndex","preventDefault","legendElement_1","removeAttribute","getActualIndex","currentLegend","focusChild","currentPoint","blur","seriesIndexes","push","split","childElementCount","pointIndex","pointRegion","location","closestPoint","closestPointXY","createTooltip","tooltipElement","currentElement","index","totalLength","focus","resizeTo","clearTimeout","requiredModules","modules","member","removeLength","removeChild","hasChildNodes","parentNode"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-charts/src/smithchart/smithchart.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\nimport { Component, Complex, NotifyPropertyChanges, Property } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { createElement, remove, Event, EventHandler } from '@syncfusion/ej2-base';\nimport { createSvg, RectOption, measureText, TextOption, renderTextElement } from '../smithchart/utils/helper';\nimport { removeElement, textTrim } from '../smithchart/utils/helper';\nimport { ClosestPoint, SmithchartRect } from '../smithchart/utils/utils';\nimport { SmithchartMargin, SmithchartBorder, SmithchartFont } from '../smithchart/utils/utils';\nimport { getThemeColor } from '../smithchart/model/theme';\nimport { SmithchartLegendSettings } from '../smithchart/legend/legend';\nimport { SmithchartAxis } from '../smithchart/axis/axis';\nimport { Title } from '../smithchart/title/title';\nimport { SmithchartSeries } from '../smithchart/series/series';\nimport { AreaBounds } from '../smithchart/utils/area';\nimport { AxisRender } from '../smithchart/axis/axisrender';\nimport { SeriesRender } from '../smithchart/series/seriesrender';\nimport { Collection } from '@syncfusion/ej2-base';\nimport { getSeriesColor } from '../smithchart/model/theme';\nimport { ExportUtils } from '../smithchart/utils/export';\nimport { titleRender, subtitleRender, load, loaded } from '../smithchart/model/constant';\nimport { getElement } from '../common/utils/helper';\n/**\n * Represents the Smithchart control.\n * ```html\n * <div id=\"smithchart\"/>\n * <script>\n *   var chartObj = new Smithchart({ isResponsive : true });\n *   chartObj.appendTo(\"#smithchart\");\n * </script>\n * ```\n */\nvar Smithchart = /** @class */ (function (_super) {\n    __extends(Smithchart, _super);\n    /**\n     * Constructor for creating the Smithchart widget\n     */\n    function Smithchart(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isLegendClicked = false;\n        _this.previousTargetId = '';\n        _this.currentPointIndex = 0;\n        _this.currentSeriesIndex = 0;\n        _this.currentLegendIndex = 0;\n        return _this;\n    }\n    /**\n     * Get component name\n     */\n    Smithchart.prototype.getModuleName = function () {\n        return 'smithchart';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     */\n    Smithchart.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * Method to create SVG element.\n     */\n    Smithchart.prototype.createChartSvg = function () {\n        this.removeSvg();\n        createSvg(this);\n    };\n    Smithchart.prototype.renderTitle = function (title, type, groupEle) {\n        var _this = this;\n        var font = title.textStyle;\n        var textSize = measureText(title.text, font, this.themeStyle.smithchartTitleFont);\n        var x;\n        var textAlignment = title.textAlignment;\n        var titleText = title.text;\n        var maxTitleWidth = (isNullOrUndefined(title.maximumWidth)) ?\n            Math.abs(this.margin.left + this.margin.right - (this.availableSize.width)) :\n            title.maximumWidth;\n        var titleWidthEnable = textSize.width > maxTitleWidth ? true : false;\n        if (textSize.width > this.availableSize.width) {\n            x = this.margin.left + this.border.width;\n        }\n        else {\n            x = textAlignment === 'Center' ? (this.availableSize.width / 2 - textSize['width'] / 2) :\n                (textAlignment === 'Near' ? (this.margin.left + this.elementSpacing + this.border.width) : (this.availableSize.width\n                    - textSize['width'] - (this.margin.right + this.elementSpacing + this.border.width)));\n        }\n        var y = this.margin.top + textSize['height'] / 2 + this.elementSpacing;\n        if (title.enableTrim && titleWidthEnable) {\n            titleText = textTrim(maxTitleWidth, title.text, font, this.themeStyle.smithchartTitleFont);\n            textSize = measureText(titleText, font, this.themeStyle.smithchartTitleFont);\n        }\n        groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n        var titleEventArgs = {\n            text: titleText,\n            x: x,\n            y: y,\n            name: titleRender,\n            cancel: false\n        };\n        var options;\n        var titleRenderSuccess = function (args) {\n            if (!args.cancel) {\n                options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, 'start', args.text);\n                var element = renderTextElement(options, font, font.color || _this.themeStyle.smithchartTitleFont.color, groupEle, _this.themeStyle.smithchartTitleFont);\n                element.setAttribute('tabindex', '0');\n                var titleLocation = { x: args.x, y: args.y, textSize: textSize };\n                _this.svgObject.appendChild(groupEle);\n                if (title.subtitle.text !== '' && title.subtitle.visible) {\n                    _this.renderSubtitle(title, type, textSize, _this.availableSize, titleLocation, groupEle);\n                }\n            }\n        };\n        titleRenderSuccess.bind(this);\n        this.trigger(titleRender, titleEventArgs, titleRenderSuccess);\n    };\n    Smithchart.prototype.renderSubtitle = function (title, type, textSize, size, titleLocation, groupEle) {\n        var _this = this;\n        var font = title.subtitle.textStyle;\n        var subTitle = title.subtitle;\n        var subTitleSize = measureText(subTitle.text, font, this.themeStyle.smithchartSubtitleFont);\n        var subTitleText = subTitle.text;\n        var maxSubTitleWidth = isNullOrUndefined(subTitle.maximumWidth) ?\n            (this.bounds.width * 0.75) : subTitle.maximumWidth;\n        if (subTitle.enableTrim && subTitleSize.width > maxSubTitleWidth) {\n            subTitleText = textTrim(maxSubTitleWidth, subTitle.text, font, this.themeStyle.smithchartSubtitleFont);\n        }\n        var x = title['subtitle'].textAlignment === 'Far' ? (titleLocation.x + (titleLocation.textSize.width)) :\n            (title['subtitle'].textAlignment === 'Near') ? titleLocation.x :\n                (titleLocation.x + (titleLocation.textSize.width / 2));\n        var y = titleLocation.y + (2 * this.elementSpacing);\n        var textAnchor = title['subtitle'].textAlignment === 'Far' ? 'end' :\n            (title['subtitle'].textAlignment === 'Near') ? 'start' : 'middle';\n        var subtitleEventArgs = {\n            text: subTitleText,\n            x: x,\n            y: y,\n            name: subtitleRender,\n            cancel: false\n        };\n        var subtitleRenderSuccess = function (args) {\n            if (!args.cancel) {\n                var options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, textAnchor, args.text);\n                var element = renderTextElement(options, font, font.color || _this.themeStyle.smithchartSubtitleFont.color, groupEle, _this.themeStyle.smithchartSubtitleFont);\n                element.setAttribute('aria-label', subTitle.description || args.text);\n                groupEle.appendChild(element);\n            }\n        };\n        subtitleRenderSuccess.bind(this);\n        this.trigger(subtitleRender, subtitleEventArgs, subtitleRenderSuccess);\n    };\n    /**\n     * Render the smithchart border\n     *\n     * @private\n     */\n    Smithchart.prototype.renderBorder = function () {\n        var border = this.border;\n        this.background = this.background ? this.background : this.themeStyle.background;\n        var borderRect = new RectOption(this.element.id + '_SmithchartBorder', this.background, border, 1, new SmithchartRect(border.width / 2, border.width / 2, this.availableSize.width - border.width, this.availableSize.height - border.width));\n        var element = this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        element.setAttribute('aria-hidden', 'true');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Smithchart.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        if (!this.delayRedraw) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                    case 'border':\n                    case 'series':\n                    case 'legendSettings':\n                    case 'radius':\n                    case 'enableRtl':\n                        renderer = true;\n                        break;\n                    case 'size':\n                        this.createChartSvg();\n                        renderer = true;\n                        break;\n                    case 'theme':\n                    case 'renderType':\n                        this.animateSeries = true;\n                        renderer = true;\n                        break;\n                }\n            }\n            if (renderer) {\n                this.render();\n            }\n        }\n    };\n    /**\n     * Initialize the event handler.\n     */\n    Smithchart.prototype.preRender = function () {\n        this.allowServerDataBinding = false;\n        this.trigger(load, { smithchart: this });\n        this.unWireEVents();\n        this.initPrivateVariable();\n        this.wireEVents();\n    };\n    Smithchart.prototype.initPrivateVariable = function () {\n        this.animateSeries = true;\n        this.delayRedraw = false;\n        this.element.setAttribute('role', 'region');\n        this.element.setAttribute('aria-label', this.title.description || this.title.text + '. Syncfusion interactive chart.');\n        this.element.setAttribute('tabindex', '0');\n    };\n    /**\n     * To Initialize the control rendering.\n     */\n    Smithchart.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n        this.seriesColors = getSeriesColor(this.theme);\n        if (!(document.getElementById(this.element.id + 'Keyboard_smith_chart_focus'))) {\n            var style = document.createElement('style');\n            style.setAttribute('id', this.element.id + 'Keyboard_smith_chart_focus');\n            style.innerText = '.e-smith-chart-focused:focus,' +\n                'div[id*=container]:focus, text[id*=_Smithchart_title]:focus, path[id*=_Points]:focus, g[id*=_svg_seriesCollection]:focus, g[id*=_svg_Legend]:focus {outline: none } .e-smith-chart-focused:focus-visible,' +\n                'div[id*=container]:focus-visible, text[id*=_Smithchart_title]:focus-visible, path[id*=_Points]:focus-visible, g[id*=_svg_seriesCollection]:focus-visible, g[id*=_svg_Legend]:focus-visible {outline: 1.5px ' + this.themeStyle.tabColor + ' solid}';\n            document.body.appendChild(style);\n        }\n        // let count: number = colors.length;\n        // for (let i: number = 0; i < this.series.length; i++) {\n        //     this.series[i].fill = this.series[i].fill ? this.series[i].fill : colors[i % count];\n        // }\n    };\n    Smithchart.prototype.render = function () {\n        this.createChartSvg();\n        this.element.appendChild(this.svgObject);\n        this.setTheme();\n        this.createSecondaryElement();\n        this.renderBorder();\n        if (this.smithchartLegendModule && this.legendSettings.visible) {\n            this.legendBounds = this.smithchartLegendModule.calculateLegendBounds(this);\n        }\n        var areaBounds = new AreaBounds();\n        this.bounds = areaBounds.calculateAreaBounds(this, this.title, this.legendBounds);\n        if (this.title.text !== '' && this.title.visible) {\n            this.renderTitle(this.title, 'title', null);\n        }\n        var axisRender = new AxisRender();\n        axisRender.renderArea(this, this.bounds);\n        this.seriesrender = new SeriesRender();\n        this.seriesrender.draw(this, axisRender, this.bounds);\n        if (this.smithchartLegendModule && this.legendSettings.visible) {\n            this.smithchartLegendModule.renderLegend(this);\n        }\n        this.renderComplete();\n        this.allowServerDataBinding = true;\n        this.trigger(loaded, { smithchart: this });\n    };\n    Smithchart.prototype.createSecondaryElement = function () {\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n            var rect = this.element.getBoundingClientRect();\n            var svgRect = document.getElementById(this.element.id + '_svg');\n            if (svgRect) {\n                var svgClientRect = svgRect.getBoundingClientRect();\n                secondaryElement.style.left = Math.max(svgClientRect.left - rect.left, 0) + 'px';\n                secondaryElement.style.top = Math.max(svgClientRect.top - rect.top, 0) + 'px';\n            }\n        }\n        else {\n            removeElement(this.element.id + '_Secondary_Element');\n        }\n    };\n    /**\n     * To destroy the widget\n     *\n     * @returns {void}.\n     */\n    Smithchart.prototype.destroy = function () {\n        if (this.element) {\n            this.unWireEVents();\n            _super.prototype.destroy.call(this);\n            this.element.classList.remove('e-smithchart');\n            this.removeSvg();\n            this.svgObject = null;\n            var element = document.getElementById(this.element.id + 'Keyboard_smith_chart_focus');\n            if (element) {\n                element.remove();\n            }\n            removeElement('smithchartmeasuretext');\n        }\n    };\n    /**\n     * To bind event handlers for smithchart.\n     */\n    Smithchart.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.smithchartOnClick, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'keyup', this.chartKeyUp, this);\n        EventHandler.add(this.element, 'keydown', this.chartKeyDown, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.smithchartOnResize.bind(this));\n    };\n    Smithchart.prototype.mouseMove = function (e) {\n        if (e.type === 'touchmove') {\n            this.isTouch = true;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n        }\n        if (this.tooltipRenderModule && !this.isTouch) {\n            this.tooltipRenderModule.smithchartMouseMove(this, e);\n        }\n    };\n    Smithchart.prototype.mouseEnd = function (e) {\n        if (e.type === 'touchend') {\n            this.isTouch = true;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n        }\n        if (this.tooltipRenderModule && this.isTouch) {\n            var tooltipElement_1 = this.tooltipRenderModule.smithchartMouseMove(this, e);\n            if (tooltipElement_1) {\n                this.fadeoutTo = +setTimeout(function () {\n                    tooltipElement_1.fadeOut();\n                }, 2000);\n            }\n        }\n    };\n    /**\n     * To handle the click event for the smithchart.\n     */\n    Smithchart.prototype.smithchartOnClick = function (e) {\n        var targetEle = e.target;\n        var targetId = this.isLegendClicked ? targetEle.children[1].id : targetEle.id;\n        var parentElement = document.getElementById(targetId).parentElement;\n        var grpElement = document.getElementById(parentElement.id).parentElement;\n        if (grpElement.id === 'containerlegendItem_Group' && this.legendSettings.toggleVisibility) {\n            var childElement = parentElement.childNodes[1];\n            var circleElement = parentElement.childNodes[0];\n            var legendText = childElement.textContent;\n            var seriesIndex = void 0;\n            var fill = void 0;\n            for (var i = 0; i < this.smithchartLegendModule.legendSeries.length; i++) {\n                if (legendText === this.smithchartLegendModule.legendSeries[i]['text']) {\n                    seriesIndex = this.smithchartLegendModule.legendSeries[i].seriesIndex;\n                    fill = this.smithchartLegendModule.legendSeries[i].fill;\n                }\n            }\n            var seriesElement = document.getElementById(this.element.id + '_svg' + '_seriesCollection' + seriesIndex);\n            if (seriesElement.getAttribute('visibility') === 'visible') {\n                circleElement.setAttribute('fill', 'gray');\n                seriesElement.setAttribute('visibility', 'hidden');\n                this.series[seriesIndex].visibility = 'hidden';\n            }\n            else {\n                circleElement.setAttribute('fill', fill);\n                seriesElement.setAttribute('visibility', 'visible');\n                this.series[seriesIndex].visibility = 'visible';\n            }\n        }\n    };\n    /**\n     * To unbind event handlers from smithchart.\n     */\n    Smithchart.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.smithchartOnClick);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'keyup', this.chartKeyUp);\n        EventHandler.remove(this.element, 'keydown', this.chartKeyDown);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.smithchartOnResize);\n    };\n    Smithchart.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     */\n    Smithchart.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /**\n     * Handles the keyboard onkeydown on smith chart.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    Smithchart.prototype.chartKeyDown = function (e) {\n        var actionKey = '';\n        if (this.series[this.currentSeriesIndex].tooltip.visible && ((e.code === 'Tab' && this.previousTargetId.indexOf('_Series') > -1) || e.code === 'Escape')) {\n            actionKey = 'ESC';\n        }\n        if (actionKey !== '') {\n            this.smithchartKeyboardNavigations(e, e.target.id, actionKey);\n        }\n        return false;\n    };\n    /**\n     * Handles the keyboard onkeydown on  smith chart.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    Smithchart.prototype.chartKeyUp = function (e) {\n        var actionKey = '';\n        var targetId = e.target['id'];\n        var groupElement;\n        var targetElement = e.target;\n        var titleElement = getElement(this.element.id + '_Smithchart_title');\n        var seriesElement = getElement(this.element.id + '_svg' + '_seriesCollections');\n        var legendElement = getElement(this.element.id + 'legendItem_Group');\n        if (titleElement) {\n            titleElement.setAttribute('class', 'e-smith-chart-focused');\n        }\n        if (seriesElement && seriesElement.firstElementChild && seriesElement.firstElementChild.children[1].lastElementChild) {\n            var firstChild = seriesElement.firstElementChild.children[1].lastElementChild;\n            var className = firstChild.getAttribute('class');\n            if (className && className.indexOf('e-smith-chart-focused') === -1) {\n                className = className + ' e-smith-chart-focused';\n            }\n            else if (!className) {\n                className = 'e-smith-chart-focused';\n            }\n            firstChild.setAttribute('class', className);\n        }\n        if (legendElement) {\n            var firstChild = legendElement.firstElementChild;\n            var className = firstChild.getAttribute('class');\n            if (className && className.indexOf('e-smith-chart-focused') === -1) {\n                className = className + ' e-smith-chart-focused';\n            }\n            else if (!className) {\n                className = 'e-smith-chart-focused';\n            }\n            firstChild.setAttribute('class', className);\n        }\n        if (e.code === 'Tab') {\n            if (this.previousTargetId !== '') {\n                if ((this.previousTargetId.indexOf('_Series') > -1 && targetId.indexOf('_Series') === -1)) {\n                    groupElement = getElement(this.element.id + '_svg_seriesCollections');\n                    var previousElement = this.previousTargetId.indexOf('_Marker') > -1 ?\n                        getElement(this.element.id + '_svg_series' + this.currentSeriesIndex + '_Marker').children[this.currentPointIndex] :\n                        groupElement.children[this.currentSeriesIndex];\n                    this.setTabIndex(previousElement, document.getElementById(this.element.id + '_Series0_Points0_Marker0'));\n                    this.currentPointIndex = 0;\n                    this.currentSeriesIndex = 0;\n                }\n                else if (this.previousTargetId.indexOf('_svg_Legend') > -1 && targetId.indexOf('_svg_Legend') === -1) {\n                    groupElement = getElement(this.element.id + 'legendItem_Group');\n                    this.setTabIndex(groupElement.children[this.currentLegendIndex], groupElement.firstElementChild);\n                }\n            }\n            this.previousTargetId = targetId;\n            actionKey = this.series[0].tooltip.visible ? 'Tab' : '';\n        }\n        else if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n            this.previousTargetId = targetId;\n            if ((targetId.indexOf('_svg_Legend') > -1)) {\n                var legendElement_1 = targetElement.parentElement.children;\n                legendElement_1[this.currentLegendIndex].removeAttribute('tabindex');\n                this.currentLegendIndex += (e.code === 'ArrowUp' || e.code === 'ArrowRight') ? +1 : -1;\n                this.currentLegendIndex = this.getActualIndex(this.currentLegendIndex, legendElement_1.length);\n                var currentLegend = legendElement_1[this.currentLegendIndex];\n                this.focusChild(currentLegend);\n                targetId = currentLegend.children[1].id;\n            }\n            else if (targetId.indexOf('_Series') > -1) {\n                groupElement = targetElement.parentElement.parentElement.parentElement;\n                var currentPoint = e.target;\n                targetElement.removeAttribute('tabindex');\n                targetElement.blur();\n                if (e.code === 'ArrowRight' || e.code === 'ArrowLeft') {\n                    var seriesIndexes = [];\n                    for (var i = 0; i < groupElement.children.length; i++) {\n                        if (groupElement.children[i].id.indexOf('_svg_seriesCollection') > -1) {\n                            seriesIndexes.push(+groupElement.children[i].id.split('_svg_seriesCollection')[1]);\n                        }\n                    }\n                    this.currentSeriesIndex = seriesIndexes.indexOf(this.currentSeriesIndex) + (e.code === 'ArrowRight' ? 1 : -1);\n                    this.currentSeriesIndex = seriesIndexes[this.getActualIndex(this.currentSeriesIndex, seriesIndexes.length)];\n                }\n                else {\n                    this.currentPointIndex += e.code === 'ArrowUp' ? 1 : -1;\n                }\n                if (targetId.indexOf('_Marker') > -1) {\n                    this.currentPointIndex = this.getActualIndex(this.currentPointIndex, getElement(this.element.id + '_svg_series' + this.currentSeriesIndex + '_Marker').childElementCount);\n                    currentPoint = getElement(this.element.id + '_Series' + this.currentSeriesIndex + '_Points' +\n                        this.currentPointIndex + '_Marker' + this.currentPointIndex);\n                }\n                targetId = this.focusChild(currentPoint);\n                actionKey = this.series[this.currentSeriesIndex].tooltip.visible ? 'ArrowMove' : '';\n            }\n        }\n        else if ((e.code === 'Enter' || e.code === 'Space') && (targetId.indexOf('_svg_Legend') > -1)) {\n            targetId = (targetId.indexOf('_svg_Legend') > -1) ? targetElement.children[1].id : targetId;\n            actionKey = 'Enter';\n        }\n        if (actionKey !== '') {\n            this.smithchartKeyboardNavigations(e, targetId, actionKey);\n        }\n        return false;\n    };\n    Smithchart.prototype.smithchartKeyboardNavigations = function (e, targetId, actionKey) {\n        this.isLegendClicked = false;\n        switch (actionKey) {\n            case 'Tab':\n            case 'ArrowMove':\n                if (targetId.indexOf('_Points') > -1) {\n                    var seriesIndex = +(targetId.split('_Series')[1].split('_Points')[0]);\n                    var pointIndex = +(targetId.split('_Series')[1].split('_Marker')[0].split('_Points')[1]);\n                    var pointRegion = this.seriesrender.location[seriesIndex][pointIndex];\n                    if (this.tooltipRenderModule && this.series[seriesIndex].tooltip.visible) {\n                        var closestPoint = new ClosestPoint();\n                        closestPoint = this.tooltipRenderModule.closestPointXY(this, pointRegion.x, pointRegion.y, this.series[seriesIndex], seriesIndex);\n                        this.tooltipRenderModule.createTooltip(this, e, pointIndex, seriesIndex, this.series[seriesIndex]);\n                    }\n                }\n                break;\n            case 'Enter':\n            case 'Space':\n                if (targetId.indexOf('_LegendItemText') > -1) {\n                    this.isLegendClicked = true;\n                    this.delayRedraw = true;\n                    this.smithchartOnClick(e);\n                    this.focusChild(document.getElementById(targetId).parentElement);\n                }\n                break;\n            case 'ESC':\n                this.tooltipRenderModule.tooltipElement.fadeOut();\n                break;\n        }\n    };\n    Smithchart.prototype.setTabIndex = function (previousElement, currentElement) {\n        if (previousElement) {\n            previousElement.removeAttribute('tabindex');\n        }\n        if (currentElement) {\n            currentElement.setAttribute('tabindex', '0');\n        }\n    };\n    Smithchart.prototype.getActualIndex = function (index, totalLength) {\n        return index > totalLength - 1 ? 0 : (index < 0 ? totalLength - 1 : index);\n    };\n    Smithchart.prototype.focusChild = function (element) {\n        element.setAttribute('tabindex', '0');\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-smith-chart-focused') === -1) {\n            className = 'e-smith-chart-focused ' + className;\n        }\n        else if (!className) {\n            className = 'e-smith-chart-focused';\n        }\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * To handle the window resize event on smithchart.\n     */\n    Smithchart.prototype.smithchartOnResize = function () {\n        var _this = this;\n        this.animateSeries = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = +setTimeout(function () {\n            _this.render();\n        }, 500);\n        return false;\n    };\n    /**\n     * To provide the array of modules needed for smithchart rendering\n     *\n     * @private\n     */\n    Smithchart.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'SmithchartLegend',\n                args: [this]\n            });\n        }\n        for (var i = 0; i < this.series.length; i++) {\n            if (this.series[i].tooltip.visible) {\n                modules.push({\n                    member: 'TooltipRender',\n                    args: [this]\n                });\n                break;\n            }\n        }\n        return modules;\n    };\n    /**\n     * To Remove the SVG.\n     *\n     * @private\n     */\n    Smithchart.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        var removeLength = 0;\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > removeLength) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    __decorate([\n        Property('Impedance')\n    ], Smithchart.prototype, \"renderType\", void 0);\n    __decorate([\n        Property('')\n    ], Smithchart.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Smithchart.prototype, \"height\", void 0);\n    __decorate([\n        Property('Material')\n    ], Smithchart.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, SmithchartMargin)\n    ], Smithchart.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, SmithchartFont)\n    ], Smithchart.prototype, \"font\", void 0);\n    __decorate([\n        Complex({}, SmithchartBorder)\n    ], Smithchart.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Title)\n    ], Smithchart.prototype, \"title\", void 0);\n    __decorate([\n        Collection([{}], SmithchartSeries)\n    ], Smithchart.prototype, \"series\", void 0);\n    __decorate([\n        Complex({}, SmithchartLegendSettings)\n    ], Smithchart.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, SmithchartAxis)\n    ], Smithchart.prototype, \"horizontalAxis\", void 0);\n    __decorate([\n        Complex({}, SmithchartAxis)\n    ], Smithchart.prototype, \"radialAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], Smithchart.prototype, \"background\", void 0);\n    __decorate([\n        Property(10)\n    ], Smithchart.prototype, \"elementSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], Smithchart.prototype, \"radius\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"titleRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"subtitleRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"tooltipRender\", void 0);\n    Smithchart = __decorate([\n        NotifyPropertyChanges\n    ], Smithchart);\n    return Smithchart;\n}(Component));\nexport { Smithchart };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}