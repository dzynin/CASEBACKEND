{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { WBorders } from './borders';\nimport { WUniqueFormat } from '../../base/unique-format';\nimport { WUniqueFormats } from '../../base/unique-formats';\nimport { WListFormat } from './list-format';\nimport { ParagraphWidget, TableCellWidget, BlockContainer, TextFrame } from '../viewer/page';\nimport { WParagraphStyle } from './style';\n/* eslint-disable */\n/**\n * @private\n */\nvar WTabStop = /** @class */function () {\n  function WTabStop() {}\n  Object.defineProperty(WTabStop.prototype, \"position\", {\n    get: function () {\n      return this.positionIn;\n    },\n    set: function (value) {\n      this.positionIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WTabStop.prototype, \"deletePosition\", {\n    get: function () {\n      return this.deletePositionIn;\n    },\n    set: function (value) {\n      this.deletePositionIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WTabStop.prototype, \"tabJustification\", {\n    get: function () {\n      return this.justification;\n    },\n    set: function (value) {\n      this.justification = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WTabStop.prototype, \"tabLeader\", {\n    get: function () {\n      return this.leader;\n    },\n    set: function (value) {\n      this.leader = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  WTabStop.prototype.clone = function () {\n    var tabStop = new WTabStop();\n    tabStop.deletePosition = this.deletePosition;\n    tabStop.position = this.position;\n    tabStop.tabJustification = this.tabJustification;\n    tabStop.tabLeader = this.tabLeader;\n    return tabStop;\n  };\n  WTabStop.prototype.equals = function (tab) {\n    if (this.position === tab.position && this.deletePosition === tab.deletePosition && this.tabJustification === tab.tabJustification && this.tabLeader === tab.tabLeader) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  WTabStop.prototype.destroy = function () {\n    this.position = undefined;\n    this.deletePosition = undefined;\n    this.tabJustification = undefined;\n    this.leader = undefined;\n  };\n  return WTabStop;\n}();\nexport { WTabStop };\n/**\n * @private\n */\nvar WParagraphFormat = /** @class */function () {\n  function WParagraphFormat(node) {\n    this.uniqueParagraphFormat = undefined;\n    this.ownerBase = undefined;\n    this.baseStyle = undefined;\n    this.tabs = undefined;\n    this.ownerBase = node;\n    this.listFormat = new WListFormat(this);\n    this.borders = new WBorders(this);\n    this.tabs = [];\n  }\n  WParagraphFormat.prototype.getUpdatedTabs = function () {\n    var inTabs = [];\n    var tabStops = new Dictionary();\n    var tabsInListFormat = this.getTabStopsFromListFormat();\n    for (var _i = 0, tabsInListFormat_1 = tabsInListFormat; _i < tabsInListFormat_1.length; _i++) {\n      var tabStop = tabsInListFormat_1[_i];\n      if (!tabStops.containsKey(tabStop.position)) {\n        tabStops.add(tabStop.position, tabStop);\n      }\n    }\n    if (!isNullOrUndefined(this.baseStyle) && this.baseStyle instanceof WParagraphStyle) {\n      var baseStyle = this.baseStyle;\n      while (!isNullOrUndefined(baseStyle)) {\n        for (var _a = 0, _b = baseStyle.paragraphFormat.tabs; _a < _b.length; _a++) {\n          var tab = _b[_a];\n          if (!tabStops.containsKey(tab.position)) {\n            tabStops.add(tab.position, tab);\n          }\n        }\n        baseStyle = baseStyle.basedOn;\n      }\n      for (var _c = 0, _d = tabStops.keys; _c < _d.length; _c++) {\n        var key = _d[_c];\n        if (!this.hasTabStop(parseFloat(key.toFixed(4)))) {\n          inTabs.push(tabStops.get(key));\n        }\n      }\n    }\n    inTabs = inTabs.concat(this.tabs.filter(function (a) {\n      return a.position !== 0 && a.deletePosition === 0;\n    }));\n    inTabs = inTabs.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    return inTabs;\n  };\n  WParagraphFormat.prototype.getTabStopsFromListFormat = function () {\n    if (this.listFormat.listId > -1 && this.listFormat.listLevelNumber > -1) {\n      var level = this.listFormat.listLevel;\n      if (level && level.paragraphFormat) {\n        return level.paragraphFormat.tabs;\n      }\n    }\n    return [];\n  };\n  WParagraphFormat.prototype.hasTabStop = function (position) {\n    for (var i = 0; i < this.tabs.length; i++) {\n      if (parseFloat(this.tabs[i].position.toFixed(4)) === position || parseFloat(this.tabs[i].deletePosition.toFixed(4)) === position) {\n        return true;\n      }\n    }\n    return false;\n  };\n  Object.defineProperty(WParagraphFormat.prototype, \"leftIndent\", {\n    get: function () {\n      return this.getPropertyValue('leftIndent');\n    },\n    set: function (value) {\n      this.setPropertyValue('leftIndent', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"rightIndent\", {\n    get: function () {\n      return this.getPropertyValue('rightIndent');\n    },\n    set: function (value) {\n      this.setPropertyValue('rightIndent', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"firstLineIndent\", {\n    get: function () {\n      return this.getPropertyValue('firstLineIndent');\n    },\n    set: function (value) {\n      this.setPropertyValue('firstLineIndent', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"beforeSpacing\", {\n    get: function () {\n      return this.getPropertyValue('beforeSpacing');\n    },\n    set: function (value) {\n      this.setPropertyValue('beforeSpacing', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"afterSpacing\", {\n    get: function () {\n      return this.getPropertyValue('afterSpacing');\n    },\n    set: function (value) {\n      this.setPropertyValue('afterSpacing', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"spaceBeforeAuto\", {\n    get: function () {\n      return this.getPropertyValue('spaceBeforeAuto');\n    },\n    set: function (value) {\n      this.setPropertyValue('spaceBeforeAuto', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"spaceAfterAuto\", {\n    get: function () {\n      return this.getPropertyValue('spaceAfterAuto');\n    },\n    set: function (value) {\n      this.setPropertyValue('spaceAfterAuto', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"lineSpacing\", {\n    get: function () {\n      return this.getPropertyValue('lineSpacing');\n    },\n    set: function (value) {\n      this.setPropertyValue('lineSpacing', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"lineSpacingType\", {\n    get: function () {\n      return this.getPropertyValue('lineSpacingType');\n    },\n    set: function (value) {\n      this.setPropertyValue('lineSpacingType', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"textAlignment\", {\n    get: function () {\n      var value = this.getPropertyValue('textAlignment');\n      if (this.bidi) {\n        if (value === 'Left') {\n          value = 'Right';\n        } else if (value === 'Right') {\n          value = 'Left';\n        }\n      }\n      return value;\n    },\n    set: function (value) {\n      this.setPropertyValue('textAlignment', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"keepWithNext\", {\n    get: function () {\n      return this.getPropertyValue('keepWithNext');\n    },\n    set: function (value) {\n      this.setPropertyValue('keepWithNext', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"keepLinesTogether\", {\n    get: function () {\n      return this.getPropertyValue('keepLinesTogether');\n    },\n    set: function (value) {\n      this.setPropertyValue('keepLinesTogether', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"widowControl\", {\n    get: function () {\n      return this.getPropertyValue('widowControl');\n    },\n    set: function (value) {\n      this.setPropertyValue('widowControl', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"outlineLevel\", {\n    get: function () {\n      return this.getPropertyValue('outlineLevel');\n    },\n    set: function (value) {\n      this.setPropertyValue('outlineLevel', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"bidi\", {\n    get: function () {\n      return this.getPropertyValue('bidi');\n    },\n    set: function (value) {\n      this.setPropertyValue('bidi', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WParagraphFormat.prototype, \"contextualSpacing\", {\n    get: function () {\n      return this.getPropertyValue('contextualSpacing');\n    },\n    set: function (value) {\n      this.setPropertyValue('contextualSpacing', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  WParagraphFormat.prototype.getListFormatParagraphFormat = function (property) {\n    var paragraphFormat = this.getListPargaraphFormat(property);\n    if (!isNullOrUndefined(paragraphFormat)) {\n      return paragraphFormat.uniqueParagraphFormat.propertiesHash.get(WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property));\n    }\n    return undefined;\n  };\n  /**\n  * @private\n  */\n  WParagraphFormat.prototype.getListPargaraphFormat = function (property) {\n    if (this.listFormat.listId > -1 && this.listFormat.listLevelNumber > -1) {\n      var level = this.listFormat.listLevel;\n      var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n      if (!isNullOrUndefined(level) && !isNullOrUndefined(level.paragraphFormat.uniqueParagraphFormat) && level.paragraphFormat.uniqueParagraphFormat.propertiesHash.containsKey(propertyType)) {\n        return level.paragraphFormat;\n      } else {\n        return undefined;\n      }\n    } else if (this.listFormat.hasValue('listId') && this.listFormat.listId === -1 && (property === 'leftIndent' || property === 'firstLineIndent')) {\n      var paraFormat = new WParagraphFormat();\n      if (!this.hasValue('leftIndent')) {\n        paraFormat.leftIndent = 0;\n      }\n      if (!this.hasValue('firstLineIndent')) {\n        paraFormat.firstLineIndent = 0;\n      }\n      return paraFormat;\n    }\n    return undefined;\n  };\n  WParagraphFormat.prototype.getPropertyValue = function (property) {\n    if (!this.hasValue(property)) {\n      var formatInList = this.getListFormatParagraphFormat(property);\n      if (this.baseStyle instanceof WParagraphStyle) {\n        var currentFormat = this;\n        var baseStyle = this.baseStyle;\n        while (!isNullOrUndefined(baseStyle)) {\n          var listParaFormat = void 0;\n          if (!this.listFormat.hasValue('listId')) {\n            listParaFormat = baseStyle.paragraphFormat.getListPargaraphFormat(property);\n          }\n          if (baseStyle.paragraphFormat.hasValue(property)) {\n            currentFormat = baseStyle.paragraphFormat;\n            break;\n          } else if (!isNullOrUndefined(listParaFormat) && listParaFormat.hasValue(property)) {\n            currentFormat = listParaFormat;\n            break;\n          } else {\n            baseStyle = baseStyle.basedOn;\n          }\n        }\n        if (!isNullOrUndefined(baseStyle)) {\n          if (!isNullOrUndefined(formatInList) && this.listFormat.hasValue('listId') && currentFormat.listFormat.listId === -1 && currentFormat.listFormat.listLevelNumber <= 1 || !isNullOrUndefined(formatInList) && this.listFormat.listId !== currentFormat.listFormat.listId && currentFormat.listFormat.listLevelNumber <= 1) {\n            return formatInList;\n          }\n          var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n          return currentFormat.uniqueParagraphFormat.propertiesHash.get(propertyType);\n        }\n      }\n      if (!isNullOrUndefined(formatInList)) {\n        return formatInList;\n      }\n    } else {\n      var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n      if (!isNullOrUndefined(this.uniqueParagraphFormat) && this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType)) {\n        return this.uniqueParagraphFormat.propertiesHash.get(propertyType);\n      }\n    }\n    return this.getDefaultValue(property);\n  };\n  WParagraphFormat.prototype.getDefaultValue = function (property) {\n    var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n    var docParagraphFormat = this.getDocumentParagraphFormat();\n    var isInsideBodyWidget = true;\n    if (this.ownerBase && this.ownerBase instanceof ParagraphWidget) {\n      isInsideBodyWidget = this.ownerBase.containerWidget instanceof BlockContainer || this.ownerBase.containerWidget instanceof TextFrame || this.ownerBase.containerWidget instanceof TableCellWidget;\n    }\n    var isPaste = !isNullOrUndefined(this.ownerBase) && !isNullOrUndefined(this.ownerBase.bodyWidget) && this.ownerBase.bodyWidget.page && !isNullOrUndefined(this.ownerBase.bodyWidget.page.documentHelper) && this.ownerBase.bodyWidget.page.documentHelper.owner.editorModule && this.ownerBase.bodyWidget.page.documentHelper.owner.editorModule.isPaste;\n    if (isInsideBodyWidget && !isPaste && !isNullOrUndefined(docParagraphFormat) && !isNullOrUndefined(docParagraphFormat.uniqueParagraphFormat)) {\n      var propValue = docParagraphFormat.uniqueParagraphFormat.propertiesHash.get(propertyType);\n      if (!isNullOrUndefined(propValue)) {\n        return propValue;\n      }\n    }\n    return WParagraphFormat.getPropertyDefaultValue(property);\n  };\n  /**\n  * @private\n  */\n  WParagraphFormat.prototype.getDocumentParagraphFormat = function () {\n    var docParagraphFormat;\n    if (!isNullOrUndefined(this.ownerBase)) {\n      var documentHelper = this.getDocumentHelperObject();\n      if (!isNullOrUndefined(documentHelper)) {\n        docParagraphFormat = documentHelper.paragraphFormat;\n      }\n    }\n    return docParagraphFormat;\n  };\n  /**\n  * @private\n  */\n  WParagraphFormat.prototype.getDocumentHelperObject = function () {\n    var documentHelper;\n    if (this.ownerBase instanceof ParagraphWidget) {\n      var bodyWidget = this.ownerBase.bodyWidget;\n      if (!isNullOrUndefined(bodyWidget) && !isNullOrUndefined(bodyWidget.page) && !isNullOrUndefined(bodyWidget.page.documentHelper)) {\n        documentHelper = bodyWidget.page.documentHelper;\n      }\n    }\n    return documentHelper;\n  };\n  WParagraphFormat.prototype.setPropertyValue = function (property, value, clearProperty) {\n    if (isNullOrUndefined(value) || value === '' && !clearProperty) {\n      value = WParagraphFormat.getPropertyDefaultValue(property);\n    }\n    if (isNullOrUndefined(this.uniqueParagraphFormat)) {\n      this.initializeUniqueParagraphFormat(property, value);\n    } else {\n      var propertyType = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n      if (this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType) && this.uniqueParagraphFormat.propertiesHash.get(propertyType) === value) {\n        //Do nothing, since no change in property value and return\n        return;\n      }\n      this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.updateUniqueFormat(this.uniqueParagraphFormat, property, value);\n    }\n  };\n  WParagraphFormat.prototype.initializeUniqueParagraphFormat = function (property, propValue) {\n    var uniqueParaFormatTemp = new Dictionary();\n    this.addUniqueParaFormat('leftIndent', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('rightIndent', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('firstLineIndent', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('textAlignment', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('beforeSpacing', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('afterSpacing', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('spaceBeforeAuto', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('spaceAfterAuto', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('lineSpacing', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('lineSpacingType', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('outlineLevel', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('bidi', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('contextualSpacing', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('keepWithNext', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('keepLinesTogether', property, propValue, uniqueParaFormatTemp);\n    this.addUniqueParaFormat('widowControl', property, propValue, uniqueParaFormatTemp);\n    this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.addUniqueFormat(uniqueParaFormatTemp, WParagraphFormat.uniqueFormatType);\n  };\n  WParagraphFormat.prototype.addUniqueParaFormat = function (property, modifiedProperty, propValue, uniqueParaFormatTemp) {\n    var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n    if (property === modifiedProperty) {\n      uniqueParaFormatTemp.add(propertyType, propValue);\n    }\n  };\n  WParagraphFormat.getPropertyDefaultValue = function (property) {\n    var value = undefined;\n    switch (property) {\n      case 'leftIndent':\n        value = 0;\n        break;\n      case 'rightIndent':\n        value = 0;\n        break;\n      case 'firstLineIndent':\n        value = 0;\n        break;\n      case 'textAlignment':\n        value = 'Left';\n        break;\n      case 'beforeSpacing':\n        value = 0;\n        break;\n      case 'afterSpacing':\n        value = 0;\n        break;\n      case 'spaceBeforeAuto':\n        value = false;\n        break;\n      case 'spaceAfterAuto':\n        value = false;\n        break;\n      case 'lineSpacing':\n        value = 1;\n        break;\n      case 'lineSpacingType':\n        value = 'Multiple';\n        break;\n      case 'styleName':\n        value = 'Normal';\n        break;\n      case 'outlineLevel':\n        value = 'BodyText';\n        break;\n      case 'bidi':\n        value = false;\n        break;\n      case 'contextualSpacing':\n        value = false;\n        break;\n      case 'keepWithNext':\n        value = false;\n        break;\n      case 'keepLinesTogether':\n        value = false;\n        break;\n      case 'widowControl':\n        value = true;\n        break;\n    }\n    return value;\n  };\n  WParagraphFormat.prototype.clearIndent = function () {\n    this.clearPropertyValue('leftIndent');\n    this.clearPropertyValue('firstLineIndent');\n  };\n  WParagraphFormat.prototype.clearPropertyValue = function (property) {\n    this.setPropertyValue(property, undefined, true);\n    if (!isNullOrUndefined(this.uniqueParagraphFormat)) {\n      var key = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n      if (this.uniqueParagraphFormat.propertiesHash.containsKey(key)) {\n        this.uniqueParagraphFormat.propertiesHash.remove(key);\n      }\n    }\n  };\n  WParagraphFormat.prototype.clearFormat = function () {\n    if (!isNullOrUndefined(this.listFormat)) {\n      this.listFormat.clearFormat();\n    }\n    if (!isNullOrUndefined(this.borders)) {\n      this.borders.clearFormat();\n    }\n    if (!isNullOrUndefined(this.uniqueParagraphFormat) && this.uniqueParagraphFormat.referenceCount === 0) {\n      WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n    }\n    this.uniqueParagraphFormat = undefined;\n    if (!isNullOrUndefined(this.getDocumentHelperObject())) {\n      this.baseStyle = this.getDocumentHelperObject().styles.findByName('Normal');\n    }\n  };\n  WParagraphFormat.prototype.destroy = function () {\n    if (!isNullOrUndefined(this.uniqueParagraphFormat)) {\n      WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n    }\n    this.uniqueParagraphFormat = undefined;\n    if (!isNullOrUndefined(this.listFormat)) {\n      this.listFormat.destroy();\n    }\n    this.listFormat = undefined;\n    if (this.tabs && this.tabs.length > 0) {\n      for (var i = 0; i < this.tabs.length; i++) {\n        this.tabs[i].destroy();\n      }\n      this.tabs = [];\n      this.tabs = undefined;\n    }\n    if (!isNullOrUndefined(this.borders)) {\n      this.borders.destroy();\n    }\n    this.borders = undefined;\n    this.baseStyle = undefined;\n    this.ownerBase = undefined;\n  };\n  WParagraphFormat.prototype.copyFormat = function (format) {\n    if (!isNullOrUndefined(format)) {\n      if (!isNullOrUndefined(format.uniqueParagraphFormat)) {\n        this.updateUniqueParagraphFormat(format);\n      }\n      if (!isNullOrUndefined(format.borders)) {\n        //this.borders = new WBorders(this);\n        this.borders.copyFormat(format.borders);\n      }\n      if (!isNullOrUndefined(format.listFormat)) {\n        this.listFormat.copyFormat(format.listFormat);\n      }\n      if (!isNullOrUndefined(format.baseStyle)) {\n        this.baseStyle = format.baseStyle;\n      }\n      if (!isNullOrUndefined(format.tabs)) {\n        for (var i = 0; i < format.tabs.length; i++) {\n          this.tabs[i] = format.tabs[i];\n        }\n      }\n    }\n  };\n  WParagraphFormat.prototype.updateUniqueParagraphFormat = function (format) {\n    var hash = undefined;\n    if (this.uniqueParagraphFormat) {\n      hash = this.uniqueParagraphFormat.mergeProperties(format.uniqueParagraphFormat);\n      if (this.uniqueParagraphFormat.referenceCount === 0) {\n        WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n        this.uniqueParagraphFormat = undefined;\n      }\n    }\n    this.uniqueParagraphFormat = new WUniqueFormat(WParagraphFormat.uniqueFormatType);\n    if (isNullOrUndefined(hash)) {\n      hash = this.uniqueParagraphFormat.mergeProperties(format.uniqueParagraphFormat);\n    }\n    this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.addUniqueFormat(hash, WParagraphFormat.uniqueFormatType);\n  };\n  WParagraphFormat.prototype.cloneFormat = function () {\n    var format = new WParagraphFormat(undefined);\n    format.uniqueParagraphFormat = this.uniqueParagraphFormat;\n    format.baseStyle = this.baseStyle;\n    if (isNullOrUndefined(this.listFormat)) {\n      format.listFormat = undefined;\n    } else {\n      format.listFormat = this.listFormat.cloneListFormat();\n      format.listFormat.ownerBase = format;\n    }\n    format.borders = isNullOrUndefined(this.borders) ? undefined : this.borders.cloneFormat();\n    return format;\n  };\n  /**\n   *\n   * @private\n   */\n  WParagraphFormat.prototype.hasValue = function (property) {\n    if (!isNullOrUndefined(this.uniqueParagraphFormat) && !isNullOrUndefined(this.uniqueParagraphFormat.propertiesHash)) {\n      var propertyType = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n      return this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType);\n    }\n    return false;\n  };\n  WParagraphFormat.clear = function () {\n    this.uniqueParagraphFormats.clear();\n  };\n  WParagraphFormat.prototype.applyStyle = function (baseStyle) {\n    this.baseStyle = baseStyle;\n    this.listFormat.applyStyle(this.baseStyle);\n  };\n  WParagraphFormat.prototype.getValue = function (property) {\n    return this.hasValue(property) ? this.getPropertyValue(property) : undefined;\n  };\n  WParagraphFormat.prototype.mergeFormat = function (format, isStyle) {\n    isStyle = isNullOrUndefined(isStyle) ? false : isStyle;\n    if (isNullOrUndefined(this.getValue('leftIndent'))) {\n      this.leftIndent = format.getValue('leftIndent');\n    }\n    if (isNullOrUndefined(this.getValue('rightIndent'))) {\n      this.rightIndent = format.getValue('rightIndent');\n    }\n    if (isNullOrUndefined(this.getValue('firstLineIndent'))) {\n      this.firstLineIndent = format.getValue('firstLineIndent');\n    }\n    if (isNullOrUndefined(this.getValue('beforeSpacing'))) {\n      this.beforeSpacing = format.getValue('beforeSpacing');\n    }\n    if (isNullOrUndefined(this.getValue('afterSpacing'))) {\n      this.afterSpacing = format.getValue('afterSpacing');\n    }\n    if (isNullOrUndefined(this.getValue('spaceBeforeAuto'))) {\n      this.spaceBeforeAuto = format.getValue('spaceBeforeAuto');\n    }\n    if (isNullOrUndefined(this.getValue('spaceAfterAuto'))) {\n      this.spaceAfterAuto = format.getValue('spaceAfterAuto');\n    }\n    if (isNullOrUndefined(this.getValue('lineSpacing'))) {\n      this.lineSpacing = format.getValue('lineSpacing');\n    }\n    if (isNullOrUndefined(this.getValue('lineSpacingType'))) {\n      this.lineSpacingType = format.getValue('lineSpacingType');\n    }\n    if (isNullOrUndefined(this.getValue('textAlignment'))) {\n      this.textAlignment = format.getValue('textAlignment');\n    }\n    if (isNullOrUndefined(this.getValue('outlineLevel'))) {\n      this.outlineLevel = format.getValue('outlineLevel');\n    }\n    if (!isStyle && isNullOrUndefined(this.getValue('bidi'))) {\n      this.bidi = format.getValue('bidi');\n    }\n    if (isNullOrUndefined(this.getValue('contextualSpacing'))) {\n      this.contextualSpacing = format.getValue('contextualSpacing');\n    }\n    if (isNullOrUndefined(this.getValue('keepWithNext'))) {\n      this.keepWithNext = format.getValue('keepWithNext');\n    }\n    if (isNullOrUndefined(this.getValue('keepLinesTogether'))) {\n      this.keepLinesTogether = format.getValue('keepLinesTogether');\n    }\n    if (isNullOrUndefined(this.getValue('widowControl'))) {\n      this.widowControl = format.getValue('widowControl');\n    }\n    if (isNullOrUndefined(this.listFormat)) {\n      this.listFormat.mergeFormat(format.listFormat);\n    }\n  };\n  WParagraphFormat.uniqueParagraphFormats = new WUniqueFormats();\n  WParagraphFormat.uniqueFormatType = 3;\n  return WParagraphFormat;\n}();\nexport { WParagraphFormat };","map":{"version":3,"names":["isNullOrUndefined","Dictionary","WBorders","WUniqueFormat","WUniqueFormats","WListFormat","ParagraphWidget","TableCellWidget","BlockContainer","TextFrame","WParagraphStyle","WTabStop","Object","defineProperty","prototype","get","positionIn","set","value","enumerable","configurable","deletePositionIn","justification","leader","clone","tabStop","deletePosition","position","tabJustification","tabLeader","equals","tab","destroy","undefined","WParagraphFormat","node","uniqueParagraphFormat","ownerBase","baseStyle","tabs","listFormat","borders","getUpdatedTabs","inTabs","tabStops","tabsInListFormat","getTabStopsFromListFormat","_i","tabsInListFormat_1","length","containsKey","add","_a","_b","paragraphFormat","basedOn","_c","_d","keys","key","hasTabStop","parseFloat","toFixed","push","concat","filter","a","sort","b","listId","listLevelNumber","level","listLevel","i","getPropertyValue","setPropertyValue","bidi","getListFormatParagraphFormat","property","getListPargaraphFormat","propertiesHash","getPropertyType","uniqueFormatType","propertyType","hasValue","paraFormat","leftIndent","firstLineIndent","formatInList","currentFormat","listParaFormat","getDefaultValue","docParagraphFormat","getDocumentParagraphFormat","isInsideBodyWidget","containerWidget","isPaste","bodyWidget","page","documentHelper","owner","editorModule","propValue","getPropertyDefaultValue","getDocumentHelperObject","clearProperty","initializeUniqueParagraphFormat","uniqueParagraphFormats","updateUniqueFormat","uniqueParaFormatTemp","addUniqueParaFormat","addUniqueFormat","modifiedProperty","clearIndent","clearPropertyValue","remove","clearFormat","referenceCount","styles","findByName","copyFormat","format","updateUniqueParagraphFormat","hash","mergeProperties","cloneFormat","cloneListFormat","clear","applyStyle","getValue","mergeFormat","isStyle","rightIndent","beforeSpacing","afterSpacing","spaceBeforeAuto","spaceAfterAuto","lineSpacing","lineSpacingType","textAlignment","outlineLevel","contextualSpacing","keepWithNext","keepLinesTogether","widowControl"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/paragraph-format.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { WBorders } from './borders';\nimport { WUniqueFormat } from '../../base/unique-format';\nimport { WUniqueFormats } from '../../base/unique-formats';\nimport { WListFormat } from './list-format';\nimport { ParagraphWidget, TableCellWidget, BlockContainer, TextFrame } from '../viewer/page';\nimport { WParagraphStyle } from './style';\n/* eslint-disable */\n/**\n * @private\n */\nvar WTabStop = /** @class */ (function () {\n    function WTabStop() {\n    }\n    Object.defineProperty(WTabStop.prototype, \"position\", {\n        get: function () {\n            return this.positionIn;\n        },\n        set: function (value) {\n            this.positionIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WTabStop.prototype, \"deletePosition\", {\n        get: function () {\n            return this.deletePositionIn;\n        },\n        set: function (value) {\n            this.deletePositionIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WTabStop.prototype, \"tabJustification\", {\n        get: function () {\n            return this.justification;\n        },\n        set: function (value) {\n            this.justification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WTabStop.prototype, \"tabLeader\", {\n        get: function () {\n            return this.leader;\n        },\n        set: function (value) {\n            this.leader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WTabStop.prototype.clone = function () {\n        var tabStop = new WTabStop();\n        tabStop.deletePosition = this.deletePosition;\n        tabStop.position = this.position;\n        tabStop.tabJustification = this.tabJustification;\n        tabStop.tabLeader = this.tabLeader;\n        return tabStop;\n    };\n    WTabStop.prototype.equals = function (tab) {\n        if (this.position === tab.position &&\n            this.deletePosition === tab.deletePosition &&\n            this.tabJustification === tab.tabJustification &&\n            this.tabLeader === tab.tabLeader) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    WTabStop.prototype.destroy = function () {\n        this.position = undefined;\n        this.deletePosition = undefined;\n        this.tabJustification = undefined;\n        this.leader = undefined;\n    };\n    return WTabStop;\n}());\nexport { WTabStop };\n/**\n * @private\n */\nvar WParagraphFormat = /** @class */ (function () {\n    function WParagraphFormat(node) {\n        this.uniqueParagraphFormat = undefined;\n        this.ownerBase = undefined;\n        this.baseStyle = undefined;\n        this.tabs = undefined;\n        this.ownerBase = node;\n        this.listFormat = new WListFormat(this);\n        this.borders = new WBorders(this);\n        this.tabs = [];\n    }\n    WParagraphFormat.prototype.getUpdatedTabs = function () {\n        var inTabs = [];\n        var tabStops = new Dictionary();\n        var tabsInListFormat = this.getTabStopsFromListFormat();\n        for (var _i = 0, tabsInListFormat_1 = tabsInListFormat; _i < tabsInListFormat_1.length; _i++) {\n            var tabStop = tabsInListFormat_1[_i];\n            if (!tabStops.containsKey(tabStop.position)) {\n                tabStops.add(tabStop.position, tabStop);\n            }\n        }\n        if (!isNullOrUndefined(this.baseStyle) && this.baseStyle instanceof WParagraphStyle) {\n            var baseStyle = this.baseStyle;\n            while (!isNullOrUndefined(baseStyle)) {\n                for (var _a = 0, _b = baseStyle.paragraphFormat.tabs; _a < _b.length; _a++) {\n                    var tab = _b[_a];\n                    if (!tabStops.containsKey(tab.position)) {\n                        tabStops.add(tab.position, tab);\n                    }\n                }\n                baseStyle = baseStyle.basedOn;\n            }\n            for (var _c = 0, _d = tabStops.keys; _c < _d.length; _c++) {\n                var key = _d[_c];\n                if (!this.hasTabStop(parseFloat(key.toFixed(4)))) {\n                    inTabs.push(tabStops.get(key));\n                }\n            }\n        }\n        inTabs = inTabs.concat(this.tabs.filter(function (a) { return (a.position !== 0 && a.deletePosition === 0); }));\n        inTabs = inTabs.sort(function (a, b) { return a.position - b.position; });\n        return inTabs;\n    };\n    WParagraphFormat.prototype.getTabStopsFromListFormat = function () {\n        if (this.listFormat.listId > -1 && this.listFormat.listLevelNumber > -1) {\n            var level = this.listFormat.listLevel;\n            if (level && level.paragraphFormat) {\n                return level.paragraphFormat.tabs;\n            }\n        }\n        return [];\n    };\n    WParagraphFormat.prototype.hasTabStop = function (position) {\n        for (var i = 0; i < this.tabs.length; i++) {\n            if (parseFloat(this.tabs[i].position.toFixed(4)) === position ||\n                parseFloat(this.tabs[i].deletePosition.toFixed(4)) === position) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Object.defineProperty(WParagraphFormat.prototype, \"leftIndent\", {\n        get: function () {\n            return this.getPropertyValue('leftIndent');\n        },\n        set: function (value) {\n            this.setPropertyValue('leftIndent', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"rightIndent\", {\n        get: function () {\n            return this.getPropertyValue('rightIndent');\n        },\n        set: function (value) {\n            this.setPropertyValue('rightIndent', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"firstLineIndent\", {\n        get: function () {\n            return this.getPropertyValue('firstLineIndent');\n        },\n        set: function (value) {\n            this.setPropertyValue('firstLineIndent', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"beforeSpacing\", {\n        get: function () {\n            return this.getPropertyValue('beforeSpacing');\n        },\n        set: function (value) {\n            this.setPropertyValue('beforeSpacing', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"afterSpacing\", {\n        get: function () {\n            return this.getPropertyValue('afterSpacing');\n        },\n        set: function (value) {\n            this.setPropertyValue('afterSpacing', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"spaceBeforeAuto\", {\n        get: function () {\n            return this.getPropertyValue('spaceBeforeAuto');\n        },\n        set: function (value) {\n            this.setPropertyValue('spaceBeforeAuto', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"spaceAfterAuto\", {\n        get: function () {\n            return this.getPropertyValue('spaceAfterAuto');\n        },\n        set: function (value) {\n            this.setPropertyValue('spaceAfterAuto', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"lineSpacing\", {\n        get: function () {\n            return this.getPropertyValue('lineSpacing');\n        },\n        set: function (value) {\n            this.setPropertyValue('lineSpacing', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"lineSpacingType\", {\n        get: function () {\n            return this.getPropertyValue('lineSpacingType');\n        },\n        set: function (value) {\n            this.setPropertyValue('lineSpacingType', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"textAlignment\", {\n        get: function () {\n            var value = this.getPropertyValue('textAlignment');\n            if (this.bidi) {\n                if (value === 'Left') {\n                    value = 'Right';\n                }\n                else if (value === 'Right') {\n                    value = 'Left';\n                }\n            }\n            return value;\n        },\n        set: function (value) {\n            this.setPropertyValue('textAlignment', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"keepWithNext\", {\n        get: function () {\n            return this.getPropertyValue('keepWithNext');\n        },\n        set: function (value) {\n            this.setPropertyValue('keepWithNext', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"keepLinesTogether\", {\n        get: function () {\n            return this.getPropertyValue('keepLinesTogether');\n        },\n        set: function (value) {\n            this.setPropertyValue('keepLinesTogether', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"widowControl\", {\n        get: function () {\n            return this.getPropertyValue('widowControl');\n        },\n        set: function (value) {\n            this.setPropertyValue('widowControl', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"outlineLevel\", {\n        get: function () {\n            return this.getPropertyValue('outlineLevel');\n        },\n        set: function (value) {\n            this.setPropertyValue('outlineLevel', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"bidi\", {\n        get: function () {\n            return this.getPropertyValue('bidi');\n        },\n        set: function (value) {\n            this.setPropertyValue('bidi', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WParagraphFormat.prototype, \"contextualSpacing\", {\n        get: function () {\n            return this.getPropertyValue('contextualSpacing');\n        },\n        set: function (value) {\n            this.setPropertyValue('contextualSpacing', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WParagraphFormat.prototype.getListFormatParagraphFormat = function (property) {\n        var paragraphFormat = this.getListPargaraphFormat(property);\n        if (!isNullOrUndefined(paragraphFormat)) {\n            return paragraphFormat.uniqueParagraphFormat.propertiesHash.get(WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property));\n        }\n        return undefined;\n    };\n    /**\n    * @private\n    */\n    WParagraphFormat.prototype.getListPargaraphFormat = function (property) {\n        if (this.listFormat.listId > -1 && this.listFormat.listLevelNumber > -1) {\n            var level = this.listFormat.listLevel;\n            var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n            if (!isNullOrUndefined(level) && !isNullOrUndefined(level.paragraphFormat.uniqueParagraphFormat) &&\n                level.paragraphFormat.uniqueParagraphFormat.propertiesHash.containsKey(propertyType)) {\n                return level.paragraphFormat;\n            }\n            else {\n                return undefined;\n            }\n        }\n        else if (this.listFormat.hasValue('listId') && this.listFormat.listId === -1\n            && (property === 'leftIndent' || property === 'firstLineIndent')) {\n            var paraFormat = new WParagraphFormat();\n            if (!this.hasValue('leftIndent')) {\n                paraFormat.leftIndent = 0;\n            }\n            if (!this.hasValue('firstLineIndent')) {\n                paraFormat.firstLineIndent = 0;\n            }\n            return paraFormat;\n        }\n        return undefined;\n    };\n    WParagraphFormat.prototype.getPropertyValue = function (property) {\n        if (!this.hasValue(property)) {\n            var formatInList = this.getListFormatParagraphFormat(property);\n            if (this.baseStyle instanceof WParagraphStyle) {\n                var currentFormat = this;\n                var baseStyle = this.baseStyle;\n                while (!isNullOrUndefined(baseStyle)) {\n                    var listParaFormat = void 0;\n                    if (!this.listFormat.hasValue('listId')) {\n                        listParaFormat = baseStyle.paragraphFormat.getListPargaraphFormat(property);\n                    }\n                    if (baseStyle.paragraphFormat.hasValue(property)) {\n                        currentFormat = baseStyle.paragraphFormat;\n                        break;\n                    }\n                    else if (!isNullOrUndefined(listParaFormat) && listParaFormat.hasValue(property)) {\n                        currentFormat = listParaFormat;\n                        break;\n                    }\n                    else {\n                        baseStyle = baseStyle.basedOn;\n                    }\n                }\n                if (!isNullOrUndefined(baseStyle)) {\n                    if (!isNullOrUndefined(formatInList) && this.listFormat.hasValue('listId')\n                        && currentFormat.listFormat.listId === -1 && currentFormat.listFormat.listLevelNumber <= 1\n                        || !isNullOrUndefined(formatInList) && this.listFormat.listId !== currentFormat.listFormat.listId\n                            && currentFormat.listFormat.listLevelNumber <= 1) {\n                        return formatInList;\n                    }\n                    var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n                    return currentFormat.uniqueParagraphFormat.propertiesHash.get(propertyType);\n                }\n            }\n            if (!isNullOrUndefined(formatInList)) {\n                return formatInList;\n            }\n        }\n        else {\n            var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n            if (!isNullOrUndefined(this.uniqueParagraphFormat) && this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType)) {\n                return this.uniqueParagraphFormat.propertiesHash.get(propertyType);\n            }\n        }\n        return this.getDefaultValue(property);\n    };\n    WParagraphFormat.prototype.getDefaultValue = function (property) {\n        var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n        var docParagraphFormat = this.getDocumentParagraphFormat();\n        var isInsideBodyWidget = true;\n        if (this.ownerBase && this.ownerBase instanceof ParagraphWidget) {\n            isInsideBodyWidget = this.ownerBase.containerWidget instanceof BlockContainer || this.ownerBase.containerWidget instanceof TextFrame ||\n                this.ownerBase.containerWidget instanceof TableCellWidget;\n        }\n        var isPaste = !isNullOrUndefined(this.ownerBase) && !isNullOrUndefined(this.ownerBase.bodyWidget)\n            && this.ownerBase.bodyWidget.page && !isNullOrUndefined(this.ownerBase.bodyWidget.page.documentHelper) && this.ownerBase.bodyWidget.page.documentHelper.owner.editorModule\n            && this.ownerBase.bodyWidget.page.documentHelper.owner.editorModule.isPaste;\n        if (isInsideBodyWidget && !isPaste\n            && !isNullOrUndefined(docParagraphFormat) && !isNullOrUndefined(docParagraphFormat.uniqueParagraphFormat)) {\n            var propValue = docParagraphFormat.uniqueParagraphFormat.propertiesHash.get(propertyType);\n            if (!isNullOrUndefined(propValue)) {\n                return propValue;\n            }\n        }\n        return WParagraphFormat.getPropertyDefaultValue(property);\n    };\n    /**\n    * @private\n    */\n    WParagraphFormat.prototype.getDocumentParagraphFormat = function () {\n        var docParagraphFormat;\n        if (!isNullOrUndefined(this.ownerBase)) {\n            var documentHelper = this.getDocumentHelperObject();\n            if (!isNullOrUndefined(documentHelper)) {\n                docParagraphFormat = documentHelper.paragraphFormat;\n            }\n        }\n        return docParagraphFormat;\n    };\n    /**\n    * @private\n    */\n    WParagraphFormat.prototype.getDocumentHelperObject = function () {\n        var documentHelper;\n        if (this.ownerBase instanceof ParagraphWidget) {\n            var bodyWidget = this.ownerBase.bodyWidget;\n            if (!isNullOrUndefined(bodyWidget) && !isNullOrUndefined(bodyWidget.page) && !isNullOrUndefined(bodyWidget.page.documentHelper)) {\n                documentHelper = bodyWidget.page.documentHelper;\n            }\n        }\n        return documentHelper;\n    };\n    WParagraphFormat.prototype.setPropertyValue = function (property, value, clearProperty) {\n        if (isNullOrUndefined(value) || value === '' && !clearProperty) {\n            value = WParagraphFormat.getPropertyDefaultValue(property);\n        }\n        if (isNullOrUndefined(this.uniqueParagraphFormat)) {\n            this.initializeUniqueParagraphFormat(property, value);\n        }\n        else {\n            var propertyType = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n            if (this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType) &&\n                this.uniqueParagraphFormat.propertiesHash.get(propertyType) === value) {\n                //Do nothing, since no change in property value and return\n                return;\n            }\n            this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.updateUniqueFormat(this.uniqueParagraphFormat, property, value);\n        }\n    };\n    WParagraphFormat.prototype.initializeUniqueParagraphFormat = function (property, propValue) {\n        var uniqueParaFormatTemp = new Dictionary();\n        this.addUniqueParaFormat('leftIndent', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('rightIndent', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('firstLineIndent', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('textAlignment', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('beforeSpacing', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('afterSpacing', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('spaceBeforeAuto', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('spaceAfterAuto', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('lineSpacing', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('lineSpacingType', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('outlineLevel', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('bidi', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('contextualSpacing', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('keepWithNext', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('keepLinesTogether', property, propValue, uniqueParaFormatTemp);\n        this.addUniqueParaFormat('widowControl', property, propValue, uniqueParaFormatTemp);\n        this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.addUniqueFormat(uniqueParaFormatTemp, WParagraphFormat.uniqueFormatType);\n    };\n    WParagraphFormat.prototype.addUniqueParaFormat = function (property, modifiedProperty, propValue, uniqueParaFormatTemp) {\n        var propertyType = WUniqueFormat.getPropertyType(WParagraphFormat.uniqueFormatType, property);\n        if (property === modifiedProperty) {\n            uniqueParaFormatTemp.add(propertyType, propValue);\n        }\n    };\n    WParagraphFormat.getPropertyDefaultValue = function (property) {\n        var value = undefined;\n        switch (property) {\n            case 'leftIndent':\n                value = 0;\n                break;\n            case 'rightIndent':\n                value = 0;\n                break;\n            case 'firstLineIndent':\n                value = 0;\n                break;\n            case 'textAlignment':\n                value = 'Left';\n                break;\n            case 'beforeSpacing':\n                value = 0;\n                break;\n            case 'afterSpacing':\n                value = 0;\n                break;\n            case 'spaceBeforeAuto':\n                value = false;\n                break;\n            case 'spaceAfterAuto':\n                value = false;\n                break;\n            case 'lineSpacing':\n                value = 1;\n                break;\n            case 'lineSpacingType':\n                value = 'Multiple';\n                break;\n            case 'styleName':\n                value = 'Normal';\n                break;\n            case 'outlineLevel':\n                value = 'BodyText';\n                break;\n            case 'bidi':\n                value = false;\n                break;\n            case 'contextualSpacing':\n                value = false;\n                break;\n            case 'keepWithNext':\n                value = false;\n                break;\n            case 'keepLinesTogether':\n                value = false;\n                break;\n            case 'widowControl':\n                value = true;\n                break;\n        }\n        return value;\n    };\n    WParagraphFormat.prototype.clearIndent = function () {\n        this.clearPropertyValue('leftIndent');\n        this.clearPropertyValue('firstLineIndent');\n    };\n    WParagraphFormat.prototype.clearPropertyValue = function (property) {\n        this.setPropertyValue(property, undefined, true);\n        if (!isNullOrUndefined(this.uniqueParagraphFormat)) {\n            var key = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n            if (this.uniqueParagraphFormat.propertiesHash.containsKey(key)) {\n                this.uniqueParagraphFormat.propertiesHash.remove(key);\n            }\n        }\n    };\n    WParagraphFormat.prototype.clearFormat = function () {\n        if (!isNullOrUndefined(this.listFormat)) {\n            this.listFormat.clearFormat();\n        }\n        if (!isNullOrUndefined(this.borders)) {\n            this.borders.clearFormat();\n        }\n        if (!isNullOrUndefined(this.uniqueParagraphFormat) && this.uniqueParagraphFormat.referenceCount === 0) {\n            WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n        }\n        this.uniqueParagraphFormat = undefined;\n        if (!isNullOrUndefined(this.getDocumentHelperObject())) {\n            this.baseStyle = this.getDocumentHelperObject().styles.findByName('Normal');\n        }\n    };\n    WParagraphFormat.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.uniqueParagraphFormat)) {\n            WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n        }\n        this.uniqueParagraphFormat = undefined;\n        if (!isNullOrUndefined(this.listFormat)) {\n            this.listFormat.destroy();\n        }\n        this.listFormat = undefined;\n        if (this.tabs && this.tabs.length > 0) {\n            for (var i = 0; i < this.tabs.length; i++) {\n                this.tabs[i].destroy();\n            }\n            this.tabs = [];\n            this.tabs = undefined;\n        }\n        if (!isNullOrUndefined(this.borders)) {\n            this.borders.destroy();\n        }\n        this.borders = undefined;\n        this.baseStyle = undefined;\n        this.ownerBase = undefined;\n    };\n    WParagraphFormat.prototype.copyFormat = function (format) {\n        if (!isNullOrUndefined(format)) {\n            if (!isNullOrUndefined(format.uniqueParagraphFormat)) {\n                this.updateUniqueParagraphFormat(format);\n            }\n            if (!isNullOrUndefined(format.borders)) {\n                //this.borders = new WBorders(this);\n                this.borders.copyFormat(format.borders);\n            }\n            if (!isNullOrUndefined(format.listFormat)) {\n                this.listFormat.copyFormat(format.listFormat);\n            }\n            if (!isNullOrUndefined(format.baseStyle)) {\n                this.baseStyle = format.baseStyle;\n            }\n            if (!isNullOrUndefined(format.tabs)) {\n                for (var i = 0; i < format.tabs.length; i++) {\n                    this.tabs[i] = format.tabs[i];\n                }\n            }\n        }\n    };\n    WParagraphFormat.prototype.updateUniqueParagraphFormat = function (format) {\n        var hash = undefined;\n        if (this.uniqueParagraphFormat) {\n            hash = this.uniqueParagraphFormat.mergeProperties(format.uniqueParagraphFormat);\n            if (this.uniqueParagraphFormat.referenceCount === 0) {\n                WParagraphFormat.uniqueParagraphFormats.remove(this.uniqueParagraphFormat);\n                this.uniqueParagraphFormat = undefined;\n            }\n        }\n        this.uniqueParagraphFormat = new WUniqueFormat(WParagraphFormat.uniqueFormatType);\n        if (isNullOrUndefined(hash)) {\n            hash = this.uniqueParagraphFormat.mergeProperties(format.uniqueParagraphFormat);\n        }\n        this.uniqueParagraphFormat = WParagraphFormat.uniqueParagraphFormats.addUniqueFormat(hash, WParagraphFormat.uniqueFormatType);\n    };\n    WParagraphFormat.prototype.cloneFormat = function () {\n        var format = new WParagraphFormat(undefined);\n        format.uniqueParagraphFormat = this.uniqueParagraphFormat;\n        format.baseStyle = this.baseStyle;\n        if (isNullOrUndefined(this.listFormat)) {\n            format.listFormat = undefined;\n        }\n        else {\n            format.listFormat = this.listFormat.cloneListFormat();\n            format.listFormat.ownerBase = format;\n        }\n        format.borders = isNullOrUndefined(this.borders) ? undefined : this.borders.cloneFormat();\n        return format;\n    };\n    /**\n     *\n     * @private\n     */\n    WParagraphFormat.prototype.hasValue = function (property) {\n        if (!isNullOrUndefined(this.uniqueParagraphFormat) && !isNullOrUndefined(this.uniqueParagraphFormat.propertiesHash)) {\n            var propertyType = WUniqueFormat.getPropertyType(this.uniqueParagraphFormat.uniqueFormatType, property);\n            return this.uniqueParagraphFormat.propertiesHash.containsKey(propertyType);\n        }\n        return false;\n    };\n    WParagraphFormat.clear = function () {\n        this.uniqueParagraphFormats.clear();\n    };\n    WParagraphFormat.prototype.applyStyle = function (baseStyle) {\n        this.baseStyle = baseStyle;\n        this.listFormat.applyStyle(this.baseStyle);\n    };\n    WParagraphFormat.prototype.getValue = function (property) {\n        return this.hasValue(property) ? this.getPropertyValue(property) : undefined;\n    };\n    WParagraphFormat.prototype.mergeFormat = function (format, isStyle) {\n        isStyle = isNullOrUndefined(isStyle) ? false : isStyle;\n        if (isNullOrUndefined(this.getValue('leftIndent'))) {\n            this.leftIndent = format.getValue('leftIndent');\n        }\n        if (isNullOrUndefined(this.getValue('rightIndent'))) {\n            this.rightIndent = format.getValue('rightIndent');\n        }\n        if (isNullOrUndefined(this.getValue('firstLineIndent'))) {\n            this.firstLineIndent = format.getValue('firstLineIndent');\n        }\n        if (isNullOrUndefined(this.getValue('beforeSpacing'))) {\n            this.beforeSpacing = format.getValue('beforeSpacing');\n        }\n        if (isNullOrUndefined(this.getValue('afterSpacing'))) {\n            this.afterSpacing = format.getValue('afterSpacing');\n        }\n        if (isNullOrUndefined(this.getValue('spaceBeforeAuto'))) {\n            this.spaceBeforeAuto = format.getValue('spaceBeforeAuto');\n        }\n        if (isNullOrUndefined(this.getValue('spaceAfterAuto'))) {\n            this.spaceAfterAuto = format.getValue('spaceAfterAuto');\n        }\n        if (isNullOrUndefined(this.getValue('lineSpacing'))) {\n            this.lineSpacing = format.getValue('lineSpacing');\n        }\n        if (isNullOrUndefined(this.getValue('lineSpacingType'))) {\n            this.lineSpacingType = format.getValue('lineSpacingType');\n        }\n        if (isNullOrUndefined(this.getValue('textAlignment'))) {\n            this.textAlignment = format.getValue('textAlignment');\n        }\n        if (isNullOrUndefined(this.getValue('outlineLevel'))) {\n            this.outlineLevel = format.getValue('outlineLevel');\n        }\n        if (!isStyle && isNullOrUndefined(this.getValue('bidi'))) {\n            this.bidi = format.getValue('bidi');\n        }\n        if (isNullOrUndefined(this.getValue('contextualSpacing'))) {\n            this.contextualSpacing = format.getValue('contextualSpacing');\n        }\n        if (isNullOrUndefined(this.getValue('keepWithNext'))) {\n            this.keepWithNext = format.getValue('keepWithNext');\n        }\n        if (isNullOrUndefined(this.getValue('keepLinesTogether'))) {\n            this.keepLinesTogether = format.getValue('keepLinesTogether');\n        }\n        if (isNullOrUndefined(this.getValue('widowControl'))) {\n            this.widowControl = format.getValue('widowControl');\n        }\n        if (isNullOrUndefined(this.listFormat)) {\n            this.listFormat.mergeFormat(format.listFormat);\n        }\n    };\n    WParagraphFormat.uniqueParagraphFormats = new WUniqueFormats();\n    WParagraphFormat.uniqueFormatType = 3;\n    return WParagraphFormat;\n}());\nexport { WParagraphFormat };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}