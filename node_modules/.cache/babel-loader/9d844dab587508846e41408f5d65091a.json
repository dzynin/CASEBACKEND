{"ast":null,"code":"/* eslint-disable */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { sectionsProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, nameProperty, boldProperty, italicProperty, underlineProperty, baselineAlignmentProperty, strikethroughProperty, highlightColorProperty, fontSizeProperty, fontColorProperty, fontFamilyProperty, styleNameProperty, allCapsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, bordersProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, cellWidthProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, isHeaderProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, backgroundColorProperty, hasNoneStyleProperty, lineStyleProperty, lineWidthProperty, textProperty, widthProperty, heightProperty, colorProperty, imageStringProperty, topProperty, bottomProperty, rightProperty, leftProperty, fieldTypeProperty, inlinesProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, tableFormatProperty, blocksProperty, listLevelPatternProperty, abstractListIdProperty, levelsProperty, bookmarkTypeProperty, inlineFormatProperty, startAtProperty, characterSpacingProperty, scalingProperty, imagesProperty, Dictionary, isMetaFileProperty, isCreatedUsingHtmlSpanTagProperty } from '../../index';\n/**\n * @private\n */\nvar HtmlExport = /** @class */function () {\n  function HtmlExport() {\n    this.document = undefined;\n    this.prevListLevel = undefined;\n    this.isOrdered = undefined;\n    this.keywordIndex = undefined;\n    /**\n     * @private\n     */\n    this.fieldCheck = 0;\n    /* eslint:enable:no-any */\n  }\n  HtmlExport.prototype.writeHtml = function (document, isOptimizeSfdt) {\n    this.keywordIndex = isOptimizeSfdt ? 1 : 0;\n    this.document = document;\n    var html = '';\n    if (document.hasOwnProperty(imagesProperty[this.keywordIndex])) {\n      this.serializeImages(document[imagesProperty[this.keywordIndex]]);\n    }\n    for (var i = 0; i < document[sectionsProperty[this.keywordIndex]].length; i++) {\n      html += this.serializeSection(document[sectionsProperty[this.keywordIndex]][i]);\n    }\n    return html;\n  };\n  HtmlExport.prototype.serializeImages = function (data) {\n    this.images = new Dictionary();\n    for (var img in data) {\n      if (Array.isArray(data[\"\" + img])) {\n        this.images.add(parseInt(img), data[\"\" + img]);\n      } else {\n        var images = [];\n        images.push(data[\"\" + img]);\n        this.images.add(parseInt(img), images);\n      }\n    }\n  };\n  HtmlExport.prototype.serializeSection = function (section) {\n    var string = '';\n    for (var i = 0; i < section[blocksProperty[this.keywordIndex]].length; i++) {\n      var block = section[blocksProperty[this.keywordIndex]][i];\n      if (block.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n        string += this.serializeParagraph(block);\n      } else if (block.hasOwnProperty(blocksProperty[this.keywordIndex])) {\n        string += this.serializeSection(block);\n      } else {\n        string += this.closeList();\n        string += this.serializeTable(block);\n      }\n    }\n    string += this.closeList();\n    this.prevListLevel = undefined;\n    this.isOrdered = undefined;\n    return string;\n  };\n  // Serialize Paragraph\n  HtmlExport.prototype.serializeParagraph = function (paragraph) {\n    var blockStyle = '';\n    var isList = false;\n    var isPreviousList = false;\n    if (!isNullOrUndefined(this.prevListLevel)) {\n      isPreviousList = true;\n    }\n    var tagAttributes = [];\n    var listLevel = undefined;\n    if (!isNullOrUndefined(paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]])) {\n      listLevel = this.getListLevel(paragraph);\n      if (!isPreviousList) {\n        this.prevListLevel = listLevel;\n      }\n      if (this.prevListLevel !== listLevel) {\n        isPreviousList = false;\n      }\n      this.prevListLevel = listLevel;\n    }\n    if (!isPreviousList) {\n      blockStyle += this.closeList();\n    }\n    if (!isNullOrUndefined(listLevel)) {\n      isList = true;\n    }\n    if (isList && !isPreviousList) {\n      blockStyle += this.getHtmlList(listLevel, paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listLevelNumberProperty[this.keywordIndex]]);\n    }\n    tagAttributes.push('style=\"' + this.serializeParagraphStyle(paragraph, '', isList) + ';' + 'white-space:pre' + '\"');\n    if (isList) {\n      blockStyle += this.createAttributesTag('li', tagAttributes);\n    } else {\n      this.prevListLevel = undefined;\n      this.isOrdered = undefined;\n      blockStyle += this.createAttributesTag(this.getStyleName(paragraph[paragraphFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]), tagAttributes);\n    }\n    if (paragraph[inlinesProperty[this.keywordIndex]].length === 0) {\n      //Handled to preserve non breaking space for empty paragraphs similar to MS Word behavior.\n      blockStyle += '&nbsp';\n    } else {\n      blockStyle = this.serializeInlines(paragraph, blockStyle);\n    }\n    if (isList) {\n      blockStyle += this.endTag('li');\n      if (blockStyle.indexOf('<ul') > -1) {\n        this.isOrdered = false;\n      } else if (blockStyle.indexOf('<ol') > -1) {\n        this.isOrdered = true;\n      }\n    } else {\n      blockStyle += this.endTag(this.getStyleName(paragraph[paragraphFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]));\n    }\n    if (paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]]) {\n      blockStyle += '<p class=\"iscreatedusinghtmlspantag\"><span>iscreatedusinghtmlspantag</span></p>';\n    }\n    return blockStyle;\n  };\n  HtmlExport.prototype.closeList = function () {\n    var blockStyle = '';\n    if (!isNullOrUndefined(this.isOrdered)) {\n      if (this.isOrdered) {\n        blockStyle = this.endTag('ol');\n      } else {\n        blockStyle = this.endTag('ul');\n      }\n      this.isOrdered = undefined;\n    }\n    return blockStyle;\n  };\n  HtmlExport.prototype.getListLevel = function (paragraph) {\n    var listLevel = undefined;\n    var list = undefined;\n    for (var i = 0; i < this.document[listsProperty[this.keywordIndex]].length; i++) {\n      if (this.document[listsProperty[this.keywordIndex]][i][listIdProperty[this.keywordIndex]] === paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listIdProperty[this.keywordIndex]]) {\n        list = this.document[listsProperty[this.keywordIndex]][i];\n        break;\n      }\n    }\n    if (list) {\n      for (var j = 0; j < this.document[abstractListsProperty[this.keywordIndex]].length; j++) {\n        if (this.document[abstractListsProperty[this.keywordIndex]][j][abstractListIdProperty[this.keywordIndex]] === list[abstractListIdProperty[this.keywordIndex]]) {\n          var levelNumber = paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listLevelNumberProperty[this.keywordIndex]];\n          listLevel = this.document[abstractListsProperty[this.keywordIndex]][j][levelsProperty[this.keywordIndex]][levelNumber];\n          break;\n        }\n      }\n    }\n    return listLevel;\n  };\n  HtmlExport.prototype.getHtmlList = function (listLevel, levelNumer) {\n    //if (start == null || (start != null && start.Paragraph != this)) {\n    //    let block: BlockAdv = this.GetPreviousBlock();\n    //    if (block instanceof ParagraphAdv) {\n    //        let previousListLevel: ListLevelAdv = (block as ParagraphAdv).ParagraphFormat.ListFormat.ListLevel;\n    //        if (previousListLevel == listLevel)\n    //            return \"\";\n    //    }\n    //}\n    var html = '';\n    if (listLevel[listLevelPatternProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 10 : 'Bullet')) {\n      html += '<ul type=\"';\n      switch (levelNumer) {\n        case 0:\n          html += 'disc';\n          listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n          break;\n        case 1:\n          html += 'circle';\n          listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n          break;\n        case 2:\n          html += 'square';\n          listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Wingdings';\n          break;\n        default:\n          html += 'disc';\n          listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n          break;\n      }\n      html += '\">';\n    } else {\n      html += '<ol type=\"';\n      switch (listLevel[listLevelPatternProperty[this.keywordIndex]]) {\n        case 'UpRoman':\n        case 2:\n          html += 'I';\n          break;\n        case 'LowRoman':\n        case 3:\n          html += 'i';\n          break;\n        case 'UpLetter':\n        case 4:\n          html += 'A';\n          break;\n        case 'LowLetter':\n        case 5:\n          html += 'a';\n          break;\n        default:\n          html += '1';\n          break;\n      }\n      html += '\" start=\"' + listLevel[startAtProperty[this.keywordIndex]].toString() + '\">';\n    }\n    return html;\n  };\n  //SerializeInlines\n  HtmlExport.prototype.serializeInlines = function (paragraph, blockStyle) {\n    var inline = undefined;\n    var i = 0;\n    while (paragraph[inlinesProperty[this.keywordIndex]].length > i) {\n      inline = paragraph[inlinesProperty[this.keywordIndex]][i];\n      if (inline.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n        blockStyle += this.serializeContentInlines(inline, blockStyle);\n        i++;\n        continue;\n      }\n      if (inline.hasOwnProperty(imageStringProperty[this.keywordIndex])) {\n        blockStyle += this.serializeImageContainer(inline);\n      } else if (inline.hasOwnProperty(fieldTypeProperty[this.keywordIndex])) {\n        if (inline[fieldTypeProperty[this.keywordIndex]] === 0) {\n          var fieldCode = paragraph[inlinesProperty[this.keywordIndex]][i + 1];\n          if (isNullOrUndefined(fieldCode[textProperty[this.keywordIndex]])) {\n            fieldCode = paragraph[inlinesProperty[this.keywordIndex]][i + 2];\n          }\n          if (!isNullOrUndefined(fieldCode) && !isNullOrUndefined(fieldCode[textProperty[this.keywordIndex]]) && (fieldCode[textProperty[this.keywordIndex]].indexOf('TOC') >= 0 || fieldCode[textProperty[this.keywordIndex]].indexOf('HYPERLINK') >= 0)) {\n            this.fieldCheck = 1;\n            var tagAttributes = [];\n            tagAttributes.push('style=\"' + this.serializeInlineStyle(inline[characterFormatProperty[this.keywordIndex]]) + '\"');\n            blockStyle += this.createAttributesTag('a', tagAttributes);\n          } else {\n            this.fieldCheck = undefined;\n          }\n        } else if (inline[fieldTypeProperty[this.keywordIndex]] === 2) {\n          if (!isNullOrUndefined(this.fieldCheck)) {\n            this.fieldCheck = 2;\n          } else {\n            this.fieldCheck = 0;\n          }\n        } else {\n          if (!isNullOrUndefined(this.fieldCheck) && this.fieldCheck !== 0) {\n            blockStyle += this.endTag('a');\n          }\n          this.fieldCheck = 0;\n        }\n      } else {\n        var text = isNullOrUndefined(inline[textProperty[this.keywordIndex]]) ? '' : inline[textProperty[this.keywordIndex]];\n        if (inline.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex])) {\n          switch (inline[bookmarkTypeProperty[this.keywordIndex]]) {\n            case 0:\n              blockStyle += '<a name=' + inline[nameProperty[this.keywordIndex]] + '>';\n              break;\n            case 1:\n              blockStyle += '</a>';\n              break;\n          }\n        }\n        if (this.fieldCheck === 0) {\n          blockStyle += this.serializeSpan(text, inline[characterFormatProperty[this.keywordIndex]]);\n        }\n        if (this.fieldCheck === 1) {\n          var hyperLink = text.replace(/\"/g, '');\n          blockStyle += ' href= \\\"' + hyperLink.replace('HYPERLINK', '').trim();\n          blockStyle += '\\\"';\n          blockStyle += '>';\n        }\n        if (this.fieldCheck === 2) {\n          blockStyle += this.serializeSpan(text, inline[characterFormatProperty[this.keywordIndex]]);\n        }\n      }\n      i++;\n    }\n    return blockStyle;\n  };\n  HtmlExport.prototype.serializeContentInlines = function (inline, inlineStyle) {\n    inlineStyle += this.serializeInlines(inline, inlineStyle);\n    return inlineStyle;\n  };\n  // Serialize Span\n  HtmlExport.prototype.serializeSpan = function (spanText, characterFormat) {\n    var spanClass = '';\n    if (spanText.indexOf('\\v') !== -1) {\n      spanClass += '<br>';\n      return spanClass.toString();\n    } else if (spanText.indexOf('\\f') !== -1) {\n      spanClass += '<br style = \"page-break-after:always;\"/>';\n      return spanClass.toString();\n    }\n    var tagAttributes = [];\n    this.serializeInlineStyle(characterFormat);\n    tagAttributes.push('style=\"' + this.serializeInlineStyle(characterFormat) + '\"');\n    spanClass += this.createAttributesTag('span', tagAttributes);\n    // Todo: Need to handle it.\n    // If the text starts with white-space, need to check whether it is a continuous space.\n    // if (characterFormat.ownerBase instanceof WInline) {\n    //     let inline: WInline = (characterFormat.ownerBase as WInline);\n    //     if (inline instanceof WSpan && !isNullOrUndefined(inline.text) && inline.text !== '' && (inline as WSpan).text[0] === ' ') {\n    //         Check previous inline until, it has valid rendered text.\n    //         do {\n    //             inline = WInline.getPreviousTextInline((inline as WSpan));\n    //         } while (inline instanceof WSpan && !isNullOrUndefined(inline.text));\n    //     } else {\n    //         inline = undefined;\n    //     }\n    //     If current white-space is a continuation of consecutive spaces, this will be set true.\n    //     ignoreFirstSpace = inline instanceof WSpan && !isNullOrUndefined(inline.text)\n    //         && (inline as WSpan).text[(inline as WSpan).text.length - 1] === ' ';\n    // }\n    var text = this.decodeHtmlNames(spanText.toString());\n    // if (text.length === 0) {\n    //     text = '&nbsp';\n    // }\n    spanClass += text;\n    spanClass += this.endTag('span');\n    return spanClass.toString();\n  };\n  /**\n   * @private\n   * @param {string} style - style name.\n   * @returns {string} - return heading tag.\n   */\n  HtmlExport.prototype.getStyleName = function (style) {\n    switch (style) {\n      case 'Heading 1':\n        return 'h1';\n      case 'Heading 2':\n        return 'h2';\n      case 'Heading 3':\n        return 'h3';\n      case 'Heading 4':\n        return 'h4';\n      case 'Heading 5':\n        return 'h5';\n      default:\n        return 'p';\n    }\n  };\n  //Serialize Image\n  HtmlExport.prototype.serializeImageContainer = function (image) {\n    var imageStyle = '';\n    var tagAttributes = [];\n    this.serializeInlineStyle(image[characterFormatProperty[this.keywordIndex]]);\n    var imageSource = '';\n    if (!isNullOrUndefined(image[imageStringProperty[this.keywordIndex]])) {\n      var base64ImageString = this.images.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n      imageSource = base64ImageString[HelperMethods.parseBoolValue(image[isMetaFileProperty[this.keywordIndex]]) ? 1 : 0];\n    }\n    var width = HelperMethods.convertPointToPixel(image[widthProperty[this.keywordIndex]]);\n    var height = HelperMethods.convertPointToPixel(image[heightProperty[this.keywordIndex]]);\n    tagAttributes.push('width=\"' + width.toString() + '\"');\n    tagAttributes.push('height=\"' + height.toString() + '\"');\n    tagAttributes.push('src=\"' + imageSource + '\"');\n    imageStyle += this.createAttributesTag('img', tagAttributes);\n    imageStyle += this.endTag('img');\n    return imageStyle.toString();\n  };\n  // Serialize Table Cell\n  HtmlExport.prototype.serializeCell = function (cell, row) {\n    var blockStyle = '';\n    var tagAttributes = [];\n    var cellHtml = '';\n    tagAttributes = [];\n    if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]])) {\n      //if (cell.cellFormat.shading.backgroundColor !== Color.FromArgb(0, 0, 0, 0)) {\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n        tagAttributes.push('bgcolor=\"' + HelperMethods.getColor(cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) + '\"');\n      }\n      // }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] > 1) {\n        tagAttributes.push('colspan=\"' + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]].toString() + '\"');\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]] > 1) {\n        tagAttributes.push('rowspan=\"' + cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]].toString() + '\"');\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]] !== 0) {\n        var cellWidth = HelperMethods.convertPointToPixel(cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]]);\n        tagAttributes.push('width=\"' + cellWidth.toString() + '\"');\n      }\n      var cellAlignment = isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) ? 'top' : this.convertVerticalAlignment(cell[cellFormatProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]);\n      tagAttributes.push('valign=\"' + cellAlignment + '\"');\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] !== 0) {\n        cellHtml += 'padding-left:' + cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]].toString() + 'pt;';\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] !== 0) {\n        cellHtml += 'padding-right:' + cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]].toString() + 'pt;';\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] !== 0) {\n        cellHtml += 'padding-top:' + cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]].toString() + 'pt;';\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] !== 0) {\n        cellHtml += 'padding-bottom:' + cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]].toString() + 'pt;';\n      }\n      if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]])) {\n        cellHtml += this.serializeCellBordersStyle(cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], row);\n      }\n    }\n    if (cellHtml.length !== 0) {\n      tagAttributes.push('style=\"' + cellHtml + '\"');\n    }\n    blockStyle += this.createAttributesTag('td', tagAttributes);\n    for (var k = 0; k < cell[blocksProperty[this.keywordIndex]].length; k++) {\n      var block = cell[blocksProperty[this.keywordIndex]][k];\n      if (block.hasOwnProperty(rowsProperty[this.keywordIndex])) {\n        blockStyle += this.serializeTable(block);\n      } else {\n        blockStyle += this.serializeParagraph(block);\n      }\n    }\n    blockStyle += this.endTag('td');\n    return blockStyle;\n  };\n  HtmlExport.prototype.convertVerticalAlignment = function (cellVerticalAlignment) {\n    switch (cellVerticalAlignment) {\n      case 'Center':\n      case 1:\n        return 'middle';\n      case 'Bottom':\n      case 2:\n        return 'bottom';\n      default:\n        return 'top';\n    }\n  };\n  // Serialize Table\n  HtmlExport.prototype.serializeTable = function (table) {\n    var html = '';\n    html += this.createTableStartTag(table);\n    for (var j = 0; j < table[rowsProperty[this.keywordIndex]].length; j++) {\n      html += this.serializeRow(table[rowsProperty[this.keywordIndex]][j]);\n    }\n    html += this.createTableEndTag();\n    return html;\n  };\n  // Serialize Row\n  HtmlExport.prototype.serializeRow = function (row) {\n    var html = '';\n    html += this.createRowStartTag(row);\n    for (var k = 0; k < row[cellsProperty[this.keywordIndex]].length; k++) {\n      html += this.serializeCell(row[cellsProperty[this.keywordIndex]][k], row);\n    }\n    return html;\n  };\n  // Serialize Styles\n  HtmlExport.prototype.serializeParagraphStyle = function (paragraph, className, isList, keywordIndex) {\n    var paragraphClass = '';\n    var editor;\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = keywordIndex;\n    }\n    if (paragraph[inlinesProperty[this.keywordIndex]].length > 0) {\n      paragraphClass += this.serializeCharacterFormat(paragraph[characterFormatProperty[this.keywordIndex]]);\n    }\n    var isEmptyLine = false;\n    if (paragraph[inlinesProperty[this.keywordIndex]].length == 0) {\n      isEmptyLine = true;\n    }\n    paragraphClass += this.serializeCharacterFormat(paragraph[characterFormatProperty[this.keywordIndex]], isEmptyLine);\n    paragraphClass += this.serializeParagraphFormat(paragraph[paragraphFormatProperty[this.keywordIndex]], isList);\n    return paragraphClass;\n  };\n  HtmlExport.prototype.serializeInlineStyle = function (characterFormat) {\n    return this.serializeCharacterFormat(characterFormat);\n  };\n  HtmlExport.prototype.serializeTableBorderStyle = function (borders) {\n    var borderStyle = '';\n    var border = {};\n    //LeftBorder\n    border = borders[leftProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'left');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-left-style:none;';\n    }\n    //TopBorder\n    border = borders[topProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'top');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-top-style:none;';\n    }\n    //RightBorder\n    border = borders[rightProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'right');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-right-style:none;';\n    }\n    //BottomBorder\n    border = borders[bottomProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'bottom');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-bottom-style:none;';\n    }\n    return borderStyle;\n  };\n  HtmlExport.prototype.serializeCellBordersStyle = function (borders, row) {\n    var borderStyle = '';\n    //borderStyle = 'border:solid 1px;';\n    // if (borders.left.color) {\n    //     borderStyle += ('border-left-color:' + HelperMethods.getColor(borders.left.color));\n    //     borderStyle += ';';\n    // }\n    // borderStyle += this.serializeBorderStyle(borders.left, 'left');\n    // if (!isNullOrUndefined(borders.right.color)) {\n    //     borderStyle += ('border-right-color:' + HelperMethods.getColor(borders.right.color));\n    //     borderStyle += ';';\n    // }\n    // borderStyle += this.serializeBorderStyle(borders.right, 'right');\n    // if (!isNullOrUndefined(borders.top.color)) {\n    //     borderStyle += ('border-top-color:' + HelperMethods.getColor(borders.top.color));\n    //     borderStyle += ';';\n    // }\n    // borderStyle += this.serializeBorderStyle(borders.top, 'top');\n    // if (!isNullOrUndefined(borders.bottom.color)) {\n    //     borderStyle += ('border-bottom-color:' + HelperMethods.getColor(borders.bottom.color));\n    //     borderStyle += ';';\n    // }\n    // borderStyle += this.serializeBorderStyle(borders.bottom, 'bottom');\n    var border = {};\n    //LeftBorder\n    border = borders[leftProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'left');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-left-style:none;';\n    } else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]])) {\n      border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]];\n      if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n        border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n        border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n        borderStyle += this.serializeBorderStyle(border, 'left');\n      }\n    }\n    //TopBorder\n    border = borders[topProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'top');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-top-style:none;';\n    } else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][topProperty[this.keywordIndex]])) {\n      border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][topProperty[this.keywordIndex]];\n      if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n        border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n        border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n        borderStyle += this.serializeBorderStyle(border, 'top');\n      }\n    }\n    //RightBorder\n    border = borders[rightProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'right');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-right-style:none;';\n    } else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]])) {\n      border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]];\n      if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n        border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n        border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n        borderStyle += this.serializeBorderStyle(border, 'right');\n      }\n    }\n    //BottomBorder\n    border = borders[bottomProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n      border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n      border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n      borderStyle += this.serializeBorderStyle(border, 'bottom');\n    } else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n      borderStyle += 'border-bottom-style:none;';\n    } else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][bottomProperty[this.keywordIndex]])) {\n      border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][bottomProperty[this.keywordIndex]];\n      if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n        border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n        border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n        borderStyle += this.serializeBorderStyle(border, 'bottom');\n      }\n    }\n    return borderStyle;\n  };\n  HtmlExport.prototype.serializeBorderStyle = function (border, borderPosition) {\n    var borderStyle = '';\n    borderStyle += 'border-' + borderPosition + '-style:' + this.convertBorderLineStyle(border[lineStyleProperty[this.keywordIndex]]);\n    borderStyle += ';';\n    if (border[lineWidthProperty[this.keywordIndex]] > 0) {\n      borderStyle += 'border-' + borderPosition + '-width:' + border[lineWidthProperty[this.keywordIndex]].toString() + 'pt;';\n    }\n    //if (border.color !== Color.FromArgb(0, 0, 0, 0))\n    if (!isNullOrUndefined(border[colorProperty[this.keywordIndex]])) {\n      borderStyle += 'border-' + borderPosition + '-color:' + HelperMethods.getColor(border[colorProperty[this.keywordIndex]]) + ';';\n    }\n    return borderStyle;\n  };\n  HtmlExport.prototype.convertBorderLineStyle = function (lineStyle) {\n    switch (lineStyle) {\n      case 'Single':\n      case 0:\n        return 'solid';\n      case 'None':\n      case 1:\n        return 'none';\n      case 'Dot':\n      case 2:\n        return 'dotted';\n      case 'DashSmallGap':\n      case 'DashLargeGap':\n      case 'DashDot':\n      case 'DashDotDot':\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n        return 'dashed';\n      case 'Double':\n      case 'Triple':\n      case 'ThinThickSmallGap':\n      case 'ThickThinSmallGap':\n      case 'ThinThickThinSmallGap':\n      case 'ThinThickMediumGap':\n      case 'ThickThinMediumGap':\n      case 'ThinThickThinMediumGap':\n      case 'ThinThickLargeGap':\n      case 'ThickThinLargeGap':\n      case 'ThinThickThinLargeGap':\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n      case 16:\n      case 17:\n        return 'double';\n      case 'SingleWavy':\n      case 18:\n        return 'solid';\n      case 'DoubleWavy':\n      case 19:\n        return 'double';\n      case 'DashDotStroked':\n      case 20:\n        return 'solid';\n      case 'Emboss3D':\n      case 21:\n        return 'ridge';\n      case 'Engrave3D':\n      case 22:\n        return 'groove';\n      case 'Outset':\n      case 23:\n        return 'outset';\n      case 'Inset':\n      case 24:\n        return 'inset';\n      default:\n        return 'solid';\n    }\n  };\n  // Serialize Format\n  HtmlExport.prototype.serializeCharacterFormat = function (characterFormat, isEmptyLine) {\n    if (!isNullOrUndefined(characterFormat[inlineFormatProperty[this.keywordIndex]])) {\n      return this.serializeCharacterFormat(characterFormat[inlineFormatProperty[this.keywordIndex]], isEmptyLine);\n    }\n    var propertyValue;\n    var charStyle = '';\n    charStyle += 'font-weight';\n    charStyle += ':';\n    charStyle += HelperMethods.parseBoolValue(characterFormat[boldProperty[this.keywordIndex]]) ? 'bold' : 'normal';\n    charStyle += ';';\n    charStyle += 'font-style';\n    charStyle += ':';\n    if (HelperMethods.parseBoolValue(characterFormat[italicProperty[this.keywordIndex]])) {\n      charStyle += 'italic';\n    } else {\n      charStyle += 'normal';\n    }\n    charStyle += ';';\n    charStyle += this.serializeTextDecoration(characterFormat);\n    //Text Baseline Alignment\n    if (characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Superscript') || characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Subscript')) {\n      charStyle += 'vertical-align';\n      charStyle += ':';\n      charStyle += characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Superscript') ? 'super' : 'sub';\n      charStyle += ';';\n    }\n    //Text Foreground and Background Color\n    if (!isNullOrUndefined(characterFormat[highlightColorProperty[this.keywordIndex]]) && characterFormat[highlightColorProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'NoColor') && !isEmptyLine) {\n      charStyle += 'background-color';\n      charStyle += ':';\n      charStyle += this.keywordIndex == 1 ? this.getHighlightColorCode(characterFormat[highlightColorProperty[this.keywordIndex]]) : HelperMethods.getHighlightColorCode(characterFormat.highlightColor.toString());\n      charStyle += ';';\n    }\n    //Font Color\n    propertyValue = characterFormat[fontColorProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      charStyle += 'color';\n      charStyle += ':';\n      charStyle += HelperMethods.getColor(propertyValue);\n      charStyle += ';';\n    }\n    if (!isNullOrUndefined(characterFormat[allCapsProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(characterFormat[allCapsProperty[this.keywordIndex]])) {\n      charStyle += 'text-transform';\n      charStyle += ':';\n      charStyle += 'uppercase';\n      charStyle += ';';\n    }\n    propertyValue = characterFormat[fontSizeProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      charStyle += 'font-size';\n      charStyle += ':';\n      charStyle += propertyValue.toString();\n      charStyle += 'pt';\n      charStyle += ';';\n    }\n    propertyValue = characterFormat[fontFamilyProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      charStyle += 'font-family';\n      charStyle += ':';\n      charStyle += propertyValue.toString();\n      charStyle += ';';\n    }\n    propertyValue = characterFormat[characterSpacingProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      charStyle += 'letter-spacing';\n      charStyle += ':';\n      charStyle += propertyValue.toString();\n      charStyle += 'pt';\n      charStyle += ';';\n    }\n    propertyValue = characterFormat[scalingProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      charStyle += 'transform:scaleX(';\n      charStyle += (propertyValue / 100).toString();\n      charStyle += ')';\n      charStyle += ';';\n    }\n    return charStyle.toString();\n  };\n  HtmlExport.prototype.serializeTextDecoration = function (characterFormat) {\n    var charStyle = 'text-decoration:';\n    var value = '';\n    // Double strike through will become Single strike through while saving HTML using MS Word.\n    if (characterFormat[strikethroughProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'SingleStrike') || characterFormat[strikethroughProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'DoubleStrike')) {\n      value += 'line-through ';\n    }\n    if (!isNullOrUndefined(characterFormat[underlineProperty[this.keywordIndex]]) && characterFormat[underlineProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None')) {\n      value += 'underline';\n    }\n    if (value.length > 1) {\n      value = charStyle + value + ';';\n    }\n    return value;\n  };\n  /**\n   * @private\n   */\n  HtmlExport.prototype.serializeParagraphFormat = function (paragraphFormat, isList, keywordIndex) {\n    if (isNullOrUndefined(this.keywordIndex)) {\n      this.keywordIndex = keywordIndex;\n    }\n    if (!isNullOrUndefined(paragraphFormat[inlineFormatProperty[this.keywordIndex]])) {\n      return this.serializeParagraphFormat(paragraphFormat[inlineFormatProperty[this.keywordIndex]], isList);\n    }\n    var propertyValue;\n    var paraStyle = '';\n    propertyValue = this.getTextAlignment(paragraphFormat[textAlignmentProperty[this.keywordIndex]]);\n    if (!isNullOrUndefined(propertyValue)) {\n      paraStyle += 'text-align:' + propertyValue.toLowerCase() + ';';\n    }\n    propertyValue = paragraphFormat[beforeSpacingProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      paraStyle += 'margin-top:' + propertyValue.toString() + 'pt; ';\n    }\n    propertyValue = paragraphFormat[rightIndentProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      paraStyle += 'margin-right:' + propertyValue.toString() + 'pt; ';\n    }\n    propertyValue = paragraphFormat[afterSpacingProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      paraStyle += 'margin-bottom:' + propertyValue.toString() + 'pt; ';\n    }\n    propertyValue = paragraphFormat[leftIndentProperty[this.keywordIndex]];\n    if (isList) {\n      // if (isNullOrUndefined(propertyValue)) {\n      //     propertyValue = -36;\n      // } else {\n      //     propertyValue -= 36;\n      // }\n      propertyValue = 0;\n    }\n    if (!isNullOrUndefined(propertyValue)) {\n      paraStyle += 'margin-left:' + propertyValue.toString() + 'pt; ';\n    }\n    propertyValue = paragraphFormat[firstLineIndentProperty[this.keywordIndex]];\n    if (isList) {\n      // if (isNullOrUndefined(propertyValue)) {\n      //     propertyValue = 18;\n      // } else {\n      //     propertyValue += 18;\n      // }\n      propertyValue = 0;\n    }\n    if (!isNullOrUndefined(propertyValue) && propertyValue !== 0) {\n      paraStyle += 'text-indent:' + propertyValue.toString() + 'pt;';\n    }\n    propertyValue = paragraphFormat[lineSpacingProperty[this.keywordIndex]];\n    if (!isNullOrUndefined(propertyValue)) {\n      if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Multiple')) {\n        propertyValue = Math.round(propertyValue * 10) / 10;\n      } else {\n        propertyValue = propertyValue.toString() + 'pt;';\n      }\n      paraStyle += 'line-height:' + propertyValue;\n    }\n    return paraStyle.toString();\n  };\n  HtmlExport.prototype.createAttributesTag = function (tagValue, localProperties) {\n    var sb = '';\n    sb += '<';\n    sb += tagValue;\n    for (var i = 0; i < localProperties.length; i++) {\n      sb += ' ';\n      sb += localProperties[i];\n    }\n    if (tagValue !== 'a') {\n      sb += '>';\n    }\n    return sb;\n  };\n  HtmlExport.prototype.createTag = function (tagValue) {\n    var s = '';\n    s += '<';\n    s += tagValue;\n    s += '>';\n    return s;\n  };\n  HtmlExport.prototype.endTag = function (tagValue) {\n    var sb = '';\n    sb += '<';\n    sb += '/';\n    sb += tagValue;\n    sb += '>';\n    return sb;\n  };\n  HtmlExport.prototype.createTableStartTag = function (table) {\n    var blockStyle = '';\n    var tableStyle = '';\n    var tagAttributes = [];\n    //tagAttributes.push('border=\"' + '1\"');\n    if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]])) {\n      //if (table.tableFormat.shading.backgroundColor !== Color.FromArgb(0, 0, 0, 0)) {\n      if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]) && !isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n        tagAttributes.push('bgcolor=\"' + HelperMethods.getColor(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) + '\"');\n      }\n      //}\n      if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]] > 0) {\n        tagAttributes.push('cellspacing=\"' + (table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]] * 72 / 96 * 2).toString() + '\"');\n      } else {\n        tableStyle += 'border-collapse:collapse;';\n      }\n      tagAttributes.push('cellpadding=\"' + '0\"');\n      if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]] !== 0 && table[tableFormatProperty[this.keywordIndex]][tableAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Left')) {\n        tableStyle += 'margin-left:' + (table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]].toString() + 'pt;');\n      }\n      if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]])) {\n        tableStyle += this.serializeTableWidth(table[tableFormatProperty[this.keywordIndex]]);\n      }\n      if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]])) {\n        tableStyle += this.serializeTableBorderStyle(table[tableFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]]);\n      }\n    }\n    if (tableStyle.length !== 0) {\n      tagAttributes.push('style=\"', tableStyle.toString() + '\"');\n    }\n    return blockStyle += this.createAttributesTag('table', tagAttributes);\n  };\n  HtmlExport.prototype.serializeTableWidth = function (tableFormat) {\n    var width = '';\n    switch (tableFormat[preferredWidthTypeProperty[this.keywordIndex]]) {\n      case 'Percent':\n      case 1:\n        width += 'width: ' + tableFormat[preferredWidthProperty[this.keywordIndex]].toString() + '%;';\n        break;\n      case 'Point':\n      case 2:\n        width += 'width: ' + tableFormat[preferredWidthProperty[this.keywordIndex]].toString() + 'pt;';\n        break;\n      case 'Auto':\n      case 0:\n        width += 'width: auto;';\n        break;\n    }\n    return width;\n  };\n  HtmlExport.prototype.getHighlightColorCode = function (highlightColor) {\n    var color = '#ffffff';\n    switch (highlightColor) {\n      case 1:\n        color = '#ffff00';\n        break;\n      case 2:\n        color = '#00ff00';\n        break;\n      case 3:\n        color = '#00ffff';\n        break;\n      case 4:\n        color = '#ff00ff';\n        break;\n      case 5:\n        color = '#0000ff';\n        break;\n      case 6:\n        color = '#ff0000';\n        break;\n      case 7:\n        color = '#000080';\n        break;\n      case 8:\n        color = '#008080';\n        break;\n      case 9:\n        color = '#008000';\n        break;\n      case 10:\n        color = '#800080';\n        break;\n      case 11:\n        color = '#800000';\n        break;\n      case 12:\n        color = '#808000';\n        break;\n      case 13:\n        color = '#808080';\n        break;\n      case 14:\n        color = '#c0c0c0';\n        break;\n      case 15:\n        color = '#000000';\n        break;\n    }\n    return color;\n  };\n  HtmlExport.prototype.getTextAlignment = function (textAlignment) {\n    switch (textAlignment) {\n      case 1:\n        return 'Center';\n      case 2:\n        return 'Right';\n      case 3:\n        return 'Justify';\n      default:\n        return 'Left';\n    }\n  };\n  HtmlExport.prototype.createTableEndTag = function () {\n    var blockStyle = '';\n    blockStyle += this.endTag('table');\n    return blockStyle;\n  };\n  HtmlExport.prototype.createRowStartTag = function (row) {\n    var blockStyle = '';\n    var tagAttributes = [];\n    if (HelperMethods.parseBoolValue(row[rowFormatProperty[this.keywordIndex]][isHeaderProperty[this.keywordIndex]])) {\n      blockStyle += this.createTag('thead');\n    }\n    if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]]) && row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] > 0) {\n      var height = HelperMethods.convertPointToPixel(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]]);\n      tagAttributes.push('height=\"' + height + '\"');\n    }\n    return blockStyle + this.createAttributesTag('tr', tagAttributes);\n  };\n  HtmlExport.prototype.createRowEndTag = function (row) {\n    var blockStyle = '';\n    blockStyle += this.endTag('tr');\n    if (HelperMethods.parseBoolValue(row[rowFormatProperty[this.keywordIndex]][isHeaderProperty[this.keywordIndex]])) {\n      blockStyle += this.endTag('thead');\n    }\n    return blockStyle;\n  };\n  HtmlExport.prototype.decodeHtmlNames = function (text) {\n    if (text === '\\t') {\n      return '&emsp;';\n    }\n    text = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    var splittedText = text.split(' ');\n    var htmlText = '';\n    if (splittedText.length > 0) {\n      htmlText = splittedText[0];\n      for (var i = 0; i < splittedText.length - 1; i++) {\n        htmlText += ' ' + splittedText[i + 1];\n      }\n    }\n    return htmlText;\n  };\n  return HtmlExport;\n}();\nexport { HtmlExport };","map":{"version":3,"names":["isNullOrUndefined","HelperMethods","sectionsProperty","characterFormatProperty","paragraphFormatProperty","listsProperty","abstractListsProperty","nameProperty","boldProperty","italicProperty","underlineProperty","baselineAlignmentProperty","strikethroughProperty","highlightColorProperty","fontSizeProperty","fontColorProperty","fontFamilyProperty","styleNameProperty","allCapsProperty","listIdProperty","listLevelNumberProperty","leftIndentProperty","rightIndentProperty","firstLineIndentProperty","textAlignmentProperty","afterSpacingProperty","beforeSpacingProperty","lineSpacingProperty","lineSpacingTypeProperty","listFormatProperty","bordersProperty","leftMarginProperty","rightMarginProperty","topMarginProperty","bottomMarginProperty","cellWidthProperty","columnSpanProperty","rowSpanProperty","verticalAlignmentProperty","isHeaderProperty","cellSpacingProperty","shadingProperty","tableAlignmentProperty","preferredWidthProperty","preferredWidthTypeProperty","backgroundColorProperty","hasNoneStyleProperty","lineStyleProperty","lineWidthProperty","textProperty","widthProperty","heightProperty","colorProperty","imageStringProperty","topProperty","bottomProperty","rightProperty","leftProperty","fieldTypeProperty","inlinesProperty","cellFormatProperty","rowFormatProperty","cellsProperty","rowsProperty","tableFormatProperty","blocksProperty","listLevelPatternProperty","abstractListIdProperty","levelsProperty","bookmarkTypeProperty","inlineFormatProperty","startAtProperty","characterSpacingProperty","scalingProperty","imagesProperty","Dictionary","isMetaFileProperty","isCreatedUsingHtmlSpanTagProperty","HtmlExport","document","undefined","prevListLevel","isOrdered","keywordIndex","fieldCheck","prototype","writeHtml","isOptimizeSfdt","html","hasOwnProperty","serializeImages","i","length","serializeSection","data","images","img","Array","isArray","add","parseInt","push","section","string","block","serializeParagraph","closeList","serializeTable","paragraph","blockStyle","isList","isPreviousList","tagAttributes","listLevel","getListLevel","getHtmlList","serializeParagraphStyle","createAttributesTag","getStyleName","serializeInlines","endTag","indexOf","list","j","levelNumber","levelNumer","toString","inline","serializeContentInlines","serializeImageContainer","fieldCode","serializeInlineStyle","text","serializeSpan","hyperLink","replace","trim","inlineStyle","spanText","characterFormat","spanClass","decodeHtmlNames","style","image","imageStyle","imageSource","base64ImageString","get","parseBoolValue","width","convertPointToPixel","height","serializeCell","cell","row","cellHtml","getColor","cellWidth","cellAlignment","convertVerticalAlignment","serializeCellBordersStyle","k","cellVerticalAlignment","table","createTableStartTag","serializeRow","createTableEndTag","createRowStartTag","className","paragraphClass","editor","serializeCharacterFormat","isEmptyLine","serializeParagraphFormat","serializeTableBorderStyle","borders","borderStyle","border","serializeBorderStyle","borderPosition","convertBorderLineStyle","lineStyle","propertyValue","charStyle","serializeTextDecoration","getHighlightColorCode","highlightColor","value","paragraphFormat","paraStyle","getTextAlignment","toLowerCase","Math","round","tagValue","localProperties","sb","createTag","s","tableStyle","serializeTableWidth","tableFormat","color","textAlignment","createRowEndTag","splittedText","split","htmlText"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/writer/html-export.js"],"sourcesContent":["/* eslint-disable */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { sectionsProperty, characterFormatProperty, paragraphFormatProperty, listsProperty, abstractListsProperty, nameProperty, boldProperty, italicProperty, underlineProperty, baselineAlignmentProperty, strikethroughProperty, highlightColorProperty, fontSizeProperty, fontColorProperty, fontFamilyProperty, styleNameProperty, allCapsProperty, listIdProperty, listLevelNumberProperty, leftIndentProperty, rightIndentProperty, firstLineIndentProperty, textAlignmentProperty, afterSpacingProperty, beforeSpacingProperty, lineSpacingProperty, lineSpacingTypeProperty, listFormatProperty, bordersProperty, leftMarginProperty, rightMarginProperty, topMarginProperty, bottomMarginProperty, cellWidthProperty, columnSpanProperty, rowSpanProperty, verticalAlignmentProperty, isHeaderProperty, cellSpacingProperty, shadingProperty, tableAlignmentProperty, preferredWidthProperty, preferredWidthTypeProperty, backgroundColorProperty, hasNoneStyleProperty, lineStyleProperty, lineWidthProperty, textProperty, widthProperty, heightProperty, colorProperty, imageStringProperty, topProperty, bottomProperty, rightProperty, leftProperty, fieldTypeProperty, inlinesProperty, cellFormatProperty, rowFormatProperty, cellsProperty, rowsProperty, tableFormatProperty, blocksProperty, listLevelPatternProperty, abstractListIdProperty, levelsProperty, bookmarkTypeProperty, inlineFormatProperty, startAtProperty, characterSpacingProperty, scalingProperty, imagesProperty, Dictionary, isMetaFileProperty, isCreatedUsingHtmlSpanTagProperty } from '../../index';\n/**\n * @private\n */\nvar HtmlExport = /** @class */ (function () {\n    function HtmlExport() {\n        this.document = undefined;\n        this.prevListLevel = undefined;\n        this.isOrdered = undefined;\n        this.keywordIndex = undefined;\n        /**\n         * @private\n         */\n        this.fieldCheck = 0;\n        /* eslint:enable:no-any */\n    }\n    HtmlExport.prototype.writeHtml = function (document, isOptimizeSfdt) {\n        this.keywordIndex = isOptimizeSfdt ? 1 : 0;\n        this.document = document;\n        var html = '';\n        if (document.hasOwnProperty(imagesProperty[this.keywordIndex])) {\n            this.serializeImages(document[imagesProperty[this.keywordIndex]]);\n        }\n        for (var i = 0; i < document[sectionsProperty[this.keywordIndex]].length; i++) {\n            html += this.serializeSection(document[sectionsProperty[this.keywordIndex]][i]);\n        }\n        return html;\n    };\n    HtmlExport.prototype.serializeImages = function (data) {\n        this.images = new Dictionary();\n        for (var img in data) {\n            if (Array.isArray(data[\"\" + img])) {\n                this.images.add(parseInt(img), data[\"\" + img]);\n            }\n            else {\n                var images = [];\n                images.push(data[\"\" + img]);\n                this.images.add(parseInt(img), images);\n            }\n        }\n    };\n    HtmlExport.prototype.serializeSection = function (section) {\n        var string = '';\n        for (var i = 0; i < section[blocksProperty[this.keywordIndex]].length; i++) {\n            var block = section[blocksProperty[this.keywordIndex]][i];\n            if (block.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                string += this.serializeParagraph(block);\n            }\n            else if (block.hasOwnProperty(blocksProperty[this.keywordIndex])) {\n                string += this.serializeSection(block);\n            }\n            else {\n                string += this.closeList();\n                string += this.serializeTable(block);\n            }\n        }\n        string += this.closeList();\n        this.prevListLevel = undefined;\n        this.isOrdered = undefined;\n        return string;\n    };\n    // Serialize Paragraph\n    HtmlExport.prototype.serializeParagraph = function (paragraph) {\n        var blockStyle = '';\n        var isList = false;\n        var isPreviousList = false;\n        if (!isNullOrUndefined(this.prevListLevel)) {\n            isPreviousList = true;\n        }\n        var tagAttributes = [];\n        var listLevel = undefined;\n        if (!isNullOrUndefined(paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]])) {\n            listLevel = this.getListLevel(paragraph);\n            if (!isPreviousList) {\n                this.prevListLevel = listLevel;\n            }\n            if (this.prevListLevel !== listLevel) {\n                isPreviousList = false;\n            }\n            this.prevListLevel = listLevel;\n        }\n        if (!isPreviousList) {\n            blockStyle += this.closeList();\n        }\n        if (!isNullOrUndefined(listLevel)) {\n            isList = true;\n        }\n        if (isList && !isPreviousList) {\n            blockStyle += this.getHtmlList(listLevel, paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listLevelNumberProperty[this.keywordIndex]]);\n        }\n        tagAttributes.push('style=\"' + this.serializeParagraphStyle(paragraph, '', isList) + ';' + 'white-space:pre' + '\"');\n        if (isList) {\n            blockStyle += this.createAttributesTag('li', tagAttributes);\n        }\n        else {\n            this.prevListLevel = undefined;\n            this.isOrdered = undefined;\n            blockStyle += this.createAttributesTag(this.getStyleName(paragraph[paragraphFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]), tagAttributes);\n        }\n        if (paragraph[inlinesProperty[this.keywordIndex]].length === 0) {\n            //Handled to preserve non breaking space for empty paragraphs similar to MS Word behavior.\n            blockStyle += '&nbsp';\n        }\n        else {\n            blockStyle = this.serializeInlines(paragraph, blockStyle);\n        }\n        if (isList) {\n            blockStyle += this.endTag('li');\n            if (blockStyle.indexOf('<ul') > -1) {\n                this.isOrdered = false;\n            }\n            else if (blockStyle.indexOf('<ol') > -1) {\n                this.isOrdered = true;\n            }\n        }\n        else {\n            blockStyle += this.endTag(this.getStyleName(paragraph[paragraphFormatProperty[this.keywordIndex]][styleNameProperty[this.keywordIndex]]));\n        }\n        if (paragraph[isCreatedUsingHtmlSpanTagProperty[this.keywordIndex]]) {\n            blockStyle += '<p class=\"iscreatedusinghtmlspantag\"><span>iscreatedusinghtmlspantag</span></p>';\n        }\n        return blockStyle;\n    };\n    HtmlExport.prototype.closeList = function () {\n        var blockStyle = '';\n        if (!isNullOrUndefined(this.isOrdered)) {\n            if (this.isOrdered) {\n                blockStyle = this.endTag('ol');\n            }\n            else {\n                blockStyle = this.endTag('ul');\n            }\n            this.isOrdered = undefined;\n        }\n        return blockStyle;\n    };\n    HtmlExport.prototype.getListLevel = function (paragraph) {\n        var listLevel = undefined;\n        var list = undefined;\n        for (var i = 0; i < this.document[listsProperty[this.keywordIndex]].length; i++) {\n            if (this.document[listsProperty[this.keywordIndex]][i][listIdProperty[this.keywordIndex]] === paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listIdProperty[this.keywordIndex]]) {\n                list = this.document[listsProperty[this.keywordIndex]][i];\n                break;\n            }\n        }\n        if (list) {\n            for (var j = 0; j < this.document[abstractListsProperty[this.keywordIndex]].length; j++) {\n                if (this.document[abstractListsProperty[this.keywordIndex]][j][abstractListIdProperty[this.keywordIndex]] === list[abstractListIdProperty[this.keywordIndex]]) {\n                    var levelNumber = paragraph[paragraphFormatProperty[this.keywordIndex]][listFormatProperty[this.keywordIndex]][listLevelNumberProperty[this.keywordIndex]];\n                    listLevel = this.document[abstractListsProperty[this.keywordIndex]][j][levelsProperty[this.keywordIndex]][levelNumber];\n                    break;\n                }\n            }\n        }\n        return listLevel;\n    };\n    HtmlExport.prototype.getHtmlList = function (listLevel, levelNumer) {\n        //if (start == null || (start != null && start.Paragraph != this)) {\n        //    let block: BlockAdv = this.GetPreviousBlock();\n        //    if (block instanceof ParagraphAdv) {\n        //        let previousListLevel: ListLevelAdv = (block as ParagraphAdv).ParagraphFormat.ListFormat.ListLevel;\n        //        if (previousListLevel == listLevel)\n        //            return \"\";\n        //    }\n        //}\n        var html = '';\n        if (listLevel[listLevelPatternProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 10 : 'Bullet')) {\n            html += '<ul type=\"';\n            switch (levelNumer) {\n                case 0:\n                    html += 'disc';\n                    listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n                    break;\n                case 1:\n                    html += 'circle';\n                    listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n                    break;\n                case 2:\n                    html += 'square';\n                    listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Wingdings';\n                    break;\n                default:\n                    html += 'disc';\n                    listLevel[characterFormatProperty[this.keywordIndex]][fontFamilyProperty[this.keywordIndex]] = 'Symbol';\n                    break;\n            }\n            html += '\">';\n        }\n        else {\n            html += '<ol type=\"';\n            switch (listLevel[listLevelPatternProperty[this.keywordIndex]]) {\n                case 'UpRoman':\n                case 2:\n                    html += 'I';\n                    break;\n                case 'LowRoman':\n                case 3:\n                    html += 'i';\n                    break;\n                case 'UpLetter':\n                case 4:\n                    html += 'A';\n                    break;\n                case 'LowLetter':\n                case 5:\n                    html += 'a';\n                    break;\n                default:\n                    html += '1';\n                    break;\n            }\n            html += '\" start=\"' + listLevel[startAtProperty[this.keywordIndex]].toString() + '\">';\n        }\n        return html;\n    };\n    //SerializeInlines\n    HtmlExport.prototype.serializeInlines = function (paragraph, blockStyle) {\n        var inline = undefined;\n        var i = 0;\n        while (paragraph[inlinesProperty[this.keywordIndex]].length > i) {\n            inline = paragraph[inlinesProperty[this.keywordIndex]][i];\n            if (inline.hasOwnProperty(inlinesProperty[this.keywordIndex])) {\n                blockStyle += this.serializeContentInlines(inline, blockStyle);\n                i++;\n                continue;\n            }\n            if (inline.hasOwnProperty(imageStringProperty[this.keywordIndex])) {\n                blockStyle += this.serializeImageContainer(inline);\n            }\n            else if (inline.hasOwnProperty(fieldTypeProperty[this.keywordIndex])) {\n                if (inline[fieldTypeProperty[this.keywordIndex]] === 0) {\n                    var fieldCode = paragraph[inlinesProperty[this.keywordIndex]][i + 1];\n                    if (isNullOrUndefined(fieldCode[textProperty[this.keywordIndex]])) {\n                        fieldCode = paragraph[inlinesProperty[this.keywordIndex]][i + 2];\n                    }\n                    if (!isNullOrUndefined(fieldCode) && !isNullOrUndefined(fieldCode[textProperty[this.keywordIndex]]) &&\n                        (fieldCode[textProperty[this.keywordIndex]].indexOf('TOC') >= 0 || fieldCode[textProperty[this.keywordIndex]].indexOf('HYPERLINK') >= 0)) {\n                        this.fieldCheck = 1;\n                        var tagAttributes = [];\n                        tagAttributes.push('style=\"' + this.serializeInlineStyle(inline[characterFormatProperty[this.keywordIndex]]) + '\"');\n                        blockStyle += this.createAttributesTag('a', tagAttributes);\n                    }\n                    else {\n                        this.fieldCheck = undefined;\n                    }\n                }\n                else if (inline[fieldTypeProperty[this.keywordIndex]] === 2) {\n                    if (!isNullOrUndefined(this.fieldCheck)) {\n                        this.fieldCheck = 2;\n                    }\n                    else {\n                        this.fieldCheck = 0;\n                    }\n                }\n                else {\n                    if (!isNullOrUndefined(this.fieldCheck) && this.fieldCheck !== 0) {\n                        blockStyle += this.endTag('a');\n                    }\n                    this.fieldCheck = 0;\n                }\n            }\n            else {\n                var text = isNullOrUndefined(inline[textProperty[this.keywordIndex]]) ? '' : inline[textProperty[this.keywordIndex]];\n                if (inline.hasOwnProperty(bookmarkTypeProperty[this.keywordIndex])) {\n                    switch (inline[bookmarkTypeProperty[this.keywordIndex]]) {\n                        case 0:\n                            blockStyle += '<a name=' + inline[nameProperty[this.keywordIndex]] + '>';\n                            break;\n                        case 1:\n                            blockStyle += '</a>';\n                            break;\n                    }\n                }\n                if (this.fieldCheck === 0) {\n                    blockStyle += this.serializeSpan(text, inline[characterFormatProperty[this.keywordIndex]]);\n                }\n                if (this.fieldCheck === 1) {\n                    var hyperLink = text.replace(/\"/g, '');\n                    blockStyle += ' href= \\\"' + hyperLink.replace('HYPERLINK', '').trim();\n                    blockStyle += '\\\"';\n                    blockStyle += '>';\n                }\n                if (this.fieldCheck === 2) {\n                    blockStyle += this.serializeSpan(text, inline[characterFormatProperty[this.keywordIndex]]);\n                }\n            }\n            i++;\n        }\n        return blockStyle;\n    };\n    HtmlExport.prototype.serializeContentInlines = function (inline, inlineStyle) {\n        inlineStyle += this.serializeInlines(inline, inlineStyle);\n        return inlineStyle;\n    };\n    // Serialize Span\n    HtmlExport.prototype.serializeSpan = function (spanText, characterFormat) {\n        var spanClass = '';\n        if (spanText.indexOf('\\v') !== -1) {\n            spanClass += '<br>';\n            return spanClass.toString();\n        }\n        else if (spanText.indexOf('\\f') !== -1) {\n            spanClass += '<br style = \"page-break-after:always;\"/>';\n            return spanClass.toString();\n        }\n        var tagAttributes = [];\n        this.serializeInlineStyle(characterFormat);\n        tagAttributes.push('style=\"' + this.serializeInlineStyle(characterFormat) + '\"');\n        spanClass += this.createAttributesTag('span', tagAttributes);\n        // Todo: Need to handle it.\n        // If the text starts with white-space, need to check whether it is a continuous space.\n        // if (characterFormat.ownerBase instanceof WInline) {\n        //     let inline: WInline = (characterFormat.ownerBase as WInline);\n        //     if (inline instanceof WSpan && !isNullOrUndefined(inline.text) && inline.text !== '' && (inline as WSpan).text[0] === ' ') {\n        //         Check previous inline until, it has valid rendered text.\n        //         do {\n        //             inline = WInline.getPreviousTextInline((inline as WSpan));\n        //         } while (inline instanceof WSpan && !isNullOrUndefined(inline.text));\n        //     } else {\n        //         inline = undefined;\n        //     }\n        //     If current white-space is a continuation of consecutive spaces, this will be set true.\n        //     ignoreFirstSpace = inline instanceof WSpan && !isNullOrUndefined(inline.text)\n        //         && (inline as WSpan).text[(inline as WSpan).text.length - 1] === ' ';\n        // }\n        var text = this.decodeHtmlNames(spanText.toString());\n        // if (text.length === 0) {\n        //     text = '&nbsp';\n        // }\n        spanClass += text;\n        spanClass += this.endTag('span');\n        return spanClass.toString();\n    };\n    /**\n     * @private\n     * @param {string} style - style name.\n     * @returns {string} - return heading tag.\n     */\n    HtmlExport.prototype.getStyleName = function (style) {\n        switch (style) {\n            case 'Heading 1':\n                return 'h1';\n            case 'Heading 2':\n                return 'h2';\n            case 'Heading 3':\n                return 'h3';\n            case 'Heading 4':\n                return 'h4';\n            case 'Heading 5':\n                return 'h5';\n            default:\n                return 'p';\n        }\n    };\n    //Serialize Image\n    HtmlExport.prototype.serializeImageContainer = function (image) {\n        var imageStyle = '';\n        var tagAttributes = [];\n        this.serializeInlineStyle(image[characterFormatProperty[this.keywordIndex]]);\n        var imageSource = '';\n        if (!isNullOrUndefined(image[imageStringProperty[this.keywordIndex]])) {\n            var base64ImageString = this.images.get(parseInt(image[imageStringProperty[this.keywordIndex]]));\n            imageSource = base64ImageString[HelperMethods.parseBoolValue(image[isMetaFileProperty[this.keywordIndex]]) ? 1 : 0];\n        }\n        var width = HelperMethods.convertPointToPixel(image[widthProperty[this.keywordIndex]]);\n        var height = HelperMethods.convertPointToPixel(image[heightProperty[this.keywordIndex]]);\n        tagAttributes.push('width=\"' + width.toString() + '\"');\n        tagAttributes.push('height=\"' + height.toString() + '\"');\n        tagAttributes.push('src=\"' + imageSource + '\"');\n        imageStyle += this.createAttributesTag('img', tagAttributes);\n        imageStyle += (this.endTag('img'));\n        return imageStyle.toString();\n    };\n    // Serialize Table Cell\n    HtmlExport.prototype.serializeCell = function (cell, row) {\n        var blockStyle = '';\n        var tagAttributes = [];\n        var cellHtml = '';\n        tagAttributes = [];\n        if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]])) {\n            //if (cell.cellFormat.shading.backgroundColor !== Color.FromArgb(0, 0, 0, 0)) {\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n                tagAttributes.push('bgcolor=\"' + HelperMethods.getColor(cell[cellFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) + '\"');\n            }\n            // }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]] > 1) {\n                tagAttributes.push('colspan=\"' + cell[cellFormatProperty[this.keywordIndex]][columnSpanProperty[this.keywordIndex]].toString() + '\"');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]] > 1) {\n                tagAttributes.push('rowspan=\"' + cell[cellFormatProperty[this.keywordIndex]][rowSpanProperty[this.keywordIndex]].toString() + '\"');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]] !== 0) {\n                var cellWidth = HelperMethods.convertPointToPixel(cell[cellFormatProperty[this.keywordIndex]][cellWidthProperty[this.keywordIndex]]);\n                tagAttributes.push('width=\"' + cellWidth.toString() + '\"');\n            }\n            var cellAlignment = isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]) ? 'top' :\n                this.convertVerticalAlignment(cell[cellFormatProperty[this.keywordIndex]][verticalAlignmentProperty[this.keywordIndex]]);\n            tagAttributes.push('valign=\"' + cellAlignment + '\"');\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]] !== 0) {\n                cellHtml += ('padding-left:' + cell[cellFormatProperty[this.keywordIndex]][leftMarginProperty[this.keywordIndex]].toString() + 'pt;');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]] !== 0) {\n                cellHtml += ('padding-right:' + cell[cellFormatProperty[this.keywordIndex]][rightMarginProperty[this.keywordIndex]].toString() + 'pt;');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]] !== 0) {\n                cellHtml += ('padding-top:' + cell[cellFormatProperty[this.keywordIndex]][topMarginProperty[this.keywordIndex]].toString() + 'pt;');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]]) && cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]] !== 0) {\n                cellHtml += ('padding-bottom:' + cell[cellFormatProperty[this.keywordIndex]][bottomMarginProperty[this.keywordIndex]].toString() + 'pt;');\n            }\n            if (!isNullOrUndefined(cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]])) {\n                cellHtml += this.serializeCellBordersStyle(cell[cellFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]], row);\n            }\n        }\n        if (cellHtml.length !== 0) {\n            tagAttributes.push('style=\"' + cellHtml + '\"');\n        }\n        blockStyle += (this.createAttributesTag('td', tagAttributes));\n        for (var k = 0; k < cell[blocksProperty[this.keywordIndex]].length; k++) {\n            var block = cell[blocksProperty[this.keywordIndex]][k];\n            if (block.hasOwnProperty(rowsProperty[this.keywordIndex])) {\n                blockStyle += this.serializeTable(block);\n            }\n            else {\n                blockStyle += this.serializeParagraph(block);\n            }\n        }\n        blockStyle += (this.endTag('td'));\n        return blockStyle;\n    };\n    HtmlExport.prototype.convertVerticalAlignment = function (cellVerticalAlignment) {\n        switch (cellVerticalAlignment) {\n            case 'Center':\n            case 1:\n                return 'middle';\n            case 'Bottom':\n            case 2:\n                return 'bottom';\n            default:\n                return 'top';\n        }\n    };\n    // Serialize Table\n    HtmlExport.prototype.serializeTable = function (table) {\n        var html = '';\n        html += this.createTableStartTag(table);\n        for (var j = 0; j < table[rowsProperty[this.keywordIndex]].length; j++) {\n            html += this.serializeRow(table[rowsProperty[this.keywordIndex]][j]);\n        }\n        html += this.createTableEndTag();\n        return html;\n    };\n    // Serialize Row\n    HtmlExport.prototype.serializeRow = function (row) {\n        var html = '';\n        html += this.createRowStartTag(row);\n        for (var k = 0; k < row[cellsProperty[this.keywordIndex]].length; k++) {\n            html += this.serializeCell(row[cellsProperty[this.keywordIndex]][k], row);\n        }\n        return html;\n    };\n    // Serialize Styles\n    HtmlExport.prototype.serializeParagraphStyle = function (paragraph, className, isList, keywordIndex) {\n        var paragraphClass = '';\n        var editor;\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = keywordIndex;\n        }\n        if (paragraph[inlinesProperty[this.keywordIndex]].length > 0) {\n            paragraphClass += this.serializeCharacterFormat(paragraph[characterFormatProperty[this.keywordIndex]]);\n        }\n        var isEmptyLine = false;\n        if (paragraph[inlinesProperty[this.keywordIndex]].length == 0) {\n            isEmptyLine = true;\n        }\n        paragraphClass += this.serializeCharacterFormat(paragraph[characterFormatProperty[this.keywordIndex]], isEmptyLine);\n        paragraphClass += this.serializeParagraphFormat(paragraph[paragraphFormatProperty[this.keywordIndex]], isList);\n        return paragraphClass;\n    };\n    HtmlExport.prototype.serializeInlineStyle = function (characterFormat) {\n        return this.serializeCharacterFormat(characterFormat);\n    };\n    HtmlExport.prototype.serializeTableBorderStyle = function (borders) {\n        var borderStyle = '';\n        var border = {};\n        //LeftBorder\n        border = borders[leftProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'left');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-left-style:none;');\n        }\n        //TopBorder\n        border = borders[topProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'top');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-top-style:none;');\n        }\n        //RightBorder\n        border = borders[rightProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'right');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-right-style:none;');\n        }\n        //BottomBorder\n        border = borders[bottomProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'bottom');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-bottom-style:none;');\n        }\n        return borderStyle;\n    };\n    HtmlExport.prototype.serializeCellBordersStyle = function (borders, row) {\n        var borderStyle = '';\n        //borderStyle = 'border:solid 1px;';\n        // if (borders.left.color) {\n        //     borderStyle += ('border-left-color:' + HelperMethods.getColor(borders.left.color));\n        //     borderStyle += ';';\n        // }\n        // borderStyle += this.serializeBorderStyle(borders.left, 'left');\n        // if (!isNullOrUndefined(borders.right.color)) {\n        //     borderStyle += ('border-right-color:' + HelperMethods.getColor(borders.right.color));\n        //     borderStyle += ';';\n        // }\n        // borderStyle += this.serializeBorderStyle(borders.right, 'right');\n        // if (!isNullOrUndefined(borders.top.color)) {\n        //     borderStyle += ('border-top-color:' + HelperMethods.getColor(borders.top.color));\n        //     borderStyle += ';';\n        // }\n        // borderStyle += this.serializeBorderStyle(borders.top, 'top');\n        // if (!isNullOrUndefined(borders.bottom.color)) {\n        //     borderStyle += ('border-bottom-color:' + HelperMethods.getColor(borders.bottom.color));\n        //     borderStyle += ';';\n        // }\n        // borderStyle += this.serializeBorderStyle(borders.bottom, 'bottom');\n        var border = {};\n        //LeftBorder\n        border = borders[leftProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'left');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-left-style:none;');\n        }\n        else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]])) {\n            border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][leftProperty[this.keywordIndex]];\n            if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n                border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n                border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n                borderStyle += this.serializeBorderStyle(border, 'left');\n            }\n        }\n        //TopBorder\n        border = borders[topProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'top');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-top-style:none;');\n        }\n        else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][topProperty[this.keywordIndex]])) {\n            border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][topProperty[this.keywordIndex]];\n            if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n                border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n                border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n                borderStyle += this.serializeBorderStyle(border, 'top');\n            }\n        }\n        //RightBorder\n        border = borders[rightProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'right');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-right-style:none;');\n        }\n        else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]])) {\n            border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][rightProperty[this.keywordIndex]];\n            if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n                border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n                border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n                borderStyle += this.serializeBorderStyle(border, 'right');\n            }\n        }\n        //BottomBorder\n        border = borders[bottomProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n            border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n            border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n            borderStyle += this.serializeBorderStyle(border, 'bottom');\n        }\n        else if (!isNullOrUndefined(border) && HelperMethods.parseBoolValue(border[hasNoneStyleProperty[this.keywordIndex]])) {\n            borderStyle += ('border-bottom-style:none;');\n        }\n        else if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][bottomProperty[this.keywordIndex]])) {\n            border = row[rowFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]][bottomProperty[this.keywordIndex]];\n            if (!isNullOrUndefined(border) && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 1 : 'None') && border[lineStyleProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 26 : 'Cleared')) {\n                border[colorProperty[this.keywordIndex]] = isNullOrUndefined(border[colorProperty[this.keywordIndex]]) ? \"#000000\" : border[colorProperty[this.keywordIndex]];\n                border[lineWidthProperty[this.keywordIndex]] = isNullOrUndefined(border[lineWidthProperty[this.keywordIndex]]) ? 0.5 : border[lineWidthProperty[this.keywordIndex]];\n                borderStyle += this.serializeBorderStyle(border, 'bottom');\n            }\n        }\n        return borderStyle;\n    };\n    HtmlExport.prototype.serializeBorderStyle = function (border, borderPosition) {\n        var borderStyle = '';\n        borderStyle += ('border-' + borderPosition + '-style:' + this.convertBorderLineStyle(border[lineStyleProperty[this.keywordIndex]]));\n        borderStyle += ';';\n        if (border[lineWidthProperty[this.keywordIndex]] > 0) {\n            borderStyle += ('border-' + borderPosition + '-width:' + border[lineWidthProperty[this.keywordIndex]].toString() + 'pt;');\n        }\n        //if (border.color !== Color.FromArgb(0, 0, 0, 0))\n        if (!isNullOrUndefined(border[colorProperty[this.keywordIndex]])) {\n            borderStyle += ('border-' + borderPosition + '-color:' + HelperMethods.getColor(border[colorProperty[this.keywordIndex]]) + ';');\n        }\n        return borderStyle;\n    };\n    HtmlExport.prototype.convertBorderLineStyle = function (lineStyle) {\n        switch (lineStyle) {\n            case 'Single':\n            case 0:\n                return 'solid';\n            case 'None':\n            case 1:\n                return 'none';\n            case 'Dot':\n            case 2:\n                return 'dotted';\n            case 'DashSmallGap':\n            case 'DashLargeGap':\n            case 'DashDot':\n            case 'DashDotDot':\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                return 'dashed';\n            case 'Double':\n            case 'Triple':\n            case 'ThinThickSmallGap':\n            case 'ThickThinSmallGap':\n            case 'ThinThickThinSmallGap':\n            case 'ThinThickMediumGap':\n            case 'ThickThinMediumGap':\n            case 'ThinThickThinMediumGap':\n            case 'ThinThickLargeGap':\n            case 'ThickThinLargeGap':\n            case 'ThinThickThinLargeGap':\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n                return 'double';\n            case 'SingleWavy':\n            case 18:\n                return 'solid';\n            case 'DoubleWavy':\n            case 19:\n                return 'double';\n            case 'DashDotStroked':\n            case 20:\n                return 'solid';\n            case 'Emboss3D':\n            case 21:\n                return 'ridge';\n            case 'Engrave3D':\n            case 22:\n                return 'groove';\n            case 'Outset':\n            case 23:\n                return 'outset';\n            case 'Inset':\n            case 24:\n                return 'inset';\n            default:\n                return 'solid';\n        }\n    };\n    // Serialize Format\n    HtmlExport.prototype.serializeCharacterFormat = function (characterFormat, isEmptyLine) {\n        if (!isNullOrUndefined(characterFormat[inlineFormatProperty[this.keywordIndex]])) {\n            return this.serializeCharacterFormat(characterFormat[inlineFormatProperty[this.keywordIndex]], isEmptyLine);\n        }\n        var propertyValue;\n        var charStyle = '';\n        charStyle += 'font-weight';\n        charStyle += ':';\n        charStyle += HelperMethods.parseBoolValue(characterFormat[boldProperty[this.keywordIndex]]) ? 'bold' : 'normal';\n        charStyle += ';';\n        charStyle += 'font-style';\n        charStyle += ':';\n        if (HelperMethods.parseBoolValue(characterFormat[italicProperty[this.keywordIndex]])) {\n            charStyle += 'italic';\n        }\n        else {\n            charStyle += 'normal';\n        }\n        charStyle += ';';\n        charStyle += this.serializeTextDecoration(characterFormat);\n        //Text Baseline Alignment\n        if (characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Superscript') || characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'Subscript')) {\n            charStyle += 'vertical-align';\n            charStyle += ':';\n            charStyle += characterFormat[baselineAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'Superscript') ? 'super' : 'sub';\n            charStyle += ';';\n        }\n        //Text Foreground and Background Color\n        if (!isNullOrUndefined(characterFormat[highlightColorProperty[this.keywordIndex]]) && characterFormat[highlightColorProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'NoColor') && !isEmptyLine) {\n            charStyle += 'background-color';\n            charStyle += ':';\n            charStyle += this.keywordIndex == 1 ? this.getHighlightColorCode(characterFormat[highlightColorProperty[this.keywordIndex]]) : HelperMethods.getHighlightColorCode(characterFormat.highlightColor.toString());\n            charStyle += ';';\n        }\n        //Font Color\n        propertyValue = characterFormat[fontColorProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            charStyle += 'color';\n            charStyle += ':';\n            charStyle += HelperMethods.getColor(propertyValue);\n            charStyle += ';';\n        }\n        if (!isNullOrUndefined(characterFormat[allCapsProperty[this.keywordIndex]]) && HelperMethods.parseBoolValue(characterFormat[allCapsProperty[this.keywordIndex]])) {\n            charStyle += 'text-transform';\n            charStyle += ':';\n            charStyle += 'uppercase';\n            charStyle += ';';\n        }\n        propertyValue = characterFormat[fontSizeProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            charStyle += 'font-size';\n            charStyle += ':';\n            charStyle += propertyValue.toString();\n            charStyle += 'pt';\n            charStyle += ';';\n        }\n        propertyValue = characterFormat[fontFamilyProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            charStyle += 'font-family';\n            charStyle += ':';\n            charStyle += propertyValue.toString();\n            charStyle += ';';\n        }\n        propertyValue = characterFormat[characterSpacingProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            charStyle += 'letter-spacing';\n            charStyle += ':';\n            charStyle += propertyValue.toString();\n            charStyle += 'pt';\n            charStyle += ';';\n        }\n        propertyValue = characterFormat[scalingProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            charStyle += 'transform:scaleX(';\n            charStyle += (propertyValue / 100).toString();\n            charStyle += ')';\n            charStyle += ';';\n        }\n        return charStyle.toString();\n    };\n    HtmlExport.prototype.serializeTextDecoration = function (characterFormat) {\n        var charStyle = 'text-decoration:';\n        var value = '';\n        // Double strike through will become Single strike through while saving HTML using MS Word.\n        if (characterFormat[strikethroughProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 1 : 'SingleStrike') || characterFormat[strikethroughProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 2 : 'DoubleStrike')) {\n            value += 'line-through ';\n        }\n        if (!isNullOrUndefined(characterFormat[underlineProperty[this.keywordIndex]]) && characterFormat[underlineProperty[this.keywordIndex]] !== (this.keywordIndex == 1 ? 0 : 'None')) {\n            value += 'underline';\n        }\n        if (value.length > 1) {\n            value = charStyle + value + ';';\n        }\n        return value;\n    };\n    /**\n     * @private\n     */\n    HtmlExport.prototype.serializeParagraphFormat = function (paragraphFormat, isList, keywordIndex) {\n        if (isNullOrUndefined(this.keywordIndex)) {\n            this.keywordIndex = keywordIndex;\n        }\n        if (!isNullOrUndefined(paragraphFormat[inlineFormatProperty[this.keywordIndex]])) {\n            return this.serializeParagraphFormat(paragraphFormat[inlineFormatProperty[this.keywordIndex]], isList);\n        }\n        var propertyValue;\n        var paraStyle = '';\n        propertyValue = this.getTextAlignment(paragraphFormat[textAlignmentProperty[this.keywordIndex]]);\n        if (!isNullOrUndefined(propertyValue)) {\n            paraStyle += 'text-align:' + propertyValue.toLowerCase() + ';';\n        }\n        propertyValue = paragraphFormat[beforeSpacingProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            paraStyle += 'margin-top:' + propertyValue.toString() + 'pt; ';\n        }\n        propertyValue = paragraphFormat[rightIndentProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            paraStyle += 'margin-right:' + propertyValue.toString() + 'pt; ';\n        }\n        propertyValue = paragraphFormat[afterSpacingProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            paraStyle += 'margin-bottom:' + propertyValue.toString() + 'pt; ';\n        }\n        propertyValue = paragraphFormat[leftIndentProperty[this.keywordIndex]];\n        if (isList) {\n            // if (isNullOrUndefined(propertyValue)) {\n            //     propertyValue = -36;\n            // } else {\n            //     propertyValue -= 36;\n            // }\n            propertyValue = 0;\n        }\n        if (!isNullOrUndefined(propertyValue)) {\n            paraStyle += 'margin-left:' + propertyValue.toString() + 'pt; ';\n        }\n        propertyValue = paragraphFormat[firstLineIndentProperty[this.keywordIndex]];\n        if (isList) {\n            // if (isNullOrUndefined(propertyValue)) {\n            //     propertyValue = 18;\n            // } else {\n            //     propertyValue += 18;\n            // }\n            propertyValue = 0;\n        }\n        if (!isNullOrUndefined(propertyValue) && propertyValue !== 0) {\n            paraStyle += 'text-indent:' + propertyValue.toString() + 'pt;';\n        }\n        propertyValue = paragraphFormat[lineSpacingProperty[this.keywordIndex]];\n        if (!isNullOrUndefined(propertyValue)) {\n            if (paragraphFormat[lineSpacingTypeProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Multiple')) {\n                propertyValue = Math.round(propertyValue * 10) / 10;\n            }\n            else {\n                propertyValue = propertyValue.toString() + 'pt;';\n            }\n            paraStyle += 'line-height:' + propertyValue;\n        }\n        return paraStyle.toString();\n    };\n    HtmlExport.prototype.createAttributesTag = function (tagValue, localProperties) {\n        var sb = '';\n        sb += '<';\n        sb += tagValue;\n        for (var i = 0; i < localProperties.length; i++) {\n            sb += ' ';\n            sb += localProperties[i];\n        }\n        if (tagValue !== 'a') {\n            sb += '>';\n        }\n        return sb;\n    };\n    HtmlExport.prototype.createTag = function (tagValue) {\n        var s = '';\n        s += '<';\n        s += tagValue;\n        s += '>';\n        return s;\n    };\n    HtmlExport.prototype.endTag = function (tagValue) {\n        var sb = '';\n        sb += '<';\n        sb += '/';\n        sb += tagValue;\n        sb += '>';\n        return sb;\n    };\n    HtmlExport.prototype.createTableStartTag = function (table) {\n        var blockStyle = '';\n        var tableStyle = '';\n        var tagAttributes = [];\n        //tagAttributes.push('border=\"' + '1\"');\n        if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]])) {\n            //if (table.tableFormat.shading.backgroundColor !== Color.FromArgb(0, 0, 0, 0)) {\n            if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]]) && !isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]] !== 'empty') {\n                tagAttributes.push('bgcolor=\"' + HelperMethods.getColor(table[tableFormatProperty[this.keywordIndex]][shadingProperty[this.keywordIndex]][backgroundColorProperty[this.keywordIndex]]) + '\"');\n            }\n            //}\n            if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]] > 0) {\n                tagAttributes.push('cellspacing=\"' + (((table[tableFormatProperty[this.keywordIndex]][cellSpacingProperty[this.keywordIndex]] * 72) / 96) * 2).toString() + '\"');\n            }\n            else {\n                tableStyle += ('border-collapse:collapse;');\n            }\n            tagAttributes.push('cellpadding=\"' + '0\"');\n            if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]]) && table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]] !== 0 &&\n                table[tableFormatProperty[this.keywordIndex]][tableAlignmentProperty[this.keywordIndex]] === (this.keywordIndex == 1 ? 0 : 'Left')) {\n                tableStyle += 'margin-left:' + (table[tableFormatProperty[this.keywordIndex]][leftIndentProperty[this.keywordIndex]].toString() + 'pt;');\n            }\n            if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]])) {\n                tableStyle += this.serializeTableWidth(table[tableFormatProperty[this.keywordIndex]]);\n            }\n            if (!isNullOrUndefined(table[tableFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]])) {\n                tableStyle += this.serializeTableBorderStyle(table[tableFormatProperty[this.keywordIndex]][bordersProperty[this.keywordIndex]]);\n            }\n        }\n        if (tableStyle.length !== 0) {\n            tagAttributes.push('style=\"', tableStyle.toString() + '\"');\n        }\n        return blockStyle += (this.createAttributesTag('table', tagAttributes));\n    };\n    HtmlExport.prototype.serializeTableWidth = function (tableFormat) {\n        var width = '';\n        switch (tableFormat[preferredWidthTypeProperty[this.keywordIndex]]) {\n            case 'Percent':\n            case 1:\n                width += 'width: ' + tableFormat[preferredWidthProperty[this.keywordIndex]].toString() + '%;';\n                break;\n            case 'Point':\n            case 2:\n                width += 'width: ' + tableFormat[preferredWidthProperty[this.keywordIndex]].toString() + 'pt;';\n                break;\n            case 'Auto':\n            case 0:\n                width += 'width: auto;';\n                break;\n        }\n        return width;\n    };\n    HtmlExport.prototype.getHighlightColorCode = function (highlightColor) {\n        var color = '#ffffff';\n        switch (highlightColor) {\n            case 1:\n                color = '#ffff00';\n                break;\n            case 2:\n                color = '#00ff00';\n                break;\n            case 3:\n                color = '#00ffff';\n                break;\n            case 4:\n                color = '#ff00ff';\n                break;\n            case 5:\n                color = '#0000ff';\n                break;\n            case 6:\n                color = '#ff0000';\n                break;\n            case 7:\n                color = '#000080';\n                break;\n            case 8:\n                color = '#008080';\n                break;\n            case 9:\n                color = '#008000';\n                break;\n            case 10:\n                color = '#800080';\n                break;\n            case 11:\n                color = '#800000';\n                break;\n            case 12:\n                color = '#808000';\n                break;\n            case 13:\n                color = '#808080';\n                break;\n            case 14:\n                color = '#c0c0c0';\n                break;\n            case 15:\n                color = '#000000';\n                break;\n        }\n        return color;\n    };\n    HtmlExport.prototype.getTextAlignment = function (textAlignment) {\n        switch (textAlignment) {\n            case 1:\n                return 'Center';\n            case 2:\n                return 'Right';\n            case 3:\n                return 'Justify';\n            default:\n                return 'Left';\n        }\n    };\n    HtmlExport.prototype.createTableEndTag = function () {\n        var blockStyle = '';\n        blockStyle += (this.endTag('table'));\n        return blockStyle;\n    };\n    HtmlExport.prototype.createRowStartTag = function (row) {\n        var blockStyle = '';\n        var tagAttributes = [];\n        if (HelperMethods.parseBoolValue(row[rowFormatProperty[this.keywordIndex]][isHeaderProperty[this.keywordIndex]])) {\n            blockStyle += (this.createTag('thead'));\n        }\n        if (!isNullOrUndefined(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]]) && row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]] > 0) {\n            var height = HelperMethods.convertPointToPixel(row[rowFormatProperty[this.keywordIndex]][heightProperty[this.keywordIndex]]);\n            tagAttributes.push('height=\"' + height + '\"');\n        }\n        return blockStyle + this.createAttributesTag('tr', tagAttributes);\n    };\n    HtmlExport.prototype.createRowEndTag = function (row) {\n        var blockStyle = '';\n        blockStyle += (this.endTag('tr'));\n        if (HelperMethods.parseBoolValue(row[rowFormatProperty[this.keywordIndex]][isHeaderProperty[this.keywordIndex]])) {\n            blockStyle += (this.endTag('thead'));\n        }\n        return blockStyle;\n    };\n    HtmlExport.prototype.decodeHtmlNames = function (text) {\n        if (text === '\\t') {\n            return '&emsp;';\n        }\n        text = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        var splittedText = text.split(' ');\n        var htmlText = '';\n        if (splittedText.length > 0) {\n            htmlText = splittedText[0];\n            for (var i = 0; i < splittedText.length - 1; i++) {\n                htmlText += ' ' + splittedText[i + 1];\n            }\n        }\n        return htmlText;\n    };\n    return HtmlExport;\n}());\nexport { HtmlExport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}