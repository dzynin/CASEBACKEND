{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Pointable from \"react-pointable\";\nimport _ from \"lodash/fp\";\nimport { PDFViewer, PDFLinkService, getGlobalEventBus } from \"pdfjs-dist/web/pdf_viewer\";\nimport \"pdfjs-dist/web/pdf_viewer.css\";\nimport \"../style/pdf_viewer.css\";\nimport \"../style/PdfHighlighter.css\";\nimport getBoundingRect from \"../lib/get-bounding-rect\";\nimport getClientRects from \"../lib/get-client-rects\";\nimport getAreaAsPng from \"../lib/get-area-as-png\";\nimport { getPageFromRange, getPageFromElement, findOrCreateContainerLayer } from \"../lib/pdfjs-dom\";\nimport TipContainer from \"./TipContainer\";\nimport MouseSelection from \"./MouseSelection\";\nimport { scaledToViewport, viewportToScaled } from \"../lib/coordinates\";\nconst EMPTY_ID = \"empty-id\";\n\nclass PdfHighlighter extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      ghostHighlight: null,\n      isCollapsed: true,\n      range: null,\n      scrolledToHighlightId: EMPTY_ID,\n      isAreaSelectionInProgress: false,\n      tip: null\n    });\n\n    _defineProperty(this, \"viewer\", void 0);\n\n    _defineProperty(this, \"linkService\", void 0);\n\n    _defineProperty(this, \"containerNode\", null);\n\n    _defineProperty(this, \"debouncedAfterSelection\", void 0);\n\n    _defineProperty(this, \"hideTipAndSelection\", () => {\n      const tipNode = findOrCreateContainerLayer(this.viewer.viewer, \"PdfHighlighter__tip-layer\");\n      ReactDom.unmountComponentAtNode(tipNode);\n      this.setState({\n        ghostHighlight: null,\n        tip: null\n      }, () => this.renderHighlights());\n    });\n\n    _defineProperty(this, \"onTextLayerRendered\", () => {\n      this.renderHighlights();\n    });\n\n    _defineProperty(this, \"scrollTo\", highlight => {\n      const {\n        pageNumber,\n        boundingRect,\n        usePdfCoordinates\n      } = highlight.position;\n      this.viewer.container.removeEventListener(\"scroll\", this.onScroll);\n      const pageViewport = this.viewer.getPageView(pageNumber - 1).viewport;\n      const scrollMargin = 10;\n      this.viewer.scrollPageIntoView({\n        pageNumber,\n        destArray: [null, {\n          name: \"XYZ\"\n        }, ...pageViewport.convertToPdfPoint(0, scaledToViewport(boundingRect, pageViewport, usePdfCoordinates).top - scrollMargin), 0]\n      });\n      this.setState({\n        scrolledToHighlightId: highlight.id\n      }, () => this.renderHighlights()); // wait for scrolling to finish\n\n      setTimeout(() => {\n        this.viewer.container.addEventListener(\"scroll\", this.onScroll);\n      }, 100);\n    });\n\n    _defineProperty(this, \"onDocumentReady\", () => {\n      const {\n        scrollRef\n      } = this.props;\n      this.viewer.currentScaleValue = \"auto\";\n      scrollRef(this.scrollTo);\n    });\n\n    _defineProperty(this, \"onSelectionChange\", () => {\n      const selection = window.getSelection();\n\n      if (selection.isCollapsed) {\n        this.setState({\n          isCollapsed: true\n        });\n        return;\n      }\n\n      const range = selection.getRangeAt(0);\n\n      if (!range) {\n        return;\n      }\n\n      this.setState({\n        isCollapsed: false,\n        range\n      });\n      this.debouncedAfterSelection();\n    });\n\n    _defineProperty(this, \"onScroll\", () => {\n      const {\n        onScrollChange\n      } = this.props;\n      onScrollChange();\n      this.setState({\n        scrolledToHighlightId: EMPTY_ID\n      }, () => this.renderHighlights());\n      this.viewer.container.removeEventListener(\"scroll\", this.onScroll);\n    });\n\n    _defineProperty(this, \"onMouseDown\", event => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (event.target.closest(\".PdfHighlighter__tip-container\")) {\n        return;\n      }\n\n      this.hideTipAndSelection();\n    });\n\n    _defineProperty(this, \"handleKeyDown\", event => {\n      if (event.code === \"Escape\") {\n        this.hideTipAndSelection();\n      }\n    });\n\n    _defineProperty(this, \"afterSelection\", () => {\n      const {\n        onSelectionFinished\n      } = this.props;\n      const {\n        isCollapsed,\n        range\n      } = this.state;\n\n      if (!range || isCollapsed) {\n        return;\n      }\n\n      const page = getPageFromRange(range);\n\n      if (!page) {\n        return;\n      }\n\n      const rects = getClientRects(range, page.node);\n\n      if (rects.length === 0) {\n        return;\n      }\n\n      const boundingRect = getBoundingRect(rects);\n      const viewportPosition = {\n        boundingRect,\n        rects,\n        pageNumber: page.number\n      };\n      const content = {\n        text: range.toString()\n      };\n      const scaledPosition = this.viewportPositionToScaled(viewportPosition);\n      this.renderTipAtPosition(viewportPosition, onSelectionFinished(scaledPosition, content, () => this.hideTipAndSelection(), () => this.setState({\n        ghostHighlight: {\n          position: scaledPosition\n        }\n      }, () => this.renderHighlights())));\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.highlights !== this.props.highlights) {\n      this.renderHighlights(this.props);\n    }\n  }\n\n  componentDidMount() {\n    const {\n      pdfDocument\n    } = this.props;\n    this.debouncedAfterSelection = _.debounce(500, this.afterSelection);\n    this.linkService = new PDFLinkService();\n    this.viewer = new PDFViewer({\n      container: this.containerNode,\n      enhanceTextSelection: true,\n      removePageBorders: true,\n      linkService: this.linkService\n    });\n    this.viewer.setDocument(pdfDocument);\n    this.linkService.setDocument(pdfDocument);\n    this.linkService.setViewer(this.viewer); // debug\n\n    window.PdfViewer = this;\n    document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"pagesinit\", () => {\n      this.onDocumentReady();\n    });\n    document.addEventListener(\"textlayerrendered\", this.onTextLayerRendered);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"textlayerrendered\", this.onTextLayerRendered);\n  }\n\n  findOrCreateHighlightLayer(page) {\n    const textLayer = this.viewer.getPageView(page - 1).textLayer;\n\n    if (!textLayer) {\n      return null;\n    }\n\n    return findOrCreateContainerLayer(textLayer.textLayerDiv, \"PdfHighlighter__highlight-layer\");\n  }\n\n  groupHighlightsByPage(highlights) {\n    const {\n      ghostHighlight\n    } = this.state;\n    return [...highlights, ghostHighlight].filter(Boolean).reduce((res, highlight) => {\n      const {\n        pageNumber\n      } = highlight.position;\n      res[pageNumber] = res[pageNumber] || [];\n      res[pageNumber].push(highlight);\n      return res;\n    }, {});\n  }\n\n  showTip(highlight, content) {\n    const {\n      isCollapsed,\n      ghostHighlight,\n      isAreaSelectionInProgress\n    } = this.state;\n    const highlightInProgress = !isCollapsed || ghostHighlight;\n\n    if (highlightInProgress || isAreaSelectionInProgress) {\n      return;\n    }\n\n    this.renderTipAtPosition(highlight.position, content);\n  }\n\n  scaledPositionToViewport({\n    pageNumber,\n    boundingRect,\n    rects,\n    usePdfCoordinates\n  }) {\n    const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n    return {\n      boundingRect: scaledToViewport(boundingRect, viewport, usePdfCoordinates),\n      rects: (rects || []).map(rect => scaledToViewport(rect, viewport, usePdfCoordinates)),\n      pageNumber\n    };\n  }\n\n  viewportPositionToScaled({\n    pageNumber,\n    boundingRect,\n    rects\n  }) {\n    const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n    return {\n      boundingRect: viewportToScaled(boundingRect, viewport),\n      rects: (rects || []).map(rect => viewportToScaled(rect, viewport)),\n      pageNumber\n    };\n  }\n\n  screenshot(position, pageNumber) {\n    const canvas = this.viewer.getPageView(pageNumber - 1).canvas;\n    return getAreaAsPng(canvas, position);\n  }\n\n  renderHighlights(nextProps) {\n    const {\n      highlightTransform,\n      highlights\n    } = nextProps || this.props;\n    const {\n      pdfDocument\n    } = this.props;\n    const {\n      tip,\n      scrolledToHighlightId\n    } = this.state;\n    const highlightsByPage = this.groupHighlightsByPage(highlights);\n\n    for (let pageNumber = 1; pageNumber <= pdfDocument.numPages; pageNumber++) {\n      const highlightLayer = this.findOrCreateHighlightLayer(pageNumber);\n\n      if (highlightLayer) {\n        ReactDom.render(React.createElement(\"div\", null, (highlightsByPage[String(pageNumber)] || []).map((highlight, index) => {\n          const {\n            position,\n            ...rest\n          } = highlight;\n          const viewportHighlight = {\n            position: this.scaledPositionToViewport(position),\n            ...rest\n          };\n\n          if (tip && tip.highlight.id === String(highlight.id)) {\n            this.showTip(tip.highlight, tip.callback(viewportHighlight));\n          }\n\n          const isScrolledTo = Boolean(scrolledToHighlightId === highlight.id);\n          return highlightTransform(viewportHighlight, index, (highlight, callback) => {\n            this.setState({\n              tip: {\n                highlight,\n                callback\n              }\n            });\n            this.showTip(highlight, callback(highlight));\n          }, this.hideTipAndSelection, rect => {\n            const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n            return viewportToScaled(rect, viewport);\n          }, boundingRect => this.screenshot(boundingRect, pageNumber), isScrolledTo);\n        })), highlightLayer);\n      }\n    }\n  }\n\n  renderTipAtPosition(position, inner) {\n    const {\n      boundingRect,\n      pageNumber\n    } = position;\n    const page = {\n      node: this.viewer.getPageView(pageNumber - 1).div\n    };\n    const pageBoundingRect = page.node.getBoundingClientRect();\n    const tipNode = findOrCreateContainerLayer(this.viewer.viewer, \"PdfHighlighter__tip-layer\");\n    ReactDom.render(React.createElement(TipContainer, {\n      scrollTop: this.viewer.container.scrollTop,\n      pageBoundingRect: pageBoundingRect,\n      style: {\n        left: page.node.offsetLeft + boundingRect.left + boundingRect.width / 2,\n        top: boundingRect.top + page.node.offsetTop,\n        bottom: boundingRect.top + page.node.offsetTop + boundingRect.height\n      },\n      children: inner\n    }), tipNode);\n  }\n\n  toggleTextSelection(flag) {\n    this.viewer.viewer.classList.toggle(\"PdfHighlighter--disable-selection\", flag);\n  }\n\n  render() {\n    const {\n      onSelectionFinished,\n      enableAreaSelection\n    } = this.props;\n    return React.createElement(Pointable, {\n      onPointerDown: this.onMouseDown\n    }, React.createElement(\"div\", {\n      ref: node => this.containerNode = node,\n      className: \"PdfHighlighter\",\n      onContextMenu: e => e.preventDefault()\n    }, React.createElement(\"div\", {\n      className: \"pdfViewer\"\n    }), typeof enableAreaSelection === \"function\" ? React.createElement(MouseSelection, {\n      onDragStart: () => this.toggleTextSelection(true),\n      onDragEnd: () => this.toggleTextSelection(false),\n      onChange: isVisible => this.setState({\n        isAreaSelectionInProgress: isVisible\n      }),\n      shouldStart: event => enableAreaSelection(event) && event.target instanceof HTMLElement && Boolean(event.target.closest(\".page\")),\n      onSelection: (startTarget, boundingRect, resetSelection) => {\n        const page = getPageFromElement(startTarget);\n\n        if (!page) {\n          return;\n        }\n\n        const pageBoundingRect = { ...boundingRect,\n          top: boundingRect.top - page.node.offsetTop,\n          left: boundingRect.left - page.node.offsetLeft\n        };\n        const viewportPosition = {\n          boundingRect: pageBoundingRect,\n          rects: [],\n          pageNumber: page.number\n        };\n        const scaledPosition = this.viewportPositionToScaled(viewportPosition);\n        const image = this.screenshot(pageBoundingRect, page.number);\n        this.renderTipAtPosition(viewportPosition, onSelectionFinished(scaledPosition, {\n          image\n        }, () => this.hideTipAndSelection(), () => this.setState({\n          ghostHighlight: {\n            position: scaledPosition,\n            content: {\n              image\n            }\n          }\n        }, () => {\n          resetSelection();\n          this.renderHighlights();\n        })));\n      }\n    }) : null));\n  }\n\n}\n\nexport default PdfHighlighter;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONT/gptversion/CASEFRONT/node_modules/react-pdf-highlighter/build/components/PdfHighlighter.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","PureComponent","ReactDom","Pointable","_","PDFViewer","PDFLinkService","getGlobalEventBus","getBoundingRect","getClientRects","getAreaAsPng","getPageFromRange","getPageFromElement","findOrCreateContainerLayer","TipContainer","MouseSelection","scaledToViewport","viewportToScaled","EMPTY_ID","PdfHighlighter","constructor","args","ghostHighlight","isCollapsed","range","scrolledToHighlightId","isAreaSelectionInProgress","tip","tipNode","viewer","unmountComponentAtNode","setState","renderHighlights","highlight","pageNumber","boundingRect","usePdfCoordinates","position","container","removeEventListener","onScroll","pageViewport","getPageView","viewport","scrollMargin","scrollPageIntoView","destArray","name","convertToPdfPoint","top","id","setTimeout","addEventListener","scrollRef","props","currentScaleValue","scrollTo","selection","window","getSelection","getRangeAt","debouncedAfterSelection","onScrollChange","event","target","HTMLElement","closest","hideTipAndSelection","code","onSelectionFinished","state","page","rects","node","length","viewportPosition","number","content","text","toString","scaledPosition","viewportPositionToScaled","renderTipAtPosition","componentDidUpdate","prevProps","highlights","componentDidMount","pdfDocument","debounce","afterSelection","linkService","containerNode","enhanceTextSelection","removePageBorders","setDocument","setViewer","PdfViewer","document","onSelectionChange","handleKeyDown","onDocumentReady","onTextLayerRendered","componentWillUnmount","findOrCreateHighlightLayer","textLayer","textLayerDiv","groupHighlightsByPage","filter","Boolean","reduce","res","push","showTip","highlightInProgress","scaledPositionToViewport","map","rect","screenshot","canvas","nextProps","highlightTransform","highlightsByPage","numPages","highlightLayer","render","createElement","String","index","rest","viewportHighlight","callback","isScrolledTo","inner","div","pageBoundingRect","getBoundingClientRect","scrollTop","style","left","offsetLeft","width","offsetTop","bottom","height","children","toggleTextSelection","flag","classList","toggle","enableAreaSelection","onPointerDown","onMouseDown","ref","className","onContextMenu","e","preventDefault","onDragStart","onDragEnd","onChange","isVisible","shouldStart","onSelection","startTarget","resetSelection","image"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Pointable from \"react-pointable\";\nimport _ from \"lodash/fp\";\nimport { PDFViewer, PDFLinkService, getGlobalEventBus } from \"pdfjs-dist/web/pdf_viewer\";\nimport \"pdfjs-dist/web/pdf_viewer.css\";\nimport \"../style/pdf_viewer.css\";\nimport \"../style/PdfHighlighter.css\";\nimport getBoundingRect from \"../lib/get-bounding-rect\";\nimport getClientRects from \"../lib/get-client-rects\";\nimport getAreaAsPng from \"../lib/get-area-as-png\";\nimport { getPageFromRange, getPageFromElement, findOrCreateContainerLayer } from \"../lib/pdfjs-dom\";\nimport TipContainer from \"./TipContainer\";\nimport MouseSelection from \"./MouseSelection\";\nimport { scaledToViewport, viewportToScaled } from \"../lib/coordinates\";\nconst EMPTY_ID = \"empty-id\";\n\nclass PdfHighlighter extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      ghostHighlight: null,\n      isCollapsed: true,\n      range: null,\n      scrolledToHighlightId: EMPTY_ID,\n      isAreaSelectionInProgress: false,\n      tip: null\n    });\n\n    _defineProperty(this, \"viewer\", void 0);\n\n    _defineProperty(this, \"linkService\", void 0);\n\n    _defineProperty(this, \"containerNode\", null);\n\n    _defineProperty(this, \"debouncedAfterSelection\", void 0);\n\n    _defineProperty(this, \"hideTipAndSelection\", () => {\n      const tipNode = findOrCreateContainerLayer(this.viewer.viewer, \"PdfHighlighter__tip-layer\");\n      ReactDom.unmountComponentAtNode(tipNode);\n      this.setState({\n        ghostHighlight: null,\n        tip: null\n      }, () => this.renderHighlights());\n    });\n\n    _defineProperty(this, \"onTextLayerRendered\", () => {\n      this.renderHighlights();\n    });\n\n    _defineProperty(this, \"scrollTo\", highlight => {\n      const {\n        pageNumber,\n        boundingRect,\n        usePdfCoordinates\n      } = highlight.position;\n      this.viewer.container.removeEventListener(\"scroll\", this.onScroll);\n      const pageViewport = this.viewer.getPageView(pageNumber - 1).viewport;\n      const scrollMargin = 10;\n      this.viewer.scrollPageIntoView({\n        pageNumber,\n        destArray: [null, {\n          name: \"XYZ\"\n        }, ...pageViewport.convertToPdfPoint(0, scaledToViewport(boundingRect, pageViewport, usePdfCoordinates).top - scrollMargin), 0]\n      });\n      this.setState({\n        scrolledToHighlightId: highlight.id\n      }, () => this.renderHighlights()); // wait for scrolling to finish\n\n      setTimeout(() => {\n        this.viewer.container.addEventListener(\"scroll\", this.onScroll);\n      }, 100);\n    });\n\n    _defineProperty(this, \"onDocumentReady\", () => {\n      const {\n        scrollRef\n      } = this.props;\n      this.viewer.currentScaleValue = \"auto\";\n      scrollRef(this.scrollTo);\n    });\n\n    _defineProperty(this, \"onSelectionChange\", () => {\n      const selection = window.getSelection();\n\n      if (selection.isCollapsed) {\n        this.setState({\n          isCollapsed: true\n        });\n        return;\n      }\n\n      const range = selection.getRangeAt(0);\n\n      if (!range) {\n        return;\n      }\n\n      this.setState({\n        isCollapsed: false,\n        range\n      });\n      this.debouncedAfterSelection();\n    });\n\n    _defineProperty(this, \"onScroll\", () => {\n      const {\n        onScrollChange\n      } = this.props;\n      onScrollChange();\n      this.setState({\n        scrolledToHighlightId: EMPTY_ID\n      }, () => this.renderHighlights());\n      this.viewer.container.removeEventListener(\"scroll\", this.onScroll);\n    });\n\n    _defineProperty(this, \"onMouseDown\", event => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (event.target.closest(\".PdfHighlighter__tip-container\")) {\n        return;\n      }\n\n      this.hideTipAndSelection();\n    });\n\n    _defineProperty(this, \"handleKeyDown\", event => {\n      if (event.code === \"Escape\") {\n        this.hideTipAndSelection();\n      }\n    });\n\n    _defineProperty(this, \"afterSelection\", () => {\n      const {\n        onSelectionFinished\n      } = this.props;\n      const {\n        isCollapsed,\n        range\n      } = this.state;\n\n      if (!range || isCollapsed) {\n        return;\n      }\n\n      const page = getPageFromRange(range);\n\n      if (!page) {\n        return;\n      }\n\n      const rects = getClientRects(range, page.node);\n\n      if (rects.length === 0) {\n        return;\n      }\n\n      const boundingRect = getBoundingRect(rects);\n      const viewportPosition = {\n        boundingRect,\n        rects,\n        pageNumber: page.number\n      };\n      const content = {\n        text: range.toString()\n      };\n      const scaledPosition = this.viewportPositionToScaled(viewportPosition);\n      this.renderTipAtPosition(viewportPosition, onSelectionFinished(scaledPosition, content, () => this.hideTipAndSelection(), () => this.setState({\n        ghostHighlight: {\n          position: scaledPosition\n        }\n      }, () => this.renderHighlights())));\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.highlights !== this.props.highlights) {\n      this.renderHighlights(this.props);\n    }\n  }\n\n  componentDidMount() {\n    const {\n      pdfDocument\n    } = this.props;\n    this.debouncedAfterSelection = _.debounce(500, this.afterSelection);\n    this.linkService = new PDFLinkService();\n    this.viewer = new PDFViewer({\n      container: this.containerNode,\n      enhanceTextSelection: true,\n      removePageBorders: true,\n      linkService: this.linkService\n    });\n    this.viewer.setDocument(pdfDocument);\n    this.linkService.setDocument(pdfDocument);\n    this.linkService.setViewer(this.viewer); // debug\n\n    window.PdfViewer = this;\n    document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"pagesinit\", () => {\n      this.onDocumentReady();\n    });\n    document.addEventListener(\"textlayerrendered\", this.onTextLayerRendered);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"textlayerrendered\", this.onTextLayerRendered);\n  }\n\n  findOrCreateHighlightLayer(page) {\n    const textLayer = this.viewer.getPageView(page - 1).textLayer;\n\n    if (!textLayer) {\n      return null;\n    }\n\n    return findOrCreateContainerLayer(textLayer.textLayerDiv, \"PdfHighlighter__highlight-layer\");\n  }\n\n  groupHighlightsByPage(highlights) {\n    const {\n      ghostHighlight\n    } = this.state;\n    return [...highlights, ghostHighlight].filter(Boolean).reduce((res, highlight) => {\n      const {\n        pageNumber\n      } = highlight.position;\n      res[pageNumber] = res[pageNumber] || [];\n      res[pageNumber].push(highlight);\n      return res;\n    }, {});\n  }\n\n  showTip(highlight, content) {\n    const {\n      isCollapsed,\n      ghostHighlight,\n      isAreaSelectionInProgress\n    } = this.state;\n    const highlightInProgress = !isCollapsed || ghostHighlight;\n\n    if (highlightInProgress || isAreaSelectionInProgress) {\n      return;\n    }\n\n    this.renderTipAtPosition(highlight.position, content);\n  }\n\n  scaledPositionToViewport({\n    pageNumber,\n    boundingRect,\n    rects,\n    usePdfCoordinates\n  }) {\n    const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n    return {\n      boundingRect: scaledToViewport(boundingRect, viewport, usePdfCoordinates),\n      rects: (rects || []).map(rect => scaledToViewport(rect, viewport, usePdfCoordinates)),\n      pageNumber\n    };\n  }\n\n  viewportPositionToScaled({\n    pageNumber,\n    boundingRect,\n    rects\n  }) {\n    const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n    return {\n      boundingRect: viewportToScaled(boundingRect, viewport),\n      rects: (rects || []).map(rect => viewportToScaled(rect, viewport)),\n      pageNumber\n    };\n  }\n\n  screenshot(position, pageNumber) {\n    const canvas = this.viewer.getPageView(pageNumber - 1).canvas;\n    return getAreaAsPng(canvas, position);\n  }\n\n  renderHighlights(nextProps) {\n    const {\n      highlightTransform,\n      highlights\n    } = nextProps || this.props;\n    const {\n      pdfDocument\n    } = this.props;\n    const {\n      tip,\n      scrolledToHighlightId\n    } = this.state;\n    const highlightsByPage = this.groupHighlightsByPage(highlights);\n\n    for (let pageNumber = 1; pageNumber <= pdfDocument.numPages; pageNumber++) {\n      const highlightLayer = this.findOrCreateHighlightLayer(pageNumber);\n\n      if (highlightLayer) {\n        ReactDom.render(React.createElement(\"div\", null, (highlightsByPage[String(pageNumber)] || []).map((highlight, index) => {\n          const {\n            position,\n            ...rest\n          } = highlight;\n          const viewportHighlight = {\n            position: this.scaledPositionToViewport(position),\n            ...rest\n          };\n\n          if (tip && tip.highlight.id === String(highlight.id)) {\n            this.showTip(tip.highlight, tip.callback(viewportHighlight));\n          }\n\n          const isScrolledTo = Boolean(scrolledToHighlightId === highlight.id);\n          return highlightTransform(viewportHighlight, index, (highlight, callback) => {\n            this.setState({\n              tip: {\n                highlight,\n                callback\n              }\n            });\n            this.showTip(highlight, callback(highlight));\n          }, this.hideTipAndSelection, rect => {\n            const viewport = this.viewer.getPageView(pageNumber - 1).viewport;\n            return viewportToScaled(rect, viewport);\n          }, boundingRect => this.screenshot(boundingRect, pageNumber), isScrolledTo);\n        })), highlightLayer);\n      }\n    }\n  }\n\n  renderTipAtPosition(position, inner) {\n    const {\n      boundingRect,\n      pageNumber\n    } = position;\n    const page = {\n      node: this.viewer.getPageView(pageNumber - 1).div\n    };\n    const pageBoundingRect = page.node.getBoundingClientRect();\n    const tipNode = findOrCreateContainerLayer(this.viewer.viewer, \"PdfHighlighter__tip-layer\");\n    ReactDom.render(React.createElement(TipContainer, {\n      scrollTop: this.viewer.container.scrollTop,\n      pageBoundingRect: pageBoundingRect,\n      style: {\n        left: page.node.offsetLeft + boundingRect.left + boundingRect.width / 2,\n        top: boundingRect.top + page.node.offsetTop,\n        bottom: boundingRect.top + page.node.offsetTop + boundingRect.height\n      },\n      children: inner\n    }), tipNode);\n  }\n\n  toggleTextSelection(flag) {\n    this.viewer.viewer.classList.toggle(\"PdfHighlighter--disable-selection\", flag);\n  }\n\n  render() {\n    const {\n      onSelectionFinished,\n      enableAreaSelection\n    } = this.props;\n    return React.createElement(Pointable, {\n      onPointerDown: this.onMouseDown\n    }, React.createElement(\"div\", {\n      ref: node => this.containerNode = node,\n      className: \"PdfHighlighter\",\n      onContextMenu: e => e.preventDefault()\n    }, React.createElement(\"div\", {\n      className: \"pdfViewer\"\n    }), typeof enableAreaSelection === \"function\" ? React.createElement(MouseSelection, {\n      onDragStart: () => this.toggleTextSelection(true),\n      onDragEnd: () => this.toggleTextSelection(false),\n      onChange: isVisible => this.setState({\n        isAreaSelectionInProgress: isVisible\n      }),\n      shouldStart: event => enableAreaSelection(event) && event.target instanceof HTMLElement && Boolean(event.target.closest(\".page\")),\n      onSelection: (startTarget, boundingRect, resetSelection) => {\n        const page = getPageFromElement(startTarget);\n\n        if (!page) {\n          return;\n        }\n\n        const pageBoundingRect = { ...boundingRect,\n          top: boundingRect.top - page.node.offsetTop,\n          left: boundingRect.left - page.node.offsetLeft\n        };\n        const viewportPosition = {\n          boundingRect: pageBoundingRect,\n          rects: [],\n          pageNumber: page.number\n        };\n        const scaledPosition = this.viewportPositionToScaled(viewportPosition);\n        const image = this.screenshot(pageBoundingRect, page.number);\n        this.renderTipAtPosition(viewportPosition, onSelectionFinished(scaledPosition, {\n          image\n        }, () => this.hideTipAndSelection(), () => this.setState({\n          ghostHighlight: {\n            position: scaledPosition,\n            content: {\n              image\n            }\n          }\n        }, () => {\n          resetSelection();\n          this.renderHighlights();\n        })));\n      }\n    }) : null));\n  }\n\n}\n\nexport default PdfHighlighter;"]},"metadata":{},"sourceType":"module"}