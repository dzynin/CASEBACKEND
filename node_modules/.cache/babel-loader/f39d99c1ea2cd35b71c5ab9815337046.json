{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { WUniqueFormat } from '../../base/unique-format';\nimport { WUniqueFormats } from '../../base/unique-formats';\nimport { WBorders } from './borders';\nimport { WShading } from './shading';\n/* eslint-disable */\n/**\n * @private\n */\nvar WCellFormat = /** @class */function () {\n  function WCellFormat(node) {\n    this.uniqueCellFormat = undefined;\n    this.borders = new WBorders(this);\n    this.shading = new WShading(this);\n    this.ownerBase = node;\n    this.borders = new WBorders(this);\n    this.shading = new WShading(this);\n  }\n  Object.defineProperty(WCellFormat.prototype, \"leftMargin\", {\n    get: function () {\n      return this.getPropertyValue('leftMargin');\n    },\n    set: function (value) {\n      this.setPropertyValue('leftMargin', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"rightMargin\", {\n    get: function () {\n      return this.getPropertyValue('rightMargin');\n    },\n    set: function (value) {\n      this.setPropertyValue('rightMargin', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"topMargin\", {\n    get: function () {\n      return this.getPropertyValue('topMargin');\n    },\n    set: function (value) {\n      this.setPropertyValue('topMargin', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"bottomMargin\", {\n    get: function () {\n      return this.getPropertyValue('bottomMargin');\n    },\n    set: function (value) {\n      this.setPropertyValue('bottomMargin', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"cellWidth\", {\n    get: function () {\n      return this.getPropertyValue('cellWidth');\n    },\n    set: function (value) {\n      this.setPropertyValue('cellWidth', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"columnSpan\", {\n    get: function () {\n      return this.getPropertyValue('columnSpan');\n    },\n    set: function (value) {\n      this.setPropertyValue('columnSpan', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"rowSpan\", {\n    get: function () {\n      return this.getPropertyValue('rowSpan');\n    },\n    set: function (value) {\n      this.setPropertyValue('rowSpan', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"preferredWidth\", {\n    get: function () {\n      return this.getPropertyValue('preferredWidth');\n    },\n    set: function (value) {\n      this.setPropertyValue('preferredWidth', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"verticalAlignment\", {\n    get: function () {\n      return this.getPropertyValue('verticalAlignment');\n    },\n    set: function (value) {\n      this.setPropertyValue('verticalAlignment', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WCellFormat.prototype, \"preferredWidthType\", {\n    get: function () {\n      return this.getPropertyValue('preferredWidthType');\n    },\n    set: function (value) {\n      this.setPropertyValue('preferredWidthType', value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  WCellFormat.prototype.getPropertyValue = function (property) {\n    var hasValue = this.hasValue(property);\n    if (hasValue) {\n      var propertyType = WUniqueFormat.getPropertyType(WCellFormat.uniqueFormatType, property);\n      if (!isNullOrUndefined(this.uniqueCellFormat) && this.uniqueCellFormat.propertiesHash.containsKey(propertyType)) {\n        return this.uniqueCellFormat.propertiesHash.get(propertyType);\n      }\n    }\n    return WCellFormat.getPropertyDefaultValue(property);\n  };\n  WCellFormat.prototype.setPropertyValue = function (property, value) {\n    if (isNullOrUndefined(value) || value === '') {\n      value = WCellFormat.getPropertyDefaultValue(property);\n    }\n    if (isNullOrUndefined(this.uniqueCellFormat)) {\n      this.initializeUniqueCellFormat(property, value);\n    } else {\n      var propertyType = WUniqueFormat.getPropertyType(this.uniqueCellFormat.uniqueFormatType, property);\n      if (this.uniqueCellFormat.propertiesHash.containsKey(propertyType) && this.uniqueCellFormat.propertiesHash.get(propertyType) === value) {\n        //Do nothing, since no change in property value and return\n        return;\n      }\n      this.uniqueCellFormat = WCellFormat.uniqueCellFormats.updateUniqueFormat(this.uniqueCellFormat, property, value);\n    }\n  };\n  WCellFormat.prototype.initializeUniqueCellFormat = function (property, propValue) {\n    var uniqueCellFormatTemp = new Dictionary();\n    this.addUniqueCellFormat('leftMargin', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('topMargin', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('bottomMargin', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('rightMargin', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('cellWidth', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('columnSpan', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('rowSpan', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('preferredWidth', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('verticalAlignment', property, propValue, uniqueCellFormatTemp);\n    this.addUniqueCellFormat('preferredWidthType', property, propValue, uniqueCellFormatTemp);\n    this.uniqueCellFormat = WCellFormat.uniqueCellFormats.addUniqueFormat(uniqueCellFormatTemp, WCellFormat.uniqueFormatType);\n  };\n  WCellFormat.prototype.addUniqueCellFormat = function (property, modifiedProperty, propValue, uniqueCellFormatTemp) {\n    var propertyType = WUniqueFormat.getPropertyType(WCellFormat.uniqueFormatType, property);\n    if (property === modifiedProperty) {\n      uniqueCellFormatTemp.add(propertyType, propValue);\n    }\n  };\n  WCellFormat.getPropertyDefaultValue = function (property) {\n    var value = undefined;\n    switch (property) {\n      case 'leftMargin':\n        value = undefined;\n        break;\n      case 'topMargin':\n        value = undefined;\n        break;\n      case 'bottomMargin':\n        value = undefined;\n        break;\n      case 'rightMargin':\n        value = undefined;\n        break;\n      case 'cellWidth':\n        value = 0;\n        break;\n      case 'columnSpan':\n        value = 1;\n        break;\n      case 'rowSpan':\n        value = 1;\n        break;\n      case 'preferredWidth':\n        value = 0;\n        break;\n      case 'verticalAlignment':\n        value = 'Top';\n        break;\n      case 'preferredWidthType':\n        value = 'Point';\n        break;\n    }\n    return value;\n  };\n  WCellFormat.prototype.containsMargins = function () {\n    return !isNullOrUndefined(this.leftMargin) || !isNullOrUndefined(this.rightMargin) || !isNullOrUndefined(this.bottomMargin) || !isNullOrUndefined(this.topMargin);\n  };\n  WCellFormat.prototype.destroy = function () {\n    if (!isNullOrUndefined(this.borders)) {\n      this.borders.destroy();\n    }\n    if (!isNullOrUndefined(this.shading)) {\n      this.shading.destroy();\n    }\n    if (!isNullOrUndefined(this.uniqueCellFormat)) {\n      WCellFormat.uniqueCellFormats.remove(this.uniqueCellFormat);\n    }\n    this.uniqueCellFormat = undefined;\n    this.borders = undefined;\n    this.shading = undefined;\n  };\n  WCellFormat.prototype.cloneFormat = function () {\n    var format = new WCellFormat(undefined);\n    format.verticalAlignment = this.verticalAlignment;\n    format.leftMargin = this.leftMargin;\n    format.rightMargin = this.rightMargin;\n    format.topMargin = this.topMargin;\n    format.bottomMargin = this.bottomMargin;\n    format.preferredWidth = this.preferredWidth;\n    format.preferredWidthType = this.preferredWidthType;\n    format.cellWidth = this.cellWidth;\n    format.borders = isNullOrUndefined(this.borders) ? undefined : this.borders.cloneFormat();\n    format.shading = isNullOrUndefined(this.shading) ? undefined : this.shading.cloneFormat();\n    return format;\n  };\n  WCellFormat.prototype.hasValue = function (property) {\n    if (!isNullOrUndefined(this.uniqueCellFormat)) {\n      var propertyType = WUniqueFormat.getPropertyType(this.uniqueCellFormat.uniqueFormatType, property);\n      return this.uniqueCellFormat.propertiesHash.containsKey(propertyType);\n    }\n    return false;\n  };\n  WCellFormat.prototype.copyFormat = function (format) {\n    if (!isNullOrUndefined(format)) {\n      if (!isNullOrUndefined(format.uniqueCellFormat)) {\n        this.cellWidth = format.cellWidth;\n        this.leftMargin = format.leftMargin;\n        this.topMargin = format.topMargin;\n        this.rightMargin = format.rightMargin;\n        this.bottomMargin = format.bottomMargin;\n        this.preferredWidth = format.preferredWidth;\n        this.columnSpan = format.columnSpan;\n        this.rowSpan = format.rowSpan;\n        this.preferredWidthType = format.preferredWidthType;\n        this.verticalAlignment = format.verticalAlignment;\n      }\n      if (!isNullOrUndefined(format.shading)) {\n        this.shading = new WShading(this);\n        this.shading.copyFormat(format.shading);\n      }\n      if (!isNullOrUndefined(format.borders)) {\n        this.borders = new WBorders(this);\n        this.borders.copyFormat(format.borders);\n      }\n    }\n  };\n  WCellFormat.clear = function () {\n    this.uniqueCellFormats.clear();\n  };\n  WCellFormat.uniqueCellFormats = new WUniqueFormats();\n  WCellFormat.uniqueFormatType = 4;\n  return WCellFormat;\n}();\nexport { WCellFormat };","map":{"version":3,"names":["isNullOrUndefined","Dictionary","WUniqueFormat","WUniqueFormats","WBorders","WShading","WCellFormat","node","uniqueCellFormat","undefined","borders","shading","ownerBase","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","property","hasValue","propertyType","getPropertyType","uniqueFormatType","propertiesHash","containsKey","getPropertyDefaultValue","initializeUniqueCellFormat","uniqueCellFormats","updateUniqueFormat","propValue","uniqueCellFormatTemp","addUniqueCellFormat","addUniqueFormat","modifiedProperty","add","containsMargins","leftMargin","rightMargin","bottomMargin","topMargin","destroy","remove","cloneFormat","format","verticalAlignment","preferredWidth","preferredWidthType","cellWidth","copyFormat","columnSpan","rowSpan","clear"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/format/cell-format.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Dictionary } from '../../base/dictionary';\nimport { WUniqueFormat } from '../../base/unique-format';\nimport { WUniqueFormats } from '../../base/unique-formats';\nimport { WBorders } from './borders';\nimport { WShading } from './shading';\n/* eslint-disable */\n/**\n * @private\n */\nvar WCellFormat = /** @class */ (function () {\n    function WCellFormat(node) {\n        this.uniqueCellFormat = undefined;\n        this.borders = new WBorders(this);\n        this.shading = new WShading(this);\n        this.ownerBase = node;\n        this.borders = new WBorders(this);\n        this.shading = new WShading(this);\n    }\n    Object.defineProperty(WCellFormat.prototype, \"leftMargin\", {\n        get: function () {\n            return this.getPropertyValue('leftMargin');\n        },\n        set: function (value) {\n            this.setPropertyValue('leftMargin', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"rightMargin\", {\n        get: function () {\n            return this.getPropertyValue('rightMargin');\n        },\n        set: function (value) {\n            this.setPropertyValue('rightMargin', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"topMargin\", {\n        get: function () {\n            return this.getPropertyValue('topMargin');\n        },\n        set: function (value) {\n            this.setPropertyValue('topMargin', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"bottomMargin\", {\n        get: function () {\n            return this.getPropertyValue('bottomMargin');\n        },\n        set: function (value) {\n            this.setPropertyValue('bottomMargin', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"cellWidth\", {\n        get: function () {\n            return this.getPropertyValue('cellWidth');\n        },\n        set: function (value) {\n            this.setPropertyValue('cellWidth', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"columnSpan\", {\n        get: function () {\n            return this.getPropertyValue('columnSpan');\n        },\n        set: function (value) {\n            this.setPropertyValue('columnSpan', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"rowSpan\", {\n        get: function () {\n            return this.getPropertyValue('rowSpan');\n        },\n        set: function (value) {\n            this.setPropertyValue('rowSpan', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"preferredWidth\", {\n        get: function () {\n            return this.getPropertyValue('preferredWidth');\n        },\n        set: function (value) {\n            this.setPropertyValue('preferredWidth', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"verticalAlignment\", {\n        get: function () {\n            return this.getPropertyValue('verticalAlignment');\n        },\n        set: function (value) {\n            this.setPropertyValue('verticalAlignment', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WCellFormat.prototype, \"preferredWidthType\", {\n        get: function () {\n            return this.getPropertyValue('preferredWidthType');\n        },\n        set: function (value) {\n            this.setPropertyValue('preferredWidthType', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WCellFormat.prototype.getPropertyValue = function (property) {\n        var hasValue = this.hasValue(property);\n        if (hasValue) {\n            var propertyType = WUniqueFormat.getPropertyType(WCellFormat.uniqueFormatType, property);\n            if (!isNullOrUndefined(this.uniqueCellFormat) && this.uniqueCellFormat.propertiesHash.containsKey(propertyType)) {\n                return this.uniqueCellFormat.propertiesHash.get(propertyType);\n            }\n        }\n        return WCellFormat.getPropertyDefaultValue(property);\n    };\n    WCellFormat.prototype.setPropertyValue = function (property, value) {\n        if (isNullOrUndefined(value) || value === '') {\n            value = WCellFormat.getPropertyDefaultValue(property);\n        }\n        if (isNullOrUndefined(this.uniqueCellFormat)) {\n            this.initializeUniqueCellFormat(property, value);\n        }\n        else {\n            var propertyType = WUniqueFormat.getPropertyType(this.uniqueCellFormat.uniqueFormatType, property);\n            if (this.uniqueCellFormat.propertiesHash.containsKey(propertyType) &&\n                this.uniqueCellFormat.propertiesHash.get(propertyType) === value) {\n                //Do nothing, since no change in property value and return\n                return;\n            }\n            this.uniqueCellFormat = WCellFormat.uniqueCellFormats.updateUniqueFormat(this.uniqueCellFormat, property, value);\n        }\n    };\n    WCellFormat.prototype.initializeUniqueCellFormat = function (property, propValue) {\n        var uniqueCellFormatTemp = new Dictionary();\n        this.addUniqueCellFormat('leftMargin', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('topMargin', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('bottomMargin', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('rightMargin', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('cellWidth', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('columnSpan', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('rowSpan', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('preferredWidth', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('verticalAlignment', property, propValue, uniqueCellFormatTemp);\n        this.addUniqueCellFormat('preferredWidthType', property, propValue, uniqueCellFormatTemp);\n        this.uniqueCellFormat = WCellFormat.uniqueCellFormats.addUniqueFormat(uniqueCellFormatTemp, WCellFormat.uniqueFormatType);\n    };\n    WCellFormat.prototype.addUniqueCellFormat = function (property, modifiedProperty, propValue, uniqueCellFormatTemp) {\n        var propertyType = WUniqueFormat.getPropertyType(WCellFormat.uniqueFormatType, property);\n        if (property === modifiedProperty) {\n            uniqueCellFormatTemp.add(propertyType, propValue);\n        }\n    };\n    WCellFormat.getPropertyDefaultValue = function (property) {\n        var value = undefined;\n        switch (property) {\n            case 'leftMargin':\n                value = undefined;\n                break;\n            case 'topMargin':\n                value = undefined;\n                break;\n            case 'bottomMargin':\n                value = undefined;\n                break;\n            case 'rightMargin':\n                value = undefined;\n                break;\n            case 'cellWidth':\n                value = 0;\n                break;\n            case 'columnSpan':\n                value = 1;\n                break;\n            case 'rowSpan':\n                value = 1;\n                break;\n            case 'preferredWidth':\n                value = 0;\n                break;\n            case 'verticalAlignment':\n                value = 'Top';\n                break;\n            case 'preferredWidthType':\n                value = 'Point';\n                break;\n        }\n        return value;\n    };\n    WCellFormat.prototype.containsMargins = function () {\n        return (!isNullOrUndefined(this.leftMargin)\n            || !isNullOrUndefined(this.rightMargin)\n            || !isNullOrUndefined(this.bottomMargin)\n            || !isNullOrUndefined(this.topMargin));\n    };\n    WCellFormat.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.borders)) {\n            this.borders.destroy();\n        }\n        if (!isNullOrUndefined(this.shading)) {\n            this.shading.destroy();\n        }\n        if (!isNullOrUndefined(this.uniqueCellFormat)) {\n            WCellFormat.uniqueCellFormats.remove(this.uniqueCellFormat);\n        }\n        this.uniqueCellFormat = undefined;\n        this.borders = undefined;\n        this.shading = undefined;\n    };\n    WCellFormat.prototype.cloneFormat = function () {\n        var format = new WCellFormat(undefined);\n        format.verticalAlignment = this.verticalAlignment;\n        format.leftMargin = this.leftMargin;\n        format.rightMargin = this.rightMargin;\n        format.topMargin = this.topMargin;\n        format.bottomMargin = this.bottomMargin;\n        format.preferredWidth = this.preferredWidth;\n        format.preferredWidthType = this.preferredWidthType;\n        format.cellWidth = this.cellWidth;\n        format.borders = isNullOrUndefined(this.borders) ? undefined : this.borders.cloneFormat();\n        format.shading = isNullOrUndefined(this.shading) ? undefined : this.shading.cloneFormat();\n        return format;\n    };\n    WCellFormat.prototype.hasValue = function (property) {\n        if (!isNullOrUndefined(this.uniqueCellFormat)) {\n            var propertyType = WUniqueFormat.getPropertyType(this.uniqueCellFormat.uniqueFormatType, property);\n            return this.uniqueCellFormat.propertiesHash.containsKey(propertyType);\n        }\n        return false;\n    };\n    WCellFormat.prototype.copyFormat = function (format) {\n        if (!isNullOrUndefined(format)) {\n            if (!isNullOrUndefined(format.uniqueCellFormat)) {\n                this.cellWidth = format.cellWidth;\n                this.leftMargin = format.leftMargin;\n                this.topMargin = format.topMargin;\n                this.rightMargin = format.rightMargin;\n                this.bottomMargin = format.bottomMargin;\n                this.preferredWidth = format.preferredWidth;\n                this.columnSpan = format.columnSpan;\n                this.rowSpan = format.rowSpan;\n                this.preferredWidthType = format.preferredWidthType;\n                this.verticalAlignment = format.verticalAlignment;\n            }\n            if (!isNullOrUndefined(format.shading)) {\n                this.shading = new WShading(this);\n                this.shading.copyFormat(format.shading);\n            }\n            if (!isNullOrUndefined(format.borders)) {\n                this.borders = new WBorders(this);\n                this.borders.copyFormat(format.borders);\n            }\n        }\n    };\n    WCellFormat.clear = function () {\n        this.uniqueCellFormats.clear();\n    };\n    WCellFormat.uniqueCellFormats = new WUniqueFormats();\n    WCellFormat.uniqueFormatType = 4;\n    return WCellFormat;\n}());\nexport { WCellFormat };\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,QAAQ,QAAQ,WAAW;AACpC;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,YAAY;EACzC,SAASA,WAAWA,CAACC,IAAI,EAAE;IACvB,IAAI,CAACC,gBAAgB,GAAGC,SAAS;IACjC,IAAI,CAACC,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAI,CAACO,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAI,CAACO,SAAS,GAAGL,IAAI;IACrB,IAAI,CAACG,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;IACjC,IAAI,CAACO,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;EACrC;EACAQ,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,YAAY,EAAE;IACvDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,YAAY,CAAC;IAC9C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,YAAY,EAAED,KAAK,CAAC;IAC9C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,aAAa,EAAE;IACxDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,aAAa,CAAC;IAC/C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,aAAa,EAAED,KAAK,CAAC;IAC/C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,WAAW,EAAE;IACtDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,WAAW,CAAC;IAC7C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAED,KAAK,CAAC;IAC7C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,cAAc,EAAE;IACzDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,cAAc,CAAC;IAChD,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,cAAc,EAAED,KAAK,CAAC;IAChD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,WAAW,EAAE;IACtDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,WAAW,CAAC;IAC7C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAED,KAAK,CAAC;IAC7C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,YAAY,EAAE;IACvDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,YAAY,CAAC;IAC9C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,YAAY,EAAED,KAAK,CAAC;IAC9C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,SAAS,EAAE;IACpDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,SAAS,CAAC;IAC3C,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAED,KAAK,CAAC;IAC3C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,gBAAgB,EAAE;IAC3DC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,gBAAgB,CAAC;IAClD,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,gBAAgB,EAAED,KAAK,CAAC;IAClD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,mBAAmB,EAAE;IAC9DC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,mBAAmB,CAAC;IACrD,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,mBAAmB,EAAED,KAAK,CAAC;IACrD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACR,WAAW,CAACS,SAAS,EAAE,oBAAoB,EAAE;IAC/DC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,oBAAoB,CAAC;IACtD,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,oBAAoB,EAAED,KAAK,CAAC;IACtD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFhB,WAAW,CAACS,SAAS,CAACE,gBAAgB,GAAG,UAAUM,QAAQ,EAAE;IACzD,IAAIC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,QAAQ,CAAC;IACtC,IAAIC,QAAQ,EAAE;MACV,IAAIC,YAAY,GAAGvB,aAAa,CAACwB,eAAe,CAACpB,WAAW,CAACqB,gBAAgB,EAAEJ,QAAQ,CAAC;MACxF,IAAI,CAACvB,iBAAiB,CAAC,IAAI,CAACQ,gBAAgB,CAAC,IAAI,IAAI,CAACA,gBAAgB,CAACoB,cAAc,CAACC,WAAW,CAACJ,YAAY,CAAC,EAAE;QAC7G,OAAO,IAAI,CAACjB,gBAAgB,CAACoB,cAAc,CAACZ,GAAG,CAACS,YAAY,CAAC;MACjE;IACJ;IACA,OAAOnB,WAAW,CAACwB,uBAAuB,CAACP,QAAQ,CAAC;EACxD,CAAC;EACDjB,WAAW,CAACS,SAAS,CAACK,gBAAgB,GAAG,UAAUG,QAAQ,EAAEJ,KAAK,EAAE;IAChE,IAAInB,iBAAiB,CAACmB,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;MAC1CA,KAAK,GAAGb,WAAW,CAACwB,uBAAuB,CAACP,QAAQ,CAAC;IACzD;IACA,IAAIvB,iBAAiB,CAAC,IAAI,CAACQ,gBAAgB,CAAC,EAAE;MAC1C,IAAI,CAACuB,0BAA0B,CAACR,QAAQ,EAAEJ,KAAK,CAAC;IACpD,CAAC,MACI;MACD,IAAIM,YAAY,GAAGvB,aAAa,CAACwB,eAAe,CAAC,IAAI,CAAClB,gBAAgB,CAACmB,gBAAgB,EAAEJ,QAAQ,CAAC;MAClG,IAAI,IAAI,CAACf,gBAAgB,CAACoB,cAAc,CAACC,WAAW,CAACJ,YAAY,CAAC,IAC9D,IAAI,CAACjB,gBAAgB,CAACoB,cAAc,CAACZ,GAAG,CAACS,YAAY,CAAC,KAAKN,KAAK,EAAE;QAClE;QACA;MACJ;MACA,IAAI,CAACX,gBAAgB,GAAGF,WAAW,CAAC0B,iBAAiB,CAACC,kBAAkB,CAAC,IAAI,CAACzB,gBAAgB,EAAEe,QAAQ,EAAEJ,KAAK,CAAC;IACpH;EACJ,CAAC;EACDb,WAAW,CAACS,SAAS,CAACgB,0BAA0B,GAAG,UAAUR,QAAQ,EAAEW,SAAS,EAAE;IAC9E,IAAIC,oBAAoB,GAAG,IAAIlC,UAAU,CAAC,CAAC;IAC3C,IAAI,CAACmC,mBAAmB,CAAC,YAAY,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACjF,IAAI,CAACC,mBAAmB,CAAC,WAAW,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IAChF,IAAI,CAACC,mBAAmB,CAAC,cAAc,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACnF,IAAI,CAACC,mBAAmB,CAAC,aAAa,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IAClF,IAAI,CAACC,mBAAmB,CAAC,WAAW,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IAChF,IAAI,CAACC,mBAAmB,CAAC,YAAY,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACjF,IAAI,CAACC,mBAAmB,CAAC,SAAS,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IAC9E,IAAI,CAACC,mBAAmB,CAAC,gBAAgB,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACrF,IAAI,CAACC,mBAAmB,CAAC,mBAAmB,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACxF,IAAI,CAACC,mBAAmB,CAAC,oBAAoB,EAAEb,QAAQ,EAAEW,SAAS,EAAEC,oBAAoB,CAAC;IACzF,IAAI,CAAC3B,gBAAgB,GAAGF,WAAW,CAAC0B,iBAAiB,CAACK,eAAe,CAACF,oBAAoB,EAAE7B,WAAW,CAACqB,gBAAgB,CAAC;EAC7H,CAAC;EACDrB,WAAW,CAACS,SAAS,CAACqB,mBAAmB,GAAG,UAAUb,QAAQ,EAAEe,gBAAgB,EAAEJ,SAAS,EAAEC,oBAAoB,EAAE;IAC/G,IAAIV,YAAY,GAAGvB,aAAa,CAACwB,eAAe,CAACpB,WAAW,CAACqB,gBAAgB,EAAEJ,QAAQ,CAAC;IACxF,IAAIA,QAAQ,KAAKe,gBAAgB,EAAE;MAC/BH,oBAAoB,CAACI,GAAG,CAACd,YAAY,EAAES,SAAS,CAAC;IACrD;EACJ,CAAC;EACD5B,WAAW,CAACwB,uBAAuB,GAAG,UAAUP,QAAQ,EAAE;IACtD,IAAIJ,KAAK,GAAGV,SAAS;IACrB,QAAQc,QAAQ;MACZ,KAAK,YAAY;QACbJ,KAAK,GAAGV,SAAS;QACjB;MACJ,KAAK,WAAW;QACZU,KAAK,GAAGV,SAAS;QACjB;MACJ,KAAK,cAAc;QACfU,KAAK,GAAGV,SAAS;QACjB;MACJ,KAAK,aAAa;QACdU,KAAK,GAAGV,SAAS;QACjB;MACJ,KAAK,WAAW;QACZU,KAAK,GAAG,CAAC;QACT;MACJ,KAAK,YAAY;QACbA,KAAK,GAAG,CAAC;QACT;MACJ,KAAK,SAAS;QACVA,KAAK,GAAG,CAAC;QACT;MACJ,KAAK,gBAAgB;QACjBA,KAAK,GAAG,CAAC;QACT;MACJ,KAAK,mBAAmB;QACpBA,KAAK,GAAG,KAAK;QACb;MACJ,KAAK,oBAAoB;QACrBA,KAAK,GAAG,OAAO;QACf;IACR;IACA,OAAOA,KAAK;EAChB,CAAC;EACDb,WAAW,CAACS,SAAS,CAACyB,eAAe,GAAG,YAAY;IAChD,OAAQ,CAACxC,iBAAiB,CAAC,IAAI,CAACyC,UAAU,CAAC,IACpC,CAACzC,iBAAiB,CAAC,IAAI,CAAC0C,WAAW,CAAC,IACpC,CAAC1C,iBAAiB,CAAC,IAAI,CAAC2C,YAAY,CAAC,IACrC,CAAC3C,iBAAiB,CAAC,IAAI,CAAC4C,SAAS,CAAC;EAC7C,CAAC;EACDtC,WAAW,CAACS,SAAS,CAAC8B,OAAO,GAAG,YAAY;IACxC,IAAI,CAAC7C,iBAAiB,CAAC,IAAI,CAACU,OAAO,CAAC,EAAE;MAClC,IAAI,CAACA,OAAO,CAACmC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC7C,iBAAiB,CAAC,IAAI,CAACW,OAAO,CAAC,EAAE;MAClC,IAAI,CAACA,OAAO,CAACkC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC7C,iBAAiB,CAAC,IAAI,CAACQ,gBAAgB,CAAC,EAAE;MAC3CF,WAAW,CAAC0B,iBAAiB,CAACc,MAAM,CAAC,IAAI,CAACtC,gBAAgB,CAAC;IAC/D;IACA,IAAI,CAACA,gBAAgB,GAAGC,SAAS;IACjC,IAAI,CAACC,OAAO,GAAGD,SAAS;IACxB,IAAI,CAACE,OAAO,GAAGF,SAAS;EAC5B,CAAC;EACDH,WAAW,CAACS,SAAS,CAACgC,WAAW,GAAG,YAAY;IAC5C,IAAIC,MAAM,GAAG,IAAI1C,WAAW,CAACG,SAAS,CAAC;IACvCuC,MAAM,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IACjDD,MAAM,CAACP,UAAU,GAAG,IAAI,CAACA,UAAU;IACnCO,MAAM,CAACN,WAAW,GAAG,IAAI,CAACA,WAAW;IACrCM,MAAM,CAACJ,SAAS,GAAG,IAAI,CAACA,SAAS;IACjCI,MAAM,CAACL,YAAY,GAAG,IAAI,CAACA,YAAY;IACvCK,MAAM,CAACE,cAAc,GAAG,IAAI,CAACA,cAAc;IAC3CF,MAAM,CAACG,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;IACnDH,MAAM,CAACI,SAAS,GAAG,IAAI,CAACA,SAAS;IACjCJ,MAAM,CAACtC,OAAO,GAAGV,iBAAiB,CAAC,IAAI,CAACU,OAAO,CAAC,GAAGD,SAAS,GAAG,IAAI,CAACC,OAAO,CAACqC,WAAW,CAAC,CAAC;IACzFC,MAAM,CAACrC,OAAO,GAAGX,iBAAiB,CAAC,IAAI,CAACW,OAAO,CAAC,GAAGF,SAAS,GAAG,IAAI,CAACE,OAAO,CAACoC,WAAW,CAAC,CAAC;IACzF,OAAOC,MAAM;EACjB,CAAC;EACD1C,WAAW,CAACS,SAAS,CAACS,QAAQ,GAAG,UAAUD,QAAQ,EAAE;IACjD,IAAI,CAACvB,iBAAiB,CAAC,IAAI,CAACQ,gBAAgB,CAAC,EAAE;MAC3C,IAAIiB,YAAY,GAAGvB,aAAa,CAACwB,eAAe,CAAC,IAAI,CAAClB,gBAAgB,CAACmB,gBAAgB,EAAEJ,QAAQ,CAAC;MAClG,OAAO,IAAI,CAACf,gBAAgB,CAACoB,cAAc,CAACC,WAAW,CAACJ,YAAY,CAAC;IACzE;IACA,OAAO,KAAK;EAChB,CAAC;EACDnB,WAAW,CAACS,SAAS,CAACsC,UAAU,GAAG,UAAUL,MAAM,EAAE;IACjD,IAAI,CAAChD,iBAAiB,CAACgD,MAAM,CAAC,EAAE;MAC5B,IAAI,CAAChD,iBAAiB,CAACgD,MAAM,CAACxC,gBAAgB,CAAC,EAAE;QAC7C,IAAI,CAAC4C,SAAS,GAAGJ,MAAM,CAACI,SAAS;QACjC,IAAI,CAACX,UAAU,GAAGO,MAAM,CAACP,UAAU;QACnC,IAAI,CAACG,SAAS,GAAGI,MAAM,CAACJ,SAAS;QACjC,IAAI,CAACF,WAAW,GAAGM,MAAM,CAACN,WAAW;QACrC,IAAI,CAACC,YAAY,GAAGK,MAAM,CAACL,YAAY;QACvC,IAAI,CAACO,cAAc,GAAGF,MAAM,CAACE,cAAc;QAC3C,IAAI,CAACI,UAAU,GAAGN,MAAM,CAACM,UAAU;QACnC,IAAI,CAACC,OAAO,GAAGP,MAAM,CAACO,OAAO;QAC7B,IAAI,CAACJ,kBAAkB,GAAGH,MAAM,CAACG,kBAAkB;QACnD,IAAI,CAACF,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB;MACrD;MACA,IAAI,CAACjD,iBAAiB,CAACgD,MAAM,CAACrC,OAAO,CAAC,EAAE;QACpC,IAAI,CAACA,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;QACjC,IAAI,CAACM,OAAO,CAAC0C,UAAU,CAACL,MAAM,CAACrC,OAAO,CAAC;MAC3C;MACA,IAAI,CAACX,iBAAiB,CAACgD,MAAM,CAACtC,OAAO,CAAC,EAAE;QACpC,IAAI,CAACA,OAAO,GAAG,IAAIN,QAAQ,CAAC,IAAI,CAAC;QACjC,IAAI,CAACM,OAAO,CAAC2C,UAAU,CAACL,MAAM,CAACtC,OAAO,CAAC;MAC3C;IACJ;EACJ,CAAC;EACDJ,WAAW,CAACkD,KAAK,GAAG,YAAY;IAC5B,IAAI,CAACxB,iBAAiB,CAACwB,KAAK,CAAC,CAAC;EAClC,CAAC;EACDlD,WAAW,CAAC0B,iBAAiB,GAAG,IAAI7B,cAAc,CAAC,CAAC;EACpDG,WAAW,CAACqB,gBAAgB,GAAG,CAAC;EAChC,OAAOrB,WAAW;AACtB,CAAC,CAAC,CAAE;AACJ,SAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}