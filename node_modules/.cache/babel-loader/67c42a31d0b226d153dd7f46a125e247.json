{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/FileViewer.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { UserContext } from \"../App\";\nimport { Resizable } from \"react-resizable\";\nimport processMd from \"./markdown\";\nimport axios from \"axios\";\nimport { BASE_URL_DEV } from \"../utils\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport \"../style/resizable.css\";\nconst updateHash = highlight => {\n  document.location.hash = `highlight-${highlight.comment.text}-${highlight.id}`;\n};\nfunction FileViewer() {\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [highlights, setHighlights] = useState([]);\n  const [dimensions, setDimensions] = useState({\n    height: 720,\n    width: 250\n  });\n  const [selectPdf, setSelectPdf] = useState(false);\n  const [show, setShow] = useState(false);\n  const [index, setIndex] = useState();\n  const [currentHighlightIndex, setCurrentHighlightIndex] = useState(0);\n  const [filter, setFilter] = useState(\"\");\n  const handlePreviousHighlight = () => {\n    const filteredHighlights = highlights.filter(h => h.comment.text.toUpperCase().includes(filter));\n    const currentFilteredIndex = filteredHighlights.findIndex(h => h === highlights[currentHighlightIndex]);\n    const prevIndex = (currentFilteredIndex - 1 + filteredHighlights.length) % filteredHighlights.length;\n    const prevHighlight = filteredHighlights[prevIndex];\n    setCurrentHighlightIndex(highlights.indexOf(prevHighlight));\n    updateHash(prevHighlight); // Update the hash to navigate\n  };\n  const handleNextHighlight = () => {\n    const filteredHighlights = highlights.filter(h => h.comment.text.toUpperCase().includes(filter));\n    const currentFilteredIndex = filteredHighlights.findIndex(h => h === highlights[currentHighlightIndex]);\n    const nextIndex = (currentFilteredIndex + 1) % filteredHighlights.length;\n    if (nextIndex === 0 && currentFilteredIndex === filteredHighlights.length - 1) {\n      alert(`End of '${filter}' highlights`);\n      return; // Stop at the last highlight if next would cycle back to the first\n    }\n    const nextHighlight = filteredHighlights[nextIndex];\n    setCurrentHighlightIndex(highlights.indexOf(nextHighlight));\n    updateHash(nextHighlight); // Update the hash to navigate\n  };\n  const handleClose = () => setShow(false);\n  useEffect(() => {\n    if (state.currentFile) {\n      let highlightUpdated = false;\n      state.fileHighlights.forEach(item => {\n        if (item.name === state.currentFile.name) {\n          const filteredHighlights = item.highlights.filter(highlight => highlight.comment.text !== \"OTHER\" && (!filter || highlight.comment.text.toUpperCase().includes(filter)));\n          setHighlights(filteredHighlights);\n          highlightUpdated = true;\n        }\n      });\n      if (!highlightUpdated) setHighlights([]);\n    }\n  }, [state.currentFile, state.fileHighlights, filter]); // Include 'filter' in dependency array\n\n  const handleFileClick = async index => {\n    dispatch({\n      type: \"SET_CURR_FILE\",\n      payload: state.files[index]\n    });\n    dispatch({\n      type: \"SET_MODAL\",\n      payload: false\n    });\n    setSelectPdf(false);\n  };\n  const handleRemove = index => {\n    setShow(true);\n    setIndex(index);\n  };\n  const handleRemoveFile = data => {\n    console.log(data, \"File Remove....\");\n    if (state.files.length > 0) {\n      let arr = state.files;\n      arr.splice(arr.findIndex(a => a.name === data.name), 1);\n      dispatch({\n        type: \"ADD_FILE\",\n        payload: arr\n      });\n      dispatch({\n        type: \"SET_CURR_FILE\",\n        payload: state.files[0]\n      });\n    } else {\n      dispatch({\n        type: \"ADD_FILE\",\n        payload: []\n      });\n      dispatch({\n        type: \"SET_FILE_HIGHLIGHTS\",\n        payload: []\n      });\n      dispatch({\n        type: \"SET_CURR_FILE\",\n        payload: null\n      });\n    }\n    setShow(false);\n    axios.post(`${BASE_URL_DEV}/deletePdfAndGraphData`, {\n      fileName: data.name\n    }, {\n      headers: {\n        'x-access-token': state.auth && state.auth.authToken\n      }\n    }).then(function (response) {\n      console.log(\"delete api response\", response);\n    });\n  };\n  const deleteHighlight = index => {\n    const updatedHighlights = highlights.filter((highlight, idx) => {\n      if (index !== idx) {\n        return highlight;\n      }\n    });\n    setHighlights(updatedHighlights);\n  };\n  const hideModal = () => {\n    setSelectPdf(false);\n    dispatch({\n      type: \"SET_MODAL\",\n      payload: false\n    });\n  };\n  const resetHighlights = () => {\n    setHighlights([]);\n  };\n  const handleSendToEditor = highlight => {\n    if (!highlight.comment || !highlight.content) {\n      console.error(\"Highlight structure is not as expected\", highlight);\n      return;\n    }\n    const payload = {\n      commentText: highlight.comment.text,\n      contentText: highlight.content.text\n    };\n    dispatch({\n      type: 'ADD_HIGHLIGHT_TEXT',\n      payload\n    });\n  };\n  return (\n    /*#__PURE__*/\n    //     <Resizable\n    //       className=\"box\"\n    //       height={dimensions.height}\n    //       axis=\"x\"\n    //       width={dimensions.width}\n    //       onResize={(e, { size }) => {\n    //         setDimensions({\n    //           height: size.height,\n    //           width: size.width,\n    //         });\n    //       }}\n    //       resizeHandles={[\"e\"]}\n    //     >\n    //       <div\n    //         className=\"sidebarnew\"\n    //         style={{\n    //           width: dimensions.width + 'px' || \"25%\",\n    //           // minWidth: \"20%\",\n    //           height: dimensions.height + 'px' || \"calc(100vh - 70px)\",\n    //           overflowY: \"scroll\",\n    //         }}\n    //       >\n    //         <div className=\"description\" style={{ padding: \"1rem\" }}>\n    //           <h2 style={{ marginBottom: \"1rem\" }}>Highlights</h2>\n    //           <p>\n    //             <small>\n    //               To create area highlight hold ⌥ Option key (Alt), then click and\n    //               drag.\n    //             </small>\n    //           </p>\n    //         </div>\n    //         {/* <ul className=\"sidebar__highlights\">\n    //           <li\n    //             className=\"sidebar__highlight h4 bg-secondary\"\n    //             onClick={() => setSelectPdf(true)}\n    //           >\n    //             Select Another File\n    //           </li>\n    //           {highlights.length > 0 ? (\n    //             highlights.map((highlight, index) => (\n    //               <li\n    //                 key={index}\n    //                 className=\"sidebar__highlight\"\n    //                 onClick={() => {\n    //                   updateHash(highlight);\n    //                 }}\n    //               >\n    //                 <div>\n    //                   <div style={{ padding: \"0px\" }}>\n    //                     <button\n    //                       style={{ float: \"right\" }}\n    //                       onClick={() => deleteHighlight(index)}\n    //                       className=\"sidebar__btn\"\n    //                     >\n    //                       <i className=\"fa fa-close\"></i>\n    //                     </button>\n    //                     </div>\n    //                     <div>\n    //                     <button\n    //                       style={{ marginLeft: \"114px\" }}\n    //                       onClick={(e) => {\n    //                         e.stopPropagation();\n    //                         handleSendToEditor(highlight);\n    //                       }}\n    //                       className=\"sidebar__btn_send\"\n    //                     >\n    //                       <FontAwesomeIcon icon={faPlus} />\n    //                     </button>\n    //                   </div>\n    //                   <strong>{processMd(highlight.comment.text)}</strong>\n    //                   {highlight.content.text ? (\n    //                     <blockquote style={{ marginTop: \"0.5rem\" }}>\n    //                       {`${highlight.content.text.slice(0, 90).trim()}…`}\n    //                     </blockquote>\n    //                   ) : null}\n    //                   {highlight.content.image ? (\n    //                     <div\n    //                       className=\"highlight__image\"\n    //                       style={{ marginTop: \"0.5rem\" }}\n    //                     >\n    //                       <img src={highlight.content.image} alt={\"Screenshot\"} />\n    //                     </div>\n    //                   ) : null}\n    //                 </div>\n    //                 <div className=\"highlight__location\">\n    //                   Page {highlight.position.pageNumber}\n    //                 </div>\n    //               </li>\n    //             ))\n    //           ) : (\n    //             <li className=\"sidebar__highlight\">\n    //               <div className=\"p-2\">\n    //                 <p style={{ margin: 0 }}>\n    //                   No Highlights Available for Selected Pdf!\n    //                 </p>\n    //               </div>\n    //             </li>\n    //           )}\n    //         </ul> */}\n    // {/*  end of old list style for highlights sidebar */}\n    // {/* new filter buttons */}\n    // {/* <div className=\"filter-buttons\">\n    //   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"ISSUE\")}>Issue</button>\n    //   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"LEGAL_TEST\")}>Legal Test</button>\n    //   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"CONCLUSION\")}>Conclusion</button>\n    //   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"\")}>Clear Filter</button>\n    // </div> */}\n    // <UncontrolledDropdown>\n    //   <DropdownToggle caret color=\"secondary\">\n    //     Filter Highlights\n    //   </DropdownToggle>\n    //   <DropdownMenu>\n    //     <DropdownItem header>Jump to</DropdownItem>\n    //     <DropdownItem onClick={() => setFilter(\"ISSUE\")}>Issue</DropdownItem>\n    //     <DropdownItem onClick={() => setFilter(\"LEGAL_TEST\")}>Legal Test</DropdownItem>\n    //     <DropdownItem onClick={() => setFilter(\"CONCLUSION\")}>Conclusion</DropdownItem>\n    //     <DropdownItem divider />\n    //   </DropdownMenu>\n    // </UncontrolledDropdown>\n    // {/* end of filter buttons */}\n    // {/* begining of new slider card for highlights */}\n    // <div className=\"sidebar__highlights\">\n    //   {highlights.length > 0 ? (\n    //     <div className=\"highlight-card\" key={currentHighlightIndex} onClick={() => updateHash(highlights[currentHighlightIndex])}>\n    //       <div className=\"card-body\">\n    //         <strong>{processMd(highlights[currentHighlightIndex].comment.text)}</strong>\n    //         {highlights[currentHighlightIndex].content.text && (\n    //           <blockquote>\n    //             {`${highlights[currentHighlightIndex].content.text.slice(0, 90).trim()}…`}\n    //           </blockquote>\n    //         )}\n    //         {highlights[currentHighlightIndex].content.image && (\n    //           <div className=\"highlight__image\" style={{ marginTop: \"0.5rem\" }}>\n    //             <img src={highlights[currentHighlightIndex].content.image} alt=\"Screenshot\" />\n    //           </div>\n    //         )}\n    //       </div>\n    //     </div>\n    //   ) : (\n    //     <div className=\"no-highlights\">\n    //       No Highlights Available for Selected Pdf!\n    //     </div>\n    //   )}\n    // </div>\n    //         <div className=\"highlight-actions\">\n    //             <button className=\"btn btn-secondary\" onClick={(e) => {\n    //               e.stopPropagation();\n    //               handlePreviousHighlight();\n    //             }}>Previous</button>\n    //             <button className=\"btn btn-primary\" onClick={(e) => {\n    //               e.stopPropagation();\n    //               handleNextHighlight();\n    //             }}>Next</button>\n    //           </div>\n    // {/* end of new slider highlight card */}\n    //         {highlights.length > 0 ? (\n    //           <div style={{ padding: \"1rem\" }}>\n    //            {/* <button variant=\"primary\" onClick={resetHighlights}> Reset highlights</button> */}\n    //           </div>\n    //         ) : null}\n    //         <Modal\n    //           style={{ color: \"#050505\" }}\n    //           show={selectPdf || state.isModalOpen}\n    //           onHide={() => hideModal()}\n    //           backdrop=\"static\"\n    //           size=\"xl\"\n    //           centered={true}\n    //         >\n    //           <Modal.Header closeButton>\n    //             <Modal.Title id=\"example-modal-sizes-title-sm\">\n    //               Select File\n    //             </Modal.Title>\n    //           </Modal.Header>\n    //           <Modal.Body>\n    //             <div className=\"card\">\n    //               <div className=\"card-body\" style={{ padding: '1.75rem 1.2rem' }}>\n    //                 <div className=\"table-responsive\">\n    //                   <table className=\"table table-hover\">\n    //                     <thead>\n    //                       <tr>\n    //                         <th>PDF NAME</th>\n    //                         <th>CITATION</th>\n    //                         <th>PROVISION</th>\n    //                         <th>ACTION</th>\n    //                       </tr>\n    //                     </thead>\n    //                     <tbody>\n    //                       {state.files && state.files.length > 0 ? (\n    //                         state.files.map((pdf, index) => (\n    //                           state.currentFile && state.currentFile.name === pdf.name ? (\n    //                             <tr style={{ backgroundColor: \"rgba(0, 0, 0, 0.075)\", color: \"#212529\" }}>\n    //                               <td>{pdf.name}</td>\n    //                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.CITATION && pdf.CITATION.length > 0 && pdf.CITATION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n    //                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.PROVISION && pdf.PROVISION.length > 0 && pdf.PROVISION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n    //                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleFileClick(index)} className=\"btn btn-info btn-sm\">View File</button></td>\n    //                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleRemove(pdf)} className=\"btn btn-danger btn-sm\">Delete File</button></td>\n    //                             </tr>\n    //                           ) : (\n    //                             <tr>\n    //                               <td>{pdf.name}</td>\n    //                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.CITATION && pdf.CITATION.length > 0 && pdf.CITATION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n    //                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.PROVISION && pdf.PROVISION.length > 0 && pdf.PROVISION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n    //                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleFileClick(index)} className=\"btn btn-info btn-sm\">View File</button></td>\n    //                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleRemove(pdf)} className=\"btn btn-danger btn-sm\">Delete File</button></td>\n    //                             </tr>\n    //                           )\n    //                         ))) : (\n    //                         <tr>\n    //                           <td colSpan=\"4\" align=\"center\"><p style={{ margin: \"5px\" }}>No Pdfs uploaded!</p></td>\n    //                         </tr>\n    //                       )}\n    //                     </tbody>\n    //                   </table>\n    //                 </div>\n    //               </div>\n    //             </div>\n    //             {console.log(state)}\n    //             {/* // <div\n    //                 //   key={index}\n    //                 //   className=\"btn btn-secondary w-100 rounded-0 py-3 my-1\"\n    //                 //   onClick={() => handleFileClick(index)}\n    //                 // >\n    //                 //   {state.currentFile.name === pdf.name ? (\n    //                 //     <strong>\n    //                 //       <p style={{ margin: 0 }}>{pdf.name}</p>\n    //                 //     </strong>\n    //                 //   ) : (\n    //                 //     <p style={{ margin: 0 }}>{pdf.name}</p>\n    //                 //   )}\n    //                 // </div>\n    //                */}\n    //           </Modal.Body>\n    //         </Modal>\n    //         <Modal\n    //           style={{ color: \"#050505\" }}\n    //           show={show}\n    //           onHide={() => handleClose()}\n    //           centered={true}>\n    //           <Modal.Header closeButton>\n    //             <Modal.Title>Deleting File</Modal.Title>\n    //           </Modal.Header>\n    //           <Modal.Body>Are you sure you want to delete ?</Modal.Body>\n    //           <Modal.Footer>\n    //             <Button variant=\"secondary\" onClick={handleClose}>\n    //               Close\n    //             </Button>\n    //             <Button variant=\"danger\" onClick={() => handleRemoveFile(index)}>\n    //               Delete\n    //             </Button>\n    //           </Modal.Footer>\n    //         </Modal>\n    //       </div>\n    //     </Resizable>\n    //   );\n    React.createElement(Resizable, {\n      className: \"box\",\n      height: dimensions.height,\n      width: dimensions.width,\n      onResize: (e, {\n        size\n      }) => setDimensions({\n        height: size.height,\n        width: size.width\n      }),\n      resizeHandles: [\"e\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebarnew\",\n      style: {\n        width: dimensions.width + 'px',\n        height: dimensions.height + 'px',\n        overflowY: \"scroll\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        padding: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 5\n      }\n    }, \"Highlights\"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 7\n      }\n    }, \"Filter Highlights\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      header: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }\n    }, \"Jump to\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => setFilter(\"ISSUE\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }\n    }, \"Issue\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => setFilter(\"LEGAL_TEST\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }, \"Legal Test\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => setFilter(\"CONCLUSION\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }, \"Conclusion\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar__highlights\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 3\n      }\n    }, highlights.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"highlight-card\",\n      key: currentHighlightIndex,\n      onClick: () => updateHash(highlights[currentHighlightIndex]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }\n    }, processMd(highlights[currentHighlightIndex].comment.text)), highlights[currentHighlightIndex].content.text && /*#__PURE__*/React.createElement(\"blockquote\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }\n    }, `${highlights[currentHighlightIndex].content.text.slice(0, 90).trim()}…`), highlights[currentHighlightIndex].content.image && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"highlight__image\",\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: highlights[currentHighlightIndex].content.image,\n      alt: \"Screenshot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 15\n      }\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-highlights\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 7\n      }\n    }, \"No Highlights Available for Selected Pdf!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"highlight-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: e => {\n        e.stopPropagation();\n        handlePreviousHighlight();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 5\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: e => {\n        e.stopPropagation();\n        handleNextHighlight();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 5\n      }\n    }, \"Next\"))))\n  );\n}\nexport default FileViewer;","map":{"version":3,"names":["React","useContext","useState","useEffect","Modal","Button","UserContext","Resizable","processMd","axios","BASE_URL_DEV","FontAwesomeIcon","faPlus","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","updateHash","highlight","document","location","hash","comment","text","id","FileViewer","state","dispatch","highlights","setHighlights","dimensions","setDimensions","height","width","selectPdf","setSelectPdf","show","setShow","index","setIndex","currentHighlightIndex","setCurrentHighlightIndex","filter","setFilter","handlePreviousHighlight","filteredHighlights","h","toUpperCase","includes","currentFilteredIndex","findIndex","prevIndex","length","prevHighlight","indexOf","handleNextHighlight","nextIndex","alert","nextHighlight","handleClose","currentFile","highlightUpdated","fileHighlights","forEach","item","name","handleFileClick","type","payload","files","handleRemove","handleRemoveFile","data","console","log","arr","splice","a","post","fileName","headers","auth","authToken","then","response","deleteHighlight","updatedHighlights","idx","hideModal","resetHighlights","handleSendToEditor","content","error","commentText","contentText","createElement","className","onResize","e","size","resizeHandles","__self","__source","_jsxFileName","lineNumber","columnNumber","style","overflowY","padding","caret","color","header","onClick","divider","key","slice","trim","image","marginTop","src","alt","stopPropagation"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/FileViewer.js"],"sourcesContent":["// @flow\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { UserContext } from \"../App\";\nimport { Resizable } from \"react-resizable\";\nimport processMd from \"./markdown\";\nimport axios from \"axios\";\nimport { BASE_URL_DEV } from \"../utils\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport \"../style/resizable.css\";\n\nconst updateHash = (highlight) => {\n  document.location.hash = `highlight-${highlight.comment.text}-${highlight.id}`;\n};\n\nfunction FileViewer() {\n  const { state, dispatch } = useContext(UserContext);\n\n  const [highlights, setHighlights] = useState([]);\n  const [dimensions, setDimensions] = useState({\n    height: 720,\n    width: 250,\n  });\n  const [selectPdf, setSelectPdf] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const [index, setIndex] = useState();\n  const [currentHighlightIndex, setCurrentHighlightIndex] = useState(0);\n  const [filter, setFilter] = useState(\"\");\n\n  \n  const handlePreviousHighlight = () => {\n    const filteredHighlights = highlights.filter(h => h.comment.text.toUpperCase().includes(filter));\n    const currentFilteredIndex = filteredHighlights.findIndex(h => h === highlights[currentHighlightIndex]);\n    const prevIndex = (currentFilteredIndex - 1 + filteredHighlights.length) % filteredHighlights.length;\n    const prevHighlight = filteredHighlights[prevIndex];\n    setCurrentHighlightIndex(highlights.indexOf(prevHighlight));\n    updateHash(prevHighlight); // Update the hash to navigate\n  };\n    \n  const handleNextHighlight = () => {\n    const filteredHighlights = highlights.filter(h => h.comment.text.toUpperCase().includes(filter));\n    const currentFilteredIndex = filteredHighlights.findIndex(h => h === highlights[currentHighlightIndex]);\n    const nextIndex = (currentFilteredIndex + 1) % filteredHighlights.length;\n    \n    if (nextIndex === 0 && currentFilteredIndex === filteredHighlights.length - 1) {\n      alert(`End of '${filter}' highlights`);\n      return; // Stop at the last highlight if next would cycle back to the first\n    }\n  \n    const nextHighlight = filteredHighlights[nextIndex];\n    setCurrentHighlightIndex(highlights.indexOf(nextHighlight));\n    updateHash(nextHighlight); // Update the hash to navigate\n  };\n    \n  const handleClose = () => setShow(false);\n  useEffect(() => {\n    if (state.currentFile) {\n      let highlightUpdated = false;\n      state.fileHighlights.forEach((item) => {\n        if (item.name === state.currentFile.name) {\n          const filteredHighlights = item.highlights.filter(highlight => highlight.comment.text !== \"OTHER\" && (!filter || highlight.comment.text.toUpperCase().includes(filter)));\n          setHighlights(filteredHighlights);\n          highlightUpdated = true;\n        }\n      });\n      if (!highlightUpdated) setHighlights([]);\n    }\n  }, [state.currentFile, state.fileHighlights, filter]);  // Include 'filter' in dependency array\n    \n\n  const handleFileClick = async (index) => {\n    dispatch({ type: \"SET_CURR_FILE\", payload: state.files[index] });\n    dispatch({ type: \"SET_MODAL\", payload: false });\n\n    setSelectPdf(false);\n  };\n\n  const handleRemove = (index) => {\n    setShow(true);\n    setIndex(index);\n  }\n\n  const handleRemoveFile = (data) => {\n    console.log(data, \"File Remove....\")\n\n\n\n    if (state.files.length > 0) {\n      let arr = state.files\n      arr.splice(arr.findIndex(a => a.name === data.name), 1)\n      dispatch({ type: \"ADD_FILE\", payload: arr });\n      dispatch({ type: \"SET_CURR_FILE\", payload: state.files[0] });\n    } else {\n      dispatch({ type: \"ADD_FILE\", payload: [] });\n      dispatch({\n        type: \"SET_FILE_HIGHLIGHTS\",\n        payload: [],\n      });\n      dispatch({ type: \"SET_CURR_FILE\", payload: null });\n    }\n\n\n    setShow(false);\n\n\n    axios.post(`${BASE_URL_DEV}/deletePdfAndGraphData`, { fileName: data.name }, {\n      headers: {\n        'x-access-token': state.auth && state.auth.authToken,\n      }\n    })\n      .then(function (response) {\n        console.log(\"delete api response\", response)\n\n      })\n\n  }\n\n  const deleteHighlight = (index) => {\n    const updatedHighlights = highlights.filter((highlight, idx) => {\n      if (index !== idx) {\n        return highlight;\n      }\n    });\n    setHighlights(updatedHighlights);\n  };\n  const hideModal = () => {\n    setSelectPdf(false);\n    dispatch({ type: \"SET_MODAL\", payload: false });\n\n  }\n  const resetHighlights = () => {\n    setHighlights([]);\n  };\n\n  const handleSendToEditor = (highlight) => {\n    if (!highlight.comment || !highlight.content) {\n        console.error(\"Highlight structure is not as expected\", highlight);\n        return;\n    }\n\n    const payload = {\n        commentText: highlight.comment.text,\n        contentText: highlight.content.text,\n    };\n    dispatch({ type: 'ADD_HIGHLIGHT_TEXT', payload });\n};\n\n\n  return (\n//     <Resizable\n//       className=\"box\"\n//       height={dimensions.height}\n//       axis=\"x\"\n//       width={dimensions.width}\n//       onResize={(e, { size }) => {\n//         setDimensions({\n//           height: size.height,\n//           width: size.width,\n//         });\n//       }}\n//       resizeHandles={[\"e\"]}\n//     >\n//       <div\n//         className=\"sidebarnew\"\n//         style={{\n//           width: dimensions.width + 'px' || \"25%\",\n//           // minWidth: \"20%\",\n//           height: dimensions.height + 'px' || \"calc(100vh - 70px)\",\n//           overflowY: \"scroll\",\n//         }}\n//       >\n//         <div className=\"description\" style={{ padding: \"1rem\" }}>\n//           <h2 style={{ marginBottom: \"1rem\" }}>Highlights</h2>\n//           <p>\n//             <small>\n//               To create area highlight hold ⌥ Option key (Alt), then click and\n//               drag.\n//             </small>\n//           </p>\n//         </div>\n\n//         {/* <ul className=\"sidebar__highlights\">\n//           <li\n//             className=\"sidebar__highlight h4 bg-secondary\"\n//             onClick={() => setSelectPdf(true)}\n//           >\n//             Select Another File\n//           </li>\n//           {highlights.length > 0 ? (\n//             highlights.map((highlight, index) => (\n//               <li\n//                 key={index}\n//                 className=\"sidebar__highlight\"\n//                 onClick={() => {\n//                   updateHash(highlight);\n//                 }}\n//               >\n//                 <div>\n//                   <div style={{ padding: \"0px\" }}>\n//                     <button\n//                       style={{ float: \"right\" }}\n//                       onClick={() => deleteHighlight(index)}\n//                       className=\"sidebar__btn\"\n//                     >\n//                       <i className=\"fa fa-close\"></i>\n//                     </button>\n//                     </div>\n//                     <div>\n//                     <button\n//                       style={{ marginLeft: \"114px\" }}\n//                       onClick={(e) => {\n//                         e.stopPropagation();\n//                         handleSendToEditor(highlight);\n//                       }}\n//                       className=\"sidebar__btn_send\"\n//                     >\n//                       <FontAwesomeIcon icon={faPlus} />\n//                     </button>\n\n//                   </div>\n//                   <strong>{processMd(highlight.comment.text)}</strong>\n//                   {highlight.content.text ? (\n//                     <blockquote style={{ marginTop: \"0.5rem\" }}>\n//                       {`${highlight.content.text.slice(0, 90).trim()}…`}\n//                     </blockquote>\n//                   ) : null}\n//                   {highlight.content.image ? (\n//                     <div\n//                       className=\"highlight__image\"\n//                       style={{ marginTop: \"0.5rem\" }}\n//                     >\n//                       <img src={highlight.content.image} alt={\"Screenshot\"} />\n//                     </div>\n//                   ) : null}\n//                 </div>\n//                 <div className=\"highlight__location\">\n//                   Page {highlight.position.pageNumber}\n//                 </div>\n//               </li>\n//             ))\n//           ) : (\n//             <li className=\"sidebar__highlight\">\n//               <div className=\"p-2\">\n//                 <p style={{ margin: 0 }}>\n//                   No Highlights Available for Selected Pdf!\n//                 </p>\n//               </div>\n//             </li>\n//           )}\n//         </ul> */}\n\n// {/*  end of old list style for highlights sidebar */}\n\n\n// {/* new filter buttons */}\n\n// {/* <div className=\"filter-buttons\">\n//   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"ISSUE\")}>Issue</button>\n//   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"LEGAL_TEST\")}>Legal Test</button>\n//   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"CONCLUSION\")}>Conclusion</button>\n//   <button className=\"btn btn-secondary\" onClick={() => setFilter(\"\")}>Clear Filter</button>\n// </div> */}\n// <UncontrolledDropdown>\n//   <DropdownToggle caret color=\"secondary\">\n//     Filter Highlights\n//   </DropdownToggle>\n//   <DropdownMenu>\n//     <DropdownItem header>Jump to</DropdownItem>\n//     <DropdownItem onClick={() => setFilter(\"ISSUE\")}>Issue</DropdownItem>\n//     <DropdownItem onClick={() => setFilter(\"LEGAL_TEST\")}>Legal Test</DropdownItem>\n//     <DropdownItem onClick={() => setFilter(\"CONCLUSION\")}>Conclusion</DropdownItem>\n//     <DropdownItem divider />\n//   </DropdownMenu>\n// </UncontrolledDropdown>\n\n// {/* end of filter buttons */}\n\n// {/* begining of new slider card for highlights */}\n// <div className=\"sidebar__highlights\">\n//   {highlights.length > 0 ? (\n//     <div className=\"highlight-card\" key={currentHighlightIndex} onClick={() => updateHash(highlights[currentHighlightIndex])}>\n//       <div className=\"card-body\">\n//         <strong>{processMd(highlights[currentHighlightIndex].comment.text)}</strong>\n//         {highlights[currentHighlightIndex].content.text && (\n//           <blockquote>\n//             {`${highlights[currentHighlightIndex].content.text.slice(0, 90).trim()}…`}\n//           </blockquote>\n//         )}\n//         {highlights[currentHighlightIndex].content.image && (\n//           <div className=\"highlight__image\" style={{ marginTop: \"0.5rem\" }}>\n//             <img src={highlights[currentHighlightIndex].content.image} alt=\"Screenshot\" />\n//           </div>\n//         )}\n        \n//       </div>\n//     </div>\n//   ) : (\n//     <div className=\"no-highlights\">\n//       No Highlights Available for Selected Pdf!\n//     </div>\n//   )}\n// </div>\n\n//         <div className=\"highlight-actions\">\n//             <button className=\"btn btn-secondary\" onClick={(e) => {\n//               e.stopPropagation();\n//               handlePreviousHighlight();\n//             }}>Previous</button>\n//             <button className=\"btn btn-primary\" onClick={(e) => {\n//               e.stopPropagation();\n//               handleNextHighlight();\n//             }}>Next</button>\n//           </div>\n\n// {/* end of new slider highlight card */}\n\n\n//         {highlights.length > 0 ? (\n//           <div style={{ padding: \"1rem\" }}>\n//            {/* <button variant=\"primary\" onClick={resetHighlights}> Reset highlights</button> */}\n\n            \n//           </div>\n//         ) : null}\n//         <Modal\n//           style={{ color: \"#050505\" }}\n//           show={selectPdf || state.isModalOpen}\n//           onHide={() => hideModal()}\n//           backdrop=\"static\"\n//           size=\"xl\"\n//           centered={true}\n//         >\n//           <Modal.Header closeButton>\n//             <Modal.Title id=\"example-modal-sizes-title-sm\">\n//               Select File\n//             </Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n\n//             <div className=\"card\">\n//               <div className=\"card-body\" style={{ padding: '1.75rem 1.2rem' }}>\n//                 <div className=\"table-responsive\">\n\n//                   <table className=\"table table-hover\">\n//                     <thead>\n//                       <tr>\n//                         <th>PDF NAME</th>\n//                         <th>CITATION</th>\n//                         <th>PROVISION</th>\n//                         <th>ACTION</th>\n//                       </tr>\n//                     </thead>\n\n//                     <tbody>\n//                       {state.files && state.files.length > 0 ? (\n//                         state.files.map((pdf, index) => (\n//                           state.currentFile && state.currentFile.name === pdf.name ? (\n//                             <tr style={{ backgroundColor: \"rgba(0, 0, 0, 0.075)\", color: \"#212529\" }}>\n//                               <td>{pdf.name}</td>\n\n//                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.CITATION && pdf.CITATION.length > 0 && pdf.CITATION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n//                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.PROVISION && pdf.PROVISION.length > 0 && pdf.PROVISION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n\n//                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleFileClick(index)} className=\"btn btn-info btn-sm\">View File</button></td>\n//                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleRemove(pdf)} className=\"btn btn-danger btn-sm\">Delete File</button></td>\n//                             </tr>\n//                           ) : (\n//                             <tr>\n//                               <td>{pdf.name}</td>\n//                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.CITATION && pdf.CITATION.length > 0 && pdf.CITATION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n//                               <td style={{ lineHeight: 'inherit' }}><div style={{ overflowY: 'auto', maxHeight: '100px' }}>{pdf && pdf.PROVISION && pdf.PROVISION.length > 0 && pdf.PROVISION.map((listValue) => { return listValue.target }).join(' | ')}</div></td>\n//                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleFileClick(index)} className=\"btn btn-info btn-sm\">View File</button></td>\n//                               <td className=\"text-danger\"><button type=\"button\" onClick={() => handleRemove(pdf)} className=\"btn btn-danger btn-sm\">Delete File</button></td>\n//                             </tr>\n//                           )\n\n//                         ))) : (\n//                         <tr>\n//                           <td colSpan=\"4\" align=\"center\"><p style={{ margin: \"5px\" }}>No Pdfs uploaded!</p></td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n//             </div>\n//             {console.log(state)}\n//             {/* // <div\n//                 //   key={index}\n//                 //   className=\"btn btn-secondary w-100 rounded-0 py-3 my-1\"\n//                 //   onClick={() => handleFileClick(index)}\n//                 // >\n//                 //   {state.currentFile.name === pdf.name ? (\n//                 //     <strong>\n//                 //       <p style={{ margin: 0 }}>{pdf.name}</p>\n//                 //     </strong>\n//                 //   ) : (\n//                 //     <p style={{ margin: 0 }}>{pdf.name}</p>\n//                 //   )}\n//                 // </div>\n//                */}\n\n//           </Modal.Body>\n//         </Modal>\n//         <Modal\n//           style={{ color: \"#050505\" }}\n//           show={show}\n//           onHide={() => handleClose()}\n//           centered={true}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Deleting File</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>Are you sure you want to delete ?</Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"danger\" onClick={() => handleRemoveFile(index)}>\n//               Delete\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     </Resizable>\n//   );\n\n\n\n\n<Resizable className=\"box\" height={dimensions.height} width={dimensions.width} onResize={(e, { size }) => setDimensions({ height: size.height, width: size.width })} resizeHandles={[\"e\"]}>\n<div className=\"sidebarnew\" style={{\n    width: dimensions.width + 'px',\n    height: dimensions.height + 'px',\n    overflowY: \"scroll\",\n  }}>\n  {/* Descriptive and control elements */}\n  <div className=\"description\" style={{ padding: \"1rem\" }}>\n    <h2>Highlights</h2>\n    {/* Filtering dropdown */}\n    <UncontrolledDropdown>\n      <DropdownToggle caret color=\"secondary\">\n        Filter Highlights\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem header>Jump to</DropdownItem>\n        <DropdownItem onClick={() => setFilter(\"ISSUE\")}>Issue</DropdownItem>\n        <DropdownItem onClick={() => setFilter(\"LEGAL_TEST\")}>Legal Test</DropdownItem>\n        <DropdownItem onClick={() => setFilter(\"CONCLUSION\")}>Conclusion</DropdownItem>\n        <DropdownItem divider />\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  </div>\n  \n  {/* Highlight cards */}\n  <div className=\"sidebar__highlights\">\n    {highlights.length > 0 ? (\n      <div className=\"highlight-card\" key={currentHighlightIndex} onClick={() => updateHash(highlights[currentHighlightIndex])}>\n        <div className=\"card-body\">\n          <strong>{processMd(highlights[currentHighlightIndex].comment.text)}</strong>\n          {highlights[currentHighlightIndex].content.text && (\n            <blockquote>{`${highlights[currentHighlightIndex].content.text.slice(0, 90).trim()}…`}</blockquote>\n          )}\n          {highlights[currentHighlightIndex].content.image && (\n            <div className=\"highlight__image\" style={{ marginTop: \"0.5rem\" }}>\n              <img src={highlights[currentHighlightIndex].content.image} alt=\"Screenshot\" />\n            </div>\n          )}\n        </div>\n      </div>\n    ) : (\n      <div className=\"no-highlights\">No Highlights Available for Selected Pdf!</div>\n    )}\n  </div>\n\n  {/* Navigation buttons */}\n  <div className=\"highlight-actions\">\n    <button className=\"btn btn-secondary\" onClick={(e) => {\n      e.stopPropagation();\n      handlePreviousHighlight();\n    }}>Previous</button>\n    <button className=\"btn btn-primary\" onClick={(e) => {\n      e.stopPropagation();\n      handleNextHighlight();\n    }}>Next</button>\n  </div>\n</div>\n</Resizable>\n);\n}\n\nexport default FileViewer;\n"],"mappings":"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AC,EAAE,CAAC;EACnB,CAAC;EAED,MAAM6D,kBAAkB,GAAIxE,SAAS,IAAK;IACxC,IAAI,CAACA,SAAS,CAACI,OAAO,IAAI,CAACJ,SAAS,CAACyE,OAAO,EAAE;MAC1ClB,OAAO,CAACmB,KAAK,CAAC,wCAAwC,EAAE1E,SAAS,CAAC;MAClE;IACJ;IAEA,MAAMkD,OAAO,GAAG;MACZyB,WAAW,EAAE3E,SAAS,CAACI,OAAO,CAACC,IAAI;MACnCuE,WAAW,EAAE5E,SAAS,CAACyE,OAAO,CAACpE;IACnC,CAAC;IACDI,QAAQ,CAAC;MAAEwC,IAAI,EAAE,oBAAoB;MAAEC;IAAQ,CAAC,CAAC;EACrD,CAAC;EAGC;IAAA;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAGA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAGA;IACA;IACA;IAGA;IACA;IACA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","ignoreList":[]},"metadata":{},"sourceType":"module"}