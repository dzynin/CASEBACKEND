{"ast":null,"code":"/* tslint:disable:no-any */\nimport { Chart, AccumulationChart, AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel, DateTime, BarSeries, StackingBarSeries, LineSeries, StackingLineSeries, ColumnSeries, StackingColumnSeries, AreaSeries, StackingAreaSeries, Trendlines, ScatterSeries, BubbleSeries, RadarSeries, PolarSeries, ErrorBar, SplineSeries, DataLabel, Category, Legend, Tooltip, Export } from '@syncfusion/ej2-charts';\nChart.Inject(AreaSeries, StackingAreaSeries, BarSeries, PieSeries, StackingBarSeries, PolarSeries, ScatterSeries, BubbleSeries, RadarSeries, DateTime, ColumnSeries, StackingColumnSeries, LineSeries, StackingLineSeries, ErrorBar, Trendlines, SplineSeries, DataLabel, Category, Legend, Tooltip, Export);\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel);\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { chartTypeProperty, widthProperty, heightProperty, chartDataProperty, chartCategoryProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartSeriesProperty, chartTitleProperty, chartPrimaryValueAxisProperty, dataPointsProperty, seriesNameProperty, errorBarProperty, dataLabelProperty, trendLinesProperty, fillProperty, foreColorProperty, positionProperty, typeProperty, directionProperty, endStyleProperty, nameProperty, forwardProperty, backwardProperty, interceptProperty, lineProperty, rgbProperty, categoryTypeProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, minimumValueProperty, maximumValueProperty, majorUnitProperty, categoryXNameProperty, numberFormatProperty, yValueProperty, sizeProperty, seriesFormatProperty, idProperty, isAutoMajorProperty } from '../index';\n/**\n * Chart component is used to convert office charts to ej2-charts.\n */\nvar ChartComponent = /** @class */function () {\n  function ChartComponent() {\n    /**\n     * @private\n     */\n    this.keywordIndex = undefined;\n    /**\n     * @private\n     */\n    this.chartYValues = [];\n  }\n  /**\n   * @private\n   */\n  ChartComponent.prototype.chartRender = function (chart, keywordIndex) {\n    this.keywordIndex = !isNullOrUndefined(keywordIndex) ? keywordIndex : 0;\n    this.chartType = chart[chartTypeProperty[this.keywordIndex]];\n    this.isPieType = this.chartType === 'Pie' || this.chartType === 'Doughnut';\n    var chartData = this.chartData(chart, this.chartType);\n    var chartModel = {\n      enableAnimation: false,\n      width: chart[widthProperty[this.keywordIndex]] * (96 / 72) + 'px',\n      height: chart[heightProperty[this.keywordIndex]] * (96 / 72) + 'px'\n    };\n    if (this.isPieType) {\n      this.chart = new AccumulationChart(chartModel);\n    } else {\n      this.chart = new Chart(chartModel);\n      this.chart.primaryXAxis = this.chartPrimaryXAxis(chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]], this.chartType);\n      this.chart.primaryYAxis = this.chartPrimaryYAxis(chart[chartPrimaryValueAxisProperty[this.keywordIndex]]);\n    }\n    this.chart.series = this.chartSeries(chart[chartSeriesProperty[this.keywordIndex]], chartData, this.chartType);\n    for (var i = 0; i < this.chart.series.length; i++) {\n      this.chart.series[parseInt(i.toString(), 10)].animation.enable = false;\n    }\n    this.chart.title = chart[chartTitleProperty[this.keywordIndex]];\n    this.chart.legendSettings = this.parseChartLegend(chart[chartLegendProperty[this.keywordIndex]]);\n  };\n  /**\n   * @private\n   */\n  ChartComponent.prototype.convertChartToImage = function (chart, elementWidth, elementHeight) {\n    var _this = this;\n    var promise;\n    return promise = new Promise(function (resolve, reject) {\n      var width = 0;\n      var height = 0;\n      var dataInfo = _this.getControlsValue([chart], elementWidth, elementHeight);\n      width = width ? width : dataInfo.width;\n      height = height ? height : dataInfo.height;\n      var element = createElement('canvas');\n      var displayPixelRatio = Math.max(1, window.devicePixelRatio || 1);\n      element.width = width * displayPixelRatio;\n      element.height = height * displayPixelRatio;\n      element.style.width = width + 'px';\n      element.style.height = height + 'px';\n      // tslint:disable-next-line:max-line-length\n      var url = window.URL.createObjectURL(new Blob([new XMLSerializer().serializeToString(dataInfo.svg)], {\n        type: 'image/svg+xml'\n      }));\n      var image = new Image();\n      var canvasContext = element.getContext('2d');\n      canvasContext.scale(displayPixelRatio, displayPixelRatio);\n      image.onload = function () {\n        canvasContext.drawImage(image, 0, 0);\n        window.URL.revokeObjectURL(url);\n        var dataURL = element.toDataURL('image/png');\n        resolve(dataURL);\n      };\n      image.onerror = function () {\n        reject('Invalid data');\n      };\n      image.src = url;\n    });\n  };\n  ChartComponent.prototype.getControlsValue = function (controls, elementWidth, elementHeight) {\n    var width = 0;\n    var height = 0;\n    var content = '';\n    var svgRenderer = new SvgRenderer('').createSvg({\n      id: 'Image_Export',\n      width: 200,\n      height: 200\n    });\n    controls.map(function (control) {\n      if (control) {\n        var svgElement = control.svgObject.cloneNode(true);\n        var groupElement = control.renderer.createGroup({\n          style: 'transform: translateY(' + height + 'px)'\n        });\n        groupElement.appendChild(svgElement);\n        width = Math.max(control.availableSize.width, elementWidth);\n        height += control.availableSize.height;\n        content += control.svgObject.outerHTML;\n        svgRenderer.appendChild(groupElement);\n      }\n    });\n    svgRenderer.setAttribute('width', width + '');\n    svgRenderer.setAttribute('height', height + '');\n    return {\n      'width': width,\n      'height': height,\n      'svg': svgRenderer\n    };\n  };\n  ChartComponent.prototype.officeChartType = function (type) {\n    var chartType = '';\n    switch (type) {\n      case 'Area_Stacked':\n        chartType = 'StackingArea';\n        break;\n      case 'Area':\n        chartType = 'Area';\n        break;\n      case 'Area_Stacked_100':\n        chartType = 'StackingArea100';\n        break;\n      case 'Bar_Clustered':\n        chartType = 'Bar';\n        break;\n      case 'Bar_Stacked':\n        chartType = 'StackingBar';\n        break;\n      case 'Bar_Stacked_100':\n        chartType = 'StackingBar100';\n        break;\n      case 'Column_Clustered':\n        chartType = 'Column';\n        break;\n      case 'Column_Stacked':\n        chartType = 'StackingColumn';\n        break;\n      case 'Column_Stacked_100':\n        chartType = 'StackingColumn100';\n        break;\n      case 'Scatter_Markers':\n        chartType = 'Scatter';\n        break;\n      case 'Bubble':\n        chartType = 'Bubble';\n        break;\n      case 'Doughnut':\n      case 'Pie':\n        chartType = 'Pie';\n        break;\n      case 'Line_Stacked_100':\n      case 'Line_Markers_Stacked_100':\n        chartType = 'StackingLine100';\n        break;\n      case 'Line':\n      case 'Line_Markers':\n        chartType = 'Line';\n        break;\n      case 'Line_Stacked':\n      case 'Line_Markers_Stacked':\n        chartType = 'StackingLine';\n        break;\n    }\n    return chartType;\n  };\n  ChartComponent.prototype.chartSeries = function (series, data, type) {\n    // json data\n    var chartSeries = [];\n    for (var i = 0; i < series.length; i++) {\n      var seriesData = series[parseInt(i.toString(), 10)];\n      var seriesValue = this.writeChartSeries(seriesData, data, type, i);\n      chartSeries.push(seriesValue);\n    }\n    return chartSeries;\n  };\n  ChartComponent.prototype.writeChartSeries = function (seriesData, data, type, count) {\n    var chartType = this.officeChartType(type);\n    // let isAreaType: boolean = (type === 'Area_Stacked_100' || type === 'Area' || type === 'Area_Stacked');\n    var seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n    var series = {};\n    var fill;\n    series.type = chartType;\n    series.dataSource = data;\n    series.name = seriesData[seriesNameProperty[this.keywordIndex]];\n    series.xName = 'x';\n    series.yName = 'y' + count;\n    if (type === 'Bubble') {\n      series.size = 'size' + count;\n    }\n    if (this.isPieType) {\n      series.pointColorMapping = 'color';\n      if (type === 'Doughnut') {\n        series.innerRadius = '75%';\n        series.radius = '70%';\n      }\n    } else {\n      if (isNullOrUndefined(seriesFormat)) {\n        seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][0];\n      }\n      fill = this.chartFormat(seriesFormat, chartType);\n      series.fill = fill;\n      if (!isNullOrUndefined(seriesFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]])) {\n        series.pointColorMapping = 'color';\n      }\n    }\n    if (type === 'Line_Markers' || type === 'Line_Markers_Stacked' || type === 'Line_Markers_Stacked_100') {\n      series.marker = {\n        visible: true\n      };\n    }\n    if (seriesData.hasOwnProperty(dataLabelProperty[this.keywordIndex])) {\n      if (this.isPieType) {\n        series.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n      } else {\n        var data_1 = {};\n        data_1.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n        series.marker = data_1;\n      }\n    }\n    if (seriesData.hasOwnProperty(errorBarProperty[this.keywordIndex])) {\n      var errorBarData = seriesData[errorBarProperty[this.keywordIndex]];\n      series.errorBar = this.parseErrorBars(errorBarData);\n    }\n    if (seriesData.hasOwnProperty(trendLinesProperty[this.keywordIndex])) {\n      var trendLines = seriesData[trendLinesProperty[this.keywordIndex]];\n      var trendLinesData = [];\n      for (var count_1 = 0; count_1 < trendLines.length; count_1++) {\n        var trendLine = trendLines[parseInt(count_1.toString(), 10)];\n        var data_2 = {};\n        data_2 = this.parseTrendLines(trendLine, fill);\n        trendLinesData.push(data_2);\n        series.trendlines = trendLinesData;\n      }\n    }\n    return series;\n  };\n  ChartComponent.prototype.parseDataLabels = function (label) {\n    var dataLabel = {};\n    dataLabel.visible = true;\n    if (this.isPieType) {\n      if (label[positionProperty[this.keywordIndex]] === 'BestFit' || label[positionProperty[this.keywordIndex]] === 'Inside') {\n        dataLabel.position = 'Inside';\n      } else {\n        dataLabel.position = 'Outside';\n      }\n    } else {\n      dataLabel.position = this.dataLabelPosition(label[positionProperty[this.keywordIndex]]);\n    }\n    return dataLabel;\n  };\n  ChartComponent.prototype.parseErrorBars = function (errorBarData) {\n    var errorBar = {};\n    errorBar.visible = true;\n    errorBar.type = errorBarData[typeProperty[this.keywordIndex]];\n    errorBar.direction = errorBarData[directionProperty[this.keywordIndex]];\n    if (errorBarData[endStyleProperty[this.keywordIndex]] === 'Cap') {\n      errorBar.errorBarCap = {\n        width: 1\n      };\n    } else {\n      errorBar.errorBarCap = {\n        width: 0\n      };\n    }\n    return errorBar;\n  };\n  ChartComponent.prototype.parseTrendLines = function (trendLines, fill) {\n    var trendLine = {};\n    trendLine.type = trendLines[typeProperty[this.keywordIndex]];\n    trendLine.name = trendLines[nameProperty[this.keywordIndex]];\n    trendLine.forwardForecast = trendLines[forwardProperty[this.keywordIndex]];\n    trendLine.backwardForecast = trendLines[backwardProperty[this.keywordIndex]];\n    if (trendLines[interceptProperty[this.keywordIndex]] === 'NaN') {\n      trendLine.intercept = 0;\n    } else {\n      trendLine.intercept = trendLines[interceptProperty[this.keywordIndex]];\n    }\n    trendLine.fill = fill;\n    return trendLine;\n  };\n  ChartComponent.prototype.dataLabelPosition = function (position) {\n    var labelPosition = 'Auto';\n    switch (position) {\n      case 'Outside':\n        labelPosition = 'Outer';\n        break;\n      case 'Center':\n        labelPosition = 'Middle';\n        break;\n      case 'Inside':\n        labelPosition = 'Top';\n        break;\n      case 'OutsideBase':\n        labelPosition = 'Bottom';\n        break;\n    }\n    return labelPosition;\n  };\n  ChartComponent.prototype.chartFormat = function (dataPoints, type) {\n    var format = dataPoints;\n    if (type === 'Line' || type === 'StackingLine' || type === 'StackingLine100') {\n      return format[lineProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n    } else {\n      return format[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n    }\n  };\n  ChartComponent.prototype.chartPrimaryXAxis = function (data, type) {\n    // json data\n    var primaryXAxis = {};\n    if (data[chartTitleProperty[this.keywordIndex]]) {\n      primaryXAxis.title = data[chartTitleProperty[this.keywordIndex]];\n    }\n    var categoryType = this.chartCategoryType(data[categoryTypeProperty[this.keywordIndex]]);\n    primaryXAxis.valueType = categoryType;\n    if (categoryType === 'DateTime') {\n      primaryXAxis.intervalType = 'Days';\n      primaryXAxis.labelFormat = 'M/d/yyyy';\n      primaryXAxis.edgeLabelPlacement = 'Shift';\n    }\n    if (type === 'Scatter_Markers' || type === 'Bubble') {\n      this.checkAndSetAxisValue(primaryXAxis, data);\n    }\n    if (this.parseBoolValue(data[hasMajorGridLinesProperty[this.keywordIndex]])) {\n      primaryXAxis.majorGridLines = {\n        width: 1\n      };\n    }\n    if (this.parseBoolValue(data[hasMinorGridLinesProperty[this.keywordIndex]])) {\n      primaryXAxis.minorTicksPerInterval = 4;\n    }\n    return primaryXAxis;\n  };\n  ChartComponent.prototype.chartCategoryType = function (categoryType) {\n    var type = '';\n    switch (categoryType) {\n      case 'Time':\n        type = 'DateTime';\n        break;\n      case 'Automatic':\n        type = 'Category';\n        break;\n    }\n    return type;\n  };\n  ChartComponent.prototype.chartPrimaryYAxis = function (data) {\n    // json data\n    var primaryYAxis = {};\n    if (data[chartTitleProperty[this.keywordIndex]]) {\n      primaryYAxis.title = data[chartTitleProperty[this.keywordIndex]];\n    }\n    this.checkAndSetAxisValue(primaryYAxis, data);\n    if (data[hasMajorGridLinesProperty[this.keywordIndex]]) {\n      primaryYAxis.majorGridLines = {\n        width: 1\n      };\n    }\n    if (data[hasMinorGridLinesProperty[this.keywordIndex]]) {\n      primaryYAxis.minorTicksPerInterval = 4;\n    }\n    return primaryYAxis;\n  };\n  ChartComponent.prototype.checkAndSetAxisValue = function (primaryYAxis, data) {\n    if (data[minimumValueProperty[this.keywordIndex]] !== 0) {\n      primaryYAxis.minimum = data[minimumValueProperty[this.keywordIndex]];\n    }\n    if (data[maximumValueProperty[this.keywordIndex]] !== 0) {\n      primaryYAxis.maximum = data[maximumValueProperty[this.keywordIndex]];\n    }\n    if (data[majorUnitProperty[this.keywordIndex]] !== 0) {\n      var isAutoMajor = data[isAutoMajorProperty[this.keywordIndex]];\n      if (isAutoMajor && this.parseBoolValue(isAutoMajor)) {\n        primaryYAxis.interval = this.calculateMajorUnit(this.chartYValues);\n      } else {\n        primaryYAxis.interval = data[majorUnitProperty[this.keywordIndex]];\n      }\n    }\n  };\n  ChartComponent.prototype.calculateMajorUnit = function (chartYValues) {\n    if (chartYValues && chartYValues.length > 0) {\n      var maxValue = Number.MIN_VALUE;\n      var minValue = Number.MAX_VALUE;\n      for (var i = 0; i < chartYValues.length; i++) {\n        var yValue = chartYValues[parseInt(i.toString(), 10)];\n        if (yValue > maxValue) {\n          maxValue = yValue;\n        }\n        if (yValue < minValue) {\n          minValue = yValue;\n        }\n      }\n      var range = maxValue - minValue;\n      var intervalSize = range / 1.5;\n      return this.roundToNiceNumber(intervalSize);\n    }\n    return 1;\n  };\n  ChartComponent.prototype.roundToNiceNumber = function (range) {\n    var log10 = Math.floor(Math.log(range) / Math.log(10));\n    var pow10 = Math.pow(10, log10);\n    var frac = range / pow10;\n    if (frac < 1.5) {\n      return 1 * pow10;\n    } else if (frac < 3) {\n      return 2 * pow10;\n    } else if (frac < 7) {\n      return 5 * pow10;\n    } else {\n      return 10 * pow10;\n    }\n  };\n  ChartComponent.prototype.chartData = function (chart, type) {\n    // json data\n    var data = chart[chartCategoryProperty[this.keywordIndex]];\n    var chartData = [];\n    for (var i = 0; i < data.length; i++) {\n      var xData = data[parseInt(i.toString(), 10)];\n      var plotValue = this.chartPlotData(xData, chart, type, i);\n      chartData.push(plotValue);\n    }\n    return chartData;\n  };\n  ChartComponent.prototype.chartPlotData = function (data, chart, type, count) {\n    var _this = this;\n    var plotValue = {};\n    var series = chart[chartSeriesProperty[this.keywordIndex]];\n    if (chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]] === 'm/d/yyyy') {\n      var date = data[categoryXNameProperty[this.keywordIndex]];\n      var array = date.split('/');\n      var month = Number(array[0]);\n      var day = Number(array[1]);\n      var year = Number(array[2]);\n      plotValue.x = new Date(year, month - 1, day);\n    } else {\n      plotValue.x = data[categoryXNameProperty[this.keywordIndex]];\n    }\n    for (var j = 0; j < series.length; j++) {\n      var yData = data[chartDataProperty[this.keywordIndex]][parseInt(j.toString(), 10)];\n      var yValue = yData[yValueProperty[this.keywordIndex]];\n      this.chartYValues.push(yValue);\n      plotValue['y' + j] = yValue;\n      if (type === 'Bubble') {\n        plotValue['size' + j] = yData[sizeProperty[this.keywordIndex]];\n      }\n      if (chart[chartTypeProperty[this.keywordIndex]] === 'Pie' || chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked') {\n        var seriesData = series[parseInt(j.toString(), 10)];\n        var seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]].find(function (obj) {\n          return obj[idProperty[_this.keywordIndex]] === count;\n        });\n        if (!isNullOrUndefined(seriesDataPoints)) {\n          plotValue.color = this.chartFormat(seriesDataPoints, type);\n        } else {\n          if (seriesData[dataPointsProperty[this.keywordIndex]].length > 1 && seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)][idProperty[this.keywordIndex]] === 0) {\n            seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n            plotValue.color = this.chartFormat(seriesDataPoints, type);\n          } else {\n            if (!isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]]) && !isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]])) {\n              if (seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]].length > 7) {\n                plotValue.color = this.getColor(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return plotValue;\n  };\n  ChartComponent.prototype.getColor = function (color) {\n    if (color.length > 0) {\n      if (color[0] === '#') {\n        if (color.length > 7) {\n          return color.substr(0, 7);\n        }\n      }\n    }\n    return color;\n  };\n  ChartComponent.prototype.parseChartLegend = function (data) {\n    var legendSettings = {};\n    var position = data[positionProperty[this.keywordIndex]];\n    if (position === 'Corner') {\n      position = 'right';\n    }\n    if (position) {\n      legendSettings.visible = true;\n      legendSettings.position = position.charAt(0).toUpperCase() + position.slice(1);\n    } else {\n      legendSettings.visible = false;\n    }\n    return legendSettings;\n  };\n  ChartComponent.prototype.parseBoolValue = function (value) {\n    if (value instanceof String) {\n      if (isNullOrUndefined(value) || value == \"f\" || value == \"0\" || value == \"off\" || value == \"false\") {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (value == 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\n   * Destroys the internal objects which is maintained.\n   */\n  ChartComponent.prototype.destroy = function () {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n    this.chart = undefined;\n    if (this.chartYValues) {\n      this.chartYValues = [];\n    }\n    this.chartYValues = undefined;\n  };\n  return ChartComponent;\n}();\nexport { ChartComponent };","map":{"version":3,"names":["Chart","AccumulationChart","AccumulationLegend","PieSeries","AccumulationTooltip","AccumulationDataLabel","DateTime","BarSeries","StackingBarSeries","LineSeries","StackingLineSeries","ColumnSeries","StackingColumnSeries","AreaSeries","StackingAreaSeries","Trendlines","ScatterSeries","BubbleSeries","RadarSeries","PolarSeries","ErrorBar","SplineSeries","DataLabel","Category","Legend","Tooltip","Export","Inject","SvgRenderer","createElement","isNullOrUndefined","chartTypeProperty","widthProperty","heightProperty","chartDataProperty","chartCategoryProperty","chartLegendProperty","chartPrimaryCategoryAxisProperty","chartSeriesProperty","chartTitleProperty","chartPrimaryValueAxisProperty","dataPointsProperty","seriesNameProperty","errorBarProperty","dataLabelProperty","trendLinesProperty","fillProperty","foreColorProperty","positionProperty","typeProperty","directionProperty","endStyleProperty","nameProperty","forwardProperty","backwardProperty","interceptProperty","lineProperty","rgbProperty","categoryTypeProperty","hasMajorGridLinesProperty","hasMinorGridLinesProperty","minimumValueProperty","maximumValueProperty","majorUnitProperty","categoryXNameProperty","numberFormatProperty","yValueProperty","sizeProperty","seriesFormatProperty","idProperty","isAutoMajorProperty","ChartComponent","keywordIndex","undefined","chartYValues","prototype","chartRender","chart","chartType","isPieType","chartData","chartModel","enableAnimation","width","height","primaryXAxis","chartPrimaryXAxis","primaryYAxis","chartPrimaryYAxis","series","chartSeries","i","length","parseInt","toString","animation","enable","title","legendSettings","parseChartLegend","convertChartToImage","elementWidth","elementHeight","_this","promise","Promise","resolve","reject","dataInfo","getControlsValue","element","displayPixelRatio","Math","max","window","devicePixelRatio","style","url","URL","createObjectURL","Blob","XMLSerializer","serializeToString","svg","type","image","Image","canvasContext","getContext","scale","onload","drawImage","revokeObjectURL","dataURL","toDataURL","onerror","src","controls","content","svgRenderer","createSvg","id","map","control","svgElement","svgObject","cloneNode","groupElement","renderer","createGroup","appendChild","availableSize","outerHTML","setAttribute","officeChartType","data","seriesData","seriesValue","writeChartSeries","push","count","seriesFormat","fill","dataSource","name","xName","yName","size","pointColorMapping","innerRadius","radius","chartFormat","marker","visible","hasOwnProperty","dataLabel","parseDataLabels","data_1","errorBarData","errorBar","parseErrorBars","trendLines","trendLinesData","count_1","trendLine","data_2","parseTrendLines","trendlines","label","position","dataLabelPosition","direction","errorBarCap","forwardForecast","backwardForecast","intercept","labelPosition","dataPoints","format","categoryType","chartCategoryType","valueType","intervalType","labelFormat","edgeLabelPlacement","checkAndSetAxisValue","parseBoolValue","majorGridLines","minorTicksPerInterval","minimum","maximum","isAutoMajor","interval","calculateMajorUnit","maxValue","Number","MIN_VALUE","minValue","MAX_VALUE","yValue","range","intervalSize","roundToNiceNumber","log10","floor","log","pow10","pow","frac","xData","plotValue","chartPlotData","date","array","split","month","day","year","x","Date","j","yData","seriesDataPoints","find","obj","color","getColor","substr","charAt","toUpperCase","slice","value","String","destroy"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-office-chart/src/office-chart/chart.js"],"sourcesContent":["/* tslint:disable:no-any */\nimport { Chart, AccumulationChart, AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel, DateTime, BarSeries, StackingBarSeries, LineSeries, StackingLineSeries, ColumnSeries, StackingColumnSeries, AreaSeries, StackingAreaSeries, Trendlines, ScatterSeries, BubbleSeries, RadarSeries, PolarSeries, ErrorBar, SplineSeries, DataLabel, Category, Legend, Tooltip, Export } from '@syncfusion/ej2-charts';\nChart.Inject(AreaSeries, StackingAreaSeries, BarSeries, PieSeries, StackingBarSeries, PolarSeries, ScatterSeries, BubbleSeries, RadarSeries, DateTime, ColumnSeries, StackingColumnSeries, LineSeries, StackingLineSeries, ErrorBar, Trendlines, SplineSeries, DataLabel, Category, Legend, Tooltip, Export);\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel);\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { chartTypeProperty, widthProperty, heightProperty, chartDataProperty, chartCategoryProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartSeriesProperty, chartTitleProperty, chartPrimaryValueAxisProperty, dataPointsProperty, seriesNameProperty, errorBarProperty, dataLabelProperty, trendLinesProperty, fillProperty, foreColorProperty, positionProperty, typeProperty, directionProperty, endStyleProperty, nameProperty, forwardProperty, backwardProperty, interceptProperty, lineProperty, rgbProperty, categoryTypeProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, minimumValueProperty, maximumValueProperty, majorUnitProperty, categoryXNameProperty, numberFormatProperty, yValueProperty, sizeProperty, seriesFormatProperty, idProperty, isAutoMajorProperty } from '../index';\n/**\n * Chart component is used to convert office charts to ej2-charts.\n */\nvar ChartComponent = /** @class */ (function () {\n    function ChartComponent() {\n        /**\n         * @private\n         */\n        this.keywordIndex = undefined;\n        /**\n         * @private\n         */\n        this.chartYValues = [];\n    }\n    /**\n     * @private\n     */\n    ChartComponent.prototype.chartRender = function (chart, keywordIndex) {\n        this.keywordIndex = !isNullOrUndefined(keywordIndex) ? keywordIndex : 0;\n        this.chartType = chart[chartTypeProperty[this.keywordIndex]];\n        this.isPieType = (this.chartType === 'Pie' || this.chartType === 'Doughnut');\n        var chartData = this.chartData(chart, this.chartType);\n        var chartModel = {\n            enableAnimation: false,\n            width: chart[widthProperty[this.keywordIndex]] * (96 / 72) + 'px',\n            height: chart[heightProperty[this.keywordIndex]] * (96 / 72) + 'px'\n        };\n        if (this.isPieType) {\n            this.chart = new AccumulationChart(chartModel);\n        }\n        else {\n            this.chart = new Chart(chartModel);\n            this.chart.primaryXAxis = this.chartPrimaryXAxis(chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]], this.chartType);\n            this.chart.primaryYAxis = this.chartPrimaryYAxis(chart[chartPrimaryValueAxisProperty[this.keywordIndex]]);\n        }\n        this.chart.series = this.chartSeries(chart[chartSeriesProperty[this.keywordIndex]], chartData, this.chartType);\n        for (var i = 0; i < this.chart.series.length; i++) {\n            this.chart.series[parseInt(i.toString(), 10)].animation.enable = false;\n        }\n        this.chart.title = chart[chartTitleProperty[this.keywordIndex]];\n        this.chart.legendSettings = this.parseChartLegend(chart[chartLegendProperty[this.keywordIndex]]);\n    };\n    /**\n     * @private\n     */\n    ChartComponent.prototype.convertChartToImage = function (chart, elementWidth, elementHeight) {\n        var _this = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            var width = 0;\n            var height = 0;\n            var dataInfo = _this.getControlsValue([chart], elementWidth, elementHeight);\n            width = width ? width : dataInfo.width;\n            height = height ? height : dataInfo.height;\n            var element = createElement('canvas');\n            var displayPixelRatio = Math.max(1, window.devicePixelRatio || 1);\n            element.width = width * (displayPixelRatio);\n            element.height = height * (displayPixelRatio);\n            element.style.width = width + 'px';\n            element.style.height = height + 'px';\n            // tslint:disable-next-line:max-line-length\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(dataInfo.svg)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var canvasContext = element.getContext('2d');\n            canvasContext.scale(displayPixelRatio, displayPixelRatio);\n            image.onload = (function () {\n                canvasContext.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var dataURL = element.toDataURL('image/png');\n                resolve(dataURL);\n            });\n            image.onerror = (function () {\n                reject('Invalid data');\n            });\n            image.src = url;\n        });\n    };\n    ChartComponent.prototype.getControlsValue = function (controls, elementWidth, elementHeight) {\n        var width = 0;\n        var height = 0;\n        var content = '';\n        var svgRenderer = new SvgRenderer('').createSvg({\n            id: 'Image_Export',\n            width: 200, height: 200\n        });\n        controls.map(function (control) {\n            if (control) {\n                var svgElement = control.svgObject.cloneNode(true);\n                var groupElement = control.renderer.createGroup({\n                    style: 'transform: translateY(' + height + 'px)'\n                });\n                groupElement.appendChild(svgElement);\n                width = Math.max(control.availableSize.width, elementWidth);\n                height += control.availableSize.height;\n                content += control.svgObject.outerHTML;\n                svgRenderer.appendChild(groupElement);\n            }\n        });\n        svgRenderer.setAttribute('width', width + '');\n        svgRenderer.setAttribute('height', height + '');\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgRenderer\n        };\n    };\n    ChartComponent.prototype.officeChartType = function (type) {\n        var chartType = '';\n        switch (type) {\n            case 'Area_Stacked':\n                chartType = 'StackingArea';\n                break;\n            case 'Area':\n                chartType = 'Area';\n                break;\n            case 'Area_Stacked_100':\n                chartType = 'StackingArea100';\n                break;\n            case 'Bar_Clustered':\n                chartType = 'Bar';\n                break;\n            case 'Bar_Stacked':\n                chartType = 'StackingBar';\n                break;\n            case 'Bar_Stacked_100':\n                chartType = 'StackingBar100';\n                break;\n            case 'Column_Clustered':\n                chartType = 'Column';\n                break;\n            case 'Column_Stacked':\n                chartType = 'StackingColumn';\n                break;\n            case 'Column_Stacked_100':\n                chartType = 'StackingColumn100';\n                break;\n            case 'Scatter_Markers':\n                chartType = 'Scatter';\n                break;\n            case 'Bubble':\n                chartType = 'Bubble';\n                break;\n            case 'Doughnut':\n            case 'Pie':\n                chartType = 'Pie';\n                break;\n            case 'Line_Stacked_100':\n            case 'Line_Markers_Stacked_100':\n                chartType = 'StackingLine100';\n                break;\n            case 'Line':\n            case 'Line_Markers':\n                chartType = 'Line';\n                break;\n            case 'Line_Stacked':\n            case 'Line_Markers_Stacked':\n                chartType = 'StackingLine';\n                break;\n        }\n        return chartType;\n    };\n    ChartComponent.prototype.chartSeries = function (series, data, type) {\n        // json data\n        var chartSeries = [];\n        for (var i = 0; i < series.length; i++) {\n            var seriesData = series[parseInt(i.toString(), 10)];\n            var seriesValue = this.writeChartSeries(seriesData, data, type, i);\n            chartSeries.push(seriesValue);\n        }\n        return chartSeries;\n    };\n    ChartComponent.prototype.writeChartSeries = function (seriesData, data, type, count) {\n        var chartType = this.officeChartType(type);\n        // let isAreaType: boolean = (type === 'Area_Stacked_100' || type === 'Area' || type === 'Area_Stacked');\n        var seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n        var series = {};\n        var fill;\n        series.type = chartType;\n        series.dataSource = data;\n        series.name = seriesData[seriesNameProperty[this.keywordIndex]];\n        series.xName = 'x';\n        series.yName = 'y' + count;\n        if (type === 'Bubble') {\n            series.size = 'size' + count;\n        }\n        if (this.isPieType) {\n            series.pointColorMapping = 'color';\n            if (type === 'Doughnut') {\n                series.innerRadius = '75%';\n                series.radius = '70%';\n            }\n        }\n        else {\n            if (isNullOrUndefined(seriesFormat)) {\n                seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][0];\n            }\n            fill = this.chartFormat(seriesFormat, chartType);\n            series.fill = fill;\n            if (!isNullOrUndefined(seriesFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]])) {\n                series.pointColorMapping = 'color';\n            }\n        }\n        if (type === 'Line_Markers' || type === 'Line_Markers_Stacked' || type === 'Line_Markers_Stacked_100') {\n            series.marker = { visible: true };\n        }\n        if (seriesData.hasOwnProperty(dataLabelProperty[this.keywordIndex])) {\n            if (this.isPieType) {\n                series.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n            }\n            else {\n                var data_1 = {};\n                data_1.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n                series.marker = data_1;\n            }\n        }\n        if (seriesData.hasOwnProperty(errorBarProperty[this.keywordIndex])) {\n            var errorBarData = seriesData[errorBarProperty[this.keywordIndex]];\n            series.errorBar = this.parseErrorBars(errorBarData);\n        }\n        if (seriesData.hasOwnProperty(trendLinesProperty[this.keywordIndex])) {\n            var trendLines = seriesData[trendLinesProperty[this.keywordIndex]];\n            var trendLinesData = [];\n            for (var count_1 = 0; count_1 < trendLines.length; count_1++) {\n                var trendLine = trendLines[parseInt(count_1.toString(), 10)];\n                var data_2 = {};\n                data_2 = this.parseTrendLines(trendLine, fill);\n                trendLinesData.push(data_2);\n                series.trendlines = trendLinesData;\n            }\n        }\n        return series;\n    };\n    ChartComponent.prototype.parseDataLabels = function (label) {\n        var dataLabel = {};\n        dataLabel.visible = true;\n        if (this.isPieType) {\n            if (label[positionProperty[this.keywordIndex]] === 'BestFit' || label[positionProperty[this.keywordIndex]] === 'Inside') {\n                dataLabel.position = 'Inside';\n            }\n            else {\n                dataLabel.position = 'Outside';\n            }\n        }\n        else {\n            dataLabel.position = this.dataLabelPosition(label[positionProperty[this.keywordIndex]]);\n        }\n        return dataLabel;\n    };\n    ChartComponent.prototype.parseErrorBars = function (errorBarData) {\n        var errorBar = {};\n        errorBar.visible = true;\n        errorBar.type = errorBarData[typeProperty[this.keywordIndex]];\n        errorBar.direction = errorBarData[directionProperty[this.keywordIndex]];\n        if (errorBarData[endStyleProperty[this.keywordIndex]] === 'Cap') {\n            errorBar.errorBarCap = { width: 1 };\n        }\n        else {\n            errorBar.errorBarCap = { width: 0 };\n        }\n        return errorBar;\n    };\n    ChartComponent.prototype.parseTrendLines = function (trendLines, fill) {\n        var trendLine = {};\n        trendLine.type = trendLines[typeProperty[this.keywordIndex]];\n        trendLine.name = trendLines[nameProperty[this.keywordIndex]];\n        trendLine.forwardForecast = trendLines[forwardProperty[this.keywordIndex]];\n        trendLine.backwardForecast = trendLines[backwardProperty[this.keywordIndex]];\n        if (trendLines[interceptProperty[this.keywordIndex]] === 'NaN') {\n            trendLine.intercept = 0;\n        }\n        else {\n            trendLine.intercept = trendLines[interceptProperty[this.keywordIndex]];\n        }\n        trendLine.fill = fill;\n        return trendLine;\n    };\n    ChartComponent.prototype.dataLabelPosition = function (position) {\n        var labelPosition = 'Auto';\n        switch (position) {\n            case 'Outside':\n                labelPosition = 'Outer';\n                break;\n            case 'Center':\n                labelPosition = 'Middle';\n                break;\n            case 'Inside':\n                labelPosition = 'Top';\n                break;\n            case 'OutsideBase':\n                labelPosition = 'Bottom';\n                break;\n        }\n        return labelPosition;\n    };\n    ChartComponent.prototype.chartFormat = function (dataPoints, type) {\n        var format = dataPoints;\n        if (type === 'Line' || type === 'StackingLine' || type === 'StackingLine100') {\n            return format[lineProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n        }\n        else {\n            return format[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n        }\n    };\n    ChartComponent.prototype.chartPrimaryXAxis = function (data, type) {\n        // json data\n        var primaryXAxis = {};\n        if (data[chartTitleProperty[this.keywordIndex]]) {\n            primaryXAxis.title = data[chartTitleProperty[this.keywordIndex]];\n        }\n        var categoryType = this.chartCategoryType(data[categoryTypeProperty[this.keywordIndex]]);\n        primaryXAxis.valueType = categoryType;\n        if (categoryType === 'DateTime') {\n            primaryXAxis.intervalType = 'Days';\n            primaryXAxis.labelFormat = 'M/d/yyyy';\n            primaryXAxis.edgeLabelPlacement = 'Shift';\n        }\n        if (type === 'Scatter_Markers' || type === 'Bubble') {\n            this.checkAndSetAxisValue(primaryXAxis, data);\n        }\n        if (this.parseBoolValue(data[hasMajorGridLinesProperty[this.keywordIndex]])) {\n            primaryXAxis.majorGridLines = { width: 1 };\n        }\n        if (this.parseBoolValue(data[hasMinorGridLinesProperty[this.keywordIndex]])) {\n            primaryXAxis.minorTicksPerInterval = 4;\n        }\n        return primaryXAxis;\n    };\n    ChartComponent.prototype.chartCategoryType = function (categoryType) {\n        var type = '';\n        switch (categoryType) {\n            case 'Time':\n                type = 'DateTime';\n                break;\n            case 'Automatic':\n                type = 'Category';\n                break;\n        }\n        return type;\n    };\n    ChartComponent.prototype.chartPrimaryYAxis = function (data) {\n        // json data\n        var primaryYAxis = {};\n        if (data[chartTitleProperty[this.keywordIndex]]) {\n            primaryYAxis.title = data[chartTitleProperty[this.keywordIndex]];\n        }\n        this.checkAndSetAxisValue(primaryYAxis, data);\n        if (data[hasMajorGridLinesProperty[this.keywordIndex]]) {\n            primaryYAxis.majorGridLines = { width: 1 };\n        }\n        if (data[hasMinorGridLinesProperty[this.keywordIndex]]) {\n            primaryYAxis.minorTicksPerInterval = 4;\n        }\n        return primaryYAxis;\n    };\n    ChartComponent.prototype.checkAndSetAxisValue = function (primaryYAxis, data) {\n        if (data[minimumValueProperty[this.keywordIndex]] !== 0) {\n            primaryYAxis.minimum = data[minimumValueProperty[this.keywordIndex]];\n        }\n        if (data[maximumValueProperty[this.keywordIndex]] !== 0) {\n            primaryYAxis.maximum = data[maximumValueProperty[this.keywordIndex]];\n        }\n        if (data[majorUnitProperty[this.keywordIndex]] !== 0) {\n            var isAutoMajor = data[isAutoMajorProperty[this.keywordIndex]];\n            if (isAutoMajor && this.parseBoolValue(isAutoMajor)) {\n                primaryYAxis.interval = this.calculateMajorUnit(this.chartYValues);\n            }\n            else {\n                primaryYAxis.interval = data[majorUnitProperty[this.keywordIndex]];\n            }\n        }\n    };\n    ChartComponent.prototype.calculateMajorUnit = function (chartYValues) {\n        if (chartYValues && chartYValues.length > 0) {\n            var maxValue = Number.MIN_VALUE;\n            var minValue = Number.MAX_VALUE;\n            for (var i = 0; i < chartYValues.length; i++) {\n                var yValue = chartYValues[parseInt(i.toString(), 10)];\n                if (yValue > maxValue) {\n                    maxValue = yValue;\n                }\n                if (yValue < minValue) {\n                    minValue = yValue;\n                }\n            }\n            var range = maxValue - minValue;\n            var intervalSize = range / 1.5;\n            return this.roundToNiceNumber(intervalSize);\n        }\n        return 1;\n    };\n    ChartComponent.prototype.roundToNiceNumber = function (range) {\n        var log10 = Math.floor(Math.log(range) / Math.log(10));\n        var pow10 = Math.pow(10, log10);\n        var frac = range / pow10;\n        if (frac < 1.5) {\n            return 1 * pow10;\n        }\n        else if (frac < 3) {\n            return 2 * pow10;\n        }\n        else if (frac < 7) {\n            return 5 * pow10;\n        }\n        else {\n            return 10 * pow10;\n        }\n    };\n    ChartComponent.prototype.chartData = function (chart, type) {\n        // json data\n        var data = chart[chartCategoryProperty[this.keywordIndex]];\n        var chartData = [];\n        for (var i = 0; i < data.length; i++) {\n            var xData = data[parseInt(i.toString(), 10)];\n            var plotValue = this.chartPlotData(xData, chart, type, i);\n            chartData.push(plotValue);\n        }\n        return chartData;\n    };\n    ChartComponent.prototype.chartPlotData = function (data, chart, type, count) {\n        var _this = this;\n        var plotValue = {};\n        var series = chart[chartSeriesProperty[this.keywordIndex]];\n        if (chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]] === 'm/d/yyyy') {\n            var date = data[categoryXNameProperty[this.keywordIndex]];\n            var array = date.split('/');\n            var month = Number(array[0]);\n            var day = Number(array[1]);\n            var year = Number(array[2]);\n            plotValue.x = new Date(year, month - 1, day);\n        }\n        else {\n            plotValue.x = data[categoryXNameProperty[this.keywordIndex]];\n        }\n        for (var j = 0; j < series.length; j++) {\n            var yData = data[chartDataProperty[this.keywordIndex]][parseInt(j.toString(), 10)];\n            var yValue = yData[yValueProperty[this.keywordIndex]];\n            this.chartYValues.push(yValue);\n            plotValue['y' + j] = yValue;\n            if (type === 'Bubble') {\n                plotValue['size' + j] = yData[sizeProperty[this.keywordIndex]];\n            }\n            if (chart[chartTypeProperty[this.keywordIndex]] === 'Pie' || chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked') {\n                var seriesData = series[parseInt(j.toString(), 10)];\n                var seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]].find(function (obj) {\n                    return obj[idProperty[_this.keywordIndex]] === count;\n                });\n                if (!isNullOrUndefined(seriesDataPoints)) {\n                    plotValue.color = this.chartFormat(seriesDataPoints, type);\n                }\n                else {\n                    if (seriesData[dataPointsProperty[this.keywordIndex]].length > 1 && seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)][idProperty[this.keywordIndex]] === 0) {\n                        seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n                        plotValue.color = this.chartFormat(seriesDataPoints, type);\n                    }\n                    else {\n                        if (!isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]]) && !isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]])) {\n                            if (seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]].length > 7) {\n                                plotValue.color = this.getColor(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return plotValue;\n    };\n    ChartComponent.prototype.getColor = function (color) {\n        if (color.length > 0) {\n            if (color[0] === '#') {\n                if (color.length > 7) {\n                    return color.substr(0, 7);\n                }\n            }\n        }\n        return color;\n    };\n    ChartComponent.prototype.parseChartLegend = function (data) {\n        var legendSettings = {};\n        var position = data[positionProperty[this.keywordIndex]];\n        if (position === 'Corner') {\n            position = 'right';\n        }\n        if (position) {\n            legendSettings.visible = true;\n            legendSettings.position = position.charAt(0).toUpperCase() + position.slice(1);\n        }\n        else {\n            legendSettings.visible = false;\n        }\n        return legendSettings;\n    };\n    ChartComponent.prototype.parseBoolValue = function (value) {\n        if (value instanceof String) {\n            if (isNullOrUndefined(value) || value == \"f\" || value == \"0\" || value == \"off\" || value == \"false\") {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (value == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Destroys the internal objects which is maintained.\n     */\n    ChartComponent.prototype.destroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n        this.chart = undefined;\n        if (this.chartYValues) {\n            this.chartYValues = [];\n        }\n        this.chartYValues = undefined;\n    };\n    return ChartComponent;\n}());\nexport { ChartComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}