{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/TextAnonymizer.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Button, Alert, Spinner } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { BASE_URL_DEV } from \"../utils\";\nexport default class TextAnonymizer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      entities: {\n        PERSON: true,\n        DATE: false,\n        NORP: false,\n        ORG: false,\n        GPE: false,\n        LANGUAGE: false,\n        MONEY: false\n      },\n      fake_names: false,\n      text: \"\",\n      alert: false,\n      showResult: false,\n      result: \"\",\n      postRequested: false,\n      inProgress: false\n    };\n    this.fileRef = new React.createRef();\n\n    this.setEntities = event => {\n      let entities = this.state.entities;\n      entities[event.target.name] = event.target.checked;\n      this.setState(() => ({\n        entities: entities\n      }));\n    };\n\n    this.handleFictional = () => {\n      this.setState(oldState => ({\n        fake_names: !oldState.fake_names\n      }));\n    };\n\n    this.handleTextChange = event => {\n      let new_value = event.target.value;\n      this.setState(() => ({\n        text: new_value\n      }));\n    };\n\n    this.handleCopyText = async () => {\n      navigator.clipboard.writeText(this.state.result).then(() => {\n        console.log(\"text copied\");\n      }).catch(err => {\n        console.log('Something went wrong', err);\n      });\n    };\n\n    this.handleTextAnonymize = async () => {\n      try {\n        this.setState(() => ({\n          postRequested: true,\n          inProgress: true\n        }));\n        const entities = this.state.entities;\n        let entitiesArray = [];\n        Object.keys(entities).forEach(entity => {\n          if (entities[entity] === true) {\n            entitiesArray.push(entity);\n          }\n        });\n        const result = await axios.post(`${BASE_URL_DEV}/textanonymizer`, {\n          fake_names: this.state.fake_names,\n          text: this.state.text,\n          entities: entitiesArray\n        });\n        console.log(result);\n        this.setState(() => ({\n          result: result.data,\n          showResult: true,\n          postRequested: false,\n          inProgress: false\n        }));\n      } catch (error) {\n        console.log(\"error\", error);\n        this.setState(() => ({\n          alert: true,\n          postRequested: false,\n          inProgress: false\n        }));\n      }\n    };\n\n    this.removeAlert = () => {\n      this.setState(() => ({\n        alert: false\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-view  bg-dark p-5 text-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"d-flex jusitify-content-center flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, \"Which type of names would you like to anonymize?\"), /*#__PURE__*/React.createElement(Form.Check, {\n      as: \"input\",\n      type: \"switch\",\n      id: \"switch-person\",\n      label: \"Person\",\n      checked: this.state.entities.PERSON,\n      onChange: this.setEntities,\n      name: \"PERSON\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-date\",\n      label: \"Date\",\n      checked: this.state.entities.DATE,\n      onChange: this.setEntities,\n      name: \"DATE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-norp\",\n      label: \"Nationalities or religious or political groups\",\n      checked: this.state.entities.NORP,\n      onChange: this.setEntities,\n      name: \"NORP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-organizations\",\n      label: \"Companies, agencies, institutions, etc\",\n      checked: this.state.entities.ORG,\n      onChange: this.setEntities,\n      name: \"ORG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-countries\",\n      label: \"Countries, cities, states\",\n      checked: this.state.entities.GPE,\n      onChange: this.setEntities,\n      name: \"GPE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-language\",\n      label: \"Language\",\n      checked: this.state.entities.LANGUAGE,\n      onChange: this.setEntities,\n      name: \"LANGUAGE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"switch-money\",\n      label: \"Monetary value\",\n      checked: this.state.entities.MONEY,\n      onChange: this.setEntities,\n      name: \"MONEY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Form.Check, {\n      className: \"text-left text-info font-weight-bold mb-4\",\n      custom: true,\n      type: \"checkbox\",\n      id: `custom-checkbox`,\n      label: `Replace names (people, countries, languages, etc.) with fictional names`,\n      checked: this.state.fake_names,\n      onChange: this.handleFictional,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, \"Enter text to anonimize below:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.text,\n      onChange: this.handleTextChange,\n      as: \"textarea\",\n      rows: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"font-weight-bold\",\n      disabled: this.state.postRequested,\n      variant: \"info\",\n      onClick: this.handleTextAnonymize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \"Anonimize text\"), this.state.inProgress && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      className: \"mt-4\",\n      animation: \"grow\",\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(AlertDismissibleExample, {\n      visible: this.state.alert,\n      handlClose: this.removeAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), this.state.showResult && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-light text-left mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Text after Anonymization:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overflow-auto border border-success border-1 text-light p-3\",\n      style: {\n        maxHeight: 120\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, this.state.result), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary mr-1 btn-sm\",\n      style: {\n        fontSize: 15\n      },\n      onClick: this.handleCopyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, \"Copy\"), /*#__PURE__*/React.createElement(\"a\", {\n      download: \"anonymizedText.txt\",\n      className: \"btn btn-secondary btn-sm\",\n      style: {\n        fontSize: 15\n      },\n      href: window.URL.createObjectURL(new Blob([this.state.result], {\n        type: \"text/plain\"\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Save result as text\"))));\n  }\n\n}\n\nclass AlertDismissibleExample extends React.Component {\n  render() {\n    if (this.props.visible) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger mt-2\",\n        dismissible: true,\n        onClose: () => this.props.handlClose(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, \"Oh snap! You got an error!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, \"Probably Network problem try again later.\"));\n    }\n\n    return null;\n  }\n\n}","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/TextAnonymizer.js"],"names":["React","Form","Button","Alert","Spinner","axios","BASE_URL_DEV","TextAnonymizer","Component","state","entities","PERSON","DATE","NORP","ORG","GPE","LANGUAGE","MONEY","fake_names","text","alert","showResult","result","postRequested","inProgress","fileRef","createRef","setEntities","event","target","name","checked","setState","handleFictional","oldState","handleTextChange","new_value","value","handleCopyText","navigator","clipboard","writeText","then","console","log","catch","err","handleTextAnonymize","entitiesArray","Object","keys","forEach","entity","push","post","data","error","removeAlert","render","fontSize","maxHeight","window","URL","createObjectURL","Blob","type","AlertDismissibleExample","props","visible","handlClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport {Button, Alert, Spinner} from 'react-bootstrap'\nimport axios from \"axios\";\nimport { BASE_URL_DEV } from \"../utils\";\n\nexport default class TextAnonymizer extends React.Component{\n    state={\n        entities:{\n            PERSON:true,\n            DATE:false,\n            NORP:false,\n            ORG:false,\n            GPE:false,\n            LANGUAGE:false,\n            MONEY:false\n        },\n        fake_names:false,\n        text:\"\",\n        alert:false,\n        showResult:false,\n        result:\"\",\n        postRequested:false,\n        inProgress:false\n    }\n\n    fileRef = new React.createRef()\n\n    setEntities=(event)=>{\n\n        let entities = this.state.entities\n        entities[event.target.name] = event.target.checked\n        this.setState(()=>({entities:entities}))\n    }\n\n    handleFictional=()=>{\n        this.setState((oldState)=>({fake_names:!oldState.fake_names}))\n    }\n\n    handleTextChange=(event)=>{\n        let new_value = event.target.value\n        this.setState(()=>({text: new_value}))\n    }\n\n    handleCopyText=async()=>{\n        navigator.clipboard.writeText(this.state.result)\n            .then(() => {\n                console.log(\"text copied\")\n                })\n            .catch(err => {\n                console.log('Something went wrong', err);\n                 });\n    }\n\n\n    handleTextAnonymize = async () => {\n        try {\n          this.setState(()=>({postRequested:true, inProgress:true}))\n          const entities = this.state.entities\n          let entitiesArray=[]\n          Object.keys(entities).forEach((entity)=>{\n              if(entities[entity]=== true){\n                entitiesArray.push(entity)\n              }\n            })\n          const result = await axios.post(\n            `${BASE_URL_DEV}/textanonymizer`,\n            {\n                fake_names:this.state.fake_names,\n                text: this.state.text,\n                entities: entitiesArray\n            }\n          )\n          console.log(result);\n\n          this.setState(()=>({result:result.data, showResult:true,postRequested:false,inProgress:false}))\n        } \n        catch (error) {\n            console.log(\"error\",error);\n            this.setState(()=>({alert:true,postRequested:false,inProgress:false}))\n        }\n      }\n\n      removeAlert=()=>{\n          this.setState(()=>({alert:false}))\n      }\n    render(){\n        return(\n            <div className='dashboard-view  bg-dark p-5 text-center '>\n                <Form className='d-flex jusitify-content-center flex-column'>\n                    <Form.Group className='text-left'>\n                      <h4 className='font-weight-bold'>\n                        Which type of names would you like to anonymize?\n                      </h4>\n                      <Form.Check as='input'\n                        type=\"switch\"\n                        id=\"switch-person\"\n                        label=\"Person\"\n                        checked={this.state.entities.PERSON}\n                        onChange={this.setEntities}\n                        name=\"PERSON\"/> \n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-date\"\n                        label=\"Date\"\n                        checked={this.state.entities.DATE}\n                        onChange={this.setEntities}\n                        name=\"DATE\"/>      \n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-norp\"\n                        label=\"Nationalities or religious or political groups\"\n                        checked={this.state.entities.NORP}\n                        onChange={this.setEntities}\n                        name=\"NORP\"/> \n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-organizations\"\n                        label=\"Companies, agencies, institutions, etc\"\n                        checked={this.state.entities.ORG}\n                        onChange={this.setEntities}\n                        name=\"ORG\"/>         \n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-countries\"\n                        label=\"Countries, cities, states\"\n                        checked={this.state.entities.GPE}\n                        onChange={this.setEntities}\n                        name=\"GPE\"/>       \n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-language\"\n                        label=\"Language\"\n                        checked={this.state.entities.LANGUAGE}\n                        onChange={this.setEntities}\n                        name=\"LANGUAGE\"/>\n                       <Form.Check \n                        type=\"switch\"\n                        id=\"switch-money\"\n                        label=\"Monetary value\"\n                        checked={this.state.entities.MONEY}\n                        onChange={this.setEntities}\n                        name=\"MONEY\"/>   \n                    </Form.Group>\n                    <Form.Check \n                        className='text-left text-info font-weight-bold mb-4'\n                        custom\n                        type=\"checkbox\"\n                        id={`custom-checkbox`}\n                        label={`Replace names (people, countries, languages, etc.) with fictional names`}\n                        checked={this.state.fake_names}\n                        onChange={this.handleFictional}\n                    />\n                    <Form.Group   controlId=\"exampleForm.ControlTextarea1\">\n                      <Form.Label style={{fontSize:18}}>Enter text to anonimize below:</Form.Label>\n                      <Form.Control value={this.state.text} onChange={this.handleTextChange} as=\"textarea\" rows={3} />\n                    </Form.Group>\n                </Form>\n                <Button className='font-weight-bold' disabled={this.state.postRequested} variant=\"info\" onClick={this.handleTextAnonymize}>\n                   Anonimize text\n                </Button>\n                {this.state.inProgress&&<div>\n                <Spinner className='mt-4' animation=\"grow\" variant=\"info\"/>\n                </div>}\n                {/* Error alert if post request didnt go through */}\n                <AlertDismissibleExample visible={this.state.alert} handlClose={this.removeAlert}/>\n                {this.state.showResult&&<div className='mt-3 bg-dark'>\n                    <div className='text-light text-left mb-2'>\n                        Text after Anonymization:\n                    </div>\n                    <div className='overflow-auto border border-success border-1 text-light p-3' style={{maxHeight:120}}>\n                        {this.state.result}\n                    </div>\n                    <div className='mt-2 mb-2'>\n                    <button className='btn btn-secondary mr-1 btn-sm'  style={{fontSize:15}} onClick={this.handleCopyText}>\n                        Copy\n                    </button>\n                    <a download= \"anonymizedText.txt\" className='btn btn-secondary btn-sm' style={{fontSize:15}} href={window.URL.createObjectURL(new Blob([this.state.result],\n                    { type: \"text/plain\" }))}  >\n                        Save result as text\n                    </a>\n                    </div>\n\n                </div>}\n\n            </div>\n        )\n    }\n}\n\n\nclass  AlertDismissibleExample extends React.Component{\n\n\n    render(){\n    \n    if (this.props.visible) {\n      return (\n        <Alert variant=\"danger mt-2\" dismissible onClose={() => this.props.handlClose() }>\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n          <p>\n            Probably Network problem try again later.\n          </p>\n        </Alert>\n      );\n    }\n\n    return null  \n    }\n}"]},"metadata":{},"sourceType":"module"}