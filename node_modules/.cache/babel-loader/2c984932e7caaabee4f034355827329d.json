{"ast":null,"code":"'use strict';\n\nvar html = require('property-information/html');\n\nvar svg = require('property-information/svg');\n\nvar find = require('property-information/find');\n\nvar ns = require('web-namespaces');\n\nvar s = require('hastscript/svg');\n\nvar h = require('hastscript');\n\nvar xtend = require('xtend');\n\nvar count = require('ccount');\n\nmodule.exports = wrapper;\nvar own = {}.hasOwnProperty; // Handlers.\n\nvar map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}; // Wrapper to normalise options.\n\nfunction wrapper(ast, options) {\n  var settings = options || {};\n  var file;\n\n  if (settings.messages) {\n    file = settings;\n    settings = {};\n  } else {\n    file = settings.file;\n  }\n\n  return transform(ast, {\n    schema: settings.space === 'svg' ? svg : html,\n    file: file,\n    verbose: settings.verbose,\n    location: false\n  });\n} // Transform a node.\n\n\nfunction transform(ast, config) {\n  var schema = config.schema;\n  var fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element;\n  var children;\n  var node;\n  var pos;\n\n  if (fn === element) {\n    config.schema = ast.namespaceURI === ns.svg ? svg : html;\n  }\n\n  if (ast.childNodes) {\n    children = nodes(ast.childNodes, config);\n  }\n\n  node = fn(ast, children, config);\n\n  if (ast.sourceCodeLocation && config.file) {\n    pos = location(node, ast.sourceCodeLocation, config);\n\n    if (pos) {\n      config.location = true;\n      node.position = pos;\n    }\n  }\n\n  config.schema = schema;\n  return node;\n} // Transform children.\n\n\nfunction nodes(children, config) {\n  var length = children.length;\n  var index = -1;\n  var result = [];\n\n  while (++index < length) {\n    result[index] = transform(children[index], config);\n  }\n\n  return result;\n} // Transform a document.\n// Stores `ast.quirksMode` in `node.data.quirksMode`.\n\n\nfunction root(ast, children, config) {\n  var node = {\n    type: 'root',\n    children: children,\n    data: {}\n  };\n  var doc;\n  node.data.quirksMode = ast.mode === 'quirks' || ast.mode === 'limited-quirks';\n\n  if (config.file && config.location) {\n    doc = String(config.file);\n    node.position = {\n      start: {\n        line: 1,\n        column: 1,\n        offset: 0\n      },\n      end: {\n        line: count(doc, '\\n') + 1,\n        column: doc.length - doc.lastIndexOf('\\n'),\n        offset: doc.length\n      }\n    };\n  }\n\n  return node;\n} // Transform a doctype.\n\n\nfunction doctype(ast) {\n  return {\n    type: 'doctype',\n    name: ast.name || '',\n    public: ast.publicId || null,\n    system: ast.systemId || null\n  };\n} // Transform a text.\n\n\nfunction text(ast) {\n  return {\n    type: 'text',\n    value: ast.value\n  };\n} // Transform a comment.\n\n\nfunction comment(ast) {\n  return {\n    type: 'comment',\n    value: ast.data\n  };\n} // Transform an element.\n\n\nfunction element(ast, children, config) {\n  var fn = config.schema.space === 'svg' ? s : h;\n  var name = ast.tagName;\n  var attributes = ast.attrs;\n  var length = attributes.length;\n  var props = {};\n  var index = -1;\n  var attribute;\n  var prop;\n  var node;\n  var pos;\n  var start;\n  var end;\n\n  while (++index < length) {\n    attribute = attributes[index];\n    prop = (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name;\n    props[prop] = attribute.value;\n  }\n\n  node = fn(name, props, children);\n\n  if (name === 'template' && 'content' in ast) {\n    pos = ast.sourceCodeLocation;\n    start = pos && pos.startTag && position(pos.startTag).end;\n    end = pos && pos.endTag && position(pos.endTag).start;\n    node.content = transform(ast.content, config);\n\n    if ((start || end) && config.file) {\n      node.content.position = {\n        start: start,\n        end: end\n      };\n    }\n  }\n\n  return node;\n} // Create clean positional information.\n\n\nfunction location(node, location, config) {\n  var schema = config.schema;\n  var verbose = config.verbose;\n  var pos = position(location);\n  var reference;\n  var attributes;\n  var attribute;\n  var props;\n  var prop;\n\n  if (node.type === 'element') {\n    reference = node.children[node.children.length - 1]; // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n\n    if (!location.endTag && reference && reference.position && reference.position.end) {\n      pos.end = xtend(reference.position.end);\n    }\n\n    if (verbose) {\n      attributes = location.attrs;\n      props = {};\n\n      for (attribute in attributes) {\n        prop = find(schema, attribute).property;\n        props[prop] = position(attributes[attribute]);\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      };\n    }\n  }\n\n  return pos;\n}\n\nfunction position(loc) {\n  var start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  });\n  var end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  });\n  return start || end ? {\n    start: start,\n    end: end\n  } : null;\n}\n\nfunction point(point) {\n  return point.line && point.column ? point : null;\n}","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONT/gptversion/CASEFRONT/node_modules/hast-util-from-parse5/index.js"],"names":["html","require","svg","find","ns","s","h","xtend","count","module","exports","wrapper","own","hasOwnProperty","map","root","text","comment","doctype","ast","options","settings","file","messages","transform","schema","space","verbose","location","config","fn","call","nodeName","element","children","node","pos","namespaceURI","childNodes","nodes","sourceCodeLocation","position","length","index","result","type","data","doc","quirksMode","mode","String","start","line","column","offset","end","lastIndexOf","name","public","publicId","system","systemId","value","tagName","attributes","attrs","props","attribute","prop","prefix","startTag","endTag","content","reference","property","opening","closing","properties","loc","point","startLine","startCol","startOffset","endLine","endCol","endOffset"],"mappings":"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","sourcesContent":["'use strict'\n\nvar html = require('property-information/html')\nvar svg = require('property-information/svg')\nvar find = require('property-information/find')\nvar ns = require('web-namespaces')\nvar s = require('hastscript/svg')\nvar h = require('hastscript')\nvar xtend = require('xtend')\nvar count = require('ccount')\n\nmodule.exports = wrapper\n\nvar own = {}.hasOwnProperty\n\n// Handlers.\nvar map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}\n\n// Wrapper to normalise options.\nfunction wrapper(ast, options) {\n  var settings = options || {}\n  var file\n\n  if (settings.messages) {\n    file = settings\n    settings = {}\n  } else {\n    file = settings.file\n  }\n\n  return transform(ast, {\n    schema: settings.space === 'svg' ? svg : html,\n    file: file,\n    verbose: settings.verbose,\n    location: false\n  })\n}\n\n// Transform a node.\nfunction transform(ast, config) {\n  var schema = config.schema\n  var fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element\n  var children\n  var node\n  var pos\n\n  if (fn === element) {\n    config.schema = ast.namespaceURI === ns.svg ? svg : html\n  }\n\n  if (ast.childNodes) {\n    children = nodes(ast.childNodes, config)\n  }\n\n  node = fn(ast, children, config)\n\n  if (ast.sourceCodeLocation && config.file) {\n    pos = location(node, ast.sourceCodeLocation, config)\n\n    if (pos) {\n      config.location = true\n      node.position = pos\n    }\n  }\n\n  config.schema = schema\n\n  return node\n}\n\n// Transform children.\nfunction nodes(children, config) {\n  var length = children.length\n  var index = -1\n  var result = []\n\n  while (++index < length) {\n    result[index] = transform(children[index], config)\n  }\n\n  return result\n}\n\n// Transform a document.\n// Stores `ast.quirksMode` in `node.data.quirksMode`.\nfunction root(ast, children, config) {\n  var node = {type: 'root', children: children, data: {}}\n  var doc\n\n  node.data.quirksMode = ast.mode === 'quirks' || ast.mode === 'limited-quirks'\n\n  if (config.file && config.location) {\n    doc = String(config.file)\n\n    node.position = {\n      start: {line: 1, column: 1, offset: 0},\n      end: {\n        line: count(doc, '\\n') + 1,\n        column: doc.length - doc.lastIndexOf('\\n'),\n        offset: doc.length\n      }\n    }\n  }\n\n  return node\n}\n\n// Transform a doctype.\nfunction doctype(ast) {\n  return {\n    type: 'doctype',\n    name: ast.name || '',\n    public: ast.publicId || null,\n    system: ast.systemId || null\n  }\n}\n\n// Transform a text.\nfunction text(ast) {\n  return {type: 'text', value: ast.value}\n}\n\n// Transform a comment.\nfunction comment(ast) {\n  return {type: 'comment', value: ast.data}\n}\n\n// Transform an element.\nfunction element(ast, children, config) {\n  var fn = config.schema.space === 'svg' ? s : h\n  var name = ast.tagName\n  var attributes = ast.attrs\n  var length = attributes.length\n  var props = {}\n  var index = -1\n  var attribute\n  var prop\n  var node\n  var pos\n  var start\n  var end\n\n  while (++index < length) {\n    attribute = attributes[index]\n    prop = (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    props[prop] = attribute.value\n  }\n\n  node = fn(name, props, children)\n\n  if (name === 'template' && 'content' in ast) {\n    pos = ast.sourceCodeLocation\n    start = pos && pos.startTag && position(pos.startTag).end\n    end = pos && pos.endTag && position(pos.endTag).start\n\n    node.content = transform(ast.content, config)\n\n    if ((start || end) && config.file) {\n      node.content.position = {start: start, end: end}\n    }\n  }\n\n  return node\n}\n\n// Create clean positional information.\nfunction location(node, location, config) {\n  var schema = config.schema\n  var verbose = config.verbose\n  var pos = position(location)\n  var reference\n  var attributes\n  var attribute\n  var props\n  var prop\n\n  if (node.type === 'element') {\n    reference = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      !location.endTag &&\n      reference &&\n      reference.position &&\n      reference.position.end\n    ) {\n      pos.end = xtend(reference.position.end)\n    }\n\n    if (verbose) {\n      attributes = location.attrs\n      props = {}\n\n      for (attribute in attributes) {\n        prop = find(schema, attribute).property\n        props[prop] = position(attributes[attribute])\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return pos\n}\n\nfunction position(loc) {\n  var start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  var end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  return start || end ? {start: start, end: end} : null\n}\n\nfunction point(point) {\n  return point.line && point.column ? point : null\n}\n"]},"metadata":{},"sourceType":"script"}