{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/graphFunc.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport axios from \"axios\";\nimport { Fragment } from \"react\";\nimport { UserContext } from \"../App\";\n\nfunction GraphFunc(props) {\n  const [errorText, setErrorText] = useState(\"\");\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  console.log('graphFunc!!!');\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(\"http://127.0.0.1:5000/api/v1/graph\", {\n        params: {\n          search_query: state.searchQuery\n        }\n      }).then(function (response) {\n        console.log(response);\n        dispatch({\n          type: \"SET_NODES_DATA\",\n          payload: response.data.nodes_data\n        });\n        dispatch({\n          type: \"SET_GRAPH_DATA\",\n          payload: response.data.graph_data\n        });\n      }).catch(function (error) {\n        setErrorText(error && error.response !== undefined && error.response.statusText);\n      });\n    }\n\n    if (state.searchQuery !== \"\") {\n      fetchData();\n    }\n  }, [state.searchQuery]);\n  const myConfig = {\n    \"automaticRearrangeAfterDropNode\": true,\n    \"collapsible\": false,\n    \"directed\": false,\n    \"focusAnimationDuration\": 0,\n    \"focusZoom\": 1,\n    \"freezeAllDragEvents\": false,\n    \"height\": 700,\n    \"highlightDegree\": 0.5,\n    \"highlightOpacity\": 1,\n    \"linkHighlightBehavior\": true,\n    \"maxZoom\": 8,\n    \"minZoom\": 0.1,\n    \"nodeHighlightBehavior\": true,\n    \"panAndZoom\": false,\n    \"staticGraph\": false,\n    \"staticGraphWithDragAndDrop\": false,\n    \"width\": 800,\n    \"d3\": {\n      \"alphaTarget\": 0.05,\n      \"gravity\": -100,\n      \"linkLength\": 10,\n      \"linkStrength\": 1,\n      \"disableLinkForce\": false\n    },\n    \"node\": {\n      \"color\": \"#244d17\",\n      \"fontColor\": \"black\",\n      \"fontSize\": 8,\n      \"fontWeight\": \"normal\",\n      \"highlightColor\": \"lightgreen\",\n      \"highlightFontSize\": 16,\n      \"highlightFontWeight\": \"normal\",\n      \"highlightStrokeColor\": \"SAME\",\n      \"highlightStrokeWidth\": \"SAME\",\n      \"labelProperty\": \"id\",\n      \"mouseCursor\": \"pointer\",\n      \"opacity\": 1,\n      \"renderLabel\": true,\n      \"size\": 200,\n      \"strokeColor\": \"none\",\n      \"strokeWidth\": 1.5,\n      \"svg\": \"\",\n      \"symbolType\": \"circle\"\n    },\n    \"link\": {\n      \"color\": \"#244d17\",\n      \"fontColor\": \"black\",\n      \"fontSize\": 8,\n      \"fontWeight\": \"normal\",\n      \"highlightColor\": \"SAME\",\n      \"highlightFontSize\": 8,\n      \"highlightFontWeight\": \"normal\",\n      \"labelProperty\": \"label\",\n      \"mouseCursor\": \"pointer\",\n      \"opacity\": 1,\n      \"renderLabel\": false,\n      \"semanticStrokeWidth\": false,\n      \"strokeWidth\": 1.5,\n      \"markerHeight\": 6,\n      \"markerWidth\": 6,\n      \"strokeDasharray\": 0,\n      \"strokeDashoffset\": 0,\n      \"strokeLinecap\": \"butt\"\n    }\n  };\n\n  const onClickGraph = function (event) {//  window.alert('Clicked the graph background');\n  };\n\n  const onClickNode = function (nodeId, node) {// window.alert(`Clicked node ${nodeId} in position (${node.x}, ${node.y})`);\n  };\n\n  const onDoubleClickNode = function (nodeId, node) {\n    //  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\n    const nodeData = state.nodesData[nodeId];\n\n    if (nodeData) {\n      window.open(nodeData[\"frontend_url\"], '_blank');\n    }\n  };\n\n  const onRightClickNode = function (event, nodeId, node) {//  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\n  };\n\n  const onMouseOverNode = function (nodeId, node) {\n    //  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\n    const nodeData = state.nodesData[node.id];\n\n    if (nodeData) {\n      dispatch({\n        type: \"SET_NODE_DATA\",\n        payload: nodeData\n      });\n      let nodes = state.graphData.nodes.map(n => {\n        if (n.id === node.id) {\n          return { ...n,\n            \"fontSize\": 16\n          };\n        } else {\n          return { ...n,\n            \"fontSize\": 8\n          };\n        }\n      });\n      dispatch({\n        type: \"SET_GRAPH_DATA\",\n        payload: { ...state.graphData,\n          nodes\n        }\n      });\n    }\n  };\n\n  const onMouseOutNode = function (nodeId, node) {//  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\n  };\n\n  const onClickLink = function (source, target) {//  window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {//  window.alert('Right clicked link between ${source} and ${target}');\n  };\n\n  const onMouseOverLink = function (source, target) {//  window.alert(`Mouse over in link between ${source} and ${target}`);\n  };\n\n  const onMouseOutLink = function (source, target) {//  window.alert(`Mouse out link between ${source} and ${target}`);\n  };\n\n  const onNodePositionChange = function (nodeId, x, y) {//  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n  };\n\n  const onZoomChange = function (previousZoom, newZoom) {//  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }\n  }, errorText === \"\" && Object.keys(state.graphData).length !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\",\n    data: state.graphData,\n    config: myConfig,\n    onClickGraph: onClickGraph,\n    onClickNode: onClickNode,\n    onDoubleClickNode: onDoubleClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    onMouseOverNode: onMouseOverNode,\n    onMouseOutNode: onMouseOutNode,\n    onMouseOverLink: onMouseOverLink,\n    onMouseOutLink: onMouseOutLink,\n    onNodePositionChange: onNodePositionChange,\n    onZoomChange: onZoomChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  })), errorText !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 53\n    }\n  }, errorText)));\n}\n\nexport default GraphFunc;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/graphFunc.js"],"names":["React","useEffect","useState","useContext","Graph","axios","Fragment","UserContext","GraphFunc","props","errorText","setErrorText","state","dispatch","console","log","fetchData","get","params","search_query","searchQuery","then","response","type","payload","data","nodes_data","graph_data","catch","error","undefined","statusText","myConfig","onClickGraph","event","onClickNode","nodeId","node","onDoubleClickNode","nodeData","nodesData","window","open","onRightClickNode","onMouseOverNode","id","nodes","graphData","map","n","onMouseOutNode","onClickLink","source","target","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","x","y","onZoomChange","previousZoom","newZoom","Object","keys","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBV,UAAU,CAACI,WAAD,CAAtC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAd,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAee,SAAf,GAA2B;AAC1B,YAAMX,KAAK,CACTY,GADI,CACA,oCADA,EACsC;AAC1CC,QAAAA,MAAM,EAAE;AACPC,UAAAA,YAAY,EAAEP,KAAK,CAACQ;AADb;AADkC,OADtC,EAMJC,IANI,CAMC,UAAUC,QAAV,EAAoB;AACzBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAT,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE,gBAAR;AAA0BC,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAjD,SAAD,CAAR;AACAb,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE,gBAAR;AAA0BC,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcE;AAAjD,SAAD,CAAR;AAEA,OAXI,EAYJC,KAZI,CAYE,UAAUC,KAAV,EAAiB;AACvBlB,QAAAA,YAAY,CAACkB,KAAK,IAAIA,KAAK,CAACP,QAAN,KAAmBQ,SAA5B,IAAyCD,KAAK,CAACP,QAAN,CAAeS,UAAzD,CAAZ;AACA,OAdI,CAAN;AAeA;;AACD,QAAInB,KAAK,CAACQ,WAAN,KAAsB,EAA1B,EAA8B;AAC7BJ,MAAAA,SAAS;AACT;AACD,GArBQ,EAqBN,CAACJ,KAAK,CAACQ,WAAP,CArBM,CAAT;AAuBA,QAAMY,QAAQ,GAAG;AAChB,uCAAmC,IADnB;AAEhB,mBAAe,KAFC;AAGhB,gBAAY,KAHI;AAIhB,8BAA0B,CAJV;AAKhB,iBAAa,CALG;AAMhB,2BAAuB,KANP;AAOhB,cAAU,GAPM;AAQhB,uBAAmB,GARH;AAShB,wBAAoB,CATJ;AAUhB,6BAAyB,IAVT;AAWhB,eAAW,CAXK;AAYhB,eAAW,GAZK;AAahB,6BAAyB,IAbT;AAchB,kBAAc,KAdE;AAehB,mBAAe,KAfC;AAgBhB,kCAA8B,KAhBd;AAiBhB,aAAS,GAjBO;AAkBhB,UAAM;AACL,qBAAe,IADV;AAEL,iBAAW,CAAC,GAFP;AAGL,oBAAc,EAHT;AAIL,sBAAgB,CAJX;AAKL,0BAAoB;AALf,KAlBU;AAyBhB,YAAQ;AACP,eAAS,SADF;AAEP,mBAAa,OAFN;AAGP,kBAAY,CAHL;AAIP,oBAAc,QAJP;AAKP,wBAAkB,YALX;AAMP,2BAAqB,EANd;AAOP,6BAAuB,QAPhB;AAQP,8BAAwB,MARjB;AASP,8BAAwB,MATjB;AAUP,uBAAiB,IAVV;AAWP,qBAAe,SAXR;AAYP,iBAAW,CAZJ;AAaP,qBAAe,IAbR;AAcP,cAAQ,GAdD;AAeP,qBAAe,MAfR;AAgBP,qBAAe,GAhBR;AAiBP,aAAO,EAjBA;AAkBP,oBAAc;AAlBP,KAzBQ;AA6ChB,YAAQ;AACP,eAAS,SADF;AAEP,mBAAa,OAFN;AAGP,kBAAY,CAHL;AAIP,oBAAc,QAJP;AAKP,wBAAkB,MALX;AAMP,2BAAqB,CANd;AAOP,6BAAuB,QAPhB;AAQP,uBAAiB,OARV;AASP,qBAAe,SATR;AAUP,iBAAW,CAVJ;AAWP,qBAAe,KAXR;AAYP,6BAAuB,KAZhB;AAaP,qBAAe,GAbR;AAcP,sBAAgB,CAdT;AAeP,qBAAe,CAfR;AAgBP,yBAAmB,CAhBZ;AAiBP,0BAAoB,CAjBb;AAkBP,uBAAiB;AAlBV;AA7CQ,GAAjB;;AAmEA,QAAMC,YAAY,GAAG,UAAUC,KAAV,EAAiB,CACrC;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB,CAC3C;AACA,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,UAAUF,MAAV,EAAkBC,IAAlB,EAAwB;AACjD;AACA,UAAME,QAAQ,GAAG3B,KAAK,CAAC4B,SAAN,CAAgBJ,MAAhB,CAAjB;;AACA,QAAIG,QAAJ,EAAc;AACbE,MAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAAC,cAAD,CAApB,EAAsC,QAAtC;AACA;AACD,GAND;;AAQA,QAAMI,gBAAgB,GAAG,UAAUT,KAAV,EAAiBE,MAAjB,EAAyBC,IAAzB,EAA+B,CACvD;AACA,GAFD;;AAIA,QAAMO,eAAe,GAAG,UAAUR,MAAV,EAAkBC,IAAlB,EAAwB;AAC/C;AACA,UAAME,QAAQ,GAAG3B,KAAK,CAAC4B,SAAN,CAAgBH,IAAI,CAACQ,EAArB,CAAjB;;AACA,QAAIN,QAAJ,EAAc;AACb1B,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,OAAO,EAAEe;AAAlC,OAAD,CAAR;AACA,UAAIO,KAAK,GAAGlC,KAAK,CAACmC,SAAN,CAAgBD,KAAhB,CAAsBE,GAAtB,CAA0BC,CAAC,IAAI;AAC1C,YAAIA,CAAC,CAACJ,EAAF,KAASR,IAAI,CAACQ,EAAlB,EAAsB;AACrB,iBAAO,EAAE,GAAGI,CAAL;AAAQ,wBAAY;AAApB,WAAP;AACA,SAFD,MAEO;AACN,iBAAO,EAAE,GAAGA,CAAL;AAAQ,wBAAY;AAApB,WAAP;AACA;AACD,OANW,CAAZ;AAOApC,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,OAAO,EAAE,EAAE,GAAGZ,KAAK,CAACmC,SAAX;AAAsBD,UAAAA;AAAtB;AAAnC,OAAD,CAAR;AACA;AACD,GAdD;;AAgBA,QAAMI,cAAc,GAAG,UAAUd,MAAV,EAAkBC,IAAlB,EAAwB,CAC9C;AACA,GAFD;;AAIA,QAAMc,WAAW,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B,CAC7C;AACA,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,UAAUpB,KAAV,EAAiBkB,MAAjB,EAAyBC,MAAzB,EAAiC,CACzD;AACA,GAFD;;AAIA,QAAME,eAAe,GAAG,UAAUH,MAAV,EAAkBC,MAAlB,EAA0B,CACjD;AACA,GAFD;;AAIA,QAAMG,cAAc,GAAG,UAAUJ,MAAV,EAAkBC,MAAlB,EAA0B,CAChD;AACA,GAFD;;AAIA,QAAMI,oBAAoB,GAAG,UAAUrB,MAAV,EAAkBsB,CAAlB,EAAqBC,CAArB,EAAwB,CACpD;AACA,GAFD;;AAIA,QAAMC,YAAY,GAAG,UAAUC,YAAV,EAAwBC,OAAxB,EAAiC,CACrD;AACA,GAFD;;AAGA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEpD,SAAS,KAAK,EAAd,IACAqD,MAAM,CAACC,IAAP,CAAYpD,KAAK,CAACmC,SAAlB,EAA6BkB,MAA7B,KAAwC,CADxC,iBAEC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,EAAE,EAAC,UADJ;AAEC,IAAA,IAAI,EAAErD,KAAK,CAACmC,SAFb;AAGC,IAAA,MAAM,EAAEf,QAHT;AAIC,IAAA,YAAY,EAAEC,YAJf;AAKC,IAAA,WAAW,EAAEE,WALd;AAMC,IAAA,iBAAiB,EAAEG,iBANpB;AAOC,IAAA,gBAAgB,EAAEK,gBAPnB;AAQC,IAAA,WAAW,EAAEQ,WARd;AASC,IAAA,gBAAgB,EAAEG,gBATnB;AAUC,IAAA,eAAe,EAAEV,eAVlB;AAWC,IAAA,cAAc,EAAEM,cAXjB;AAYC,IAAA,eAAe,EAAEK,eAZlB;AAaC,IAAA,cAAc,EAAEC,cAbjB;AAcC,IAAA,oBAAoB,EAAEC,oBAdvB;AAeC,IAAA,YAAY,EAAEG,YAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,EAuBElD,SAAS,KAAK,EAAd,iBAAoB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,SAAJ,CAA5B,CAvBtB,CADD;AA2BA;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Graph } from \"react-d3-graph\";\r\nimport axios from \"axios\";\r\nimport { Fragment } from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\nfunction GraphFunc(props) {\r\n\tconst [errorText, setErrorText] = useState(\"\");\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\r\n\tconsole.log('graphFunc!!!');\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(\"http://127.0.0.1:5000/api/v1/graph\", {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsearch_query: state.searchQuery\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\tdispatch({ type: \"SET_NODES_DATA\", payload: response.data.nodes_data })\r\n\t\t\t\t\tdispatch({ type: \"SET_GRAPH_DATA\", payload: response.data.graph_data })\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tsetErrorText(error && error.response !== undefined && error.response.statusText);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tif (state.searchQuery !== \"\") {\r\n\t\t\tfetchData();\r\n\t\t}\r\n\t}, [state.searchQuery]);\r\n\r\n\tconst myConfig = {\r\n\t\t\"automaticRearrangeAfterDropNode\": true,\r\n\t\t\"collapsible\": false,\r\n\t\t\"directed\": false,\r\n\t\t\"focusAnimationDuration\": 0,\r\n\t\t\"focusZoom\": 1,\r\n\t\t\"freezeAllDragEvents\": false,\r\n\t\t\"height\": 700,\r\n\t\t\"highlightDegree\": 0.5,\r\n\t\t\"highlightOpacity\": 1,\r\n\t\t\"linkHighlightBehavior\": true,\r\n\t\t\"maxZoom\": 8,\r\n\t\t\"minZoom\": 0.1,\r\n\t\t\"nodeHighlightBehavior\": true,\r\n\t\t\"panAndZoom\": false,\r\n\t\t\"staticGraph\": false,\r\n\t\t\"staticGraphWithDragAndDrop\": false,\r\n\t\t\"width\": 800,\r\n\t\t\"d3\": {\r\n\t\t\t\"alphaTarget\": 0.05,\r\n\t\t\t\"gravity\": -100,\r\n\t\t\t\"linkLength\": 10,\r\n\t\t\t\"linkStrength\": 1,\r\n\t\t\t\"disableLinkForce\": false\r\n\t\t},\r\n\t\t\"node\": {\r\n\t\t\t\"color\": \"#244d17\",\r\n\t\t\t\"fontColor\": \"black\",\r\n\t\t\t\"fontSize\": 8,\r\n\t\t\t\"fontWeight\": \"normal\",\r\n\t\t\t\"highlightColor\": \"lightgreen\",\r\n\t\t\t\"highlightFontSize\": 16,\r\n\t\t\t\"highlightFontWeight\": \"normal\",\r\n\t\t\t\"highlightStrokeColor\": \"SAME\",\r\n\t\t\t\"highlightStrokeWidth\": \"SAME\",\r\n\t\t\t\"labelProperty\": \"id\",\r\n\t\t\t\"mouseCursor\": \"pointer\",\r\n\t\t\t\"opacity\": 1,\r\n\t\t\t\"renderLabel\": true,\r\n\t\t\t\"size\": 200,\r\n\t\t\t\"strokeColor\": \"none\",\r\n\t\t\t\"strokeWidth\": 1.5,\r\n\t\t\t\"svg\": \"\",\r\n\t\t\t\"symbolType\": \"circle\",\r\n\t\t},\r\n\t\t\"link\": {\r\n\t\t\t\"color\": \"#244d17\",\r\n\t\t\t\"fontColor\": \"black\",\r\n\t\t\t\"fontSize\": 8,\r\n\t\t\t\"fontWeight\": \"normal\",\r\n\t\t\t\"highlightColor\": \"SAME\",\r\n\t\t\t\"highlightFontSize\": 8,\r\n\t\t\t\"highlightFontWeight\": \"normal\",\r\n\t\t\t\"labelProperty\": \"label\",\r\n\t\t\t\"mouseCursor\": \"pointer\",\r\n\t\t\t\"opacity\": 1,\r\n\t\t\t\"renderLabel\": false,\r\n\t\t\t\"semanticStrokeWidth\": false,\r\n\t\t\t\"strokeWidth\": 1.5,\r\n\t\t\t\"markerHeight\": 6,\r\n\t\t\t\"markerWidth\": 6,\r\n\t\t\t\"strokeDasharray\": 0,\r\n\t\t\t\"strokeDashoffset\": 0,\r\n\t\t\t\"strokeLinecap\": \"butt\"\r\n\t\t}\r\n\t};\r\n\r\n\tconst onClickGraph = function (event) {\r\n\t\t//  window.alert('Clicked the graph background');\r\n\t};\r\n\r\n\tconst onClickNode = function (nodeId, node) {\r\n\t\t// window.alert(`Clicked node ${nodeId} in position (${node.x}, ${node.y})`);\r\n\t};\r\n\r\n\tconst onDoubleClickNode = function (nodeId, node) {\r\n\t\t//  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n\t\tconst nodeData = state.nodesData[nodeId]\r\n\t\tif (nodeData) {\r\n\t\t\twindow.open(nodeData[\"frontend_url\"], '_blank');\r\n\t\t}\r\n\t};\r\n\r\n\tconst onRightClickNode = function (event, nodeId, node) {\r\n\t\t//  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n\t};\r\n\r\n\tconst onMouseOverNode = function (nodeId, node) {\r\n\t\t//  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\r\n\t\tconst nodeData = state.nodesData[node.id]\r\n\t\tif (nodeData) {\r\n\t\t\tdispatch({ type: \"SET_NODE_DATA\", payload: nodeData })\r\n\t\t\tlet nodes = state.graphData.nodes.map(n => {\r\n\t\t\t\tif (n.id === node.id) {\r\n\t\t\t\t\treturn { ...n, \"fontSize\": 16 }\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { ...n, \"fontSize\": 8 }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tdispatch({ type: \"SET_GRAPH_DATA\", payload: { ...state.graphData, nodes } })\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMouseOutNode = function (nodeId, node) {\r\n\t\t//  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\r\n\t};\r\n\r\n\tconst onClickLink = function (source, target) {\r\n\t\t//  window.alert(`Clicked link between ${source} and ${target}`);\r\n\t};\r\n\r\n\tconst onRightClickLink = function (event, source, target) {\r\n\t\t//  window.alert('Right clicked link between ${source} and ${target}');\r\n\t};\r\n\r\n\tconst onMouseOverLink = function (source, target) {\r\n\t\t//  window.alert(`Mouse over in link between ${source} and ${target}`);\r\n\t};\r\n\r\n\tconst onMouseOutLink = function (source, target) {\r\n\t\t//  window.alert(`Mouse out link between ${source} and ${target}`);\r\n\t};\r\n\r\n\tconst onNodePositionChange = function (nodeId, x, y) {\r\n\t\t//  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\r\n\t};\r\n\r\n\tconst onZoomChange = function (previousZoom, newZoom) {\r\n\t\t//  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{errorText === \"\" &&\r\n\t\t\t\tObject.keys(state.graphData).length !== 0 && (\r\n\t\t\t\t\t<div className=\"graph__container\">\r\n\t\t\t\t\t\t<Graph\r\n\t\t\t\t\t\t\tid=\"graph-id\"\r\n\t\t\t\t\t\t\tdata={state.graphData}\r\n\t\t\t\t\t\t\tconfig={myConfig}\r\n\t\t\t\t\t\t\tonClickGraph={onClickGraph}\r\n\t\t\t\t\t\t\tonClickNode={onClickNode}\r\n\t\t\t\t\t\t\tonDoubleClickNode={onDoubleClickNode}\r\n\t\t\t\t\t\t\tonRightClickNode={onRightClickNode}\r\n\t\t\t\t\t\t\tonClickLink={onClickLink}\r\n\t\t\t\t\t\t\tonRightClickLink={onRightClickLink}\r\n\t\t\t\t\t\t\tonMouseOverNode={onMouseOverNode}\r\n\t\t\t\t\t\t\tonMouseOutNode={onMouseOutNode}\r\n\t\t\t\t\t\t\tonMouseOverLink={onMouseOverLink}\r\n\t\t\t\t\t\t\tonMouseOutLink={onMouseOutLink}\r\n\t\t\t\t\t\t\tonNodePositionChange={onNodePositionChange}\r\n\t\t\t\t\t\t\tonZoomChange={onZoomChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t{errorText !== \"\" && <div className=\"error_text\"><p>{errorText}</p></div>}\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default GraphFunc;\r\n"]},"metadata":{},"sourceType":"module"}