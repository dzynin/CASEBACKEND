{"ast":null,"code":"import { Dictionary } from '../../base/dictionary';\nimport { TextPosition } from '../selection/selection-helper';\nimport { CONTROL_CHARACTERS } from '../../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BaseHistoryInfo } from './base-history-info';\nimport { ModifiedParagraphFormat, ModifiedLevel, RowHistoryFormat, TableHistoryInfo } from './history-helper';\nimport { HistoryInfo } from './history-info';\nimport { WParagraphFormat } from '../format/paragraph-format';\nimport { HelperMethods } from '../editor/editor-helper';\n/**\n *  `EditorHistory` Module class is used to handle history preservation\n */\nvar EditorHistory = /** @class */function () {\n  /**\n   * @param {DocumentEditor} node - Specified the document editor.\n   * @private\n   */\n  function EditorHistory(node) {\n    //Fields\n    this.undoStackIn = [];\n    this.redoStackIn = [];\n    /**\n     * @private\n     */\n    this.historyInfoStack = [];\n    this.isUndoGroupingEnded = true;\n    /**\n     * @private\n     */\n    this.isUndoing = false;\n    /**\n     * @private\n     */\n    this.isRedoing = false;\n    this.owner = node;\n    this.documentHelper = node.documentHelper;\n    this.modifiedParaFormats = new Dictionary();\n    this.undoLimitIn = 500;\n    this.redoLimitIn = 500;\n  }\n  Object.defineProperty(EditorHistory.prototype, \"currentHistoryInfo\", {\n    /**\n     * @private\n     * @returns {HistoryInfo} - Returns the history info.\n     */\n    get: function () {\n      return this.historyInfoStack && this.historyInfoStack.length > 0 ? this.historyInfoStack[this.historyInfoStack.length - 1] : undefined;\n    },\n    /**\n     * @private\n     * @param {HistoryInfo} value - Specified the value.\n     */\n    set: function (value) {\n      if (value instanceof HistoryInfo) {\n        this.historyInfoStack.push(value);\n      } else {\n        this.historyInfoStack.pop();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EditorHistory.prototype, \"undoStack\", {\n    //Properties\n    /**\n     * gets undo stack\n     *\n     * @private\n     * @returns {BaseHistoryInfo[]} - Returns the undo stack.\n     */\n    get: function () {\n      return this.undoStackIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EditorHistory.prototype, \"redoStack\", {\n    /**\n     * gets redo stack\n     *\n     * @private\n     * @returns {BaseHistoryInfo[]} - Returns the redo stack.\n     */\n    get: function () {\n      return this.redoStackIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EditorHistory.prototype, \"undoLimit\", {\n    /**\n     * Gets the limit of undo operations can be done.\n     *\n     * @aspType int\n     * @returns {number} - Returns the redo limit\n     */\n    get: function () {\n      return isNullOrUndefined(this.undoLimitIn) ? 0 : this.undoLimitIn;\n    },\n    /**\n     * Sets the limit of undo operations can be done.\n     *\n     * @aspType int\n     * @param {number} value - Specifies the value to set undo limit.\n     */\n    set: function (value) {\n      if (value < 0) {\n        throw new Error('The limit should be greater than or equal to zero.');\n      }\n      this.undoLimitIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EditorHistory.prototype, \"redoLimit\", {\n    /**\n     * Gets the limit of redo operations can be done.\n     *\n     * @aspType int\n     * @returns {number} - Returns the redo limit.\n     */\n    get: function () {\n      return isNullOrUndefined(this.redoLimitIn) ? 0 : this.redoLimitIn;\n    },\n    /**\n     * Sets the limit of redo operations can be done.\n     *\n     * @aspType int\n     * @param {number} value Specifies the value to set redo limit.\n     */\n    set: function (value) {\n      if (value < 0) {\n        throw new Error('The limit should be greater than or equal to zero.');\n      }\n      this.redoLimitIn = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EditorHistory.prototype, \"viewer\", {\n    get: function () {\n      return this.owner.viewer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  EditorHistory.prototype.getModuleName = function () {\n    return 'EditorHistory';\n  };\n  /**\n   * Determines whether the undo operation can be done.\n   *\n   * @returns {boolean} - Returns true if can undo; Otherwise, false.\n   */\n  EditorHistory.prototype.canUndo = function () {\n    return !isNullOrUndefined(this.undoStack) && this.undoStack.length > 0;\n  };\n  /**\n   * Determines whether the redo operation can be done.\n   *\n   * @returns {boolean} - Returns true if can redo; Otherwise, false.\n   */\n  EditorHistory.prototype.canRedo = function () {\n    return !isNullOrUndefined(this.redoStack) && this.redoStack.length > 0;\n  };\n  //EditorHistory Initialization\n  /**\n   * initialize EditorHistory\n   *\n   * @private\n   * @param {Action} action - Specifies the action.\n   * @returns {void}\n   */\n  EditorHistory.prototype.initializeHistory = function (action) {\n    if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n      this.currentBaseHistoryInfo.destroy();\n    }\n    this.currentBaseHistoryInfo = new BaseHistoryInfo(this.owner);\n    this.currentBaseHistoryInfo.action = action;\n    if (action !== 'ModifyStyle') {\n      this.currentBaseHistoryInfo.updateSelection();\n    }\n  };\n  /**\n   * Initialize complex history\n   *\n   * @private\n   * @param {Selection} selection - Specifies the selection.\n   * @param {Action} action - Specifies the action.\n   * @returns {void}\n   */\n  EditorHistory.prototype.initComplexHistory = function (selection, action) {\n    this.currentHistoryInfo = new HistoryInfo(selection.owner, !isNullOrUndefined(this.currentHistoryInfo));\n    this.currentHistoryInfo.action = action;\n    switch (action) {\n      case 'PageBreak':\n        this.currentHistoryInfo.insertedText = CONTROL_CHARACTERS.PageBreak;\n        this.currentHistoryInfo.insertPosition = selection.startOffset;\n        break;\n      case 'ColumnBreak':\n        this.currentHistoryInfo.insertedText = CONTROL_CHARACTERS.ColumnBreak;\n        this.currentHistoryInfo.insertPosition = selection.startOffset;\n        break;\n    }\n    this.currentHistoryInfo.updateSelection();\n  };\n  /**\n   * @private\n   * @param {Point} startingPoint - Specifies the start point.\n   * @param {TableResizer} tableResize - Spcifies the table resizer.\n   * @returns {void}\n   */\n  EditorHistory.prototype.initResizingHistory = function (startingPoint, tableResize) {\n    if (tableResize.resizeNode === 1) {\n      this.initializeHistory('RowResizing');\n      if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n        /* eslint-disable-next-line max-len */\n        tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n        this.currentBaseHistoryInfo.modifiedProperties.push(new RowHistoryFormat(tableResize.currentResizingTable, startingPoint, tableResize.currentResizingTable.childWidgets[tableResize.resizerPosition].rowFormat, this.owner));\n        this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n      }\n    } else {\n      this.initializeHistory('CellResizing');\n      if (this.currentBaseHistoryInfo) {\n        tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n        var tableHistoryInfo = new TableHistoryInfo(tableResize.currentResizingTable, this.owner);\n        tableHistoryInfo.startingPoint = startingPoint;\n        this.currentBaseHistoryInfo.modifiedProperties.push(tableHistoryInfo);\n        this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n      }\n    }\n  };\n  /**\n   * Starts a new undo able action.\n   * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n   */\n  EditorHistory.prototype.beginUndoAction = function () {\n    if (this.isUndoGroupingEnded) {\n      this.owner.editorModule.initComplexHistory('Grouping');\n      this.isUndoGroupingEnded = false;\n      this.clearRedoStack();\n    }\n  };\n  /**\n   * Ends the current undo able action.\n   * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n   */\n  EditorHistory.prototype.endUndoAction = function () {\n    if (!this.isUndoGroupingEnded) {\n      this.updateComplexHistory();\n      this.isUndoGroupingEnded = true;\n    }\n  };\n  /**\n   * Update resizing history\n   *\n   * @private\n   * @param {Point} point - Specifies the point.\n   * @param {TableResizer} tableResize - Specifies the table resizer.\n   * @returns {void}\n   */\n  EditorHistory.prototype.updateResizingHistory = function (point, tableResize) {\n    if (tableResize.resizeNode === 1) {\n      if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n        var rowHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n        if (rowHistoryFormat.startingPoint.y === point.y) {\n          this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n        } else {\n          rowHistoryFormat.displacement = HelperMethods.convertPixelToPoint(point.y - rowHistoryFormat.startingPoint.y);\n          this.recordChanges(this.currentBaseHistoryInfo);\n          this.owner.fireContentChange();\n          this.currentBaseHistoryInfo = undefined;\n        }\n      }\n    } else {\n      if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n        var cellHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n        if (cellHistoryFormat.startingPoint.x === point.x) {\n          this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n        } else {\n          cellHistoryFormat.displacement = HelperMethods.convertPixelToPoint(point.x - cellHistoryFormat.startingPoint.x);\n          cellHistoryFormat.endIndex = tableResize.getCellReSizerPosition(point);\n          this.owner.editorHistoryModule.recordChanges(this.currentBaseHistoryInfo);\n          this.owner.fireContentChange();\n          this.currentBaseHistoryInfo = undefined;\n        }\n      }\n    }\n  };\n  /**\n   * Record the changes\n   *\n   * @private\n   * @param {BaseHistoryInfo} baseHistoryInfo - Specified the base history info.\n   * @returns {void}\n   */\n  EditorHistory.prototype.recordChanges = function (baseHistoryInfo) {\n    if (!this.owner.enableHistoryMode) {\n      return;\n    }\n    if (this.isUndoing) {\n      if (isNullOrUndefined(this.redoStack)) {\n        this.redoStackIn = [];\n      }\n      if (this.redoStack.length === this.redoLimit && this.redoLimit > 0) {\n        var count = this.undoLimit > 20 ? 10 : 1;\n        this.redoStackIn.splice(0, count);\n      }\n      if (this.redoStack.length < this.redoLimit) {\n        this.redoStack.push(baseHistoryInfo);\n      }\n    } else {\n      if (!this.isRedoing) {\n        this.clearRedoStack();\n      }\n      if (isNullOrUndefined(this.undoStack)) {\n        this.undoStackIn = [];\n      }\n      if (this.undoStack.length === this.undoLimit && this.undoLimit > 0) {\n        var count = this.undoLimit > 20 ? 10 : 1;\n        this.undoStackIn.splice(0, count);\n      }\n      if (this.undoStack.length < this.undoLimit) {\n        this.undoStackIn.push(baseHistoryInfo);\n      }\n    }\n    this.lastOperation = baseHistoryInfo;\n  };\n  /**\n   * update EditorHistory\n   *\n   * @private\n   * @returns {void}\n   */\n  EditorHistory.prototype.updateHistory = function () {\n    if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.currentBaseHistoryInfo)) {\n      //Updates the current end position\n      if (!isNullOrUndefined(this.currentBaseHistoryInfo) && isNullOrUndefined(this.currentBaseHistoryInfo.endPosition)) {\n        this.currentBaseHistoryInfo.endPosition = this.currentBaseHistoryInfo.insertPosition;\n      }\n      if (!isNullOrUndefined(this.currentHistoryInfo)) {\n        this.currentHistoryInfo.addModifiedAction(this.currentBaseHistoryInfo);\n      } else {\n        this.recordChanges(this.currentBaseHistoryInfo);\n      }\n      this.currentBaseHistoryInfo = undefined;\n    }\n  };\n  /**\n   * @private\n   * @returns {boolean} -Returns isHandleComplexHistory\n   */\n  EditorHistory.prototype.isHandledComplexHistory = function () {\n    var isHandledComplexHistory = false;\n    if (!(this.isUndoing || this.isRedoing)) {\n      if (this.owner.editorModule.removedBookmarkElements.length > 0 && this.owner.editorModule.insertRemoveBookMarkElements(isHandledComplexHistory)) {\n        isHandledComplexHistory = true;\n      }\n      if (this.owner.editorModule.removedEditRangeEndElements.length > 0 && this.owner.editorModule.insertRemovedEditRangeEndElements(isHandledComplexHistory)) {\n        isHandledComplexHistory = true;\n      }\n      if (this.owner.editorModule.removedEditRangeStartElements.length > 0 && this.owner.editorModule.insertRemovedEditRangeStartElements(isHandledComplexHistory)) {\n        isHandledComplexHistory = true;\n      }\n    }\n    if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.currentHistoryInfo)) {\n      if (this.currentHistoryInfo.action != \"Grouping\") {\n        this.updateHistory();\n        isHandledComplexHistory = true;\n      }\n    } else if (this.owner.editorModule.isHandledComplex) {\n      isHandledComplexHistory = true;\n    }\n    return isHandledComplexHistory;\n  };\n  /**\n   * Update complex history\n   *\n   * @private\n   * @returns {void}\n   */\n  EditorHistory.prototype.updateComplexHistory = function () {\n    var selection = this.documentHelper.selection;\n    if (!isNullOrUndefined(this.currentHistoryInfo) && this.currentHistoryInfo.hasAction) {\n      if (this.currentHistoryInfo.action === 'AutoFormatHyperlink' || this.currentHistoryInfo.action === 'SkipCommentInline' || this.currentHistoryInfo.action === 'DeleteCommentInline' || this.currentHistoryInfo.action === 'RemoveComment') {\n        // this.reLayoutParagraph(startPosition.paragraph, 0);\n        if (selection.owner.editorHistoryModule.isUndoing) {\n          this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.selectionStart);\n          this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.selectionEnd);\n        } else {\n          this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.endPosition);\n          this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.endPosition);\n        }\n      }\n      if (this.currentHistoryInfo.action === 'InsertHyperlink') {\n        var startPosition = new TextPosition(selection.owner);\n        this.owner.editorModule.setPositionForCurrentIndex(startPosition, this.currentHistoryInfo.insertPosition);\n        var endPosition = new TextPosition(selection.owner);\n        this.owner.editorModule.setPositionForCurrentIndex(endPosition, this.currentHistoryInfo.endPosition);\n        this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n        if (endPosition.paragraph !== startPosition.paragraph) {\n          this.documentHelper.layout.reLayoutParagraph(endPosition.paragraph, 0, 0);\n        }\n      }\n      if (this.currentHistoryInfo.action === 'ReplaceAll') {\n        this.documentHelper.contentControlCollection = [];\n        this.owner.editorModule.layoutWholeDocument();\n      } else if (selection.owner.isShiftingEnabled) {\n        this.documentHelper.layout.shiftLayoutedItems(false);\n        if (this.owner.enableHeaderAndFooter) {\n          this.owner.editorModule.updateHeaderFooterWidget();\n        }\n        this.documentHelper.removeEmptyPages();\n      }\n    }\n    if (this.owner.showRevisions) {\n      this.owner.trackChangesPane.updateTrackChanges();\n    }\n    selection.owner.isShiftingEnabled = false;\n    selection.owner.isLayoutEnabled = true;\n    // // selection.addMultipleSelectionRanges();\n    if (!isNullOrUndefined(this.currentHistoryInfo) && this.currentHistoryInfo.action === 'ApplyStyle') {\n      this.owner.editorModule.getOffsetValue(selection);\n    } else {\n      selection.start.updatePhysicalPosition(true);\n      if (selection.isEmpty) {\n        selection.end.setPositionInternal(selection.start);\n      } else {\n        selection.end.updatePhysicalPosition(true);\n      }\n    }\n    selection.upDownSelectionLength = selection.end.location.x;\n    this.documentHelper.isScrollHandler = true;\n    this.viewer.updateScrollBars();\n    selection.fireSelectionChanged(true);\n    this.documentHelper.isScrollHandler = false;\n    if (this.owner.enableAutoFocus) {\n      this.documentHelper.updateFocus();\n    }\n    this.updateComplexHistoryInternal();\n    if (!this.owner.editorModule.isInsertingTOC) {\n      this.owner.editorModule.fireContentChange();\n    }\n  };\n  /**\n   * @private\n   *\n   * @returns {void}\n   */\n  EditorHistory.prototype.updateComplexHistoryInternal = function () {\n    if (!isNullOrUndefined(this.currentHistoryInfo)) {\n      //Updates the current end position\n      if (isNullOrUndefined(this.currentHistoryInfo.endPosition)) {\n        this.currentHistoryInfo.endPosition = this.currentHistoryInfo.insertPosition;\n      }\n      if (this.historyInfoStack.length > 1) {\n        var historyInfo = this.historyInfoStack[this.historyInfoStack.length - 2];\n        historyInfo.addModifiedAction(this.currentHistoryInfo);\n      } else {\n        this.recordChanges(this.currentHistoryInfo);\n      }\n      this.currentHistoryInfo = undefined;\n    }\n  };\n  //List history preservation undo API\n  /**\n   * update list changes for history preservation\n   *\n   * @private\n   * @param  {WAbstractList} currentAbstractList - Specfies the abstractlist.\n   * @param  {WList} list - Specifies the list.\n   * @returns {Dictionary<number, ModifiedLevel>} - Returns the modified action.\n   */\n  EditorHistory.prototype.updateListChangesInHistory = function (currentAbstractList, list) {\n    this.currentBaseHistoryInfo = new BaseHistoryInfo(this.documentHelper.owner);\n    this.currentBaseHistoryInfo.action = 'List';\n    this.currentBaseHistoryInfo.updateSelection();\n    var collection = new Dictionary();\n    for (var i = 0; i < currentAbstractList.levels.length; i++) {\n      var levels = this.documentHelper.getAbstractListById(list.abstractListId).levels[parseInt(i.toString(), 10)];\n      this.currentBaseHistoryInfo.addModifiedPropertiesForList(levels);\n      var modifiedLevel = new ModifiedLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n      if (!isNullOrUndefined(levels)) {\n        this.documentHelper.owner.editorModule.copyListLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n      }\n      collection.add(i, modifiedLevel);\n    }\n    return collection;\n  };\n  /**\n   * Apply list changes\n   *\n   * @private\n   * @param  {Selection} selection - Specifies the selection.\n   * @param  {Dictionary<number, ModifiedLevel>} modifiedLevelsInternal - Specifies the modified levels.\n   * @returns {void}\n   */\n  EditorHistory.prototype.applyListChanges = function (selection, modifiedLevelsInternal) {\n    if (isNullOrUndefined(this.modifiedParaFormats)) {\n      this.modifiedParaFormats = new Dictionary();\n    }\n    var collection = [];\n    for (var i = 0; i < this.documentHelper.listParagraphs.length; i++) {\n      var paragraph = this.documentHelper.listParagraphs[parseInt(i.toString(), 10)];\n      var paraFormat = paragraph.paragraphFormat;\n      var currentList = this.documentHelper.getListById(paraFormat.listFormat.listId);\n      var listLevel = this.documentHelper.layout.getListLevel(currentList, paraFormat.listFormat.listLevelNumber);\n      if (modifiedLevelsInternal.containsKey(paraFormat.listFormat.listLevelNumber) && modifiedLevelsInternal.get(paraFormat.listFormat.listLevelNumber).ownerListLevel === listLevel) {\n        var modifiedFormat = new WParagraphFormat(null);\n        modifiedFormat.leftIndent = paraFormat.leftIndent;\n        modifiedFormat.firstLineIndent = paraFormat.firstLineIndent;\n        var modified = new ModifiedParagraphFormat(paraFormat, modifiedFormat);\n        collection.push(modified);\n        this.owner.editorModule.copyFromListLevelParagraphFormat(paraFormat, listLevel.paragraphFormat);\n      }\n    }\n    this.modifiedParaFormats.add(this.currentBaseHistoryInfo, collection);\n  };\n  /**\n   * Update list changes\n   *\n   * @private\n   * @param  {Dictionary<number, ModifiedLevel>} modifiedCollection - Specifies the modified colection.\n   * @returns {void }\n   */\n  EditorHistory.prototype.updateListChanges = function (modifiedCollection) {\n    this.documentHelper.owner.isLayoutEnabled = false;\n    this.owner.editorModule.updateListParagraphs();\n    for (var i = 0; i < modifiedCollection.keys.length; i++) {\n      var levelNumber = modifiedCollection.keys[parseInt(i.toString(), 10)];\n      var modifiedLevel = modifiedCollection.get(levelNumber);\n      if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n        modifiedLevel = this.currentBaseHistoryInfo.addModifiedPropertiesForList(modifiedLevel.ownerListLevel);\n      }\n      this.owner.editorModule.copyListLevel(modifiedLevel.ownerListLevel, modifiedLevel.modifiedListLevel);\n    }\n    this.documentHelper.owner.isLayoutEnabled = true;\n    this.documentHelper.renderedLists.clear();\n    this.documentHelper.renderedLevelOverrides = [];\n    this.owner.editorModule.layoutWholeDocument();\n    var selection = this.documentHelper.selection;\n    selection.start.updatePhysicalPosition(true);\n    if (selection.isEmpty) {\n      selection.end.setPositionInternal(selection.start);\n    } else {\n      selection.end.updatePhysicalPosition(true);\n    }\n    selection.upDownSelectionLength = selection.end.location.x;\n    selection.fireSelectionChanged(false);\n    this.updateHistory();\n  };\n  /**\n   * Reverts the last editing action.\n   *\n   * @returns {void}\n   */\n  EditorHistory.prototype.undo = function () {\n    if (this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode && this.owner.documentHelper.protectionType !== 'FormFieldsOnly' || !this.canUndo() || !this.owner.enableHistoryMode) {\n      return;\n    }\n    //this.owner.ClearTextSearchResults();\n    var historyInfo = this.undoStack.pop();\n    this.isUndoing = true;\n    historyInfo.revert();\n    this.isUndoing = false;\n    this.owner.selectionModule.checkForCursorVisibility();\n    this.owner.editorModule.isBordersAndShadingDialog = false;\n  };\n  /**\n   * Performs the last reverted action.\n   *\n   * @returns {void}\n   */\n  EditorHistory.prototype.redo = function () {\n    if (this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode && this.owner.documentHelper.protectionType !== 'FormFieldsOnly' || !this.canRedo() || !this.owner.enableHistoryMode) {\n      return;\n    }\n    //this.owner.ClearTextSearchResults();\n    var historyInfo = this.redoStack.pop();\n    if (historyInfo.action === 'BordersAndShading') {\n      this.owner.editorModule.isBordersAndShadingDialog = true;\n    }\n    this.isRedoing = true;\n    historyInfo.revert();\n    this.isRedoing = false;\n    this.owner.selectionModule.checkForCursorVisibility();\n    this.owner.editorModule.isBordersAndShadingDialog = false;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  EditorHistory.prototype.destroy = function () {\n    this.clearHistory();\n    this.undoStackIn = undefined;\n    this.redoStackIn = undefined;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  EditorHistory.prototype.clearHistory = function () {\n    this.clearUndoStack();\n    this.clearRedoStack();\n  };\n  EditorHistory.prototype.clearUndoStack = function () {\n    if (this.canUndo()) {\n      while (this.undoStack.length > 0) {\n        var historyInfo = this.undoStack.pop();\n        historyInfo.destroy();\n        historyInfo = undefined;\n      }\n    }\n  };\n  EditorHistory.prototype.clearRedoStack = function () {\n    if (this.canRedo()) {\n      while (this.redoStack.length > 0) {\n        var historyInfo = this.redoStack.pop();\n        historyInfo.destroy();\n        historyInfo = undefined;\n      }\n    }\n  };\n  return EditorHistory;\n}();\nexport { EditorHistory };","map":{"version":3,"names":["Dictionary","TextPosition","CONTROL_CHARACTERS","isNullOrUndefined","BaseHistoryInfo","ModifiedParagraphFormat","ModifiedLevel","RowHistoryFormat","TableHistoryInfo","HistoryInfo","WParagraphFormat","HelperMethods","EditorHistory","node","undoStackIn","redoStackIn","historyInfoStack","isUndoGroupingEnded","isUndoing","isRedoing","owner","documentHelper","modifiedParaFormats","undoLimitIn","redoLimitIn","Object","defineProperty","prototype","get","length","undefined","set","value","push","pop","enumerable","configurable","Error","viewer","getModuleName","canUndo","undoStack","canRedo","redoStack","initializeHistory","action","currentBaseHistoryInfo","destroy","updateSelection","initComplexHistory","selection","currentHistoryInfo","insertedText","PageBreak","insertPosition","startOffset","ColumnBreak","initResizingHistory","startingPoint","tableResize","resizeNode","currentResizingTable","combineWidget","modifiedProperties","childWidgets","resizerPosition","rowFormat","layout","reLayoutTable","tableHistoryInfo","beginUndoAction","editorModule","clearRedoStack","endUndoAction","updateComplexHistory","updateResizingHistory","point","rowHistoryFormat","y","displacement","convertPixelToPoint","recordChanges","fireContentChange","cellHistoryFormat","x","endIndex","getCellReSizerPosition","editorHistoryModule","baseHistoryInfo","enableHistoryMode","redoLimit","count","undoLimit","splice","lastOperation","updateHistory","endPosition","addModifiedAction","isHandledComplexHistory","removedBookmarkElements","insertRemoveBookMarkElements","removedEditRangeEndElements","insertRemovedEditRangeEndElements","removedEditRangeStartElements","insertRemovedEditRangeStartElements","isHandledComplex","hasAction","setPositionForCurrentIndex","start","selectionStart","end","selectionEnd","startPosition","reLayoutParagraph","paragraph","contentControlCollection","layoutWholeDocument","isShiftingEnabled","shiftLayoutedItems","enableHeaderAndFooter","updateHeaderFooterWidget","removeEmptyPages","showRevisions","trackChangesPane","updateTrackChanges","isLayoutEnabled","getOffsetValue","updatePhysicalPosition","isEmpty","setPositionInternal","upDownSelectionLength","location","isScrollHandler","updateScrollBars","fireSelectionChanged","enableAutoFocus","updateFocus","updateComplexHistoryInternal","isInsertingTOC","historyInfo","updateListChangesInHistory","currentAbstractList","list","collection","i","levels","getAbstractListById","abstractListId","parseInt","toString","addModifiedPropertiesForList","modifiedLevel","copyListLevel","add","applyListChanges","modifiedLevelsInternal","listParagraphs","paraFormat","paragraphFormat","currentList","getListById","listFormat","listId","listLevel","getListLevel","listLevelNumber","containsKey","ownerListLevel","modifiedFormat","leftIndent","firstLineIndent","modified","copyFromListLevelParagraphFormat","updateListChanges","modifiedCollection","updateListParagraphs","keys","levelNumber","modifiedListLevel","renderedLists","clear","renderedLevelOverrides","undo","isReadOnlyMode","isCommentOnlyMode","protectionType","revert","selectionModule","checkForCursorVisibility","isBordersAndShadingDialog","redo","clearHistory","clearUndoStack"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/editor-history/editor-history.js"],"sourcesContent":["import { Dictionary } from '../../base/dictionary';\nimport { TextPosition } from '../selection/selection-helper';\nimport { CONTROL_CHARACTERS } from '../../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BaseHistoryInfo } from './base-history-info';\nimport { ModifiedParagraphFormat, ModifiedLevel, RowHistoryFormat, TableHistoryInfo } from './history-helper';\nimport { HistoryInfo } from './history-info';\nimport { WParagraphFormat } from '../format/paragraph-format';\nimport { HelperMethods } from '../editor/editor-helper';\n/**\n *  `EditorHistory` Module class is used to handle history preservation\n */\nvar EditorHistory = /** @class */ (function () {\n    /**\n     * @param {DocumentEditor} node - Specified the document editor.\n     * @private\n     */\n    function EditorHistory(node) {\n        //Fields\n        this.undoStackIn = [];\n        this.redoStackIn = [];\n        /**\n         * @private\n         */\n        this.historyInfoStack = [];\n        this.isUndoGroupingEnded = true;\n        /**\n         * @private\n         */\n        this.isUndoing = false;\n        /**\n         * @private\n         */\n        this.isRedoing = false;\n        this.owner = node;\n        this.documentHelper = node.documentHelper;\n        this.modifiedParaFormats = new Dictionary();\n        this.undoLimitIn = 500;\n        this.redoLimitIn = 500;\n    }\n    Object.defineProperty(EditorHistory.prototype, \"currentHistoryInfo\", {\n        /**\n         * @private\n         * @returns {HistoryInfo} - Returns the history info.\n         */\n        get: function () {\n            return this.historyInfoStack && this.historyInfoStack.length > 0 ?\n                this.historyInfoStack[this.historyInfoStack.length - 1] : undefined;\n        },\n        /**\n         * @private\n         * @param {HistoryInfo} value - Specified the value.\n         */\n        set: function (value) {\n            if (value instanceof HistoryInfo) {\n                this.historyInfoStack.push(value);\n            }\n            else {\n                this.historyInfoStack.pop();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"undoStack\", {\n        //Properties\n        /**\n         * gets undo stack\n         *\n         * @private\n         * @returns {BaseHistoryInfo[]} - Returns the undo stack.\n         */\n        get: function () {\n            return this.undoStackIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"redoStack\", {\n        /**\n         * gets redo stack\n         *\n         * @private\n         * @returns {BaseHistoryInfo[]} - Returns the redo stack.\n         */\n        get: function () {\n            return this.redoStackIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"undoLimit\", {\n        /**\n         * Gets the limit of undo operations can be done.\n         *\n         * @aspType int\n         * @returns {number} - Returns the redo limit\n         */\n        get: function () {\n            return isNullOrUndefined(this.undoLimitIn) ? 0 : this.undoLimitIn;\n        },\n        /**\n         * Sets the limit of undo operations can be done.\n         *\n         * @aspType int\n         * @param {number} value - Specifies the value to set undo limit.\n         */\n        set: function (value) {\n            if (value < 0) {\n                throw new Error('The limit should be greater than or equal to zero.');\n            }\n            this.undoLimitIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"redoLimit\", {\n        /**\n         * Gets the limit of redo operations can be done.\n         *\n         * @aspType int\n         * @returns {number} - Returns the redo limit.\n         */\n        get: function () {\n            return isNullOrUndefined(this.redoLimitIn) ? 0 : this.redoLimitIn;\n        },\n        /**\n         * Sets the limit of redo operations can be done.\n         *\n         * @aspType int\n         * @param {number} value Specifies the value to set redo limit.\n         */\n        set: function (value) {\n            if (value < 0) {\n                throw new Error('The limit should be greater than or equal to zero.');\n            }\n            this.redoLimitIn = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorHistory.prototype, \"viewer\", {\n        get: function () {\n            return this.owner.viewer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EditorHistory.prototype.getModuleName = function () {\n        return 'EditorHistory';\n    };\n    /**\n     * Determines whether the undo operation can be done.\n     *\n     * @returns {boolean} - Returns true if can undo; Otherwise, false.\n     */\n    EditorHistory.prototype.canUndo = function () {\n        return !isNullOrUndefined(this.undoStack) && this.undoStack.length > 0;\n    };\n    /**\n     * Determines whether the redo operation can be done.\n     *\n     * @returns {boolean} - Returns true if can redo; Otherwise, false.\n     */\n    EditorHistory.prototype.canRedo = function () {\n        return !isNullOrUndefined(this.redoStack) && this.redoStack.length > 0;\n    };\n    //EditorHistory Initialization\n    /**\n     * initialize EditorHistory\n     *\n     * @private\n     * @param {Action} action - Specifies the action.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initializeHistory = function (action) {\n        if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n            this.currentBaseHistoryInfo.destroy();\n        }\n        this.currentBaseHistoryInfo = new BaseHistoryInfo(this.owner);\n        this.currentBaseHistoryInfo.action = action;\n        if (action !== 'ModifyStyle') {\n            this.currentBaseHistoryInfo.updateSelection();\n        }\n    };\n    /**\n     * Initialize complex history\n     *\n     * @private\n     * @param {Selection} selection - Specifies the selection.\n     * @param {Action} action - Specifies the action.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initComplexHistory = function (selection, action) {\n        this.currentHistoryInfo = new HistoryInfo(selection.owner, !isNullOrUndefined(this.currentHistoryInfo));\n        this.currentHistoryInfo.action = action;\n        switch (action) {\n            case 'PageBreak':\n                this.currentHistoryInfo.insertedText = CONTROL_CHARACTERS.PageBreak;\n                this.currentHistoryInfo.insertPosition = selection.startOffset;\n                break;\n            case 'ColumnBreak':\n                this.currentHistoryInfo.insertedText = CONTROL_CHARACTERS.ColumnBreak;\n                this.currentHistoryInfo.insertPosition = selection.startOffset;\n                break;\n        }\n        this.currentHistoryInfo.updateSelection();\n    };\n    /**\n     * @private\n     * @param {Point} startingPoint - Specifies the start point.\n     * @param {TableResizer} tableResize - Spcifies the table resizer.\n     * @returns {void}\n     */\n    EditorHistory.prototype.initResizingHistory = function (startingPoint, tableResize) {\n        if (tableResize.resizeNode === 1) {\n            this.initializeHistory('RowResizing');\n            if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n                /* eslint-disable-next-line max-len */\n                tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n                this.currentBaseHistoryInfo.modifiedProperties.push(new RowHistoryFormat(tableResize.currentResizingTable, startingPoint, tableResize.currentResizingTable.childWidgets[tableResize.resizerPosition].rowFormat, this.owner));\n                this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n            }\n        }\n        else {\n            this.initializeHistory('CellResizing');\n            if (this.currentBaseHistoryInfo) {\n                tableResize.currentResizingTable = tableResize.currentResizingTable.combineWidget(this.viewer);\n                var tableHistoryInfo = new TableHistoryInfo(tableResize.currentResizingTable, this.owner);\n                tableHistoryInfo.startingPoint = startingPoint;\n                this.currentBaseHistoryInfo.modifiedProperties.push(tableHistoryInfo);\n                this.documentHelper.layout.reLayoutTable(tableResize.currentResizingTable);\n            }\n        }\n    };\n    /**\n     * Starts a new undo able action.\n     * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n     */\n    EditorHistory.prototype.beginUndoAction = function () {\n        if (this.isUndoGroupingEnded) {\n            this.owner.editorModule.initComplexHistory('Grouping');\n            this.isUndoGroupingEnded = false;\n            this.clearRedoStack();\n        }\n    };\n    /**\n     * Ends the current undo able action.\n     * > All editing and formatting changes made between `beginUndoAction` and `endUndoAction` will be grouped together as a single undo able action.\n     */\n    EditorHistory.prototype.endUndoAction = function () {\n        if (!this.isUndoGroupingEnded) {\n            this.updateComplexHistory();\n            this.isUndoGroupingEnded = true;\n        }\n    };\n    /**\n     * Update resizing history\n     *\n     * @private\n     * @param {Point} point - Specifies the point.\n     * @param {TableResizer} tableResize - Specifies the table resizer.\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateResizingHistory = function (point, tableResize) {\n        if (tableResize.resizeNode === 1) {\n            if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n                var rowHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n                if (rowHistoryFormat.startingPoint.y === point.y) {\n                    this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n                }\n                else {\n                    rowHistoryFormat.displacement = HelperMethods.convertPixelToPoint(point.y - rowHistoryFormat.startingPoint.y);\n                    this.recordChanges(this.currentBaseHistoryInfo);\n                    this.owner.fireContentChange();\n                    this.currentBaseHistoryInfo = undefined;\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n                var cellHistoryFormat = this.currentBaseHistoryInfo.modifiedProperties[0];\n                if (cellHistoryFormat.startingPoint.x === point.x) {\n                    this.currentBaseHistoryInfo.modifiedProperties.length = 0;\n                }\n                else {\n                    cellHistoryFormat.displacement = HelperMethods.convertPixelToPoint(point.x - cellHistoryFormat.startingPoint.x);\n                    cellHistoryFormat.endIndex = tableResize.getCellReSizerPosition(point);\n                    this.owner.editorHistoryModule.recordChanges(this.currentBaseHistoryInfo);\n                    this.owner.fireContentChange();\n                    this.currentBaseHistoryInfo = undefined;\n                }\n            }\n        }\n    };\n    /**\n     * Record the changes\n     *\n     * @private\n     * @param {BaseHistoryInfo} baseHistoryInfo - Specified the base history info.\n     * @returns {void}\n     */\n    EditorHistory.prototype.recordChanges = function (baseHistoryInfo) {\n        if (!this.owner.enableHistoryMode) {\n            return;\n        }\n        if (this.isUndoing) {\n            if (isNullOrUndefined(this.redoStack)) {\n                this.redoStackIn = [];\n            }\n            if (this.redoStack.length === this.redoLimit && this.redoLimit > 0) {\n                var count = this.undoLimit > 20 ? 10 : 1;\n                this.redoStackIn.splice(0, count);\n            }\n            if (this.redoStack.length < this.redoLimit) {\n                this.redoStack.push(baseHistoryInfo);\n            }\n        }\n        else {\n            if (!this.isRedoing) {\n                this.clearRedoStack();\n            }\n            if (isNullOrUndefined(this.undoStack)) {\n                this.undoStackIn = [];\n            }\n            if (this.undoStack.length === this.undoLimit && this.undoLimit > 0) {\n                var count = this.undoLimit > 20 ? 10 : 1;\n                this.undoStackIn.splice(0, count);\n            }\n            if (this.undoStack.length < this.undoLimit) {\n                this.undoStackIn.push(baseHistoryInfo);\n            }\n        }\n        this.lastOperation = baseHistoryInfo;\n    };\n    /**\n     * update EditorHistory\n     *\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateHistory = function () {\n        if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.currentBaseHistoryInfo)) {\n            //Updates the current end position\n            if (!isNullOrUndefined(this.currentBaseHistoryInfo)\n                && isNullOrUndefined(this.currentBaseHistoryInfo.endPosition)) {\n                this.currentBaseHistoryInfo.endPosition = this.currentBaseHistoryInfo.insertPosition;\n            }\n            if (!isNullOrUndefined(this.currentHistoryInfo)) {\n                this.currentHistoryInfo.addModifiedAction(this.currentBaseHistoryInfo);\n            }\n            else {\n                this.recordChanges(this.currentBaseHistoryInfo);\n            }\n            this.currentBaseHistoryInfo = undefined;\n        }\n    };\n    /**\n     * @private\n     * @returns {boolean} -Returns isHandleComplexHistory\n     */\n    EditorHistory.prototype.isHandledComplexHistory = function () {\n        var isHandledComplexHistory = false;\n        if (!(this.isUndoing || this.isRedoing)) {\n            if (this.owner.editorModule.removedBookmarkElements.length > 0 && this.owner.editorModule.insertRemoveBookMarkElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n            if (this.owner.editorModule.removedEditRangeEndElements.length > 0 && this.owner.editorModule.insertRemovedEditRangeEndElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n            if (this.owner.editorModule.removedEditRangeStartElements.length > 0 && this.owner.editorModule.insertRemovedEditRangeStartElements(isHandledComplexHistory)) {\n                isHandledComplexHistory = true;\n            }\n        }\n        if (this.documentHelper.owner.enableHistoryMode && !isNullOrUndefined(this.currentHistoryInfo)) {\n            if (this.currentHistoryInfo.action != \"Grouping\") {\n                this.updateHistory();\n                isHandledComplexHistory = true;\n            }\n        }\n        else if (this.owner.editorModule.isHandledComplex) {\n            isHandledComplexHistory = true;\n        }\n        return isHandledComplexHistory;\n    };\n    /**\n     * Update complex history\n     *\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateComplexHistory = function () {\n        var selection = this.documentHelper.selection;\n        if (!isNullOrUndefined(this.currentHistoryInfo) && this.currentHistoryInfo.hasAction) {\n            if (this.currentHistoryInfo.action === 'AutoFormatHyperlink' || this.currentHistoryInfo.action === 'SkipCommentInline'\n                || this.currentHistoryInfo.action === 'DeleteCommentInline' || this.currentHistoryInfo.action === 'RemoveComment') {\n                // this.reLayoutParagraph(startPosition.paragraph, 0);\n                if (selection.owner.editorHistoryModule.isUndoing) {\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.selectionStart);\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.selectionEnd);\n                }\n                else {\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.start, this.currentHistoryInfo.endPosition);\n                    this.owner.editorModule.setPositionForCurrentIndex(selection.end, this.currentHistoryInfo.endPosition);\n                }\n            }\n            if (this.currentHistoryInfo.action === 'InsertHyperlink') {\n                var startPosition = new TextPosition(selection.owner);\n                this.owner.editorModule.setPositionForCurrentIndex(startPosition, this.currentHistoryInfo.insertPosition);\n                var endPosition = new TextPosition(selection.owner);\n                this.owner.editorModule.setPositionForCurrentIndex(endPosition, this.currentHistoryInfo.endPosition);\n                this.documentHelper.layout.reLayoutParagraph(startPosition.paragraph, 0, 0);\n                if (endPosition.paragraph !== startPosition.paragraph) {\n                    this.documentHelper.layout.reLayoutParagraph(endPosition.paragraph, 0, 0);\n                }\n            }\n            if (this.currentHistoryInfo.action === 'ReplaceAll') {\n                this.documentHelper.contentControlCollection = [];\n                this.owner.editorModule.layoutWholeDocument();\n            }\n            else if (selection.owner.isShiftingEnabled) {\n                this.documentHelper.layout.shiftLayoutedItems(false);\n                if (this.owner.enableHeaderAndFooter) {\n                    this.owner.editorModule.updateHeaderFooterWidget();\n                }\n                this.documentHelper.removeEmptyPages();\n            }\n        }\n        if (this.owner.showRevisions) {\n            this.owner.trackChangesPane.updateTrackChanges();\n        }\n        selection.owner.isShiftingEnabled = false;\n        selection.owner.isLayoutEnabled = true;\n        // // selection.addMultipleSelectionRanges();\n        if (!isNullOrUndefined(this.currentHistoryInfo) && this.currentHistoryInfo.action === 'ApplyStyle') {\n            this.owner.editorModule.getOffsetValue(selection);\n        }\n        else {\n            selection.start.updatePhysicalPosition(true);\n            if (selection.isEmpty) {\n                selection.end.setPositionInternal(selection.start);\n            }\n            else {\n                selection.end.updatePhysicalPosition(true);\n            }\n        }\n        selection.upDownSelectionLength = selection.end.location.x;\n        this.documentHelper.isScrollHandler = true;\n        this.viewer.updateScrollBars();\n        selection.fireSelectionChanged(true);\n        this.documentHelper.isScrollHandler = false;\n        if (this.owner.enableAutoFocus) {\n            this.documentHelper.updateFocus();\n        }\n        this.updateComplexHistoryInternal();\n        if (!this.owner.editorModule.isInsertingTOC) {\n            this.owner.editorModule.fireContentChange();\n        }\n    };\n    /**\n     * @private\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.updateComplexHistoryInternal = function () {\n        if (!isNullOrUndefined(this.currentHistoryInfo)) {\n            //Updates the current end position\n            if (isNullOrUndefined(this.currentHistoryInfo.endPosition)) {\n                this.currentHistoryInfo.endPosition = this.currentHistoryInfo.insertPosition;\n            }\n            if (this.historyInfoStack.length > 1) {\n                var historyInfo = this.historyInfoStack[this.historyInfoStack.length - 2];\n                historyInfo.addModifiedAction(this.currentHistoryInfo);\n            }\n            else {\n                this.recordChanges(this.currentHistoryInfo);\n            }\n            this.currentHistoryInfo = undefined;\n        }\n    };\n    //List history preservation undo API\n    /**\n     * update list changes for history preservation\n     *\n     * @private\n     * @param  {WAbstractList} currentAbstractList - Specfies the abstractlist.\n     * @param  {WList} list - Specifies the list.\n     * @returns {Dictionary<number, ModifiedLevel>} - Returns the modified action.\n     */\n    EditorHistory.prototype.updateListChangesInHistory = function (currentAbstractList, list) {\n        this.currentBaseHistoryInfo = new BaseHistoryInfo(this.documentHelper.owner);\n        this.currentBaseHistoryInfo.action = 'List';\n        this.currentBaseHistoryInfo.updateSelection();\n        var collection = new Dictionary();\n        for (var i = 0; i < currentAbstractList.levels.length; i++) {\n            var levels = this.documentHelper.getAbstractListById(list.abstractListId).levels[parseInt(i.toString(), 10)];\n            this.currentBaseHistoryInfo.addModifiedPropertiesForList(levels);\n            var modifiedLevel = new ModifiedLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n            if (!isNullOrUndefined(levels)) {\n                this.documentHelper.owner.editorModule.copyListLevel(levels, currentAbstractList.levels[parseInt(i.toString(), 10)]);\n            }\n            collection.add(i, modifiedLevel);\n        }\n        return collection;\n    };\n    /**\n     * Apply list changes\n     *\n     * @private\n     * @param  {Selection} selection - Specifies the selection.\n     * @param  {Dictionary<number, ModifiedLevel>} modifiedLevelsInternal - Specifies the modified levels.\n     * @returns {void}\n     */\n    EditorHistory.prototype.applyListChanges = function (selection, modifiedLevelsInternal) {\n        if (isNullOrUndefined(this.modifiedParaFormats)) {\n            this.modifiedParaFormats = new Dictionary();\n        }\n        var collection = [];\n        for (var i = 0; i < this.documentHelper.listParagraphs.length; i++) {\n            var paragraph = this.documentHelper.listParagraphs[parseInt(i.toString(), 10)];\n            var paraFormat = paragraph.paragraphFormat;\n            var currentList = this.documentHelper.getListById(paraFormat.listFormat.listId);\n            var listLevel = this.documentHelper.layout.getListLevel(currentList, paraFormat.listFormat.listLevelNumber);\n            if (modifiedLevelsInternal.containsKey(paraFormat.listFormat.listLevelNumber)\n                && modifiedLevelsInternal.get(paraFormat.listFormat.listLevelNumber).ownerListLevel === listLevel) {\n                var modifiedFormat = new WParagraphFormat(null);\n                modifiedFormat.leftIndent = paraFormat.leftIndent;\n                modifiedFormat.firstLineIndent = paraFormat.firstLineIndent;\n                var modified = new ModifiedParagraphFormat(paraFormat, modifiedFormat);\n                collection.push(modified);\n                this.owner.editorModule.copyFromListLevelParagraphFormat(paraFormat, listLevel.paragraphFormat);\n            }\n        }\n        this.modifiedParaFormats.add(this.currentBaseHistoryInfo, collection);\n    };\n    /**\n     * Update list changes\n     *\n     * @private\n     * @param  {Dictionary<number, ModifiedLevel>} modifiedCollection - Specifies the modified colection.\n     * @returns {void }\n     */\n    EditorHistory.prototype.updateListChanges = function (modifiedCollection) {\n        this.documentHelper.owner.isLayoutEnabled = false;\n        this.owner.editorModule.updateListParagraphs();\n        for (var i = 0; i < modifiedCollection.keys.length; i++) {\n            var levelNumber = modifiedCollection.keys[parseInt(i.toString(), 10)];\n            var modifiedLevel = modifiedCollection.get(levelNumber);\n            if (!isNullOrUndefined(this.currentBaseHistoryInfo)) {\n                modifiedLevel = this.currentBaseHistoryInfo.addModifiedPropertiesForList(modifiedLevel.ownerListLevel);\n            }\n            this.owner.editorModule.copyListLevel(modifiedLevel.ownerListLevel, modifiedLevel.modifiedListLevel);\n        }\n        this.documentHelper.owner.isLayoutEnabled = true;\n        this.documentHelper.renderedLists.clear();\n        this.documentHelper.renderedLevelOverrides = [];\n        this.owner.editorModule.layoutWholeDocument();\n        var selection = this.documentHelper.selection;\n        selection.start.updatePhysicalPosition(true);\n        if (selection.isEmpty) {\n            selection.end.setPositionInternal(selection.start);\n        }\n        else {\n            selection.end.updatePhysicalPosition(true);\n        }\n        selection.upDownSelectionLength = selection.end.location.x;\n        selection.fireSelectionChanged(false);\n        this.updateHistory();\n    };\n    /**\n     * Reverts the last editing action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.undo = function () {\n        if ((this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode &&\n            (this.owner.documentHelper.protectionType !== 'FormFieldsOnly')) ||\n            !this.canUndo() || !this.owner.enableHistoryMode) {\n            return;\n        }\n        //this.owner.ClearTextSearchResults();\n        var historyInfo = this.undoStack.pop();\n        this.isUndoing = true;\n        historyInfo.revert();\n        this.isUndoing = false;\n        this.owner.selectionModule.checkForCursorVisibility();\n        this.owner.editorModule.isBordersAndShadingDialog = false;\n    };\n    /**\n     * Performs the last reverted action.\n     *\n     * @returns {void}\n     */\n    EditorHistory.prototype.redo = function () {\n        if ((this.owner.isReadOnlyMode && !this.owner.documentHelper.isCommentOnlyMode &&\n            (this.owner.documentHelper.protectionType !== 'FormFieldsOnly'))\n            || !this.canRedo() || !this.owner.enableHistoryMode) {\n            return;\n        }\n        //this.owner.ClearTextSearchResults();\n        var historyInfo = this.redoStack.pop();\n        if (historyInfo.action === 'BordersAndShading') {\n            this.owner.editorModule.isBordersAndShadingDialog = true;\n        }\n        this.isRedoing = true;\n        historyInfo.revert();\n        this.isRedoing = false;\n        this.owner.selectionModule.checkForCursorVisibility();\n        this.owner.editorModule.isBordersAndShadingDialog = false;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.destroy = function () {\n        this.clearHistory();\n        this.undoStackIn = undefined;\n        this.redoStackIn = undefined;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    EditorHistory.prototype.clearHistory = function () {\n        this.clearUndoStack();\n        this.clearRedoStack();\n    };\n    EditorHistory.prototype.clearUndoStack = function () {\n        if (this.canUndo()) {\n            while (this.undoStack.length > 0) {\n                var historyInfo = this.undoStack.pop();\n                historyInfo.destroy();\n                historyInfo = undefined;\n            }\n        }\n    };\n    EditorHistory.prototype.clearRedoStack = function () {\n        if (this.canRedo()) {\n            while (this.redoStack.length > 0) {\n                var historyInfo = this.redoStack.pop();\n                historyInfo.destroy();\n                historyInfo = undefined;\n            }\n        }\n    };\n    return EditorHistory;\n}());\nexport { EditorHistory };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}