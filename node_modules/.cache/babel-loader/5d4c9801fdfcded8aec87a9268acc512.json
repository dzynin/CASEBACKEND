{"ast":null,"code":"var _jsxFileName = \"/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/FileUploadComponent.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"reactstrap\";\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\n\nconst async = require('async');\n\nfunction FileUploadComponent(props) {\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState([]);\n  let existsFileName = []; // const [imagePreviewUrl, setImagePreviewUrl] = useState(\"\");\n  // const [uploadedResponse, setUploadedResponse] = useState(\"\");\n\n  async function _handleSubmit(e) {\n    e.preventDefault();\n    if (!file) return null;\n    console.log(\"existsFileName\", existsFileName);\n\n    if (existsFileName.length > 0) {\n      alert(\"File is already Exists\", existsFileName);\n    } else {\n      //dispatch({ type: \"ADD_FILE\", payload: file });\n      const data = new FormData(); //data.append(\"file\", file);\n\n      for (const key of Object.keys(file)) {\n        data.append('file', file[key]);\n      }\n\n      setIsLoading(true);\n      await axios.post(`${BASE_URL_DEV}/upload/file`, data, {\n        headers: {\n          'x-access-token': state.auth && state.auth.authToken\n        }\n      }).then(function (response) {\n        if (response.data) {\n          var data = file;\n          dispatch({\n            type: \"MESSAGE\",\n            payload: response.data.message\n          });\n\n          try {\n            async.eachSeries(data, function (element, cbBatch) {\n              axios.get(`${BASE_URL_DEV}/highlights-json/${state.auth && state.auth.userPublicId}/${element.name}`, {\n                headers: {\n                  'x-access-token': state.auth && state.auth.authToken\n                }\n              }).then(function (result) {\n                const fileHighlights = result.data;\n                dispatch({\n                  type: \"SET_CURR_FILE\",\n                  payload: file[0]\n                });\n                setFile([]);\n\n                if (fileHighlights && fileHighlights.highlights) {\n                  dispatch({\n                    type: \"SET_FILE_HIGHLIGHTS\",\n                    payload: fileHighlights.highlights\n                  });\n                }\n\n                cbBatch(null);\n              });\n            }, loopErrBatch => {\n              console.log(loopErrBatch);\n\n              (async () => {\n                const result = await axios(`${BASE_URL_DEV}/get/files`, {\n                  headers: {\n                    \"x-access-token\": state.auth && state.auth.authToken\n                  }\n                });\n                const files = result.data && result.data.files;\n                console.log(\"resultresultresultresult\", result);\n\n                if (result && files && files.length > 0) {\n                  const results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\n                    headers: {\n                      \"x-access-token\": state.auth && state.auth.authToken\n                    }\n                  });\n                  const allgraphs = results.data;\n                  let Obj = {};\n                  let _id = \"\";\n                  results && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\n                    _id = x.fileName;\n                    Obj[_id] = x.links.filter(e => e.source == \"CITATION\" || e.source == \"PROVISION\");\n                  });\n                  var fileNew = files;\n                  fileNew.forEach(element => {\n                    element[\"CITATION\"] = Obj && Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source == \"CITATION\") : [\"N/A\"];\n                    element[\"PROVISION\"] = Obj && Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source == \"PROVISION\") : [\"N/A\"];\n                  });\n                  setIsLoading(false);\n                  dispatch({\n                    type: \"ADD_FILE\",\n                    payload: fileNew\n                  });\n                  dispatch({\n                    type: \"SET_MODAL\",\n                    payload: true\n                  });\n                }\n              })();\n\n              console.log(\"All Batch Completed\");\n            });\n          } catch (error) {\n            console.log(\"error :--- \", error);\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        if (error && error.response) {\n          dispatch({\n            type: \"ERROR\",\n            payload: error.response.statusText || 'File Upload Failed!!'\n          });\n        }\n      });\n    } // let uploadedFile = {\n    //   lastModified: file.lastModified,\n    //   lastModifiedDate: new Date(file.lastModifiedDate),\n    //   name: file.name,\n    //   size: file.size,\n    //   type: file.type,\n    // };\n\n  }\n\n  function _handleImageChange(e) {\n    e.preventDefault();\n    let newfile = [];\n    let file = e.target.files; //console.log(file[0]);\n\n    for (let i = 0; i < file.length; i++) {\n      let existFile = state.files.filter(e => e.name == file[i].name);\n\n      if (existFile.length != 0) {\n        alert(`${existFile[0].name} is already Exists`);\n      } else {\n        let reader = new FileReader();\n        newfile.push(file[i]);\n        reader.readAsDataURL(file[i]);\n\n        reader.onload = () => {\n          setFile(newfile);\n        };\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previewComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => _handleSubmit(e),\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    className: \"custom-file-input\" //id=\"inputGroupFile01\"\n    ,\n    multiple: \"multiple\",\n    onChange: e => _handleImageChange(e),\n    \"aria-describedby\": \"inputGroupFileAddon01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: '#c7c7c7'\n    },\n    className: \"custom-file-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 8\n    }\n  }, file.length === 0 ? 'Choose file' : file.length + ' files selected'))), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-md submitButton\",\n    color: \"success\",\n    type: \"submit\",\n    onClick: e => _handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 6\n    }\n  }, \"Upload File\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }) : null)));\n}\n\nexport default FileUploadComponent;","map":{"version":3,"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/src/Dashboard/FileUploadComponent.js"],"names":["React","useContext","useState","Fragment","axios","Button","UserContext","BASE_URL_DEV","async","require","FileUploadComponent","props","state","dispatch","isLoading","setIsLoading","file","setFile","existsFileName","_handleSubmit","e","preventDefault","console","log","length","alert","data","FormData","key","Object","keys","append","post","headers","auth","authToken","then","response","type","payload","message","eachSeries","element","cbBatch","get","userPublicId","name","result","fileHighlights","highlights","loopErrBatch","files","results","allgraphs","Obj","_id","graphdata","filter","x","fileName","links","source","fileNew","forEach","error","catch","statusText","_handleImageChange","newfile","target","i","existFile","reader","FileReader","push","readAsDataURL","onload","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"reactstrap\";\r\nimport { UserContext } from \"../App\";\r\nimport { BASE_URL_DEV } from \"../utils\";\r\nconst async = require('async')\r\n\r\nfunction FileUploadComponent(props) {\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [file, setFile] = useState([]);\r\n\tlet existsFileName = [];\r\n\t// const [imagePreviewUrl, setImagePreviewUrl] = useState(\"\");\r\n\t// const [uploadedResponse, setUploadedResponse] = useState(\"\");\r\n\r\n\tasync function _handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tif (!file) return null;\r\n\t\tconsole.log(\"existsFileName\", existsFileName);\r\n\t\tif (existsFileName.length > 0) {\r\n\t\t\talert(\"File is already Exists\", existsFileName);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//dispatch({ type: \"ADD_FILE\", payload: file });\r\n\t\t\tconst data = new FormData();\r\n\t\t\t//data.append(\"file\", file);\r\n\t\t\tfor (const key of Object.keys(file)) {\r\n\t\t\t\tdata.append('file', file[key])\r\n\t\t\t}\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tawait axios\r\n\t\t\t\t.post(`${BASE_URL_DEV}/upload/file`, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'x-access-token': state.auth && state.auth.authToken,\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function (response) {\r\n\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tvar data = file\r\n\t\t\t\t\t\tdispatch({ type: \"MESSAGE\", payload: response.data.message });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tasync.eachSeries(data, function (element, cbBatch) {\r\n\t\t\t\t\t\t\t\taxios.get(`${BASE_URL_DEV}/highlights-json/${state.auth && state.auth.userPublicId\r\n\t\t\t\t\t\t\t\t\t}/${element.name}`, {\r\n\t\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\t\t'x-access-token': state.auth && state.auth.authToken,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.then(function (result) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst fileHighlights = result.data;\r\n\t\t\t\t\t\t\t\t\t\tdispatch({ type: \"SET_CURR_FILE\", payload: file[0] });\r\n\t\t\t\t\t\t\t\t\t\tsetFile([]);\r\n\t\t\t\t\t\t\t\t\t\tif (fileHighlights && fileHighlights.highlights) {\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"SET_FILE_HIGHLIGHTS\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpayload: fileHighlights.highlights,\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcbBatch(null);\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t}, (loopErrBatch) => {\r\n\r\n\t\t\t\t\t\t\t\tconsole.log(loopErrBatch);\r\n\t\t\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\t\t\tconst result = await axios(`${BASE_URL_DEV}/get/files`, {\r\n\t\t\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\t\t\t\"x-access-token\": state.auth && state.auth.authToken,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tconst files = result.data && result.data.files;\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"resultresultresultresult\", result)\r\n\t\t\t\t\t\t\t\t\tif (result && files && files.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tconst results = await axios(`${BASE_URL_DEV}/get-graphdata`, {\r\n\t\t\t\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"x-access-token\": state.auth && state.auth.authToken,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tconst allgraphs = results.data;\r\n\t\t\t\t\t\t\t\t\t\tlet Obj = {};\r\n\t\t\t\t\t\t\t\t\t\tlet _id = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t\tresults && allgraphs && allgraphs.graphdata && allgraphs.graphdata.length > 0 && allgraphs.graphdata.filter(x => {\r\n\t\t\t\t\t\t\t\t\t\t\t_id = x.fileName\r\n\t\t\t\t\t\t\t\t\t\t\tObj[_id] = x.links.filter(e => e.source == \"CITATION\" || e.source == \"PROVISION\")\r\n\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tvar fileNew = files\r\n\t\t\t\t\t\t\t\t\t\tfileNew.forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\t\telement[\"CITATION\"] = Obj && Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source == \"CITATION\") : [\"N/A\"]\r\n\t\t\t\t\t\t\t\t\t\t\telement[\"PROVISION\"] = Obj && Obj[element.name] && Obj[element.name].length > 0 ? Obj[element.name].filter(e => e.source == \"PROVISION\") : [\"N/A\"]\r\n\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t\t\t\t\t\tdispatch({ type: \"ADD_FILE\", payload: fileNew });\r\n\t\t\t\t\t\t\t\t\t\tdispatch({ type: \"SET_MODAL\", payload: true });\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t\t\tconsole.log(\"All Batch Completed\");\r\n\t\t\t\t\t\t\t});\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.log(\"error :--- \", error)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\r\n\t\t\t\t\tif (error && error.response) {\r\n\t\t\t\t\t\tdispatch({ type: \"ERROR\", payload: error.response.statusText || 'File Upload Failed!!' });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t// let uploadedFile = {\r\n\t\t//   lastModified: file.lastModified,\r\n\t\t//   lastModifiedDate: new Date(file.lastModifiedDate),\r\n\t\t//   name: file.name,\r\n\t\t//   size: file.size,\r\n\t\t//   type: file.type,\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\tfunction _handleImageChange(e) {\r\n\t\te.preventDefault();\r\n\t\tlet newfile = [];\r\n\t\tlet file = e.target.files;\r\n\t\t//console.log(file[0]);\r\n\t\tfor (let i = 0; i < file.length; i++) {\r\n\t\t\tlet existFile = state.files.filter(e => e.name == file[i].name);\r\n\r\n\t\t\tif (existFile.length != 0) {\r\n\t\t\t\talert(`${existFile[0].name} is already Exists`)\r\n\t\t\t} else {\r\n\t\t\t\tlet reader = new FileReader();\r\n\t\t\t\tnewfile.push(file[i]);\r\n\t\t\t\treader.readAsDataURL(file[i])\r\n\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\tsetFile(newfile);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"previewComponent\">\r\n\t\t\t\t<form onSubmit={(e) => _handleSubmit(e)} encType=\"multipart/form-data\">\r\n\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t<div className=\"custom-file\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\t\t\tclassName=\"custom-file-input\"\r\n\t\t\t\t\t\t\t\t//id=\"inputGroupFile01\"\r\n\t\t\t\t\t\t\t\tmultiple=\"multiple\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => _handleImageChange(e)}\r\n\t\t\t\t\t\t\t\taria-describedby=\"inputGroupFileAddon01\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label style={{ color: '#c7c7c7' }} className=\"custom-file-label\" >\r\n\t\t\t\t\t\t\t\t{file.length === 0 ? 'Choose file' : file.length + ' files selected'}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"btn btn-md submitButton\"\r\n\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tonClick={(e) => _handleSubmit(e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpload File\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t<div className=\"loading\"></div>\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default FileUploadComponent;\r\n"]},"metadata":{},"sourceType":"module"}