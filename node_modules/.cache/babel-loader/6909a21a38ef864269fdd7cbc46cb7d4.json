{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ElementBox, ParagraphWidget, BookmarkElementBox, FootnoteElementBox } from '../viewer/page';\nimport { WCharacterFormat } from '../format/character-format';\nimport { WRowFormat } from '../format/row-format';\nimport { revisionActionEvent } from '../../base/index';\n/**\n * The revision class which holds the information related to changes made in the document\n */\nvar Revision = /** @class */function () {\n  function Revision(documentHelper, author, date) {\n    /**\n     * Gets or sets the author name who made the change\n     *\n     * @private\n     */\n    this.author = null;\n    /**\n     * Indicates when the track changes made\n     *\n     * @private\n     */\n    this.date = null;\n    /**\n     * Holds the reference of the items which are under this revision.\n     *\n     * @private\n     */\n    this.range = [];\n    /**\n     * @private\n     */\n    this.revisionID = '';\n    /**\n     * Used to update cursor position by ensuring items were removed or not\n     */\n    this.isContentRemoved = false;\n    this.isTableRevision = false;\n    /**\n     * Indicates whether to skip unlinking ranges for table elements.\n     */\n    this.canSkipTableItems = false;\n    this.skipUnLinkElement = false;\n    this.author = author;\n    if (isNullOrUndefined(this.author)) {\n      this.author = \"Unknown\";\n    }\n    this.date = date;\n    this.owner = documentHelper;\n  }\n  Revision.prototype.handleAcceptReject = function (isFromAccept) {\n    this.owner.selectionModule.selectRevision(this);\n    var selection = this.owner.selectionModule;\n    var startPos = selection.start;\n    var endPos = selection.end;\n    if (!selection.start.isExistBefore(selection.end)) {\n      startPos = selection.end;\n      endPos = selection.start;\n    }\n    var blockInfo = selection.getParagraphInfo(startPos);\n    this.owner.editorModule.initHistory(isFromAccept ? 'Accept Change' : 'Reject Change');\n    var fieldBegin = selection.getHyperlinkField();\n    if (isFromAccept && this.revisionType === 'Deletion' && !isNullOrUndefined(fieldBegin) && this.range.indexOf(fieldBegin) !== -1 && this.range.indexOf(fieldBegin.fieldEnd) !== -1) {\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n    }\n    this.owner.editorHistoryModule.currentBaseHistoryInfo.markerData.push(this.owner.editorModule.getMarkerData(undefined, undefined, this));\n    if (this.revisionType === 'Deletion') {\n      blockInfo = selection.getParagraphInfo(this.owner.selectionModule.start);\n      selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    } else {\n      selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n    }\n    this.owner.editorModule.updateInsertPosition();\n    this.isContentRemoved = false;\n    this.canSkipTableItems = false;\n    this.skipUnLinkElement = false;\n    // Implement to accept/reject the revision\n    if (this.revisionType === 'Insertion' || this.revisionType === 'Deletion' || this.revisionType === 'MoveFrom' || this.revisionType === 'MoveTo') {\n      this.owner.isShiftingEnabled = true;\n      var rangeIndex = 0;\n      while (this.range.length > 0) {\n        if (this.range[rangeIndex] instanceof ElementBox || this.range[rangeIndex] instanceof WCharacterFormat || this.range[rangeIndex] instanceof WRowFormat) {\n          if (this.range[rangeIndex] instanceof BookmarkElementBox && isFromAccept && this.revisionType === 'Deletion') {\n            var inline = this.range[rangeIndex];\n            if (this.owner.documentHelper.bookmarks.containsKey(inline.name)) {\n              this.owner.documentHelper.bookmarks.remove(inline.name);\n            }\n          }\n          var moveToNextItem = this.unlinkRangeItem(this.range[rangeIndex], this, isFromAccept, startPos, endPos);\n          if (moveToNextItem) {\n            rangeIndex++;\n          } else {\n            rangeIndex = 0;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n    this.isTableRevision = false;\n    if (this.isContentRemoved) {\n      var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n      this.owner.selectionModule.selectContent(textPosition, true);\n      this.owner.editorModule.updateEndPosition();\n    } else {\n      selection.selectRange(startPos, endPos);\n      this.owner.editorModule.updateHistoryPosition(endPos, false);\n    }\n    if (this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo && this.owner.editorHistoryModule.currentBaseHistoryInfo.action !== 'BackSpace') {\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.reverse();\n    }\n    if (this.owner.editorHistoryModule) {\n      if (this.owner.trackChangesPane.isTrackingPageBreak) {\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'TrackingPageBreak';\n        this.owner.trackChangesPane.isTrackingPageBreak = false;\n      }\n      var editorHistory = this.owner.editorHistoryModule;\n      if (editorHistory.currentHistoryInfo && (editorHistory.currentHistoryInfo.action === 'Accept All' || editorHistory.currentHistoryInfo.action === 'Reject All')) {\n        if (this.owner.documentHelper.blockToShift) {\n          this.owner.documentHelper.layout.shiftLayoutedItems(false);\n        }\n      }\n      editorHistory.updateHistory();\n    }\n    this.owner.editorModule.reLayout(this.owner.selectionModule);\n    if (blockInfo.paragraph.isInHeaderFooter) {\n      this.owner.editorModule.updateHeaderFooterWidget();\n    }\n  };\n  Revision.prototype.handleGroupAcceptReject = function (isAccept) {\n    if (this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n      this.owner.editorModule.initComplexHistory(isAccept ? 'Accept All' : 'Reject All');\n      var groupingAcceptReject = this.owner.trackChangesPane.tableRevisions.get(this);\n      for (var i = groupingAcceptReject.length - 1; i >= 0; i--) {\n        if (isAccept) {\n          groupingAcceptReject[i].handleAcceptReject(true);\n        } else {\n          groupingAcceptReject[i].handleAcceptReject(false);\n        }\n      }\n      if (this.owner.editorHistoryModule) {\n        this.owner.editorHistoryModule.updateComplexHistory();\n      }\n      if (this.owner.selectionModule.start.paragraph.isInsideTable) {\n        var table = this.owner.selectionModule.start.paragraph.containerWidget.ownerTable;\n        this.owner.documentHelper.layout.reLayoutTable(table);\n      }\n    }\n  };\n  /**\n   * Method which accepts the selected revision, revision marks will be removed and changes will be included in the viewer.\n   *\n   * @returns {void}\n   */\n  Revision.prototype.accept = function () {\n    var eventArgs = {\n      author: this.author,\n      cancel: false,\n      revisionType: this.revisionType,\n      actionType: 'Accept'\n    };\n    this.owner.trigger(revisionActionEvent, eventArgs);\n    if (eventArgs.cancel) {\n      return;\n    }\n    if (!this.owner.documentHelper.isTrackedOnlyMode) {\n      if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof WRowFormat && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n        this.handleGroupAcceptReject(true);\n      } else {\n        this.handleAcceptReject(true);\n      }\n    }\n  };\n  /**\n   * Method which rejects the selected revision, revision marks will be removed leaving the original content.\n   */\n  Revision.prototype.reject = function () {\n    var eventArgs = {\n      author: this.author,\n      cancel: false,\n      revisionType: this.revisionType,\n      actionType: 'Reject'\n    };\n    this.owner.trigger(revisionActionEvent, eventArgs);\n    if (eventArgs.cancel) {\n      return;\n    }\n    if (!this.owner.documentHelper.isTrackedOnlyMode) {\n      if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof WRowFormat && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n        this.handleGroupAcceptReject(false);\n      } else {\n        this.handleAcceptReject(false);\n      }\n    }\n  };\n  /**\n   * Unlinks revision and its assosiated range\n   * @private\n   * @param item\n   * @param revision\n   * @param isFromAccept\n   */\n  /* eslint-disable  */\n  Revision.prototype.unlinkRangeItem = function (item, revision, isFromAccept, start, end) {\n    if (this.isTableRevision) {\n      this.removeRangeRevisionForItem(item);\n      if (revision.range.length === 0) {\n        this.owner.revisions.remove(revision);\n      }\n      return false;\n    }\n    var removeChanges = !isNullOrUndefined(isFromAccept) && (revision.revisionType === 'MoveFrom' || revision.revisionType === 'Deletion') && isFromAccept || (revision.revisionType === 'Insertion' || revision.revisionType === 'MoveTo') && !isFromAccept;\n    if (this.owner.selectionModule.isTOC()) {\n      if (removeChanges) {\n        this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n        if (revision.range.length === 0) {\n          this.owner.revisions.remove(revision);\n        }\n        this.isContentRemoved = true;\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n      } else {\n        while (this.range.length > 0) {\n          var currentElement = this.range[0];\n          this.removeRangeRevisionForItem(currentElement);\n          if (revision.range.length === 0) {\n            this.owner.revisions.remove(revision);\n          }\n        }\n        this.owner.editorModule.addRemovedNodes(this.revisionID);\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'AcceptTOC';\n      }\n      return false;\n    }\n    if (item instanceof ElementBox && !this.canSkipTableItems) {\n      if (removeChanges) {\n        if (!this.skipeElementRemoval(item)) {\n          this.owner.editorModule.addRemovedNodes(item.clone());\n        } else {\n          this.skipUnLinkElement = true;\n          return true;\n        }\n      } else {\n        // Bug 873011: Handled the hyperlink formatting preservation when rejecting the RemoveHyperlink action.\n        var fieldBegin = this.owner.selectionModule.getHyperlinkField();\n        if (!isFromAccept && !isNullOrUndefined(fieldBegin) && fieldBegin == item && !isNullOrUndefined(fieldBegin.fieldEnd)) {\n          this.owner.editorModule.initComplexHistory('ClearRevisions');\n          this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n          this.updateRevisionID();\n          this.removeRevisionFromPara(start, end);\n          if (!isNullOrUndefined(this.owner.editorHistoryModule)) {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n            var endInfo = this.owner.selectionModule.getParagraphInfo(end);\n            var endIndex = this.owner.selectionModule.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.endPosition = endIndex;\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.selectionEnd = endIndex;\n            this.owner.editorHistoryModule.updateHistory();\n          }\n          if (this.owner.enableTrackChanges) {\n            this.owner.enableTrackChanges = false;\n            this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n            this.owner.enableTrackChanges = true;\n          } else {\n            this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n          }\n          if (this.owner.editorHistoryModule && !isNullOrUndefined(this.owner.editorHistoryModule.currentHistoryInfo)) {\n            this.owner.editorHistoryModule.updateComplexHistory();\n          }\n        } else {\n          this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n          this.updateRevisionID();\n          this.removeRevisionFromPara(start, end);\n        }\n        // Set false to this because we retrived the revision based on above action (after this iteration we have changed the action basded the below property)\n        this.owner.trackChangesPane.isTrackingPageBreak = false;\n      }\n    } else if (!this.canSkipTableItems && item instanceof WCharacterFormat && !removeChanges) {\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n      this.updateRevisionID();\n      this.removeRevisionFromPara(start, end);\n    } else if (item instanceof WRowFormat && !removeChanges) {\n      this.isTableRevision = true;\n      var tableWidget = item.ownerBase.ownerTable;\n      var currentRow = item.ownerBase;\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n      this.owner.editorModule.cloneTableToHistoryInfo(tableWidget.combineWidget(this.owner.viewer));\n    }\n    removeChanges = removeChanges && !this.canSkipTableItems;\n    if (item instanceof ElementBox && removeChanges) {\n      var currentPara = item.line.paragraph;\n      this.removeRevisionItemsFromRange(item);\n      if (item instanceof FootnoteElementBox) {\n        if (item.footnoteType === 'Footnote') {\n          this.owner.editorModule.removeFootnote(item);\n        }\n      }\n      this.removeItem(item);\n      this.isContentRemoved = true;\n      this.owner.documentHelper.layout.reLayoutParagraph(currentPara, 0, 0);\n      if (isNullOrUndefined(currentPara.childWidgets)) {\n        var textPosition = this.owner.selectionModule.getTextPosBasedOnLogicalIndex(this.owner.selectionModule.editPosition);\n        this.owner.selectionModule.selectContent(textPosition, true);\n      }\n    } else if (item instanceof WCharacterFormat && removeChanges) {\n      this.isContentRemoved = true;\n      this.skipUnLinkElement = false;\n      this.removeRevisionItemsFromRange(item);\n      if (revision.range.length === 1) {\n        this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n      } else {\n        this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n        this.removeRevisionFromPara(start, end);\n        var rangeIndex = revision.range.indexOf(item);\n        revision.range.splice(rangeIndex, 1);\n        this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n        while (this.range.length > 0) {\n          this.removeRangeRevisionForItem(this.range[0]);\n        }\n      }\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.isAcceptOrReject = isFromAccept ? 'Accept' : 'Reject';\n    } else if (item instanceof WRowFormat && removeChanges) {\n      var tableWidget = item.ownerBase.ownerTable;\n      tableWidget = tableWidget.combineWidget(this.owner.viewer);\n      var currentRow = item.ownerBase;\n      this.removeRevisionItemsFromRange(item);\n      this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'DeleteCells';\n      this.owner.editorModule.cloneTableToHistoryInfo(tableWidget);\n      this.owner.editorModule.removeDeletedCellRevision(currentRow);\n      this.isContentRemoved = true;\n      tableWidget.removeChild(tableWidget.childWidgets.indexOf(currentRow));\n      this.canSkipTableItems = true;\n      // Before destroying the table row widget, delete the field element from the row.\n      this.owner.editorModule.removeFieldInBlock(currentRow);\n      // Before destroying the table row widget, delete the bookmark element from the row.\n      this.owner.editorModule.removeFieldInBlock(currentRow, true);\n      // Before destroying the table row widget, delete the content control element from the row.\n      this.owner.editorModule.removeFieldInBlock(currentRow, undefined, true);\n      //currentRow.destroy();\n      if (tableWidget.childWidgets.length === 0) {\n        this.owner.selectionModule.editPosition = this.owner.selectionModule.getHierarchicalIndex(tableWidget, '0');\n        this.owner.editorModule.removeBlock(tableWidget);\n        //tableWidget.destroy();\n      } else {\n        this.owner.editorModule.updateTable(tableWidget, true);\n      }\n    }\n    // if the range is of row format, we will remove the row and for history preservation we use whole table to be cloned, hence skipping this part\n    if (!(item instanceof WRowFormat) || !removeChanges) {\n      if (!this.skipUnLinkElement) {\n        this.removeRangeRevisionForItem(item);\n      }\n    }\n    if (revision.range.length === 0) {\n      this.owner.revisions.remove(revision);\n    }\n    return false;\n  };\n  Revision.prototype.removeRevisionFromPara = function (start, end) {\n    var blockInfo = this.owner.selectionModule.getParagraphInfo(start);\n    var endBlockInfo = this.owner.selectionModule.getParagraphInfo(end);\n    var para = blockInfo.paragraph;\n    while (para instanceof ParagraphWidget) {\n      if (para.characterFormat.revisions.length > 0) {\n        for (var i = 0; i < para.characterFormat.revisions.length; i++) {\n          if (para.characterFormat.revisions[i].range.length === 0) {\n            var revisionIndex = para.characterFormat.revisions.indexOf(para.characterFormat.revisions[i]);\n            para.characterFormat.revisions.splice(revisionIndex, 1);\n            i--;\n          }\n        }\n      }\n      if (endBlockInfo.paragraph === para) {\n        para = undefined;\n      } else {\n        para = para.nextWidget;\n      }\n    }\n  };\n  Revision.prototype.updateRevisionID = function () {\n    this.owner.editorModule.addRemovedNodes(this.revisionID);\n    while (this.range.length > 0) {\n      this.removeRangeRevisionForItem(this.range[0]);\n    }\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Revision.prototype.removeRevisionItemsFromRange = function (item) {\n    if (item.revisions.length > 0) {\n      for (var revisionIndex = 0; revisionIndex < item.revisions.length; revisionIndex++) {\n        var currentRevision = item.revisions[revisionIndex];\n        if (this.revisionID !== currentRevision.revisionID) {\n          var rangeIndex = currentRevision.range.indexOf(item);\n          item.revisions[revisionIndex].range.splice(rangeIndex, 1);\n          this.owner.trackChangesPane.updateCurrentTrackChanges(item.revisions[revisionIndex]);\n        }\n        if (currentRevision.range.length === 0) {\n          this.owner.revisions.remove(currentRevision);\n        }\n      }\n    }\n  };\n  /**\n   * Method to clear linked ranges in revision\n   *\n   * @private\n   * @param {any} item - Specifies the item\n   * @returns {void}\n   */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  Revision.prototype.removeRangeRevisionForItem = function (item) {\n    var revisionIndex = item.revisions.indexOf(this);\n    if (revisionIndex >= 0) {\n      item.revisions.splice(revisionIndex, 1);\n      var rangeIndex = this.range.indexOf(item);\n      this.range.splice(rangeIndex, 1);\n      this.owner.trackChangesPane.updateCurrentTrackChanges(this);\n    }\n  };\n  /**\n   * @private\n   * @param {Element} element - Specifies the element.\n   * @returns {boolean} Resturs skip element removal\n   */\n  Revision.prototype.skipeElementRemoval = function (element) {\n    var elementPara = element.paragraph;\n    if (elementPara.characterFormat.revisions.length > 0) {\n      for (var i = 0; i < elementPara.characterFormat.revisions.length; i++) {\n        var currentRevision = elementPara.characterFormat.revisions[i];\n        var rangeIndex = currentRevision.range.indexOf(element);\n        if (rangeIndex >= 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  Revision.prototype.removeRevisionFromRow = function (row) {\n    this.owner.editorModule.unlinkRangeFromRevision(row.rowFormat);\n    //this.owner.editor.addRemovedRevisionInfo(row.rowFormat, undefined);\n    for (var i = 0; i < row.childWidgets.length; i++) {\n      var cellWidget = row.childWidgets[i];\n      this.owner.editorModule.removeRevisionForCell(cellWidget, false);\n    }\n  };\n  Revision.prototype.removeItem = function (element) {\n    var paraWidget = element.line.paragraph;\n    this.owner.editorModule.unLinkFieldCharacter(element);\n    var elementIndex = element.line.children.indexOf(element);\n    element.line.children.splice(elementIndex, 1);\n    var paraFloatingElementIndex = element.line.paragraph.floatingElements.indexOf(element);\n    element.line.paragraph.floatingElements.splice(paraFloatingElementIndex, 1);\n    var blockFloatingElementIndex = element.line.paragraph.bodyWidget.floatingElements.indexOf(element);\n    if (blockFloatingElementIndex > -1) {\n      element.line.paragraph.bodyWidget.floatingElements.splice(blockFloatingElementIndex, 1);\n    }\n    this.owner.editorModule.removeEmptyLine(paraWidget);\n  };\n  Revision.prototype.canSkipCloning = function () {\n    if (!isNullOrUndefined(this.owner) && this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo) {\n      var baseHistoryInfo = this.owner.editorHistoryModule.currentBaseHistoryInfo;\n      if (baseHistoryInfo.action === 'DeleteCells') {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * @private\n   *\n   */\n  Revision.prototype.destroy = function () {\n    this.author = undefined;\n    this.revisionType = undefined;\n    this.revisionID = undefined;\n    this.date = undefined;\n    this.range = [];\n    this.range = undefined;\n    this.owner = undefined;\n  };\n  /**\n   * @private\n   * @returns {Revision} - Returns revision\n   */\n  Revision.prototype.clone = function () {\n    if (this.canSkipCloning()) {\n      return this;\n    }\n    var revision = new Revision(undefined, this.author, this.date);\n    revision.revisionID = this.revisionID;\n    revision.revisionType = this.revisionType;\n    return revision;\n  };\n  /**\n   * Method to clone the revisions for the element\n   *\n   * @param {Revision[]} revisions - revision array.\n   * @returns {string[]} - returns clones revisions.\n   */\n  Revision.cloneRevisions = function (revisions) {\n    var clonedRevisions = [];\n    for (var i = 0; i < revisions.length; i++) {\n      clonedRevisions.push(revisions[i].revisionID);\n    }\n    return clonedRevisions;\n  };\n  return Revision;\n}();\nexport { Revision };\n/**\n * Represents the revision collections in the document.\n */\nvar RevisionCollection = /** @class */function () {\n  function RevisionCollection(owner) {\n    /**\n     * @private\n     */\n    this.changes = [];\n    /**\n     * @private\n     */\n    this.skipGroupAcceptReject = false;\n    this.owner = owner;\n  }\n  /**\n   * @private\n   */\n  RevisionCollection.prototype.get = function (index) {\n    if (index >= this.changes.length || index < 0) {\n      throw new ReferenceError('Provided index is not within the range');\n    }\n    return this.changes[index];\n  };\n  Object.defineProperty(RevisionCollection.prototype, \"length\", {\n    get: function () {\n      return this.changes.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  RevisionCollection.prototype.remove = function (revision) {\n    if (isNullOrUndefined(revision) || this.changes.indexOf(revision) < 0) {\n      return;\n    }\n    this.changes.splice(this.changes.indexOf(revision), 1);\n    if (this.owner.trackChangesPane.revisions.indexOf(revision) !== -1) {\n      var index = this.owner.trackChangesPane.revisions.indexOf(revision);\n      var removeChild = !(this.owner.trackChangesPane.tableRevisions.containsKey(revision) && this.owner.trackChangesPane.tableRevisions.get(revision)[this.owner.trackChangesPane.tableRevisions.get(revision).length - 1] !== revision);\n      var changesSingleView = this.owner.trackChangesPane.changes.get(revision);\n      if (removeChild) {\n        this.owner.trackChangesPane.changesInfoDiv.removeChild(changesSingleView.outerSingleDiv);\n      }\n      this.owner.trackChangesPane.revisions.splice(index, 1);\n      this.owner.trackChangesPane.changes.remove(revision);\n      if (this.owner.trackChangesPane.renderedChanges.containsKey(revision)) {\n        this.owner.trackChangesPane.renderedChanges.remove(revision);\n      }\n      if (this.owner.trackChangesPane.tableRevisions.containsKey(revision)) {\n        this.owner.trackChangesPane.tableRevisions.remove(revision);\n      }\n    }\n  };\n  /**\n   * Method which accepts all the revision in the revision collection\n   *\n   * @returns {void}\n   */\n  RevisionCollection.prototype.acceptAll = function () {\n    if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n      this.handleRevisionCollection(true);\n    }\n  };\n  /**\n   * Method which rejects all the revision in the revision collection\n   *\n   * @returns {void}\n   */\n  RevisionCollection.prototype.rejectAll = function () {\n    if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n      this.handleRevisionCollection(false);\n    }\n  };\n  /**\n   * @private\n   * @param {boolean} isfromAcceptAll - Specifies the is accept all.\n   * @param {Revision[]} changes - Specifies the revisions.\n   * @returns {void}\n   */\n  RevisionCollection.prototype.handleRevisionCollection = function (isfromAcceptAll, changes) {\n    this.skipGroupAcceptReject = true;\n    var selection = this.owner.selectionModule;\n    var startPos = selection.start;\n    var endPos = selection.end;\n    var revisionCollec = changes ? changes : this.changes;\n    if (revisionCollec.length <= 0) {\n      return;\n    }\n    if (!selection.start.isExistBefore(selection.end)) {\n      startPos = selection.end;\n      endPos = selection.start;\n    }\n    startPos = startPos.clone();\n    endPos = endPos.clone();\n    if (isfromAcceptAll) {\n      this.owner.editorModule.initComplexHistory('Accept All');\n    } else {\n      this.owner.editorModule.initComplexHistory('Reject All');\n    }\n    while (revisionCollec.length > 0) {\n      if (isfromAcceptAll) {\n        revisionCollec[0].accept();\n      } else {\n        revisionCollec[0].reject();\n      }\n      if (changes) {\n        revisionCollec.splice(0, 1);\n      }\n      if (this.owner.enableHeaderAndFooter) {\n        this.owner.editorModule.updateHeaderFooterWidget();\n      }\n    }\n    if (!isNullOrUndefined(selection.editPosition)) {\n      var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n      this.owner.selectionModule.selectContent(textPosition, true);\n    }\n    if (this.owner.editorHistoryModule) {\n      this.owner.editorHistoryModule.updateComplexHistory();\n      if (isNullOrUndefined(selection.editPosition)) {\n        this.owner.editorHistoryModule.undoStack.pop();\n      }\n    }\n    this.owner.editorModule.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n    this.owner.editorModule.reLayout(this.owner.selectionModule, false);\n    this.owner.editorModule.isSkipOperationsBuild = false;\n    this.skipGroupAcceptReject = false;\n  };\n  RevisionCollection.prototype.clear = function () {\n    this.changes = [];\n  };\n  /**\n   * Disposes the internal objects which are maintained.\n   * @private\n   */\n  RevisionCollection.prototype.destroy = function () {\n    if (this.changes) {\n      for (var i = 0; i < this.changes.length; i++) {\n        var revision = this.changes[i];\n        revision.destroy();\n      }\n      this.changes = [];\n    }\n    this.changes = undefined;\n    this.owner = undefined;\n  };\n  return RevisionCollection;\n}();\nexport { RevisionCollection };","map":{"version":3,"names":["isNullOrUndefined","ElementBox","ParagraphWidget","BookmarkElementBox","FootnoteElementBox","WCharacterFormat","WRowFormat","revisionActionEvent","Revision","documentHelper","author","date","range","revisionID","isContentRemoved","isTableRevision","canSkipTableItems","skipUnLinkElement","owner","prototype","handleAcceptReject","isFromAccept","selectionModule","selectRevision","selection","startPos","start","endPos","end","isExistBefore","blockInfo","getParagraphInfo","editorModule","initHistory","fieldBegin","getHyperlinkField","revisionType","indexOf","fieldEnd","editorHistoryModule","currentBaseHistoryInfo","isHyperlinkField","markerData","push","getMarkerData","undefined","editPosition","getHierarchicalIndex","paragraph","offset","toString","updateInsertPosition","isShiftingEnabled","rangeIndex","length","inline","bookmarks","containsKey","name","remove","moveToNextItem","unlinkRangeItem","textPosition","getTextPosBasedOnLogicalIndex","selectContent","updateEndPosition","selectRange","updateHistoryPosition","action","removedNodes","reverse","trackChangesPane","isTrackingPageBreak","editorHistory","currentHistoryInfo","blockToShift","layout","shiftLayoutedItems","updateHistory","reLayout","isInHeaderFooter","updateHeaderFooterWidget","handleGroupAcceptReject","isAccept","tableRevisions","initComplexHistory","groupingAcceptReject","get","i","updateComplexHistory","isInsideTable","table","containerWidget","ownerTable","reLayoutTable","accept","eventArgs","cancel","actionType","trigger","isTrackedOnlyMode","revisions","skipGroupAcceptReject","reject","item","revision","removeRangeRevisionForItem","removeChanges","isTOC","deleteSelectedContents","currentElement","addRemovedNodes","skipeElementRemoval","clone","updateRevisionID","removeRevisionFromPara","endInfo","endIndex","endPosition","selectionEnd","enableTrackChanges","updateHyperlinkFormat","tableWidget","ownerBase","currentRow","cloneTableToHistoryInfo","combineWidget","viewer","currentPara","line","removeRevisionItemsFromRange","footnoteType","removeFootnote","removeItem","reLayoutParagraph","childWidgets","splice","updateCurrentTrackChanges","isAcceptOrReject","removeDeletedCellRevision","removeChild","removeFieldInBlock","removeBlock","updateTable","endBlockInfo","para","characterFormat","revisionIndex","nextWidget","currentRevision","element","elementPara","removeRevisionFromRow","row","unlinkRangeFromRevision","rowFormat","cellWidget","removeRevisionForCell","paraWidget","unLinkFieldCharacter","elementIndex","children","paraFloatingElementIndex","floatingElements","blockFloatingElementIndex","bodyWidget","removeEmptyLine","canSkipCloning","baseHistoryInfo","destroy","cloneRevisions","clonedRevisions","RevisionCollection","changes","index","ReferenceError","Object","defineProperty","enumerable","configurable","changesSingleView","changesInfoDiv","outerSingleDiv","renderedChanges","acceptAll","isReadOnly","handleRevisionCollection","rejectAll","isfromAcceptAll","revisionCollec","enableHeaderAndFooter","undoStack","pop","isSkipOperationsBuild","enableCollaborativeEditing","clear"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/track-changes/track-changes.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ElementBox, ParagraphWidget, BookmarkElementBox, FootnoteElementBox } from '../viewer/page';\nimport { WCharacterFormat } from '../format/character-format';\nimport { WRowFormat } from '../format/row-format';\nimport { revisionActionEvent } from '../../base/index';\n/**\n * The revision class which holds the information related to changes made in the document\n */\nvar Revision = /** @class */ (function () {\n    function Revision(documentHelper, author, date) {\n        /**\n         * Gets or sets the author name who made the change\n         *\n         * @private\n         */\n        this.author = null;\n        /**\n         * Indicates when the track changes made\n         *\n         * @private\n         */\n        this.date = null;\n        /**\n         * Holds the reference of the items which are under this revision.\n         *\n         * @private\n         */\n        this.range = [];\n        /**\n         * @private\n         */\n        this.revisionID = '';\n        /**\n         * Used to update cursor position by ensuring items were removed or not\n         */\n        this.isContentRemoved = false;\n        this.isTableRevision = false;\n        /**\n         * Indicates whether to skip unlinking ranges for table elements.\n         */\n        this.canSkipTableItems = false;\n        this.skipUnLinkElement = false;\n        this.author = author;\n        if (isNullOrUndefined(this.author)) {\n            this.author = \"Unknown\";\n        }\n        this.date = date;\n        this.owner = documentHelper;\n    }\n    Revision.prototype.handleAcceptReject = function (isFromAccept) {\n        this.owner.selectionModule.selectRevision(this);\n        var selection = this.owner.selectionModule;\n        var startPos = selection.start;\n        var endPos = selection.end;\n        if (!selection.start.isExistBefore(selection.end)) {\n            startPos = selection.end;\n            endPos = selection.start;\n        }\n        var blockInfo = selection.getParagraphInfo(startPos);\n        this.owner.editorModule.initHistory(isFromAccept ? 'Accept Change' : 'Reject Change');\n        var fieldBegin = selection.getHyperlinkField();\n        if (isFromAccept && this.revisionType === 'Deletion' && !isNullOrUndefined(fieldBegin)\n            && this.range.indexOf(fieldBegin) !== -1 && this.range.indexOf(fieldBegin.fieldEnd) !== -1) {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n        }\n        this.owner.editorHistoryModule.currentBaseHistoryInfo.markerData.push(this.owner.editorModule.getMarkerData(undefined, undefined, this));\n        if (this.revisionType === 'Deletion') {\n            blockInfo = selection.getParagraphInfo(this.owner.selectionModule.start);\n            selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        else {\n            selection.editPosition = this.owner.selectionModule.getHierarchicalIndex(blockInfo.paragraph, blockInfo.offset.toString());\n        }\n        this.owner.editorModule.updateInsertPosition();\n        this.isContentRemoved = false;\n        this.canSkipTableItems = false;\n        this.skipUnLinkElement = false;\n        // Implement to accept/reject the revision\n        if (this.revisionType === 'Insertion' || this.revisionType === 'Deletion' || this.revisionType === 'MoveFrom' || this.revisionType === 'MoveTo') {\n            this.owner.isShiftingEnabled = true;\n            var rangeIndex = 0;\n            while (this.range.length > 0) {\n                if (this.range[rangeIndex] instanceof ElementBox || this.range[rangeIndex] instanceof WCharacterFormat || this.range[rangeIndex] instanceof WRowFormat) {\n                    if (this.range[rangeIndex] instanceof BookmarkElementBox && isFromAccept && this.revisionType === 'Deletion') {\n                        var inline = this.range[rangeIndex];\n                        if (this.owner.documentHelper.bookmarks.containsKey(inline.name)) {\n                            this.owner.documentHelper.bookmarks.remove(inline.name);\n                        }\n                    }\n                    var moveToNextItem = this.unlinkRangeItem(this.range[rangeIndex], this, isFromAccept, startPos, endPos);\n                    if (moveToNextItem) {\n                        rangeIndex++;\n                    }\n                    else {\n                        rangeIndex = 0;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        this.isTableRevision = false;\n        if (this.isContentRemoved) {\n            var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n            this.owner.selectionModule.selectContent(textPosition, true);\n            this.owner.editorModule.updateEndPosition();\n        }\n        else {\n            selection.selectRange(startPos, endPos);\n            this.owner.editorModule.updateHistoryPosition(endPos, false);\n        }\n        if (this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo\n            && this.owner.editorHistoryModule.currentBaseHistoryInfo.action !== 'BackSpace') {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.removedNodes.reverse();\n        }\n        if (this.owner.editorHistoryModule) {\n            if (this.owner.trackChangesPane.isTrackingPageBreak) {\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'TrackingPageBreak';\n                this.owner.trackChangesPane.isTrackingPageBreak = false;\n            }\n            var editorHistory = this.owner.editorHistoryModule;\n            if (editorHistory.currentHistoryInfo && (editorHistory.currentHistoryInfo.action === 'Accept All' || editorHistory.currentHistoryInfo.action === 'Reject All')) {\n                if (this.owner.documentHelper.blockToShift) {\n                    this.owner.documentHelper.layout.shiftLayoutedItems(false);\n                }\n            }\n            editorHistory.updateHistory();\n        }\n        this.owner.editorModule.reLayout(this.owner.selectionModule);\n        if (blockInfo.paragraph.isInHeaderFooter) {\n            this.owner.editorModule.updateHeaderFooterWidget();\n        }\n    };\n    Revision.prototype.handleGroupAcceptReject = function (isAccept) {\n        if (this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n            this.owner.editorModule.initComplexHistory(isAccept ? 'Accept All' : 'Reject All');\n            var groupingAcceptReject = this.owner.trackChangesPane.tableRevisions.get(this);\n            for (var i = groupingAcceptReject.length - 1; i >= 0; i--) {\n                if (isAccept) {\n                    groupingAcceptReject[i].handleAcceptReject(true);\n                }\n                else {\n                    groupingAcceptReject[i].handleAcceptReject(false);\n                }\n            }\n            if (this.owner.editorHistoryModule) {\n                this.owner.editorHistoryModule.updateComplexHistory();\n            }\n            if (this.owner.selectionModule.start.paragraph.isInsideTable) {\n                var table = this.owner.selectionModule.start.paragraph.containerWidget.ownerTable;\n                this.owner.documentHelper.layout.reLayoutTable(table);\n            }\n        }\n    };\n    /**\n     * Method which accepts the selected revision, revision marks will be removed and changes will be included in the viewer.\n     *\n     * @returns {void}\n     */\n    Revision.prototype.accept = function () {\n        var eventArgs = { author: this.author, cancel: false, revisionType: this.revisionType, actionType: 'Accept' };\n        this.owner.trigger(revisionActionEvent, eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (!this.owner.documentHelper.isTrackedOnlyMode) {\n            if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof WRowFormat\n                && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n                this.handleGroupAcceptReject(true);\n            }\n            else {\n                this.handleAcceptReject(true);\n            }\n        }\n    };\n    /**\n     * Method which rejects the selected revision, revision marks will be removed leaving the original content.\n     */\n    Revision.prototype.reject = function () {\n        var eventArgs = { author: this.author, cancel: false, revisionType: this.revisionType, actionType: 'Reject' };\n        this.owner.trigger(revisionActionEvent, eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (!this.owner.documentHelper.isTrackedOnlyMode) {\n            if (!this.owner.revisions.skipGroupAcceptReject && this.range[0] instanceof WRowFormat\n                && this.owner.trackChangesPane.tableRevisions.containsKey(this)) {\n                this.handleGroupAcceptReject(false);\n            }\n            else {\n                this.handleAcceptReject(false);\n            }\n        }\n    };\n    /**\n     * Unlinks revision and its assosiated range\n     * @private\n     * @param item\n     * @param revision\n     * @param isFromAccept\n     */\n    /* eslint-disable  */\n    Revision.prototype.unlinkRangeItem = function (item, revision, isFromAccept, start, end) {\n        if (this.isTableRevision) {\n            this.removeRangeRevisionForItem(item);\n            if (revision.range.length === 0) {\n                this.owner.revisions.remove(revision);\n            }\n            return false;\n        }\n        var removeChanges = (!isNullOrUndefined(isFromAccept)) && ((revision.revisionType === 'MoveFrom' || revision.revisionType === 'Deletion') && isFromAccept) || ((revision.revisionType === 'Insertion' || revision.revisionType === 'MoveTo') && !isFromAccept);\n        if (this.owner.selectionModule.isTOC()) {\n            if (removeChanges) {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n                if (revision.range.length === 0) {\n                    this.owner.revisions.remove(revision);\n                }\n                this.isContentRemoved = true;\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n            }\n            else {\n                while (this.range.length > 0) {\n                    var currentElement = this.range[0];\n                    this.removeRangeRevisionForItem(currentElement);\n                    if (revision.range.length === 0) {\n                        this.owner.revisions.remove(revision);\n                    }\n                }\n                this.owner.editorModule.addRemovedNodes(this.revisionID);\n                this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'AcceptTOC';\n            }\n            return false;\n        }\n        if (item instanceof ElementBox && !this.canSkipTableItems) {\n            if (removeChanges) {\n                if (!this.skipeElementRemoval(item)) {\n                    this.owner.editorModule.addRemovedNodes(item.clone());\n                }\n                else {\n                    this.skipUnLinkElement = true;\n                    return true;\n                }\n            }\n            else {\n                // Bug 873011: Handled the hyperlink formatting preservation when rejecting the RemoveHyperlink action.\n                var fieldBegin = this.owner.selectionModule.getHyperlinkField();\n                if (!isFromAccept && !isNullOrUndefined(fieldBegin) && fieldBegin == item && !isNullOrUndefined(fieldBegin.fieldEnd)) {\n                    this.owner.editorModule.initComplexHistory('ClearRevisions');\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n                    this.updateRevisionID();\n                    this.removeRevisionFromPara(start, end);\n                    if (!isNullOrUndefined(this.owner.editorHistoryModule)) {\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.isHyperlinkField = true;\n                        var endInfo = this.owner.selectionModule.getParagraphInfo(end);\n                        var endIndex = this.owner.selectionModule.getHierarchicalIndex(endInfo.paragraph, endInfo.offset.toString());\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.endPosition = endIndex;\n                        this.owner.editorHistoryModule.currentBaseHistoryInfo.selectionEnd = endIndex;\n                        this.owner.editorHistoryModule.updateHistory();\n                    }\n                    if (this.owner.enableTrackChanges) {\n                        this.owner.enableTrackChanges = false;\n                        this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n                        this.owner.enableTrackChanges = true;\n                    }\n                    else {\n                        this.owner.editorModule.updateHyperlinkFormat(this.owner.selectionModule);\n                    }\n                    if (this.owner.editorHistoryModule && !isNullOrUndefined(this.owner.editorHistoryModule.currentHistoryInfo)) {\n                        this.owner.editorHistoryModule.updateComplexHistory();\n                    }\n                }\n                else {\n                    this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n                    this.updateRevisionID();\n                    this.removeRevisionFromPara(start, end);\n                }\n                // Set false to this because we retrived the revision based on above action (after this iteration we have changed the action basded the below property)\n                this.owner.trackChangesPane.isTrackingPageBreak = false;\n            }\n        }\n        else if (!this.canSkipTableItems && (item instanceof WCharacterFormat) && (!removeChanges)) {\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'ClearRevisions';\n            this.updateRevisionID();\n            this.removeRevisionFromPara(start, end);\n        }\n        else if (item instanceof WRowFormat && !removeChanges) {\n            this.isTableRevision = true;\n            var tableWidget = item.ownerBase.ownerTable;\n            var currentRow = item.ownerBase;\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'RemoveRowTrack';\n            this.owner.editorModule.cloneTableToHistoryInfo(tableWidget.combineWidget(this.owner.viewer));\n        }\n        removeChanges = removeChanges && !this.canSkipTableItems;\n        if (item instanceof ElementBox && removeChanges) {\n            var currentPara = item.line.paragraph;\n            this.removeRevisionItemsFromRange(item);\n            if (item instanceof FootnoteElementBox) {\n                if (item.footnoteType === 'Footnote') {\n                    this.owner.editorModule.removeFootnote(item);\n                }\n            }\n            this.removeItem(item);\n            this.isContentRemoved = true;\n            this.owner.documentHelper.layout.reLayoutParagraph(currentPara, 0, 0);\n            if (isNullOrUndefined(currentPara.childWidgets)) {\n                var textPosition = this.owner.selectionModule.getTextPosBasedOnLogicalIndex(this.owner.selectionModule.editPosition);\n                this.owner.selectionModule.selectContent(textPosition, true);\n            }\n        }\n        else if (item instanceof WCharacterFormat && removeChanges) {\n            this.isContentRemoved = true;\n            this.skipUnLinkElement = false;\n            this.removeRevisionItemsFromRange(item);\n            if (revision.range.length === 1) {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n            }\n            else {\n                this.owner.editorModule.deleteSelectedContents(this.owner.selectionModule, true);\n                this.removeRevisionFromPara(start, end);\n                var rangeIndex = revision.range.indexOf(item);\n                revision.range.splice(rangeIndex, 1);\n                this.owner.trackChangesPane.updateCurrentTrackChanges(revision);\n                while (this.range.length > 0) {\n                    this.removeRangeRevisionForItem(this.range[0]);\n                }\n            }\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'BackSpace';\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.isAcceptOrReject = isFromAccept ? 'Accept' : 'Reject';\n        }\n        else if (item instanceof WRowFormat && removeChanges) {\n            var tableWidget = item.ownerBase.ownerTable;\n            tableWidget = tableWidget.combineWidget(this.owner.viewer);\n            var currentRow = item.ownerBase;\n            this.removeRevisionItemsFromRange(item);\n            this.owner.editorHistoryModule.currentBaseHistoryInfo.action = 'DeleteCells';\n            this.owner.editorModule.cloneTableToHistoryInfo(tableWidget);\n            this.owner.editorModule.removeDeletedCellRevision(currentRow);\n            this.isContentRemoved = true;\n            tableWidget.removeChild(tableWidget.childWidgets.indexOf(currentRow));\n            this.canSkipTableItems = true;\n            // Before destroying the table row widget, delete the field element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow);\n            // Before destroying the table row widget, delete the bookmark element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow, true);\n            // Before destroying the table row widget, delete the content control element from the row.\n            this.owner.editorModule.removeFieldInBlock(currentRow, undefined, true);\n            //currentRow.destroy();\n            if (tableWidget.childWidgets.length === 0) {\n                this.owner.selectionModule.editPosition = this.owner.selectionModule.getHierarchicalIndex(tableWidget, '0');\n                this.owner.editorModule.removeBlock(tableWidget);\n                //tableWidget.destroy();\n            }\n            else {\n                this.owner.editorModule.updateTable(tableWidget, true);\n            }\n        }\n        // if the range is of row format, we will remove the row and for history preservation we use whole table to be cloned, hence skipping this part\n        if (!(item instanceof WRowFormat) || !removeChanges) {\n            if (!this.skipUnLinkElement) {\n                this.removeRangeRevisionForItem(item);\n            }\n        }\n        if (revision.range.length === 0) {\n            this.owner.revisions.remove(revision);\n        }\n        return false;\n    };\n    Revision.prototype.removeRevisionFromPara = function (start, end) {\n        var blockInfo = this.owner.selectionModule.getParagraphInfo(start);\n        var endBlockInfo = this.owner.selectionModule.getParagraphInfo(end);\n        var para = blockInfo.paragraph;\n        while (para instanceof ParagraphWidget) {\n            if (para.characterFormat.revisions.length > 0) {\n                for (var i = 0; i < para.characterFormat.revisions.length; i++) {\n                    if (para.characterFormat.revisions[i].range.length === 0) {\n                        var revisionIndex = para.characterFormat.revisions.indexOf(para.characterFormat.revisions[i]);\n                        para.characterFormat.revisions.splice(revisionIndex, 1);\n                        i--;\n                    }\n                }\n            }\n            if (endBlockInfo.paragraph === para) {\n                para = undefined;\n            }\n            else {\n                para = para.nextWidget;\n            }\n        }\n    };\n    Revision.prototype.updateRevisionID = function () {\n        this.owner.editorModule.addRemovedNodes(this.revisionID);\n        while (this.range.length > 0) {\n            this.removeRangeRevisionForItem(this.range[0]);\n        }\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Revision.prototype.removeRevisionItemsFromRange = function (item) {\n        if (item.revisions.length > 0) {\n            for (var revisionIndex = 0; revisionIndex < item.revisions.length; revisionIndex++) {\n                var currentRevision = item.revisions[revisionIndex];\n                if (this.revisionID !== currentRevision.revisionID) {\n                    var rangeIndex = currentRevision.range.indexOf(item);\n                    item.revisions[revisionIndex].range.splice(rangeIndex, 1);\n                    this.owner.trackChangesPane.updateCurrentTrackChanges(item.revisions[revisionIndex]);\n                }\n                if (currentRevision.range.length === 0) {\n                    this.owner.revisions.remove(currentRevision);\n                }\n            }\n        }\n    };\n    /**\n     * Method to clear linked ranges in revision\n     *\n     * @private\n     * @param {any} item - Specifies the item\n     * @returns {void}\n     */\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    Revision.prototype.removeRangeRevisionForItem = function (item) {\n        var revisionIndex = item.revisions.indexOf(this);\n        if (revisionIndex >= 0) {\n            item.revisions.splice(revisionIndex, 1);\n            var rangeIndex = this.range.indexOf(item);\n            this.range.splice(rangeIndex, 1);\n            this.owner.trackChangesPane.updateCurrentTrackChanges(this);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} element - Specifies the element.\n     * @returns {boolean} Resturs skip element removal\n     */\n    Revision.prototype.skipeElementRemoval = function (element) {\n        var elementPara = element.paragraph;\n        if (elementPara.characterFormat.revisions.length > 0) {\n            for (var i = 0; i < elementPara.characterFormat.revisions.length; i++) {\n                var currentRevision = elementPara.characterFormat.revisions[i];\n                var rangeIndex = currentRevision.range.indexOf(element);\n                if (rangeIndex >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Revision.prototype.removeRevisionFromRow = function (row) {\n        this.owner.editorModule.unlinkRangeFromRevision(row.rowFormat);\n        //this.owner.editor.addRemovedRevisionInfo(row.rowFormat, undefined);\n        for (var i = 0; i < row.childWidgets.length; i++) {\n            var cellWidget = row.childWidgets[i];\n            this.owner.editorModule.removeRevisionForCell(cellWidget, false);\n        }\n    };\n    Revision.prototype.removeItem = function (element) {\n        var paraWidget = element.line.paragraph;\n        this.owner.editorModule.unLinkFieldCharacter(element);\n        var elementIndex = element.line.children.indexOf(element);\n        element.line.children.splice(elementIndex, 1);\n        var paraFloatingElementIndex = element.line.paragraph.floatingElements.indexOf(element);\n        element.line.paragraph.floatingElements.splice(paraFloatingElementIndex, 1);\n        var blockFloatingElementIndex = element.line.paragraph.bodyWidget.floatingElements.indexOf(element);\n        if (blockFloatingElementIndex > -1) {\n            element.line.paragraph.bodyWidget.floatingElements.splice(blockFloatingElementIndex, 1);\n        }\n        this.owner.editorModule.removeEmptyLine(paraWidget);\n    };\n    Revision.prototype.canSkipCloning = function () {\n        if (!isNullOrUndefined(this.owner) && this.owner.editorHistoryModule && this.owner.editorHistoryModule.currentBaseHistoryInfo) {\n            var baseHistoryInfo = this.owner.editorHistoryModule.currentBaseHistoryInfo;\n            if (baseHistoryInfo.action === 'DeleteCells') {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @private\n     *\n     */\n    Revision.prototype.destroy = function () {\n        this.author = undefined;\n        this.revisionType = undefined;\n        this.revisionID = undefined;\n        this.date = undefined;\n        this.range = [];\n        this.range = undefined;\n        this.owner = undefined;\n    };\n    /**\n     * @private\n     * @returns {Revision} - Returns revision\n     */\n    Revision.prototype.clone = function () {\n        if (this.canSkipCloning()) {\n            return this;\n        }\n        var revision = new Revision(undefined, this.author, this.date);\n        revision.revisionID = this.revisionID;\n        revision.revisionType = this.revisionType;\n        return revision;\n    };\n    /**\n     * Method to clone the revisions for the element\n     *\n     * @param {Revision[]} revisions - revision array.\n     * @returns {string[]} - returns clones revisions.\n     */\n    Revision.cloneRevisions = function (revisions) {\n        var clonedRevisions = [];\n        for (var i = 0; i < revisions.length; i++) {\n            clonedRevisions.push(revisions[i].revisionID);\n        }\n        return clonedRevisions;\n    };\n    return Revision;\n}());\nexport { Revision };\n/**\n * Represents the revision collections in the document.\n */\nvar RevisionCollection = /** @class */ (function () {\n    function RevisionCollection(owner) {\n        /**\n         * @private\n         */\n        this.changes = [];\n        /**\n         * @private\n         */\n        this.skipGroupAcceptReject = false;\n        this.owner = owner;\n    }\n    /**\n     * @private\n     */\n    RevisionCollection.prototype.get = function (index) {\n        if (index >= this.changes.length || index < 0) {\n            throw new ReferenceError('Provided index is not within the range');\n        }\n        return this.changes[index];\n    };\n    Object.defineProperty(RevisionCollection.prototype, \"length\", {\n        get: function () {\n            return this.changes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RevisionCollection.prototype.remove = function (revision) {\n        if (isNullOrUndefined(revision) || this.changes.indexOf(revision) < 0) {\n            return;\n        }\n        this.changes.splice(this.changes.indexOf(revision), 1);\n        if (this.owner.trackChangesPane.revisions.indexOf(revision) !== -1) {\n            var index = this.owner.trackChangesPane.revisions.indexOf(revision);\n            var removeChild = !(this.owner.trackChangesPane.tableRevisions.containsKey(revision) && (this.owner.trackChangesPane.tableRevisions.get(revision))[(this.owner.trackChangesPane.tableRevisions.get(revision)).length - 1] !== revision);\n            var changesSingleView = this.owner.trackChangesPane.changes.get(revision);\n            if (removeChild) {\n                this.owner.trackChangesPane.changesInfoDiv.removeChild(changesSingleView.outerSingleDiv);\n            }\n            this.owner.trackChangesPane.revisions.splice(index, 1);\n            this.owner.trackChangesPane.changes.remove(revision);\n            if (this.owner.trackChangesPane.renderedChanges.containsKey(revision)) {\n                this.owner.trackChangesPane.renderedChanges.remove(revision);\n            }\n            if (this.owner.trackChangesPane.tableRevisions.containsKey(revision)) {\n                this.owner.trackChangesPane.tableRevisions.remove(revision);\n            }\n        }\n    };\n    /**\n     * Method which accepts all the revision in the revision collection\n     *\n     * @returns {void}\n     */\n    RevisionCollection.prototype.acceptAll = function () {\n        if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n            this.handleRevisionCollection(true);\n        }\n    };\n    /**\n     * Method which rejects all the revision in the revision collection\n     *\n     * @returns {void}\n     */\n    RevisionCollection.prototype.rejectAll = function () {\n        if (!this.owner.isReadOnly && !this.owner.documentHelper.isTrackedOnlyMode) {\n            this.handleRevisionCollection(false);\n        }\n    };\n    /**\n     * @private\n     * @param {boolean} isfromAcceptAll - Specifies the is accept all.\n     * @param {Revision[]} changes - Specifies the revisions.\n     * @returns {void}\n     */\n    RevisionCollection.prototype.handleRevisionCollection = function (isfromAcceptAll, changes) {\n        this.skipGroupAcceptReject = true;\n        var selection = this.owner.selectionModule;\n        var startPos = selection.start;\n        var endPos = selection.end;\n        var revisionCollec = changes ? changes : this.changes;\n        if (revisionCollec.length <= 0) {\n            return;\n        }\n        if (!selection.start.isExistBefore(selection.end)) {\n            startPos = selection.end;\n            endPos = selection.start;\n        }\n        startPos = startPos.clone();\n        endPos = endPos.clone();\n        if (isfromAcceptAll) {\n            this.owner.editorModule.initComplexHistory('Accept All');\n        }\n        else {\n            this.owner.editorModule.initComplexHistory('Reject All');\n        }\n        while (revisionCollec.length > 0) {\n            if (isfromAcceptAll) {\n                revisionCollec[0].accept();\n            }\n            else {\n                revisionCollec[0].reject();\n            }\n            if (changes) {\n                revisionCollec.splice(0, 1);\n            }\n            if (this.owner.enableHeaderAndFooter) {\n                this.owner.editorModule.updateHeaderFooterWidget();\n            }\n        }\n        if (!isNullOrUndefined(selection.editPosition)) {\n            var textPosition = selection.getTextPosBasedOnLogicalIndex(selection.editPosition);\n            this.owner.selectionModule.selectContent(textPosition, true);\n        }\n        if (this.owner.editorHistoryModule) {\n            this.owner.editorHistoryModule.updateComplexHistory();\n            if (isNullOrUndefined(selection.editPosition)) {\n                this.owner.editorHistoryModule.undoStack.pop();\n            }\n        }\n        this.owner.editorModule.isSkipOperationsBuild = this.owner.enableCollaborativeEditing;\n        this.owner.editorModule.reLayout(this.owner.selectionModule, false);\n        this.owner.editorModule.isSkipOperationsBuild = false;\n        this.skipGroupAcceptReject = false;\n    };\n    RevisionCollection.prototype.clear = function () {\n        this.changes = [];\n    };\n    /**\n     * Disposes the internal objects which are maintained.\n     * @private\n     */\n    RevisionCollection.prototype.destroy = function () {\n        if (this.changes) {\n            for (var i = 0; i < this.changes.length; i++) {\n                var revision = this.changes[i];\n                revision.destroy();\n            }\n            this.changes = [];\n        }\n        this.changes = undefined;\n        this.owner = undefined;\n    };\n    return RevisionCollection;\n}());\nexport { RevisionCollection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}