{"ast":null,"code":"import { createElement, L10n, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { FieldElementBox, TextFormField } from '../viewer/page';\nimport { NumericTextBox, TextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList, ComboBox } from '@syncfusion/ej2-dropdowns';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\n/**\n * Form field text dialog is used to modify the value in text form field.\n */\nvar TextFormFieldDialog = /** @class */function () {\n  /**\n   * @param {DocumentHelper} owner - Specifies the document helper.\n   * @private\n   */\n  function TextFormFieldDialog(owner) {\n    var _this = this;\n    /**\n     * @private\n     * @returns {void}\n     */\n    this.updateTextFormtas = function () {\n      var defautText = SanitizeHtmlHelper.sanitize(_this.updateFormats(_this.defaultTextInput.value));\n      _this.defaultTextInput.value = !isNullOrUndefined(defautText) ? defautText : '';\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    this.onCancelButtonClick = function () {\n      _this.documentHelper.dialog.hide();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    this.insertTextField = function () {\n      var valid = true;\n      if (_this.typeDropDown.value === 'Date') {\n        valid = _this.isValidDateFormat();\n      }\n      if (valid) {\n        _this.updateTextFormtas();\n        if (_this.defaultTextInput.value.length > _this.maxLengthNumber.value && !isNullOrUndefined(_this.maxLengthNumber.value) && _this.maxLengthNumber.value !== 0) {\n          DialogUtility.alert({\n            content: 'The maximum length value must be equal or greater than the length of the default text.',\n            showCloseIcon: true,\n            closeOnEscape: true,\n            position: {\n              X: 'center',\n              Y: 'center'\n            },\n            animationSettings: {\n              effect: 'Zoom'\n            }\n          }).enableRtl = _this.owner.enableRtl;\n        } else {\n          var type = void 0;\n          if (_this.typeDropDown.value === 'Date') {\n            type = 'Date';\n          } else if (_this.typeDropDown.value === 'Number') {\n            type = 'Number';\n          } else {\n            type = 'Text';\n          }\n          var format = SanitizeHtmlHelper.sanitize(_this.textFormatDropDown.value);\n          var formField = new TextFormField();\n          formField.type = type;\n          formField.defaultValue = _this.defaultTextInput.value;\n          formField.maxLength = _this.maxLengthNumber.value;\n          formField.format = !isNullOrUndefined(format) ? format : '';\n          formField.name = SanitizeHtmlHelper.sanitize(_this.bookmarkTextInput.value);\n          formField.helpText = SanitizeHtmlHelper.sanitize(_this.tooltipTextInput.value);\n          formField.enabled = _this.fillInEnable.checked;\n          _this.owner.editorModule.editFormField('Text', formField);\n          _this.closeTextField();\n        }\n      } else {\n        DialogUtility.alert({\n          content: 'A valid date or time is required',\n          showCloseIcon: true,\n          closeOnEscape: true,\n          position: {\n            X: 'center',\n            Y: 'center'\n          },\n          animationSettings: {\n            effect: 'Zoom'\n          }\n        }).enableRtl = _this.owner.enableRtl;\n      }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    this.closeTextField = function () {\n      _this.documentHelper.dialog.hide();\n      _this.documentHelper.dialog.element.style.pointerEvents = '';\n    };\n    this.owner = owner;\n  }\n  Object.defineProperty(TextFormFieldDialog.prototype, \"documentHelper\", {\n    get: function () {\n      return this.owner.documentHelper;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TextFormFieldDialog.prototype.getModuleName = function () {\n    return 'TextFormFieldDialog';\n  };\n  /* eslint-disable  */\n  /**\n   * @private\n   * @param {L10n} locale - Specifies the locale.\n   * @returns {void}\n   */\n  TextFormFieldDialog.prototype.initTextDialog = function (localValue, isRtl) {\n    var _this = this;\n    this.target = createElement('div');\n    var dialogDiv = createElement('div');\n    var firstDiv = createElement('div', {\n      className: 'e-de-container-row'\n    });\n    var typeDiv = createElement('div', {\n      className: 'e-de-subcontainer-left'\n    });\n    this.defaultTextDiv = createElement('div', {\n      className: 'e-de-subcontainer-right'\n    });\n    // let typeLabel: HTMLElement = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Type')\n    // });\n    //define the array of complex data\n    var typeDropDownitems = [{\n      Value: 'Regular text',\n      Name: localValue.getConstant('Regular text')\n    }, {\n      Value: 'Number',\n      Name: localValue.getConstant('Number')\n    }, {\n      Value: 'Date',\n      Name: localValue.getConstant('Date')\n    }];\n    var typeDropDownList = createElement('input');\n    this.typeDropDown = new DropDownList({\n      dataSource: typeDropDownitems,\n      popupHeight: '150px',\n      value: 'Regular text',\n      change: this.changeTypeDropDown.bind(this),\n      floatLabelType: 'Always',\n      placeholder: localValue.getConstant('Type'),\n      fields: {\n        text: 'Name',\n        value: 'Value'\n      },\n      htmlAttributes: {\n        'aria-labelledby': localValue.getConstant('Type')\n      }\n    });\n    // this.defaultTextLabel = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Default text')\n    // });\n    this.defaultTextInput = createElement('input', {\n      className: 'e-input e-bookmark-textbox-input'\n    });\n    var secondDiv = createElement('div', {\n      className: 'e-de-container-row'\n    });\n    var maxLengthDiv = createElement('div', {\n      className: 'e-de-subcontainer-left'\n    });\n    // let maxLengthLabel: HTMLElement = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Maximum length')\n    // });\n    var maxLength = createElement('input', {\n      attrs: {\n        'aria-labelledby': localValue.getConstant('Maximum length')\n      }\n    });\n    this.maxLengthNumber = new NumericTextBox({\n      format: 'n',\n      value: 0,\n      min: 0,\n      max: 32767,\n      width: '100%',\n      enablePersistence: false,\n      placeholder: localValue.getConstant('Maximum length'),\n      floatLabelType: 'Always',\n      change: function (args) {\n        if (!args.value) {\n          this.element.value = localValue.getConstant('Unlimited');\n        }\n      },\n      focus: function (args) {\n        if (!args.value) {\n          this.element.value = localValue.getConstant('Unlimited');\n        }\n      },\n      blur: function (args) {\n        if (!args.value) {\n          var proxy_1 = this;\n          setTimeout(function () {\n            proxy_1.element.value = localValue.getConstant('Unlimited');\n          }, 0);\n        }\n      }\n    });\n    var textFromatDiv = createElement('div', {\n      className: 'e-de-subcontainer-right'\n    });\n    // this.textFormatLabel = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Text format')\n    // });\n    var textFormatList = createElement('input');\n    var formatDropDownitems = [{\n      Value: \"Uppercase\",\n      Name: localValue.getConstant(\"Uppercase\")\n    }, {\n      Value: \"Lowercase\",\n      Name: localValue.getConstant(\"Lowercase\")\n    }, {\n      Value: \"FirstCapital\",\n      Name: localValue.getConstant(\"FirstCapital\")\n    }, {\n      Value: \"Titlecase\",\n      Name: localValue.getConstant(\"TitleCase\")\n    }];\n    this.textFormatDropDown = new ComboBox({\n      dataSource: formatDropDownitems,\n      popupHeight: '150px',\n      allowCustom: true,\n      showClearButton: false,\n      change: this.updateTextFormtas.bind(this),\n      placeholder: localValue.getConstant('Text format'),\n      floatLabelType: 'Always',\n      fields: {\n        text: 'Name',\n        value: 'Value'\n      }\n    });\n    this.textFormatDropDown.focus = function () {\n      _this.textFormatDropDown.element.select();\n    };\n    var fileSettingsLabel = createElement('div', {\n      className: 'e-de-ff-dlg-heading',\n      innerHTML: localValue.getConstant('Field settings')\n    });\n    var thirdDiv = createElement('div', {\n      className: 'e-de-container-row'\n    });\n    var toolTipTotalDiv = createElement('div', {\n      className: 'e-de-subcontainer-left'\n    });\n    var bookmarkTotalDiv = createElement('div', {\n      className: 'e-de-subcontainer-right'\n    });\n    // let toolTipHeadingLabel: HTMLElement = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Tooltip')\n    // });\n    this.tooltipTextInput = createElement('input', {\n      className: 'e-input e-bookmark-textbox-input'\n    });\n    // let bookmarkHeadingLabel: HTMLElement = createElement('div', {\n    //     className: 'e-de-ff-dlg-heading-small',\n    //     innerHTML: localValue.getConstant('Name')\n    // });\n    this.bookmarkTextInput = createElement('input', {\n      className: 'e-input e-bookmark-textbox-input'\n    });\n    var fillInEnableDiv = createElement('div');\n    var fillInEnableEle = createElement('input', {\n      attrs: {\n        type: 'checkbox'\n      }\n    });\n    fillInEnableEle.setAttribute('aria-label', localValue.getConstant('Fillin enabled'));\n    this.fillInEnable = new CheckBox({\n      cssClass: 'e-de-ff-dlg-check',\n      label: localValue.getConstant('Fillin enabled'),\n      enableRtl: isRtl\n    });\n    if (isRtl) {\n      typeDiv.classList.add('e-de-rtl');\n      maxLengthDiv.classList.add('e-de-rtl');\n      toolTipTotalDiv.classList.add('e-de-rtl');\n      bookmarkTotalDiv.classList.add('e-de-rtl');\n    }\n    this.target.appendChild(dialogDiv);\n    dialogDiv.appendChild(firstDiv);\n    firstDiv.appendChild(typeDiv);\n    //typeDiv.appendChild(typeLabel);\n    typeDiv.appendChild(typeDropDownList);\n    this.typeDropDown.appendTo(typeDropDownList);\n    firstDiv.appendChild(this.defaultTextDiv);\n    //this.defaultTextDiv.appendChild(this.defaultTextLabel);\n    this.defaultTextDiv.appendChild(this.defaultTextInput);\n    dialogDiv.appendChild(secondDiv);\n    secondDiv.appendChild(maxLengthDiv);\n    //maxLengthDiv.appendChild(maxLengthLabel);\n    maxLengthDiv.appendChild(maxLength);\n    this.maxLengthNumber.appendTo(maxLength);\n    secondDiv.appendChild(textFromatDiv);\n    //textFromatDiv.appendChild(this.textFormatLabel);\n    textFromatDiv.appendChild(textFormatList);\n    this.textFormatDropDown.appendTo(textFormatList);\n    dialogDiv.appendChild(fileSettingsLabel);\n    dialogDiv.appendChild(thirdDiv);\n    thirdDiv.appendChild(toolTipTotalDiv);\n    //toolTipTotalDiv.appendChild(toolTipHeadingLabel);\n    toolTipTotalDiv.appendChild(this.tooltipTextInput);\n    thirdDiv.appendChild(bookmarkTotalDiv);\n    //bookmarkTotalDiv.appendChild(bookmarkHeadingLabel);\n    bookmarkTotalDiv.appendChild(this.bookmarkTextInput);\n    dialogDiv.appendChild(fillInEnableDiv);\n    fillInEnableDiv.appendChild(fillInEnableEle);\n    this.fillInEnable.appendTo(fillInEnableEle);\n    this.defaultTextLabel = new TextBox({\n      placeholder: localValue.getConstant('Default text'),\n      floatLabelType: 'Always'\n    }, this.defaultTextInput);\n    new TextBox({\n      placeholder: localValue.getConstant('Tooltip'),\n      floatLabelType: 'Always'\n    }, this.tooltipTextInput);\n    new TextBox({\n      placeholder: localValue.getConstant('Name'),\n      floatLabelType: 'Always',\n      htmlAttributes: {\n        'aria-labelledby': localValue.getConstant('Name')\n      }\n    }, this.bookmarkTextInput);\n    this.defaultTextInput.setAttribute('aria-labelledby', localValue.getConstant('Default text'));\n    this.tooltipTextInput.setAttribute('aria-labelledby', localValue.getConstant('Tooltip'));\n    this.bookmarkTextInput.setAttribute('aria-labelledby', localValue.getConstant('Name'));\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  TextFormFieldDialog.prototype.show = function () {\n    this.localObj = new L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n    this.localObj.setLocale(this.documentHelper.owner.locale);\n    if (isNullOrUndefined(this.target)) {\n      this.initTextDialog(this.localObj, this.documentHelper.owner.enableRtl);\n    }\n    this.loadTextDialog(this.localObj);\n    this.documentHelper.dialog.header = this.localObj.getConstant('Text Form Field');\n    this.documentHelper.dialog.position = {\n      X: 'center',\n      Y: 'center'\n    };\n    this.documentHelper.dialog.height = 'auto';\n    this.documentHelper.dialog.width = '448px';\n    this.documentHelper.dialog.content = this.target;\n    this.documentHelper.dialog.buttons = [{\n      click: this.insertTextField,\n      buttonModel: {\n        content: this.localObj.getConstant('Ok'),\n        cssClass: 'e-flat e-table-cell-margin-okay',\n        isPrimary: true\n      }\n    }, {\n      click: this.onCancelButtonClick,\n      buttonModel: {\n        content: this.localObj.getConstant('Cancel'),\n        cssClass: 'e-flat e-table-cell-margin-cancel'\n      }\n    }];\n    this.documentHelper.dialog.show();\n  };\n  /**\n   * @private\n   * @param {ChangeEventArgs} args - Specifies the event args.\n   * @returns {void}\n   */\n  TextFormFieldDialog.prototype.changeTypeDropDown = function (args) {\n    if (args.isInteracted) {\n      this.defaultTextInput.value = '';\n      this.textFormatDropDown.value = '';\n    }\n    if (args.value === 'Regular text') {\n      this.textFormatDropDown.fields = {\n        text: 'Name',\n        value: 'Value'\n      };\n      this.defaultTextLabel.placeholder = this.localObj.getConstant('Default text');\n      this.textFormatDropDown.placeholder = this.localObj.getConstant('Text format');\n      this.textFormatDropDown.dataSource = [{\n        Value: \"Uppercase\",\n        Name: this.localObj.getConstant(\"Uppercase\")\n      }, {\n        Value: \"Lowercase\",\n        Name: this.localObj.getConstant(\"Lowercase\")\n      }, {\n        Value: \"FirstCapital\",\n        Name: this.localObj.getConstant(\"FirstCapital\")\n      }, {\n        Value: \"Titlecase\",\n        Name: this.localObj.getConstant(\"TitleCase\")\n      }];\n    } else if (args.value === 'Number') {\n      this.textFormatDropDown.fields = {\n        text: null,\n        value: null\n      };\n      this.defaultTextLabel.placeholder = this.localObj.getConstant('Default number');\n      this.textFormatDropDown.placeholder = this.localObj.getConstant('Number format');\n      this.textFormatDropDown.dataSource = ['0', '0.00', '#,##0', '#,##0.00', '$#,##0.00;($#,##0.00)', '0%'];\n    } else if (args.value === 'Date') {\n      this.textFormatDropDown.fields = {\n        text: null,\n        value: null\n      };\n      this.defaultTextLabel.placeholder = this.localObj.getConstant('Default date');\n      this.textFormatDropDown.placeholder = this.localObj.getConstant('Date format');\n      this.textFormatDropDown.dataSource = ['M/d/yyyy', 'dddd, MMMM d, yyyy', 'MMMM d, yyyy', 'M/d/yy', 'yyyy-MM-dd', 'd-MMM-yy', 'M.d.yyyy', 'MMM. d, yy', 'd MMMM yyyy', 'MMMM yy', 'MMM-yy', 'M/d/yyyy h:mm am/pm', 'M/d/yyyy h:mm:ss am/pm', 'h:mm am/pm', 'h:mm:ss am/pm', 'HH:mm', 'HH:mm:ss'];\n    }\n    this.defaultTextLabel.dataBind();\n    this.textFormatDropDown.dataBind();\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  TextFormFieldDialog.prototype.loadTextDialog = function (local) {\n    var inline = this.owner.selectionModule.getCurrentFormField();\n    if (inline instanceof FieldElementBox) {\n      this.fieldBegin = inline;\n      var data = inline.formFieldData;\n      if (data.maxLength > 0) {\n        this.maxLengthNumber.value = data.maxLength;\n      } else {\n        this.maxLengthNumber.value = 0;\n        this.maxLengthNumber.element.value = local ? local.getConstant('Unlimited') : 'Unlimited';\n      }\n      if (data.type === 'Date') {\n        this.typeDropDown.value = 'Date';\n      } else if (data.type === 'Number') {\n        this.typeDropDown.value = 'Number';\n      } else {\n        this.typeDropDown.value = 'Regular text';\n      }\n      if (data.format) {\n        this.textFormatDropDown.value = data.format;\n      } else {\n        this.textFormatDropDown.value = '';\n      }\n      this.defaultTextInput.value = !isNullOrUndefined(data.defaultValue) ? data.defaultValue : '';\n      this.fillInEnable.checked = data.enabled;\n      this.tooltipTextInput.value = !isNullOrUndefined(data.helpText) ? data.helpText : '';\n      this.bookmarkTextInput.value = !isNullOrUndefined(data.name) ? data.name : '';\n    }\n  };\n  TextFormFieldDialog.prototype.updateFormats = function (value) {\n    var format = isNullOrUndefined(this.textFormatDropDown.value) ? '' : this.textFormatDropDown.value.toString();\n    if (this.typeDropDown.value === 'Regular text') {\n      return HelperMethods.formatText(format, value);\n    }\n    if (this.typeDropDown.value === 'Number') {\n      var data = HelperMethods.formatNumber(format, value);\n      if (!(data.toString() === 'NaN')) {\n        return data;\n      }\n      return '';\n    }\n    if (this.typeDropDown.value === 'Date') {\n      return HelperMethods.formatDate(format, value);\n    }\n    return '';\n  };\n  /**\n   * @private\n   * @returns {boolean} returns is valid date format.\n   */\n  TextFormFieldDialog.prototype.isValidDateFormat = function () {\n    var value = this.defaultTextInput.value;\n    if (value !== '') {\n      var date = new Date(value);\n      if (isNaN(date.getDate())) {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  TextFormFieldDialog.prototype.destroy = function () {\n    var textDialogTarget = this.target;\n    if (textDialogTarget) {\n      if (textDialogTarget.parentElement) {\n        textDialogTarget.parentElement.removeChild(textDialogTarget);\n      }\n      this.target = undefined;\n    }\n    if (this.maxLengthNumber) {\n      this.maxLengthNumber.destroy();\n      this.maxLengthNumber = undefined;\n    }\n    if (this.fillInEnable) {\n      this.fillInEnable.destroy();\n      this.fillInEnable = undefined;\n    }\n    if (this.typeDropDown) {\n      this.typeDropDown.destroy();\n      this.typeDropDown = undefined;\n    }\n    if (this.textFormatDropDown) {\n      this.textFormatDropDown.destroy();\n      this.textFormatDropDown = undefined;\n    }\n    this.owner = undefined;\n    this.defaultTextInput = undefined;\n    this.tooltipTextInput = undefined;\n    this.bookmarkTextInput = undefined;\n    this.defaultTextLabel = undefined;\n    this.defaultTextDiv = undefined;\n    this.textFormatLabel = undefined;\n  };\n  return TextFormFieldDialog;\n}();\nexport { TextFormFieldDialog };","map":{"version":3,"names":["createElement","L10n","isNullOrUndefined","CheckBox","FieldElementBox","TextFormField","NumericTextBox","TextBox","DropDownList","ComboBox","DialogUtility","HelperMethods","SanitizeHtmlHelper","TextFormFieldDialog","owner","_this","updateTextFormtas","defautText","sanitize","updateFormats","defaultTextInput","value","onCancelButtonClick","documentHelper","dialog","hide","insertTextField","valid","typeDropDown","isValidDateFormat","length","maxLengthNumber","alert","content","showCloseIcon","closeOnEscape","position","X","Y","animationSettings","effect","enableRtl","type","format","textFormatDropDown","formField","defaultValue","maxLength","name","bookmarkTextInput","helpText","tooltipTextInput","enabled","fillInEnable","checked","editorModule","editFormField","closeTextField","element","style","pointerEvents","Object","defineProperty","prototype","get","enumerable","configurable","getModuleName","initTextDialog","localValue","isRtl","target","dialogDiv","firstDiv","className","typeDiv","defaultTextDiv","typeDropDownitems","Value","Name","getConstant","typeDropDownList","dataSource","popupHeight","change","changeTypeDropDown","bind","floatLabelType","placeholder","fields","text","htmlAttributes","secondDiv","maxLengthDiv","attrs","min","max","width","enablePersistence","args","focus","blur","proxy_1","setTimeout","textFromatDiv","textFormatList","formatDropDownitems","allowCustom","showClearButton","select","fileSettingsLabel","innerHTML","thirdDiv","toolTipTotalDiv","bookmarkTotalDiv","fillInEnableDiv","fillInEnableEle","setAttribute","cssClass","label","classList","add","appendChild","appendTo","defaultTextLabel","show","localObj","defaultLocale","setLocale","locale","loadTextDialog","header","height","buttons","click","buttonModel","isPrimary","isInteracted","dataBind","local","inline","selectionModule","getCurrentFormField","fieldBegin","data","formFieldData","toString","formatText","formatNumber","formatDate","date","Date","isNaN","getDate","destroy","textDialogTarget","parentElement","removeChild","undefined","textFormatLabel"],"sources":["/home/taymur/Documents/legal2/DATA/Highlight/newmerged/CASEFRONTt/node_modules/@syncfusion/ej2-documenteditor/src/document-editor/implementation/dialogs/form-field-text-dialog.js"],"sourcesContent":["import { createElement, L10n, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { FieldElementBox, TextFormField } from '../viewer/page';\nimport { NumericTextBox, TextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList, ComboBox } from '@syncfusion/ej2-dropdowns';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { HelperMethods } from '../editor/editor-helper';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\n/**\n * Form field text dialog is used to modify the value in text form field.\n */\nvar TextFormFieldDialog = /** @class */ (function () {\n    /**\n     * @param {DocumentHelper} owner - Specifies the document helper.\n     * @private\n     */\n    function TextFormFieldDialog(owner) {\n        var _this = this;\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.updateTextFormtas = function () {\n            var defautText = SanitizeHtmlHelper.sanitize(_this.updateFormats(_this.defaultTextInput.value));\n            _this.defaultTextInput.value = !isNullOrUndefined(defautText) ? defautText : '';\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.onCancelButtonClick = function () {\n            _this.documentHelper.dialog.hide();\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.insertTextField = function () {\n            var valid = true;\n            if (_this.typeDropDown.value === 'Date') {\n                valid = _this.isValidDateFormat();\n            }\n            if (valid) {\n                _this.updateTextFormtas();\n                if (_this.defaultTextInput.value.length > _this.maxLengthNumber.value && !isNullOrUndefined(_this.maxLengthNumber.value) &&\n                    _this.maxLengthNumber.value !== 0) {\n                    DialogUtility.alert({\n                        content: 'The maximum length value must be equal or greater than the length of the default text.',\n                        showCloseIcon: true,\n                        closeOnEscape: true,\n                        position: { X: 'center', Y: 'center' },\n                        animationSettings: { effect: 'Zoom' }\n                    }).enableRtl = _this.owner.enableRtl;\n                }\n                else {\n                    var type = void 0;\n                    if (_this.typeDropDown.value === 'Date') {\n                        type = 'Date';\n                    }\n                    else if (_this.typeDropDown.value === 'Number') {\n                        type = 'Number';\n                    }\n                    else {\n                        type = 'Text';\n                    }\n                    var format = SanitizeHtmlHelper.sanitize(_this.textFormatDropDown.value);\n                    var formField = new TextFormField();\n                    formField.type = type;\n                    formField.defaultValue = _this.defaultTextInput.value;\n                    formField.maxLength = _this.maxLengthNumber.value;\n                    formField.format = !isNullOrUndefined(format) ? format : '';\n                    formField.name = SanitizeHtmlHelper.sanitize(_this.bookmarkTextInput.value);\n                    formField.helpText = SanitizeHtmlHelper.sanitize(_this.tooltipTextInput.value);\n                    formField.enabled = _this.fillInEnable.checked;\n                    _this.owner.editorModule.editFormField('Text', formField);\n                    _this.closeTextField();\n                }\n            }\n            else {\n                DialogUtility.alert({\n                    content: 'A valid date or time is required',\n                    showCloseIcon: true,\n                    closeOnEscape: true,\n                    position: { X: 'center', Y: 'center' },\n                    animationSettings: { effect: 'Zoom' }\n                }).enableRtl = _this.owner.enableRtl;\n            }\n        };\n        /**\n         * @private\n         * @returns {void}\n         */\n        this.closeTextField = function () {\n            _this.documentHelper.dialog.hide();\n            _this.documentHelper.dialog.element.style.pointerEvents = '';\n        };\n        this.owner = owner;\n    }\n    Object.defineProperty(TextFormFieldDialog.prototype, \"documentHelper\", {\n        get: function () {\n            return this.owner.documentHelper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFormFieldDialog.prototype.getModuleName = function () {\n        return 'TextFormFieldDialog';\n    };\n    /* eslint-disable  */\n    /**\n     * @private\n     * @param {L10n} locale - Specifies the locale.\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.initTextDialog = function (localValue, isRtl) {\n        var _this = this;\n        this.target = createElement('div');\n        var dialogDiv = createElement('div');\n        var firstDiv = createElement('div', { className: 'e-de-container-row' });\n        var typeDiv = createElement('div', { className: 'e-de-subcontainer-left' });\n        this.defaultTextDiv = createElement('div', { className: 'e-de-subcontainer-right' });\n        // let typeLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Type')\n        // });\n        //define the array of complex data\n        var typeDropDownitems = [\n            { Value: 'Regular text', Name: localValue.getConstant('Regular text') },\n            { Value: 'Number', Name: localValue.getConstant('Number') },\n            { Value: 'Date', Name: localValue.getConstant('Date') }\n        ];\n        var typeDropDownList = createElement('input');\n        this.typeDropDown = new DropDownList({\n            dataSource: typeDropDownitems,\n            popupHeight: '150px',\n            value: 'Regular text',\n            change: this.changeTypeDropDown.bind(this),\n            floatLabelType: 'Always',\n            placeholder: localValue.getConstant('Type'),\n            fields: { text: 'Name', value: 'Value' },\n            htmlAttributes: { 'aria-labelledby': localValue.getConstant('Type') }\n        });\n        // this.defaultTextLabel = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Default text')\n        // });\n        this.defaultTextInput = createElement('input', { className: 'e-input e-bookmark-textbox-input' });\n        var secondDiv = createElement('div', { className: 'e-de-container-row' });\n        var maxLengthDiv = createElement('div', { className: 'e-de-subcontainer-left' });\n        // let maxLengthLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Maximum length')\n        // });\n        var maxLength = createElement('input', { attrs: { 'aria-labelledby': localValue.getConstant('Maximum length') } });\n        this.maxLengthNumber = new NumericTextBox({\n            format: 'n', value: 0, min: 0, max: 32767, width: '100%', enablePersistence: false,\n            placeholder: localValue.getConstant('Maximum length'), floatLabelType: 'Always',\n            change: function (args) {\n                if (!args.value) {\n                    this.element.value = localValue.getConstant('Unlimited');\n                }\n            },\n            focus: function (args) {\n                if (!args.value) {\n                    this.element.value = localValue.getConstant('Unlimited');\n                }\n            },\n            blur: function (args) {\n                if (!args.value) {\n                    var proxy_1 = this;\n                    setTimeout(function () {\n                        proxy_1.element.value = localValue.getConstant('Unlimited');\n                    }, 0);\n                }\n            },\n        });\n        var textFromatDiv = createElement('div', { className: 'e-de-subcontainer-right' });\n        // this.textFormatLabel = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Text format')\n        // });\n        var textFormatList = createElement('input');\n        var formatDropDownitems = [\n            { Value: \"Uppercase\", Name: localValue.getConstant(\"Uppercase\") },\n            { Value: \"Lowercase\", Name: localValue.getConstant(\"Lowercase\") },\n            { Value: \"FirstCapital\", Name: localValue.getConstant(\"FirstCapital\") },\n            { Value: \"Titlecase\", Name: localValue.getConstant(\"TitleCase\") }\n        ];\n        this.textFormatDropDown = new ComboBox({\n            dataSource: formatDropDownitems,\n            popupHeight: '150px',\n            allowCustom: true,\n            showClearButton: false,\n            change: this.updateTextFormtas.bind(this),\n            placeholder: localValue.getConstant('Text format'),\n            floatLabelType: 'Always',\n            fields: { text: 'Name', value: 'Value' }\n        });\n        this.textFormatDropDown.focus = function () {\n            _this.textFormatDropDown.element.select();\n        };\n        var fileSettingsLabel = createElement('div', {\n            className: 'e-de-ff-dlg-heading',\n            innerHTML: localValue.getConstant('Field settings')\n        });\n        var thirdDiv = createElement('div', { className: 'e-de-container-row' });\n        var toolTipTotalDiv = createElement('div', { className: 'e-de-subcontainer-left' });\n        var bookmarkTotalDiv = createElement('div', { className: 'e-de-subcontainer-right' });\n        // let toolTipHeadingLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Tooltip')\n        // });\n        this.tooltipTextInput = createElement('input', { className: 'e-input e-bookmark-textbox-input' });\n        // let bookmarkHeadingLabel: HTMLElement = createElement('div', {\n        //     className: 'e-de-ff-dlg-heading-small',\n        //     innerHTML: localValue.getConstant('Name')\n        // });\n        this.bookmarkTextInput = createElement('input', { className: 'e-input e-bookmark-textbox-input' });\n        var fillInEnableDiv = createElement('div');\n        var fillInEnableEle = createElement('input', { attrs: { type: 'checkbox' } });\n        fillInEnableEle.setAttribute('aria-label', localValue.getConstant('Fillin enabled'));\n        this.fillInEnable = new CheckBox({\n            cssClass: 'e-de-ff-dlg-check',\n            label: localValue.getConstant('Fillin enabled'),\n            enableRtl: isRtl\n        });\n        if (isRtl) {\n            typeDiv.classList.add('e-de-rtl');\n            maxLengthDiv.classList.add('e-de-rtl');\n            toolTipTotalDiv.classList.add('e-de-rtl');\n            bookmarkTotalDiv.classList.add('e-de-rtl');\n        }\n        this.target.appendChild(dialogDiv);\n        dialogDiv.appendChild(firstDiv);\n        firstDiv.appendChild(typeDiv);\n        //typeDiv.appendChild(typeLabel);\n        typeDiv.appendChild(typeDropDownList);\n        this.typeDropDown.appendTo(typeDropDownList);\n        firstDiv.appendChild(this.defaultTextDiv);\n        //this.defaultTextDiv.appendChild(this.defaultTextLabel);\n        this.defaultTextDiv.appendChild(this.defaultTextInput);\n        dialogDiv.appendChild(secondDiv);\n        secondDiv.appendChild(maxLengthDiv);\n        //maxLengthDiv.appendChild(maxLengthLabel);\n        maxLengthDiv.appendChild(maxLength);\n        this.maxLengthNumber.appendTo(maxLength);\n        secondDiv.appendChild(textFromatDiv);\n        //textFromatDiv.appendChild(this.textFormatLabel);\n        textFromatDiv.appendChild(textFormatList);\n        this.textFormatDropDown.appendTo(textFormatList);\n        dialogDiv.appendChild(fileSettingsLabel);\n        dialogDiv.appendChild(thirdDiv);\n        thirdDiv.appendChild(toolTipTotalDiv);\n        //toolTipTotalDiv.appendChild(toolTipHeadingLabel);\n        toolTipTotalDiv.appendChild(this.tooltipTextInput);\n        thirdDiv.appendChild(bookmarkTotalDiv);\n        //bookmarkTotalDiv.appendChild(bookmarkHeadingLabel);\n        bookmarkTotalDiv.appendChild(this.bookmarkTextInput);\n        dialogDiv.appendChild(fillInEnableDiv);\n        fillInEnableDiv.appendChild(fillInEnableEle);\n        this.fillInEnable.appendTo(fillInEnableEle);\n        this.defaultTextLabel = new TextBox({ placeholder: localValue.getConstant('Default text'), floatLabelType: 'Always' }, this.defaultTextInput);\n        new TextBox({ placeholder: localValue.getConstant('Tooltip'), floatLabelType: 'Always' }, this.tooltipTextInput);\n        new TextBox({ placeholder: localValue.getConstant('Name'), floatLabelType: 'Always', htmlAttributes: { 'aria-labelledby': localValue.getConstant('Name') } }, this.bookmarkTextInput);\n        this.defaultTextInput.setAttribute('aria-labelledby', localValue.getConstant('Default text'));\n        this.tooltipTextInput.setAttribute('aria-labelledby', localValue.getConstant('Tooltip'));\n        this.bookmarkTextInput.setAttribute('aria-labelledby', localValue.getConstant('Name'));\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.show = function () {\n        this.localObj = new L10n('documenteditor', this.documentHelper.owner.defaultLocale);\n        this.localObj.setLocale(this.documentHelper.owner.locale);\n        if (isNullOrUndefined(this.target)) {\n            this.initTextDialog(this.localObj, this.documentHelper.owner.enableRtl);\n        }\n        this.loadTextDialog(this.localObj);\n        this.documentHelper.dialog.header = this.localObj.getConstant('Text Form Field');\n        this.documentHelper.dialog.position = { X: 'center', Y: 'center' };\n        this.documentHelper.dialog.height = 'auto';\n        this.documentHelper.dialog.width = '448px';\n        this.documentHelper.dialog.content = this.target;\n        this.documentHelper.dialog.buttons = [{\n                click: this.insertTextField,\n                buttonModel: { content: this.localObj.getConstant('Ok'), cssClass: 'e-flat e-table-cell-margin-okay', isPrimary: true }\n            },\n            {\n                click: this.onCancelButtonClick,\n                buttonModel: { content: this.localObj.getConstant('Cancel'), cssClass: 'e-flat e-table-cell-margin-cancel' }\n            }];\n        this.documentHelper.dialog.show();\n    };\n    /**\n     * @private\n     * @param {ChangeEventArgs} args - Specifies the event args.\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.changeTypeDropDown = function (args) {\n        if (args.isInteracted) {\n            this.defaultTextInput.value = '';\n            this.textFormatDropDown.value = '';\n        }\n        if (args.value === 'Regular text') {\n            this.textFormatDropDown.fields = { text: 'Name', value: 'Value' };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default text');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Text format');\n            this.textFormatDropDown.dataSource = [\n                { Value: \"Uppercase\", Name: this.localObj.getConstant(\"Uppercase\") },\n                { Value: \"Lowercase\", Name: this.localObj.getConstant(\"Lowercase\") },\n                { Value: \"FirstCapital\", Name: this.localObj.getConstant(\"FirstCapital\") },\n                { Value: \"Titlecase\", Name: this.localObj.getConstant(\"TitleCase\") }\n            ];\n        }\n        else if (args.value === 'Number') {\n            this.textFormatDropDown.fields = { text: null, value: null };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default number');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Number format');\n            this.textFormatDropDown.dataSource = ['0', '0.00', '#,##0', '#,##0.00', '$#,##0.00;($#,##0.00)', '0%'];\n        }\n        else if (args.value === 'Date') {\n            this.textFormatDropDown.fields = { text: null, value: null };\n            this.defaultTextLabel.placeholder = this.localObj.getConstant('Default date');\n            this.textFormatDropDown.placeholder = this.localObj.getConstant('Date format');\n            this.textFormatDropDown.dataSource = ['M/d/yyyy', 'dddd, MMMM d, yyyy', 'MMMM d, yyyy', 'M/d/yy', 'yyyy-MM-dd', 'd-MMM-yy',\n                'M.d.yyyy', 'MMM. d, yy', 'd MMMM yyyy', 'MMMM yy', 'MMM-yy', 'M/d/yyyy h:mm am/pm', 'M/d/yyyy h:mm:ss am/pm', 'h:mm am/pm', 'h:mm:ss am/pm',\n                'HH:mm', 'HH:mm:ss'];\n        }\n        this.defaultTextLabel.dataBind();\n        this.textFormatDropDown.dataBind();\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.loadTextDialog = function (local) {\n        var inline = this.owner.selectionModule.getCurrentFormField();\n        if (inline instanceof FieldElementBox) {\n            this.fieldBegin = inline;\n            var data = inline.formFieldData;\n            if (data.maxLength > 0) {\n                this.maxLengthNumber.value = data.maxLength;\n            }\n            else {\n                this.maxLengthNumber.value = 0;\n                this.maxLengthNumber.element.value = local ? local.getConstant('Unlimited') : 'Unlimited';\n            }\n            if (data.type === 'Date') {\n                this.typeDropDown.value = 'Date';\n            }\n            else if (data.type === 'Number') {\n                this.typeDropDown.value = 'Number';\n            }\n            else {\n                this.typeDropDown.value = 'Regular text';\n            }\n            if (data.format) {\n                this.textFormatDropDown.value = data.format;\n            }\n            else {\n                this.textFormatDropDown.value = '';\n            }\n            this.defaultTextInput.value = !isNullOrUndefined(data.defaultValue) ? data.defaultValue : '';\n            this.fillInEnable.checked = data.enabled;\n            this.tooltipTextInput.value = !isNullOrUndefined(data.helpText) ? data.helpText : '';\n            this.bookmarkTextInput.value = !isNullOrUndefined(data.name) ? data.name : '';\n        }\n    };\n    TextFormFieldDialog.prototype.updateFormats = function (value) {\n        var format = isNullOrUndefined(this.textFormatDropDown.value) ? '' : this.textFormatDropDown.value.toString();\n        if (this.typeDropDown.value === 'Regular text') {\n            return HelperMethods.formatText(format, value);\n        }\n        if (this.typeDropDown.value === 'Number') {\n            var data = HelperMethods.formatNumber(format, value);\n            if (!(data.toString() === 'NaN')) {\n                return data;\n            }\n            return '';\n        }\n        if (this.typeDropDown.value === 'Date') {\n            return HelperMethods.formatDate(format, value);\n        }\n        return '';\n    };\n    /**\n     * @private\n     * @returns {boolean} returns is valid date format.\n     */\n    TextFormFieldDialog.prototype.isValidDateFormat = function () {\n        var value = this.defaultTextInput.value;\n        if (value !== '') {\n            var date = new Date(value);\n            if (isNaN(date.getDate())) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    TextFormFieldDialog.prototype.destroy = function () {\n        var textDialogTarget = this.target;\n        if (textDialogTarget) {\n            if (textDialogTarget.parentElement) {\n                textDialogTarget.parentElement.removeChild(textDialogTarget);\n            }\n            this.target = undefined;\n        }\n        if (this.maxLengthNumber) {\n            this.maxLengthNumber.destroy();\n            this.maxLengthNumber = undefined;\n        }\n        if (this.fillInEnable) {\n            this.fillInEnable.destroy();\n            this.fillInEnable = undefined;\n        }\n        if (this.typeDropDown) {\n            this.typeDropDown.destroy();\n            this.typeDropDown = undefined;\n        }\n        if (this.textFormatDropDown) {\n            this.textFormatDropDown.destroy();\n            this.textFormatDropDown = undefined;\n        }\n        this.owner = undefined;\n        this.defaultTextInput = undefined;\n        this.tooltipTextInput = undefined;\n        this.bookmarkTextInput = undefined;\n        this.defaultTextLabel = undefined;\n        this.defaultTextDiv = undefined;\n        this.textFormatLabel = undefined;\n    };\n    return TextFormFieldDialog;\n}());\nexport { TextFormFieldDialog };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}