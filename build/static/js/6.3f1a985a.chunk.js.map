{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","Dashboard/Tip.js","Dashboard/StickyNote.js","Dashboard/PdfAutoScroller.js","Dashboard/PdfViewer.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Tip","props","state","setState","useState","compact","text","emoji","onConfirm","onOpen","React","createElement","className","onClick","onSubmit","event","preventDefault","width","placeholder","autoFocus","value","onChange","target","ref","node","focus","processMd","type","StickyNote","_ref","isScrolledTo","position","comment","pdfViewer","document","querySelector","offset","clientWidth","style","left","concat","top","boundingRect","background","padding","borderRadius","boxShadow","zIndex","PdfAutoScroller","pdfHighlighter","socket","useSocket","useEffect","handleScrollTo","_ref2","bbox","page","current","highlight","pageNumber","scrollTo","on","off","resetHash","location","hash","HighlightPopup","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","highlightColors","default","legalTest","issue","conclusion","PdfViewer","_state$auth","_state$currentFile2","dispatch","useContext","UserContext","currFile","setCurrFile","highlights","setHighlights","_state$currentFile","length","payload","name","currentFile","url","Blob","reader","FileReader","onload","result","readAsDataURL","console","error","fileHighlights","find","item","useRef","scrollToHighlightFromHash","slice","window","addEventListener","removeEventListener","showPdfViewer","minHeight","color","Fragment","PdfLoader","beforeLoad","Spinner","pdfDocument","PdfHighlighter","enableAreaSelection","altKey","onScrollChange","scrollRef","onSelectionFinished","content","hideTipAndSelection","transformSelection","String","Math","random","highlightTransform","index","setTip","hideTip","viewportToScaled","screenshot","Popup","popupContent","onMouseOver","onMouseOut","key","AreaHighlight","updateHighlight","highlightId","image","map","h","files","Container","TextEditor","auth","userPublicId","fileName","showTextEditor","setShowTextEditor"],"mappings":"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","file":"static/js/6.3f1a985a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 532;","// @flow\r\n\r\nimport React, { useState } from \"react\";\r\nimport processMd from './markdown'\r\nimport \"../style/Tip.css\";\r\n\r\nfunction Tip(props) {\r\n\tconst [state, setState] = useState({\r\n\t\tcompact: true,\r\n\t\ttext: '',\r\n\t\temoji: '',\r\n\t});\r\n\r\n\tconst { onConfirm, onOpen } = props;\r\n\tconst { compact, text, emoji } = state;\r\n\r\n\treturn (\r\n\t\t<div className=\"Tip\">\r\n\t\t\t{compact ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"Tip__compact\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tonOpen();\r\n\t\t\t\t\t\tsetState({ compact: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd highlight\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName=\"Tip__card\"\r\n\t\t\t\t\tonSubmit={event => {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tonConfirm({ text, emoji });\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\t\tplaceholder=\"Your comments\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\tonChange={event => setState({ text: event.target.value })}\r\n\t\t\t\t\t\t\tref={node => {\r\n\t\t\t\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\t\t\t\tnode.focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"preview\"\r\n\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprocessMd(state.text)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Save\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Tip;\r\n","import React from 'react';\n// import '../style/StickyNote.css'; // Make sure the path to your CSS file is correct\n\nfunction StickyNote({ isScrolledTo, position, comment }) {\n    // Assuming the PDF viewer container has a specific class or ID\n    const pdfViewer = document.querySelector('.pdf-viewer'); // Adjust the selector as needed\n\n    // Calculate 5% of the PDF viewer's width\n    const offset = pdfViewer ? pdfViewer.clientWidth * 0.004 : 0;\n\n    // Adjust the styling to start at 5% offset of the PDF viewer's width\n    const style = {\n        position: 'absolute',\n        left: `${offset}px`, // Start from 5% of the PDF viewer's width\n        top: `${position.boundingRect.top}px`,\n        background: 'yellow',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '10 2px 5px rgba(0,0,0,0.3)',\n        zIndex: 1000  // Ensure it appears above other elements\n    };\n\n    return (\n        <div style={style}>\n            {comment && comment.text}\n        </div>\n\n    //     <div className=\"sticky-content\">\n    //     {comment && comment.text}\n    // </div>\n\n\n    );\n}\n\nexport default StickyNote;\n","// PdfAutoScroller.js\nimport React, { useEffect } from 'react';\nimport { useSocket } from '../shared/SocketContext'; // Use the context\nimport { viewportToScaled } from '../shared/coordinates_utils'; // Import the utility function\n\n\nconst PdfAutoScroller = ({ pdfHighlighter }) => {\n    const socket = useSocket();\n\n    useEffect(() => {\n        const handleScrollTo = ({ bbox, page }) => {\n            if (pdfHighlighter.current) {\n                const highlight = {\n                    position: {\n                        boundingRect: bbox,\n                        pageNumber: page,\n                    }\n                };\n\n                pdfHighlighter.current.scrollTo(highlight);\n            }\n        };\n\n        socket.on('auto-scroller-bbox-pass', handleScrollTo);\n\n        return () => {\n            socket.off('auto-scroller-bbox-pass', handleScrollTo);\n        };\n    }, [pdfHighlighter, socket]);\n\n    return null;\n};\n\nexport default PdfAutoScroller;\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport {\n    PdfLoader,\n    PdfHighlighter,\n    Highlight,\n    Popup,\n    AreaHighlight,\n} from \"react-pdf-highlighter\";\n\nimport StickyNote from './StickyNote';\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport Spinner from \"../shared/Spinner\";\nimport Tip from \"./Tip\";\nimport processMd from \"./markdown\";\nimport { UserContext } from \"../App\";\nimport PdfAutoScroller from './PdfAutoScroller';\nimport TextEditor from \"../TextEditor\";\n\nconst getNextId = () => String(Math.random()).slice(2);\n\nconst parseIdFromHash = () =>\n    document.location.hash.slice(\"#pdf-highlight-\".length);\n\nconst resetHash = () => {\n    document.location.hash = \"\";\n};\n\nconst HighlightPopup = ({ comment }) =>\n    comment.text ? (\n        <div className=\"Highlight__popup\">\n            {comment.emoji} {processMd(comment.text)}\n        </div>\n    ) : null;\n\nconst Wrapper = styled.div`\n  .Highlight__part {\n    background: ${props => props.highlightColors.default || \"#000000\"};\n  }\n  .AreaHighlight {\n    border: 3px solid ${props => props.highlightColors.default || \"#000000\"};\n  }\n  .Highlight__part.OTHER {\n    background: rgb(93, 115, 240);\n  }\n  .Highlight__part.LEGALTEST {\n    background: ${props => props.highlightColors.legalTest};\n  }\n  .Highlight__part.ISSUE {\n    background: ${props => props.highlightColors.issue};\n  }\n  .Highlight__part.CONCLUSION {\n    background: ${props => props.highlightColors.conclusion};\n  }\n`;\n\nfunction PdfViewer() {\n    const { state, dispatch } = useContext(UserContext);\n    const [currFile, setCurrFile] = useState(null);\n    const [highlights, setHighlights] = useState([]);\n\n    useEffect(() => {\n        if (highlights.length > 0) {\n            dispatch({\n                type: \"SET_FILE_HIGHLIGHTS\",\n                payload: {\n                    highlights,\n                    name: state.currentFile?.name,\n                },\n            });\n        }\n    }, [highlights]);\n\n    useEffect(() => {\n        if (state.currentFile) {\n            if (state.currentFile.url) {\n                setCurrFile(state.currentFile.url);\n            } else if (state.currentFile instanceof Blob) {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    setCurrFile(reader.result);\n                };\n                reader.readAsDataURL(state.currentFile);\n            } else {\n                console.error('Current file is not a Blob');\n            }\n        } else {\n            setCurrFile(null);\n        }\n    }, [state.currentFile]);\n\n    useEffect(() => {\n        if (state.currentFile) {\n            const fileHighlights = state.fileHighlights.find(item => item.name === state.currentFile.name);\n            setHighlights(fileHighlights ? fileHighlights.highlights : []);\n        } else {\n            setHighlights([]);\n        }\n    }, [state.currentFile, state.fileHighlights]);\n\n    const pdfHighlighter = useRef(null);\n    const getHighlightById = (id) => highlights.find((highlight) => highlight.id === id);\n\n    const scrollToHighlightFromHash = () => {\n        const highlight = getHighlightById(parseIdFromHash());\n        if (highlight) {\n            pdfHighlighter.current.scrollTo(highlight);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"hashchange\", scrollToHighlightFromHash, false);\n        return () => window.removeEventListener(\"hashchange\", scrollToHighlightFromHash);\n    }, [highlights]);\n\n    const addHighlight = (highlight) => {\n        setHighlights([{ ...highlight, id: getNextId() }, ...highlights]);\n    };\n\n    const updateHighlight = (highlightId, position, content) => {\n        setHighlights(highlights.map((h) =>\n            h.id === highlightId\n                ? { ...h, position: { ...h.position, ...position }, content: { ...h.content, ...content } }\n                : h\n        ));\n    };\n\n    return (\n        <Wrapper highlightColors={state.highlightColors}>\n            {state.showPdfViewer ? (\n                <div className=\"d-flex\">\n                    <div style={{ minHeight: \"calc(100vh - 70px)\", color: \"#000000\", width: \"80%\" }} className=\"pdf-viewer\">\n                        {currFile ? (\n                            <>\n                                <PdfLoader className=\"my-pdf-viewer\" url={currFile} beforeLoad={<Spinner />}>\n                                    {(pdfDocument) => (\n                                        <PdfHighlighter\n                                            ref={pdfHighlighter}\n                                            pdfDocument={pdfDocument}\n                                            enableAreaSelection={(event) => event.altKey}\n                                            onScrollChange={resetHash}\n                                            scrollRef={(scrollTo) => { }}\n                                            onSelectionFinished={(\n                                                position,\n                                                content,\n                                                hideTipAndSelection,\n                                                transformSelection\n                                            ) => (\n                                                <Tip\n                                                    onOpen={transformSelection}\n                                                    onConfirm={(comment) => {\n                                                        addHighlight({ content, position, comment });\n                                                        hideTipAndSelection();\n                                                    }}\n                                                />\n                                            )}\n                                            highlightTransform={(\n                                                highlight,\n                                                index,\n                                                setTip,\n                                                hideTip,\n                                                viewportToScaled,\n                                                screenshot,\n                                                isScrolledTo\n                                            ) => (\n                                                <Popup\n                                                    popupContent={<HighlightPopup {...highlight} />}\n                                                    onMouseOver={(popupContent) =>\n                                                        setTip(highlight, (highlight) => popupContent)\n                                                    }\n                                                    onMouseOut={hideTip}\n                                                    key={index}\n                                                >\n                                                    <StickyNote\n                                                        isScrolledTo={isScrolledTo}\n                                                        position={highlight.position}\n                                                        comment={highlight.comment}\n                                                    />\n                                                    <AreaHighlight\n                                                        highlight={highlight}\n                                                        onChange={(boundingRect) => {\n                                                            updateHighlight(\n                                                                highlight.id,\n                                                                { boundingRect: viewportToScaled(boundingRect) },\n                                                                { image: screenshot(boundingRect) }\n                                                            );\n                                                        }}\n                                                    />\n                                                </Popup>\n                                            )}\n                                            highlights={highlights}\n                                        />\n                                    )}\n                                </PdfLoader>\n                            </>\n                        ) : state.files && state.files.length === 0 ? (\n                            <Container>\n                                <div className=\"h3 text-center mt-5\">No File Selected!!</div>\n                            </Container>\n                        ) : (\n                            <Spinner />\n                        )}\n                    </div>\n                    <PdfAutoScroller pdfHighlighter={pdfHighlighter} />\n                </div>\n            ) : (\n                <TextEditor \n                    id={state.auth?.userPublicId}\n                    fileName={state.currentFile?.name}\n                    showTextEditor={true}\n                    setShowTextEditor={(value) => dispatch({ type: value ? 'SHOW_TEXT_EDITOR' : 'SHOW_PDF_VIEWER' })}\n                />\n            )}\n        </Wrapper>\n    );\n}\n\nexport default PdfViewer;\n"],"sourceRoot":""}