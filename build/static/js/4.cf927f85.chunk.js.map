{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","Dashboard/Tip.js","Dashboard/graphFunc.js","Dashboard/PdfViewer.js","Dashboard/Index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Tip","props","useState","compact","text","emoji","state","setState","onConfirm","onOpen","className","onClick","onSubmit","event","preventDefault","width","placeholder","autoFocus","value","onChange","target","ref","node","focus","processMd","type","GraphFunc","graphData","setGraphData","errorText","setErrorText","useEffect","a","axios","get","then","response","data","catch","error","undefined","statusText","fetchData","myConfig","nodeHighlightBehavior","highlightDegree","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","focusZoom","focusAnimationDuration","alphaTarget","gravity","linkLength","linkStrength","color","size","highlightStrokeColor","highlightColor","config","onClickGraph","onClickNode","nodeId","onDoubleClickNode","onRightClickNode","onClickLink","source","onRightClickLink","onMouseOverNode","onMouseOutNode","onMouseOverLink","onMouseOutLink","onNodePositionChange","x","y","onZoomChange","previousZoom","newZoom","resetHash","document","location","hash","HighlightPopup","comment","PdfViewer","useContext","UserContext","dispatch","currFile","setCurrFile","highlights","setHighlights","console","log","length","payload","name","currentFile","url","setTimeout","BASE_URL_DEV","reader","FileReader","file","onload","result","readAsDataURL","highlightUpdated","fileHighlights","forEach","item","pdfHighlighter","useRef","scrollToHighlightFromHash","highlight","slice","find","current","scrollTo","window","addEventListener","removeEventListener","style","minHeight","paddingLeft","beforeLoad","Spinner","pdfDocument","enableAreaSelection","altKey","onScrollChange","scrollRef","onSelectionFinished","position","content","hideTipAndSelection","transformSelection","String","Math","random","highlightTransform","index","setTip","hideTip","viewportToScaled","screenshot","isScrolledTo","component","Boolean","image","boundingRect","highlightId","map","h","popupContent","onMouseOver","onMouseOut","key","children","files","Container","Dashboard","showFileViewer","showDashboardView","showHighlight","PdfUrl","setPdfUrl","result_json","pdf_name","Object","addHighlight","DashboardView"],"mappings":"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","file":"static/js/4.cf927f85.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 396;","// @flow\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport processMd from './markdown'\r\nimport \"../style/Tip.css\";\r\n\r\n// type State = {\r\n//   compact: boolean,\r\n//   text: string,\r\n//   emoji: string\r\n// };\r\n\r\ntype Props = {\r\n  onConfirm: (comment: { text: string, emoji: string }) => void,\r\n  onOpen: () => void,\r\n  onUpdate?: () => void\r\n};\r\n\r\nfunction Tip(props: Props) {\r\n\r\n  const [state, setState] = useState({\r\n    compact: true,\r\n    text: '',\r\n    emoji: '',\r\n  });\r\n\r\n  // // for TipContainer\r\n  // componentDidUpdate(nextProps: Props, nextState: State) {\r\n  //   const { onUpdate } = props;\r\n\r\n  //   if (onUpdate && state.compact !== nextState.compact) {\r\n  //     onUpdate();\r\n  //   }\r\n  // }\r\n\r\n  const { onConfirm, onOpen } = props;\r\n  const { compact, text, emoji } = state;\r\n\r\n  return (\r\n    <div className=\"Tip\">\r\n      {compact ? (\r\n        <div\r\n          className=\"Tip__compact\"\r\n          onClick={() => {\r\n            onOpen();\r\n            setState({ compact: false });\r\n          }}\r\n        >\r\n          Add highlight\r\n        </div>\r\n      ) : (\r\n        <form\r\n          className=\"Tip__card\"\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            onConfirm({ text, emoji });\r\n          }}\r\n        >\r\n          <div>\r\n            <textarea\r\n              width=\"100%\"\r\n              placeholder=\"Your comment\"\r\n              autoFocus\r\n              value={text}\r\n              onChange={event => setState({ text: event.target.value })}\r\n              ref={node => {\r\n                if (node) {\r\n                  node.focus();\r\n                }\r\n              }}\r\n            />\r\n            {/* <div>\r\n              {[\"💩\", \"😱\", \"😍\", \"🔥\", \"😳\"].map(_emoji => (\r\n                <label key={_emoji}>\r\n                  <input\r\n                    checked={emoji === _emoji}\r\n                    type=\"radio\"\r\n                    name=\"emoji\"\r\n                    value={_emoji}\r\n                    onChange={event =>\r\n                      setState({ emoji: event.target.value })\r\n                    }\r\n                  />\r\n                  {_emoji}\r\n                </label>\r\n              ))}\r\n            </div> */}\r\n          </div>\r\n          <div \r\n            id=\"preview\"\r\n            width='100%'\r\n            >\r\n            {\r\n              processMd(state.text)\r\n            }\r\n          </div>\r\n          <div>\r\n            <input type=\"submit\" value=\"Save\" />\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tip;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Graph } from \"react-d3-graph\";\r\nimport axios from \"axios\";\r\nimport { Fragment } from \"react\";\r\n\r\nfunction GraphFunc(props) {\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(\"http://127.0.0.1:5000/api/v1/graph\")\r\n        .then(function (response) {\r\n          setGraphData(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          setErrorText(error && error.response !== undefined && error.response.statusText);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const myConfig = {\r\n    nodeHighlightBehavior: false,\r\n    highlightDegree: 1,\r\n    highlightOpacity: 1,\r\n    linkHighlightBehavior: false,\r\n    maxZoom: 5,\r\n    minZoom: 0.1,\r\n    focusZoom: 1,\r\n    focusAnimationDuration: 0.75,\r\n    nodeHighlightBehavior: false,\r\n    panAndZoom: false,\r\n    staticGraph: false,\r\n    d3: {\r\n      alphaTarget: 0.05,\r\n      gravity: -100,\r\n      linkLength: 100,\r\n      linkStrength: 1\r\n    },\r\n    node: {\r\n      color: \"lightgreen\",\r\n      size: 120,\r\n      highlightStrokeColor: \"blue\",\r\n    },\r\n    link: {\r\n      highlightColor: \"lightblue\",\r\n    },\r\n  };\r\n\r\n  const onClickGraph = function (event) {\r\n    //  window.alert('Clicked the graph background');\r\n  };\r\n\r\n  const onClickNode = function (nodeId, node) {\r\n    //  window.alert('Clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n  };\r\n\r\n  const onDoubleClickNode = function (nodeId, node) {\r\n    //  window.alert('Double clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n  };\r\n\r\n  const onRightClickNode = function (event, nodeId, node) {\r\n    //  window.alert('Right clicked node ${nodeId} in position (${node.x}, ${node.y})');\r\n  };\r\n\r\n  const onMouseOverNode = function (nodeId, node) {\r\n    //  window.alert(`Mouse over node ${nodeId} in position (${node.x}, ${node.y})`);\r\n  };\r\n\r\n  const onMouseOutNode = function (nodeId, node) {\r\n    //  window.alert(`Mouse out node ${nodeId} in position (${node.x}, ${node.y})`);\r\n  };\r\n\r\n  const onClickLink = function (source, target) {\r\n    //  window.alert(`Clicked link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onRightClickLink = function (event, source, target) {\r\n    //  window.alert('Right clicked link between ${source} and ${target}');\r\n  };\r\n\r\n  const onMouseOverLink = function (source, target) {\r\n    //  window.alert(`Mouse over in link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onMouseOutLink = function (source, target) {\r\n    //  window.alert(`Mouse out link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onNodePositionChange = function (nodeId, x, y) {\r\n    //  window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\r\n  };\r\n\r\n  const onZoomChange = function (previousZoom, newZoom) {\r\n    //  window.alert(`Graph is now zoomed at ${newZoom} from ${previousZoom}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {errorText === \"\" && (\r\n        <Graph\r\n          id=\"graph-id\"\r\n          data={graphData}\r\n          config={myConfig}\r\n          onClickGraph={onClickGraph}\r\n          onClickNode={onClickNode}\r\n          onDoubleClickNode={onDoubleClickNode}\r\n          onRightClickNode={onRightClickNode}\r\n          onClickLink={onClickLink}\r\n          onRightClickLink={onRightClickLink}\r\n          onMouseOverNode={onMouseOverNode}\r\n          onMouseOutNode={onMouseOutNode}\r\n          onMouseOverLink={onMouseOverLink}\r\n          onMouseOutLink={onMouseOutLink}\r\n          onNodePositionChange={onNodePositionChange}\r\n          onZoomChange={onZoomChange}\r\n        />\r\n      )}\r\n      {errorText !== \"\" && <div className=\"error_text\"><p>{errorText}</p></div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default GraphFunc;\r\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport {\n  PdfLoader,\n  PdfHighlighter,\n  Highlight,\n  Popup,\n  AreaHighlight,\n} from \"react-pdf-highlighter\";\nimport { Container } from \"react-bootstrap\";\nimport axios from 'axios';\n\nimport Spinner from \"../shared/Spinner\";\nimport Tip from \"./Tip\";\nimport processMd from \"./markdown\";\nimport { UserContext } from \"../App\";\nimport { BASE_URL_DEV } from \"../utils\";\n\nconst getNextId = () => String(Math.random()).slice(2);\n\nconst parseIdFromHash = () =>\n  document.location.hash.slice(\"#pdf-highlight-\".length);\n\nconst resetHash = () => {\n  document.location.hash = \"\";\n};\n\nconst HighlightPopup = ({ comment }) =>\n  comment.text ? (\n    <div className=\"Highlight__popup\">\n      {comment.emoji} {processMd(comment.text)}\n    </div>\n  ) : null;\n\nfunction PdfViewer() {\n  const { state, dispatch } = useContext(UserContext);\n  const [currFile, setCurrFile] = useState();\n  const [highlights, setHighlights] = useState([]);\n\n  useEffect(() => {\n    console.log(highlights);\n    if(highlights && highlights.length > 0) {\n      dispatch({ type: \"SET_FILE_HIGHLIGHTS\", payload: {\n        highlights,\n        name: state.currentFile && state.currentFile.name,\n      }});\n    }\n  },[highlights]);\n\n  useEffect(() => {\n    setCurrFile(null);\n    console.log(state);\n    if(state.currentFile && state.currentFile.url) {\n      setTimeout(() => setCurrFile(`${BASE_URL_DEV}/${state.currentFile.url}`), 100);\n    } else {\n      let reader = new FileReader();\n      let file = state.currentFile;\n      reader.onload = () => {\n        console.log(file.name);\n        setCurrFile(reader.result);\n      };\n\n      if (file) reader.readAsDataURL(file);\n    }\n  }, [state.currentFile]);\n  \n  useEffect(() => {\n    if (state.currentFile) {\n      console.log(state);\n      let highlightUpdated = false;\n      state.fileHighlights.forEach((item) => {\n        if (item.name === state.currentFile.name) {\n          setHighlights(item.highlights);\n          highlightUpdated = true;\n        }\n      });\n      if (!highlightUpdated) setHighlights([]);\n    }\n  }, [state.currentFile, state.fileHighlights]);\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     if(!state.currentFile) return null;\n  //     const result_json = await axios(`${BASE_URL_DEV}/api/v1/json?filename=${state.currentFile.name}`);\n  //     const pdfHighlights =\n  //       (state.currentFile && result_json.data[state.currentFile.name]) || [];\n  //     setHighlights(pdfHighlights);\n  //   }\n  //   fetchData();\n  // }, [state.currentFile]);\n\n  const pdfHighlighter = useRef(null);\n  const getHighlightById = (id) =>\n    highlights.find((highlight) => highlight.id === id);\n  const scrollToHighlightFromHash = () => {\n    const highlight = getHighlightById(parseIdFromHash());\n    console.log(highlight);\n    if (highlight) {\n      pdfHighlighter.current.scrollTo(highlight);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"hashchange\", scrollToHighlightFromHash, false);\n\n    return () =>\n      window.removeEventListener(\"hashchange\", scrollToHighlightFromHash);\n  });\n\n  function addHighlight(highlight) {\n    console.log(highlight);\n    setHighlights([{ ...highlight, id: getNextId() }, ...highlights]);\n  }\n\n  const deleteHighlight = (index) => {\n    const currHighlights = [...highlights];\n    const updatedHighlights = currHighlights.filter((highlight, idx) => {\n      if (index !== idx) {\n        return highlight;\n      }\n    });\n    setHighlights([...updatedHighlights]);\n  };\n\n  function updateHighlight(highlightId, position, content) {\n    setHighlights(highlights.map((h) => (h.id === highlightId ? {\n        ...h,\n        position: { ...h.position, ...position },\n        content: { ...h.content, ...content },\n      } : h)));\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: \"calc(100vh - 70px)\",\n        paddingLeft: '1rem',\n        color: \"#000000\",\n        width: '100%',\n      }}\n      className=\"pdf-viewer p-2\"\n    >\n      {currFile ? (\n        <PdfLoader\n          className=\"my-pdf-viewer\"\n          url={currFile}\n          beforeLoad={<Spinner />}\n        >\n          {(pdfDocument) => (\n            <PdfHighlighter\n              ref={pdfHighlighter}\n              pdfDocument={pdfDocument}\n              enableAreaSelection={(event) => event.altKey}\n              onScrollChange={resetHash}\n              scrollRef={(scrollTo) => {}}\n              onSelectionFinished={(\n                position,\n                content,\n                hideTipAndSelection,\n                transformSelection\n              ) => (\n                <Tip\n                  onOpen={transformSelection}\n                  onConfirm={(comment) => {\n                    addHighlight({ content, position, comment });\n\n                    hideTipAndSelection();\n                  }}\n                />\n              )}\n              highlightTransform={(\n                highlight,\n                index,\n                setTip,\n                hideTip,\n                viewportToScaled,\n                screenshot,\n                isScrolledTo\n              ) => {\n                const isTextHighlight = !Boolean(\n                  highlight.content && highlight.content.image\n                );\n\n                const component = isTextHighlight ? (\n                  <Highlight\n                    isScrolledTo={isScrolledTo}\n                    position={highlight.position}\n                    comment={highlight.comment}\n                  />\n                ) : (\n                  <AreaHighlight\n                    highlight={highlight}\n                    onChange={(boundingRect) => {\n                      updateHighlight(\n                        highlight.id,\n                        {\n                          boundingRect: viewportToScaled(boundingRect),\n                        },\n                        { image: screenshot(boundingRect) }\n                      );\n                    }}\n                  />\n                );\n\n                return (\n                  <Popup\n                    popupContent={<HighlightPopup {...highlight} />}\n                    onMouseOver={(popupContent) =>\n                      setTip(highlight, (highlight) => popupContent)\n                    }\n                    onMouseOut={hideTip}\n                    key={index}\n                    children={component}\n                  />\n                );\n              }}\n              highlights={highlights}\n            />\n          )}\n        </PdfLoader>\n      ) : state.files && state.files.length === 0 ? (\n        <Container>\n          <div className=\"h3 text-center mt-5\">No File Selected!!</div>\n        </Container>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n}\n\nexport default PdfViewer;\n","// @flow\r\n\r\n// Based on https://github.com/agentcooper/react-pdf-highlighter/tree/master/packages/example\r\n// rewritten with hooks\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  PdfLoader,\r\n  PdfHighlighter,\r\n  Highlight,\r\n  Popup,\r\n  AreaHighlight,\r\n} from \"react-pdf-highlighter\";\r\n\r\n//import testHighlights from \"./test-highlights\";\r\n\r\nimport Spinner from \"../shared/Spinner\";\r\nimport Tip from \"./Tip\";\r\nimport processMd from \"./markdown\";\r\n\r\n// import type {\r\n//   T_Highlight,\r\n//   T_NewHighlight,\r\n// } from \"react-pdf-highlighter/src/types\";\r\nimport { Fragment } from \"react\";\r\nimport GraphFunc from \"./graphFunc\";\r\nimport PdfViewer from \"./PdfViewer\";\r\nimport DashboardView from \"./DashboardView\";\r\n\r\nconst getNextId = () => String(Math.random()).slice(2);\r\n\r\nconst parseIdFromHash = () =>\r\n  document.location.hash.slice(\"#highlight-\".length);\r\n\r\nconst resetHash = () => {\r\n  document.location.hash = \"\";\r\n};\r\n\r\nconst HighlightPopup = ({ comment }) =>\r\n  comment.text ? (\r\n    <div className=\"Highlight__popup\">\r\n      {comment.emoji} {processMd(comment.text)}\r\n    </div>\r\n  ) : null;\r\n\r\n//const DEFAULT_URL = \"https://arxiv.org/pdf/1708.08021.pdf\";\r\n\r\n//const searchParams = new URLSearchParams(document.location.search);\r\n//const url = searchParams.get(\"url\") || DEFAULT_URL;\r\n\r\nfunction Dashboard({ showFileViewer, showDashboardView, showHighlight }) {\r\n  const [graphData, setGraphData] = useState([]);\r\n  //const [state, setState] = useState({ highlights: testHighlights[url] ? [...testHighlights[url]] : [] })\r\n  const [state, setState] = useState({ highlights: [] });\r\n  const [PdfUrl, setPdfUrl] = useState({ url: \"\" });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result_json = await axios(\"http://127.0.0.1:5000/api/v1/json\");\r\n      const pdf_name = Object.keys(result_json.data)[0];\r\n      setPdfUrl({ url: `http://127.0.0.1:5000/api/v1/pdf/${pdf_name}` });\r\n      setState({ highlights: result_json.data[pdf_name] });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  // not using the State type!\r\n\r\n  // Jumping to highlight\r\n\r\n  // This function was defined and changed later! I'm not sure why it was used instead of a ref\r\n  // let scrollViewerTo = (highlight: any) => { };\r\n  // https://stackoverflow.com/questions/24841855/how-to-access-component-methods-from-outside-in-reactjs\r\n\r\n  const pdfHighlighter = useRef(null);\r\n  const getHighlightById = (id) =>\r\n    state.highlights.find((highlight) => highlight.id === id);\r\n  const scrollToHighlightFromHash = () => {\r\n    const highlight = getHighlightById(parseIdFromHash());\r\n    if (highlight) {\r\n      pdfHighlighter.current.scrollTo(highlight);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"hashchange\", scrollToHighlightFromHash, false);\r\n\r\n    return () =>\r\n      window.removeEventListener(\"hashchange\", scrollToHighlightFromHash);\r\n  });\r\n\r\n  // State setting functions\r\n\r\n  const resetHighlights = () => {\r\n    setState({\r\n      highlights: [],\r\n    });\r\n  };\r\n\r\n  function addHighlight(highlight) {\r\n    const { highlights } = state;\r\n\r\n    setState({\r\n      highlights: [{ ...highlight, id: getNextId() }, ...highlights],\r\n    });\r\n  }\r\n\r\n  const deleteHighlight = (index) => {\r\n    const highlights = state.highlights.filter((highlight, idx) => {\r\n      if (index !== idx) {\r\n        return highlight;\r\n      }\r\n    });\r\n    setState({ highlights });\r\n  };\r\n\r\n  function updateHighlight(\r\n    highlightId,\r\n    position,\r\n    content\r\n  ) {\r\n    setState({\r\n      highlights: state.highlights.map((h) => {\r\n        return h.id === highlightId\r\n          ? {\r\n              ...h,\r\n              position: { ...h.position, ...position },\r\n              content: { ...h.content, ...content },\r\n            }\r\n          : h;\r\n      }),\r\n    });\r\n  }\r\n\r\n  const { highlights } = state;\r\n  const { url } = PdfUrl;\r\n\r\n  return (\r\n    <Fragment>\r\n      {showHighlight && (\r\n        <>\r\n          <GraphFunc />\r\n          {url ? (\r\n            <PdfLoader url={url} beforeLoad={<Spinner />}>\r\n              {(pdfDocument) => (\r\n                <PdfHighlighter\r\n                  ref={pdfHighlighter}\r\n                  pdfDocument={pdfDocument}\r\n                  enableAreaSelection={(event) => event.altKey}\r\n                  onScrollChange={resetHash}\r\n                  scrollRef={(scrollTo) => {}}\r\n                  onSelectionFinished={(\r\n                    position,\r\n                    content,\r\n                    hideTipAndSelection,\r\n                    transformSelection\r\n                  ) => (\r\n                    <Tip\r\n                      onOpen={transformSelection}\r\n                      onConfirm={(comment) => {\r\n                        addHighlight({ content, position, comment });\r\n\r\n                        hideTipAndSelection();\r\n                      }}\r\n                    />\r\n                  )}\r\n                  highlightTransform={(\r\n                    highlight,\r\n                    index,\r\n                    setTip,\r\n                    hideTip,\r\n                    viewportToScaled,\r\n                    screenshot,\r\n                    isScrolledTo\r\n                  ) => {\r\n                    const isTextHighlight = !Boolean(\r\n                      highlight.content && highlight.content.image\r\n                    );\r\n\r\n                    const component = isTextHighlight ? (\r\n                      <Highlight\r\n                        isScrolledTo={isScrolledTo}\r\n                        position={highlight.position}\r\n                        comment={highlight.comment}\r\n                      />\r\n                    ) : (\r\n                      <AreaHighlight\r\n                        highlight={highlight}\r\n                        onChange={(boundingRect) => {\r\n                          updateHighlight(\r\n                            highlight.id,\r\n                            {\r\n                              boundingRect: viewportToScaled(boundingRect),\r\n                            },\r\n                            { image: screenshot(boundingRect) }\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n\r\n                    return (\r\n                      <Popup\r\n                        popupContent={<HighlightPopup {...highlight} />}\r\n                        onMouseOver={(popupContent) =>\r\n                          setTip(highlight, (highlight) => popupContent)\r\n                        }\r\n                        onMouseOut={hideTip}\r\n                        key={index}\r\n                        children={component}\r\n                      />\r\n                    );\r\n                  }}\r\n                  highlights={highlights}\r\n                />\r\n              )}\r\n            </PdfLoader>\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </>\r\n      )}\r\n      {showFileViewer && <PdfViewer />}\r\n      {showDashboardView && <DashboardView />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}